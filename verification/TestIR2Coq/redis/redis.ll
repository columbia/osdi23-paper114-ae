; ModuleID = 'redis.c'
source_filename = "redis.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.redisServer = type { i64, i32, i32, %struct.redisDb*, i64, i64, %struct.list*, %struct.list*, %struct.list*, [256 x i8], %struct.aeEventLoop*, i32, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i8*, i32, i32, i8*, i8*, %struct.saveparam*, i32, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i8*, i8*, i32, %struct.redisClient*, i32, i32, i64, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i64, i64, i64, %struct._IO_FILE*, i32, i64, i64, i8*, i64, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_attr_t, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dict*, %struct.list*, %struct._IO_FILE* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32 }
%struct.aeEventLoop = type { i32, i64, [10240 x %struct.aeFileEvent], [10240 x %struct.aeFiredEvent], %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent* }
%struct.saveparam = type { i64, i32 }
%struct.redisClient = type { i32, %struct.redisDb*, i32, i8*, %struct.redisObject**, %struct.redisObject**, i32, i32, i32, i32, %struct.list*, i32, i64, i32, i32, i32, i32, i32, i64, i64, %struct.multiState, %struct.redisObject**, i32, i64, %struct.list*, %struct.dict*, %struct.list* }
%struct.multiState = type { %struct.multiCmd*, i32 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.redisCommand = type { i8*, void (%struct.redisClient*)*, i32, i32, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)*, i32, i32, i32 }
%struct.redisObject = type { i8*, i8, i8, i8, i8, i32, %struct.redisObjectVM }
%struct.redisObjectVM = type { i64, i64, i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i32, i32 }
%struct.dictType = type { i32 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, i8*, %struct.dictEntry* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i32 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10000 x %struct.redisObject*] }
%struct.redisFunctionSym = type { i8*, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.zskiplist = type { %struct.zskiplistNode*, %struct.zskiplistNode*, i64, i32 }
%struct.zskiplistNode = type { %struct.zskiplistNode**, %struct.zskiplistNode*, i32*, double, %struct.redisObject* }
%struct.dictIterator = type { %struct.dict*, i32, i32, %struct.dictEntry*, %struct.dictEntry* }
%struct.pubsubPattern = type { %struct.redisClient*, %struct.redisObject* }
%struct.iovec = type { i8*, i64 }
%struct.iojob = type { i32, %struct.redisDb*, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i64 }
%struct.__sigset_t = type { [16 x i64] }
%struct.zset = type { %struct.dict*, %struct.zskiplist* }
%struct.timeval = type { i64, i64 }
%struct._redisSortOperation = type { i32, %struct.redisObject* }
%struct._redisSortObject = type { %struct.redisObject*, %union.anon }
%union.anon = type { double }
%struct.zsetopsrc = type { %struct.dict*, double }
%struct.hashIterator = type { i32, i8*, i8*, i8*, i32, i32, %struct.dictIterator*, %struct.dictEntry* }
%struct.anon = type { i64, i64, [1025 x i8] }
%struct.SHA1_CTX = type { [5 x i32], [2 x i32], [64 x i8] }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon.0, %union.anon.1, %union.anon.2, %union.anon.3, %union.anon.4, %union.anon.5, %union.anon.6, %union.anon.7, %union.anon.8, %union.anon.9, %union.anon.10, %union.anon.11, %union.anon.12, %union.anon.13 }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.anon.3 = type { i64 }
%union.anon.4 = type { i64 }
%union.anon.5 = type { i64 }
%union.anon.6 = type { i64 }
%union.anon.7 = type { i64 }
%union.anon.8 = type { i64 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { i64 }
%union.anon.11 = type { i64 }
%union.anon.12 = type { i64 }
%union.anon.13 = type { i64 }
%struct.sigaction = type { %union.anon.14, %struct.__sigset_t, i32, void ()* }
%union.anon.14 = type { void (i32)* }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.15 }
%union.anon.15 = type { %struct.anon.19, [80 x i8] }
%struct.anon.19 = type { i32, i32, i32, i64, i64 }
%struct.flock = type { i16, i16, i64, i64, i32 }
%union.pthread_mutexattr_t = type { i32 }
%struct.ucontext_t = type { i64, %struct.ucontext_t*, %struct.stack_t, %struct.mcontext_t, %struct.__sigset_t, %struct._libc_fpstate, [4 x i64] }
%struct.stack_t = type { i8*, i32, i64 }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }

@.str = private unnamed_addr constant [42 x i8] c"Background saving terminated with success\00", align 1
@server = internal global %struct.redisServer zeroinitializer, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [24 x i8] c"Background saving error\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Background saving terminated by signal %d\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Background append only file rewriting terminated with success\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"temp-rewriteaof-bg-%d.aof\00", align 1
@.str.5 = private unnamed_addr constant [69 x i8] c"Not able to open the temp append only file produced by the child: %s\00", align 1
@.str.6 = private unnamed_addr constant [103 x i8] c"Error or short write trying to flush the parent diff of the append log file in the child temp file: %s\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"Parent diff flushed into the new append log file with success (%lu bytes)\00", align 1
@.str.8 = private unnamed_addr constant [63 x i8] c"Can't rename the temp append only file into the stable one: %s\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"Append only file successfully rewritten.\00", align 1
@.str.10 = private unnamed_addr constant [58 x i8] c"The new append only file was selected for future appends.\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"Background append only file rewriting error\00", align 1
@.str.12 = private unnamed_addr constant [62 x i8] c"Background append only file rewriting terminated by signal %d\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.14 = private unnamed_addr constant [60 x i8] c"Fatal error: can't open the append log file for reading: %s\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"Unknown command '%s' reading the append only file\00", align 1
@.str.16 = private unnamed_addr constant [52 x i8] c"Unexpected end of file reading the append only file\00", align 1
@.str.17 = private unnamed_addr constant [53 x i8] c"Unrecoverable error reading the append only file: %s\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"Bad file format reading the append only file\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"/proc/sys/vm/overcommit_memory\00", align 1
@.str.20 = private unnamed_addr constant [253 x i8] c"WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.24 = private unnamed_addr constant [134 x i8] c"Warning: no config file specified, using the default config. In order to specify a config file use 'redis-server /path/to/redis.conf'\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"Server started, Redis version 2.0.0\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"DB loaded from append only file: %ld seconds\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"DB loaded from disk: %ld seconds\00", align 1
@.str.28 = private unnamed_addr constant [57 x i8] c"The server is now ready to accept connections on port %d\00", align 1
@vm = dso_local local_unnamed_addr global %struct.redisObjectVM zeroinitializer, align 8, !dbg !360
@shared = dso_local local_unnamed_addr global %struct.sharedObjectsStruct zeroinitializer, align 8, !dbg !362
@.str.29 = private unnamed_addr constant [5 x i8] c".-*#\00", align 1
@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.30 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"%d %b %H:%M:%S\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"[%d] %s %c \00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"temp-%d.rdb\00", align 1
@.str.35 = private unnamed_addr constant [44 x i8] c"SYNC failed. BGSAVE child returned an error\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"SYNC failed. Can't open/stat DB after BGSAVE: %s\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"SYNC failed. BGSAVE failed\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"ln != NULL\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"redis.c\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"server.vm_enabled\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"c->blockingkeys != NULL\00", align 1
@__PRETTY_FUNCTION__.unblockClientWaitingData = private unnamed_addr constant [45 x i8] c"void unblockClientWaitingData(redisClient *)\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"de != NULL\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"Client protocol error\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"-ERR multi bulk protocol error\0D\0A\00", align 1
@.str.46 = private unnamed_addr constant [32 x i8] c"-ERR invalid bulk write count\0D\0A\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"-ERR unknown command '%s'\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [50 x i8] c"-ERR wrong number of arguments for '%s' command\0D\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c"-ERR operation not permitted\0D\0A\00", align 1
@.str.51 = private unnamed_addr constant [58 x i8] c"-ERR command not allowed when used memory > 'maxmemory'\0D\0A\00", align 1
@.str.52 = private unnamed_addr constant [73 x i8] c"-ERR only (P)SUBSCRIBE / (P)UNSUBSCRIBE / QUIT allowed in this context\0D\0A\00", align 1
@.str.53 = private unnamed_addr constant [24 x i8] c"-ERR invalid password\0D\0A\00", align 1
@__PRETTY_FUNCTION__.pubsubUnsubscribeChannel = private unnamed_addr constant [57 x i8] c"int pubsubUnsubscribeChannel(redisClient *, robj *, int)\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"\22Unknown encoding type\22\00", align 1
@.str.55 = private unnamed_addr constant [58 x i8] c"!!! Software Failure. Press left mouse button to continue\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Guru Meditation: %s #%s:%d\00", align 1
@.str.57 = private unnamed_addr constant [52 x i8] c"(forcing SIGSEGV in order to print the stack trace)\00", align 1
@.str.58 = private unnamed_addr constant [26 x i8] c"-ERR EXEC without MULTI\0D\0A\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"*%d\0D\0A\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"MULTI\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"multi\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"*2\0D\0A$6\0D\0ASELECT\0D\0A$%lu\0D\0A%s\0D\0A\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"SET\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"-ERR %s\0D\0A\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"-ERR value is not an integer\0D\0A\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"o->type == REDIS_STRING\00", align 1
@.str.69 = private unnamed_addr constant [26 x i8] c"\22Unknown string encoding\22\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"EXPIREAT\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.72 = private unnamed_addr constant [36 x i8] c"-ERR invalid expire time in SETEX\0D\0A\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"$%lu\0D\0A\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"select %d\0D\0A\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"-ERR DISCARD without MULTI\0D\0A\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"Error writing to client: %s\00", align 1
@.str.78 = private unnamed_addr constant [34 x i8] c"o->encoding == REDIS_ENCODING_RAW\00", align 1
@__PRETTY_FUNCTION__.dupStringObject = private unnamed_addr constant [30 x i8] c"robj *dupStringObject(robj *)\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"j < argc\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"retval == DICT_OK\00", align 1
@__PRETTY_FUNCTION__.waitForSwappedKey = private unnamed_addr constant [45 x i8] c"int waitForSwappedKey(redisClient *, robj *)\00", align 1
@.str.81 = private unnamed_addr constant [66 x i8] c"o->storage == REDIS_VM_LOADING || o->storage == REDIS_VM_SWAPPING\00", align 1
@__PRETTY_FUNCTION__.vmCancelThreadedIOJob = private unnamed_addr constant [35 x i8] c"void vmCancelThreadedIOJob(robj *)\00", align 1
@.str.82 = private unnamed_addr constant [45 x i8] c"*** CANCELED %p (%s) (type %d) (LIST ID %d)\0A\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"1 != 1\00", align 1
@.str.84 = private unnamed_addr constant [37 x i8] c"Mark FREE pages: %lld pages at %lld\0A\00", align 1
@.str.85 = private unnamed_addr constant [22 x i8] c"vmFreePage(page) == 0\00", align 1
@.str.86 = private unnamed_addr constant [41 x i8] c"Queued IO Job %p type %d about key '%s'\0A\00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"Unable to spawn an I/O thread: %s\00", align 1
@.str.88 = private unnamed_addr constant [34 x i8] c"Thread %ld exiting, nothing to do\00", align 1
@.str.89 = private unnamed_addr constant [54 x i8] c"Thread %ld got a new job (type %d): %p about key '%s'\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.91 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@.str.92 = private unnamed_addr constant [42 x i8] c"Thread %ld completed the job: %p (key %s)\00", align 1
@.str.93 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.94 = private unnamed_addr constant [45 x i8] c"write(server.io_ready_pipe_write,\22x\22,1) == 1\00", align 1
@__PRETTY_FUNCTION__.IOThreadEntryPoint = private unnamed_addr constant [33 x i8] c"void *IOThreadEntryPoint(void *)\00", align 1
@.str.95 = private unnamed_addr constant [67 x i8] c"Unrecoverable VM problem in vmReadObjectFromSwap(): can't seek: %s\00", align 1
@.str.96 = private unnamed_addr constant [89 x i8] c"Unrecoverable VM problem in vmReadObjectFromSwap(): can't load object from swap file: %s\00", align 1
@.str.97 = private unnamed_addr constant [27 x i8] c"LOADING OBJECT %d (at %d)\0A\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"\22Unknown object type\22\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"\22Unknown RDB encoding type\22\00", align 1
@.str.100 = private unnamed_addr constant [36 x i8] c"\22Unknown RDB integer encoding type\22\00", align 1
@setDictType = internal global %struct.dictType { i32 (i8*)* @dictEncObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* null }, align 8, !dbg !407
@zsetDictType = internal global %struct.dictType { i32 (i8*)* @dictEncObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* @dictVanillaFree }, align 8, !dbg !409
@R_NegInf = internal unnamed_addr global double 0.000000e+00, align 8, !dbg !411
@R_PosInf = internal unnamed_addr global double 0.000000e+00, align 8, !dbg !413
@R_Nan = internal unnamed_addr global double 0.000000e+00, align 8, !dbg !415
@.str.101 = private unnamed_addr constant [4 x i8] c"%lg\00", align 1
@.str.102 = private unnamed_addr constant [51 x i8] c"a->type == REDIS_STRING && b->type == REDIS_STRING\00", align 1
@hashDictType = internal global %struct.dictType { i32 (i8*)* @dictEncObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* @dictRedisObjectDestructor }, align 8, !dbg !417
@.str.103 = private unnamed_addr constant [58 x i8] c"o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT\00", align 1
@__PRETTY_FUNCTION__.convertToRealHash = private unnamed_addr constant [31 x i8] c"void convertToRealHash(robj *)\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"%.17g\00", align 1
@.str.106 = private unnamed_addr constant [61 x i8] c"Critical VM problem in vmWriteObjectOnSwap(): can't seek: %s\00", align 1
@.str.107 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"%ld.%ld \00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"(db %d) \00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"\22%ld\22\00", align 1
@.str.111 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"\\%c\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c"\\n\00", align 1
@.str.114 = private unnamed_addr constant [3 x i8] c"\\r\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c"\\t\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"\\a\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"\\b\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"\\x%02x\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"=== ASSERTION FAILED ===\00", align 1
@.str.121 = private unnamed_addr constant [27 x i8] c"==> %s:%d '%s' is not true\00", align 1
@.str.122 = private unnamed_addr constant [8 x i8] c"$%lld\0D\0A\00", align 1
@.str.123 = private unnamed_addr constant [35 x i8] c"Read error sending DB to slave: %s\00", align 1
@.str.124 = private unnamed_addr constant [14 x i8] c"premature EOF\00", align 1
@.str.125 = private unnamed_addr constant [36 x i8] c"Write error sending DB to slave: %s\00", align 1
@.str.126 = private unnamed_addr constant [37 x i8] c"Synchronization with slave succeeded\00", align 1
@.str.127 = private unnamed_addr constant [35 x i8] c"Can't save in background: fork: %s\00", align 1
@.str.128 = private unnamed_addr constant [36 x i8] c"Background saving started by pid %d\00", align 1
@.str.129 = private unnamed_addr constant [29 x i8] c"Processing I/O completed job\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c"listLength(server.io_processed) != 0\00", align 1
@__PRETTY_FUNCTION__.vmThreadedIOCompletedJob = private unnamed_addr constant [63 x i8] c"void vmThreadedIOCompletedJob(aeEventLoop *, int, void *, int)\00", align 1
@.str.131 = private unnamed_addr constant [46 x i8] c"Job %p type: %d, key at %p (%s) refcount: %d\0A\00", align 1
@.str.132 = private unnamed_addr constant [42 x i8] c"VM: object %s loaded from disk (threaded)\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"key->storage: %d\0A\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"key->name: %s\0A\00", align 1
@.str.135 = private unnamed_addr constant [19 x i8] c"key->refcount: %d\0A\00", align 1
@.str.136 = private unnamed_addr constant [9 x i8] c"val: %p\0A\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"val->type: %d\0A\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"val->ptr: %s\0A\00", align 1
@.str.139 = private unnamed_addr constant [34 x i8] c"key->storage == REDIS_VM_SWAPPING\00", align 1
@.str.140 = private unnamed_addr constant [58 x i8] c"VM: object %s swapped out at %lld (%lld pages) (threaded)\00", align 1
@.str.141 = private unnamed_addr constant [56 x i8] c"WARNING: read(2) error in vmThreadedIOCompletedJob() %s\00", align 1
@.str.142 = private unnamed_addr constant [44 x i8] c"FOUND CONTIGUOUS PAGES: %lld pages at %lld\0A\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Mark USED pages: %lld pages at %lld\0A\00", align 1
@.str.144 = private unnamed_addr constant [22 x i8] c"vmFreePage(page) == 1\00", align 1
@.str.145 = private unnamed_addr constant [35 x i8] c"Key with best swappability: %s, %f\00", align 1
@.str.146 = private unnamed_addr constant [32 x i8] c"key->storage == REDIS_VM_MEMORY\00", align 1
@__PRETTY_FUNCTION__.vmSwapObjectThreaded = private unnamed_addr constant [52 x i8] c"int vmSwapObjectThreaded(robj *, robj *, redisDb *)\00", align 1
@.str.147 = private unnamed_addr constant [19 x i8] c"key->refcount == 1\00", align 1
@__PRETTY_FUNCTION__.vmSwapObjectBlocking = private unnamed_addr constant [41 x i8] c"int vmSwapObjectBlocking(robj *, robj *)\00", align 1
@.str.148 = private unnamed_addr constant [47 x i8] c"VM: object %s swapped out at %lld (%lld pages)\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@.str.150 = private unnamed_addr constant [45 x i8] c"Can't re-open the VM swap file: %s. Exiting.\00", align 1
@.str.151 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.152 = private unnamed_addr constant [25 x i8] c"Failed saving the DB: %s\00", align 1
@.str.153 = private unnamed_addr constant [10 x i8] c"REDIS0001\00", align 1
@.str.154 = private unnamed_addr constant [55 x i8] c"Error moving temp DB file on the final destination: %s\00", align 1
@.str.155 = private unnamed_addr constant [17 x i8] c"DB saved on disk\00", align 1
@.str.156 = private unnamed_addr constant [34 x i8] c"Write error saving DB on disk: %s\00", align 1
@.str.157 = private unnamed_addr constant [69 x i8] c"key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING\00", align 1
@.str.158 = private unnamed_addr constant [31 x i8] c"VM: object %s loaded from disk\00", align 1
@.str.159 = private unnamed_addr constant [34 x i8] c"VM: object %s previewed from disk\00", align 1
@cmdTable = internal global [107 x %struct.redisCommand] [%struct.redisCommand { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), void (%struct.redisClient*)* @getCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), void (%struct.redisClient*)* @setCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), void (%struct.redisClient*)* @setnxCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.163, i32 0, i32 0), void (%struct.redisClient*)* @setexCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), void (%struct.redisClient*)* @appendCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), void (%struct.redisClient*)* @substrCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.166, i32 0, i32 0), void (%struct.redisClient*)* @delCommand, i32 -2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i32 0, i32 0), void (%struct.redisClient*)* @existsCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), void (%struct.redisClient*)* @incrCommand, i32 2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), void (%struct.redisClient*)* @decrCommand, i32 2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), void (%struct.redisClient*)* @mgetCommand, i32 -2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i32 0, i32 0), void (%struct.redisClient*)* @rpushCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.172, i32 0, i32 0), void (%struct.redisClient*)* @lpushCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), void (%struct.redisClient*)* @rpopCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), void (%struct.redisClient*)* @lpopCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), void (%struct.redisClient*)* @brpopCommand, i32 -3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i32 0, i32 0), void (%struct.redisClient*)* @blpopCommand, i32 -3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), void (%struct.redisClient*)* @llenCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i32 0, i32 0), void (%struct.redisClient*)* @lindexCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0), void (%struct.redisClient*)* @lsetCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), void (%struct.redisClient*)* @lrangeCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), void (%struct.redisClient*)* @ltrimCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), void (%struct.redisClient*)* @lremCommand, i32 4, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.183, i32 0, i32 0), void (%struct.redisClient*)* @rpoplpushcommand, i32 3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 2, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), void (%struct.redisClient*)* @saddCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), void (%struct.redisClient*)* @sremCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), void (%struct.redisClient*)* @smoveCommand, i32 4, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 2, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i32 0, i32 0), void (%struct.redisClient*)* @sismemberCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), void (%struct.redisClient*)* @scardCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.189, i32 0, i32 0), void (%struct.redisClient*)* @spopCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.190, i32 0, i32 0), void (%struct.redisClient*)* @srandmemberCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.191, i32 0, i32 0), void (%struct.redisClient*)* @sinterCommand, i32 -2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i32 0, i32 0), void (%struct.redisClient*)* @sinterstoreCommand, i32 -3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 2, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.193, i32 0, i32 0), void (%struct.redisClient*)* @sunionCommand, i32 -2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i32 0, i32 0), void (%struct.redisClient*)* @sunionstoreCommand, i32 -3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 2, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), void (%struct.redisClient*)* @sdiffCommand, i32 -2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.196, i32 0, i32 0), void (%struct.redisClient*)* @sdiffstoreCommand, i32 -3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 2, i32 -1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.197, i32 0, i32 0), void (%struct.redisClient*)* @sinterCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), void (%struct.redisClient*)* @zaddCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.199, i32 0, i32 0), void (%struct.redisClient*)* @zincrbyCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), void (%struct.redisClient*)* @zremCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.201, i32 0, i32 0), void (%struct.redisClient*)* @zremrangebyscoreCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.202, i32 0, i32 0), void (%struct.redisClient*)* @zremrangebyrankCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.203, i32 0, i32 0), void (%struct.redisClient*)* @zunionstoreCommand, i32 -4, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @zunionInterBlockClientOnSwappedKeys, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.204, i32 0, i32 0), void (%struct.redisClient*)* @zinterstoreCommand, i32 -4, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @zunionInterBlockClientOnSwappedKeys, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0), void (%struct.redisClient*)* @zrangeCommand, i32 -4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i32 0, i32 0), void (%struct.redisClient*)* @zrangebyscoreCommand, i32 -4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i32 0, i32 0), void (%struct.redisClient*)* @zcountCommand, i32 4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), void (%struct.redisClient*)* @zrevrangeCommand, i32 -4, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i32 0, i32 0), void (%struct.redisClient*)* @zcardCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.210, i32 0, i32 0), void (%struct.redisClient*)* @zscoreCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i32 0, i32 0), void (%struct.redisClient*)* @zrankCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.212, i32 0, i32 0), void (%struct.redisClient*)* @zrevrankCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0), void (%struct.redisClient*)* @hsetCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), void (%struct.redisClient*)* @hsetnxCommand, i32 4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.215, i32 0, i32 0), void (%struct.redisClient*)* @hgetCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), void (%struct.redisClient*)* @hmsetCommand, i32 -4, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0), void (%struct.redisClient*)* @hmgetCommand, i32 -3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.218, i32 0, i32 0), void (%struct.redisClient*)* @hincrbyCommand, i32 4, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), void (%struct.redisClient*)* @hdelCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.220, i32 0, i32 0), void (%struct.redisClient*)* @hlenCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.221, i32 0, i32 0), void (%struct.redisClient*)* @hkeysCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i32 0, i32 0), void (%struct.redisClient*)* @hvalsCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.223, i32 0, i32 0), void (%struct.redisClient*)* @hgetallCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.224, i32 0, i32 0), void (%struct.redisClient*)* @hexistsCommand, i32 3, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), void (%struct.redisClient*)* @incrbyCommand, i32 3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), void (%struct.redisClient*)* @decrbyCommand, i32 3, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), void (%struct.redisClient*)* @getsetCommand, i32 3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.228, i32 0, i32 0), void (%struct.redisClient*)* @msetCommand, i32 -3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 2 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i32 0, i32 0), void (%struct.redisClient*)* @msetnxCommand, i32 -3, i32 5, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 -1, i32 2 }, %struct.redisCommand { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0), void (%struct.redisClient*)* @randomkeyCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), void (%struct.redisClient*)* @selectCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i32 0, i32 0), void (%struct.redisClient*)* @moveCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i32 0, i32 0), void (%struct.redisClient*)* @renameCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), void (%struct.redisClient*)* @renamenxCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), void (%struct.redisClient*)* @expireCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.236, i32 0, i32 0), void (%struct.redisClient*)* @expireatCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0), void (%struct.redisClient*)* @keysCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0), void (%struct.redisClient*)* @dbsizeCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.239, i32 0, i32 0), void (%struct.redisClient*)* @authCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i32 0, i32 0), void (%struct.redisClient*)* @pingCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i32 0, i32 0), void (%struct.redisClient*)* @echoCommand, i32 2, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i32 0, i32 0), void (%struct.redisClient*)* @saveCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.243, i32 0, i32 0), void (%struct.redisClient*)* @bgsaveCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.244, i32 0, i32 0), void (%struct.redisClient*)* @bgrewriteaofCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i32 0, i32 0), void (%struct.redisClient*)* @shutdownCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.246, i32 0, i32 0), void (%struct.redisClient*)* @lastsaveCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.247, i32 0, i32 0), void (%struct.redisClient*)* @typeCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), void (%struct.redisClient*)* @multiCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.248, i32 0, i32 0), void (%struct.redisClient*)* @execCommand, i32 1, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @execBlockClientOnSwappedKeys, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.249, i32 0, i32 0), void (%struct.redisClient*)* @discardCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.250, i32 0, i32 0), void (%struct.redisClient*)* @syncCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.251, i32 0, i32 0), void (%struct.redisClient*)* @flushdbCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i32 0, i32 0), void (%struct.redisClient*)* @flushallCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.253, i32 0, i32 0), void (%struct.redisClient*)* @sortCommand, i32 -2, i32 6, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0), void (%struct.redisClient*)* @infoCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i32 0, i32 0), void (%struct.redisClient*)* @monitorCommand, i32 1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), void (%struct.redisClient*)* @ttlCommand, i32 2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 1, i32 1, i32 1 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.257, i32 0, i32 0), void (%struct.redisClient*)* @slaveofCommand, i32 3, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i32 0, i32 0), void (%struct.redisClient*)* @debugCommand, i32 -2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.259, i32 0, i32 0), void (%struct.redisClient*)* @configCommand, i32 -2, i32 1, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.260, i32 0, i32 0), void (%struct.redisClient*)* @subscribeCommand, i32 -2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.261, i32 0, i32 0), void (%struct.redisClient*)* @unsubscribeCommand, i32 -1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.262, i32 0, i32 0), void (%struct.redisClient*)* @psubscribeCommand, i32 -2, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.263, i32 0, i32 0), void (%struct.redisClient*)* @punsubscribeCommand, i32 -1, i32 2, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.264, i32 0, i32 0), void (%struct.redisClient*)* @publishCommand, i32 3, i32 9, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* null, i32 0, i32 0, i32 0 }, %struct.redisCommand zeroinitializer], align 16, !dbg !419
@.str.160 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.162 = private unnamed_addr constant [6 x i8] c"setnx\00", align 1
@.str.163 = private unnamed_addr constant [6 x i8] c"setex\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.166 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"incr\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"decr\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"mget\00", align 1
@.str.171 = private unnamed_addr constant [6 x i8] c"rpush\00", align 1
@.str.172 = private unnamed_addr constant [6 x i8] c"lpush\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"rpop\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"lpop\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"brpop\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"blpop\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"llen\00", align 1
@.str.178 = private unnamed_addr constant [7 x i8] c"lindex\00", align 1
@.str.179 = private unnamed_addr constant [5 x i8] c"lset\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"lrange\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"lrem\00", align 1
@.str.183 = private unnamed_addr constant [10 x i8] c"rpoplpush\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"sadd\00", align 1
@.str.185 = private unnamed_addr constant [5 x i8] c"srem\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"smove\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"sismember\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"scard\00", align 1
@.str.189 = private unnamed_addr constant [5 x i8] c"spop\00", align 1
@.str.190 = private unnamed_addr constant [12 x i8] c"srandmember\00", align 1
@.str.191 = private unnamed_addr constant [7 x i8] c"sinter\00", align 1
@.str.192 = private unnamed_addr constant [12 x i8] c"sinterstore\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"sunion\00", align 1
@.str.194 = private unnamed_addr constant [12 x i8] c"sunionstore\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"sdiff\00", align 1
@.str.196 = private unnamed_addr constant [11 x i8] c"sdiffstore\00", align 1
@.str.197 = private unnamed_addr constant [9 x i8] c"smembers\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"zadd\00", align 1
@.str.199 = private unnamed_addr constant [8 x i8] c"zincrby\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"zrem\00", align 1
@.str.201 = private unnamed_addr constant [17 x i8] c"zremrangebyscore\00", align 1
@.str.202 = private unnamed_addr constant [16 x i8] c"zremrangebyrank\00", align 1
@.str.203 = private unnamed_addr constant [12 x i8] c"zunionstore\00", align 1
@.str.204 = private unnamed_addr constant [12 x i8] c"zinterstore\00", align 1
@.str.205 = private unnamed_addr constant [7 x i8] c"zrange\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"zrangebyscore\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"zcount\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"zrevrange\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"zcard\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"zscore\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"zrank\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"zrevrank\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"hset\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"hsetnx\00", align 1
@.str.215 = private unnamed_addr constant [5 x i8] c"hget\00", align 1
@.str.216 = private unnamed_addr constant [6 x i8] c"hmset\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"hmget\00", align 1
@.str.218 = private unnamed_addr constant [8 x i8] c"hincrby\00", align 1
@.str.219 = private unnamed_addr constant [5 x i8] c"hdel\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c"hlen\00", align 1
@.str.221 = private unnamed_addr constant [6 x i8] c"hkeys\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"hvals\00", align 1
@.str.223 = private unnamed_addr constant [8 x i8] c"hgetall\00", align 1
@.str.224 = private unnamed_addr constant [8 x i8] c"hexists\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"incrby\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"decrby\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"getset\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"mset\00", align 1
@.str.229 = private unnamed_addr constant [7 x i8] c"msetnx\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"randomkey\00", align 1
@.str.231 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.233 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@.str.234 = private unnamed_addr constant [9 x i8] c"renamenx\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"expire\00", align 1
@.str.236 = private unnamed_addr constant [9 x i8] c"expireat\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"dbsize\00", align 1
@.str.239 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"ping\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"echo\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.243 = private unnamed_addr constant [7 x i8] c"bgsave\00", align 1
@.str.244 = private unnamed_addr constant [13 x i8] c"bgrewriteaof\00", align 1
@.str.245 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.246 = private unnamed_addr constant [9 x i8] c"lastsave\00", align 1
@.str.247 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.248 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.249 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.250 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str.251 = private unnamed_addr constant [8 x i8] c"flushdb\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"flushall\00", align 1
@.str.253 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"monitor\00", align 1
@.str.256 = private unnamed_addr constant [4 x i8] c"ttl\00", align 1
@.str.257 = private unnamed_addr constant [8 x i8] c"slaveof\00", align 1
@.str.258 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.259 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str.260 = private unnamed_addr constant [10 x i8] c"subscribe\00", align 1
@.str.261 = private unnamed_addr constant [12 x i8] c"unsubscribe\00", align 1
@.str.262 = private unnamed_addr constant [11 x i8] c"psubscribe\00", align 1
@.str.263 = private unnamed_addr constant [13 x i8] c"punsubscribe\00", align 1
@.str.264 = private unnamed_addr constant [8 x i8] c"publish\00", align 1
@.str.265 = private unnamed_addr constant [12 x i8] c"val == NULL\00", align 1
@__PRETTY_FUNCTION__.appendCommand = private unnamed_addr constant [34 x i8] c"void appendCommand(redisClient *)\00", align 1
@.str.266 = private unnamed_addr constant [7 x i8] c":%lu\0D\0A\00", align 1
@.str.267 = private unnamed_addr constant [7 x i8] c"$%zu\0D\0A\00", align 1
@__PRETTY_FUNCTION__.handleClientsWaitingListPush = private unnamed_addr constant [64 x i8] c"int handleClientsWaitingListPush(redisClient *, robj *, robj *)\00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c"*2\0D\0A\00", align 1
@.str.269 = private unnamed_addr constant [26 x i8] c"timeout is not an integer\00", align 1
@.str.270 = private unnamed_addr constant [27 x i8] c"-ERR timeout is negative\0D\0A\00", align 1
@__PRETTY_FUNCTION__.blockForKeys = private unnamed_addr constant [55 x i8] c"void blockForKeys(redisClient *, robj **, int, time_t)\00", align 1
@.str.271 = private unnamed_addr constant [6 x i8] c":%d\0D\0A\00", align 1
@.str.272 = private unnamed_addr constant [7 x i8] c"*%lu\0D\0A\00", align 1
@.str.273 = private unnamed_addr constant [29 x i8] c"-ERR value is not a double\0D\0A\00", align 1
@.str.274 = private unnamed_addr constant [45 x i8] c"-ERR resulting score is not a number (NaN)\0D\0A\00", align 1
@.str.275 = private unnamed_addr constant [13 x i8] c"deleted != 0\00", align 1
@.str.276 = private unnamed_addr constant [11 x i8] c"$%lu\0D\0A%s\0D\0A\00", align 1
@.str.277 = private unnamed_addr constant [66 x i8] c"-ERR at least 1 input key is needed for ZUNIONSTORE/ZINTERSTORE\0D\0A\00", align 1
@.str.278 = private unnamed_addr constant [8 x i8] c"weights\00", align 1
@.str.279 = private unnamed_addr constant [29 x i8] c"weight value is not a double\00", align 1
@.str.280 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.281 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.282 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.283 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.284 = private unnamed_addr constant [45 x i8] c"op == REDIS_OP_INTER || op == REDIS_OP_UNION\00", align 1
@.str.286 = private unnamed_addr constant [11 x i8] c"withscores\00", align 1
@.str.287 = private unnamed_addr constant [51 x i8] c"-ERR wrong number of arguments for ZRANGEBYSCORE\0D\0A\00", align 1
@.str.288 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.289 = private unnamed_addr constant [43 x i8] c"-ERR wrong number of arguments for HMSET\0D\0A\00", align 1
@.str.290 = private unnamed_addr constant [29 x i8] c"hash value is not an integer\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.292 = private unnamed_addr constant [42 x i8] c"-ERR wrong number of arguments for MSET\0D\0A\00", align 1
@.str.293 = private unnamed_addr constant [24 x i8] c"-ERR invalid DB index\0D\0A\00", align 1
@.str.294 = private unnamed_addr constant [35 x i8] c"-ERR background save in progress\0D\0A\00", align 1
@.str.295 = private unnamed_addr constant [43 x i8] c"-ERR background save already in progress\0D\0A\00", align 1
@.str.296 = private unnamed_addr constant [29 x i8] c"+Background saving started\0D\0A\00", align 1
@.str.297 = private unnamed_addr constant [65 x i8] c"-ERR background append only file rewriting already in progress\0D\0A\00", align 1
@.str.298 = private unnamed_addr constant [49 x i8] c"+Background append only file rewriting started\0D\0A\00", align 1
@.str.299 = private unnamed_addr constant [55 x i8] c"Can't rewrite append only file in background: fork: %s\00", align 1
@.str.300 = private unnamed_addr constant [56 x i8] c"Background append only file rewriting started by pid %d\00", align 1
@.str.301 = private unnamed_addr constant [23 x i8] c"temp-rewriteaof-%d.aof\00", align 1
@.str.302 = private unnamed_addr constant [42 x i8] c"Failed rewriting the append only file: %s\00", align 1
@__const.rewriteAppendOnlyFile.selectcmd = private unnamed_addr constant [17 x i8] c"*2\0D\0A$6\0D\0ASELECT\0D\0A\00", align 16
@__const.rewriteAppendOnlyFile.cmd = private unnamed_addr constant [14 x i8] c"*3\0D\0A$3\0D\0ASET\0D\0A\00", align 1
@__const.rewriteAppendOnlyFile.cmd.303 = private unnamed_addr constant [16 x i8] c"*3\0D\0A$5\0D\0ARPUSH\0D\0A\00", align 16
@__const.rewriteAppendOnlyFile.cmd.304 = private unnamed_addr constant [15 x i8] c"*3\0D\0A$4\0D\0ASADD\0D\0A\00", align 1
@__const.rewriteAppendOnlyFile.cmd.305 = private unnamed_addr constant [15 x i8] c"*4\0D\0A$4\0D\0AZADD\0D\0A\00", align 1
@__const.rewriteAppendOnlyFile.cmd.306 = private unnamed_addr constant [15 x i8] c"*4\0D\0A$4\0D\0AHSET\0D\0A\00", align 1
@__const.rewriteAppendOnlyFile.cmd.307 = private unnamed_addr constant [19 x i8] c"*3\0D\0A$8\0D\0AEXPIREAT\0D\0A\00", align 16
@.str.308 = private unnamed_addr constant [64 x i8] c"Error moving temp append only file on the final destination: %s\00", align 1
@.str.309 = private unnamed_addr constant [40 x i8] c"SYNC append only file rewrite performed\00", align 1
@.str.310 = private unnamed_addr constant [49 x i8] c"Write error writing append only file on disk: %s\00", align 1
@.str.311 = private unnamed_addr constant [6 x i8] c"%ld\0D\0A\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"$%ld\0D\0A\00", align 1
@.str.313 = private unnamed_addr constant [8 x i8] c"%.17g\0D\0A\00", align 1
@.str.314 = private unnamed_addr constant [46 x i8] c"-ERR Errors trying to SHUTDOWN. Check logs.\0D\0A\00", align 1
@.str.315 = private unnamed_addr constant [38 x i8] c"User requested shutdown, saving DB...\00", align 1
@.str.316 = private unnamed_addr constant [42 x i8] c"There is a live saving child. Killing it!\00", align 1
@.str.317 = private unnamed_addr constant [23 x i8] c"%zu bytes used at exit\00", align 1
@.str.318 = private unnamed_addr constant [40 x i8] c"Error trying to save the DB, can't exit\00", align 1
@.str.319 = private unnamed_addr constant [28 x i8] c"Server exit now, bye bye...\00", align 1
@.str.320 = private unnamed_addr constant [6 x i8] c"+none\00", align 1
@.str.321 = private unnamed_addr constant [8 x i8] c"+string\00", align 1
@.str.322 = private unnamed_addr constant [6 x i8] c"+list\00", align 1
@.str.323 = private unnamed_addr constant [5 x i8] c"+set\00", align 1
@.str.324 = private unnamed_addr constant [6 x i8] c"+zset\00", align 1
@.str.325 = private unnamed_addr constant [6 x i8] c"+hash\00", align 1
@.str.326 = private unnamed_addr constant [9 x i8] c"+unknown\00", align 1
@.str.327 = private unnamed_addr constant [42 x i8] c"-ERR SYNC is invalid with pending input\0D\0A\00", align 1
@.str.328 = private unnamed_addr constant [30 x i8] c"Slave ask for synchronization\00", align 1
@.str.329 = private unnamed_addr constant [35 x i8] c"Waiting for end of BGSAVE for SYNC\00", align 1
@.str.330 = private unnamed_addr constant [33 x i8] c"Waiting for next BGSAVE for SYNC\00", align 1
@.str.331 = private unnamed_addr constant [25 x i8] c"Starting BGSAVE for SYNC\00", align 1
@.str.332 = private unnamed_addr constant [33 x i8] c"Replication failed, can't BGSAVE\00", align 1
@.str.333 = private unnamed_addr constant [41 x i8] c"-ERR Unalbe to perform background save\0D\0A\00", align 1
@.str.334 = private unnamed_addr constant [4 x i8] c"asc\00", align 1
@.str.335 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.336 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.337 = private unnamed_addr constant [6 x i8] c"store\00", align 1
@.str.338 = private unnamed_addr constant [3 x i8] c"by\00", align 1
@.str.339 = private unnamed_addr constant [16 x i8] c"\22Bad SORT type\22\00", align 1
@.str.340 = private unnamed_addr constant [15 x i8] c"j == vectorlen\00", align 1
@.str.341 = private unnamed_addr constant [28 x i8] c"sop->type == REDIS_SORT_GET\00", align 1
@.str.342 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.343 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.344 = private unnamed_addr constant [560 x i8] c"redis_version:%s\0D\0Aredis_git_sha1:%s\0D\0Aredis_git_dirty:%d\0D\0Aarch_bits:%s\0D\0Amultiplexing_api:%s\0D\0Aprocess_id:%ld\0D\0Auptime_in_seconds:%ld\0D\0Auptime_in_days:%ld\0D\0Aconnected_clients:%d\0D\0Aconnected_slaves:%d\0D\0Ablocked_clients:%d\0D\0Aused_memory:%zu\0D\0Aused_memory_human:%s\0D\0Achanges_since_last_save:%lld\0D\0Abgsave_in_progress:%d\0D\0Alast_save_time:%ld\0D\0Abgrewriteaof_in_progress:%d\0D\0Atotal_connections_received:%lld\0D\0Atotal_commands_processed:%lld\0D\0Aexpired_keys:%lld\0D\0Ahash_max_zipmap_entries:%zu\0D\0Ahash_max_zipmap_value:%zu\0D\0Apubsub_channels:%ld\0D\0Apubsub_patterns:%u\0D\0Avm_enabled:%d\0D\0Arole:%s\0D\0A\00", align 1
@.str.345 = private unnamed_addr constant [6 x i8] c"2.0.0\00", align 1
@.str.346 = private unnamed_addr constant [9 x i8] c"aaed0894\00", align 1
@.str.347 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.348 = private unnamed_addr constant [3 x i8] c"64\00", align 1
@.str.349 = private unnamed_addr constant [7 x i8] c"master\00", align 1
@.str.350 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.351 = private unnamed_addr constant [87 x i8] c"master_host:%s\0D\0Amaster_port:%d\0D\0Amaster_link_status:%s\0D\0Amaster_last_io_seconds_ago:%d\0D\0A\00", align 1
@.str.352 = private unnamed_addr constant [3 x i8] c"up\00", align 1
@.str.353 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.354 = private unnamed_addr constant [340 x i8] c"vm_conf_max_memory:%llu\0D\0Avm_conf_page_size:%llu\0D\0Avm_conf_pages:%llu\0D\0Avm_stats_used_pages:%llu\0D\0Avm_stats_swapped_objects:%llu\0D\0Avm_stats_swappin_count:%llu\0D\0Avm_stats_swappout_count:%llu\0D\0Avm_stats_io_newjobs_len:%lu\0D\0Avm_stats_io_processing_len:%lu\0D\0Avm_stats_io_processed_len:%lu\0D\0Avm_stats_io_active_threads:%lu\0D\0Avm_stats_blocked_clients:%lu\0D\0A\00", align 1
@.str.355 = private unnamed_addr constant [30 x i8] c"db%d:keys=%lld,expires=%lld\0D\0A\00", align 1
@.str.356 = private unnamed_addr constant [6 x i8] c"%lluB\00", align 1
@.str.357 = private unnamed_addr constant [6 x i8] c"%.2fK\00", align 1
@.str.358 = private unnamed_addr constant [6 x i8] c"%.2fM\00", align 1
@.str.359 = private unnamed_addr constant [6 x i8] c"%.2fG\00", align 1
@.str.360 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.361 = private unnamed_addr constant [4 x i8] c"one\00", align 1
@.str.362 = private unnamed_addr constant [35 x i8] c"MASTER MODE enabled (user request)\00", align 1
@.str.363 = private unnamed_addr constant [38 x i8] c"SLAVE OF %s:%d enabled (user request)\00", align 1
@.str.364 = private unnamed_addr constant [9 x i8] c"segfault\00", align 1
@.str.365 = private unnamed_addr constant [7 x i8] c"reload\00", align 1
@.str.366 = private unnamed_addr constant [28 x i8] c"DB reloaded by DEBUG RELOAD\00", align 1
@.str.367 = private unnamed_addr constant [8 x i8] c"loadaof\00", align 1
@.str.368 = private unnamed_addr constant [41 x i8] c"Append Only File loaded by DEBUG LOADAOF\00", align 1
@.str.369 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@strencoding = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.386, i32 0, i32 0)], align 16, !dbg !424
@.str.370 = private unnamed_addr constant [21 x i8] c"unknown encoding %d\0A\00", align 1
@.str.371 = private unnamed_addr constant [84 x i8] c"+Key at:%p refcount:%d, value at:%p refcount:%d encoding:%s serializedlength:%lld\0D\0A\00", align 1
@.str.372 = private unnamed_addr constant [71 x i8] c"+Key at:%p refcount:%d, value swapped at: page %llu using %llu pages\0D\0A\00", align 1
@.str.373 = private unnamed_addr constant [7 x i8] c"swapin\00", align 1
@.str.374 = private unnamed_addr constant [8 x i8] c"swapout\00", align 1
@.str.375 = private unnamed_addr constant [34 x i8] c"-ERR Virtual Memory is disabled\0D\0A\00", align 1
@.str.376 = private unnamed_addr constant [33 x i8] c"-ERR This key is not in memory\0D\0A\00", align 1
@.str.377 = private unnamed_addr constant [9 x i8] c"populate\00", align 1
@.str.378 = private unnamed_addr constant [8 x i8] c"key:%lu\00", align 1
@.str.379 = private unnamed_addr constant [10 x i8] c"value:%lu\00", align 1
@.str.380 = private unnamed_addr constant [7 x i8] c"digest\00", align 1
@.str.381 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.382 = private unnamed_addr constant [89 x i8] c"-ERR Syntax error, try DEBUG [SEGFAULT|OBJECT <key>|SWAPIN <key>|SWAPOUT <key>|RELOAD]\0D\0A\00", align 1
@.str.383 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.384 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.385 = private unnamed_addr constant [7 x i8] c"zipmap\00", align 1
@.str.386 = private unnamed_addr constant [10 x i8] c"hashtable\00", align 1
@.str.387 = private unnamed_addr constant [11 x i8] c"!!expire!!\00", align 1
@.str.388 = private unnamed_addr constant [10 x i8] c"resetstat\00", align 1
@.str.389 = private unnamed_addr constant [60 x i8] c"-ERR CONFIG subcommand must be one of GET, SET, RESETSTAT\0D\0A\00", align 1
@.str.390 = private unnamed_addr constant [47 x i8] c"-ERR Wrong number of arguments for CONFIG %s\0D\0A\00", align 1
@.str.391 = private unnamed_addr constant [11 x i8] c"dbfilename\00", align 1
@.str.392 = private unnamed_addr constant [12 x i8] c"requirepass\00", align 1
@.str.393 = private unnamed_addr constant [11 x i8] c"masterauth\00", align 1
@.str.394 = private unnamed_addr constant [10 x i8] c"maxmemory\00", align 1
@.str.395 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.396 = private unnamed_addr constant [12 x i8] c"appendfsync\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"everysec\00", align 1
@.str.398 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.399 = private unnamed_addr constant [11 x i8] c"appendonly\00", align 1
@.str.400 = private unnamed_addr constant [49 x i8] c"-ERR Unable to turn on AOF. Check server logs.\0D\0A\00", align 1
@.str.401 = private unnamed_addr constant [41 x i8] c"-ERR not supported CONFIG parameter %s\0D\0A\00", align 1
@.str.402 = private unnamed_addr constant [49 x i8] c"-ERR invalid argument '%s' for CONFIG SET '%s'\0D\0A\00", align 1
@.str.403 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.404 = private unnamed_addr constant [53 x i8] c"Exiting on error writing to the append-only file: %s\00", align 1
@.str.405 = private unnamed_addr constant [65 x i8] c"Exiting on short write while writing to the append-only file: %s\00", align 1
@.str.406 = private unnamed_addr constant [74 x i8] c"Used tried to switch on AOF via CONFIG, but I can't open the AOF file: %s\00", align 1
@.str.407 = private unnamed_addr constant [144 x i8] c"Used tried to switch on AOF via CONFIG, I can't trigger a background AOF rewrite operation. Check the above logs for more info about the error.\00", align 1
@.str.408 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.409 = private unnamed_addr constant [7 x i8] c"%ld %d\00", align 1
@.str.410 = private unnamed_addr constant [37 x i8] c"\22decrRefCount against refcount <= 0\22\00", align 1
@.str.411 = private unnamed_addr constant [29 x i8] c"\22Unknown hash encoding type\22\00", align 1
@.str.412 = private unnamed_addr constant [19 x i8] c"/var/run/redis.pid\00", align 1
@.str.413 = private unnamed_addr constant [9 x i8] c"dump.rdb\00", align 1
@.str.414 = private unnamed_addr constant [15 x i8] c"appendonly.aof\00", align 1
@.str.415 = private unnamed_addr constant [17 x i8] c"/tmp/redis-%p.vm\00", align 1
@.str.416 = private unnamed_addr constant [25 x i8] c"Redis server version %s\0A\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.417 = private unnamed_addr constant [45 x i8] c"Usage: ./redis-server [/path/to/redis.conf]\0A\00", align 1
@.str.418 = private unnamed_addr constant [50 x i8] c"       ./redis-server - (read config from stdin)\0A\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.419 = private unnamed_addr constant [41 x i8] c"Fatal error, can't open config file '%s'\00", align 1
@.str.420 = private unnamed_addr constant [5 x i8] c" \09\0D\0A\00", align 1
@.str.421 = private unnamed_addr constant [22 x i8] c"Invalid timeout value\00", align 1
@.str.422 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.423 = private unnamed_addr constant [13 x i8] c"Invalid port\00", align 1
@.str.424 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.425 = private unnamed_addr constant [24 x i8] c"Invalid save parameters\00", align 1
@.str.426 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.427 = private unnamed_addr constant [24 x i8] c"Can't chdir to '%s': %s\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"loglevel\00", align 1
@.str.429 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.430 = private unnamed_addr constant [7 x i8] c"notice\00", align 1
@.str.431 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.432 = private unnamed_addr constant [57 x i8] c"Invalid log level. Must be one of debug, notice, warning\00", align 1
@.str.433 = private unnamed_addr constant [8 x i8] c"logfile\00", align 1
@.str.434 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.435 = private unnamed_addr constant [28 x i8] c"Can't open the log file: %s\00", align 1
@.str.436 = private unnamed_addr constant [10 x i8] c"databases\00", align 1
@.str.437 = private unnamed_addr constant [28 x i8] c"Invalid number of databases\00", align 1
@.str.438 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.439 = private unnamed_addr constant [11 x i8] c"maxclients\00", align 1
@.str.440 = private unnamed_addr constant [14 x i8] c"glueoutputbuf\00", align 1
@.str.441 = private unnamed_addr constant [31 x i8] c"argument must be 'yes' or 'no'\00", align 1
@.str.442 = private unnamed_addr constant [15 x i8] c"rdbcompression\00", align 1
@.str.443 = private unnamed_addr constant [16 x i8] c"activerehashing\00", align 1
@.str.444 = private unnamed_addr constant [10 x i8] c"daemonize\00", align 1
@.str.445 = private unnamed_addr constant [15 x i8] c"appendfilename\00", align 1
@.str.446 = private unnamed_addr constant [46 x i8] c"argument must be 'no', 'always' or 'everysec'\00", align 1
@.str.447 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.448 = private unnamed_addr constant [11 x i8] c"vm-enabled\00", align 1
@.str.449 = private unnamed_addr constant [13 x i8] c"vm-swap-file\00", align 1
@.str.450 = private unnamed_addr constant [14 x i8] c"vm-max-memory\00", align 1
@.str.451 = private unnamed_addr constant [13 x i8] c"vm-page-size\00", align 1
@.str.452 = private unnamed_addr constant [9 x i8] c"vm-pages\00", align 1
@.str.453 = private unnamed_addr constant [15 x i8] c"vm-max-threads\00", align 1
@.str.454 = private unnamed_addr constant [24 x i8] c"hash-max-zipmap-entries\00", align 1
@.str.455 = private unnamed_addr constant [22 x i8] c"hash-max-zipmap-value\00", align 1
@.str.456 = private unnamed_addr constant [43 x i8] c"Bad directive or wrong number of arguments\00", align 1
@.str.457 = private unnamed_addr constant [34 x i8] c"\0A*** FATAL CONFIG FILE ERROR ***\0A\00", align 1
@.str.458 = private unnamed_addr constant [44 x i8] c"Reading the configuration file, at line %d\0A\00", align 1
@.str.459 = private unnamed_addr constant [10 x i8] c">>> '%s'\0A\00", align 1
@.str.460 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.461 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.462 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.463 = private unnamed_addr constant [3 x i8] c"kb\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.465 = private unnamed_addr constant [3 x i8] c"mb\00", align 1
@.str.466 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.467 = private unnamed_addr constant [3 x i8] c"gb\00", align 1
@.str.468 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.469 = private unnamed_addr constant [25 x i8] c"Can't open /dev/null: %s\00", align 1
@.str.470 = private unnamed_addr constant [21 x i8] c"Opening TCP port: %s\00", align 1
@dbDictType = internal global %struct.dictType { i32 (i8*)* @dictObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* @dictRedisObjectDestructor }, align 8, !dbg !439
@keyptrDictType = internal global %struct.dictType { i32 (i8*)* @dictObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* null }, align 8, !dbg !441
@keylistDictType = internal global %struct.dictType { i32 (i8*)* @dictObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictObjKeyCompare, void (i8*, i8*)* @dictRedisObjectDestructor, void (i8*, i8*)* @dictListDestructor }, align 8, !dbg !443
@.str.471 = private unnamed_addr constant [20 x i8] c"creating file event\00", align 1
@.str.472 = private unnamed_addr constant [36 x i8] c"Can't open the append-only file: %s\00", align 1
@.str.473 = private unnamed_addr constant [49 x i8] c"======= Ooops! Redis %s got signal: -%d- =======\00", align 1
@.str.474 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.475 = private unnamed_addr constant [27 x i8] c"%d redis-server %p %s + %d\00", align 1
@symsTable = internal unnamed_addr constant [358 x %struct.redisFunctionSym] [%struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.476, i32 0, i32 0), i64 ptrtoint (i8* (i8*)* @IOThreadEntryPoint to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.477, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*, i32)* @_redisAssert to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.478, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*, i32)* @_redisPanic to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.479, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @acceptHandler to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.480, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*)* @addReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.481, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*)* @addReplyBulk to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.482, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i8*)* @addReplyBulkCString to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.483, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*)* @addReplyBulkLen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.484, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, double)* @addReplyDouble to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.485, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i64)* @addReplyLongLong to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.486, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i8*)* @addReplySds to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.487, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i64)* @addReplyUlong to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.488, i32 0, i32 0), i64 ptrtoint (void (i32)* @aofRemoveTempFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.489, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @appendCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.490, i32 0, i32 0), i64 ptrtoint (void (i64, i32)* @appendServerSaveParams to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.491, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @authCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.492, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*)* @beforeSleep to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.493, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @bgrewriteaofCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.494, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @bgsaveCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.495, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisCommand*)* @blockClientOnSwappedKeys to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.496, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject**, i32, i64)* @blockForKeys to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.497, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @blockingPopGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.498, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @blpopCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.499, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @brpopCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.500, i32 0, i32 0), i64 ptrtoint (void (i8*, i64)* @bytesToHuman to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.501, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisCommand*)* @call to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.502, i32 0, i32 0), i64 ptrtoint (i8* (i8*, %struct.redisObject*, %struct.redisObject*)* @catAppendOnlyExpireAtCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.503, i32 0, i32 0), i64 ptrtoint (i8* (i8*, i32, %struct.redisObject**)* @catAppendOnlyGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.504, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, i32)* @checkType to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.505, i32 0, i32 0), i64 ptrtoint (void ()* @closeTimedoutClients to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.506, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @compareStringObjects to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.507, i32 0, i32 0), i64 ptrtoint (void (i8*)* @computeDatasetDigest to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.508, i32 0, i32 0), i64 ptrtoint (double (%struct.redisObject*)* @computeObjectSwappability to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @configCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.510, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @configGetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.511, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @configSetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.512, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @convertToRealHash to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.513, i32 0, i32 0), i64 ptrtoint (%struct.redisClient* (i32)* @createClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.514, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* ()* @createHashObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.515, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* ()* @createListObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.516, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (i32, i8*)* @createObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.517, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* ()* @createSetObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.518, i32 0, i32 0), i64 ptrtoint (void ()* @createSharedObjects to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.519, i32 0, i32 0), i64 ptrtoint (%struct._redisSortOperation* (i32, %struct.redisObject*)* @createSortOperation to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.520, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (i8*, i64)* @createStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.521, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (i64)* @createStringObjectFromLongLong to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.522, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* ()* @createZsetObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.444, i32 0, i32 0), i64 ptrtoint (void ()* @daemonize to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.523, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @dbsizeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.524, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @debugCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.525, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @decrCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.526, i32 0, i32 0), i64 ptrtoint (void (i8*)* @decrRefCount to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.527, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @decrbyCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.528, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @delCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.529, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*)* @deleteIfSwapped to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.530, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*)* @deleteIfVolatile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.531, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*)* @deleteKey to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.532, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.533, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*)* @dictListDestructor to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.534, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*, i8*)* @dictObjKeyCompare to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.535, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*)* @dictRedisObjectDestructor to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.536, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*)* @dictVanillaFree to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.537, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @discardCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.538, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*)* @dontWaitForSwappedKey to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.539, i32 0, i32 0), i64 ptrtoint (i8* (i8*)* @dupClientReplyValue to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.540, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*)* @dupStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.541, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @echoCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.542, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @equalStringObjects to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.543, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @execBlockClientOnSwappedKeys to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.544, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @execCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.545, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @execCommandReplicateMulti to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.546, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @existsCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.547, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @expireCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.548, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*, %struct.redisObject*, i64)* @expireGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.549, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*)* @expireIfNeeded to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.550, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @expireatCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.551, i32 0, i32 0), i64 ptrtoint (void (%struct.redisCommand*, i32, %struct.redisObject**, i32)* @feedAppendOnlyFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.552, i32 0, i32 0), i64 ptrtoint (i8* (i8*, i64*)* @findFuncName to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.553, i32 0, i32 0), i64 ptrtoint (void ()* @flushAppendOnlyFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.554, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @flushallCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.555, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @flushdbCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.556, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @freeClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.557, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @freeClientArgv to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.558, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @freeClientMultiState to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.559, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @freeFakeClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.560, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @freeHashObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.561, i32 0, i32 0), i64 ptrtoint (void (%struct.iojob*)* @freeIOJob to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.562, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @freeListObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.563, i32 0, i32 0), i64 ptrtoint (void ()* @freeMemoryIfNeeded to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.564, i32 0, i32 0), i64 ptrtoint (void (i8*)* @freePubsubPattern to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.565, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @freeSetObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.566, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @freeStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.567, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @freeZsetObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.568, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, double)* @fwriteBulkDouble to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.569, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i64)* @fwriteBulkLong to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.570, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, %struct.redisObject*)* @fwriteBulkObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.571, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i8*, i64)* @fwriteBulkString to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.572, i32 0, i32 0), i64 ptrtoint (i8* ()* @genRedisInfoString to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.573, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @genericHgetallCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.574, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @genericZrangebyscoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @getCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.576, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*)* @getDecodedObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.577, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, double*)* @getDoubleFromObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.578, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, double*, i8*)* @getDoubleFromObjectOrReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.579, i32 0, i32 0), i64 ptrtoint (i64 (%struct.redisDb*, %struct.redisObject*)* @getExpire to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.580, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*)* @getGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.581, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, i64*, i8*)* @getLongFromObjectOrReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.582, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, i64*)* @getLongLongFromObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.583, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, i64*, i8*)* @getLongLongFromObjectOrReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.584, i32 0, i32 0), i64 ptrtoint (i8* (%struct.ucontext_t*)* @getMcontextEip to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.585, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @getsetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.586, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @glueReplyBuffersIfNeeded to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.587, i32 0, i32 0), i64 ptrtoint (void (%struct.redisDb*, %struct.redisObject*)* @handleClientsBlockedOnSwappedKey to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.588, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, %struct.redisObject*)* @handleClientsWaitingListPush to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.589, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.hashIterator*, i32)* @hashCurrent to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.590, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @hashDelete to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.591, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @hashExists to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.592, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*, %struct.redisObject*)* @hashGet to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.593, i32 0, i32 0), i64 ptrtoint (%struct.hashIterator* (%struct.redisObject*)* @hashInitIterator to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.594, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisClient*, %struct.redisObject*)* @hashLookupWriteOrCreate to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.595, i32 0, i32 0), i64 ptrtoint (i32 (%struct.hashIterator*)* @hashNext to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.596, i32 0, i32 0), i64 ptrtoint (void (%struct.hashIterator*)* @hashReleaseIterator to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.597, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*, %struct.redisObject*)* @hashSet to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.598, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*, %struct.redisObject**, i32, i32)* @hashTryConversion to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.599, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*, %struct.redisObject**, %struct.redisObject**)* @hashTryObjectEncoding to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.600, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hdelCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.601, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hexistsCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.602, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hgetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.603, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hgetallCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.604, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hincrbyCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.605, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hkeysCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.606, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hlenCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.607, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hmgetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.608, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hmsetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.609, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hsetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.610, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hsetnxCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.611, i32 0, i32 0), i64 ptrtoint (i32 (%struct.dict*)* @htNeedsResize to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.612, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @hvalsCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.613, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @incrCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.614, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i64)* @incrDecrCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.615, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @incrRefCount to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.616, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @incrbyCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.617, i32 0, i32 0), i64 ptrtoint (void ()* @incrementallyRehash to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.618, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @infoCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.619, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @initClientMultiState to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.620, i32 0, i32 0), i64 ptrtoint (void ()* @initServer to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.621, i32 0, i32 0), i64 ptrtoint (void ()* @initServerConfig to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.622, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i64*)* @isStringRepresentableAsLong to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.623, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @keysCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.624, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lastsaveCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.625, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lindexCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.626, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*)* @listMatchObjects to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.627, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*)* @listMatchPubsubPattern to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.628, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i64, i64)* @ll2string to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.629, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @llenCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.630, i32 0, i32 0), i64 ptrtoint (void (i8*)* @loadServerConfig to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.631, i32 0, i32 0), i64 ptrtoint (void ()* @lockThreadedIO to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.632, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisDb*, %struct.redisObject*)* @lookupKey to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.633, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisDb*, %struct.redisObject*, %struct.redisObject*)* @lookupKeyByPattern to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.634, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisDb*, %struct.redisObject*)* @lookupKeyRead to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.635, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisClient*, %struct.redisObject*, %struct.redisObject*)* @lookupKeyReadOrReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.636, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisDb*, %struct.redisObject*)* @lookupKeyWrite to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.637, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisClient*, %struct.redisObject*, %struct.redisObject*)* @lookupKeyWriteOrReply to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.638, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lpopCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lpushCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.640, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lrangeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.641, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lremCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.642, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @lsetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.643, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @ltrimCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.644, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @mgetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.645, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*, i64)* @mixDigest to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.646, i32 0, i32 0), i64 ptrtoint (void (i8*, %struct.redisObject*)* @mixObjectDigest to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.647, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @monitorCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.648, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @moveCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @msetCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.650, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @msetGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.651, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @msetnxCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.652, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @multiCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.653, i32 0, i32 0), i64 ptrtoint (void (i8*)* @oom to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @pingCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.655, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @popGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.656, i32 0, i32 0), i64 ptrtoint (i32 ()* @prepareForShutdown to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.657, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*)* @processCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.658, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @processInputBuffer to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.659, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @psubscribeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.660, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @publishCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.661, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @pubsubPublishMessage to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.662, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*)* @pubsubSubscribeChannel to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.663, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*)* @pubsubSubscribePattern to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.664, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, i32)* @pubsubUnsubscribeAllChannels to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.665, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, i32)* @pubsubUnsubscribeAllPatterns to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.666, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, i32)* @pubsubUnsubscribeChannel to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.667, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*, i32)* @pubsubUnsubscribePattern to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.668, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @punsubscribeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.669, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @pushGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.670, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*)* @qsortCompareSetsByCardinality to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.671, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*)* @qsortCompareZsetopsrcByCardinality to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.672, i32 0, i32 0), i64 ptrtoint (void (%struct.iojob*)* @queueIOJob to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.673, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisCommand*)* @queueMultiCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.674, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @randomkeyCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.675, i32 0, i32 0), i64 ptrtoint (i32 (i64, i8*)* @rdbEncodeInteger to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.676, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct._IO_FILE*, i32)* @rdbGenericLoadStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.677, i32 0, i32 0), i64 ptrtoint (i32 (i8*)* @rdbLoad to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.678, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, double*)* @rdbLoadDoubleValue to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.679, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct._IO_FILE*)* @rdbLoadEncodedStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.680, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct._IO_FILE*, i32, i32)* @rdbLoadIntegerObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.681, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i32*)* @rdbLoadLen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.682, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct._IO_FILE*)* @rdbLoadLzfStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.683, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (i32, %struct._IO_FILE*)* @rdbLoadObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.684, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct._IO_FILE*)* @rdbLoadStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.685, i32 0, i32 0), i64 ptrtoint (i64 (%struct._IO_FILE*)* @rdbLoadTime to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.686, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*)* @rdbLoadType to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.687, i32 0, i32 0), i64 ptrtoint (void (i32)* @rdbRemoveTempFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.688, i32 0, i32 0), i64 ptrtoint (i32 (i8*)* @rdbSave to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.689, i32 0, i32 0), i64 ptrtoint (i32 (i8*)* @rdbSaveBackground to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.690, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, double)* @rdbSaveDoubleValue to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.691, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i32)* @rdbSaveLen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.692, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i8*, i64)* @rdbSaveLzfStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.693, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, %struct.redisObject*)* @rdbSaveObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.694, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i8*, i64)* @rdbSaveRawString to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.695, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, %struct.redisObject*)* @rdbSaveStringObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.696, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i64)* @rdbSaveTime to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.697, i32 0, i32 0), i64 ptrtoint (i32 (%struct._IO_FILE*, i8)* @rdbSaveType to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.698, i32 0, i32 0), i64 ptrtoint (i64 (%struct.redisObject*, %struct._IO_FILE*)* @rdbSavedObjectLen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.699, i32 0, i32 0), i64 ptrtoint (i64 (%struct.redisObject*, %struct._IO_FILE*)* @rdbSavedObjectPages to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.700, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i64, i8*)* @rdbTryIntegerEncoding to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.701, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @readQueryFromClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.702, i32 0, i32 0), i64 ptrtoint (void (i32, i8*, ...)* @redisLog to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.703, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*)* @removeExpire to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.704, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @renameCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.705, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @renameGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.706, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @renamenxCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.707, i32 0, i32 0), i64 ptrtoint (void (%struct.list*, i32, %struct.redisObject**, i32)* @replicationFeedMonitors to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.708, i32 0, i32 0), i64 ptrtoint (void (%struct.list*, i32, %struct.redisObject**, i32)* @replicationFeedSlaves to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.709, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @resetClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.710, i32 0, i32 0), i64 ptrtoint (void ()* @resetServerSaveParams to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.711, i32 0, i32 0), i64 ptrtoint (i32 (i8*)* @rewriteAppendOnlyFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.712, i32 0, i32 0), i64 ptrtoint (i32 ()* @rewriteAppendOnlyFileBackground to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.713, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @rpopCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.714, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @rpoplpushcommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.715, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @rpushCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.716, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @saddCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.717, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @saveCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.718, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @scardCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.719, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sdiffCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.720, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sdiffstoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.721, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*, i8*)* @sdsDictKeyCompare to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.722, i32 0, i32 0), i64 ptrtoint (i8* (i8*, i8*, i64)* @sdscatrepr to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.723, i32 0, i32 0), i64 ptrtoint (void (i32, %struct.siginfo_t*, i8*)* @segvHandler to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.724, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @selectCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.725, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, i32)* @selectDb to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.726, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @sendBulkToSlave to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.727, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @sendReplyToClient to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.728, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @sendReplyToClientWritev to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.729, i32 0, i32 0), i64 ptrtoint (i32 (%struct.aeEventLoop*, i64, i8*)* @serverCron to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.730, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @setCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.731, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisDb*, %struct.redisObject*, i64)* @setExpire to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.732, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*)* @setGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.733, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @setexCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.734, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @setnxCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.735, i32 0, i32 0), i64 ptrtoint (void ()* @setupSigSegvAction to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.736, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @shutdownCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.737, i32 0, i32 0), i64 ptrtoint (void (i32)* @sigtermHandler to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.738, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sinterCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.739, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject**, i64, %struct.redisObject*)* @sinterGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.740, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sinterstoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.741, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sismemberCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.742, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @slaveofCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.743, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @smoveCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.744, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sortCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.745, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*)* @sortCompare to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.746, i32 0, i32 0), i64 ptrtoint (void ()* @spawnIOThread to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.747, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @spopCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.748, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @srandmemberCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.749, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sremCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.750, i32 0, i32 0), i64 ptrtoint (i32 ()* @startAppendOnly to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.751, i32 0, i32 0), i64 ptrtoint (void ()* @stopAppendOnly to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.752, i32 0, i32 0), i64 ptrtoint (i64 (%struct.redisObject*)* @stringObjectLen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.753, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i8*, i32)* @stringmatch to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.754, i32 0, i32 0), i64 ptrtoint (i32 (i8*, i32, i8*, i32, i32)* @stringmatchlen to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.755, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @subscribeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.756, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @substrCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.757, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sunionCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.758, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject**, i32, %struct.redisObject*, i32)* @sunionDiffGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.759, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @sunionstoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.760, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @syncCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.761, i32 0, i32 0), i64 ptrtoint (i32 (i32, i8*, i64, i32)* @syncRead to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.762, i32 0, i32 0), i64 ptrtoint (i32 (i32, i8*, i64, i32)* @syncReadLine to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.763, i32 0, i32 0), i64 ptrtoint (i32 ()* @syncWithMaster to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.764, i32 0, i32 0), i64 ptrtoint (i32 (i32, i8*, i64, i32)* @syncWrite to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.765, i32 0, i32 0), i64 ptrtoint (i32 ()* @tryFreeOneObjectFromFreelist to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.766, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*)* @tryObjectEncoding to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.767, i32 0, i32 0), i64 ptrtoint (void ()* @tryResizeHashTables to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @ttlCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.769, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @typeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.770, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @unblockClientWaitingData to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.771, i32 0, i32 0), i64 ptrtoint (void ()* @unlockThreadedIO to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.772, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @unsubscribeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.773, i32 0, i32 0), i64 ptrtoint (void ()* @updateDictResizePolicy to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.774, i32 0, i32 0), i64 ptrtoint (void (i32)* @updateSlavesWaitingBgsave to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.775, i32 0, i32 0), i64 ptrtoint (void ()* @usage to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.776, i32 0, i32 0), i64 ptrtoint (void ()* @version to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.777, i32 0, i32 0), i64 ptrtoint (i32 ()* @vmCanSwapOut to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.778, i32 0, i32 0), i64 ptrtoint (void (%struct.redisObject*)* @vmCancelThreadedIOJob to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.779, i32 0, i32 0), i64 ptrtoint (i32 (i64*, i64)* @vmFindContiguousPages to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.780, i32 0, i32 0), i64 ptrtoint (i32 (i64)* @vmFreePage to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.781, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*, i32)* @vmGenericLoadObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.782, i32 0, i32 0), i64 ptrtoint (void ()* @vmInit to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.783, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*)* @vmLoadObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.784, i32 0, i32 0), i64 ptrtoint (void (i64)* @vmMarkPageFree to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.785, i32 0, i32 0), i64 ptrtoint (void (i64)* @vmMarkPageUsed to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.786, i32 0, i32 0), i64 ptrtoint (void (i64, i64)* @vmMarkPagesFree to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.787, i32 0, i32 0), i64 ptrtoint (void (i64, i64)* @vmMarkPagesUsed to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.788, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (%struct.redisObject*)* @vmPreviewObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.789, i32 0, i32 0), i64 ptrtoint (%struct.redisObject* (i64, i32)* @vmReadObjectFromSwap to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.790, i32 0, i32 0), i64 ptrtoint (void ()* @vmReopenSwapFile to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.791, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*)* @vmSwapObjectBlocking to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.792, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, %struct.redisObject*, %struct.redisDb*)* @vmSwapObjectThreaded to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.793, i32 0, i32 0), i64 ptrtoint (i32 (i32)* @vmSwapOneObject to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.794, i32 0, i32 0), i64 ptrtoint (i32 ()* @vmSwapOneObjectBlocking to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.795, i32 0, i32 0), i64 ptrtoint (i32 ()* @vmSwapOneObjectThreaded to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.796, i32 0, i32 0), i64 ptrtoint (void (%struct.aeEventLoop*, i32, i8*, i32)* @vmThreadedIOCompletedJob to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.797, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisObject*, i64)* @vmWriteObjectOnSwap to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.798, i32 0, i32 0), i64 ptrtoint (void ()* @waitEmptyIOJobsQueue to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.799, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @waitForMultipleSwappedKeys to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.800, i32 0, i32 0), i64 ptrtoint (i32 (%struct.redisClient*, %struct.redisObject*)* @waitForSwappedKey to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.801, i32 0, i32 0), i64 ptrtoint (void (i8*, i8*, i64)* @xorDigest to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.802, i32 0, i32 0), i64 ptrtoint (void (i8*, %struct.redisObject*)* @xorObjectDigest to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.803, i32 0, i32 0), i64 ptrtoint (i32 (i8*)* @yesnotoi to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.804, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zaddCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.805, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*, %struct.redisObject*, double, i32)* @zaddGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.806, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zcardCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.807, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zcountCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.808, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zincrbyCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.809, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zinterstoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.810, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zrangeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.811, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @zrangeGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.812, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zrangebyscoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.813, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zrankCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.814, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, i32)* @zrankGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.815, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zremCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.816, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zremrangebyrankCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.817, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zremrangebyscoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.818, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zrevrangeCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.819, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zrevrankCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.820, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zscoreCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.821, i32 0, i32 0), i64 ptrtoint (%struct.zskiplist* ()* @zslCreate to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.822, i32 0, i32 0), i64 ptrtoint (%struct.zskiplistNode* (i32, double, %struct.redisObject*)* @zslCreateNode to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.823, i32 0, i32 0), i64 ptrtoint (i32 (%struct.zskiplist*, double, %struct.redisObject*)* @zslDelete to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.824, i32 0, i32 0), i64 ptrtoint (%struct.zskiplistNode* (%struct.zskiplist*, double)* @zslFirstWithScore to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.825, i32 0, i32 0), i64 ptrtoint (void (%struct.zskiplist*)* @zslFree to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.826, i32 0, i32 0), i64 ptrtoint (void (%struct.zskiplistNode*)* @zslFreeNode to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.827, i32 0, i32 0), i64 ptrtoint (void (%struct.zskiplist*, double, %struct.redisObject*)* @zslInsert to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.828, i32 0, i32 0), i64 ptrtoint (i32 ()* @zslRandomLevel to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.829, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* @zunionInterBlockClientOnSwappedKeys to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.830, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*, %struct.redisObject*, i32)* @zunionInterGenericCommand to i64) }, %struct.redisFunctionSym { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.831, i32 0, i32 0), i64 ptrtoint (void (%struct.redisClient*)* @zunionstoreCommand to i64) }, %struct.redisFunctionSym zeroinitializer], align 16, !dbg !429
@.str.476 = private unnamed_addr constant [19 x i8] c"IOThreadEntryPoint\00", align 1
@.str.477 = private unnamed_addr constant [13 x i8] c"_redisAssert\00", align 1
@.str.478 = private unnamed_addr constant [12 x i8] c"_redisPanic\00", align 1
@.str.479 = private unnamed_addr constant [14 x i8] c"acceptHandler\00", align 1
@.str.480 = private unnamed_addr constant [9 x i8] c"addReply\00", align 1
@.str.481 = private unnamed_addr constant [13 x i8] c"addReplyBulk\00", align 1
@.str.482 = private unnamed_addr constant [20 x i8] c"addReplyBulkCString\00", align 1
@.str.483 = private unnamed_addr constant [16 x i8] c"addReplyBulkLen\00", align 1
@.str.484 = private unnamed_addr constant [15 x i8] c"addReplyDouble\00", align 1
@.str.485 = private unnamed_addr constant [17 x i8] c"addReplyLongLong\00", align 1
@.str.486 = private unnamed_addr constant [12 x i8] c"addReplySds\00", align 1
@.str.487 = private unnamed_addr constant [14 x i8] c"addReplyUlong\00", align 1
@.str.488 = private unnamed_addr constant [18 x i8] c"aofRemoveTempFile\00", align 1
@.str.489 = private unnamed_addr constant [14 x i8] c"appendCommand\00", align 1
@.str.490 = private unnamed_addr constant [23 x i8] c"appendServerSaveParams\00", align 1
@.str.491 = private unnamed_addr constant [12 x i8] c"authCommand\00", align 1
@.str.492 = private unnamed_addr constant [12 x i8] c"beforeSleep\00", align 1
@.str.493 = private unnamed_addr constant [20 x i8] c"bgrewriteaofCommand\00", align 1
@.str.494 = private unnamed_addr constant [14 x i8] c"bgsaveCommand\00", align 1
@.str.495 = private unnamed_addr constant [25 x i8] c"blockClientOnSwappedKeys\00", align 1
@.str.496 = private unnamed_addr constant [13 x i8] c"blockForKeys\00", align 1
@.str.497 = private unnamed_addr constant [26 x i8] c"blockingPopGenericCommand\00", align 1
@.str.498 = private unnamed_addr constant [13 x i8] c"blpopCommand\00", align 1
@.str.499 = private unnamed_addr constant [13 x i8] c"brpopCommand\00", align 1
@.str.500 = private unnamed_addr constant [13 x i8] c"bytesToHuman\00", align 1
@.str.501 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.502 = private unnamed_addr constant [29 x i8] c"catAppendOnlyExpireAtCommand\00", align 1
@.str.503 = private unnamed_addr constant [28 x i8] c"catAppendOnlyGenericCommand\00", align 1
@.str.504 = private unnamed_addr constant [10 x i8] c"checkType\00", align 1
@.str.505 = private unnamed_addr constant [21 x i8] c"closeTimedoutClients\00", align 1
@.str.506 = private unnamed_addr constant [21 x i8] c"compareStringObjects\00", align 1
@.str.507 = private unnamed_addr constant [21 x i8] c"computeDatasetDigest\00", align 1
@.str.508 = private unnamed_addr constant [26 x i8] c"computeObjectSwappability\00", align 1
@.str.509 = private unnamed_addr constant [14 x i8] c"configCommand\00", align 1
@.str.510 = private unnamed_addr constant [17 x i8] c"configGetCommand\00", align 1
@.str.511 = private unnamed_addr constant [17 x i8] c"configSetCommand\00", align 1
@.str.512 = private unnamed_addr constant [18 x i8] c"convertToRealHash\00", align 1
@.str.513 = private unnamed_addr constant [13 x i8] c"createClient\00", align 1
@.str.514 = private unnamed_addr constant [17 x i8] c"createHashObject\00", align 1
@.str.515 = private unnamed_addr constant [17 x i8] c"createListObject\00", align 1
@.str.516 = private unnamed_addr constant [13 x i8] c"createObject\00", align 1
@.str.517 = private unnamed_addr constant [16 x i8] c"createSetObject\00", align 1
@.str.518 = private unnamed_addr constant [20 x i8] c"createSharedObjects\00", align 1
@.str.519 = private unnamed_addr constant [20 x i8] c"createSortOperation\00", align 1
@.str.520 = private unnamed_addr constant [19 x i8] c"createStringObject\00", align 1
@.str.521 = private unnamed_addr constant [31 x i8] c"createStringObjectFromLongLong\00", align 1
@.str.522 = private unnamed_addr constant [17 x i8] c"createZsetObject\00", align 1
@.str.523 = private unnamed_addr constant [14 x i8] c"dbsizeCommand\00", align 1
@.str.524 = private unnamed_addr constant [13 x i8] c"debugCommand\00", align 1
@.str.525 = private unnamed_addr constant [12 x i8] c"decrCommand\00", align 1
@.str.526 = private unnamed_addr constant [13 x i8] c"decrRefCount\00", align 1
@.str.527 = private unnamed_addr constant [14 x i8] c"decrbyCommand\00", align 1
@.str.528 = private unnamed_addr constant [11 x i8] c"delCommand\00", align 1
@.str.529 = private unnamed_addr constant [16 x i8] c"deleteIfSwapped\00", align 1
@.str.530 = private unnamed_addr constant [17 x i8] c"deleteIfVolatile\00", align 1
@.str.531 = private unnamed_addr constant [10 x i8] c"deleteKey\00", align 1
@.str.532 = private unnamed_addr constant [21 x i8] c"dictEncObjKeyCompare\00", align 1
@.str.533 = private unnamed_addr constant [19 x i8] c"dictListDestructor\00", align 1
@.str.534 = private unnamed_addr constant [18 x i8] c"dictObjKeyCompare\00", align 1
@.str.535 = private unnamed_addr constant [26 x i8] c"dictRedisObjectDestructor\00", align 1
@.str.536 = private unnamed_addr constant [16 x i8] c"dictVanillaFree\00", align 1
@.str.537 = private unnamed_addr constant [15 x i8] c"discardCommand\00", align 1
@.str.538 = private unnamed_addr constant [22 x i8] c"dontWaitForSwappedKey\00", align 1
@.str.539 = private unnamed_addr constant [20 x i8] c"dupClientReplyValue\00", align 1
@.str.540 = private unnamed_addr constant [16 x i8] c"dupStringObject\00", align 1
@.str.541 = private unnamed_addr constant [12 x i8] c"echoCommand\00", align 1
@.str.542 = private unnamed_addr constant [19 x i8] c"equalStringObjects\00", align 1
@.str.543 = private unnamed_addr constant [29 x i8] c"execBlockClientOnSwappedKeys\00", align 1
@.str.544 = private unnamed_addr constant [12 x i8] c"execCommand\00", align 1
@.str.545 = private unnamed_addr constant [26 x i8] c"execCommandReplicateMulti\00", align 1
@.str.546 = private unnamed_addr constant [14 x i8] c"existsCommand\00", align 1
@.str.547 = private unnamed_addr constant [14 x i8] c"expireCommand\00", align 1
@.str.548 = private unnamed_addr constant [21 x i8] c"expireGenericCommand\00", align 1
@.str.549 = private unnamed_addr constant [15 x i8] c"expireIfNeeded\00", align 1
@.str.550 = private unnamed_addr constant [16 x i8] c"expireatCommand\00", align 1
@.str.551 = private unnamed_addr constant [19 x i8] c"feedAppendOnlyFile\00", align 1
@.str.552 = private unnamed_addr constant [13 x i8] c"findFuncName\00", align 1
@.str.553 = private unnamed_addr constant [20 x i8] c"flushAppendOnlyFile\00", align 1
@.str.554 = private unnamed_addr constant [16 x i8] c"flushallCommand\00", align 1
@.str.555 = private unnamed_addr constant [15 x i8] c"flushdbCommand\00", align 1
@.str.556 = private unnamed_addr constant [11 x i8] c"freeClient\00", align 1
@.str.557 = private unnamed_addr constant [15 x i8] c"freeClientArgv\00", align 1
@.str.558 = private unnamed_addr constant [21 x i8] c"freeClientMultiState\00", align 1
@.str.559 = private unnamed_addr constant [15 x i8] c"freeFakeClient\00", align 1
@.str.560 = private unnamed_addr constant [15 x i8] c"freeHashObject\00", align 1
@.str.561 = private unnamed_addr constant [10 x i8] c"freeIOJob\00", align 1
@.str.562 = private unnamed_addr constant [15 x i8] c"freeListObject\00", align 1
@.str.563 = private unnamed_addr constant [19 x i8] c"freeMemoryIfNeeded\00", align 1
@.str.564 = private unnamed_addr constant [18 x i8] c"freePubsubPattern\00", align 1
@.str.565 = private unnamed_addr constant [14 x i8] c"freeSetObject\00", align 1
@.str.566 = private unnamed_addr constant [17 x i8] c"freeStringObject\00", align 1
@.str.567 = private unnamed_addr constant [15 x i8] c"freeZsetObject\00", align 1
@.str.568 = private unnamed_addr constant [17 x i8] c"fwriteBulkDouble\00", align 1
@.str.569 = private unnamed_addr constant [15 x i8] c"fwriteBulkLong\00", align 1
@.str.570 = private unnamed_addr constant [17 x i8] c"fwriteBulkObject\00", align 1
@.str.571 = private unnamed_addr constant [17 x i8] c"fwriteBulkString\00", align 1
@.str.572 = private unnamed_addr constant [19 x i8] c"genRedisInfoString\00", align 1
@.str.573 = private unnamed_addr constant [22 x i8] c"genericHgetallCommand\00", align 1
@.str.574 = private unnamed_addr constant [28 x i8] c"genericZrangebyscoreCommand\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"getCommand\00", align 1
@.str.576 = private unnamed_addr constant [17 x i8] c"getDecodedObject\00", align 1
@.str.577 = private unnamed_addr constant [20 x i8] c"getDoubleFromObject\00", align 1
@.str.578 = private unnamed_addr constant [27 x i8] c"getDoubleFromObjectOrReply\00", align 1
@.str.579 = private unnamed_addr constant [10 x i8] c"getExpire\00", align 1
@.str.580 = private unnamed_addr constant [18 x i8] c"getGenericCommand\00", align 1
@.str.581 = private unnamed_addr constant [25 x i8] c"getLongFromObjectOrReply\00", align 1
@.str.582 = private unnamed_addr constant [22 x i8] c"getLongLongFromObject\00", align 1
@.str.583 = private unnamed_addr constant [29 x i8] c"getLongLongFromObjectOrReply\00", align 1
@.str.584 = private unnamed_addr constant [15 x i8] c"getMcontextEip\00", align 1
@.str.585 = private unnamed_addr constant [14 x i8] c"getsetCommand\00", align 1
@.str.586 = private unnamed_addr constant [25 x i8] c"glueReplyBuffersIfNeeded\00", align 1
@.str.587 = private unnamed_addr constant [33 x i8] c"handleClientsBlockedOnSwappedKey\00", align 1
@.str.588 = private unnamed_addr constant [29 x i8] c"handleClientsWaitingListPush\00", align 1
@.str.589 = private unnamed_addr constant [12 x i8] c"hashCurrent\00", align 1
@.str.590 = private unnamed_addr constant [11 x i8] c"hashDelete\00", align 1
@.str.591 = private unnamed_addr constant [11 x i8] c"hashExists\00", align 1
@.str.592 = private unnamed_addr constant [8 x i8] c"hashGet\00", align 1
@.str.593 = private unnamed_addr constant [17 x i8] c"hashInitIterator\00", align 1
@.str.594 = private unnamed_addr constant [24 x i8] c"hashLookupWriteOrCreate\00", align 1
@.str.595 = private unnamed_addr constant [9 x i8] c"hashNext\00", align 1
@.str.596 = private unnamed_addr constant [20 x i8] c"hashReleaseIterator\00", align 1
@.str.597 = private unnamed_addr constant [8 x i8] c"hashSet\00", align 1
@.str.598 = private unnamed_addr constant [18 x i8] c"hashTryConversion\00", align 1
@.str.599 = private unnamed_addr constant [22 x i8] c"hashTryObjectEncoding\00", align 1
@.str.600 = private unnamed_addr constant [12 x i8] c"hdelCommand\00", align 1
@.str.601 = private unnamed_addr constant [15 x i8] c"hexistsCommand\00", align 1
@.str.602 = private unnamed_addr constant [12 x i8] c"hgetCommand\00", align 1
@.str.603 = private unnamed_addr constant [15 x i8] c"hgetallCommand\00", align 1
@.str.604 = private unnamed_addr constant [15 x i8] c"hincrbyCommand\00", align 1
@.str.605 = private unnamed_addr constant [13 x i8] c"hkeysCommand\00", align 1
@.str.606 = private unnamed_addr constant [12 x i8] c"hlenCommand\00", align 1
@.str.607 = private unnamed_addr constant [13 x i8] c"hmgetCommand\00", align 1
@.str.608 = private unnamed_addr constant [13 x i8] c"hmsetCommand\00", align 1
@.str.609 = private unnamed_addr constant [12 x i8] c"hsetCommand\00", align 1
@.str.610 = private unnamed_addr constant [14 x i8] c"hsetnxCommand\00", align 1
@.str.611 = private unnamed_addr constant [14 x i8] c"htNeedsResize\00", align 1
@.str.612 = private unnamed_addr constant [13 x i8] c"hvalsCommand\00", align 1
@.str.613 = private unnamed_addr constant [12 x i8] c"incrCommand\00", align 1
@.str.614 = private unnamed_addr constant [16 x i8] c"incrDecrCommand\00", align 1
@.str.615 = private unnamed_addr constant [13 x i8] c"incrRefCount\00", align 1
@.str.616 = private unnamed_addr constant [14 x i8] c"incrbyCommand\00", align 1
@.str.617 = private unnamed_addr constant [20 x i8] c"incrementallyRehash\00", align 1
@.str.618 = private unnamed_addr constant [12 x i8] c"infoCommand\00", align 1
@.str.619 = private unnamed_addr constant [21 x i8] c"initClientMultiState\00", align 1
@.str.620 = private unnamed_addr constant [11 x i8] c"initServer\00", align 1
@.str.621 = private unnamed_addr constant [17 x i8] c"initServerConfig\00", align 1
@.str.622 = private unnamed_addr constant [28 x i8] c"isStringRepresentableAsLong\00", align 1
@.str.623 = private unnamed_addr constant [12 x i8] c"keysCommand\00", align 1
@.str.624 = private unnamed_addr constant [16 x i8] c"lastsaveCommand\00", align 1
@.str.625 = private unnamed_addr constant [14 x i8] c"lindexCommand\00", align 1
@.str.626 = private unnamed_addr constant [17 x i8] c"listMatchObjects\00", align 1
@.str.627 = private unnamed_addr constant [23 x i8] c"listMatchPubsubPattern\00", align 1
@.str.628 = private unnamed_addr constant [10 x i8] c"ll2string\00", align 1
@.str.629 = private unnamed_addr constant [12 x i8] c"llenCommand\00", align 1
@.str.630 = private unnamed_addr constant [17 x i8] c"loadServerConfig\00", align 1
@.str.631 = private unnamed_addr constant [15 x i8] c"lockThreadedIO\00", align 1
@.str.632 = private unnamed_addr constant [10 x i8] c"lookupKey\00", align 1
@.str.633 = private unnamed_addr constant [19 x i8] c"lookupKeyByPattern\00", align 1
@.str.634 = private unnamed_addr constant [14 x i8] c"lookupKeyRead\00", align 1
@.str.635 = private unnamed_addr constant [21 x i8] c"lookupKeyReadOrReply\00", align 1
@.str.636 = private unnamed_addr constant [15 x i8] c"lookupKeyWrite\00", align 1
@.str.637 = private unnamed_addr constant [22 x i8] c"lookupKeyWriteOrReply\00", align 1
@.str.638 = private unnamed_addr constant [12 x i8] c"lpopCommand\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"lpushCommand\00", align 1
@.str.640 = private unnamed_addr constant [14 x i8] c"lrangeCommand\00", align 1
@.str.641 = private unnamed_addr constant [12 x i8] c"lremCommand\00", align 1
@.str.642 = private unnamed_addr constant [12 x i8] c"lsetCommand\00", align 1
@.str.643 = private unnamed_addr constant [13 x i8] c"ltrimCommand\00", align 1
@.str.644 = private unnamed_addr constant [12 x i8] c"mgetCommand\00", align 1
@.str.645 = private unnamed_addr constant [10 x i8] c"mixDigest\00", align 1
@.str.646 = private unnamed_addr constant [16 x i8] c"mixObjectDigest\00", align 1
@.str.647 = private unnamed_addr constant [15 x i8] c"monitorCommand\00", align 1
@.str.648 = private unnamed_addr constant [12 x i8] c"moveCommand\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"msetCommand\00", align 1
@.str.650 = private unnamed_addr constant [19 x i8] c"msetGenericCommand\00", align 1
@.str.651 = private unnamed_addr constant [14 x i8] c"msetnxCommand\00", align 1
@.str.652 = private unnamed_addr constant [13 x i8] c"multiCommand\00", align 1
@.str.653 = private unnamed_addr constant [4 x i8] c"oom\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"pingCommand\00", align 1
@.str.655 = private unnamed_addr constant [18 x i8] c"popGenericCommand\00", align 1
@.str.656 = private unnamed_addr constant [19 x i8] c"prepareForShutdown\00", align 1
@.str.657 = private unnamed_addr constant [15 x i8] c"processCommand\00", align 1
@.str.658 = private unnamed_addr constant [19 x i8] c"processInputBuffer\00", align 1
@.str.659 = private unnamed_addr constant [18 x i8] c"psubscribeCommand\00", align 1
@.str.660 = private unnamed_addr constant [15 x i8] c"publishCommand\00", align 1
@.str.661 = private unnamed_addr constant [21 x i8] c"pubsubPublishMessage\00", align 1
@.str.662 = private unnamed_addr constant [23 x i8] c"pubsubSubscribeChannel\00", align 1
@.str.663 = private unnamed_addr constant [23 x i8] c"pubsubSubscribePattern\00", align 1
@.str.664 = private unnamed_addr constant [29 x i8] c"pubsubUnsubscribeAllChannels\00", align 1
@.str.665 = private unnamed_addr constant [29 x i8] c"pubsubUnsubscribeAllPatterns\00", align 1
@.str.666 = private unnamed_addr constant [25 x i8] c"pubsubUnsubscribeChannel\00", align 1
@.str.667 = private unnamed_addr constant [25 x i8] c"pubsubUnsubscribePattern\00", align 1
@.str.668 = private unnamed_addr constant [20 x i8] c"punsubscribeCommand\00", align 1
@.str.669 = private unnamed_addr constant [19 x i8] c"pushGenericCommand\00", align 1
@.str.670 = private unnamed_addr constant [30 x i8] c"qsortCompareSetsByCardinality\00", align 1
@.str.671 = private unnamed_addr constant [35 x i8] c"qsortCompareZsetopsrcByCardinality\00", align 1
@.str.672 = private unnamed_addr constant [11 x i8] c"queueIOJob\00", align 1
@.str.673 = private unnamed_addr constant [18 x i8] c"queueMultiCommand\00", align 1
@.str.674 = private unnamed_addr constant [17 x i8] c"randomkeyCommand\00", align 1
@.str.675 = private unnamed_addr constant [17 x i8] c"rdbEncodeInteger\00", align 1
@.str.676 = private unnamed_addr constant [27 x i8] c"rdbGenericLoadStringObject\00", align 1
@.str.677 = private unnamed_addr constant [8 x i8] c"rdbLoad\00", align 1
@.str.678 = private unnamed_addr constant [19 x i8] c"rdbLoadDoubleValue\00", align 1
@.str.679 = private unnamed_addr constant [27 x i8] c"rdbLoadEncodedStringObject\00", align 1
@.str.680 = private unnamed_addr constant [21 x i8] c"rdbLoadIntegerObject\00", align 1
@.str.681 = private unnamed_addr constant [11 x i8] c"rdbLoadLen\00", align 1
@.str.682 = private unnamed_addr constant [23 x i8] c"rdbLoadLzfStringObject\00", align 1
@.str.683 = private unnamed_addr constant [14 x i8] c"rdbLoadObject\00", align 1
@.str.684 = private unnamed_addr constant [20 x i8] c"rdbLoadStringObject\00", align 1
@.str.685 = private unnamed_addr constant [12 x i8] c"rdbLoadTime\00", align 1
@.str.686 = private unnamed_addr constant [12 x i8] c"rdbLoadType\00", align 1
@.str.687 = private unnamed_addr constant [18 x i8] c"rdbRemoveTempFile\00", align 1
@.str.688 = private unnamed_addr constant [8 x i8] c"rdbSave\00", align 1
@.str.689 = private unnamed_addr constant [18 x i8] c"rdbSaveBackground\00", align 1
@.str.690 = private unnamed_addr constant [19 x i8] c"rdbSaveDoubleValue\00", align 1
@.str.691 = private unnamed_addr constant [11 x i8] c"rdbSaveLen\00", align 1
@.str.692 = private unnamed_addr constant [23 x i8] c"rdbSaveLzfStringObject\00", align 1
@.str.693 = private unnamed_addr constant [14 x i8] c"rdbSaveObject\00", align 1
@.str.694 = private unnamed_addr constant [17 x i8] c"rdbSaveRawString\00", align 1
@.str.695 = private unnamed_addr constant [20 x i8] c"rdbSaveStringObject\00", align 1
@.str.696 = private unnamed_addr constant [12 x i8] c"rdbSaveTime\00", align 1
@.str.697 = private unnamed_addr constant [12 x i8] c"rdbSaveType\00", align 1
@.str.698 = private unnamed_addr constant [18 x i8] c"rdbSavedObjectLen\00", align 1
@.str.699 = private unnamed_addr constant [20 x i8] c"rdbSavedObjectPages\00", align 1
@.str.700 = private unnamed_addr constant [22 x i8] c"rdbTryIntegerEncoding\00", align 1
@.str.701 = private unnamed_addr constant [20 x i8] c"readQueryFromClient\00", align 1
@.str.702 = private unnamed_addr constant [9 x i8] c"redisLog\00", align 1
@.str.703 = private unnamed_addr constant [13 x i8] c"removeExpire\00", align 1
@.str.704 = private unnamed_addr constant [14 x i8] c"renameCommand\00", align 1
@.str.705 = private unnamed_addr constant [21 x i8] c"renameGenericCommand\00", align 1
@.str.706 = private unnamed_addr constant [16 x i8] c"renamenxCommand\00", align 1
@.str.707 = private unnamed_addr constant [24 x i8] c"replicationFeedMonitors\00", align 1
@.str.708 = private unnamed_addr constant [22 x i8] c"replicationFeedSlaves\00", align 1
@.str.709 = private unnamed_addr constant [12 x i8] c"resetClient\00", align 1
@.str.710 = private unnamed_addr constant [22 x i8] c"resetServerSaveParams\00", align 1
@.str.711 = private unnamed_addr constant [22 x i8] c"rewriteAppendOnlyFile\00", align 1
@.str.712 = private unnamed_addr constant [32 x i8] c"rewriteAppendOnlyFileBackground\00", align 1
@.str.713 = private unnamed_addr constant [12 x i8] c"rpopCommand\00", align 1
@.str.714 = private unnamed_addr constant [17 x i8] c"rpoplpushcommand\00", align 1
@.str.715 = private unnamed_addr constant [13 x i8] c"rpushCommand\00", align 1
@.str.716 = private unnamed_addr constant [12 x i8] c"saddCommand\00", align 1
@.str.717 = private unnamed_addr constant [12 x i8] c"saveCommand\00", align 1
@.str.718 = private unnamed_addr constant [13 x i8] c"scardCommand\00", align 1
@.str.719 = private unnamed_addr constant [13 x i8] c"sdiffCommand\00", align 1
@.str.720 = private unnamed_addr constant [18 x i8] c"sdiffstoreCommand\00", align 1
@.str.721 = private unnamed_addr constant [18 x i8] c"sdsDictKeyCompare\00", align 1
@.str.722 = private unnamed_addr constant [11 x i8] c"sdscatrepr\00", align 1
@.str.723 = private unnamed_addr constant [12 x i8] c"segvHandler\00", align 1
@.str.724 = private unnamed_addr constant [14 x i8] c"selectCommand\00", align 1
@.str.725 = private unnamed_addr constant [9 x i8] c"selectDb\00", align 1
@.str.726 = private unnamed_addr constant [16 x i8] c"sendBulkToSlave\00", align 1
@.str.727 = private unnamed_addr constant [18 x i8] c"sendReplyToClient\00", align 1
@.str.728 = private unnamed_addr constant [24 x i8] c"sendReplyToClientWritev\00", align 1
@.str.729 = private unnamed_addr constant [11 x i8] c"serverCron\00", align 1
@.str.730 = private unnamed_addr constant [11 x i8] c"setCommand\00", align 1
@.str.731 = private unnamed_addr constant [10 x i8] c"setExpire\00", align 1
@.str.732 = private unnamed_addr constant [18 x i8] c"setGenericCommand\00", align 1
@.str.733 = private unnamed_addr constant [13 x i8] c"setexCommand\00", align 1
@.str.734 = private unnamed_addr constant [13 x i8] c"setnxCommand\00", align 1
@.str.735 = private unnamed_addr constant [19 x i8] c"setupSigSegvAction\00", align 1
@.str.736 = private unnamed_addr constant [16 x i8] c"shutdownCommand\00", align 1
@.str.737 = private unnamed_addr constant [15 x i8] c"sigtermHandler\00", align 1
@.str.738 = private unnamed_addr constant [14 x i8] c"sinterCommand\00", align 1
@.str.739 = private unnamed_addr constant [21 x i8] c"sinterGenericCommand\00", align 1
@.str.740 = private unnamed_addr constant [19 x i8] c"sinterstoreCommand\00", align 1
@.str.741 = private unnamed_addr constant [17 x i8] c"sismemberCommand\00", align 1
@.str.742 = private unnamed_addr constant [15 x i8] c"slaveofCommand\00", align 1
@.str.743 = private unnamed_addr constant [13 x i8] c"smoveCommand\00", align 1
@.str.744 = private unnamed_addr constant [12 x i8] c"sortCommand\00", align 1
@.str.745 = private unnamed_addr constant [12 x i8] c"sortCompare\00", align 1
@.str.746 = private unnamed_addr constant [14 x i8] c"spawnIOThread\00", align 1
@.str.747 = private unnamed_addr constant [12 x i8] c"spopCommand\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"srandmemberCommand\00", align 1
@.str.749 = private unnamed_addr constant [12 x i8] c"sremCommand\00", align 1
@.str.750 = private unnamed_addr constant [16 x i8] c"startAppendOnly\00", align 1
@.str.751 = private unnamed_addr constant [15 x i8] c"stopAppendOnly\00", align 1
@.str.752 = private unnamed_addr constant [16 x i8] c"stringObjectLen\00", align 1
@.str.753 = private unnamed_addr constant [12 x i8] c"stringmatch\00", align 1
@.str.754 = private unnamed_addr constant [15 x i8] c"stringmatchlen\00", align 1
@.str.755 = private unnamed_addr constant [17 x i8] c"subscribeCommand\00", align 1
@.str.756 = private unnamed_addr constant [14 x i8] c"substrCommand\00", align 1
@.str.757 = private unnamed_addr constant [14 x i8] c"sunionCommand\00", align 1
@.str.758 = private unnamed_addr constant [25 x i8] c"sunionDiffGenericCommand\00", align 1
@.str.759 = private unnamed_addr constant [19 x i8] c"sunionstoreCommand\00", align 1
@.str.760 = private unnamed_addr constant [12 x i8] c"syncCommand\00", align 1
@.str.761 = private unnamed_addr constant [9 x i8] c"syncRead\00", align 1
@.str.762 = private unnamed_addr constant [13 x i8] c"syncReadLine\00", align 1
@.str.763 = private unnamed_addr constant [15 x i8] c"syncWithMaster\00", align 1
@.str.764 = private unnamed_addr constant [10 x i8] c"syncWrite\00", align 1
@.str.765 = private unnamed_addr constant [29 x i8] c"tryFreeOneObjectFromFreelist\00", align 1
@.str.766 = private unnamed_addr constant [18 x i8] c"tryObjectEncoding\00", align 1
@.str.767 = private unnamed_addr constant [20 x i8] c"tryResizeHashTables\00", align 1
@.str.768 = private unnamed_addr constant [11 x i8] c"ttlCommand\00", align 1
@.str.769 = private unnamed_addr constant [12 x i8] c"typeCommand\00", align 1
@.str.770 = private unnamed_addr constant [25 x i8] c"unblockClientWaitingData\00", align 1
@.str.771 = private unnamed_addr constant [17 x i8] c"unlockThreadedIO\00", align 1
@.str.772 = private unnamed_addr constant [19 x i8] c"unsubscribeCommand\00", align 1
@.str.773 = private unnamed_addr constant [23 x i8] c"updateDictResizePolicy\00", align 1
@.str.774 = private unnamed_addr constant [26 x i8] c"updateSlavesWaitingBgsave\00", align 1
@.str.775 = private unnamed_addr constant [6 x i8] c"usage\00", align 1
@.str.776 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.777 = private unnamed_addr constant [13 x i8] c"vmCanSwapOut\00", align 1
@.str.778 = private unnamed_addr constant [22 x i8] c"vmCancelThreadedIOJob\00", align 1
@.str.779 = private unnamed_addr constant [22 x i8] c"vmFindContiguousPages\00", align 1
@.str.780 = private unnamed_addr constant [11 x i8] c"vmFreePage\00", align 1
@.str.781 = private unnamed_addr constant [20 x i8] c"vmGenericLoadObject\00", align 1
@.str.782 = private unnamed_addr constant [7 x i8] c"vmInit\00", align 1
@.str.783 = private unnamed_addr constant [13 x i8] c"vmLoadObject\00", align 1
@.str.784 = private unnamed_addr constant [15 x i8] c"vmMarkPageFree\00", align 1
@.str.785 = private unnamed_addr constant [15 x i8] c"vmMarkPageUsed\00", align 1
@.str.786 = private unnamed_addr constant [16 x i8] c"vmMarkPagesFree\00", align 1
@.str.787 = private unnamed_addr constant [16 x i8] c"vmMarkPagesUsed\00", align 1
@.str.788 = private unnamed_addr constant [16 x i8] c"vmPreviewObject\00", align 1
@.str.789 = private unnamed_addr constant [21 x i8] c"vmReadObjectFromSwap\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"vmReopenSwapFile\00", align 1
@.str.791 = private unnamed_addr constant [21 x i8] c"vmSwapObjectBlocking\00", align 1
@.str.792 = private unnamed_addr constant [21 x i8] c"vmSwapObjectThreaded\00", align 1
@.str.793 = private unnamed_addr constant [16 x i8] c"vmSwapOneObject\00", align 1
@.str.794 = private unnamed_addr constant [24 x i8] c"vmSwapOneObjectBlocking\00", align 1
@.str.795 = private unnamed_addr constant [24 x i8] c"vmSwapOneObjectThreaded\00", align 1
@.str.796 = private unnamed_addr constant [25 x i8] c"vmThreadedIOCompletedJob\00", align 1
@.str.797 = private unnamed_addr constant [20 x i8] c"vmWriteObjectOnSwap\00", align 1
@.str.798 = private unnamed_addr constant [21 x i8] c"waitEmptyIOJobsQueue\00", align 1
@.str.799 = private unnamed_addr constant [27 x i8] c"waitForMultipleSwappedKeys\00", align 1
@.str.800 = private unnamed_addr constant [18 x i8] c"waitForSwappedKey\00", align 1
@.str.801 = private unnamed_addr constant [10 x i8] c"xorDigest\00", align 1
@.str.802 = private unnamed_addr constant [16 x i8] c"xorObjectDigest\00", align 1
@.str.803 = private unnamed_addr constant [9 x i8] c"yesnotoi\00", align 1
@.str.804 = private unnamed_addr constant [12 x i8] c"zaddCommand\00", align 1
@.str.805 = private unnamed_addr constant [19 x i8] c"zaddGenericCommand\00", align 1
@.str.806 = private unnamed_addr constant [13 x i8] c"zcardCommand\00", align 1
@.str.807 = private unnamed_addr constant [14 x i8] c"zcountCommand\00", align 1
@.str.808 = private unnamed_addr constant [15 x i8] c"zincrbyCommand\00", align 1
@.str.809 = private unnamed_addr constant [19 x i8] c"zinterstoreCommand\00", align 1
@.str.810 = private unnamed_addr constant [14 x i8] c"zrangeCommand\00", align 1
@.str.811 = private unnamed_addr constant [21 x i8] c"zrangeGenericCommand\00", align 1
@.str.812 = private unnamed_addr constant [21 x i8] c"zrangebyscoreCommand\00", align 1
@.str.813 = private unnamed_addr constant [13 x i8] c"zrankCommand\00", align 1
@.str.814 = private unnamed_addr constant [20 x i8] c"zrankGenericCommand\00", align 1
@.str.815 = private unnamed_addr constant [12 x i8] c"zremCommand\00", align 1
@.str.816 = private unnamed_addr constant [23 x i8] c"zremrangebyrankCommand\00", align 1
@.str.817 = private unnamed_addr constant [24 x i8] c"zremrangebyscoreCommand\00", align 1
@.str.818 = private unnamed_addr constant [17 x i8] c"zrevrangeCommand\00", align 1
@.str.819 = private unnamed_addr constant [16 x i8] c"zrevrankCommand\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"zscoreCommand\00", align 1
@.str.821 = private unnamed_addr constant [10 x i8] c"zslCreate\00", align 1
@.str.822 = private unnamed_addr constant [14 x i8] c"zslCreateNode\00", align 1
@.str.823 = private unnamed_addr constant [10 x i8] c"zslDelete\00", align 1
@.str.824 = private unnamed_addr constant [18 x i8] c"zslFirstWithScore\00", align 1
@.str.825 = private unnamed_addr constant [8 x i8] c"zslFree\00", align 1
@.str.826 = private unnamed_addr constant [12 x i8] c"zslFreeNode\00", align 1
@.str.827 = private unnamed_addr constant [10 x i8] c"zslInsert\00", align 1
@.str.828 = private unnamed_addr constant [15 x i8] c"zslRandomLevel\00", align 1
@.str.829 = private unnamed_addr constant [36 x i8] c"zunionInterBlockClientOnSwappedKeys\00", align 1
@.str.830 = private unnamed_addr constant [26 x i8] c"zunionInterGenericCommand\00", align 1
@.str.831 = private unnamed_addr constant [19 x i8] c"zunionstoreCommand\00", align 1
@.str.832 = private unnamed_addr constant [20 x i8] c"Closing idle client\00", align 1
@.str.833 = private unnamed_addr constant [24 x i8] c"Reading from client: %s\00", align 1
@.str.834 = private unnamed_addr constant [25 x i8] c"Client closed connection\00", align 1
@.str.835 = private unnamed_addr constant [32 x i8] c"Unable to connect to MASTER: %s\00", align 1
@.str.836 = private unnamed_addr constant [10 x i8] c"AUTH %s\0D\0A\00", align 1
@.str.837 = private unnamed_addr constant [29 x i8] c"Unable to AUTH to MASTER: %s\00", align 1
@.str.838 = private unnamed_addr constant [46 x i8] c"I/O error reading auth result from MASTER: %s\00", align 1
@.str.839 = private unnamed_addr constant [59 x i8] c"Cannot AUTH to MASTER, is the masterauth password correct?\00", align 1
@.str.840 = private unnamed_addr constant [8 x i8] c"SYNC \0D\0A\00", align 1
@.str.841 = private unnamed_addr constant [32 x i8] c"I/O error writing to MASTER: %s\00", align 1
@.str.842 = private unnamed_addr constant [45 x i8] c"I/O error reading bulk count from MASTER: %s\00", align 1
@.str.843 = private unnamed_addr constant [95 x i8] c"Bad protocol from MASTER, the first byte is not '$', are you sure the host and port are right?\00", align 1
@.str.844 = private unnamed_addr constant [42 x i8] c"Receiving %ld bytes data dump from MASTER\00", align 1
@.str.845 = private unnamed_addr constant [16 x i8] c"temp-%d.%ld.rdb\00", align 1
@.str.846 = private unnamed_addr constant [70 x i8] c"Opening the temp file needed for MASTER <-> SLAVE synchronization: %s\00", align 1
@.str.847 = private unnamed_addr constant [41 x i8] c"I/O error trying to sync with MASTER: %s\00", align 1
@.str.848 = private unnamed_addr constant [16 x i8] c"connection lost\00", align 1
@.str.849 = private unnamed_addr constant [89 x i8] c"Write error writing to the DB dump file needed for MASTER <-> SLAVE synchrnonization: %s\00", align 1
@.str.850 = private unnamed_addr constant [90 x i8] c"Failed trying to rename the temp DB into dump.rdb in MASTER <-> SLAVE synchronization: %s\00", align 1
@.str.851 = private unnamed_addr constant [62 x i8] c"Failed trying to load the MASTER synchronization DB from disk\00", align 1
@.str.852 = private unnamed_addr constant [46 x i8] c"SIGTERM received, scheduling shutting down...\00", align 1
@.str.853 = private unnamed_addr constant [6 x i8] c"+OK\0D\0A\00", align 1
@.str.854 = private unnamed_addr constant [7 x i8] c"-ERR\0D\0A\00", align 1
@.str.855 = private unnamed_addr constant [7 x i8] c"$0\0D\0A\0D\0A\00", align 1
@.str.856 = private unnamed_addr constant [5 x i8] c":0\0D\0A\00", align 1
@.str.857 = private unnamed_addr constant [5 x i8] c":1\0D\0A\00", align 1
@.str.858 = private unnamed_addr constant [6 x i8] c"$-1\0D\0A\00", align 1
@.str.859 = private unnamed_addr constant [6 x i8] c"*-1\0D\0A\00", align 1
@.str.860 = private unnamed_addr constant [5 x i8] c"*0\0D\0A\00", align 1
@.str.861 = private unnamed_addr constant [8 x i8] c"+PONG\0D\0A\00", align 1
@.str.862 = private unnamed_addr constant [10 x i8] c"+QUEUED\0D\0A\00", align 1
@.str.863 = private unnamed_addr constant [63 x i8] c"-ERR Operation against a key holding the wrong kind of value\0D\0A\00", align 1
@.str.864 = private unnamed_addr constant [19 x i8] c"-ERR no such key\0D\0A\00", align 1
@.str.865 = private unnamed_addr constant [20 x i8] c"-ERR syntax error\0D\0A\00", align 1
@.str.866 = private unnamed_addr constant [51 x i8] c"-ERR source and destination objects are the same\0D\0A\00", align 1
@.str.867 = private unnamed_addr constant [26 x i8] c"-ERR index out of range\0D\0A\00", align 1
@.str.868 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.869 = private unnamed_addr constant [11 x i8] c"select 0\0D\0A\00", align 1
@.str.870 = private unnamed_addr constant [11 x i8] c"select 1\0D\0A\00", align 1
@.str.871 = private unnamed_addr constant [11 x i8] c"select 2\0D\0A\00", align 1
@.str.872 = private unnamed_addr constant [11 x i8] c"select 3\0D\0A\00", align 1
@.str.873 = private unnamed_addr constant [11 x i8] c"select 4\0D\0A\00", align 1
@.str.874 = private unnamed_addr constant [11 x i8] c"select 5\0D\0A\00", align 1
@.str.875 = private unnamed_addr constant [11 x i8] c"select 6\0D\0A\00", align 1
@.str.876 = private unnamed_addr constant [11 x i8] c"select 7\0D\0A\00", align 1
@.str.877 = private unnamed_addr constant [11 x i8] c"select 8\0D\0A\00", align 1
@.str.878 = private unnamed_addr constant [11 x i8] c"select 9\0D\0A\00", align 1
@.str.879 = private unnamed_addr constant [14 x i8] c"$7\0D\0Amessage\0D\0A\00", align 1
@.str.880 = private unnamed_addr constant [15 x i8] c"$8\0D\0Apmessage\0D\0A\00", align 1
@.str.881 = private unnamed_addr constant [16 x i8] c"$9\0D\0Asubscribe\0D\0A\00", align 1
@.str.882 = private unnamed_addr constant [19 x i8] c"$11\0D\0Aunsubscribe\0D\0A\00", align 1
@.str.883 = private unnamed_addr constant [18 x i8] c"$10\0D\0Apsubscribe\0D\0A\00", align 1
@.str.884 = private unnamed_addr constant [20 x i8] c"$12\0D\0Apunsubscribe\0D\0A\00", align 1
@.str.885 = private unnamed_addr constant [5 x i8] c"*3\0D\0A\00", align 1
@.str.886 = private unnamed_addr constant [5 x i8] c"*4\0D\0A\00", align 1
@.str.887 = private unnamed_addr constant [96 x i8] c"SIGTERM received but errors trying to shut down the server, check the logs for more information\00", align 1
@.str.888 = private unnamed_addr constant [51 x i8] c"DB %d: %lld keys (%lld volatile) in %lld slots HT.\00", align 1
@.str.889 = private unnamed_addr constant [51 x i8] c"%d clients connected (%d slaves), %zu bytes in use\00", align 1
@.str.890 = private unnamed_addr constant [36 x i8] c"%d changes in %d seconds. Saving...\00", align 1
@.str.891 = private unnamed_addr constant [93 x i8] c"WARNING: vm-max-memory limit exceeded by more than 10%% but unable to swap more objects out!\00", align 1
@.str.892 = private unnamed_addr constant [24 x i8] c"Connecting to MASTER...\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"MASTER <-> SLAVE sync succeeded\00", align 1
@.str.894 = private unnamed_addr constant [32 x i8] c"Accepting client connection: %s\00", align 1
@.str.895 = private unnamed_addr constant [15 x i8] c"Accepted %s:%d\00", align 1
@.str.896 = private unnamed_addr constant [41 x i8] c"Error allocating resoures for the client\00", align 1
@.str.897 = private unnamed_addr constant [37 x i8] c"-ERR max number of clients reached\0D\0A\00", align 1
@.str.898 = private unnamed_addr constant [19 x i8] c"%s: Out of memory\0A\00", align 1
@.str.899 = private unnamed_addr constant [24 x i8] c"Using '%s' as swap file\00", align 1
@.str.900 = private unnamed_addr constant [4 x i8] c"w+b\00", align 1
@.str.901 = private unnamed_addr constant [39 x i8] c"Can't open the swap file: %s. Exiting.\00", align 1
@.str.902 = private unnamed_addr constant [90 x i8] c"Can't lock the swap file at '%s': %s. Make sure it is not used by another Redis instance.\00", align 1
@.str.903 = private unnamed_addr constant [35 x i8] c"Allocating %lld bytes of swap file\00", align 1
@.str.904 = private unnamed_addr constant [40 x i8] c"Can't ftruncate swap file: %s. Exiting.\00", align 1
@.str.905 = private unnamed_addr constant [33 x i8] c"Swap file allocated with success\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"Allocated %lld bytes page table for %lld pages\00", align 1
@.str.907 = private unnamed_addr constant [47 x i8] c"Unable to intialized VM: pipe(2): %s. Exiting.\00", align 1
@.str.908 = private unnamed_addr constant [57 x i8] c"anetNonBlock(NULL,server.io_ready_pipe_read) != ANET_ERR\00", align 1
@.str.909 = private unnamed_addr constant [6 x i8] c"REDIS\00", align 1
@.str.910 = private unnamed_addr constant [44 x i8] c"Wrong signature trying to load DB from file\00", align 1
@.str.911 = private unnamed_addr constant [35 x i8] c"Can't handle RDB format version %d\00", align 1
@.str.912 = private unnamed_addr constant [103 x i8] c"FATAL: Data file was created with a Redis server configured to handle more than %d databases. Exiting\0A\00", align 1
@.str.913 = private unnamed_addr constant [73 x i8] c"Loading DB, duplicated key (%s) found! Unrecoverable error, exiting now.\00", align 1
@.str.914 = private unnamed_addr constant [65 x i8] c"Short read or OOM loading DB. Unrecoverable error, aborting now.\00", align 1
@.str.915 = private unnamed_addr constant [12 x i8] c"cmd != NULL\00", align 1
@__PRETTY_FUNCTION__.beforeSleep = private unnamed_addr constant [39 x i8] c"void beforeSleep(struct aeEventLoop *)\00", align 1
@switch.table.typeCommand = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.323, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.324, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.325, i64 0, i64 0)], align 8
@switch.table.configGetCommand = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0)], align 8

; Function Attrs: noinline nounwind uwtable
define dso_local void @backgroundSaveDoneHandler(i32 noundef %statloc) local_unnamed_addr #0 !dbg !695 {
entry:
  call void @llvm.dbg.value(metadata i32 %statloc, metadata !697, metadata !DIExpression()), !dbg !700
  %and = lshr i32 %statloc, 8, !dbg !701
  %0 = and i32 %and, 255, !dbg !701
  call void @llvm.dbg.value(metadata i32 %0, metadata !698, metadata !DIExpression()), !dbg !700
  %and1 = and i32 %statloc, 127, !dbg !702
  %conv = shl nuw nsw i32 %and1, 24, !dbg !702
  %sext = add nuw i32 %conv, 16777216, !dbg !702
  %cmp = icmp slt i32 %sext, 33554432, !dbg !702
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !700
  %cmp5 = icmp eq i32 %0, 0
  %or.cond = and i1 %cmp5, %cmp, !dbg !703
  br i1 %or.cond, label %if.then, label %if.else, !dbg !703

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #22, !dbg !705
  %1 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !707, !tbaa !708
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 8, !dbg !716, !tbaa !717
  %sub = sub nsw i64 %1, %2, !dbg !718
  store i64 %sub, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !719, !tbaa !708
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !720
  store i64 %call, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !721, !tbaa !722
  br label %if.end14, !dbg !723

if.else:                                          ; preds = %entry
  %cmp9 = icmp ne i32 %0, 0
  %or.cond17 = and i1 %cmp9, %cmp, !dbg !724
  br i1 %or.cond17, label %if.then11, label %if.else12, !dbg !724

if.then11:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #22, !dbg !726
  br label %if.end14, !dbg !728

if.else12:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 noundef %and1) #22, !dbg !729
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !731, !tbaa !732
  tail call void @rdbRemoveTempFile(i32 noundef %3) #22, !dbg !733
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.else12, %if.then
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !734, !tbaa !732
  %not.cmp5 = xor i1 %cmp5, true, !dbg !735
  %cond = sext i1 %not.cmp5 to i32, !dbg !735
  tail call void @updateSlavesWaitingBgsave(i32 noundef %cond) #22, !dbg !736
  ret void, !dbg !737
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind uwtable
define internal void @redisLog(i32 noundef %level, i8* noundef %fmt, ...) #0 !dbg !738 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %buf = alloca [64 x i8], align 16
  %now = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %level, metadata !744, metadata !DIExpression()), !dbg !766
  call void @llvm.dbg.value(metadata i8* %fmt, metadata !745, metadata !DIExpression()), !dbg !766
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !767
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #24, !dbg !767
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !746, metadata !DIExpression()), !dbg !768
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !769
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #24, !dbg !769
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !761, metadata !DIExpression()), !dbg !770
  %2 = bitcast i64* %now to i8*, !dbg !771
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #24, !dbg !771
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !772, !tbaa !774
  %cmp = icmp sgt i32 %3, %level, !dbg !775
  br i1 %cmp, label %cleanup, label %if.end, !dbg !776

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36), align 8, !dbg !777, !tbaa !778
  %cmp1 = icmp eq i8* %4, null, !dbg !779
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !780

cond.true:                                        ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !781, !tbaa !782
  br label %cond.end, !dbg !780

cond.false:                                       ; preds = %if.end
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef nonnull %4, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0)) #23, !dbg !783
  br label %cond.end, !dbg !780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._IO_FILE* [ %5, %cond.true ], [ %call, %cond.false ], !dbg !780
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %cond, metadata !759, metadata !DIExpression()), !dbg !766
  %tobool.not = icmp eq %struct._IO_FILE* %cond, null, !dbg !784
  br i1 %tobool.not, label %cleanup, label %if.end3, !dbg !786

if.end3:                                          ; preds = %cond.end
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !787
  call void @llvm.va_start(i8* nonnull %0), !dbg !787
  %call5 = call i64 @time(i64* noundef null) #23, !dbg !788
  call void @llvm.dbg.value(metadata i64 %call5, metadata !765, metadata !DIExpression()), !dbg !766
  store i64 %call5, i64* %now, align 8, !dbg !789, !tbaa !790
  call void @llvm.dbg.value(metadata i64* %now, metadata !765, metadata !DIExpression(DW_OP_deref)), !dbg !766
  %call7 = call %struct.tm* @localtime(i64* noundef nonnull %now) #23, !dbg !791
  %call8 = call i64 @strftime(i8* noundef nonnull %1, i64 noundef 64, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), %struct.tm* noundef %call7) #23, !dbg !792
  %call9 = call i32 @getpid() #23, !dbg !793
  %idxprom = sext i32 %level to i64, !dbg !794
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* @.str.29, i64 0, i64 %idxprom, !dbg !794
  %6 = load i8, i8* %arrayidx, align 1, !dbg !794, !tbaa !795
  %conv = sext i8 %6 to i32, !dbg !794
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef nonnull %cond, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i32 noundef %call9, i8* noundef nonnull %1, i32 noundef %conv) #23, !dbg !796
  %call13 = call i32 @vfprintf(%struct._IO_FILE* noundef nonnull %cond, i8* noundef %fmt, %struct.__va_list_tag* noundef nonnull %arraydecay) #23, !dbg !797
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef nonnull %cond, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #23, !dbg !798
  %call15 = call i32 @fflush(%struct._IO_FILE* noundef nonnull %cond) #23, !dbg !799
  call void @llvm.va_end(i8* nonnull %0), !dbg !800
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36), align 8, !dbg !801, !tbaa !778
  %tobool18.not = icmp eq i8* %7, null, !dbg !803
  br i1 %tobool18.not, label %cleanup, label %if.then19, !dbg !804

if.then19:                                        ; preds = %if.end3
  %call20 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %cond) #23, !dbg !805
  br label %cleanup, !dbg !805

cleanup:                                          ; preds = %if.end3, %if.then19, %cond.end, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #24, !dbg !806
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #24, !dbg !806
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #24, !dbg !806
  ret void, !dbg !806
}

; Function Attrs: nounwind
declare !dbg !807 dso_local i64 @time(i64* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @rdbRemoveTempFile(i32 noundef %childpid) #0 !dbg !813 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %childpid, metadata !817, metadata !DIExpression()), !dbg !819
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !820
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !820
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !818, metadata !DIExpression()), !dbg !821
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 256, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i32 noundef %childpid) #23, !dbg !822
  %call2 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !823
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !824
  ret void, !dbg !824
}

; Function Attrs: noinline nounwind uwtable
define internal void @updateSlavesWaitingBgsave(i32 noundef %bgsaveerr) #0 !dbg !825 {
entry:
  %li = alloca %struct.listIter, align 8
  %buf = alloca %struct.stat, align 8
  %li32 = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata i32 %bgsaveerr, metadata !827, metadata !DIExpression()), !dbg !882
  call void @llvm.dbg.value(metadata i32 0, metadata !829, metadata !DIExpression()), !dbg !882
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !883
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !883
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !830, metadata !DIExpression()), !dbg !884
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !885, !tbaa !886
  call void @listRewind(%struct.list* noundef %1, %struct.listIter* noundef nonnull %li) #23, !dbg !887
  call void @llvm.dbg.value(metadata i32 0, metadata !829, metadata !DIExpression()), !dbg !882
  %call67 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !888
  call void @llvm.dbg.value(metadata %struct.listNode* %call67, metadata !828, metadata !DIExpression()), !dbg !882
  %tobool.not68 = icmp eq %struct.listNode* %call67, null, !dbg !889
  br i1 %tobool.not68, label %if.end45, label %while.body.lr.ph, !dbg !889

while.body.lr.ph:                                 ; preds = %entry
  %2 = bitcast %struct.stat* %buf to i8*
  %cmp5.not = icmp eq i32 %bgsaveerr, 0
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %buf, i64 0, i32 8
  br label %while.body, !dbg !889

while.body:                                       ; preds = %while.body.lr.ph, %cleanup24
  %call71 = phi %struct.listNode* [ %call67, %while.body.lr.ph ], [ %call, %cleanup24 ]
  %startbgsave.069 = phi i32 [ 0, %while.body.lr.ph ], [ %startbgsave.2, %cleanup24 ]
  call void @llvm.dbg.value(metadata i32 %startbgsave.069, metadata !829, metadata !DIExpression()), !dbg !882
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call71, i64 0, i32 2, !dbg !890
  %3 = load i8*, i8** %value, align 8, !dbg !890, !tbaa !891
  %4 = bitcast i8* %3 to %struct.redisClient*, !dbg !893
  call void @llvm.dbg.value(metadata %struct.redisClient* %4, metadata !836, metadata !DIExpression()), !dbg !894
  %replstate = getelementptr inbounds i8, i8* %3, i64 100, !dbg !895
  %5 = bitcast i8* %replstate to i32*, !dbg !895
  %6 = load i32, i32* %5, align 4, !dbg !895, !tbaa !896
  switch i32 %6, label %cleanup24 [
    i32 3, label %if.then
    i32 4, label %if.then4
  ], !dbg !899

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 1, metadata !829, metadata !DIExpression()), !dbg !882
  store i32 4, i32* %5, align 4, !dbg !900, !tbaa !896
  br label %cleanup24, !dbg !902

if.then4:                                         ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %2) #24, !dbg !903
  call void @llvm.dbg.declare(metadata %struct.stat* %buf, metadata !838, metadata !DIExpression()), !dbg !904
  br i1 %cmp5.not, label %if.end, label %if.then6, !dbg !905

if.then6:                                         ; preds = %if.then4
  call void @freeClient(%struct.redisClient* noundef nonnull %4) #22, !dbg !906
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0)) #22, !dbg !909
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %2) #24, !dbg !910
  br label %cleanup24

if.end:                                           ; preds = %if.then4
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !911, !tbaa !913
  %call7 = call i32 (i8*, i32, ...) @open64(i8* noundef %7, i32 noundef 0) #23, !dbg !914
  %repldbfd = getelementptr inbounds i8, i8* %3, i64 104, !dbg !915
  %8 = bitcast i8* %repldbfd to i32*, !dbg !915
  store i32 %call7, i32* %8, align 8, !dbg !916, !tbaa !917
  %cmp8 = icmp eq i32 %call7, -1, !dbg !918
  br i1 %cmp8, label %if.then12, label %lor.lhs.false, !dbg !919

lor.lhs.false:                                    ; preds = %if.end
  %call10 = call i32 @fstat64(i32 noundef %call7, %struct.stat* noundef %buf) #23, !dbg !920
  %cmp11 = icmp eq i32 %call10, -1, !dbg !921
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !922

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  call void @freeClient(%struct.redisClient* noundef nonnull %4) #22, !dbg !923
  %call13 = tail call i32* @__errno_location() #25, !dbg !925
  %9 = load i32, i32* %call13, align 4, !dbg !925, !tbaa !926
  %call14 = call i8* @strerror(i32 noundef %9) #23, !dbg !927
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0), i8* noundef %call14) #22, !dbg !928
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %2) #24, !dbg !910
  br label %cleanup24

if.end15:                                         ; preds = %lor.lhs.false
  %repldboff = getelementptr inbounds i8, i8* %3, i64 112, !dbg !929
  %10 = bitcast i8* %repldboff to i64*, !dbg !929
  store i64 0, i64* %10, align 8, !dbg !930, !tbaa !931
  %11 = load i64, i64* %st_size, align 8, !dbg !932, !tbaa !933
  %repldbsize = getelementptr inbounds i8, i8* %3, i64 120, !dbg !936
  %12 = bitcast i8* %repldbsize to i64*, !dbg !936
  store i64 %11, i64* %12, align 8, !dbg !937, !tbaa !938
  store i32 5, i32* %5, align 4, !dbg !939, !tbaa !896
  %13 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !940, !tbaa !941
  %fd = bitcast i8* %3 to i32*, !dbg !942
  %14 = load i32, i32* %fd, align 8, !dbg !942, !tbaa !943
  call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %13, i32 noundef %14, i32 noundef 2) #23, !dbg !944
  %15 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !945, !tbaa !941
  %16 = load i32, i32* %fd, align 8, !dbg !947, !tbaa !943
  %call18 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %15, i32 noundef %16, i32 noundef 2, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @sendBulkToSlave, i8* noundef nonnull %3) #23, !dbg !948
  %cmp19 = icmp eq i32 %call18, -1, !dbg !949
  br i1 %cmp19, label %if.then20, label %cleanup, !dbg !950

if.then20:                                        ; preds = %if.end15
  call void @freeClient(%struct.redisClient* noundef nonnull %4) #22, !dbg !951
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %2) #24, !dbg !910
  br label %cleanup24

cleanup:                                          ; preds = %if.end15
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %2) #24, !dbg !910
  br label %cleanup24

cleanup24:                                        ; preds = %if.then, %while.body, %cleanup, %if.then6, %if.then12, %if.then20
  %startbgsave.2 = phi i32 [ %startbgsave.069, %if.then20 ], [ %startbgsave.069, %if.then12 ], [ %startbgsave.069, %if.then6 ], [ 1, %if.then ], [ %startbgsave.069, %cleanup ], [ %startbgsave.069, %while.body ], !dbg !882
  call void @llvm.dbg.value(metadata i32 %startbgsave.2, metadata !829, metadata !DIExpression()), !dbg !882
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !888
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !828, metadata !DIExpression()), !dbg !882
  %tobool.not = icmp eq %struct.listNode* %call, null, !dbg !889
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !889

while.end:                                        ; preds = %cleanup24
  %tobool27.not = icmp eq i32 %startbgsave.2, 0, !dbg !953
  br i1 %tobool27.not, label %if.end45, label %if.then28, !dbg !954

if.then28:                                        ; preds = %while.end
  %17 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !955, !tbaa !913
  %call29 = call i32 @rdbSaveBackground(i8* noundef %17) #22, !dbg !956
  %cmp30.not = icmp eq i32 %call29, 0, !dbg !957
  br i1 %cmp30.not, label %if.end45, label %if.then31, !dbg !958

if.then31:                                        ; preds = %if.then28
  %18 = bitcast %struct.listIter* %li32 to i8*, !dbg !959
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #24, !dbg !959
  call void @llvm.dbg.declare(metadata %struct.listIter* %li32, metadata !875, metadata !DIExpression()), !dbg !960
  %19 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !961, !tbaa !886
  call void @listRewind(%struct.list* noundef %19, %struct.listIter* noundef nonnull %li32) #23, !dbg !962
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #22, !dbg !963
  %call3472 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li32) #23, !dbg !964
  call void @llvm.dbg.value(metadata %struct.listNode* %call3472, metadata !828, metadata !DIExpression()), !dbg !882
  %tobool35.not73 = icmp eq %struct.listNode* %call3472, null, !dbg !965
  br i1 %tobool35.not73, label %while.end43, label %while.body36, !dbg !965

while.body36:                                     ; preds = %if.then31, %if.end42
  %call3474 = phi %struct.listNode* [ %call34, %if.end42 ], [ %call3472, %if.then31 ]
  %value38 = getelementptr inbounds %struct.listNode, %struct.listNode* %call3474, i64 0, i32 2, !dbg !966
  %20 = bitcast i8** %value38 to %struct.redisClient**, !dbg !966
  %21 = load %struct.redisClient*, %struct.redisClient** %20, align 8, !dbg !966, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %21, metadata !880, metadata !DIExpression()), !dbg !967
  %replstate39 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %21, i64 0, i32 16, !dbg !968
  %22 = load i32, i32* %replstate39, align 4, !dbg !968, !tbaa !896
  %cmp40 = icmp eq i32 %22, 3, !dbg !970
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !971

if.then41:                                        ; preds = %while.body36
  call void @freeClient(%struct.redisClient* noundef nonnull %21) #22, !dbg !972
  br label %if.end42, !dbg !972

if.end42:                                         ; preds = %if.then41, %while.body36
  %call34 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li32) #23, !dbg !964
  call void @llvm.dbg.value(metadata %struct.listNode* %call34, metadata !828, metadata !DIExpression()), !dbg !882
  %tobool35.not = icmp eq %struct.listNode* %call34, null, !dbg !965
  br i1 %tobool35.not, label %while.end43, label %while.body36, !dbg !965, !llvm.loop !973

while.end43:                                      ; preds = %if.end42, %if.then31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #24, !dbg !975
  br label %if.end45, !dbg !976

if.end45:                                         ; preds = %entry, %if.then28, %while.end43, %while.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !977
  ret void, !dbg !977
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @backgroundRewriteDoneHandler(i32 noundef %statloc) local_unnamed_addr #0 !dbg !978 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %statloc, metadata !980, metadata !DIExpression()), !dbg !988
  %and = lshr i32 %statloc, 8, !dbg !989
  %0 = and i32 %and, 255, !dbg !989
  call void @llvm.dbg.value(metadata i32 %0, metadata !981, metadata !DIExpression()), !dbg !988
  %and1 = and i32 %statloc, 127, !dbg !990
  %conv = shl nuw nsw i32 %and1, 24, !dbg !990
  %sext = add nuw i32 %conv, 16777216, !dbg !990
  %cmp = icmp slt i32 %sext, 33554432, !dbg !990
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !982, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !988
  %cmp5 = icmp eq i32 %0, 0
  %or.cond = and i1 %cmp5, %cmp, !dbg !991
  br i1 %or.cond, label %if.then, label %if.else44, !dbg !991

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !992
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1) #24, !dbg !992
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !986, metadata !DIExpression()), !dbg !993
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #22, !dbg !994
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !995, !tbaa !996
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 noundef %2) #23, !dbg !997
  %call8 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 1025) #23, !dbg !998
  call void @llvm.dbg.value(metadata i32 %call8, metadata !983, metadata !DIExpression()), !dbg !999
  %cmp9 = icmp eq i32 %call8, -1, !dbg !1000
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !1002

if.then11:                                        ; preds = %if.then
  %call12 = tail call i32* @__errno_location() #25, !dbg !1003
  %3 = load i32, i32* %call12, align 4, !dbg !1003, !tbaa !926
  %call13 = call i8* @strerror(i32 noundef %3) #23, !dbg !1005
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0), i8* noundef %call13) #22, !dbg !1006
  br label %cleanup, !dbg !1007

if.end:                                           ; preds = %if.then
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !1008, !tbaa !1010
  %call14 = call i64 @sdslen(i8* noundef %4) #23, !dbg !1011
  %call15 = call i64 @write(i32 noundef %call8, i8* noundef %4, i64 noundef %call14) #23, !dbg !1012
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !1013, !tbaa !1010
  %call16 = call i64 @sdslen(i8* noundef %5) #23, !dbg !1014
  %sext70 = shl i64 %call16, 32, !dbg !1015
  %conv18 = ashr exact i64 %sext70, 32, !dbg !1015
  %cmp19.not = icmp eq i64 %call15, %conv18, !dbg !1016
  br i1 %cmp19.not, label %if.end25, label %if.then21, !dbg !1017

if.then21:                                        ; preds = %if.end
  %call22 = tail call i32* @__errno_location() #25, !dbg !1018
  %6 = load i32, i32* %call22, align 4, !dbg !1018, !tbaa !926
  %call23 = call i8* @strerror(i32 noundef %6) #23, !dbg !1020
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([103 x i8], [103 x i8]* @.str.6, i64 0, i64 0), i8* noundef %call23) #22, !dbg !1021
  %call24 = call i32 @close(i32 noundef %call8) #23, !dbg !1022
  br label %cleanup, !dbg !1023

if.end25:                                         ; preds = %if.end
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !1024, !tbaa !1010
  %call26 = call i64 @sdslen(i8* noundef %7) #23, !dbg !1025
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i64 noundef %call26) #22, !dbg !1026
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !1027, !tbaa !1029
  %call28 = call i32 @rename(i8* noundef nonnull %1, i8* noundef %8) #23, !dbg !1030
  %cmp29 = icmp eq i32 %call28, -1, !dbg !1031
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !1032

if.then31:                                        ; preds = %if.end25
  %call32 = tail call i32* @__errno_location() #25, !dbg !1033
  %9 = load i32, i32* %call32, align 4, !dbg !1033, !tbaa !926
  %call33 = call i8* @strerror(i32 noundef %9) #23, !dbg !1035
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8, i64 0, i64 0), i8* noundef %call33) #22, !dbg !1036
  %call34 = call i32 @close(i32 noundef %call8) #23, !dbg !1037
  br label %cleanup, !dbg !1038

if.end35:                                         ; preds = %if.end25
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0)) #22, !dbg !1039
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1040, !tbaa !1042
  %cmp36.not = icmp eq i32 %10, -1, !dbg !1043
  br i1 %cmp36.not, label %if.else, label %if.then38, !dbg !1044

if.then38:                                        ; preds = %if.end35
  %call39 = call i32 @close(i32 noundef %10) #23, !dbg !1045
  store i32 %call8, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1047, !tbaa !1042
  %call40 = call i32 @fsync(i32 noundef %call8) #23, !dbg !1048
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !1049, !tbaa !1050
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0)) #22, !dbg !1051
  br label %cleanup, !dbg !1052

if.else:                                          ; preds = %if.end35
  %call41 = call i32 @close(i32 noundef %call8) #23, !dbg !1053
  br label %cleanup

cleanup:                                          ; preds = %if.then38, %if.else, %if.then31, %if.then21, %if.then11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1) #24, !dbg !1055
  br label %cleanup54

if.else44:                                        ; preds = %entry
  %cmp47 = icmp ne i32 %0, 0
  %or.cond56 = and i1 %cmp47, %cmp, !dbg !1056
  br i1 %or.cond56, label %if.then49, label %if.else50, !dbg !1056

if.then49:                                        ; preds = %if.else44
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0)) #22, !dbg !1058
  br label %cleanup54, !dbg !1060

if.else50:                                        ; preds = %if.else44
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.12, i64 0, i64 0), i32 noundef %and1) #22, !dbg !1061
  br label %cleanup54

cleanup54:                                        ; preds = %cleanup, %if.else50, %if.then49
  call void @llvm.dbg.label(metadata !987), !dbg !1063
  %11 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !1064, !tbaa !1010
  call void @sdsfree(i8* noundef %11) #23, !dbg !1065
  %call55 = call i8* (...) @sdsempty() #23, !dbg !1066
  store i8* %call55, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !1067, !tbaa !1010
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !1068, !tbaa !996
  call void @aofRemoveTempFile(i32 noundef %12) #22, !dbg !1069
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !1070, !tbaa !996
  ret void, !dbg !1071
}

; Function Attrs: nounwind
declare !dbg !1072 dso_local i32 @snprintf(i8* noundef, i64 noundef, i8* noundef, ...) local_unnamed_addr #3

declare !dbg !1077 dso_local i32 @open64(i8* noundef, i32 noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !1081 dso_local i8* @strerror(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare dso_local i32* @__errno_location() local_unnamed_addr #5

declare !dbg !1085 dso_local i64 @write(i32 noundef, i8* noundef, i64 noundef) local_unnamed_addr #4

declare !dbg !1091 dso_local i64 @sdslen(i8* noundef) local_unnamed_addr #4

declare !dbg !1095 dso_local i32 @close(i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !1098 dso_local i32 @rename(i8* noundef, i8* noundef) local_unnamed_addr #3

declare !dbg !1101 dso_local i32 @fsync(i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare !dbg !1102 dso_local void @sdsfree(i8* noundef) local_unnamed_addr #4

declare !dbg !1105 dso_local i8* @sdsempty(...) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @aofRemoveTempFile(i32 noundef %childpid) #0 !dbg !1108 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %childpid, metadata !1110, metadata !DIExpression()), !dbg !1112
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !1113
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !1113
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !1111, metadata !DIExpression()), !dbg !1114
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 256, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 noundef %childpid) #23, !dbg !1115
  %call2 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !1116
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !1117
  ret void, !dbg !1117
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define dso_local void @zslDeleteNode(%struct.zskiplist* nocapture noundef %zsl, %struct.zskiplistNode* noundef readonly %x, %struct.zskiplistNode** nocapture noundef readonly %update) local_unnamed_addr #6 !dbg !1118 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !1125, metadata !DIExpression()), !dbg !1129
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x, metadata !1126, metadata !DIExpression()), !dbg !1129
  call void @llvm.dbg.value(metadata %struct.zskiplistNode** %update, metadata !1127, metadata !DIExpression()), !dbg !1129
  call void @llvm.dbg.value(metadata i32 0, metadata !1128, metadata !DIExpression()), !dbg !1129
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3
  call void @llvm.dbg.value(metadata i32 0, metadata !1128, metadata !DIExpression()), !dbg !1129
  %0 = load i32, i32* %level, align 8, !dbg !1130, !tbaa !1133
  %cmp79 = icmp sgt i32 %0, 0, !dbg !1135
  br i1 %cmp79, label %for.body.lr.ph, label %for.end, !dbg !1136

for.body.lr.ph:                                   ; preds = %entry
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x, i64 0, i32 2
  %forward15 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x, i64 0, i32 0
  call void @llvm.dbg.value(metadata i64 0, metadata !1128, metadata !DIExpression()), !dbg !1129
  %1 = load %struct.zskiplistNode*, %struct.zskiplistNode** %update, align 8, !dbg !1137, !tbaa !782
  %forward.peel = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %1, i64 0, i32 0, !dbg !1140
  %2 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.peel, align 8, !dbg !1140, !tbaa !1141
  %3 = load %struct.zskiplistNode*, %struct.zskiplistNode** %2, align 8, !dbg !1137, !tbaa !782
  %cmp3.peel = icmp eq %struct.zskiplistNode* %3, %x, !dbg !1144
  br i1 %cmp3.peel, label %if.end.peel, label %if.else.peel, !dbg !1145

if.else.peel:                                     ; preds = %for.body.lr.ph
  %span25.peel = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %1, i64 0, i32 2, !dbg !1146
  %4 = load i32*, i32** %span25.peel, align 8, !dbg !1146, !tbaa !1148
  %arrayidx28.peel = getelementptr inbounds i32, i32* %4, i64 -1, !dbg !1149
  %5 = load i32, i32* %arrayidx28.peel, align 4, !dbg !1150, !tbaa !926
  %sub29.peel = add i32 %5, -1, !dbg !1150
  store i32 %sub29.peel, i32* %arrayidx28.peel, align 4, !dbg !1150, !tbaa !926
  %.pre = load i32, i32* %level, align 8, !dbg !1130, !tbaa !1133
  br label %for.inc.peel

if.end.peel:                                      ; preds = %for.body.lr.ph
  %6 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward15, align 8, !dbg !1151, !tbaa !1141
  %7 = load %struct.zskiplistNode*, %struct.zskiplistNode** %6, align 8, !dbg !1153, !tbaa !782
  store %struct.zskiplistNode* %7, %struct.zskiplistNode** %2, align 8, !dbg !1154, !tbaa !782
  br label %for.inc.peel, !dbg !1155

for.inc.peel:                                     ; preds = %if.end.peel, %if.else.peel
  %8 = phi i32 [ %0, %if.end.peel ], [ %.pre, %if.else.peel ], !dbg !1130
  call void @llvm.dbg.value(metadata i64 1, metadata !1128, metadata !DIExpression()), !dbg !1129
  %cmp.peel = icmp sgt i32 %8, 1, !dbg !1135
  br i1 %cmp.peel, label %for.body, label %for.end, !dbg !1136

for.body:                                         ; preds = %for.inc.peel, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %for.inc.peel ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1128, metadata !DIExpression()), !dbg !1129
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %update, i64 %indvars.iv, !dbg !1137
  %9 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !1137, !tbaa !782
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %9, i64 0, i32 0, !dbg !1140
  %10 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !1140, !tbaa !1141
  %arrayidx2 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %10, i64 %indvars.iv, !dbg !1137
  %11 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx2, align 8, !dbg !1137, !tbaa !782
  %cmp3 = icmp eq %struct.zskiplistNode* %11, %x, !dbg !1144
  br i1 %cmp3, label %if.end, label %if.else, !dbg !1145

if.end:                                           ; preds = %for.body
  %12 = load i32*, i32** %span, align 8, !dbg !1156, !tbaa !1148
  %13 = add nuw i64 %indvars.iv, 4294967295
  %14 = and i64 %13, 4294967295
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %14, !dbg !1159
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !1159, !tbaa !926
  %sub8 = add i32 %15, -1, !dbg !1160
  %span11 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %9, i64 0, i32 2, !dbg !1161
  %16 = load i32*, i32** %span11, align 8, !dbg !1161, !tbaa !1148
  %arrayidx14 = getelementptr inbounds i32, i32* %16, i64 %14, !dbg !1162
  %17 = load i32, i32* %arrayidx14, align 4, !dbg !1163, !tbaa !926
  %add = add i32 %sub8, %17, !dbg !1163
  store i32 %add, i32* %arrayidx14, align 4, !dbg !1163, !tbaa !926
  %18 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward15, align 8, !dbg !1151, !tbaa !1141
  %arrayidx17 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %18, i64 %indvars.iv, !dbg !1153
  %19 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx17, align 8, !dbg !1153, !tbaa !782
  store %struct.zskiplistNode* %19, %struct.zskiplistNode** %arrayidx2, align 8, !dbg !1154, !tbaa !782
  br label %for.inc, !dbg !1155

if.else:                                          ; preds = %for.body
  %span25 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %9, i64 0, i32 2, !dbg !1146
  %20 = load i32*, i32** %span25, align 8, !dbg !1146, !tbaa !1148
  %21 = add nsw i64 %indvars.iv, -1, !dbg !1164
  %arrayidx28 = getelementptr inbounds i32, i32* %20, i64 %21, !dbg !1149
  %22 = load i32, i32* %arrayidx28, align 4, !dbg !1150, !tbaa !926
  %sub29 = add i32 %22, -1, !dbg !1150
  store i32 %sub29, i32* %arrayidx28, align 4, !dbg !1150, !tbaa !926
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1165
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1128, metadata !DIExpression()), !dbg !1129
  %23 = load i32, i32* %level, align 8, !dbg !1130, !tbaa !1133
  %24 = sext i32 %23 to i64, !dbg !1135
  %cmp = icmp slt i64 %indvars.iv.next, %24, !dbg !1135
  br i1 %cmp, label %for.body, label %for.end, !dbg !1136, !llvm.loop !1166

for.end:                                          ; preds = %for.inc, %for.inc.peel, %entry
  %.pr = phi i32 [ %0, %entry ], [ %8, %for.inc.peel ], [ %23, %for.inc ]
  %forward31 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x, i64 0, i32 0, !dbg !1169
  %25 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward31, align 8, !dbg !1169, !tbaa !1141
  %26 = load %struct.zskiplistNode*, %struct.zskiplistNode** %25, align 8, !dbg !1171, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %26, null, !dbg !1171
  %backward38 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x, i64 0, i32 1, !dbg !1172
  %27 = load %struct.zskiplistNode*, %struct.zskiplistNode** %backward38, align 8, !dbg !1172, !tbaa !1173
  %tail = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 1, !dbg !1174
  %backward36 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %26, i64 0, i32 1, !dbg !1174
  %tail.sink = select i1 %tobool.not, %struct.zskiplistNode** %tail, %struct.zskiplistNode** %backward36, !dbg !1174
  store %struct.zskiplistNode* %27, %struct.zskiplistNode** %tail.sink, align 8, !dbg !1172, !tbaa !782
  %cmp4183 = icmp sgt i32 %.pr, 1, !dbg !1175
  br i1 %cmp4183, label %land.rhs.lr.ph, label %while.end, !dbg !1176

land.rhs.lr.ph:                                   ; preds = %for.end
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !1177
  %28 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !tbaa !1178
  %forward42 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %28, i64 0, i32 0
  %29 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward42, align 8, !tbaa !1141
  %30 = zext i32 %.pr to i64, !dbg !1176
  br label %land.rhs, !dbg !1176

land.rhs:                                         ; preds = %land.rhs.lr.ph, %while.body
  %indvars.iv88 = phi i64 [ %30, %land.rhs.lr.ph ], [ %indvars.iv.next89, %while.body ]
  %indvars.iv.next89 = add nsw i64 %indvars.iv88, -1, !dbg !1179
  %31 = and i64 %indvars.iv.next89, 4294967295
  %arrayidx46 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %29, i64 %31, !dbg !1180
  %32 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx46, align 8, !dbg !1180, !tbaa !782
  %cmp47 = icmp eq %struct.zskiplistNode* %32, null, !dbg !1181
  br i1 %cmp47, label %while.body, label %while.end, !dbg !1182

while.body:                                       ; preds = %land.rhs
  %indvars = trunc i64 %indvars.iv.next89 to i32, !dbg !1179
  store i32 %indvars, i32* %level, align 8, !dbg !1183, !tbaa !1133
  %cmp41 = icmp ugt i64 %indvars.iv88, 2, !dbg !1175
  br i1 %cmp41, label %land.rhs, label %while.end, !dbg !1176, !llvm.loop !1184

while.end:                                        ; preds = %land.rhs, %while.body, %for.end
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 2, !dbg !1185
  %33 = load i64, i64* %length, align 8, !dbg !1186, !tbaa !1187
  %dec49 = add i64 %33, -1, !dbg !1186
  store i64 %dec49, i64* %length, align 8, !dbg !1186, !tbaa !1187
  ret void, !dbg !1188
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly uwtable
define dso_local %struct.zskiplistNode* @zslGetElementByRank(%struct.zskiplist* nocapture noundef readonly %zsl, i64 noundef %rank) local_unnamed_addr #7 !dbg !1189 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !1193, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata i64 %rank, metadata !1194, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata i64 0, metadata !1196, metadata !DIExpression()), !dbg !1198
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !1199
  %0 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !1199, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %0, metadata !1195, metadata !DIExpression()), !dbg !1198
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !1200
  %1 = load i32, i32* %level, align 8, !dbg !1200, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %1, metadata !1197, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1198
  %2 = sext i32 %1 to i64, !dbg !1202
  br label %for.cond, !dbg !1202

for.cond:                                         ; preds = %while.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.end ], [ %2, %entry ], !dbg !1203
  %x.0 = phi %struct.zskiplistNode* [ %x.1.lcssa, %while.end ], [ %0, %entry ], !dbg !1203
  %traversed.0 = phi i64 [ %traversed.1.lcssa, %while.end ], [ 0, %entry ], !dbg !1204
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1205
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1197, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata i64 %traversed.0, metadata !1196, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.0, metadata !1195, metadata !DIExpression()), !dbg !1198
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !1206
  br i1 %cmp, label %while.cond.preheader, label %cleanup, !dbg !1208

while.cond.preheader:                             ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 %traversed.0, metadata !1196, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.0, metadata !1195, metadata !DIExpression()), !dbg !1198
  %forward48 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.0, i64 0, i32 0, !dbg !1209
  %3 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward48, align 8, !dbg !1209, !tbaa !1141
  %arrayidx49 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %3, i64 %indvars.iv.next, !dbg !1211
  %4 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx49, align 8, !dbg !1211, !tbaa !782
  %tobool.not50 = icmp eq %struct.zskiplistNode* %4, null, !dbg !1211
  br i1 %tobool.not50, label %while.end, label %land.rhs.lr.ph, !dbg !1212

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %cmp1 = icmp ugt i64 %indvars.iv, 1
  %5 = add nuw i64 %indvars.iv, 4294967294
  %6 = and i64 %5, 4294967295
  br label %land.rhs, !dbg !1212

land.rhs:                                         ; preds = %land.rhs.lr.ph, %cond.end15
  %7 = phi %struct.zskiplistNode* [ %4, %land.rhs.lr.ph ], [ %11, %cond.end15 ]
  %traversed.152 = phi i64 [ %traversed.0, %land.rhs.lr.ph ], [ %add18, %cond.end15 ]
  %x.151 = phi %struct.zskiplistNode* [ %x.0, %land.rhs.lr.ph ], [ %7, %cond.end15 ]
  call void @llvm.dbg.value(metadata i64 %traversed.152, metadata !1196, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.151, metadata !1195, metadata !DIExpression()), !dbg !1198
  br i1 %cmp1, label %cond.end, label %cond.end.thread, !dbg !1213

cond.end:                                         ; preds = %land.rhs
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.151, i64 0, i32 2, !dbg !1214
  %8 = load i32*, i32** %span, align 8, !dbg !1214, !tbaa !1148
  %arrayidx4 = getelementptr inbounds i32, i32* %8, i64 %6, !dbg !1215
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !1215, !tbaa !926
  %conv = zext i32 %9 to i64, !dbg !1216
  %add = add i64 %traversed.152, %conv, !dbg !1217
  %cmp5.not = icmp ugt i64 %add, %rank, !dbg !1218
  br i1 %cmp5.not, label %while.end, label %cond.end15, !dbg !1219

cond.end.thread:                                  ; preds = %land.rhs
  %add46 = add i64 %traversed.152, 1, !dbg !1217
  %cmp5.not47 = icmp ugt i64 %add46, %rank, !dbg !1218
  br i1 %cmp5.not47, label %while.end, label %cond.end15, !dbg !1219

cond.end15:                                       ; preds = %cond.end, %cond.end.thread
  %cond16 = phi i32 [ 1, %cond.end.thread ], [ %9, %cond.end ], !dbg !1220
  %conv17 = zext i32 %cond16 to i64, !dbg !1220
  %add18 = add i64 %traversed.152, %conv17, !dbg !1222
  call void @llvm.dbg.value(metadata i64 %add18, metadata !1196, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %7, metadata !1195, metadata !DIExpression()), !dbg !1198
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %7, i64 0, i32 0, !dbg !1209
  %10 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !1209, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %10, i64 %indvars.iv.next, !dbg !1211
  %11 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !1211, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %11, null, !dbg !1211
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !1212, !llvm.loop !1223

while.end:                                        ; preds = %cond.end, %cond.end15, %cond.end.thread, %while.cond.preheader
  %x.1.lcssa = phi %struct.zskiplistNode* [ %x.0, %while.cond.preheader ], [ %x.151, %cond.end.thread ], [ %7, %cond.end15 ], [ %x.151, %cond.end ], !dbg !1198
  %traversed.1.lcssa = phi i64 [ %traversed.0, %while.cond.preheader ], [ %traversed.152, %cond.end.thread ], [ %add18, %cond.end15 ], [ %traversed.152, %cond.end ], !dbg !1198
  %cmp22 = icmp eq i64 %traversed.1.lcssa, %rank, !dbg !1225
  br i1 %cmp22, label %cleanup, label %for.cond, !dbg !1227, !llvm.loop !1228

cleanup:                                          ; preds = %for.cond, %while.end
  %retval.0 = phi %struct.zskiplistNode* [ %x.1.lcssa, %while.end ], [ null, %for.cond ], !dbg !1198
  ret %struct.zskiplistNode* %retval.0, !dbg !1230
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @loadAppendOnlyFile(i8* noundef %filename) local_unnamed_addr #0 !dbg !1231 {
entry:
  %sb = alloca %struct.stat, align 8
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %filename, metadata !1235, metadata !DIExpression()), !dbg !1255
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef %filename, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #23, !dbg !1256
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, metadata !1238, metadata !DIExpression()), !dbg !1255
  %0 = bitcast %struct.stat* %sb to i8*, !dbg !1257
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #24, !dbg !1257
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !1239, metadata !DIExpression()), !dbg !1258
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !1259, !tbaa !1260
  call void @llvm.dbg.value(metadata i32 %1, metadata !1240, metadata !DIExpression()), !dbg !1255
  %call1 = tail call i32 @fileno(%struct._IO_FILE* noundef %call) #23, !dbg !1261
  %call2 = call i32 @fstat64(i32 noundef %call1, %struct.stat* noundef %sb) #23, !dbg !1263
  %cmp = icmp ne i32 %call2, -1, !dbg !1264
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %sb, i64 0, i32 8
  %2 = load i64, i64* %st_size, align 8
  %cmp3 = icmp eq i64 %2, 0
  %or.cond = select i1 %cmp, i1 %cmp3, i1 false, !dbg !1265
  br i1 %or.cond, label %cleanup133, label %if.end, !dbg !1265

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq %struct._IO_FILE* %call, null, !dbg !1266
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !1268

if.then5:                                         ; preds = %if.end
  %call6 = tail call i32* @__errno_location() #25, !dbg !1269
  %3 = load i32, i32* %call6, align 4, !dbg !1269, !tbaa !926
  %call7 = call i8* @strerror(i32 noundef %3) #23, !dbg !1271
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i8* noundef %call7) #22, !dbg !1272
  call void @exit(i32 noundef 1) #26, !dbg !1273
  unreachable, !dbg !1273

if.end8:                                          ; preds = %if.end
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !1274, !tbaa !1260
  %call9 = call fastcc %struct.redisClient* @createFakeClient() #22, !dbg !1275
  call void @llvm.dbg.value(metadata %struct.redisClient* %call9, metadata !1236, metadata !DIExpression()), !dbg !1255
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1276
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !1246, metadata !DIExpression()), !dbg !1277
  %call10203 = call i8* @fgets(i8* noundef nonnull %4, i32 noundef 128, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1278
  %cmp11204 = icmp eq i8* %call10203, null, !dbg !1280
  br i1 %cmp11204, label %if.then12, label %if.end15.lr.ph, !dbg !1281

if.end15.lr.ph:                                   ; preds = %if.end8
  %add.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1
  %argc73 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call9, i64 0, i32 6
  %argv74 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call9, i64 0, i32 4
  %5 = bitcast %struct.redisObject*** %argv74 to i8**
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call9, i64 0, i32 10
  br label %if.end15, !dbg !1281

if.then12:                                        ; preds = %cleanup, %if.end8
  %call13 = call i32 @feof(%struct._IO_FILE* noundef nonnull %call) #23, !dbg !1282
  %tobool.not = icmp eq i32 %call13, 0, !dbg !1282
  br i1 %tobool.not, label %cleanup.thread187, label %while.end119, !dbg !1285

if.end15:                                         ; preds = %if.end15.lr.ph, %cleanup
  %6 = load i8, i8* %4, align 16, !dbg !1286, !tbaa !795
  %cmp16.not = icmp eq i8 %6, 42, !dbg !1288
  br i1 %cmp16.not, label %if.end19, label %fmterr, !dbg !1289

if.end19:                                         ; preds = %if.end15
  %call21 = call i32 @atoi(i8* noundef %add.ptr) #27, !dbg !1290
  call void @llvm.dbg.value(metadata i32 %call21, metadata !1241, metadata !DIExpression()), !dbg !1291
  %conv22 = sext i32 %call21 to i64, !dbg !1292
  %mul = shl nsw i64 %conv22, 3, !dbg !1293
  %call23 = call i8* @zmalloc(i64 noundef %mul) #23, !dbg !1294
  %7 = bitcast i8* %call23 to %struct.redisObject**, !dbg !1294
  call void @llvm.dbg.value(metadata %struct.redisObject** %7, metadata !1245, metadata !DIExpression()), !dbg !1291
  call void @llvm.dbg.value(metadata i32 0, metadata !1243, metadata !DIExpression()), !dbg !1291
  %cmp24197 = icmp sgt i32 %call21, 0, !dbg !1295
  br i1 %cmp24197, label %for.body.preheader, label %for.end, !dbg !1298

for.body.preheader:                               ; preds = %if.end19
  %wide.trip.count = zext i32 %call21 to i64, !dbg !1295
  br label %for.body, !dbg !1298

for.cond:                                         ; preds = %if.end48
  call void @llvm.dbg.value(metadata i32 undef, metadata !1243, metadata !DIExpression()), !dbg !1291
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !1295
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !1298, !llvm.loop !1299

for.body:                                         ; preds = %for.body.preheader, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.cond ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1243, metadata !DIExpression()), !dbg !1291
  %call27 = call i8* @fgets(i8* noundef nonnull %4, i32 noundef 128, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1301
  %cmp28 = icmp eq i8* %call27, null, !dbg !1304
  br i1 %cmp28, label %cleanup.thread187, label %if.end31, !dbg !1305

if.end31:                                         ; preds = %for.body
  %8 = load i8, i8* %4, align 16, !dbg !1306, !tbaa !795
  %cmp34.not = icmp eq i8 %8, 36, !dbg !1308
  br i1 %cmp34.not, label %if.end37, label %fmterr, !dbg !1309

if.end37:                                         ; preds = %if.end31
  %call40 = call i64 @strtol(i8* noundef nonnull %add.ptr, i8** noundef null, i32 noundef 10) #23, !dbg !1310
  call void @llvm.dbg.value(metadata i64 %call40, metadata !1244, metadata !DIExpression()), !dbg !1291
  %call41 = call i8* @sdsnewlen(i8* noundef null, i64 noundef %call40) #23, !dbg !1311
  call void @llvm.dbg.value(metadata i8* %call41, metadata !1250, metadata !DIExpression()), !dbg !1291
  %tobool42.not = icmp eq i64 %call40, 0, !dbg !1312
  br i1 %tobool42.not, label %if.end48, label %land.lhs.true43, !dbg !1314

land.lhs.true43:                                  ; preds = %if.end37
  %call44 = call i64 @fread(i8* noundef %call41, i64 noundef %call40, i64 noundef 1, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1315
  %cmp45 = icmp eq i64 %call44, 0, !dbg !1316
  br i1 %cmp45, label %fmterr, label %if.end48, !dbg !1317

if.end48:                                         ; preds = %land.lhs.true43, %if.end37
  %call49 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call41) #22, !dbg !1318
  %arrayidx50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv, !dbg !1319
  store %struct.redisObject* %call49, %struct.redisObject** %arrayidx50, align 8, !dbg !1320, !tbaa !782
  %call52 = call i64 @fread(i8* noundef nonnull %4, i64 noundef 2, i64 noundef 1, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1321
  %cmp53 = icmp eq i64 %call52, 0, !dbg !1323
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1324
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1243, metadata !DIExpression()), !dbg !1291
  br i1 %cmp53, label %fmterr, label %for.cond, !dbg !1325

for.end:                                          ; preds = %for.cond, %if.end19
  %9 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !1326, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !1327
  %10 = load i8*, i8** %ptr, align 8, !dbg !1327, !tbaa !1328
  %call58 = call fastcc %struct.redisCommand* @lookupCommand(i8* noundef %10) #22, !dbg !1331
  call void @llvm.dbg.value(metadata %struct.redisCommand* %call58, metadata !1251, metadata !DIExpression()), !dbg !1291
  %tobool59.not = icmp eq %struct.redisCommand* %call58, null, !dbg !1332
  br i1 %tobool59.not, label %if.then60, label %if.end63, !dbg !1334

if.then60:                                        ; preds = %for.end
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), i8* noundef %10) #22, !dbg !1335
  call void @exit(i32 noundef 1) #26, !dbg !1337
  unreachable, !dbg !1337

if.end63:                                         ; preds = %for.end
  %flags = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call58, i64 0, i32 3, !dbg !1338
  %11 = load i32, i32* %flags, align 4, !dbg !1338, !tbaa !1340
  %and = and i32 %11, 1, !dbg !1342
  %tobool64.not = icmp eq i32 %and, 0, !dbg !1342
  br i1 %tobool64.not, label %if.end72, label %if.then65, !dbg !1343

if.then65:                                        ; preds = %if.end63
  %sub = add nsw i32 %call21, -1, !dbg !1344
  %idxprom66 = sext i32 %sub to i64, !dbg !1345
  %arrayidx67 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %idxprom66, !dbg !1345
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx67, align 8, !dbg !1345, !tbaa !782
  %call68 = call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %12) #22, !dbg !1346
  store %struct.redisObject* %call68, %struct.redisObject** %arrayidx67, align 8, !dbg !1347, !tbaa !782
  br label %if.end72, !dbg !1348

if.end72:                                         ; preds = %if.then65, %if.end63
  store i32 %call21, i32* %argc73, align 8, !dbg !1349, !tbaa !1350
  store i8* %call23, i8** %5, align 8, !dbg !1351, !tbaa !1352
  %proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call58, i64 0, i32 1, !dbg !1353
  %13 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc, align 8, !dbg !1353, !tbaa !1354
  call void %13(%struct.redisClient* noundef %call9) #23, !dbg !1355
  %14 = load %struct.list*, %struct.list** %reply, align 8, !dbg !1356, !tbaa !1357
  %len76199 = getelementptr inbounds %struct.list, %struct.list* %14, i64 0, i32 5, !dbg !1356
  %15 = load i32, i32* %len76199, align 8, !dbg !1356, !tbaa !1358
  %tobool77.not200 = icmp eq i32 %15, 0, !dbg !1360
  br i1 %tobool77.not200, label %for.cond81.preheader, label %while.body78, !dbg !1360

for.cond81.preheader:                             ; preds = %while.body78, %if.end72
  call void @llvm.dbg.value(metadata i32 0, metadata !1243, metadata !DIExpression()), !dbg !1291
  br i1 %cmp24197, label %for.body84.preheader, label %for.end89, !dbg !1361

for.body84.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count211 = zext i32 %call21 to i64, !dbg !1363
  br label %for.body84, !dbg !1361

while.body78:                                     ; preds = %if.end72, %while.body78
  %16 = phi %struct.list* [ %18, %while.body78 ], [ %14, %if.end72 ]
  %head = getelementptr inbounds %struct.list, %struct.list* %16, i64 0, i32 0, !dbg !1365
  %17 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !1365, !tbaa !1366
  call void @listDelNode(%struct.list* noundef nonnull %16, %struct.listNode* noundef %17) #23, !dbg !1367
  %18 = load %struct.list*, %struct.list** %reply, align 8, !dbg !1356, !tbaa !1357
  %len76 = getelementptr inbounds %struct.list, %struct.list* %18, i64 0, i32 5, !dbg !1356
  %19 = load i32, i32* %len76, align 8, !dbg !1356, !tbaa !1358
  %tobool77.not = icmp eq i32 %19, 0, !dbg !1360
  br i1 %tobool77.not, label %for.cond81.preheader, label %while.body78, !dbg !1360, !llvm.loop !1368

for.body84:                                       ; preds = %for.body84.preheader, %for.body84
  %indvars.iv208 = phi i64 [ 0, %for.body84.preheader ], [ %indvars.iv.next209, %for.body84 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv208, metadata !1243, metadata !DIExpression()), !dbg !1291
  %arrayidx86 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv208, !dbg !1370
  %20 = bitcast %struct.redisObject** %arrayidx86 to i8**, !dbg !1370
  %21 = load i8*, i8** %20, align 8, !dbg !1370, !tbaa !782
  call void @decrRefCount(i8* noundef %21) #22, !dbg !1371
  %indvars.iv.next209 = add nuw nsw i64 %indvars.iv208, 1, !dbg !1372
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next209, metadata !1243, metadata !DIExpression()), !dbg !1291
  %exitcond212.not = icmp eq i64 %indvars.iv.next209, %wide.trip.count211, !dbg !1363
  br i1 %exitcond212.not, label %for.end89, label %for.body84, !dbg !1361, !llvm.loop !1373

for.end89:                                        ; preds = %for.body84, %for.cond81.preheader
  call void @zfree(i8* noundef %call23) #23, !dbg !1375
  call void @llvm.dbg.value(metadata i32 0, metadata !1252, metadata !DIExpression()), !dbg !1291
  %call90 = call i64 @zmalloc_used_memory() #23, !dbg !1376
  %22 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !1378, !tbaa !1379
  %sub91 = sub i64 %call90, %22, !dbg !1380
  %cmp92 = icmp ugt i64 %sub91, 33554432, !dbg !1381
  call void @llvm.dbg.value(metadata i32 undef, metadata !1252, metadata !DIExpression()), !dbg !1291
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1382, !tbaa !1384
  %tobool96 = icmp ne i32 %23, 0, !dbg !1385
  %or.cond137 = select i1 %tobool96, i1 %cmp92, i1 false, !dbg !1386
  br i1 %or.cond137, label %while.cond100, label %cleanup, !dbg !1386

while.cond100:                                    ; preds = %for.end89, %while.body104
  %call101 = call i64 @zmalloc_used_memory() #23, !dbg !1387
  %24 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !1389, !tbaa !1379
  %cmp102 = icmp ugt i64 %call101, %24, !dbg !1390
  br i1 %cmp102, label %while.body104, label %cleanup, !dbg !1391

while.body104:                                    ; preds = %while.cond100
  %call105 = call i32 @vmSwapOneObjectBlocking() #22, !dbg !1392
  %cmp106 = icmp eq i32 %call105, -1, !dbg !1395
  br i1 %cmp106, label %cleanup, label %while.cond100, !dbg !1396, !llvm.loop !1397

cleanup.thread187:                                ; preds = %for.body, %if.then12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1399
  br label %readerr

cleanup:                                          ; preds = %while.body104, %while.cond100, %for.end89
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1399
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1276
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !1246, metadata !DIExpression()), !dbg !1277
  %call10 = call i8* @fgets(i8* noundef nonnull %4, i32 noundef 128, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1278
  %cmp11 = icmp eq i8* %call10, null, !dbg !1280
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !1281

while.end119:                                     ; preds = %if.then12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1399
  %flags120 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call9, i64 0, i32 13, !dbg !1400
  %25 = load i32, i32* %flags120, align 8, !dbg !1400, !tbaa !1402
  %and121 = and i32 %25, 8, !dbg !1403
  %tobool122.not = icmp eq i32 %and121, 0, !dbg !1403
  br i1 %tobool122.not, label %if.end124, label %readerr, !dbg !1404

if.end124:                                        ; preds = %while.end119
  %call125 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call) #23, !dbg !1405
  call void @freeFakeClient(%struct.redisClient* noundef nonnull %call9) #22, !dbg !1406
  store i32 %1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !1407, !tbaa !1260
  br label %cleanup133, !dbg !1408

readerr:                                          ; preds = %cleanup.thread187, %while.end119
  call void @llvm.dbg.label(metadata !1253), !dbg !1409
  %call126 = call i32 @feof(%struct._IO_FILE* noundef nonnull %call) #23, !dbg !1410
  %tobool127.not = icmp eq i32 %call126, 0, !dbg !1410
  br i1 %tobool127.not, label %if.else129, label %if.then128, !dbg !1412

if.then128:                                       ; preds = %readerr
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.16, i64 0, i64 0)) #22, !dbg !1413
  br label %if.end132, !dbg !1415

if.else129:                                       ; preds = %readerr
  %call130 = tail call i32* @__errno_location() #25, !dbg !1416
  %26 = load i32, i32* %call130, align 4, !dbg !1416, !tbaa !926
  %call131 = call i8* @strerror(i32 noundef %26) #23, !dbg !1418
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0), i8* noundef %call131) #22, !dbg !1419
  br label %if.end132

if.end132:                                        ; preds = %if.else129, %if.then128
  call void @exit(i32 noundef 1) #26, !dbg !1420
  unreachable, !dbg !1420

fmterr:                                           ; preds = %if.end15, %if.end31, %land.lhs.true43, %if.end48
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #24, !dbg !1399
  call void @llvm.dbg.label(metadata !1254), !dbg !1421
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i64 0, i64 0)) #22, !dbg !1422
  call void @exit(i32 noundef 1) #26, !dbg !1423
  unreachable, !dbg !1423

cleanup133:                                       ; preds = %entry, %if.end124
  %retval.0 = phi i32 [ 0, %if.end124 ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #24, !dbg !1424
  ret i32 %retval.0, !dbg !1424
}

declare !dbg !1425 dso_local %struct._IO_FILE* @fopen64(i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
declare dso_local i32 @fstat64(i32 noundef, %struct.stat* noundef nonnull) local_unnamed_addr #0

; Function Attrs: nounwind
declare !dbg !1428 dso_local i32 @fileno(%struct._IO_FILE* noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare !dbg !1431 dso_local void @exit(i32 noundef) local_unnamed_addr #8

; Function Attrs: noinline nounwind uwtable
define internal fastcc %struct.redisClient* @createFakeClient() unnamed_addr #0 !dbg !1433 {
entry:
  %call = tail call i8* @zmalloc(i64 noundef 192) #23, !dbg !1438
  %0 = bitcast i8* %call to %struct.redisClient*, !dbg !1438
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !1437, metadata !DIExpression()), !dbg !1439
  %call1 = tail call i32 @selectDb(%struct.redisClient* noundef %0, i32 noundef 0) #22, !dbg !1440
  %fd = bitcast i8* %call to i32*, !dbg !1441
  store i32 -1, i32* %fd, align 8, !dbg !1442, !tbaa !943
  %call2 = tail call i8* (...) @sdsempty() #23, !dbg !1443
  %querybuf = getelementptr inbounds i8, i8* %call, i64 24, !dbg !1444
  %1 = bitcast i8* %querybuf to i8**, !dbg !1444
  store i8* %call2, i8** %1, align 8, !dbg !1445, !tbaa !1446
  %argc = getelementptr inbounds i8, i8* %call, i64 48, !dbg !1447
  %2 = bitcast i8* %argc to i32*, !dbg !1447
  store i32 0, i32* %2, align 8, !dbg !1448, !tbaa !1350
  %argv = getelementptr inbounds i8, i8* %call, i64 32, !dbg !1449
  %3 = bitcast i8* %argv to %struct.redisObject***, !dbg !1449
  store %struct.redisObject** null, %struct.redisObject*** %3, align 8, !dbg !1450, !tbaa !1352
  %flags = getelementptr inbounds i8, i8* %call, i64 88, !dbg !1451
  %4 = bitcast i8* %flags to i32*, !dbg !1451
  store i32 0, i32* %4, align 8, !dbg !1452, !tbaa !1402
  %replstate = getelementptr inbounds i8, i8* %call, i64 100, !dbg !1453
  %5 = bitcast i8* %replstate to i32*, !dbg !1453
  store i32 3, i32* %5, align 4, !dbg !1454, !tbaa !896
  %call3 = tail call %struct.list* @listCreate() #23, !dbg !1455
  %reply = getelementptr inbounds i8, i8* %call, i64 64, !dbg !1456
  %6 = bitcast i8* %reply to %struct.list**, !dbg !1456
  store %struct.list* %call3, %struct.list** %6, align 8, !dbg !1457, !tbaa !1357
  %free = getelementptr inbounds %struct.list, %struct.list* %call3, i64 0, i32 3, !dbg !1458
  store void (i8*)* @decrRefCount, void (i8*)** %free, align 8, !dbg !1458, !tbaa !1459
  %dup = getelementptr inbounds %struct.list, %struct.list* %call3, i64 0, i32 2, !dbg !1460
  store i8* (i8*)* @dupClientReplyValue, i8* (i8*)** %dup, align 8, !dbg !1460, !tbaa !1461
  tail call void @initClientMultiState(%struct.redisClient* noundef %0) #22, !dbg !1462
  ret %struct.redisClient* %0, !dbg !1463
}

declare !dbg !1464 dso_local i8* @fgets(i8* noundef, i32 noundef, %struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !1468 dso_local i32 @feof(%struct._IO_FILE* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline nounwind readonly uwtable willreturn
declare dso_local i32 @atoi(i8* noundef nonnull) local_unnamed_addr #9

declare !dbg !1469 dso_local i8* @zmalloc(i64 noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !1473 dso_local i64 @strtol(i8* noundef, i8** noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !1477 dso_local i8* @sdsnewlen(i8* noundef, i64 noundef) local_unnamed_addr #4

declare !dbg !1480 dso_local i64 @fread(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createObject(i32 noundef %type, i8* noundef %ptr) #0 !dbg !1484 {
entry:
  call void @llvm.dbg.value(metadata i32 %type, metadata !1488, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !1489, metadata !DIExpression()), !dbg !1494
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1495, !tbaa !1384
  %tobool.not = icmp eq i32 %0, 0, !dbg !1497
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !1498

if.then:                                          ; preds = %entry
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1499
  br label %if.end, !dbg !1499

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 8, !dbg !1500, !tbaa !1501
  %len = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 5, !dbg !1500
  %2 = load i32, i32* %len, align 8, !dbg !1500, !tbaa !1358
  %tobool1.not = icmp eq i32 %2, 0, !dbg !1500
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !1502

if.then2:                                         ; preds = %if.end
  %head3 = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 0, !dbg !1503
  %3 = load %struct.listNode*, %struct.listNode** %head3, align 8, !dbg !1503, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %3, metadata !1491, metadata !DIExpression()), !dbg !1504
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %3, i64 0, i32 2, !dbg !1505
  %4 = load i8*, i8** %value, align 8, !dbg !1505, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %4, metadata !1490, metadata !DIExpression()), !dbg !1494
  tail call void @listDelNode(%struct.list* noundef nonnull %1, %struct.listNode* noundef %3) #23, !dbg !1506
  %5 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1507, !tbaa !1384
  %tobool4.not = icmp eq i32 %5, 0, !dbg !1509
  br i1 %tobool4.not, label %if.end15, label %if.then5, !dbg !1510

if.then5:                                         ; preds = %if.then2
  %call6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1511
  br label %if.end15, !dbg !1511

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1512, !tbaa !1384
  %tobool8.not = icmp eq i32 %6, 0, !dbg !1515
  br i1 %tobool8.not, label %if.else12, label %if.then9, !dbg !1516

if.then9:                                         ; preds = %if.else
  %call10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1517
  %call11 = tail call i8* @zmalloc(i64 noundef 40) #23, !dbg !1519
  call void @llvm.dbg.value(metadata i8* %call11, metadata !1490, metadata !DIExpression()), !dbg !1494
  br label %if.end15, !dbg !1520

if.else12:                                        ; preds = %if.else
  %call13 = tail call i8* @zmalloc(i64 noundef 16) #23, !dbg !1521
  call void @llvm.dbg.value(metadata i8* %call13, metadata !1490, metadata !DIExpression()), !dbg !1494
  br label %if.end15

if.end15:                                         ; preds = %if.then2, %if.then5, %if.then9, %if.else12
  %o.0.in = phi i8* [ %call11, %if.then9 ], [ %call13, %if.else12 ], [ %4, %if.then5 ], [ %4, %if.then2 ]
  call void @llvm.dbg.value(metadata i8* %o.0.in, metadata !1490, metadata !DIExpression()), !dbg !1494
  %conv = trunc i32 %type to i8, !dbg !1523
  %7 = getelementptr inbounds i8, i8* %o.0.in, i64 8, !dbg !1524
  store i8 %conv, i8* %7, align 8, !dbg !1525, !tbaa !1526
  %8 = getelementptr inbounds i8, i8* %o.0.in, i64 9, !dbg !1527
  store i8 0, i8* %8, align 1, !dbg !1528, !tbaa !1529
  %ptr17 = bitcast i8* %o.0.in to i8**, !dbg !1530
  store i8* %ptr, i8** %ptr17, align 8, !dbg !1531, !tbaa !1328
  %refcount = getelementptr inbounds i8, i8* %o.0.in, i64 12, !dbg !1532
  %9 = bitcast i8* %refcount to i32*, !dbg !1532
  store i32 1, i32* %9, align 4, !dbg !1533, !tbaa !1534
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1535, !tbaa !1384
  %tobool18.not = icmp eq i32 %10, 0, !dbg !1537
  br i1 %tobool18.not, label %if.end20, label %if.then19, !dbg !1538

if.then19:                                        ; preds = %if.end15
  %11 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !1539, !tbaa !1541
  %atime = getelementptr inbounds i8, i8* %o.0.in, i64 32, !dbg !1542
  %12 = bitcast i8* %atime to i64*, !dbg !1542
  store i64 %11, i64* %12, align 8, !dbg !1543, !tbaa !1544
  %13 = getelementptr inbounds i8, i8* %o.0.in, i64 10, !dbg !1545
  store i8 0, i8* %13, align 2, !dbg !1546, !tbaa !1547
  br label %if.end20, !dbg !1548

if.end20:                                         ; preds = %if.then19, %if.end15
  %o.0 = bitcast i8* %o.0.in to %struct.redisObject*, !dbg !1549
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !1490, metadata !DIExpression()), !dbg !1494
  ret %struct.redisObject* %o.0, !dbg !1550
}

; Function Attrs: nofree noinline nounwind readonly uwtable
define internal fastcc %struct.redisCommand* @lookupCommand(i8* noundef readonly %name) unnamed_addr #10 !dbg !1551 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !1555, metadata !DIExpression()), !dbg !1557
  call void @llvm.dbg.value(metadata i32 0, metadata !1556, metadata !DIExpression()), !dbg !1557
  %0 = load i8*, i8** getelementptr inbounds ([107 x %struct.redisCommand], [107 x %struct.redisCommand]* @cmdTable, i64 0, i64 0, i32 0), align 16, !dbg !1558, !tbaa !1559
  %cmp.not11 = icmp eq i8* %0, null, !dbg !1560
  br i1 %cmp.not11, label %cleanup, label %while.body.preheader, !dbg !1561

while.body.preheader:                             ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !1556, metadata !DIExpression()), !dbg !1557
  %call16 = tail call i32 @strcasecmp(i8* noundef %name, i8* noundef nonnull %0) #27, !dbg !1562
  %tobool.not17 = icmp eq i32 %call16, 0, !dbg !1562
  call void @llvm.dbg.value(metadata i64 1, metadata !1556, metadata !DIExpression()), !dbg !1557
  br i1 %tobool.not17, label %cleanup, label %while.cond, !dbg !1565

while.cond:                                       ; preds = %while.body.preheader, %while.body
  %indvars.iv.next18 = phi i64 [ %indvars.iv.next, %while.body ], [ 1, %while.body.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next18, metadata !1556, metadata !DIExpression()), !dbg !1557
  %arrayidx = getelementptr inbounds [107 x %struct.redisCommand], [107 x %struct.redisCommand]* @cmdTable, i64 0, i64 %indvars.iv.next18, !dbg !1566
  %name1 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %arrayidx, i64 0, i32 0, !dbg !1558
  %1 = load i8*, i8** %name1, align 16, !dbg !1558, !tbaa !1559
  %cmp.not = icmp eq i8* %1, null, !dbg !1560
  br i1 %cmp.not, label %cleanup, label %while.body, !dbg !1561, !llvm.loop !1567

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next18, metadata !1556, metadata !DIExpression()), !dbg !1557
  %call = tail call i32 @strcasecmp(i8* noundef %name, i8* noundef nonnull %1) #27, !dbg !1562
  %tobool.not = icmp eq i32 %call, 0, !dbg !1562
  %indvars.iv.next = add nuw i64 %indvars.iv.next18, 1, !dbg !1569
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1556, metadata !DIExpression()), !dbg !1557
  br i1 %tobool.not, label %cleanup, label %while.cond, !dbg !1565, !llvm.loop !1567

cleanup:                                          ; preds = %while.cond, %while.body, %while.body.preheader, %entry
  %retval.0 = phi %struct.redisCommand* [ null, %entry ], [ getelementptr inbounds ([107 x %struct.redisCommand], [107 x %struct.redisCommand]* @cmdTable, i64 0, i64 0), %while.body.preheader ], [ %arrayidx, %while.body ], [ null, %while.cond ], !dbg !1557
  ret %struct.redisCommand* %retval.0, !dbg !1570
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %o) #0 !dbg !1571 {
entry:
  %value = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !1575, metadata !DIExpression()), !dbg !1578
  %0 = bitcast i64* %value to i8*, !dbg !1579
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !1579
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !1580
  %1 = load i8*, i8** %ptr, align 8, !dbg !1580, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %1, metadata !1577, metadata !DIExpression()), !dbg !1578
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !1581
  %2 = load i8, i8* %encoding, align 1, !dbg !1581, !tbaa !1529
  %cmp.not = icmp eq i8 %2, 0, !dbg !1583
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !1584

if.end:                                           ; preds = %entry
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 5, !dbg !1585
  %3 = load i32, i32* %refcount, align 4, !dbg !1585, !tbaa !1534
  %cmp2 = icmp sgt i32 %3, 1, !dbg !1587
  br i1 %cmp2, label %cleanup, label %if.end5, !dbg !1588

if.end5:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !1589
  %4 = load i8, i8* %type, align 8, !dbg !1589, !tbaa !1526
  %cmp7 = icmp eq i8 %4, 0, !dbg !1589
  br i1 %cmp7, label %cond.end, label %cond.false, !dbg !1589

cond.false:                                       ; preds = %if.end5
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3183) #22, !dbg !1589
  tail call void @_exit(i32 noundef 1) #26, !dbg !1589
  unreachable, !dbg !1589

cond.end:                                         ; preds = %if.end5
  call void @llvm.dbg.value(metadata i64* %value, metadata !1576, metadata !DIExpression(DW_OP_deref)), !dbg !1578
  %call = call i32 @isStringRepresentableAsLong(i8* noundef %1, i64* noundef nonnull %value) #22, !dbg !1590
  %cmp9 = icmp eq i32 %call, -1, !dbg !1592
  br i1 %cmp9, label %cleanup, label %if.end12, !dbg !1593

if.end12:                                         ; preds = %cond.end
  %5 = load i64, i64* %value, align 8, !dbg !1594, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %5, metadata !1576, metadata !DIExpression()), !dbg !1578
  %6 = icmp ult i64 %5, 10000, !dbg !1596
  br i1 %6, label %land.lhs.true17, label %if.else, !dbg !1596

land.lhs.true17:                                  ; preds = %if.end12
  %call18 = tail call i64 @pthread_self() #25, !dbg !1597
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 0), align 8, !dbg !1598, !tbaa !1599
  %call19 = call i32 @pthread_equal(i64 noundef %call18, i64 noundef %7) #25, !dbg !1600
  %tobool.not = icmp eq i32 %call19, 0, !dbg !1600
  br i1 %tobool.not, label %if.else, label %if.then20, !dbg !1601

if.then20:                                        ; preds = %land.lhs.true17
  %8 = bitcast %struct.redisObject* %o to i8*, !dbg !1602
  call void @decrRefCount(i8* noundef %8) #22, !dbg !1604
  %9 = load i64, i64* %value, align 8, !dbg !1605, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %9, metadata !1576, metadata !DIExpression()), !dbg !1578
  %arrayidx = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 37, i64 %9, !dbg !1606
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !1606, !tbaa !782
  call void @incrRefCount(%struct.redisObject* noundef %10) #22, !dbg !1607
  %11 = load i64, i64* %value, align 8, !dbg !1608, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %11, metadata !1576, metadata !DIExpression()), !dbg !1578
  %arrayidx21 = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 37, i64 %11, !dbg !1609
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx21, align 8, !dbg !1609, !tbaa !782
  br label %cleanup, !dbg !1610

if.else:                                          ; preds = %land.lhs.true17, %if.end12
  store i8 1, i8* %encoding, align 1, !dbg !1611, !tbaa !1529
  %13 = load i8*, i8** %ptr, align 8, !dbg !1613, !tbaa !1328
  call void @sdsfree(i8* noundef %13) #23, !dbg !1614
  %14 = load i64, i64* %value, align 8, !dbg !1615, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %14, metadata !1576, metadata !DIExpression()), !dbg !1578
  %15 = inttoptr i64 %14 to i8*, !dbg !1616
  store i8* %15, i8** %ptr, align 8, !dbg !1617, !tbaa !1328
  br label %cleanup, !dbg !1618

cleanup:                                          ; preds = %cond.end, %if.end, %entry, %if.else, %if.then20
  %retval.0 = phi %struct.redisObject* [ %12, %if.then20 ], [ %o, %if.else ], [ %o, %entry ], [ %o, %if.end ], [ %o, %cond.end ], !dbg !1578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !1619
  ret %struct.redisObject* %retval.0, !dbg !1619
}

declare !dbg !1620 dso_local void @listDelNode(%struct.list* noundef, %struct.listNode* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @decrRefCount(i8* noundef %obj) #0 !dbg !1623 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj, metadata !1625, metadata !DIExpression()), !dbg !1627
  %0 = bitcast i8* %obj to %struct.redisObject*, !dbg !1628
  call void @llvm.dbg.value(metadata %struct.redisObject* %0, metadata !1626, metadata !DIExpression()), !dbg !1627
  %refcount = getelementptr inbounds i8, i8* %obj, i64 12, !dbg !1629
  %1 = bitcast i8* %refcount to i32*, !dbg !1629
  %2 = load i32, i32* %1, align 4, !dbg !1629, !tbaa !1534
  %cmp = icmp slt i32 %2, 1, !dbg !1631
  br i1 %cmp, label %if.then, label %if.end, !dbg !1632

if.then:                                          ; preds = %entry
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.410, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3029) #22, !dbg !1633
  tail call void @_exit(i32 noundef 1) #26, !dbg !1633
  unreachable, !dbg !1633

if.end:                                           ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1634, !tbaa !1384
  %tobool.not = icmp eq i32 %3, 0, !dbg !1636
  br i1 %tobool.not, label %if.end26, label %land.lhs.true, !dbg !1637

land.lhs.true:                                    ; preds = %if.end
  %4 = getelementptr inbounds i8, i8* %obj, i64 10, !dbg !1638
  %5 = load i8, i8* %4, align 2, !dbg !1638, !tbaa !1547
  switch i8 %5, label %if.end26.thread [
    i8 3, label %if.then12
    i8 1, label %if.end13
  ], !dbg !1639

if.then12:                                        ; preds = %land.lhs.true
  tail call void @vmCancelThreadedIOJob(%struct.redisObject* noundef nonnull %0) #22, !dbg !1640
  br label %if.end13, !dbg !1640

if.end13:                                         ; preds = %land.lhs.true, %if.then12
  %6 = getelementptr inbounds i8, i8* %obj, i64 8, !dbg !1643
  %7 = load i8, i8* %6, align 8, !dbg !1643, !tbaa !1526
  %cmp15 = icmp eq i8 %7, 0, !dbg !1643
  br i1 %cmp15, label %cond.end, label %cond.false, !dbg !1643

cond.false:                                       ; preds = %if.end13
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3036) #22, !dbg !1643
  tail call void @_exit(i32 noundef 1) #26, !dbg !1643
  unreachable, !dbg !1643

cond.end:                                         ; preds = %if.end13
  tail call void @freeStringObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1644
  %vm = getelementptr inbounds i8, i8* %obj, i64 16, !dbg !1645
  %page = bitcast i8* %vm to i64*, !dbg !1646
  %8 = load i64, i64* %page, align 8, !dbg !1646, !tbaa !1647
  %usedpages = getelementptr inbounds i8, i8* %obj, i64 24, !dbg !1648
  %9 = bitcast i8* %usedpages to i64*, !dbg !1648
  %10 = load i64, i64* %9, align 8, !dbg !1648, !tbaa !1649
  tail call void @vmMarkPagesFree(i64 noundef %8, i64 noundef %10) #22, !dbg !1650
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1651
  %11 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 8, !dbg !1652, !tbaa !1501
  %len = getelementptr inbounds %struct.list, %struct.list* %11, i64 0, i32 5, !dbg !1652
  %12 = load i32, i32* %len, align 8, !dbg !1652, !tbaa !1358
  %cmp18 = icmp ugt i32 %12, 1000000, !dbg !1654
  br i1 %cmp18, label %if.then23, label %lor.lhs.false20, !dbg !1655

lor.lhs.false20:                                  ; preds = %cond.end
  %call21 = tail call %struct.list* @listAddNodeHead(%struct.list* noundef nonnull %11, i8* noundef nonnull %obj) #23, !dbg !1656
  %tobool22.not = icmp eq %struct.list* %call21, null, !dbg !1656
  br i1 %tobool22.not, label %if.then23, label %if.end24, !dbg !1657

if.then23:                                        ; preds = %lor.lhs.false20, %cond.end
  tail call void @zfree(i8* noundef nonnull %obj) #23, !dbg !1658
  br label %if.end24, !dbg !1658

if.end24:                                         ; preds = %if.then23, %lor.lhs.false20
  %call25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1659
  %13 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !1660, !tbaa !1661
  %dec = add i64 %13, -1, !dbg !1660
  store i64 %dec, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !1660, !tbaa !1661
  br label %cleanup, !dbg !1662

if.end26:                                         ; preds = %if.end
  %dec28 = add nsw i32 %2, -1, !dbg !1663
  store i32 %dec28, i32* %1, align 4, !dbg !1663, !tbaa !1534
  %cmp29 = icmp eq i32 %dec28, 0, !dbg !1665
  br i1 %cmp29, label %if.end39, label %cleanup, !dbg !1666

if.end26.thread:                                  ; preds = %land.lhs.true
  %dec2885 = add nsw i32 %2, -1, !dbg !1663
  store i32 %dec2885, i32* %1, align 4, !dbg !1663, !tbaa !1534
  %cmp2986 = icmp eq i32 %dec2885, 0, !dbg !1665
  br i1 %cmp2986, label %land.lhs.true33, label %cleanup, !dbg !1666

land.lhs.true33:                                  ; preds = %if.end26.thread
  %cmp36 = icmp eq i8 %5, 2, !dbg !1667
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !1670

if.then38:                                        ; preds = %land.lhs.true33
  tail call void @vmCancelThreadedIOJob(%struct.redisObject* noundef nonnull %0) #22, !dbg !1671
  br label %if.end39, !dbg !1671

if.end39:                                         ; preds = %if.end26, %if.then38, %land.lhs.true33
  %14 = getelementptr inbounds i8, i8* %obj, i64 8, !dbg !1672
  %15 = load i8, i8* %14, align 8, !dbg !1672, !tbaa !1526
  switch i8 %15, label %sw.default [
    i8 0, label %sw.bb
    i8 1, label %sw.bb42
    i8 2, label %sw.bb43
    i8 3, label %sw.bb44
    i8 4, label %sw.bb45
  ], !dbg !1673

sw.bb:                                            ; preds = %if.end39
  tail call void @freeStringObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1674
  br label %sw.epilog, !dbg !1676

sw.bb42:                                          ; preds = %if.end39
  tail call void @freeListObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1677
  br label %sw.epilog, !dbg !1678

sw.bb43:                                          ; preds = %if.end39
  tail call void @freeSetObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1679
  br label %sw.epilog, !dbg !1680

sw.bb44:                                          ; preds = %if.end39
  tail call void @freeZsetObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1681
  br label %sw.epilog, !dbg !1682

sw.bb45:                                          ; preds = %if.end39
  tail call void @freeHashObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !1683
  br label %sw.epilog, !dbg !1684

sw.default:                                       ; preds = %if.end39
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3057) #22, !dbg !1685
  tail call void @_exit(i32 noundef 1) #26, !dbg !1685
  unreachable, !dbg !1685

sw.epilog:                                        ; preds = %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb42, %sw.bb
  %16 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1686, !tbaa !1384
  %tobool46.not = icmp eq i32 %16, 0, !dbg !1688
  br i1 %tobool46.not, label %if.end49, label %if.then47, !dbg !1689

if.then47:                                        ; preds = %sw.epilog
  %call48 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1690
  br label %if.end49, !dbg !1690

if.end49:                                         ; preds = %if.then47, %sw.epilog
  %17 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 8, !dbg !1691, !tbaa !1501
  %len50 = getelementptr inbounds %struct.list, %struct.list* %17, i64 0, i32 5, !dbg !1691
  %18 = load i32, i32* %len50, align 8, !dbg !1691, !tbaa !1358
  %cmp51 = icmp ugt i32 %18, 1000000, !dbg !1693
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !1694

lor.lhs.false53:                                  ; preds = %if.end49
  %call54 = tail call %struct.list* @listAddNodeHead(%struct.list* noundef nonnull %17, i8* noundef nonnull %obj) #23, !dbg !1695
  %tobool55.not = icmp eq %struct.list* %call54, null, !dbg !1695
  br i1 %tobool55.not, label %if.then56, label %if.end57, !dbg !1696

if.then56:                                        ; preds = %lor.lhs.false53, %if.end49
  tail call void @zfree(i8* noundef nonnull %obj) #23, !dbg !1697
  br label %if.end57, !dbg !1697

if.end57:                                         ; preds = %if.then56, %lor.lhs.false53
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !1698, !tbaa !1384
  %tobool58.not = icmp eq i32 %19, 0, !dbg !1700
  br i1 %tobool58.not, label %cleanup, label %if.then59, !dbg !1701

if.then59:                                        ; preds = %if.end57
  %call60 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !1702
  br label %cleanup, !dbg !1702

cleanup:                                          ; preds = %if.end26.thread, %if.end26, %if.then59, %if.end57, %if.end24
  ret void, !dbg !1703
}

declare !dbg !1704 dso_local void @zfree(i8* noundef) #4

declare !dbg !1705 dso_local i64 @zmalloc_used_memory() local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmSwapOneObjectBlocking() #0 !dbg !1708 {
entry:
  %call = tail call i32 @vmSwapOneObject(i32 noundef 0) #22, !dbg !1711
  ret i32 %call, !dbg !1712
}

declare !dbg !1713 dso_local i32 @fclose(%struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @freeFakeClient(%struct.redisClient* noundef %c) #0 !dbg !1714 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !1718, metadata !DIExpression()), !dbg !1719
  %querybuf = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 3, !dbg !1720
  %0 = load i8*, i8** %querybuf, align 8, !dbg !1720, !tbaa !1446
  tail call void @sdsfree(i8* noundef %0) #23, !dbg !1721
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 10, !dbg !1722
  %1 = load %struct.list*, %struct.list** %reply, align 8, !dbg !1722, !tbaa !1357
  tail call void @listRelease(%struct.list* noundef %1) #23, !dbg !1723
  tail call void @freeClientMultiState(%struct.redisClient* noundef %c) #22, !dbg !1724
  %2 = bitcast %struct.redisClient* %c to i8*, !dbg !1725
  tail call void @zfree(i8* noundef %2) #23, !dbg !1726
  ret void, !dbg !1727
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @linuxOvercommitMemoryValue() local_unnamed_addr #0 !dbg !1728 {
entry:
  %buf = alloca [64 x i8], align 16
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #23, !dbg !1732
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, metadata !1730, metadata !DIExpression()), !dbg !1733
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !1734
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #24, !dbg !1734
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !1731, metadata !DIExpression()), !dbg !1735
  %tobool.not = icmp eq %struct._IO_FILE* %call, null, !dbg !1736
  br i1 %tobool.not, label %cleanup, label %if.end, !dbg !1738

if.end:                                           ; preds = %entry
  %call1 = call i8* @fgets(i8* noundef nonnull %0, i32 noundef 64, %struct._IO_FILE* noundef nonnull %call) #23, !dbg !1739
  %cmp = icmp eq i8* %call1, null, !dbg !1741
  %call3 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call) #23, !dbg !1733
  br i1 %cmp, label %cleanup, label %if.end4, !dbg !1742

if.end4:                                          ; preds = %if.end
  %call7 = call i32 @atoi(i8* noundef %0) #27, !dbg !1743
  br label %cleanup, !dbg !1744

cleanup:                                          ; preds = %if.end, %entry, %if.end4
  %retval.0 = phi i32 [ %call7, %if.end4 ], [ -1, %entry ], [ -1, %if.end ], !dbg !1733
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #24, !dbg !1745
  ret i32 %retval.0, !dbg !1745
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @linuxOvercommitMemoryWarning() local_unnamed_addr #0 !dbg !1746 {
entry:
  %call = tail call i32 @linuxOvercommitMemoryValue() #22, !dbg !1749
  %cmp = icmp eq i32 %call, 0, !dbg !1751
  br i1 %cmp, label %if.then, label %if.end, !dbg !1752

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([253 x i8], [253 x i8]* @.str.20, i64 0, i64 0)) #22, !dbg !1753
  br label %if.end, !dbg !1755

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1756
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 noundef %argc, i8** nocapture noundef readonly %argv) local_unnamed_addr #0 !dbg !1757 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !1761, metadata !DIExpression()), !dbg !1764
  call void @llvm.dbg.value(metadata i8** %argv, metadata !1762, metadata !DIExpression()), !dbg !1764
  tail call void @initServerConfig() #22, !dbg !1765
  %cmp = icmp eq i32 %argc, 2, !dbg !1766
  br i1 %cmp, label %if.then, label %if.else, !dbg !1768

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !1769
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !1769, !tbaa !782
  %call = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #27, !dbg !1772
  %cmp1 = icmp eq i32 %call, 0, !dbg !1773
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !1774

lor.lhs.false:                                    ; preds = %if.then
  %call3 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #27, !dbg !1775
  %cmp4 = icmp eq i32 %call3, 0, !dbg !1776
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !1777

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  tail call void @version() #22, !dbg !1778
  unreachable, !dbg !1778

if.end:                                           ; preds = %lor.lhs.false
  %call7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)) #27, !dbg !1779
  %cmp8 = icmp eq i32 %call7, 0, !dbg !1781
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !1782

if.then9:                                         ; preds = %if.end
  tail call void @usage() #22, !dbg !1783
  unreachable, !dbg !1783

if.end10:                                         ; preds = %if.end
  tail call void @resetServerSaveParams() #22, !dbg !1784
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !1785, !tbaa !782
  tail call void @loadServerConfig(i8* noundef %1) #22, !dbg !1786
  br label %if.end16, !dbg !1787

if.else:                                          ; preds = %entry
  %cmp12 = icmp sgt i32 %argc, 2, !dbg !1788
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !1790

if.then13:                                        ; preds = %if.else
  tail call void @usage() #22, !dbg !1791
  unreachable, !dbg !1793

if.else14:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.24, i64 0, i64 0)) #22, !dbg !1794
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.end10
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !1796, !tbaa !1798
  %tobool.not = icmp eq i32 %2, 0, !dbg !1799
  br i1 %tobool.not, label %if.end18, label %if.then17, !dbg !1800

if.then17:                                        ; preds = %if.end16
  tail call void @daemonize() #22, !dbg !1801
  br label %if.end18, !dbg !1801

if.end18:                                         ; preds = %if.then17, %if.end16
  tail call void @initServer() #22, !dbg !1802
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0)) #22, !dbg !1803
  tail call void @linuxOvercommitMemoryWarning() #22, !dbg !1804
  %call19 = tail call i64 @time(i64* noundef null) #23, !dbg !1805
  call void @llvm.dbg.value(metadata i64 %call19, metadata !1763, metadata !DIExpression()), !dbg !1764
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !1806, !tbaa !1260
  %tobool20.not = icmp eq i32 %3, 0, !dbg !1808
  br i1 %tobool20.not, label %if.else27, label %if.then21, !dbg !1809

if.then21:                                        ; preds = %if.end18
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !1810, !tbaa !1029
  %call22 = tail call i32 @loadAppendOnlyFile(i8* noundef %4) #22, !dbg !1813
  %cmp23 = icmp eq i32 %call22, 0, !dbg !1814
  br i1 %cmp23, label %if.end34.sink.split, label %if.end34, !dbg !1815

if.else27:                                        ; preds = %if.end18
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !1816, !tbaa !913
  %call28 = tail call i32 @rdbLoad(i8* noundef %5) #22, !dbg !1819
  %cmp29 = icmp eq i32 %call28, 0, !dbg !1820
  br i1 %cmp29, label %if.end34.sink.split, label %if.end34, !dbg !1821

if.end34.sink.split:                              ; preds = %if.else27, %if.then21
  %.sink = phi i8* [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0), %if.then21 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), %if.else27 ]
  %call31 = tail call i64 @time(i64* noundef null) #23, !dbg !1822
  %sub32 = sub nsw i64 %call31, %call19, !dbg !1822
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef %.sink, i64 noundef %sub32) #22, !dbg !1822
  br label %if.end34, !dbg !1823

if.end34:                                         ; preds = %if.end34.sink.split, %if.else27, %if.then21
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !1823, !tbaa !1824
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i64 0, i64 0), i32 noundef %6) #22, !dbg !1825
  %7 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !1826, !tbaa !941
  tail call void @aeSetBeforeSleepProc(%struct.aeEventLoop* noundef %7, void (%struct.aeEventLoop*)* noundef nonnull @beforeSleep) #23, !dbg !1827
  %8 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !1828, !tbaa !941
  tail call void @aeMain(%struct.aeEventLoop* noundef %8) #23, !dbg !1829
  %9 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !1830, !tbaa !941
  tail call void @aeDeleteEventLoop(%struct.aeEventLoop* noundef %9) #23, !dbg !1831
  ret i32 0, !dbg !1832
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !1833 dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #11

; Function Attrs: noinline nounwind uwtable
define internal void @loadServerConfig(i8* noundef %filename) #0 !dbg !1834 {
entry:
  %buf = alloca [1025 x i8], align 16
  %argc = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %filename, metadata !1838, metadata !DIExpression()), !dbg !1865
  %0 = getelementptr inbounds [1025 x i8], [1025 x i8]* %buf, i64 0, i64 0, !dbg !1866
  call void @llvm.lifetime.start.p0i8(i64 1025, i8* nonnull %0) #24, !dbg !1866
  call void @llvm.dbg.declare(metadata [1025 x i8]* %buf, metadata !1840, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.value(metadata i32 0, metadata !1845, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.value(metadata i8* null, metadata !1846, metadata !DIExpression()), !dbg !1865
  %1 = load i8, i8* %filename, align 1, !dbg !1868, !tbaa !795
  %cmp = icmp eq i8 %1, 45, !dbg !1870
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !1871

land.lhs.true:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds i8, i8* %filename, i64 1, !dbg !1872
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !1872, !tbaa !795
  %cmp4 = icmp eq i8 %2, 0, !dbg !1873
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1874

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1875, !tbaa !782
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %3, metadata !1839, metadata !DIExpression()), !dbg !1865
  br label %if.end9, !dbg !1876

if.else:                                          ; preds = %land.lhs.true, %entry
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef nonnull %filename, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #23, !dbg !1877
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, metadata !1839, metadata !DIExpression()), !dbg !1865
  %cmp6 = icmp eq %struct._IO_FILE* %call, null, !dbg !1880
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !1881

if.then8:                                         ; preds = %if.else
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.419, i64 0, i64 0), i8* noundef nonnull %filename) #22, !dbg !1882
  tail call void @exit(i32 noundef 1) #26, !dbg !1884
  unreachable, !dbg !1884

if.end9:                                          ; preds = %if.else, %if.then
  %fp.0 = phi %struct._IO_FILE* [ %3, %if.then ], [ %call, %if.else ], !dbg !1885
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp.0, metadata !1839, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.value(metadata i32 0, metadata !1845, metadata !DIExpression()), !dbg !1865
  %call10664 = call i8* @fgets(i8* noundef nonnull %0, i32 noundef 1025, %struct._IO_FILE* noundef %fp.0) #23, !dbg !1886
  %cmp11.not665 = icmp eq i8* %call10664, null, !dbg !1887
  br i1 %cmp11.not665, label %while.end, label %while.body.lr.ph, !dbg !1888

while.body.lr.ph:                                 ; preds = %if.end9
  %4 = bitcast i32* %argc to i8*
  br label %while.body, !dbg !1888

while.body:                                       ; preds = %while.body.lr.ph, %cleanup491
  %linenum.0666 = phi i32 [ 0, %while.body.lr.ph ], [ %inc, %cleanup491 ]
  call void @llvm.dbg.value(metadata i32 %linenum.0666, metadata !1845, metadata !DIExpression()), !dbg !1865
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !1889
  %inc = add nuw nsw i32 %linenum.0666, 1, !dbg !1890
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1845, metadata !DIExpression()), !dbg !1865
  %call14 = call i8* @sdsnew(i8* noundef nonnull %0) #23, !dbg !1891
  call void @llvm.dbg.value(metadata i8* %call14, metadata !1846, metadata !DIExpression()), !dbg !1865
  %call15 = call i8* @sdstrim(i8* noundef %call14, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.420, i64 0, i64 0)) #23, !dbg !1892
  call void @llvm.dbg.value(metadata i8* %call15, metadata !1846, metadata !DIExpression()), !dbg !1865
  %5 = load i8, i8* %call15, align 1, !dbg !1893, !tbaa !795
  switch i8 %5, label %if.end25 [
    i8 35, label %cleanup491
    i8 0, label %cleanup491
  ], !dbg !1895, !llvm.loop !1896

if.end25:                                         ; preds = %while.body
  %call26 = call i64 @sdslen(i8* noundef nonnull %call15) #23, !dbg !1898
  %conv27 = trunc i64 %call26 to i32, !dbg !1898
  call void @llvm.dbg.value(metadata i32* %argc, metadata !1850, metadata !DIExpression(DW_OP_deref)), !dbg !1899
  %call28 = call i8** @sdssplitlen(i8* noundef nonnull %call15, i32 noundef %conv27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0), i32 noundef 1, i32* noundef nonnull %argc) #23, !dbg !1900
  call void @llvm.dbg.value(metadata i8** %call28, metadata !1847, metadata !DIExpression()), !dbg !1899
  %6 = load i8*, i8** %call28, align 8, !dbg !1901, !tbaa !782
  call void @sdstolower(i8* noundef %6) #23, !dbg !1902
  %7 = load i8*, i8** %call28, align 8, !dbg !1903, !tbaa !782
  %call31 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.395, i64 0, i64 0)) #27, !dbg !1904
  %tobool = icmp eq i32 %call31, 0, !dbg !1904
  %8 = load i32, i32* %argc, align 4
  call void @llvm.dbg.value(metadata i32 %8, metadata !1850, metadata !DIExpression()), !dbg !1899
  %cmp33 = icmp eq i32 %8, 2
  %or.cond = select i1 %tobool, i1 %cmp33, i1 false, !dbg !1905
  br i1 %or.cond, label %if.then35, label %if.else42, !dbg !1905

if.then35:                                        ; preds = %if.end25
  %arrayidx36 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1906
  %9 = load i8*, i8** %arrayidx36, align 8, !dbg !1906, !tbaa !782
  %call37 = call i32 @atoi(i8* noundef %9) #27, !dbg !1908
  store i32 %call37, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !1909, !tbaa !1910
  %cmp38 = icmp slt i32 %call37, 0, !dbg !1911
  br i1 %cmp38, label %loaderr, label %if.end486, !dbg !1913

if.else42:                                        ; preds = %if.end25
  %call44 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.422, i64 0, i64 0)) #27, !dbg !1914
  %tobool45 = icmp eq i32 %call44, 0, !dbg !1914
  %or.cond511 = select i1 %tobool45, i1 %cmp33, i1 false, !dbg !1915
  br i1 %or.cond511, label %if.then49, label %if.else59, !dbg !1915

if.then49:                                        ; preds = %if.else42
  %arrayidx50 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1916
  %10 = load i8*, i8** %arrayidx50, align 8, !dbg !1916, !tbaa !782
  %call51 = call i32 @atoi(i8* noundef %10) #27, !dbg !1918
  store i32 %call51, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !1919, !tbaa !1824
  %11 = add i32 %call51, -65536, !dbg !1920
  %12 = icmp ult i32 %11, -65535, !dbg !1920
  br i1 %12, label %loaderr, label %if.end486, !dbg !1920

if.else59:                                        ; preds = %if.else42
  %call61 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.424, i64 0, i64 0)) #27, !dbg !1922
  %tobool62 = icmp eq i32 %call61, 0, !dbg !1922
  %or.cond513 = select i1 %tobool62, i1 %cmp33, i1 false, !dbg !1923
  br i1 %or.cond513, label %if.then66, label %if.else69, !dbg !1923

if.then66:                                        ; preds = %if.else59
  %arrayidx67 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1924
  %13 = load i8*, i8** %arrayidx67, align 8, !dbg !1924, !tbaa !782
  %call68 = call i8* @zstrdup(i8* noundef %13) #23, !dbg !1926
  store i8* %call68, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 8, !dbg !1927, !tbaa !1928
  br label %if.end486, !dbg !1929

if.else69:                                        ; preds = %if.else59
  %call71 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0)) #27, !dbg !1930
  %tobool72 = icmp eq i32 %call71, 0, !dbg !1930
  %cmp74 = icmp eq i32 %8, 3
  %or.cond514 = select i1 %tobool72, i1 %cmp74, i1 false, !dbg !1931
  br i1 %or.cond514, label %if.then76, label %if.else90, !dbg !1931

if.then76:                                        ; preds = %if.else69
  %arrayidx77 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1932
  %14 = load i8*, i8** %arrayidx77, align 8, !dbg !1932, !tbaa !782
  %call78 = call i32 @atoi(i8* noundef %14) #27, !dbg !1933
  call void @llvm.dbg.value(metadata i32 %call78, metadata !1852, metadata !DIExpression()), !dbg !1934
  %arrayidx79 = getelementptr inbounds i8*, i8** %call28, i64 2, !dbg !1935
  %15 = load i8*, i8** %arrayidx79, align 8, !dbg !1935, !tbaa !782
  %call80 = call i32 @atoi(i8* noundef %15) #27, !dbg !1936
  call void @llvm.dbg.value(metadata i32 %call80, metadata !1858, metadata !DIExpression()), !dbg !1934
  %cmp81 = icmp slt i32 %call78, 1, !dbg !1937
  %cmp84 = icmp slt i32 %call80, 0
  %or.cond515 = select i1 %cmp81, i1 true, i1 %cmp84, !dbg !1939
  br i1 %or.cond515, label %loaderr, label %cleanup, !dbg !1939

cleanup:                                          ; preds = %if.then76
  %conv88653 = zext i32 %call78 to i64, !dbg !1940
  call void @appendServerSaveParams(i64 noundef %conv88653, i32 noundef %call80) #22, !dbg !1941
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  br label %if.end486

if.else90:                                        ; preds = %if.else69
  %call92 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.426, i64 0, i64 0)) #27, !dbg !1942
  %tobool93 = icmp eq i32 %call92, 0, !dbg !1942
  %or.cond516 = select i1 %tobool93, i1 %cmp33, i1 false, !dbg !1943
  br i1 %or.cond516, label %if.then97, label %if.else107, !dbg !1943

if.then97:                                        ; preds = %if.else90
  %arrayidx98 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1944
  %16 = load i8*, i8** %arrayidx98, align 8, !dbg !1944, !tbaa !782
  %call99 = call i32 @chdir(i8* noundef %16) #23, !dbg !1947
  %cmp100 = icmp eq i32 %call99, -1, !dbg !1948
  br i1 %cmp100, label %if.then102, label %if.end486, !dbg !1949

if.then102:                                       ; preds = %if.then97
  %arrayidx98.le = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1944
  %17 = load i8*, i8** %arrayidx98.le, align 8, !dbg !1950, !tbaa !782
  %call104 = tail call i32* @__errno_location() #25, !dbg !1952
  %18 = load i32, i32* %call104, align 4, !dbg !1952, !tbaa !926
  %call105 = call i8* @strerror(i32 noundef %18) #23, !dbg !1953
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.427, i64 0, i64 0), i8* noundef %17, i8* noundef %call105) #22, !dbg !1954
  call void @exit(i32 noundef 1) #26, !dbg !1955
  unreachable, !dbg !1955

if.else107:                                       ; preds = %if.else90
  %call109 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.428, i64 0, i64 0)) #27, !dbg !1956
  %tobool110 = icmp eq i32 %call109, 0, !dbg !1956
  %or.cond517 = select i1 %tobool110, i1 %cmp33, i1 false, !dbg !1957
  br i1 %or.cond517, label %if.then114, label %if.else139, !dbg !1957

if.then114:                                       ; preds = %if.else107
  %arrayidx115 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1958
  %19 = load i8*, i8** %arrayidx115, align 8, !dbg !1958, !tbaa !782
  %call116 = call i32 @strcasecmp(i8* noundef %19, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i64 0, i64 0)) #27, !dbg !1961
  %tobool117.not = icmp eq i32 %call116, 0, !dbg !1961
  br i1 %tobool117.not, label %if.then118, label %if.else119, !dbg !1962

if.then118:                                       ; preds = %if.then114
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !1963, !tbaa !774
  br label %if.end486, !dbg !1964

if.else119:                                       ; preds = %if.then114
  %call121 = call i32 @strcasecmp(i8* noundef %19, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.429, i64 0, i64 0)) #27, !dbg !1965
  %tobool122.not = icmp eq i32 %call121, 0, !dbg !1965
  br i1 %tobool122.not, label %if.then123, label %if.else124, !dbg !1967

if.then123:                                       ; preds = %if.else119
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !1968, !tbaa !774
  br label %if.end486, !dbg !1969

if.else124:                                       ; preds = %if.else119
  %call126 = call i32 @strcasecmp(i8* noundef %19, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.430, i64 0, i64 0)) #27, !dbg !1970
  %tobool127.not = icmp eq i32 %call126, 0, !dbg !1970
  br i1 %tobool127.not, label %if.then128, label %if.else129, !dbg !1972

if.then128:                                       ; preds = %if.else124
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !1973, !tbaa !774
  br label %if.end486, !dbg !1974

if.else129:                                       ; preds = %if.else124
  %call131 = call i32 @strcasecmp(i8* noundef %19, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.431, i64 0, i64 0)) #27, !dbg !1975
  %tobool132.not = icmp eq i32 %call131, 0, !dbg !1975
  br i1 %tobool132.not, label %if.then133, label %loaderr, !dbg !1977

if.then133:                                       ; preds = %if.else129
  store i32 3, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !1978, !tbaa !774
  br label %if.end486

if.else139:                                       ; preds = %if.else107
  %call141 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.433, i64 0, i64 0)) #27, !dbg !1979
  %tobool142 = icmp eq i32 %call141, 0, !dbg !1979
  %or.cond518 = select i1 %tobool142, i1 %cmp33, i1 false, !dbg !1980
  br i1 %or.cond518, label %if.then146, label %if.else169, !dbg !1980

if.then146:                                       ; preds = %if.else139
  %arrayidx147 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !1981
  %20 = load i8*, i8** %arrayidx147, align 8, !dbg !1981, !tbaa !782
  %call148 = call i8* @zstrdup(i8* noundef %20) #23, !dbg !1982
  store i8* %call148, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36), align 8, !dbg !1983, !tbaa !778
  %call149 = call i32 @strcasecmp(i8* noundef %call148, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.434, i64 0, i64 0)) #27, !dbg !1984
  %tobool150.not = icmp eq i32 %call149, 0, !dbg !1984
  br i1 %tobool150.not, label %if.end152.thread, label %if.end152, !dbg !1986

if.end152.thread:                                 ; preds = %if.then146
  call void @zfree(i8* noundef %call148) #23, !dbg !1987
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36), align 8, !dbg !1989, !tbaa !778
  br label %if.end486, !dbg !1990

if.end152:                                        ; preds = %if.then146
  %tobool153.not = icmp eq i8* %call148, null, !dbg !1991
  br i1 %tobool153.not, label %if.end486, label %if.then154, !dbg !1990

if.then154:                                       ; preds = %if.end152
  %call155 = call %struct._IO_FILE* @fopen64(i8* noundef nonnull %call148, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0)) #23, !dbg !1993
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call155, metadata !1859, metadata !DIExpression()), !dbg !1995
  %cmp156 = icmp eq %struct._IO_FILE* %call155, null, !dbg !1996
  br i1 %cmp156, label %cleanup166, label %if.end163, !dbg !1998

if.end163:                                        ; preds = %if.then154
  %call164 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call155) #23, !dbg !1999
  br label %if.end486, !dbg !2000

cleanup166:                                       ; preds = %if.then154
  %call159 = call i8* (...) @sdsempty() #23, !dbg !2001
  %call160 = tail call i32* @__errno_location() #25, !dbg !2003
  %21 = load i32, i32* %call160, align 4, !dbg !2003, !tbaa !926
  %call161 = call i8* @strerror(i32 noundef %21) #23, !dbg !2004
  %call162 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call159, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.435, i64 0, i64 0), i8* noundef %call161) #23, !dbg !2005
  call void @llvm.dbg.value(metadata i8* %call162, metadata !1844, metadata !DIExpression()), !dbg !1865
  br label %loaderr

if.else169:                                       ; preds = %if.else139
  %call171 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.436, i64 0, i64 0)) #27, !dbg !2006
  %tobool172 = icmp eq i32 %call171, 0, !dbg !2006
  %or.cond519 = select i1 %tobool172, i1 %cmp33, i1 false, !dbg !2008
  br i1 %or.cond519, label %if.then176, label %if.else183, !dbg !2008

if.then176:                                       ; preds = %if.else169
  %arrayidx177 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2009
  %22 = load i8*, i8** %arrayidx177, align 8, !dbg !2009, !tbaa !782
  %call178 = call i32 @atoi(i8* noundef %22) #27, !dbg !2011
  store i32 %call178, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !2012, !tbaa !2013
  %cmp179 = icmp slt i32 %call178, 1, !dbg !2014
  br i1 %cmp179, label %loaderr, label %if.end486, !dbg !2016

if.else183:                                       ; preds = %if.else169
  %call185 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.438, i64 0, i64 0)) #27, !dbg !2017
  %tobool186 = icmp eq i32 %call185, 0, !dbg !2017
  %or.cond520 = select i1 %tobool186, i1 %cmp33, i1 false, !dbg !2019
  br i1 %or.cond520, label %if.then190, label %if.else192, !dbg !2019

if.then190:                                       ; preds = %if.else183
  %arrayidx191 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2020
  %23 = load i8*, i8** %arrayidx191, align 8, !dbg !2020, !tbaa !782
  call void @loadServerConfig(i8* noundef %23) #22, !dbg !2022
  br label %if.end486, !dbg !2023

if.else192:                                       ; preds = %if.else183
  %call194 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.439, i64 0, i64 0)) #27, !dbg !2024
  %tobool195 = icmp eq i32 %call194, 0, !dbg !2024
  %or.cond521 = select i1 %tobool195, i1 %cmp33, i1 false, !dbg !2026
  br i1 %or.cond521, label %if.then199, label %if.else202, !dbg !2026

if.then199:                                       ; preds = %if.else192
  %arrayidx200 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2027
  %24 = load i8*, i8** %arrayidx200, align 8, !dbg !2027, !tbaa !782
  %call201 = call i32 @atoi(i8* noundef %24) #27, !dbg !2029
  store i32 %call201, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 49), align 4, !dbg !2030, !tbaa !2031
  br label %if.end486, !dbg !2032

if.else202:                                       ; preds = %if.else192
  %call204 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.394, i64 0, i64 0)) #27, !dbg !2033
  %tobool205 = icmp eq i32 %call204, 0, !dbg !2033
  %or.cond522 = select i1 %tobool205, i1 %cmp33, i1 false, !dbg !2035
  br i1 %or.cond522, label %if.then209, label %if.else212, !dbg !2035

if.then209:                                       ; preds = %if.else202
  %arrayidx210 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2036
  %25 = load i8*, i8** %arrayidx210, align 8, !dbg !2036, !tbaa !782
  %call211 = call fastcc i64 @memtoll(i8* noundef %25) #22, !dbg !2038
  store i64 %call211, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !2039, !tbaa !2040
  br label %if.end486, !dbg !2041

if.else212:                                       ; preds = %if.else202
  %call214 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.257, i64 0, i64 0)) #27, !dbg !2042
  %tobool215 = icmp eq i32 %call214, 0, !dbg !2042
  %or.cond523 = select i1 %tobool215, i1 %cmp74, i1 false, !dbg !2044
  br i1 %or.cond523, label %if.then219, label %if.else224, !dbg !2044

if.then219:                                       ; preds = %if.else212
  %arrayidx220 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2045
  %26 = load i8*, i8** %arrayidx220, align 8, !dbg !2045, !tbaa !782
  %call221 = call i8* @sdsnew(i8* noundef %26) #23, !dbg !2047
  store i8* %call221, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !2048, !tbaa !2049
  %arrayidx222 = getelementptr inbounds i8*, i8** %call28, i64 2, !dbg !2050
  %27 = load i8*, i8** %arrayidx222, align 8, !dbg !2050, !tbaa !782
  %call223 = call i32 @atoi(i8* noundef %27) #27, !dbg !2051
  store i32 %call223, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !2052, !tbaa !2053
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !2054, !tbaa !2055
  br label %if.end486, !dbg !2056

if.else224:                                       ; preds = %if.else212
  %call226 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.393, i64 0, i64 0)) #27, !dbg !2057
  %tobool227 = icmp eq i32 %call226, 0, !dbg !2057
  %or.cond524 = select i1 %tobool227, i1 %cmp33, i1 false, !dbg !2059
  br i1 %or.cond524, label %if.then231, label %if.else234, !dbg !2059

if.then231:                                       ; preds = %if.else224
  %arrayidx232 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2060
  %28 = load i8*, i8** %arrayidx232, align 8, !dbg !2060, !tbaa !782
  %call233 = call i8* @zstrdup(i8* noundef %28) #23, !dbg !2062
  store i8* %call233, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !2063, !tbaa !2064
  br label %if.end486, !dbg !2065

if.else234:                                       ; preds = %if.else224
  %call236 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.440, i64 0, i64 0)) #27, !dbg !2066
  %tobool237 = icmp eq i32 %call236, 0, !dbg !2066
  %or.cond525 = select i1 %tobool237, i1 %cmp33, i1 false, !dbg !2068
  br i1 %or.cond525, label %if.then241, label %if.else248, !dbg !2068

if.then241:                                       ; preds = %if.else234
  %arrayidx242 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2069
  %29 = load i8*, i8** %arrayidx242, align 8, !dbg !2069, !tbaa !782
  %call243 = call i32 @yesnotoi(i8* noundef %29) #22, !dbg !2072
  store i32 %call243, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19), align 4, !dbg !2073, !tbaa !2074
  %cmp244 = icmp eq i32 %call243, -1, !dbg !2075
  br i1 %cmp244, label %loaderr, label %if.end486, !dbg !2076

if.else248:                                       ; preds = %if.else234
  %call250 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.442, i64 0, i64 0)) #27, !dbg !2077
  %tobool251 = icmp eq i32 %call250, 0, !dbg !2077
  %or.cond526 = select i1 %tobool251, i1 %cmp33, i1 false, !dbg !2079
  br i1 %or.cond526, label %if.then255, label %if.else262, !dbg !2079

if.then255:                                       ; preds = %if.else248
  %arrayidx256 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2080
  %30 = load i8*, i8** %arrayidx256, align 8, !dbg !2080, !tbaa !782
  %call257 = call i32 @yesnotoi(i8* noundef %30) #22, !dbg !2083
  store i32 %call257, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !2084, !tbaa !2085
  %cmp258 = icmp eq i32 %call257, -1, !dbg !2086
  br i1 %cmp258, label %loaderr, label %if.end486, !dbg !2087

if.else262:                                       ; preds = %if.else248
  %call264 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.443, i64 0, i64 0)) #27, !dbg !2088
  %tobool265 = icmp eq i32 %call264, 0, !dbg !2088
  %or.cond527 = select i1 %tobool265, i1 %cmp33, i1 false, !dbg !2090
  br i1 %or.cond527, label %if.then269, label %if.else276, !dbg !2090

if.then269:                                       ; preds = %if.else262
  %arrayidx270 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2091
  %31 = load i8*, i8** %arrayidx270, align 8, !dbg !2091, !tbaa !782
  %call271 = call i32 @yesnotoi(i8* noundef %31) #22, !dbg !2094
  store i32 %call271, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 4, !dbg !2095, !tbaa !2096
  %cmp272 = icmp eq i32 %call271, -1, !dbg !2097
  br i1 %cmp272, label %loaderr, label %if.end486, !dbg !2098

if.else276:                                       ; preds = %if.else262
  %call278 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.444, i64 0, i64 0)) #27, !dbg !2099
  %tobool279 = icmp eq i32 %call278, 0, !dbg !2099
  %or.cond528 = select i1 %tobool279, i1 %cmp33, i1 false, !dbg !2101
  br i1 %or.cond528, label %if.then283, label %if.else290, !dbg !2101

if.then283:                                       ; preds = %if.else276
  %arrayidx284 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2102
  %32 = load i8*, i8** %arrayidx284, align 8, !dbg !2102, !tbaa !782
  %call285 = call i32 @yesnotoi(i8* noundef %32) #22, !dbg !2105
  store i32 %call285, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !2106, !tbaa !1798
  %cmp286 = icmp eq i32 %call285, -1, !dbg !2107
  br i1 %cmp286, label %loaderr, label %if.end486, !dbg !2108

if.else290:                                       ; preds = %if.else276
  %call292 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.399, i64 0, i64 0)) #27, !dbg !2109
  %tobool293 = icmp eq i32 %call292, 0, !dbg !2109
  %or.cond529 = select i1 %tobool293, i1 %cmp33, i1 false, !dbg !2111
  br i1 %or.cond529, label %if.then297, label %if.else304, !dbg !2111

if.then297:                                       ; preds = %if.else290
  %arrayidx298 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2112
  %33 = load i8*, i8** %arrayidx298, align 8, !dbg !2112, !tbaa !782
  %call299 = call i32 @yesnotoi(i8* noundef %33) #22, !dbg !2115
  store i32 %call299, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !2116, !tbaa !1260
  %cmp300 = icmp eq i32 %call299, -1, !dbg !2117
  br i1 %cmp300, label %loaderr, label %if.end486, !dbg !2118

if.else304:                                       ; preds = %if.else290
  %call306 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.445, i64 0, i64 0)) #27, !dbg !2119
  %tobool307 = icmp eq i32 %call306, 0, !dbg !2119
  %or.cond530 = select i1 %tobool307, i1 %cmp33, i1 false, !dbg !2121
  br i1 %or.cond530, label %if.then311, label %if.else314, !dbg !2121

if.then311:                                       ; preds = %if.else304
  %34 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !2122, !tbaa !1029
  call void @zfree(i8* noundef %34) #23, !dbg !2124
  %arrayidx312 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2125
  %35 = load i8*, i8** %arrayidx312, align 8, !dbg !2125, !tbaa !782
  %call313 = call i8* @zstrdup(i8* noundef %35) #23, !dbg !2126
  store i8* %call313, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !2127, !tbaa !1029
  br label %if.end486, !dbg !2128

if.else314:                                       ; preds = %if.else304
  %call316 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.396, i64 0, i64 0)) #27, !dbg !2129
  %tobool317 = icmp eq i32 %call316, 0, !dbg !2129
  %or.cond531 = select i1 %tobool317, i1 %cmp33, i1 false, !dbg !2131
  br i1 %or.cond531, label %if.then321, label %if.else340, !dbg !2131

if.then321:                                       ; preds = %if.else314
  %arrayidx322 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2132
  %36 = load i8*, i8** %arrayidx322, align 8, !dbg !2132, !tbaa !782
  %call323 = call i32 @strcasecmp(i8* noundef %36, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0)) #27, !dbg !2135
  %tobool324.not = icmp eq i32 %call323, 0, !dbg !2135
  br i1 %tobool324.not, label %if.then325, label %if.else326, !dbg !2136

if.then325:                                       ; preds = %if.then321
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !2137, !tbaa !2139
  br label %if.end486, !dbg !2140

if.else326:                                       ; preds = %if.then321
  %call328 = call i32 @strcasecmp(i8* noundef %36, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.398, i64 0, i64 0)) #27, !dbg !2141
  %tobool329.not = icmp eq i32 %call328, 0, !dbg !2141
  br i1 %tobool329.not, label %if.then330, label %if.else331, !dbg !2143

if.then330:                                       ; preds = %if.else326
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !2144, !tbaa !2139
  br label %if.end486, !dbg !2146

if.else331:                                       ; preds = %if.else326
  %call333 = call i32 @strcasecmp(i8* noundef %36, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0)) #27, !dbg !2147
  %tobool334.not = icmp eq i32 %call333, 0, !dbg !2147
  br i1 %tobool334.not, label %if.then335, label %loaderr, !dbg !2149

if.then335:                                       ; preds = %if.else331
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !2150, !tbaa !2139
  br label %if.end486

if.else340:                                       ; preds = %if.else314
  %call342 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i64 0, i64 0)) #27, !dbg !2152
  %tobool343 = icmp eq i32 %call342, 0, !dbg !2152
  %or.cond532 = select i1 %tobool343, i1 %cmp33, i1 false, !dbg !2154
  br i1 %or.cond532, label %if.then347, label %if.else350, !dbg !2154

if.then347:                                       ; preds = %if.else340
  %arrayidx348 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2155
  %37 = load i8*, i8** %arrayidx348, align 8, !dbg !2155, !tbaa !782
  %call349 = call i8* @zstrdup(i8* noundef %37) #23, !dbg !2157
  store i8* %call349, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !2158, !tbaa !2159
  br label %if.end486, !dbg !2160

if.else350:                                       ; preds = %if.else340
  %call352 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.447, i64 0, i64 0)) #27, !dbg !2161
  %tobool353 = icmp eq i32 %call352, 0, !dbg !2161
  %or.cond533 = select i1 %tobool353, i1 %cmp33, i1 false, !dbg !2163
  br i1 %or.cond533, label %if.then357, label %if.else360, !dbg !2163

if.then357:                                       ; preds = %if.else350
  %38 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29), align 8, !dbg !2164, !tbaa !2166
  call void @zfree(i8* noundef %38) #23, !dbg !2167
  %arrayidx358 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2168
  %39 = load i8*, i8** %arrayidx358, align 8, !dbg !2168, !tbaa !782
  %call359 = call i8* @zstrdup(i8* noundef %39) #23, !dbg !2169
  store i8* %call359, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29), align 8, !dbg !2170, !tbaa !2166
  br label %if.end486, !dbg !2171

if.else360:                                       ; preds = %if.else350
  %call362 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i64 0, i64 0)) #27, !dbg !2172
  %tobool363 = icmp eq i32 %call362, 0, !dbg !2172
  %or.cond534 = select i1 %tobool363, i1 %cmp33, i1 false, !dbg !2174
  br i1 %or.cond534, label %if.then367, label %if.else370, !dbg !2174

if.then367:                                       ; preds = %if.else360
  %40 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2175, !tbaa !913
  call void @zfree(i8* noundef %40) #23, !dbg !2177
  %arrayidx368 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2178
  %41 = load i8*, i8** %arrayidx368, align 8, !dbg !2178, !tbaa !782
  %call369 = call i8* @zstrdup(i8* noundef %41) #23, !dbg !2179
  store i8* %call369, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2180, !tbaa !913
  br label %if.end486, !dbg !2181

if.else370:                                       ; preds = %if.else360
  %call372 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.448, i64 0, i64 0)) #27, !dbg !2182
  %tobool373 = icmp eq i32 %call372, 0, !dbg !2182
  %or.cond535 = select i1 %tobool373, i1 %cmp33, i1 false, !dbg !2184
  br i1 %or.cond535, label %if.then377, label %if.else384, !dbg !2184

if.then377:                                       ; preds = %if.else370
  %arrayidx378 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2185
  %42 = load i8*, i8** %arrayidx378, align 8, !dbg !2185, !tbaa !782
  %call379 = call i32 @yesnotoi(i8* noundef %42) #22, !dbg !2188
  store i32 %call379, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !2189, !tbaa !1384
  %cmp380 = icmp eq i32 %call379, -1, !dbg !2190
  br i1 %cmp380, label %loaderr, label %if.end486, !dbg !2191

if.else384:                                       ; preds = %if.else370
  %call386 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.449, i64 0, i64 0)) #27, !dbg !2192
  %tobool387 = icmp eq i32 %call386, 0, !dbg !2192
  %or.cond536 = select i1 %tobool387, i1 %cmp33, i1 false, !dbg !2194
  br i1 %or.cond536, label %if.then391, label %if.else394, !dbg !2194

if.then391:                                       ; preds = %if.else384
  %43 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !2195, !tbaa !2197
  call void @zfree(i8* noundef %43) #23, !dbg !2198
  %arrayidx392 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2199
  %44 = load i8*, i8** %arrayidx392, align 8, !dbg !2199, !tbaa !782
  %call393 = call i8* @zstrdup(i8* noundef %44) #23, !dbg !2200
  store i8* %call393, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !2201, !tbaa !2197
  br label %if.end486, !dbg !2202

if.else394:                                       ; preds = %if.else384
  %call396 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i64 0, i64 0)) #27, !dbg !2203
  %tobool397 = icmp eq i32 %call396, 0, !dbg !2203
  %or.cond537 = select i1 %tobool397, i1 %cmp33, i1 false, !dbg !2205
  br i1 %or.cond537, label %if.then401, label %if.else404, !dbg !2205

if.then401:                                       ; preds = %if.else394
  %arrayidx402 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2206
  %45 = load i8*, i8** %arrayidx402, align 8, !dbg !2206, !tbaa !782
  %call403 = call fastcc i64 @memtoll(i8* noundef %45) #22, !dbg !2208
  store i64 %call403, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !2209, !tbaa !1379
  br label %if.end486, !dbg !2210

if.else404:                                       ; preds = %if.else394
  %call406 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.451, i64 0, i64 0)) #27, !dbg !2211
  %tobool407 = icmp eq i32 %call406, 0, !dbg !2211
  %or.cond538 = select i1 %tobool407, i1 %cmp33, i1 false, !dbg !2213
  br i1 %or.cond538, label %if.then411, label %if.else414, !dbg !2213

if.then411:                                       ; preds = %if.else404
  %arrayidx412 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2214
  %46 = load i8*, i8** %arrayidx412, align 8, !dbg !2214, !tbaa !782
  %call413 = call fastcc i64 @memtoll(i8* noundef %46) #22, !dbg !2216
  store i64 %call413, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !2217, !tbaa !2218
  br label %if.end486, !dbg !2219

if.else414:                                       ; preds = %if.else404
  %call416 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.452, i64 0, i64 0)) #27, !dbg !2220
  %tobool417 = icmp eq i32 %call416, 0, !dbg !2220
  %or.cond539 = select i1 %tobool417, i1 %cmp33, i1 false, !dbg !2222
  br i1 %or.cond539, label %if.then421, label %if.else424, !dbg !2222

if.then421:                                       ; preds = %if.else414
  %arrayidx422 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2223
  %47 = load i8*, i8** %arrayidx422, align 8, !dbg !2223, !tbaa !782
  %call423 = call fastcc i64 @memtoll(i8* noundef %47) #22, !dbg !2225
  store i64 %call423, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !2226, !tbaa !2227
  br label %if.end486, !dbg !2228

if.else424:                                       ; preds = %if.else414
  %call426 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.453, i64 0, i64 0)) #27, !dbg !2229
  %tobool427 = icmp eq i32 %call426, 0, !dbg !2229
  %or.cond540 = select i1 %tobool427, i1 %cmp33, i1 false, !dbg !2231
  br i1 %or.cond540, label %if.then431, label %if.else435, !dbg !2231

if.then431:                                       ; preds = %if.else424
  %arrayidx432 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2232
  %48 = load i8*, i8** %arrayidx432, align 8, !dbg !2232, !tbaa !782
  %call433 = call i64 @strtoll(i8* noundef %48, i8** noundef null, i32 noundef 10) #23, !dbg !2234
  %conv434 = trunc i64 %call433 to i32, !dbg !2234
  store i32 %conv434, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !2235, !tbaa !2236
  br label %if.end486, !dbg !2237

if.else435:                                       ; preds = %if.else424
  %call437 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.454, i64 0, i64 0)) #27, !dbg !2238
  %tobool438 = icmp eq i32 %call437, 0, !dbg !2238
  %or.cond541 = select i1 %tobool438, i1 %cmp33, i1 false, !dbg !2240
  br i1 %or.cond541, label %if.then442, label %if.else445, !dbg !2240

if.then442:                                       ; preds = %if.else435
  %arrayidx443 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2241
  %49 = load i8*, i8** %arrayidx443, align 8, !dbg !2241, !tbaa !782
  %call444 = call fastcc i64 @memtoll(i8* noundef %49) #22, !dbg !2243
  store i64 %call444, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61), align 8, !dbg !2244, !tbaa !2245
  br label %if.end486, !dbg !2246

if.else445:                                       ; preds = %if.else435
  %call447 = call i32 @strcasecmp(i8* noundef %7, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.455, i64 0, i64 0)) #27, !dbg !2247
  %tobool448 = icmp eq i32 %call447, 0, !dbg !2247
  %or.cond542 = select i1 %tobool448, i1 %cmp33, i1 false, !dbg !2249
  br i1 %or.cond542, label %if.then452, label %loaderr, !dbg !2249

if.then452:                                       ; preds = %if.else445
  %arrayidx453 = getelementptr inbounds i8*, i8** %call28, i64 1, !dbg !2250
  %50 = load i8*, i8** %arrayidx453, align 8, !dbg !2250, !tbaa !782
  %call454 = call fastcc i64 @memtoll(i8* noundef %50) #22, !dbg !2252
  store i64 %call454, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62), align 8, !dbg !2253, !tbaa !2254
  br label %if.end486

if.end486:                                        ; preds = %if.end152.thread, %if.end152, %if.end163, %cleanup, %if.then49, %if.then123, %if.then133, %if.then128, %if.then118, %if.then176, %if.then199, %if.then219, %if.then241, %if.then269, %if.then297, %if.then330, %if.then335, %if.then325, %if.then357, %if.then377, %if.then401, %if.then421, %if.then442, %if.then452, %if.then431, %if.then411, %if.then391, %if.then367, %if.then347, %if.then311, %if.then283, %if.then255, %if.then231, %if.then209, %if.then190, %if.then97, %if.then66, %if.then35
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.value(metadata i32 0, metadata !1851, metadata !DIExpression()), !dbg !1899
  %51 = load i32, i32* %argc, align 4, !dbg !2255, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %51, metadata !1850, metadata !DIExpression()), !dbg !1899
  %cmp487662 = icmp sgt i32 %51, 0, !dbg !2258
  br i1 %cmp487662, label %for.body, label %for.end, !dbg !2259

for.body:                                         ; preds = %if.end486, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end486 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1851, metadata !DIExpression()), !dbg !1899
  %arrayidx489 = getelementptr inbounds i8*, i8** %call28, i64 %indvars.iv, !dbg !2260
  %52 = load i8*, i8** %arrayidx489, align 8, !dbg !2260, !tbaa !782
  call void @sdsfree(i8* noundef %52) #23, !dbg !2261
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2262
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1851, metadata !DIExpression()), !dbg !1899
  %53 = load i32, i32* %argc, align 4, !dbg !2255, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %53, metadata !1850, metadata !DIExpression()), !dbg !1899
  %54 = sext i32 %53 to i64, !dbg !2258
  %cmp487 = icmp slt i64 %indvars.iv.next, %54, !dbg !2258
  br i1 %cmp487, label %for.body, label %for.end, !dbg !2259, !llvm.loop !2263

for.end:                                          ; preds = %for.body, %if.end486
  %55 = bitcast i8** %call28 to i8*, !dbg !2265
  call void @zfree(i8* noundef nonnull %55) #23, !dbg !2266
  br label %cleanup491, !dbg !1897

cleanup491:                                       ; preds = %while.body, %while.body, %for.end
  call void @sdsfree(i8* noundef nonnull %call15) #23, !dbg !1899
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !1897
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1845, metadata !DIExpression()), !dbg !1865
  %call10 = call i8* @fgets(i8* noundef nonnull %0, i32 noundef 1025, %struct._IO_FILE* noundef %fp.0) #23, !dbg !1886
  %cmp11.not = icmp eq i8* %call10, null, !dbg !1887
  br i1 %cmp11.not, label %while.end, label %while.body, !dbg !1888

while.end:                                        ; preds = %cleanup491, %if.end9
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2267, !tbaa !782
  %cmp496.not = icmp eq %struct._IO_FILE* %fp.0, %56, !dbg !2269
  br i1 %cmp496.not, label %cleanup505, label %if.then498, !dbg !2270

if.then498:                                       ; preds = %while.end
  %call499 = call i32 @fclose(%struct._IO_FILE* noundef %fp.0) #23, !dbg !2271
  br label %cleanup505, !dbg !2271

loaderr:                                          ; preds = %if.then76, %if.then35, %if.then49, %if.else129, %if.then176, %if.then241, %if.then255, %if.then269, %if.then283, %if.then297, %if.else331, %if.then377, %if.else445, %cleanup166
  %err.4.ph = phi i8* [ %call162, %cleanup166 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.456, i64 0, i64 0), %if.else445 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then377 ], [ getelementptr inbounds ([46 x i8], [46 x i8]* @.str.446, i64 0, i64 0), %if.else331 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then297 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then283 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then269 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then255 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.441, i64 0, i64 0), %if.then241 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.437, i64 0, i64 0), %if.then176 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.432, i64 0, i64 0), %if.else129 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.423, i64 0, i64 0), %if.then49 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.421, i64 0, i64 0), %if.then35 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.425, i64 0, i64 0), %if.then76 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !1844, metadata !DIExpression()), !dbg !1865
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !1897
  call void @llvm.dbg.label(metadata !1864), !dbg !2272
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2273, !tbaa !782
  %call501 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %57, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.457, i64 0, i64 0)) #23, !dbg !2274
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2275, !tbaa !782
  %call502 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %58, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.458, i64 0, i64 0), i32 noundef %inc) #23, !dbg !2276
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2277, !tbaa !782
  %call503 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %59, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.459, i64 0, i64 0), i8* noundef nonnull %call15) #23, !dbg !2278
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2279, !tbaa !782
  %call504 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %60, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.460, i64 0, i64 0), i8* noundef %err.4.ph) #23, !dbg !2280
  call void @exit(i32 noundef 1) #26, !dbg !2281
  unreachable, !dbg !2281

cleanup505:                                       ; preds = %while.end, %if.then498
  call void @llvm.lifetime.end.p0i8(i64 1025, i8* nonnull %0) #24, !dbg !2282
  ret void, !dbg !2282
}

; Function Attrs: noinline nounwind uwtable
define internal void @daemonize() #0 !dbg !2283 {
entry:
  %call = tail call i32 @fork() #23, !dbg !2287
  %cmp.not = icmp eq i32 %call, 0, !dbg !2289
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !2290

if.then:                                          ; preds = %entry
  tail call void @exit(i32 noundef 0) #26, !dbg !2291
  unreachable, !dbg !2291

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @setsid() #23, !dbg !2292
  %call2 = tail call i32 (i8*, i32, ...) @open64(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0), i32 noundef 2, i32 noundef 0) #23, !dbg !2293
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2285, metadata !DIExpression()), !dbg !2295
  %cmp3.not = icmp eq i32 %call2, -1, !dbg !2296
  br i1 %cmp3.not, label %if.end12, label %if.then4, !dbg !2297

if.then4:                                         ; preds = %if.end
  %call5 = tail call i32 @dup2(i32 noundef %call2, i32 noundef 0) #23, !dbg !2298
  %call6 = tail call i32 @dup2(i32 noundef %call2, i32 noundef 1) #23, !dbg !2300
  %call7 = tail call i32 @dup2(i32 noundef %call2, i32 noundef 2) #23, !dbg !2301
  %cmp8 = icmp sgt i32 %call2, 2, !dbg !2302
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !2304

if.then9:                                         ; preds = %if.then4
  %call10 = tail call i32 @close(i32 noundef %call2) #23, !dbg !2305
  br label %if.end12, !dbg !2305

if.end12:                                         ; preds = %if.then4, %if.then9, %if.end
  %0 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29), align 8, !dbg !2306, !tbaa !2166
  %call13 = tail call %struct._IO_FILE* @fopen64(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i64 0, i64 0)) #23, !dbg !2307
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call13, metadata !2286, metadata !DIExpression()), !dbg !2295
  %tobool.not = icmp eq %struct._IO_FILE* %call13, null, !dbg !2308
  br i1 %tobool.not, label %if.end18, label %if.then14, !dbg !2310

if.then14:                                        ; preds = %if.end12
  %call15 = tail call i32 @getpid() #23, !dbg !2311
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef nonnull %call13, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.468, i64 0, i64 0), i32 noundef %call15) #23, !dbg !2313
  %call17 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %call13) #23, !dbg !2314
  br label %if.end18, !dbg !2315

if.end18:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !2316
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbLoad(i8* noundef %filename) #0 !dbg !2317 {
entry:
  %buf = alloca [1024 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2319, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i32 0, metadata !2327, metadata !DIExpression()), !dbg !2349
  %0 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !2350, !tbaa !2351
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !2352
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !2352, !tbaa !2353
  call void @llvm.dbg.value(metadata %struct.dict* %1, metadata !2328, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata %struct.redisDb* %0, metadata !2329, metadata !DIExpression()), !dbg !2349
  %2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !2355
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %2) #24, !dbg !2355
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !2330, metadata !DIExpression()), !dbg !2356
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !2357
  call void @llvm.dbg.value(metadata i64 %call, metadata !2335, metadata !DIExpression()), !dbg !2349
  %call2 = tail call %struct._IO_FILE* @fopen64(i8* noundef %filename, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #23, !dbg !2358
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call2, metadata !2320, metadata !DIExpression()), !dbg !2349
  %tobool.not = icmp eq %struct._IO_FILE* %call2, null, !dbg !2359
  br i1 %tobool.not, label %cleanup121, label %if.end, !dbg !2361

if.end:                                           ; preds = %entry
  %call3 = call i64 @fread(i8* noundef nonnull %2, i64 noundef 9, i64 noundef 1, %struct._IO_FILE* noundef nonnull %call2) #23, !dbg !2362
  %cmp = icmp eq i64 %call3, 0, !dbg !2364
  br i1 %cmp, label %eoferr, label %if.end5, !dbg !2365

if.end5:                                          ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 9, !dbg !2366
  store i8 0, i8* %arrayidx6, align 1, !dbg !2367, !tbaa !795
  %call8 = call i32 @memcmp(i8* noundef nonnull %2, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.909, i64 0, i64 0), i64 noundef 5) #27, !dbg !2368
  %cmp9.not = icmp eq i32 %call8, 0, !dbg !2370
  br i1 %cmp9.not, label %if.end12, label %if.then10, !dbg !2371

if.then10:                                        ; preds = %if.end5
  %call11 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call2) #23, !dbg !2372
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.910, i64 0, i64 0)) #22, !dbg !2374
  br label %cleanup121, !dbg !2375

if.end12:                                         ; preds = %if.end5
  %add.ptr14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 5, !dbg !2376
  %call15 = call i32 @atoi(i8* noundef %add.ptr14) #27, !dbg !2377
  call void @llvm.dbg.value(metadata i32 %call15, metadata !2326, metadata !DIExpression()), !dbg !2349
  %cmp16.not = icmp eq i32 %call15, 1, !dbg !2378
  br i1 %cmp16.not, label %while.cond, label %if.then17, !dbg !2380

if.then17:                                        ; preds = %if.end12
  %call18 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call2) #23, !dbg !2381
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.911, i64 0, i64 0), i32 noundef %call15) #22, !dbg !2383
  br label %cleanup121, !dbg !2384

while.cond:                                       ; preds = %if.end12, %while.cond.backedge
  %d.0 = phi %struct.dict* [ %d.0.be, %while.cond.backedge ], [ %1, %if.end12 ], !dbg !2385
  %db.0 = phi %struct.redisDb* [ %db.0.be, %while.cond.backedge ], [ %0, %if.end12 ], !dbg !2386
  %swap_all_values.0 = phi i32 [ %swap_all_values.0.be, %while.cond.backedge ], [ 0, %if.end12 ], !dbg !2387
  call void @llvm.dbg.value(metadata i32 %swap_all_values.0, metadata !2327, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata %struct.redisDb* %db.0, metadata !2329, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata %struct.dict* %d.0, metadata !2328, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i64 -1, metadata !2334, metadata !DIExpression()), !dbg !2349
  %call20 = call i32 @rdbLoadType(%struct._IO_FILE* noundef nonnull %call2) #22, !dbg !2388
  call void @llvm.dbg.value(metadata i32 %call20, metadata !2324, metadata !DIExpression()), !dbg !2349
  switch i32 %call20, label %if.end34 [
    i32 -1, label %eoferr
    i32 253, label %if.then25
  ], !dbg !2390

if.then25:                                        ; preds = %while.cond
  %call26 = call i64 @rdbLoadTime(%struct._IO_FILE* noundef nonnull %call2) #22, !dbg !2391
  call void @llvm.dbg.value(metadata i64 %call26, metadata !2334, metadata !DIExpression()), !dbg !2349
  %cmp27 = icmp eq i64 %call26, -1, !dbg !2395
  br i1 %cmp27, label %eoferr, label %if.end29, !dbg !2396

if.end29:                                         ; preds = %if.then25
  %call30 = call i32 @rdbLoadType(%struct._IO_FILE* noundef nonnull %call2) #22, !dbg !2397
  call void @llvm.dbg.value(metadata i32 %call30, metadata !2324, metadata !DIExpression()), !dbg !2349
  %cmp31 = icmp eq i32 %call30, -1, !dbg !2399
  br i1 %cmp31, label %eoferr, label %if.end34, !dbg !2400

if.end34:                                         ; preds = %while.cond, %if.end29
  %expiretime.0 = phi i64 [ %call26, %if.end29 ], [ -1, %while.cond ], !dbg !2401
  %type.0 = phi i32 [ %call30, %if.end29 ], [ %call20, %while.cond ], !dbg !2401
  call void @llvm.dbg.value(metadata i32 %type.0, metadata !2324, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i64 %expiretime.0, metadata !2334, metadata !DIExpression()), !dbg !2349
  switch i32 %type.0, label %if.end49 [
    i32 255, label %while.end119
    i32 254, label %if.then39
  ], !dbg !2402

if.then39:                                        ; preds = %if.end34
  %call40 = call i32 @rdbLoadLen(%struct._IO_FILE* noundef nonnull %call2, i32* noundef null) #22, !dbg !2403
  call void @llvm.dbg.value(metadata i32 %call40, metadata !2321, metadata !DIExpression()), !dbg !2349
  %cmp41 = icmp eq i32 %call40, -1, !dbg !2407
  br i1 %cmp41, label %eoferr, label %if.end43, !dbg !2408

if.end43:                                         ; preds = %if.then39
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !2409, !tbaa !2013
  %cmp44.not = icmp ult i32 %call40, %3, !dbg !2411
  br i1 %cmp44.not, label %if.end46, label %if.then45, !dbg !2412

if.then45:                                        ; preds = %if.end43
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([103 x i8], [103 x i8]* @.str.912, i64 0, i64 0), i32 noundef %3) #22, !dbg !2413
  call void @exit(i32 noundef 1) #26, !dbg !2415
  unreachable, !dbg !2415

if.end46:                                         ; preds = %if.end43
  %4 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !2416, !tbaa !2351
  %idx.ext = zext i32 %call40 to i64, !dbg !2417
  %add.ptr47 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 %idx.ext, !dbg !2417
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr47, metadata !2329, metadata !DIExpression()), !dbg !2349
  %dict48 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %add.ptr47, i64 0, i32 0, !dbg !2418
  %5 = load %struct.dict*, %struct.dict** %dict48, align 8, !dbg !2418, !tbaa !2353
  call void @llvm.dbg.value(metadata %struct.dict* %5, metadata !2328, metadata !DIExpression()), !dbg !2349
  br label %while.cond.backedge, !dbg !2419

if.end49:                                         ; preds = %if.end34
  %call50 = call %struct.redisObject* @rdbLoadStringObject(%struct._IO_FILE* noundef nonnull %call2) #22, !dbg !2420
  call void @llvm.dbg.value(metadata %struct.redisObject* %call50, metadata !2336, metadata !DIExpression()), !dbg !2401
  %cmp51 = icmp eq %struct.redisObject* %call50, null, !dbg !2422
  br i1 %cmp51, label %eoferr, label %if.end53, !dbg !2423

if.end53:                                         ; preds = %if.end49
  %call54 = call %struct.redisObject* @rdbLoadObject(i32 noundef %type.0, %struct._IO_FILE* noundef nonnull %call2) #22, !dbg !2424
  call void @llvm.dbg.value(metadata %struct.redisObject* %call54, metadata !2338, metadata !DIExpression()), !dbg !2401
  %cmp55 = icmp eq %struct.redisObject* %call54, null, !dbg !2426
  br i1 %cmp55, label %eoferr, label %if.end57, !dbg !2427

if.end57:                                         ; preds = %if.end53
  %cmp58.not = icmp eq i64 %expiretime.0, -1, !dbg !2428
  %cmp58.not.not = xor i1 %cmp58.not, true, !dbg !2430
  %cmp59 = icmp slt i64 %expiretime.0, %call
  %or.cond = select i1 %cmp58.not.not, i1 %cmp59, i1 false, !dbg !2430
  %6 = bitcast %struct.redisObject* %call50 to i8*, !dbg !2401
  br i1 %or.cond, label %if.then60, label %if.end61, !dbg !2430

if.then60:                                        ; preds = %if.end57
  call void @decrRefCount(i8* noundef nonnull %6) #22, !dbg !2431
  %7 = bitcast %struct.redisObject* %call54 to i8*, !dbg !2433
  call void @decrRefCount(i8* noundef nonnull %7) #22, !dbg !2434
  br label %while.cond.backedge, !dbg !2435

if.end61:                                         ; preds = %if.end57
  %8 = bitcast %struct.redisObject* %call54 to i8*, !dbg !2436
  %call62 = call i32 @dictAdd(%struct.dict* noundef %d.0, i8* noundef nonnull %6, i8* noundef nonnull %8) #23, !dbg !2437
  call void @llvm.dbg.value(metadata i32 %call62, metadata !2325, metadata !DIExpression()), !dbg !2349
  %cmp63 = icmp eq i32 %call62, 1, !dbg !2438
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !2440

if.then64:                                        ; preds = %if.end61
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call50, i64 0, i32 0, !dbg !2441
  %9 = load i8*, i8** %ptr, align 8, !dbg !2441, !tbaa !1328
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.913, i64 0, i64 0), i8* noundef %9) #22, !dbg !2443
  call void @exit(i32 noundef 1) #26, !dbg !2444
  unreachable, !dbg !2444

if.end65:                                         ; preds = %if.end61
  br i1 %cmp58.not, label %if.end69, label %if.then67, !dbg !2445

if.then67:                                        ; preds = %if.end65
  %call68 = call i32 @setExpire(%struct.redisDb* noundef %db.0, %struct.redisObject* noundef nonnull %call50, i64 noundef %expiretime.0) #22, !dbg !2446
  br label %if.end69, !dbg !2446

if.end69:                                         ; preds = %if.then67, %if.end65
  %tobool70.not = icmp eq i32 %swap_all_values.0, 0, !dbg !2448
  br i1 %tobool70.not, label %if.end92, label %if.then71, !dbg !2449

if.then71:                                        ; preds = %if.end69
  %call72 = call %struct.dictEntry* @dictFind(%struct.dict* noundef %d.0, i8* noundef nonnull %6) #23, !dbg !2450
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call72, metadata !2340, metadata !DIExpression()), !dbg !2451
  %tobool73.not = icmp eq %struct.dictEntry* %call72, null, !dbg !2452
  br i1 %tobool73.not, label %while.cond.backedge, label %if.then74, !dbg !2453

if.then74:                                        ; preds = %if.then71
  %key75 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call72, i64 0, i32 0, !dbg !2454
  %10 = load i8*, i8** %key75, align 8, !dbg !2454, !tbaa !2455
  %11 = bitcast i8* %10 to %struct.redisObject*, !dbg !2454
  call void @llvm.dbg.value(metadata %struct.redisObject* %11, metadata !2336, metadata !DIExpression()), !dbg !2401
  %val76 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call72, i64 0, i32 1, !dbg !2457
  %12 = bitcast i8** %val76 to %struct.redisObject**, !dbg !2457
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !2457, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %13, metadata !2338, metadata !DIExpression()), !dbg !2401
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 5, !dbg !2459
  %14 = load i32, i32* %refcount, align 4, !dbg !2459, !tbaa !1534
  %cmp77.not = icmp eq i32 %14, 1, !dbg !2461
  br i1 %cmp77.not, label %if.end79, label %while.cond.backedge, !dbg !2462

if.end79:                                         ; preds = %if.then74
  %refcount80 = getelementptr inbounds i8, i8* %10, i64 12, !dbg !2463
  %15 = bitcast i8* %refcount80 to i32*, !dbg !2463
  %16 = load i32, i32* %15, align 4, !dbg !2463, !tbaa !1534
  %cmp81.not = icmp eq i32 %16, 1, !dbg !2464
  br i1 %cmp81.not, label %if.end85, label %if.then82, !dbg !2465

if.then82:                                        ; preds = %if.end79
  %call83 = call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef nonnull %11) #22, !dbg !2466
  call void @llvm.dbg.value(metadata %struct.redisObject* %call83, metadata !2343, metadata !DIExpression()), !dbg !2467
  call void @decrRefCount(i8* noundef nonnull %10) #22, !dbg !2468
  %17 = bitcast %struct.dictEntry* %call72 to %struct.redisObject**, !dbg !2469
  store %struct.redisObject* %call83, %struct.redisObject** %17, align 8, !dbg !2469, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %call83, metadata !2336, metadata !DIExpression()), !dbg !2401
  br label %if.end85, !dbg !2470

if.end85:                                         ; preds = %if.then82, %if.end79
  %key.0 = phi %struct.redisObject* [ %call83, %if.then82 ], [ %11, %if.end79 ], !dbg !2471
  call void @llvm.dbg.value(metadata %struct.redisObject* %key.0, metadata !2336, metadata !DIExpression()), !dbg !2401
  %call86 = call i32 @vmSwapObjectBlocking(%struct.redisObject* noundef %key.0, %struct.redisObject* noundef nonnull %13) #22, !dbg !2472
  %cmp87 = icmp eq i32 %call86, 0, !dbg !2474
  br i1 %cmp87, label %if.then88, label %while.cond.backedge, !dbg !2475

if.then88:                                        ; preds = %if.end85
  store i8* null, i8** %val76, align 8, !dbg !2476, !tbaa !2458
  br label %while.cond.backedge, !dbg !2477

if.end92:                                         ; preds = %if.end69
  call void @llvm.dbg.value(metadata i32 0, metadata !2339, metadata !DIExpression()), !dbg !2401
  %call93 = call i64 @zmalloc_used_memory() #23, !dbg !2478
  %18 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !2480, !tbaa !1379
  %sub = sub i64 %call93, %18, !dbg !2481
  %cmp94 = icmp ugt i64 %sub, 33554432, !dbg !2482
  call void @llvm.dbg.value(metadata i32 undef, metadata !2339, metadata !DIExpression()), !dbg !2401
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4
  %tobool99 = icmp ne i32 %19, 0
  %or.cond132 = select i1 %tobool99, i1 %cmp94, i1 false, !dbg !2483
  br i1 %or.cond132, label %while.cond103, label %while.cond.backedge, !dbg !2483

while.cond103:                                    ; preds = %if.end92, %while.body106
  %call104 = call i64 @zmalloc_used_memory() #23, !dbg !2485
  %20 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !2487, !tbaa !1379
  %cmp105 = icmp ugt i64 %call104, %20, !dbg !2488
  br i1 %cmp105, label %while.body106, label %while.end, !dbg !2489

while.body106:                                    ; preds = %while.cond103
  %call107 = call i32 @vmSwapOneObjectBlocking() #22, !dbg !2490
  %cmp108 = icmp eq i32 %call107, -1, !dbg !2493
  br i1 %cmp108, label %while.end, label %while.cond103, !dbg !2494, !llvm.loop !2495

while.end:                                        ; preds = %while.body106, %while.cond103
  %call111 = call i64 @zmalloc_used_memory() #23, !dbg !2497
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !2499, !tbaa !1379
  %cmp112 = icmp ugt i64 %call111, %21, !dbg !2500
  %spec.select = zext i1 %cmp112 to i32, !dbg !2501
  br label %while.cond.backedge, !dbg !2501

while.cond.backedge:                              ; preds = %while.end, %if.end92, %if.then74, %if.end85, %if.then88, %if.then71, %if.then60, %if.end46
  %d.0.be = phi %struct.dict* [ %5, %if.end46 ], [ %d.0, %if.then60 ], [ %d.0, %if.then71 ], [ %d.0, %if.then88 ], [ %d.0, %if.end85 ], [ %d.0, %if.then74 ], [ %d.0, %while.end ], [ %d.0, %if.end92 ]
  %db.0.be = phi %struct.redisDb* [ %add.ptr47, %if.end46 ], [ %db.0, %if.then60 ], [ %db.0, %if.then71 ], [ %db.0, %if.then88 ], [ %db.0, %if.end85 ], [ %db.0, %if.then74 ], [ %db.0, %while.end ], [ %db.0, %if.end92 ]
  %swap_all_values.0.be = phi i32 [ %swap_all_values.0, %if.end46 ], [ %swap_all_values.0, %if.then60 ], [ 1, %if.then71 ], [ 1, %if.then88 ], [ 1, %if.end85 ], [ 1, %if.then74 ], [ %spec.select, %while.end ], [ 0, %if.end92 ]
  br label %while.cond, !dbg !2349, !llvm.loop !2502

while.end119:                                     ; preds = %if.end34
  call void @llvm.dbg.value(metadata i32 undef, metadata !2327, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata %struct.redisDb* undef, metadata !2329, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !2328, metadata !DIExpression()), !dbg !2349
  %call120 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call2) #23, !dbg !2505
  br label %cleanup121, !dbg !2506

eoferr:                                           ; preds = %if.end53, %if.end49, %if.then39, %if.end29, %if.then25, %while.cond, %if.end
  call void @llvm.dbg.label(metadata !2348), !dbg !2507
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.914, i64 0, i64 0)) #22, !dbg !2508
  call void @exit(i32 noundef 1) #26, !dbg !2509
  unreachable, !dbg !2509

cleanup121:                                       ; preds = %entry, %while.end119, %if.then17, %if.then10
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %if.then17 ], [ 0, %while.end119 ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %2) #24, !dbg !2510
  ret i32 %retval.0, !dbg !2510
}

declare !dbg !2511 dso_local void @aeSetBeforeSleepProc(%struct.aeEventLoop* noundef, void (%struct.aeEventLoop*)* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @beforeSleep(%struct.aeEventLoop* nocapture noundef readnone %eventLoop) #0 !dbg !2514 {
entry:
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %eventLoop, metadata !2516, metadata !DIExpression()), !dbg !2524
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !2525, !tbaa !1384
  %tobool.not = icmp eq i32 %0, 0, !dbg !2526
  br i1 %tobool.not, label %if.end11, label %land.lhs.true, !dbg !2527

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !2528, !tbaa !2529
  %len = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 5, !dbg !2528
  %2 = load i32, i32* %len, align 8, !dbg !2528, !tbaa !1358
  %tobool1.not = icmp eq i32 %2, 0, !dbg !2528
  br i1 %tobool1.not, label %if.end11, label %if.then, !dbg !2530

if.then:                                          ; preds = %land.lhs.true
  %3 = bitcast %struct.listIter* %li to i8*, !dbg !2531
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !2531
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !2517, metadata !DIExpression()), !dbg !2532
  call void @listRewind(%struct.list* noundef nonnull %1, %struct.listIter* noundef nonnull %li) #23, !dbg !2533
  %call25 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !2534
  call void @llvm.dbg.value(metadata %struct.listNode* %call25, metadata !2520, metadata !DIExpression()), !dbg !2535
  %tobool2.not26 = icmp eq %struct.listNode* %call25, null, !dbg !2536
  br i1 %tobool2.not26, label %while.end, label %while.body, !dbg !2536

while.body:                                       ; preds = %if.then, %if.end
  %call27 = phi %struct.listNode* [ %call, %if.end ], [ %call25, %if.then ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call27, i64 0, i32 2, !dbg !2537
  %4 = load i8*, i8** %value, align 8, !dbg !2537, !tbaa !891
  %5 = bitcast i8* %4 to %struct.redisClient*, !dbg !2538
  call void @llvm.dbg.value(metadata %struct.redisClient* %5, metadata !2521, metadata !DIExpression()), !dbg !2539
  %6 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !2540, !tbaa !2529
  call void @listDelNode(%struct.list* noundef %6, %struct.listNode* noundef nonnull %call27) #23, !dbg !2541
  %flags = getelementptr inbounds i8, i8* %4, i64 88, !dbg !2542
  %7 = bitcast i8* %flags to i32*, !dbg !2542
  %8 = load i32, i32* %7, align 8, !dbg !2543, !tbaa !1402
  %and = and i32 %8, -33, !dbg !2543
  store i32 %and, i32* %7, align 8, !dbg !2543, !tbaa !1402
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !2544, !tbaa !2545
  %dec = add i32 %9, -1, !dbg !2544
  store i32 %dec, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !2544, !tbaa !2545
  %10 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2546, !tbaa !941
  %fd = bitcast i8* %4 to i32*, !dbg !2547
  %11 = load i32, i32* %fd, align 8, !dbg !2547, !tbaa !943
  %call3 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %10, i32 noundef %11, i32 noundef 1, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @readQueryFromClient, i8* noundef %4) #23, !dbg !2548
  %argv = getelementptr inbounds i8, i8* %4, i64 32, !dbg !2549
  %12 = bitcast i8* %argv to %struct.redisObject***, !dbg !2549
  %13 = load %struct.redisObject**, %struct.redisObject*** %12, align 8, !dbg !2549, !tbaa !1352
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !2550, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %14, i64 0, i32 0, !dbg !2551
  %15 = load i8*, i8** %ptr, align 8, !dbg !2551, !tbaa !1328
  %call4 = call fastcc %struct.redisCommand* @lookupCommand(i8* noundef %15) #22, !dbg !2552
  call void @llvm.dbg.value(metadata %struct.redisCommand* %call4, metadata !2523, metadata !DIExpression()), !dbg !2539
  %cmp.not = icmp eq %struct.redisCommand* %call4, null, !dbg !2553
  br i1 %cmp.not, label %cond.false, label %cond.end, !dbg !2553

cond.false:                                       ; preds = %while.body
  call void @__assert_fail(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.915, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 1591, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @__PRETTY_FUNCTION__.beforeSleep, i64 0, i64 0)) #26, !dbg !2553
  unreachable, !dbg !2553

cond.end:                                         ; preds = %while.body
  call void @call(%struct.redisClient* noundef nonnull %5, %struct.redisCommand* noundef nonnull %call4) #22, !dbg !2554
  call void @resetClient(%struct.redisClient* noundef nonnull %5) #22, !dbg !2555
  %querybuf = getelementptr inbounds i8, i8* %4, i64 24, !dbg !2556
  %16 = bitcast i8* %querybuf to i8**, !dbg !2556
  %17 = load i8*, i8** %16, align 8, !dbg !2556, !tbaa !1446
  %tobool5.not = icmp eq i8* %17, null, !dbg !2558
  br i1 %tobool5.not, label %if.end, label %land.lhs.true6, !dbg !2559

land.lhs.true6:                                   ; preds = %cond.end
  %call8 = call i64 @sdslen(i8* noundef nonnull %17) #23, !dbg !2560
  %cmp9.not = icmp eq i64 %call8, 0, !dbg !2561
  br i1 %cmp9.not, label %if.end, label %if.then10, !dbg !2562

if.then10:                                        ; preds = %land.lhs.true6
  call void @processInputBuffer(%struct.redisClient* noundef nonnull %5) #22, !dbg !2563
  br label %if.end, !dbg !2563

if.end:                                           ; preds = %if.then10, %land.lhs.true6, %cond.end
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !2534
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !2520, metadata !DIExpression()), !dbg !2535
  %tobool2.not = icmp eq %struct.listNode* %call, null, !dbg !2536
  br i1 %tobool2.not, label %while.end, label %while.body, !dbg !2536, !llvm.loop !2564

while.end:                                        ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !2566
  br label %if.end11, !dbg !2567

if.end11:                                         ; preds = %while.end, %land.lhs.true, %entry
  call void @flushAppendOnlyFile() #22, !dbg !2568
  ret void, !dbg !2569
}

declare !dbg !2570 dso_local void @aeMain(%struct.aeEventLoop* noundef) local_unnamed_addr #4

declare !dbg !2573 dso_local void @aeDeleteEventLoop(%struct.aeEventLoop* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind
declare !dbg !2574 dso_local i64 @strftime(i8* noundef, i64 noundef, i8* noundef, %struct.tm* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !2594 dso_local %struct.tm* @localtime(i64* noundef) local_unnamed_addr #3

declare !dbg !2600 dso_local i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !2603 dso_local i32 @getpid() local_unnamed_addr #3

declare !dbg !2606 dso_local i32 @vfprintf(%struct._IO_FILE* noundef, i8* noundef, %struct.__va_list_tag* noundef) local_unnamed_addr #4

declare !dbg !2610 dso_local i32 @fflush(%struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: nounwind
declare !dbg !2611 dso_local i32 @unlink(i8* noundef) local_unnamed_addr #3

declare !dbg !2614 dso_local void @listRewind(%struct.list* noundef, %struct.listIter* noundef) local_unnamed_addr #4

declare !dbg !2618 dso_local %struct.listNode* @listNext(%struct.listIter* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @freeClient(%struct.redisClient* noundef %c) #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !2623, metadata !DIExpression()), !dbg !2628
  %querybuf = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 3, !dbg !2629
  %0 = load i8*, i8** %querybuf, align 8, !dbg !2629, !tbaa !1446
  tail call void @sdsfree(i8* noundef %0) #23, !dbg !2630
  store i8* null, i8** %querybuf, align 8, !dbg !2631, !tbaa !1446
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !2632
  %1 = load i32, i32* %flags, align 8, !dbg !2632, !tbaa !1402
  %and = and i32 %1, 16, !dbg !2634
  %tobool.not = icmp eq i32 %and, 0, !dbg !2634
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !2635

if.then:                                          ; preds = %entry
  tail call void @unblockClientWaitingData(%struct.redisClient* noundef nonnull %c) #22, !dbg !2636
  br label %if.end, !dbg !2636

if.end:                                           ; preds = %if.then, %entry
  %call = tail call i32 @pubsubUnsubscribeAllChannels(%struct.redisClient* noundef nonnull %c, i32 noundef 0) #22, !dbg !2637
  %call2 = tail call i32 @pubsubUnsubscribeAllPatterns(%struct.redisClient* noundef nonnull %c, i32 noundef 0) #22, !dbg !2638
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !2639
  %2 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !2639, !tbaa !2640
  tail call void @dictRelease(%struct.dict* noundef %2) #23, !dbg !2641
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !2642
  %3 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !2642, !tbaa !2643
  tail call void @listRelease(%struct.list* noundef %3) #23, !dbg !2644
  %4 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2645, !tbaa !941
  %fd = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 0, !dbg !2646
  %5 = load i32, i32* %fd, align 8, !dbg !2646, !tbaa !943
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %4, i32 noundef %5, i32 noundef 1) #23, !dbg !2647
  %6 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2648, !tbaa !941
  %7 = load i32, i32* %fd, align 8, !dbg !2649, !tbaa !943
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %6, i32 noundef %7, i32 noundef 2) #23, !dbg !2650
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 10, !dbg !2651
  %8 = load %struct.list*, %struct.list** %reply, align 8, !dbg !2651, !tbaa !1357
  tail call void @listRelease(%struct.list* noundef %8) #23, !dbg !2652
  tail call void @freeClientArgv(%struct.redisClient* noundef nonnull %c) #22, !dbg !2653
  %9 = load i32, i32* %fd, align 8, !dbg !2654, !tbaa !943
  %call5 = tail call i32 @close(i32 noundef %9) #23, !dbg !2655
  %10 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !2656, !tbaa !2657
  %11 = bitcast %struct.redisClient* %c to i8*, !dbg !2658
  %call6 = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %10, i8* noundef %11) #23, !dbg !2659
  call void @llvm.dbg.value(metadata %struct.listNode* %call6, metadata !2624, metadata !DIExpression()), !dbg !2628
  %cmp.not = icmp eq %struct.listNode* %call6, null, !dbg !2660
  br i1 %cmp.not, label %cond.false, label %cond.end, !dbg !2660

cond.false:                                       ; preds = %if.end
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 2029) #22, !dbg !2660
  tail call void @_exit(i32 noundef 1) #26, !dbg !2660
  unreachable, !dbg !2660

cond.end:                                         ; preds = %if.end
  %12 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !2661, !tbaa !2657
  tail call void @listDelNode(%struct.list* noundef %12, %struct.listNode* noundef nonnull %call6) #23, !dbg !2662
  %13 = load i32, i32* %flags, align 8, !dbg !2663, !tbaa !1402
  %and8 = and i32 %13, 32, !dbg !2665
  %tobool9.not = icmp eq i32 %and8, 0, !dbg !2665
  br i1 %tobool9.not, label %if.end28, label %if.then10, !dbg !2666

if.then10:                                        ; preds = %cond.end
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !2667, !tbaa !1384
  %tobool11.not = icmp eq i32 %14, 0, !dbg !2667
  br i1 %tobool11.not, label %cond.false13, label %cond.end14, !dbg !2667

cond.false13:                                     ; preds = %if.then10
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 2034) #22, !dbg !2667
  tail call void @_exit(i32 noundef 1) #26, !dbg !2667
  unreachable, !dbg !2667

cond.end14:                                       ; preds = %if.then10
  %io_keys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 24, !dbg !2669
  %15 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !2669, !tbaa !2671
  %len = getelementptr inbounds %struct.list, %struct.list* %15, i64 0, i32 5, !dbg !2669
  %16 = load i32, i32* %len, align 8, !dbg !2669, !tbaa !1358
  %cmp15 = icmp eq i32 %16, 0, !dbg !2672
  br i1 %cmp15, label %if.then16, label %while.body, !dbg !2673

if.then16:                                        ; preds = %cond.end14
  %17 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !2674, !tbaa !2529
  %call17 = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %17, i8* noundef nonnull %11) #23, !dbg !2676
  call void @llvm.dbg.value(metadata %struct.listNode* %call17, metadata !2624, metadata !DIExpression()), !dbg !2628
  %cmp18.not = icmp eq %struct.listNode* %call17, null, !dbg !2677
  br i1 %cmp18.not, label %cond.false20, label %cond.end21, !dbg !2677

cond.false20:                                     ; preds = %if.then16
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 2040) #22, !dbg !2677
  tail call void @_exit(i32 noundef 1) #26, !dbg !2677
  unreachable, !dbg !2677

cond.end21:                                       ; preds = %if.then16
  %18 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !2678, !tbaa !2529
  tail call void @listDelNode(%struct.list* noundef %18, %struct.listNode* noundef nonnull %call17) #23, !dbg !2679
  br label %if.end27, !dbg !2680

while.body:                                       ; preds = %cond.end14, %while.body
  %19 = phi %struct.list* [ %23, %while.body ], [ %15, %cond.end14 ]
  %head = getelementptr inbounds %struct.list, %struct.list* %19, i64 0, i32 0, !dbg !2681
  %20 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !2681, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %20, metadata !2624, metadata !DIExpression()), !dbg !2628
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %20, i64 0, i32 2, !dbg !2684
  %21 = bitcast i8** %value to %struct.redisObject**, !dbg !2684
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !2684, !tbaa !891
  %call26 = tail call i32 @dontWaitForSwappedKey(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %22) #22, !dbg !2685
  %23 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !2686, !tbaa !2671
  %len23 = getelementptr inbounds %struct.list, %struct.list* %23, i64 0, i32 5, !dbg !2686
  %24 = load i32, i32* %len23, align 8, !dbg !2686, !tbaa !1358
  %tobool24.not = icmp eq i32 %24, 0, !dbg !2687
  br i1 %tobool24.not, label %if.end27, label %while.body, !dbg !2687, !llvm.loop !2688

if.end27:                                         ; preds = %while.body, %cond.end21
  %25 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !2690, !tbaa !2545
  %dec = add i32 %25, -1, !dbg !2690
  store i32 %dec, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !2690, !tbaa !2545
  br label %if.end28, !dbg !2691

if.end28:                                         ; preds = %if.end27, %cond.end
  %io_keys29 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 24, !dbg !2692
  %26 = load %struct.list*, %struct.list** %io_keys29, align 8, !dbg !2692, !tbaa !2671
  tail call void @listRelease(%struct.list* noundef %26) #23, !dbg !2693
  %27 = load i32, i32* %flags, align 8, !dbg !2694, !tbaa !1402
  %and31 = and i32 %27, 1, !dbg !2695
  %tobool32.not = icmp eq i32 %and31, 0, !dbg !2695
  br i1 %tobool32.not, label %if.end51, label %if.then33, !dbg !2696

if.then33:                                        ; preds = %if.end28
  %replstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 16, !dbg !2697
  %28 = load i32, i32* %replstate, align 4, !dbg !2697, !tbaa !896
  %cmp34 = icmp eq i32 %28, 5, !dbg !2699
  br i1 %cmp34, label %land.lhs.true, label %if.end39, !dbg !2700

land.lhs.true:                                    ; preds = %if.then33
  %repldbfd = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 17, !dbg !2701
  %29 = load i32, i32* %repldbfd, align 8, !dbg !2701, !tbaa !917
  %cmp35.not = icmp eq i32 %29, -1, !dbg !2702
  br i1 %cmp35.not, label %if.end39, label %if.then36, !dbg !2703

if.then36:                                        ; preds = %land.lhs.true
  %call38 = tail call i32 @close(i32 noundef %29) #23, !dbg !2704
  %.pre = load i32, i32* %flags, align 8, !dbg !2705, !tbaa !1402
  br label %if.end39, !dbg !2704

if.end39:                                         ; preds = %if.then36, %land.lhs.true, %if.then33
  %30 = phi i32 [ %.pre, %if.then36 ], [ %27, %land.lhs.true ], [ %27, %if.then33 ], !dbg !2705
  %and41 = and i32 %30, 4, !dbg !2706
  %tobool42.not = icmp eq i32 %and41, 0, !dbg !2706
  %31 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !2707
  %32 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !2707
  %cond = select i1 %tobool42.not, %struct.list* %32, %struct.list* %31, !dbg !2707
  call void @llvm.dbg.value(metadata %struct.list* %cond, metadata !2625, metadata !DIExpression()), !dbg !2708
  %call46 = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %cond, i8* noundef nonnull %11) #23, !dbg !2709
  call void @llvm.dbg.value(metadata %struct.listNode* %call46, metadata !2624, metadata !DIExpression()), !dbg !2628
  %cmp47.not = icmp eq %struct.listNode* %call46, null, !dbg !2710
  br i1 %cmp47.not, label %cond.false49, label %cond.end50, !dbg !2710

cond.false49:                                     ; preds = %if.end39
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 2057) #22, !dbg !2710
  tail call void @_exit(i32 noundef 1) #26, !dbg !2710
  unreachable, !dbg !2710

cond.end50:                                       ; preds = %if.end39
  tail call void @listDelNode(%struct.list* noundef %cond, %struct.listNode* noundef nonnull %call46) #23, !dbg !2711
  %.pre99 = load i32, i32* %flags, align 8, !dbg !2712, !tbaa !1402
  br label %if.end51, !dbg !2714

if.end51:                                         ; preds = %cond.end50, %if.end28
  %33 = phi i32 [ %.pre99, %cond.end50 ], [ %27, %if.end28 ], !dbg !2712
  %and53 = and i32 %33, 2, !dbg !2715
  %tobool54.not = icmp eq i32 %and53, 0, !dbg !2715
  br i1 %tobool54.not, label %if.end56, label %if.then55, !dbg !2716

if.then55:                                        ; preds = %if.end51
  store %struct.redisClient* null, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !2717, !tbaa !2719
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !2720, !tbaa !2055
  br label %if.end56, !dbg !2721

if.end56:                                         ; preds = %if.then55, %if.end51
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !2722
  %34 = bitcast %struct.redisObject*** %argv to i8**, !dbg !2722
  %35 = load i8*, i8** %34, align 8, !dbg !2722, !tbaa !1352
  tail call void @zfree(i8* noundef %35) #23, !dbg !2723
  %mbargv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 5, !dbg !2724
  %36 = bitcast %struct.redisObject*** %mbargv to i8**, !dbg !2724
  %37 = load i8*, i8** %36, align 8, !dbg !2724, !tbaa !2725
  tail call void @zfree(i8* noundef %37) #23, !dbg !2726
  tail call void @freeClientMultiState(%struct.redisClient* noundef nonnull %c) #22, !dbg !2727
  tail call void @zfree(i8* noundef nonnull %11) #23, !dbg !2728
  ret void, !dbg !2729
}

declare !dbg !2730 dso_local void @aeDeleteFileEvent(%struct.aeEventLoop* noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !2733 dso_local i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef, i32 noundef, i32 noundef, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @sendBulkToSlave(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* noundef %privdata, i32 noundef %mask) #0 !dbg !2736 {
entry:
  %buf = alloca [1024 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !2740, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata i32 %fd, metadata !2741, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !2742, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata i32 %mask, metadata !2743, metadata !DIExpression()), !dbg !2751
  %0 = bitcast i8* %privdata to %struct.redisClient*, !dbg !2752
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !2744, metadata !DIExpression()), !dbg !2751
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !2753
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #24, !dbg !2753
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !2745, metadata !DIExpression()), !dbg !2754
  %repldboff = getelementptr inbounds i8, i8* %privdata, i64 112, !dbg !2755
  %2 = bitcast i8* %repldboff to i64*, !dbg !2755
  %3 = load i64, i64* %2, align 8, !dbg !2755, !tbaa !931
  %cmp = icmp eq i64 %3, 0, !dbg !2756
  br i1 %cmp, label %if.then, label %if.end9, !dbg !2757

if.then:                                          ; preds = %entry
  %call = tail call i8* (...) @sdsempty() #23, !dbg !2758
  %repldbsize = getelementptr inbounds i8, i8* %privdata, i64 120, !dbg !2759
  %4 = bitcast i8* %repldbsize to i64*, !dbg !2759
  %5 = load i64, i64* %4, align 8, !dbg !2759, !tbaa !938
  %call1 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122, i64 0, i64 0), i64 noundef %5) #23, !dbg !2760
  call void @llvm.dbg.value(metadata i8* %call1, metadata !2748, metadata !DIExpression()), !dbg !2761
  %call2 = tail call i64 @sdslen(i8* noundef %call1) #23, !dbg !2762
  %call3 = tail call i64 @write(i32 noundef %fd, i8* noundef %call1, i64 noundef %call2) #23, !dbg !2764
  %call4 = tail call i64 @sdslen(i8* noundef %call1) #23, !dbg !2765
  %sext = shl i64 %call4, 32, !dbg !2766
  %conv5 = ashr exact i64 %sext, 32, !dbg !2766
  %cmp6.not = icmp eq i64 %call3, %conv5, !dbg !2767
  tail call void @sdsfree(i8* noundef %call1) #23, !dbg !2761
  br i1 %cmp6.not, label %cleanup.thread, label %cleanup, !dbg !2768

cleanup.thread:                                   ; preds = %if.then
  %.pre = load i64, i64* %2, align 8, !dbg !2769, !tbaa !931
  br label %if.end9

cleanup:                                          ; preds = %if.then
  tail call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !2770
  br label %cleanup48

if.end9:                                          ; preds = %cleanup.thread, %entry
  %6 = phi i64 [ %.pre, %cleanup.thread ], [ %3, %entry ], !dbg !2769
  %repldbfd = getelementptr inbounds i8, i8* %privdata, i64 104, !dbg !2772
  %7 = bitcast i8* %repldbfd to i32*, !dbg !2772
  %8 = load i32, i32* %7, align 8, !dbg !2772, !tbaa !917
  %call11 = tail call i64 @lseek64(i32 noundef %8, i64 noundef %6, i32 noundef 0) #23, !dbg !2773
  %9 = load i32, i32* %7, align 8, !dbg !2774, !tbaa !917
  %call13 = call i64 @read(i32 noundef %9, i8* noundef nonnull %1, i64 noundef 1024) #23, !dbg !2775
  call void @llvm.dbg.value(metadata i64 %call13, metadata !2747, metadata !DIExpression()), !dbg !2751
  %cmp14 = icmp slt i64 %call13, 1, !dbg !2776
  br i1 %cmp14, label %if.then16, label %if.end21, !dbg !2778

if.then16:                                        ; preds = %if.end9
  %cmp17 = icmp eq i64 %call13, 0, !dbg !2779
  br i1 %cmp17, label %cond.end, label %cond.false, !dbg !2781

cond.false:                                       ; preds = %if.then16
  %call19 = tail call i32* @__errno_location() #25, !dbg !2782
  %10 = load i32, i32* %call19, align 4, !dbg !2782, !tbaa !926
  %call20 = call i8* @strerror(i32 noundef %10) #23, !dbg !2783
  br label %cond.end, !dbg !2781

cond.end:                                         ; preds = %if.then16, %cond.false
  %cond = phi i8* [ %call20, %cond.false ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i64 0, i64 0), %if.then16 ], !dbg !2781
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.123, i64 0, i64 0), i8* noundef %cond) #22, !dbg !2784
  call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !2785
  br label %cleanup48, !dbg !2786

if.end21:                                         ; preds = %if.end9
  %call23 = call i64 @write(i32 noundef %fd, i8* noundef nonnull %1, i64 noundef %call13) #23, !dbg !2787
  call void @llvm.dbg.value(metadata i64 %call23, metadata !2746, metadata !DIExpression()), !dbg !2751
  %cmp24 = icmp eq i64 %call23, -1, !dbg !2789
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !2790

if.then26:                                        ; preds = %if.end21
  %call27 = tail call i32* @__errno_location() #25, !dbg !2791
  %11 = load i32, i32* %call27, align 4, !dbg !2791, !tbaa !926
  %call28 = call i8* @strerror(i32 noundef %11) #23, !dbg !2793
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.125, i64 0, i64 0), i8* noundef %call28) #22, !dbg !2794
  call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !2795
  br label %cleanup48, !dbg !2796

if.end29:                                         ; preds = %if.end21
  %12 = load i64, i64* %2, align 8, !dbg !2797, !tbaa !931
  %add = add nsw i64 %12, %call23, !dbg !2797
  store i64 %add, i64* %2, align 8, !dbg !2797, !tbaa !931
  %repldbsize32 = getelementptr inbounds i8, i8* %privdata, i64 120, !dbg !2798
  %13 = bitcast i8* %repldbsize32 to i64*, !dbg !2798
  %14 = load i64, i64* %13, align 8, !dbg !2798, !tbaa !938
  %cmp33 = icmp eq i64 %add, %14, !dbg !2800
  br i1 %cmp33, label %if.then35, label %cleanup48, !dbg !2801

if.then35:                                        ; preds = %if.end29
  %15 = load i32, i32* %7, align 8, !dbg !2802, !tbaa !917
  %call37 = call i32 @close(i32 noundef %15) #23, !dbg !2804
  store i32 -1, i32* %7, align 8, !dbg !2805, !tbaa !917
  %16 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2806, !tbaa !941
  %fd39 = bitcast i8* %privdata to i32*, !dbg !2807
  %17 = load i32, i32* %fd39, align 8, !dbg !2807, !tbaa !943
  call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %16, i32 noundef %17, i32 noundef 2) #23, !dbg !2808
  %replstate = getelementptr inbounds i8, i8* %privdata, i64 100, !dbg !2809
  %18 = bitcast i8* %replstate to i32*, !dbg !2809
  store i32 6, i32* %18, align 4, !dbg !2810, !tbaa !896
  %19 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2811, !tbaa !941
  %20 = load i32, i32* %fd39, align 8, !dbg !2813, !tbaa !943
  %call41 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %19, i32 noundef %20, i32 noundef 2, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @sendReplyToClient, i8* noundef nonnull %privdata) #23, !dbg !2814
  %cmp42 = icmp eq i32 %call41, -1, !dbg !2815
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !2816

if.then44:                                        ; preds = %if.then35
  call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !2817
  br label %cleanup48, !dbg !2819

if.end45:                                         ; preds = %if.then35
  %call46 = call i8* (...) @sdsempty() #23, !dbg !2820
  call void @addReplySds(%struct.redisClient* noundef nonnull %0, i8* noundef %call46) #22, !dbg !2821
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.126, i64 0, i64 0)) #22, !dbg !2822
  br label %cleanup48, !dbg !2823

cleanup48:                                        ; preds = %cleanup, %if.end29, %if.end45, %if.then44, %if.then26, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #24, !dbg !2824
  ret void, !dbg !2824
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveBackground(i8* noundef %filename) #0 !dbg !2825 {
entry:
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2827, metadata !DIExpression()), !dbg !2829
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !2830, !tbaa !732
  %cmp.not = icmp eq i32 %0, -1, !dbg !2832
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !2833

if.end:                                           ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !2834, !tbaa !1384
  %tobool.not = icmp eq i32 %1, 0, !dbg !2836
  br i1 %tobool.not, label %if.end2, label %if.then1, !dbg !2837

if.then1:                                         ; preds = %if.end
  tail call void @waitEmptyIOJobsQueue() #22, !dbg !2838
  br label %if.end2, !dbg !2838

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !2839, !tbaa !708
  store i64 %2, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 8, !dbg !2840, !tbaa !717
  %call = tail call i32 @fork() #23, !dbg !2841
  call void @llvm.dbg.value(metadata i32 %call, metadata !2828, metadata !DIExpression()), !dbg !2829
  switch i32 %call, label %if.end17 [
    i32 0, label %if.then4
    i32 -1, label %if.then14
  ], !dbg !2843

if.then4:                                         ; preds = %if.end2
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !2844, !tbaa !1384
  %tobool5.not = icmp eq i32 %3, 0, !dbg !2847
  br i1 %tobool5.not, label %if.end7, label %if.then6, !dbg !2848

if.then6:                                         ; preds = %if.then4
  tail call void @vmReopenSwapFile() #22, !dbg !2849
  br label %if.end7, !dbg !2849

if.end7:                                          ; preds = %if.then6, %if.then4
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 4, !dbg !2850, !tbaa !2851
  %call8 = tail call i32 @close(i32 noundef %4) #23, !dbg !2852
  %call9 = tail call i32 @rdbSave(i8* noundef %filename) #22, !dbg !2853
  %cmp10 = icmp eq i32 %call9, 0, !dbg !2855
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2856

if.then11:                                        ; preds = %if.end7
  tail call void @_exit(i32 noundef 0) #26, !dbg !2857
  unreachable, !dbg !2857

if.else:                                          ; preds = %if.end7
  tail call void @_exit(i32 noundef 1) #26, !dbg !2859
  unreachable, !dbg !2859

if.then14:                                        ; preds = %if.end2
  %call15 = tail call i32* @__errno_location() #25, !dbg !2861
  %5 = load i32, i32* %call15, align 4, !dbg !2861, !tbaa !926
  %call16 = tail call i8* @strerror(i32 noundef %5) #23, !dbg !2865
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.127, i64 0, i64 0), i8* noundef %call16) #22, !dbg !2866
  br label %cleanup, !dbg !2867

if.end17:                                         ; preds = %if.end2
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.128, i64 0, i64 0), i32 noundef %call) #22, !dbg !2868
  store i32 %call, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !2869, !tbaa !732
  tail call void @updateDictResizePolicy() #22, !dbg !2870
  br label %cleanup, !dbg !2871

cleanup:                                          ; preds = %entry, %if.end17, %if.then14
  %retval.0 = phi i32 [ -1, %if.then14 ], [ 0, %if.end17 ], [ -1, %entry ], !dbg !2829
  ret i32 %retval.0, !dbg !2872
}

; Function Attrs: noinline nounwind uwtable
define internal void @unblockClientWaitingData(%struct.redisClient* noundef %c) #0 !dbg !2873 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !2875, metadata !DIExpression()), !dbg !2879
  %blockingkeys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 21, !dbg !2880
  %0 = load %struct.redisObject**, %struct.redisObject*** %blockingkeys, align 8, !dbg !2880, !tbaa !2881
  %cmp.not = icmp eq %struct.redisObject** %0, null, !dbg !2880
  br i1 %cmp.not, label %cond.false, label %for.cond.preheader, !dbg !2880

for.cond.preheader:                               ; preds = %entry
  %1 = bitcast %struct.redisObject** %0 to i8*, !dbg !2880
  %blockingkeysnum = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 22
  call void @llvm.dbg.value(metadata i32 0, metadata !2878, metadata !DIExpression()), !dbg !2879
  %2 = load i32, i32* %blockingkeysnum, align 8, !dbg !2882, !tbaa !2885
  %cmp149 = icmp sgt i32 %2, 0, !dbg !2886
  br i1 %cmp149, label %for.body.lr.ph, label %for.end, !dbg !2887

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %3 = bitcast %struct.redisClient* %c to i8*
  call void @llvm.dbg.value(metadata i64 0, metadata !2878, metadata !DIExpression()), !dbg !2879
  %4 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !2888, !tbaa !2890
  %blockingkeys254 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 0, i32 2, !dbg !2891
  %5 = load %struct.dict*, %struct.dict** %blockingkeys254, align 8, !dbg !2891, !tbaa !2892
  %6 = bitcast %struct.redisObject** %0 to i8**, !dbg !2893
  %7 = load i8*, i8** %6, align 8, !dbg !2893, !tbaa !782
  %call55 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %5, i8* noundef %7) #23, !dbg !2894
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call55, metadata !2876, metadata !DIExpression()), !dbg !2879
  %cmp4.not56 = icmp eq %struct.dictEntry* %call55, null, !dbg !2895
  br i1 %cmp4.not56, label %cond.false6, label %cond.end7, !dbg !2895

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7656, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.unblockClientWaitingData, i64 0, i64 0)) #26, !dbg !2880
  unreachable, !dbg !2880

cond.false6:                                      ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7661, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.unblockClientWaitingData, i64 0, i64 0)) #26, !dbg !2895
  unreachable, !dbg !2895

cond.end7:                                        ; preds = %for.body.lr.ph, %if.end.for.body_crit_edge
  %call58 = phi %struct.dictEntry* [ %call, %if.end.for.body_crit_edge ], [ %call55, %for.body.lr.ph ]
  %indvars.iv57 = phi i64 [ %indvars.iv.next, %if.end.for.body_crit_edge ], [ 0, %for.body.lr.ph ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv57, metadata !2878, metadata !DIExpression()), !dbg !2879
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call58, i64 0, i32 1, !dbg !2896
  %8 = bitcast i8** %val to %struct.list**, !dbg !2896
  %9 = load %struct.list*, %struct.list** %8, align 8, !dbg !2896, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %9, metadata !2877, metadata !DIExpression()), !dbg !2879
  %call8 = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %9, i8* noundef nonnull %3) #23, !dbg !2897
  tail call void @listDelNode(%struct.list* noundef %9, %struct.listNode* noundef %call8) #23, !dbg !2898
  %len = getelementptr inbounds %struct.list, %struct.list* %9, i64 0, i32 5, !dbg !2899
  %10 = load i32, i32* %len, align 8, !dbg !2899, !tbaa !1358
  %cmp9 = icmp eq i32 %10, 0, !dbg !2901
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2902

if.then:                                          ; preds = %cond.end7
  %11 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !2903, !tbaa !2890
  %blockingkeys11 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %11, i64 0, i32 2, !dbg !2904
  %12 = load %struct.dict*, %struct.dict** %blockingkeys11, align 8, !dbg !2904, !tbaa !2892
  %13 = load %struct.redisObject**, %struct.redisObject*** %blockingkeys, align 8, !dbg !2905, !tbaa !2881
  %arrayidx14 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %13, i64 %indvars.iv57, !dbg !2906
  %14 = bitcast %struct.redisObject** %arrayidx14 to i8**, !dbg !2906
  %15 = load i8*, i8** %14, align 8, !dbg !2906, !tbaa !782
  %call15 = tail call i32 @dictDelete(%struct.dict* noundef %12, i8* noundef %15) #23, !dbg !2907
  br label %if.end, !dbg !2907

if.end:                                           ; preds = %if.then, %cond.end7
  %16 = load %struct.redisObject**, %struct.redisObject*** %blockingkeys, align 8, !dbg !2908, !tbaa !2881
  %arrayidx18 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %16, i64 %indvars.iv57, !dbg !2909
  %17 = bitcast %struct.redisObject** %arrayidx18 to i8**, !dbg !2909
  %18 = load i8*, i8** %17, align 8, !dbg !2909, !tbaa !782
  tail call void @decrRefCount(i8* noundef %18) #22, !dbg !2910
  %indvars.iv.next = add nuw nsw i64 %indvars.iv57, 1, !dbg !2911
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !2878, metadata !DIExpression()), !dbg !2879
  %19 = load i32, i32* %blockingkeysnum, align 8, !dbg !2882, !tbaa !2885
  %20 = sext i32 %19 to i64, !dbg !2886
  %cmp1 = icmp slt i64 %indvars.iv.next, %20, !dbg !2886
  br i1 %cmp1, label %if.end.for.body_crit_edge, label %for.end.loopexit, !dbg !2887, !llvm.loop !2912

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.redisObject**, %struct.redisObject*** %blockingkeys, align 8, !dbg !2914, !tbaa !2881
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !2878, metadata !DIExpression()), !dbg !2879
  %21 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !2888, !tbaa !2890
  %blockingkeys2 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %21, i64 0, i32 2, !dbg !2891
  %22 = load %struct.dict*, %struct.dict** %blockingkeys2, align 8, !dbg !2891, !tbaa !2892
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %.pre, i64 %indvars.iv.next, !dbg !2893
  %23 = bitcast %struct.redisObject** %arrayidx to i8**, !dbg !2893
  %24 = load i8*, i8** %23, align 8, !dbg !2893, !tbaa !782
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %22, i8* noundef %24) #23, !dbg !2894
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !2876, metadata !DIExpression()), !dbg !2879
  %cmp4.not = icmp eq %struct.dictEntry* %call, null, !dbg !2895
  br i1 %cmp4.not, label %cond.false6, label %cond.end7, !dbg !2895

for.end.loopexit:                                 ; preds = %if.end
  %.phi.trans.insert = bitcast %struct.redisObject*** %blockingkeys to i8**
  %.pre52 = load i8*, i8** %.phi.trans.insert, align 8, !dbg !2915, !tbaa !2881
  br label %for.end, !dbg !2915

for.end:                                          ; preds = %for.cond.preheader, %for.end.loopexit
  %25 = phi i8* [ %.pre52, %for.end.loopexit ], [ %1, %for.cond.preheader ], !dbg !2915
  tail call void @zfree(i8* noundef %25) #23, !dbg !2916
  store %struct.redisObject** null, %struct.redisObject*** %blockingkeys, align 8, !dbg !2917, !tbaa !2881
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !2918
  %26 = load i32, i32* %flags, align 8, !dbg !2919, !tbaa !1402
  %and = and i32 %26, -17, !dbg !2919
  store i32 %and, i32* %flags, align 8, !dbg !2919, !tbaa !1402
  %27 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !2920, !tbaa !2921
  %dec = add i32 %27, -1, !dbg !2920
  store i32 %dec, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !2920, !tbaa !2921
  %querybuf = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 3, !dbg !2922
  %28 = load i8*, i8** %querybuf, align 8, !dbg !2922, !tbaa !1446
  %tobool.not = icmp eq i8* %28, null, !dbg !2924
  br i1 %tobool.not, label %if.end25, label %land.lhs.true, !dbg !2925

land.lhs.true:                                    ; preds = %for.end
  %call22 = tail call i64 @sdslen(i8* noundef nonnull %28) #23, !dbg !2926
  %cmp23.not = icmp eq i64 %call22, 0, !dbg !2927
  br i1 %cmp23.not, label %if.end25, label %if.then24, !dbg !2928

if.then24:                                        ; preds = %land.lhs.true
  tail call void @processInputBuffer(%struct.redisClient* noundef nonnull %c) #22, !dbg !2929
  br label %if.end25, !dbg !2929

if.end25:                                         ; preds = %if.then24, %land.lhs.true, %for.end
  ret void, !dbg !2930
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubUnsubscribeAllChannels(%struct.redisClient* noundef %c, i32 noundef %notify) #0 !dbg !2931 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !2935, metadata !DIExpression()), !dbg !2951
  call void @llvm.dbg.value(metadata i32 %notify, metadata !2936, metadata !DIExpression()), !dbg !2951
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !2952
  %0 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !2952, !tbaa !2640
  %call = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %0) #23, !dbg !2953
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call, metadata !2937, metadata !DIExpression()), !dbg !2951
  call void @llvm.dbg.value(metadata i32 0, metadata !2948, metadata !DIExpression()), !dbg !2951
  %call110 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call) #23, !dbg !2954
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call110, metadata !2947, metadata !DIExpression()), !dbg !2951
  %cmp.not11 = icmp eq %struct.dictEntry* %call110, null, !dbg !2955
  br i1 %cmp.not11, label %while.end, label %while.body, !dbg !2956

while.body:                                       ; preds = %entry, %while.body
  %call113 = phi %struct.dictEntry* [ %call1, %while.body ], [ %call110, %entry ]
  %count.012 = phi i32 [ %add, %while.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %count.012, metadata !2948, metadata !DIExpression()), !dbg !2951
  %1 = bitcast %struct.dictEntry* %call113 to %struct.redisObject**, !dbg !2957
  %2 = load %struct.redisObject*, %struct.redisObject** %1, align 8, !dbg !2957, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %2, metadata !2949, metadata !DIExpression()), !dbg !2958
  %call2 = tail call i32 @pubsubUnsubscribeChannel(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2, i32 noundef %notify) #22, !dbg !2959
  %add = add nsw i32 %call2, %count.012, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %add, metadata !2948, metadata !DIExpression()), !dbg !2951
  %call1 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call) #23, !dbg !2954
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call1, metadata !2947, metadata !DIExpression()), !dbg !2951
  %cmp.not = icmp eq %struct.dictEntry* %call1, null, !dbg !2955
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !2956, !llvm.loop !2961

while.end:                                        ; preds = %while.body, %entry
  %count.0.lcssa = phi i32 [ 0, %entry ], [ %add, %while.body ], !dbg !2951
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call) #23, !dbg !2963
  ret i32 %count.0.lcssa, !dbg !2964
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubUnsubscribeAllPatterns(%struct.redisClient* noundef %c, i32 noundef %notify) #0 !dbg !2965 {
entry:
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !2967, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.value(metadata i32 %notify, metadata !2968, metadata !DIExpression()), !dbg !2974
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !2975
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !2975
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !2970, metadata !DIExpression()), !dbg !2976
  call void @llvm.dbg.value(metadata i32 0, metadata !2971, metadata !DIExpression()), !dbg !2974
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !2977
  %1 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !2977, !tbaa !2643
  call void @listRewind(%struct.list* noundef %1, %struct.listIter* noundef nonnull %li) #23, !dbg !2978
  call void @llvm.dbg.value(metadata i32 0, metadata !2971, metadata !DIExpression()), !dbg !2974
  %call7 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !2979
  call void @llvm.dbg.value(metadata %struct.listNode* %call7, metadata !2969, metadata !DIExpression()), !dbg !2974
  %cmp.not8 = icmp eq %struct.listNode* %call7, null, !dbg !2980
  br i1 %cmp.not8, label %while.end, label %while.body, !dbg !2981

while.body:                                       ; preds = %entry, %while.body
  %call10 = phi %struct.listNode* [ %call, %while.body ], [ %call7, %entry ]
  %count.09 = phi i32 [ %add, %while.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %count.09, metadata !2971, metadata !DIExpression()), !dbg !2974
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call10, i64 0, i32 2, !dbg !2982
  %2 = bitcast i8** %value to %struct.redisObject**, !dbg !2982
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !2982, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %3, metadata !2972, metadata !DIExpression()), !dbg !2983
  %call1 = call i32 @pubsubUnsubscribePattern(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, i32 noundef %notify) #22, !dbg !2984
  %add = add nsw i32 %call1, %count.09, !dbg !2985
  call void @llvm.dbg.value(metadata i32 %add, metadata !2971, metadata !DIExpression()), !dbg !2974
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !2979
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !2969, metadata !DIExpression()), !dbg !2974
  %cmp.not = icmp eq %struct.listNode* %call, null, !dbg !2980
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !2981, !llvm.loop !2986

while.end:                                        ; preds = %while.body, %entry
  %count.0.lcssa = phi i32 [ 0, %entry ], [ %add, %while.body ], !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !2988
  ret i32 %count.0.lcssa, !dbg !2989
}

declare !dbg !2990 dso_local void @dictRelease(%struct.dict* noundef) local_unnamed_addr #4

declare !dbg !2993 dso_local void @listRelease(%struct.list* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @freeClientArgv(%struct.redisClient* nocapture noundef %c) #0 !dbg !2996 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !2998, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 0, metadata !2999, metadata !DIExpression()), !dbg !3000
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  call void @llvm.dbg.value(metadata i32 0, metadata !2999, metadata !DIExpression()), !dbg !3000
  %0 = load i32, i32* %argc, align 8, !dbg !3001, !tbaa !1350
  %cmp22 = icmp sgt i32 %0, 0, !dbg !3004
  br i1 %cmp22, label %for.body.lr.ph, label %for.cond1.preheader, !dbg !3005

for.body.lr.ph:                                   ; preds = %entry
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !3005

for.cond1.preheader:                              ; preds = %for.body, %entry
  %mbargc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 7
  call void @llvm.dbg.value(metadata i32 0, metadata !2999, metadata !DIExpression()), !dbg !3000
  %1 = load i32, i32* %mbargc, align 4, !dbg !3006, !tbaa !3009
  %cmp224 = icmp sgt i32 %1, 0, !dbg !3010
  br i1 %cmp224, label %for.body3.lr.ph, label %for.end8, !dbg !3011

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %mbargv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 5
  br label %for.body3, !dbg !3011

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2999, metadata !DIExpression()), !dbg !3000
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3012, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 %indvars.iv, !dbg !3013
  %3 = bitcast %struct.redisObject** %arrayidx to i8**, !dbg !3013
  %4 = load i8*, i8** %3, align 8, !dbg !3013, !tbaa !782
  tail call void @decrRefCount(i8* noundef %4) #22, !dbg !3014
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3015
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !2999, metadata !DIExpression()), !dbg !3000
  %5 = load i32, i32* %argc, align 8, !dbg !3001, !tbaa !1350
  %6 = sext i32 %5 to i64, !dbg !3004
  %cmp = icmp slt i64 %indvars.iv.next, %6, !dbg !3004
  br i1 %cmp, label %for.body, label %for.cond1.preheader, !dbg !3005, !llvm.loop !3016

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv27 = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next28, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv27, metadata !2999, metadata !DIExpression()), !dbg !3000
  %7 = load %struct.redisObject**, %struct.redisObject*** %mbargv, align 8, !dbg !3018, !tbaa !2725
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv27, !dbg !3019
  %8 = bitcast %struct.redisObject** %arrayidx5 to i8**, !dbg !3019
  %9 = load i8*, i8** %8, align 8, !dbg !3019, !tbaa !782
  tail call void @decrRefCount(i8* noundef %9) #22, !dbg !3020
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1, !dbg !3021
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next28, metadata !2999, metadata !DIExpression()), !dbg !3000
  %10 = load i32, i32* %mbargc, align 4, !dbg !3006, !tbaa !3009
  %11 = sext i32 %10 to i64, !dbg !3010
  %cmp2 = icmp slt i64 %indvars.iv.next28, %11, !dbg !3010
  br i1 %cmp2, label %for.body3, label %for.end8, !dbg !3011, !llvm.loop !3022

for.end8:                                         ; preds = %for.body3, %for.cond1.preheader
  store i32 0, i32* %argc, align 8, !dbg !3024, !tbaa !1350
  store i32 0, i32* %mbargc, align 4, !dbg !3025, !tbaa !3009
  ret void, !dbg !3026
}

declare !dbg !3027 dso_local %struct.listNode* @listSearchKey(%struct.list* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @_redisAssert(i8* noundef %estr, i8* noundef %file, i32 noundef %line) #0 !dbg !3030 {
entry:
  call void @llvm.dbg.value(metadata i8* %estr, metadata !3034, metadata !DIExpression()), !dbg !3037
  call void @llvm.dbg.value(metadata i8* %file, metadata !3035, metadata !DIExpression()), !dbg !3037
  call void @llvm.dbg.value(metadata i32 %line, metadata !3036, metadata !DIExpression()), !dbg !3037
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i64 0, i64 0)) #22, !dbg !3038
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.121, i64 0, i64 0), i8* noundef %file, i32 noundef %line, i8* noundef %estr) #22, !dbg !3039
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.57, i64 0, i64 0)) #22, !dbg !3040
  store i8 120, i8* inttoptr (i64 -1 to i8*), align 1, !dbg !3041, !tbaa !795
  ret void, !dbg !3042
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32 noundef) local_unnamed_addr #13

; Function Attrs: noinline nounwind uwtable
define internal i32 @dontWaitForSwappedKey(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key) #0 !dbg !3043 {
entry:
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3047, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !3048, metadata !DIExpression()), !dbg !3053
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !3054
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !3051, metadata !DIExpression()), !dbg !3055
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !3056
  %io_keys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 24, !dbg !3057
  %1 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !3057, !tbaa !2671
  call void @listRewind(%struct.list* noundef %1, %struct.listIter* noundef nonnull %li) #23, !dbg !3058
  br label %while.cond, !dbg !3059

while.cond:                                       ; preds = %while.body, %entry
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !3060
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !3050, metadata !DIExpression()), !dbg !3053
  %cmp.not = icmp eq %struct.listNode* %call, null, !dbg !3061
  br i1 %cmp.not, label %cond.false, label %while.body, !dbg !3059

while.body:                                       ; preds = %while.cond
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call, i64 0, i32 2, !dbg !3062
  %2 = bitcast i8** %value to %struct.redisObject**, !dbg !3062
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !3062, !tbaa !891
  %call1 = call i32 @equalStringObjects(%struct.redisObject* noundef %3, %struct.redisObject* noundef %key) #22, !dbg !3065
  %tobool.not = icmp eq i32 %call1, 0, !dbg !3065
  br i1 %tobool.not, label %while.cond, label %cond.end, !dbg !3066, !llvm.loop !3067

cond.false:                                       ; preds = %while.cond
  call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9932) #22, !dbg !3069
  call void @_exit(i32 noundef 1) #26, !dbg !3069
  unreachable, !dbg !3069

cond.end:                                         ; preds = %while.body
  %4 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !3070, !tbaa !2671
  call void @listDelNode(%struct.list* noundef %4, %struct.listNode* noundef nonnull %call) #23, !dbg !3072
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !3073
  %5 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !3073, !tbaa !2890
  %io_keys4 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 3, !dbg !3074
  %6 = load %struct.dict*, %struct.dict** %io_keys4, align 8, !dbg !3074, !tbaa !3075
  %7 = bitcast %struct.redisObject* %key to i8*, !dbg !3076
  %call5 = call %struct.dictEntry* @dictFind(%struct.dict* noundef %6, i8* noundef %7) #23, !dbg !3077
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call5, metadata !3052, metadata !DIExpression()), !dbg !3053
  %cmp6.not = icmp eq %struct.dictEntry* %call5, null, !dbg !3078
  br i1 %cmp6.not, label %cond.false8, label %cond.end9, !dbg !3078

cond.false8:                                      ; preds = %cond.end
  call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9936) #22, !dbg !3078
  call void @_exit(i32 noundef 1) #26, !dbg !3078
  unreachable, !dbg !3078

cond.end9:                                        ; preds = %cond.end
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call5, i64 0, i32 1, !dbg !3079
  %8 = bitcast i8** %val to %struct.list**, !dbg !3079
  %9 = load %struct.list*, %struct.list** %8, align 8, !dbg !3079, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %9, metadata !3049, metadata !DIExpression()), !dbg !3053
  %10 = bitcast %struct.redisClient* %c to i8*, !dbg !3080
  %call10 = call %struct.listNode* @listSearchKey(%struct.list* noundef %9, i8* noundef %10) #23, !dbg !3081
  call void @llvm.dbg.value(metadata %struct.listNode* %call10, metadata !3050, metadata !DIExpression()), !dbg !3053
  %cmp11.not = icmp eq %struct.listNode* %call10, null, !dbg !3082
  br i1 %cmp11.not, label %cond.false13, label %cond.end14, !dbg !3082

cond.false13:                                     ; preds = %cond.end9
  call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9939) #22, !dbg !3082
  call void @_exit(i32 noundef 1) #26, !dbg !3082
  unreachable, !dbg !3082

cond.end14:                                       ; preds = %cond.end9
  call void @listDelNode(%struct.list* noundef %9, %struct.listNode* noundef nonnull %call10) #23, !dbg !3083
  %len = getelementptr inbounds %struct.list, %struct.list* %9, i64 0, i32 5, !dbg !3084
  %11 = load i32, i32* %len, align 8, !dbg !3084, !tbaa !1358
  %cmp15 = icmp eq i32 %11, 0, !dbg !3086
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !3087

if.then16:                                        ; preds = %cond.end14
  %12 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !3088, !tbaa !2890
  %io_keys18 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %12, i64 0, i32 3, !dbg !3089
  %13 = load %struct.dict*, %struct.dict** %io_keys18, align 8, !dbg !3089, !tbaa !3075
  %call19 = call i32 @dictDelete(%struct.dict* noundef %13, i8* noundef %7) #23, !dbg !3090
  br label %if.end20, !dbg !3090

if.end20:                                         ; preds = %if.then16, %cond.end14
  call void @decrRefCount(i8* noundef %7) #22, !dbg !3091
  %14 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !3092, !tbaa !2671
  %len22 = getelementptr inbounds %struct.list, %struct.list* %14, i64 0, i32 5, !dbg !3092
  %15 = load i32, i32* %len22, align 8, !dbg !3092, !tbaa !1358
  %cmp23 = icmp eq i32 %15, 0, !dbg !3093
  %conv = zext i1 %cmp23 to i32, !dbg !3093
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !3094
  ret i32 %conv, !dbg !3095
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeClientMultiState(%struct.redisClient* nocapture noundef readonly %c) #0 !dbg !3096 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3098, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i32 0, metadata !3099, metadata !DIExpression()), !dbg !3105
  %mstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20
  %count = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3099, metadata !DIExpression()), !dbg !3105
  %0 = load i32, i32* %count, align 8, !dbg !3106, !tbaa !3107
  %cmp24 = icmp sgt i32 %0, 0, !dbg !3108
  br i1 %cmp24, label %for.body.lr.ph, label %for.end8, !dbg !3109

for.body.lr.ph:                                   ; preds = %entry
  %commands = getelementptr inbounds %struct.multiState, %struct.multiState* %mstate, i64 0, i32 0
  br label %for.body, !dbg !3109

for.body:                                         ; preds = %for.body.lr.ph, %for.end
  %indvars.iv27 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next28, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv27, metadata !3099, metadata !DIExpression()), !dbg !3105
  %1 = load %struct.multiCmd*, %struct.multiCmd** %commands, align 8, !dbg !3110, !tbaa !3111
  %add.ptr = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %1, i64 %indvars.iv27, !dbg !3112
  call void @llvm.dbg.value(metadata %struct.multiCmd* %add.ptr, metadata !3104, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 0, metadata !3100, metadata !DIExpression()), !dbg !3113
  %argc = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %1, i64 %indvars.iv27, i32 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3100, metadata !DIExpression()), !dbg !3113
  %2 = load i32, i32* %argc, align 8, !dbg !3114, !tbaa !3117
  %cmp322 = icmp sgt i32 %2, 0, !dbg !3119
  br i1 %cmp322, label %for.body4.lr.ph, label %for.end, !dbg !3120

for.body4.lr.ph:                                  ; preds = %for.body
  %argv = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %add.ptr, i64 0, i32 0
  br label %for.body4, !dbg !3120

for.body4:                                        ; preds = %for.body4.lr.ph, %for.body4
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3100, metadata !DIExpression()), !dbg !3113
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3121, !tbaa !3122
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 %indvars.iv, !dbg !3123
  %4 = bitcast %struct.redisObject** %arrayidx to i8**, !dbg !3123
  %5 = load i8*, i8** %4, align 8, !dbg !3123, !tbaa !782
  tail call void @decrRefCount(i8* noundef %5) #22, !dbg !3124
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3125
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3100, metadata !DIExpression()), !dbg !3113
  %6 = load i32, i32* %argc, align 8, !dbg !3114, !tbaa !3117
  %7 = sext i32 %6 to i64, !dbg !3119
  %cmp3 = icmp slt i64 %indvars.iv.next, %7, !dbg !3119
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3120, !llvm.loop !3126

for.end:                                          ; preds = %for.body4, %for.body
  %8 = bitcast %struct.multiCmd* %add.ptr to i8**, !dbg !3128
  %9 = load i8*, i8** %8, align 8, !dbg !3128, !tbaa !3122
  tail call void @zfree(i8* noundef %9) #23, !dbg !3129
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1, !dbg !3130
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next28, metadata !3099, metadata !DIExpression()), !dbg !3105
  %10 = load i32, i32* %count, align 8, !dbg !3106, !tbaa !3107
  %11 = sext i32 %10 to i64, !dbg !3108
  %cmp = icmp slt i64 %indvars.iv.next28, %11, !dbg !3108
  br i1 %cmp, label %for.body, label %for.end8, !dbg !3109, !llvm.loop !3131

for.end8:                                         ; preds = %for.end, %entry
  %12 = bitcast %struct.multiState* %mstate to i8**, !dbg !3133
  %13 = load i8*, i8** %12, align 8, !dbg !3133, !tbaa !3111
  tail call void @zfree(i8* noundef %13) #23, !dbg !3134
  ret void, !dbg !3135
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* noundef, i8* noundef, i32 noundef, i8* noundef) local_unnamed_addr #8

declare !dbg !3136 dso_local %struct.dictEntry* @dictFind(%struct.dict* noundef, i8* noundef) local_unnamed_addr #4

declare !dbg !3139 dso_local i32 @dictDelete(%struct.dict* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @processInputBuffer(%struct.redisClient* noundef %c) #0 !dbg !3142 {
entry:
  %argc = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3144, metadata !DIExpression()), !dbg !3158
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13
  call void @llvm.dbg.label(metadata !3157), !dbg !3159
  %0 = load i32, i32* %flags, align 8, !dbg !3160, !tbaa !1402
  %1 = and i32 %0, 48, !dbg !3162
  %2 = icmp eq i32 %1, 0, !dbg !3162
  br i1 %2, label %if.end.lr.ph, label %if.end118, !dbg !3162

if.end.lr.ph:                                     ; preds = %entry
  %bulklen = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 8
  %querybuf83 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 3
  %argv95 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  %argc96 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  %3 = bitcast i32* %argc to i8*
  %4 = bitcast %struct.redisObject*** %argv95 to i8**
  br label %if.end, !dbg !3162

if.end:                                           ; preds = %if.end.lr.ph, %again.backedge
  %5 = load i32, i32* %bulklen, align 8, !dbg !3163, !tbaa !3164
  %cmp = icmp eq i32 %5, -1, !dbg !3165
  %6 = load i8*, i8** %querybuf83, align 8, !dbg !3166, !tbaa !1446
  br i1 %cmp, label %if.then4, label %if.else82, !dbg !3167

if.then4:                                         ; preds = %if.end
  %call = call i8* @strchr(i8* noundef %6, i32 noundef 10) #27, !dbg !3168
  call void @llvm.dbg.value(metadata i8* %call, metadata !3145, metadata !DIExpression()), !dbg !3169
  %tobool5.not = icmp eq i8* %call, null, !dbg !3170
  br i1 %tobool5.not, label %if.else72, label %if.then6, !dbg !3171

if.then6:                                         ; preds = %if.then4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3172
  call void @llvm.dbg.value(metadata i8* %6, metadata !3149, metadata !DIExpression()), !dbg !3173
  %call8 = call i8* (...) @sdsempty() #23, !dbg !3174
  store i8* %call8, i8** %querybuf83, align 8, !dbg !3175, !tbaa !1446
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !3176
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !3176
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3176
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !3177
  call void @llvm.dbg.value(metadata i64 %add, metadata !3148, metadata !DIExpression()), !dbg !3169
  %call10 = call i64 @sdslen(i8* noundef %6) #23, !dbg !3178
  %cmp11 = icmp ugt i64 %call10, %add, !dbg !3180
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !3181

if.then12:                                        ; preds = %if.then6
  %7 = load i8*, i8** %querybuf83, align 8, !dbg !3182, !tbaa !1446
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %add, !dbg !3184
  %call14 = call i64 @sdslen(i8* noundef %6) #23, !dbg !3185
  %sub = sub i64 %call14, %add, !dbg !3186
  %call15 = call i8* @sdscatlen(i8* noundef %7, i8* noundef %add.ptr, i64 noundef %sub) #23, !dbg !3187
  store i8* %call15, i8** %querybuf83, align 8, !dbg !3188, !tbaa !1446
  br label %if.end17, !dbg !3189

if.end17:                                         ; preds = %if.then12, %if.then6
  store i8 0, i8* %call, align 1, !dbg !3190, !tbaa !795
  %add.ptr18 = getelementptr inbounds i8, i8* %call, i64 -1, !dbg !3191
  %8 = load i8, i8* %add.ptr18, align 1, !dbg !3193, !tbaa !795
  %cmp19 = icmp eq i8 %8, 13, !dbg !3194
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !3195

if.then21:                                        ; preds = %if.end17
  store i8 0, i8* %add.ptr18, align 1, !dbg !3196, !tbaa !795
  br label %if.end23, !dbg !3197

if.end23:                                         ; preds = %if.then21, %if.end17
  call void @sdsupdatelen(i8* noundef %6) #23, !dbg !3198
  %call24 = call i64 @sdslen(i8* noundef %6) #23, !dbg !3199
  %conv25 = trunc i64 %call24 to i32, !dbg !3199
  call void @llvm.dbg.value(metadata i32* %argc, metadata !3153, metadata !DIExpression(DW_OP_deref)), !dbg !3173
  %call26 = call i8** @sdssplitlen(i8* noundef %6, i32 noundef %conv25, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0), i32 noundef 1, i32* noundef nonnull %argc) #23, !dbg !3200
  call void @llvm.dbg.value(metadata i8** %call26, metadata !3152, metadata !DIExpression()), !dbg !3173
  call void @sdsfree(i8* noundef %6) #23, !dbg !3201
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv95, align 8, !dbg !3202, !tbaa !1352
  %tobool28.not = icmp eq %struct.redisObject** %9, null, !dbg !3204
  br i1 %tobool28.not, label %if.end31, label %if.then29, !dbg !3205

if.then29:                                        ; preds = %if.end23
  %10 = bitcast %struct.redisObject** %9 to i8*, !dbg !3206
  call void @zfree(i8* noundef nonnull %10) #23, !dbg !3207
  br label %if.end31, !dbg !3207

if.end31:                                         ; preds = %if.then29, %if.end23
  %11 = load i32, i32* %argc, align 4, !dbg !3208, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %11, metadata !3153, metadata !DIExpression()), !dbg !3173
  %conv32 = sext i32 %11 to i64, !dbg !3208
  %mul = shl nsw i64 %conv32, 3, !dbg !3209
  %call33 = call i8* @zmalloc(i64 noundef %mul) #23, !dbg !3210
  store i8* %call33, i8** %4, align 8, !dbg !3211, !tbaa !1352
  call void @llvm.dbg.value(metadata i32 0, metadata !3154, metadata !DIExpression()), !dbg !3173
  %12 = load i32, i32* %argc, align 4, !dbg !3212, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %12, metadata !3153, metadata !DIExpression()), !dbg !3173
  %cmp35188 = icmp sgt i32 %12, 0, !dbg !3215
  br i1 %cmp35188, label %for.body, label %for.end, !dbg !3216

for.body:                                         ; preds = %if.end31, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end31 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3154, metadata !DIExpression()), !dbg !3173
  %arrayidx = getelementptr inbounds i8*, i8** %call26, i64 %indvars.iv, !dbg !3217
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !3217, !tbaa !782
  %call37 = call i64 @sdslen(i8* noundef %13) #23, !dbg !3220
  %tobool38.not = icmp eq i64 %call37, 0, !dbg !3220
  %14 = load i8*, i8** %arrayidx, align 8, !dbg !3221, !tbaa !782
  br i1 %tobool38.not, label %if.else, label %if.then39, !dbg !3222

if.then39:                                        ; preds = %for.body
  %call42 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %14) #22, !dbg !3223
  %15 = load %struct.redisObject**, %struct.redisObject*** %argv95, align 8, !dbg !3225, !tbaa !1352
  %16 = load i32, i32* %argc96, align 8, !dbg !3226, !tbaa !1350
  %idxprom45 = sext i32 %16 to i64, !dbg !3227
  %arrayidx46 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %idxprom45, !dbg !3227
  store %struct.redisObject* %call42, %struct.redisObject** %arrayidx46, align 8, !dbg !3228, !tbaa !782
  %inc = add nsw i32 %16, 1, !dbg !3229
  store i32 %inc, i32* %argc96, align 8, !dbg !3229, !tbaa !1350
  br label %for.inc, !dbg !3230

if.else:                                          ; preds = %for.body
  call void @sdsfree(i8* noundef %14) #23, !dbg !3231
  br label %for.inc

for.inc:                                          ; preds = %if.then39, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3233
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3154, metadata !DIExpression()), !dbg !3173
  %17 = load i32, i32* %argc, align 4, !dbg !3212, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %17, metadata !3153, metadata !DIExpression()), !dbg !3173
  %18 = sext i32 %17 to i64, !dbg !3215
  %cmp35 = icmp slt i64 %indvars.iv.next, %18, !dbg !3215
  br i1 %cmp35, label %for.body, label %for.end, !dbg !3216, !llvm.loop !3234

for.end:                                          ; preds = %for.inc, %if.end31
  %19 = bitcast i8** %call26 to i8*, !dbg !3236
  call void @zfree(i8* noundef %19) #23, !dbg !3237
  %20 = load i32, i32* %argc96, align 8, !dbg !3238, !tbaa !1350
  %tobool53.not = icmp eq i32 %20, 0, !dbg !3240
  br i1 %tobool53.not, label %if.else62, label %if.then54, !dbg !3241

if.then54:                                        ; preds = %for.end
  %call55 = call i32 @processCommand(%struct.redisClient* noundef nonnull %c) #22, !dbg !3242
  %tobool56.not = icmp eq i32 %call55, 0, !dbg !3242
  br i1 %tobool56.not, label %cleanup80.thread181, label %land.lhs.true, !dbg !3245

land.lhs.true:                                    ; preds = %if.then54
  %21 = load i8*, i8** %querybuf83, align 8, !dbg !3246, !tbaa !1446
  %call58 = call i64 @sdslen(i8* noundef %21) #23, !dbg !3247
  %tobool59.not = icmp eq i64 %call58, 0, !dbg !3247
  br i1 %tobool59.not, label %cleanup80.thread181, label %cleanup80, !dbg !3248

if.else62:                                        ; preds = %for.end
  %22 = load i8*, i8** %querybuf83, align 8, !dbg !3249, !tbaa !1446
  %call64 = call i64 @sdslen(i8* noundef %22) #23, !dbg !3252
  %tobool65.not = icmp eq i64 %call64, 0, !dbg !3252
  br i1 %tobool65.not, label %cleanup80.thread181, label %cleanup80, !dbg !3253

cleanup80.thread181:                              ; preds = %land.lhs.true, %if.then54, %if.else62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3254
  br label %if.end118

if.else72:                                        ; preds = %if.then4
  %call74 = call i64 @sdslen(i8* noundef %6) #23, !dbg !3255
  %cmp75 = icmp ugt i64 %call74, 268435455, !dbg !3257
  br i1 %cmp75, label %if.then77, label %if.end118, !dbg !3258

if.then77:                                        ; preds = %if.else72
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #22, !dbg !3259
  call void @freeClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3261
  br label %if.end118, !dbg !3262

cleanup80:                                        ; preds = %land.lhs.true, %if.else62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3254
  br label %again.backedge

again.backedge:                                   ; preds = %cleanup80, %land.lhs.true108
  call void @llvm.dbg.label(metadata !3157), !dbg !3159
  %23 = load i32, i32* %flags, align 8, !dbg !3160, !tbaa !1402
  %24 = and i32 %23, 48, !dbg !3162
  %25 = icmp eq i32 %24, 0, !dbg !3162
  br i1 %25, label %if.end, label %if.end118, !dbg !3162

if.else82:                                        ; preds = %if.end
  %call84 = call i64 @sdslen(i8* noundef %6) #23, !dbg !3263
  %conv85 = trunc i64 %call84 to i32, !dbg !3263
  call void @llvm.dbg.value(metadata i32 %conv85, metadata !3155, metadata !DIExpression()), !dbg !3264
  %26 = load i32, i32* %bulklen, align 8, !dbg !3265, !tbaa !3164
  %cmp87.not = icmp sgt i32 %26, %conv85, !dbg !3267
  br i1 %cmp87.not, label %if.end118, label %if.then89, !dbg !3268

if.then89:                                        ; preds = %if.else82
  %27 = load i8*, i8** %querybuf83, align 8, !dbg !3269, !tbaa !1446
  %sub92 = add nsw i32 %26, -2, !dbg !3271
  %conv93 = sext i32 %sub92 to i64, !dbg !3272
  %call94 = call %struct.redisObject* @createStringObject(i8* noundef %27, i64 noundef %conv93) #22, !dbg !3273
  %28 = load %struct.redisObject**, %struct.redisObject*** %argv95, align 8, !dbg !3274, !tbaa !1352
  %29 = load i32, i32* %argc96, align 8, !dbg !3275, !tbaa !1350
  %idxprom97 = sext i32 %29 to i64, !dbg !3276
  %arrayidx98 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %28, i64 %idxprom97, !dbg !3276
  store %struct.redisObject* %call94, %struct.redisObject** %arrayidx98, align 8, !dbg !3277, !tbaa !782
  %inc100 = add nsw i32 %29, 1, !dbg !3278
  store i32 %inc100, i32* %argc96, align 8, !dbg !3278, !tbaa !1350
  %30 = load i8*, i8** %querybuf83, align 8, !dbg !3279, !tbaa !1446
  %31 = load i32, i32* %bulklen, align 8, !dbg !3280, !tbaa !3164
  %conv103 = sext i32 %31 to i64, !dbg !3281
  %call104 = call i8* @sdsrange(i8* noundef %30, i64 noundef %conv103, i64 noundef -1) #23, !dbg !3282
  store i8* %call104, i8** %querybuf83, align 8, !dbg !3283, !tbaa !1446
  %call106 = call i32 @processCommand(%struct.redisClient* noundef nonnull %c) #22, !dbg !3284
  %tobool107.not = icmp eq i32 %call106, 0, !dbg !3284
  br i1 %tobool107.not, label %if.end118, label %land.lhs.true108, !dbg !3286

land.lhs.true108:                                 ; preds = %if.then89
  %32 = load i8*, i8** %querybuf83, align 8, !dbg !3287, !tbaa !1446
  %call110 = call i64 @sdslen(i8* noundef %32) #23, !dbg !3288
  %tobool111.not = icmp eq i64 %call110, 0, !dbg !3288
  br i1 %tobool111.not, label %if.end118, label %again.backedge, !dbg !3289

if.end118:                                        ; preds = %again.backedge, %if.else82, %land.lhs.true108, %if.then89, %entry, %if.else72, %if.then77, %cleanup80.thread181
  ret void, !dbg !3290
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !3291 dso_local i8* @strchr(i8* noundef, i32 noundef) local_unnamed_addr #11

declare !dbg !3294 dso_local i8* @sdscatlen(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #4

declare !dbg !3297 dso_local void @sdsupdatelen(i8* noundef) local_unnamed_addr #4

declare !dbg !3298 dso_local i8** @sdssplitlen(i8* noundef, i32 noundef, i8* noundef, i32 noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @processCommand(%struct.redisClient* noundef %c) #0 !dbg !3302 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3306, metadata !DIExpression()), !dbg !3326
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3327, !tbaa !2040
  %tobool.not = icmp eq i64 %0, 0, !dbg !3329
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !3330

if.then:                                          ; preds = %entry
  tail call void @freeMemoryIfNeeded() #22, !dbg !3331
  br label %if.end, !dbg !3331

if.end:                                           ; preds = %if.then, %entry
  %multibulk = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 9, !dbg !3332
  %1 = load i32, i32* %multibulk, align 4, !dbg !3332, !tbaa !3333
  %cmp = icmp eq i32 %1, 0, !dbg !3334
  br i1 %cmp, label %land.lhs.true, label %if.then22, !dbg !3335

land.lhs.true:                                    ; preds = %if.end
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3336
  %2 = load i32, i32* %argc, align 8, !dbg !3336, !tbaa !1350
  %cmp1 = icmp eq i32 %2, 1, !dbg !3337
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3326, !tbaa !1352
  br i1 %cmp1, label %land.lhs.true2, label %if.end90, !dbg !3338

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.redisObject*, %struct.redisObject** %3, align 8, !dbg !3339, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 0, !dbg !3340
  %5 = load i8*, i8** %ptr, align 8, !dbg !3340, !tbaa !1328
  %6 = load i8, i8* %5, align 1, !dbg !3341, !tbaa !795
  %cmp4 = icmp eq i8 %6, 42, !dbg !3342
  %7 = bitcast %struct.redisObject* %4 to i8*, !dbg !3343
  br i1 %cmp4, label %if.then6, label %if.end90, !dbg !3343

if.then6:                                         ; preds = %land.lhs.true2
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3344
  %call = tail call i32 @atoi(i8* noundef %add.ptr) #27, !dbg !3346
  store i32 %call, i32* %multibulk, align 4, !dbg !3347, !tbaa !3333
  %cmp12 = icmp slt i32 %call, 1, !dbg !3348
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !3350

if.then14:                                        ; preds = %if.then6
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3351
  br label %cleanup278, !dbg !3353

if.else:                                          ; preds = %if.then6
  tail call void @decrRefCount(i8* noundef nonnull %7) #22, !dbg !3354
  %8 = load i32, i32* %argc, align 8, !dbg !3356, !tbaa !1350
  %dec = add nsw i32 %8, -1, !dbg !3356
  store i32 %dec, i32* %argc, align 8, !dbg !3356, !tbaa !1350
  br label %cleanup278, !dbg !3357

if.then22:                                        ; preds = %if.end
  %bulklen = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 8, !dbg !3358
  %9 = load i32, i32* %bulklen, align 8, !dbg !3358, !tbaa !3164
  %cmp23 = icmp eq i32 %9, -1, !dbg !3359
  br i1 %cmp23, label %if.then25, label %if.else56, !dbg !3360

if.then25:                                        ; preds = %if.then22
  %argv26 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3361
  %10 = load %struct.redisObject**, %struct.redisObject*** %argv26, align 8, !dbg !3361, !tbaa !1352
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !3362, !tbaa !782
  %ptr28 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !3363
  %12 = load i8*, i8** %ptr28, align 8, !dbg !3363, !tbaa !1328
  %13 = load i8, i8* %12, align 1, !dbg !3364, !tbaa !795
  %cmp31.not = icmp eq i8 %13, 36, !dbg !3365
  br i1 %cmp31.not, label %if.else35, label %if.then33, !dbg !3366

if.then33:                                        ; preds = %if.then25
  %call34 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0)) #23, !dbg !3367
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call34) #22, !dbg !3369
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3370
  br label %cleanup278, !dbg !3371

if.else35:                                        ; preds = %if.then25
  %add.ptr40 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !3372
  %call41 = tail call i32 @atoi(i8* noundef %add.ptr40) #27, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %call41, metadata !3308, metadata !DIExpression()), !dbg !3374
  %14 = bitcast %struct.redisObject* %11 to i8*, !dbg !3375
  tail call void @decrRefCount(i8* noundef %14) #22, !dbg !3376
  %15 = icmp ugt i32 %call41, 1073741824, !dbg !3377
  %argc49 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3374
  %16 = load i32, i32* %argc49, align 8, !dbg !3374, !tbaa !1350
  %dec50 = add nsw i32 %16, -1, !dbg !3374
  store i32 %dec50, i32* %argc49, align 8, !dbg !3374, !tbaa !1350
  br i1 %15, label %if.then48, label %if.end52, !dbg !3377

if.then48:                                        ; preds = %if.else35
  %call51 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46, i64 0, i64 0)) #23, !dbg !3379
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call51) #22, !dbg !3381
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3382
  br label %cleanup278, !dbg !3383

if.end52:                                         ; preds = %if.else35
  %add = add nuw nsw i32 %call41, 2, !dbg !3384
  store i32 %add, i32* %bulklen, align 8, !dbg !3385, !tbaa !3164
  br label %cleanup278, !dbg !3386

if.else56:                                        ; preds = %if.then22
  %mbargv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 5, !dbg !3387
  %17 = bitcast %struct.redisObject*** %mbargv to i8**, !dbg !3387
  %18 = load i8*, i8** %17, align 8, !dbg !3387, !tbaa !2725
  %mbargc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 7, !dbg !3388
  %19 = load i32, i32* %mbargc, align 4, !dbg !3388, !tbaa !3009
  %add57 = add nsw i32 %19, 1, !dbg !3389
  %conv58 = sext i32 %add57 to i64, !dbg !3390
  %mul = shl nsw i64 %conv58, 3, !dbg !3391
  %call59 = tail call i8* @zrealloc(i8* noundef %18, i64 noundef %mul) #23, !dbg !3392
  %20 = bitcast i8* %call59 to %struct.redisObject**, !dbg !3392
  store i8* %call59, i8** %17, align 8, !dbg !3393, !tbaa !2725
  %argv61 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3394
  %21 = load %struct.redisObject**, %struct.redisObject*** %argv61, align 8, !dbg !3394, !tbaa !1352
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !3395, !tbaa !782
  %23 = load i32, i32* %mbargc, align 4, !dbg !3396, !tbaa !3009
  %idxprom65 = sext i32 %23 to i64, !dbg !3397
  %arrayidx66 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 %idxprom65, !dbg !3397
  store %struct.redisObject* %22, %struct.redisObject** %arrayidx66, align 8, !dbg !3398, !tbaa !782
  %inc = add nsw i32 %23, 1, !dbg !3399
  store i32 %inc, i32* %mbargc, align 4, !dbg !3399, !tbaa !3009
  %argc68 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3400
  %24 = load i32, i32* %argc68, align 8, !dbg !3401, !tbaa !1350
  %dec69 = add nsw i32 %24, -1, !dbg !3401
  store i32 %dec69, i32* %argc68, align 8, !dbg !3401, !tbaa !1350
  %25 = load i32, i32* %multibulk, align 4, !dbg !3402, !tbaa !3333
  %dec71 = add nsw i32 %25, -1, !dbg !3402
  store i32 %dec71, i32* %multibulk, align 4, !dbg !3402, !tbaa !3333
  %cmp73 = icmp eq i32 %dec71, 0, !dbg !3403
  br i1 %cmp73, label %if.then75, label %if.else85, !dbg !3404

if.then75:                                        ; preds = %if.else56
  %26 = load %struct.redisObject**, %struct.redisObject*** %argv61, align 8, !dbg !3405, !tbaa !1352
  call void @llvm.dbg.value(metadata %struct.redisObject** %26, metadata !3316, metadata !DIExpression()), !dbg !3406
  %27 = load %struct.redisObject**, %struct.redisObject*** %mbargv, align 8, !dbg !3407, !tbaa !2725
  store %struct.redisObject** %27, %struct.redisObject*** %argv61, align 8, !dbg !3408, !tbaa !1352
  store %struct.redisObject** %26, %struct.redisObject*** %mbargv, align 8, !dbg !3409, !tbaa !2725
  call void @llvm.dbg.value(metadata i32 %dec69, metadata !3320, metadata !DIExpression()), !dbg !3406
  store i32 %inc, i32* %argc68, align 8, !dbg !3410, !tbaa !1350
  store i32 %dec69, i32* %mbargc, align 4, !dbg !3411, !tbaa !3009
  store i32 0, i32* %bulklen, align 8, !dbg !3412, !tbaa !3164
  br label %if.end90, !dbg !3413

if.else85:                                        ; preds = %if.else56
  store i32 -1, i32* %bulklen, align 8, !dbg !3414, !tbaa !3164
  br label %cleanup278, !dbg !3416

if.end90:                                         ; preds = %land.lhs.true, %land.lhs.true2, %if.then75
  %28 = phi i32 [ 1, %land.lhs.true2 ], [ %inc, %if.then75 ], [ %2, %land.lhs.true ]
  %29 = phi %struct.redisObject** [ %3, %land.lhs.true2 ], [ %27, %if.then75 ], [ %3, %land.lhs.true ], !dbg !3417
  %argv91 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3417
  %30 = load %struct.redisObject*, %struct.redisObject** %29, align 8, !dbg !3419, !tbaa !782
  %ptr93 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %30, i64 0, i32 0, !dbg !3420
  %31 = load i8*, i8** %ptr93, align 8, !dbg !3420, !tbaa !1328
  %call94 = tail call i32 @strcasecmp(i8* noundef %31, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)) #27, !dbg !3421
  %tobool95.not = icmp eq i32 %call94, 0, !dbg !3421
  br i1 %tobool95.not, label %if.then96, label %if.end97, !dbg !3422

if.then96:                                        ; preds = %if.end90
  tail call void @freeClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3423
  br label %cleanup278, !dbg !3425

if.end97:                                         ; preds = %if.end90
  %call101 = tail call fastcc %struct.redisCommand* @lookupCommand(i8* noundef %31) #22, !dbg !3426
  call void @llvm.dbg.value(metadata %struct.redisCommand* %call101, metadata !3307, metadata !DIExpression()), !dbg !3326
  %tobool102.not = icmp eq %struct.redisCommand* %call101, null, !dbg !3427
  br i1 %tobool102.not, label %if.then103, label %if.else109, !dbg !3428

if.then103:                                       ; preds = %if.end97
  %call104 = tail call i8* (...) @sdsempty() #23, !dbg !3429
  %32 = load %struct.redisObject**, %struct.redisObject*** %argv91, align 8, !dbg !3431, !tbaa !1352
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !3432, !tbaa !782
  %ptr107 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %33, i64 0, i32 0, !dbg !3433
  %34 = load i8*, i8** %ptr107, align 8, !dbg !3433, !tbaa !1328
  %call108 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call104, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i8* noundef %34) #23, !dbg !3434
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call108) #22, !dbg !3435
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3436
  br label %cleanup278, !dbg !3437

if.else109:                                       ; preds = %if.end97
  %arity = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 2, !dbg !3438
  %35 = load i32, i32* %arity, align 8, !dbg !3438, !tbaa !3439
  %cmp110 = icmp slt i32 %35, 1, !dbg !3440
  %cmp115.not = icmp eq i32 %35, %28
  %or.cond413 = select i1 %cmp110, i1 true, i1 %cmp115.not, !dbg !3441
  br i1 %or.cond413, label %lor.lhs.false117, label %if.then123, !dbg !3441

lor.lhs.false117:                                 ; preds = %if.else109
  %argc118 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3442
  %sub120 = sub nsw i32 0, %35, !dbg !3443
  %cmp121 = icmp slt i32 %28, %sub120, !dbg !3444
  br i1 %cmp121, label %if.then123, label %if.else126, !dbg !3445

if.then123:                                       ; preds = %if.else109, %lor.lhs.false117
  %call124 = tail call i8* (...) @sdsempty() #23, !dbg !3446
  %name = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 0, !dbg !3448
  %36 = load i8*, i8** %name, align 8, !dbg !3448, !tbaa !1559
  %call125 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call124, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.49, i64 0, i64 0), i8* noundef %36) #23, !dbg !3449
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call125) #22, !dbg !3450
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3451
  br label %cleanup278, !dbg !3452

if.else126:                                       ; preds = %lor.lhs.false117
  %flags = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 3, !dbg !3453
  %37 = load i32, i32* %flags, align 4, !dbg !3453, !tbaa !1340
  %and = and i32 %37, 1, !dbg !3454
  %tobool127.not = icmp eq i32 %and, 0, !dbg !3454
  br i1 %tobool127.not, label %if.end203, label %land.lhs.true128, !dbg !3455

land.lhs.true128:                                 ; preds = %if.else126
  %bulklen129 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 8, !dbg !3456
  %38 = load i32, i32* %bulklen129, align 8, !dbg !3456, !tbaa !3164
  %cmp130 = icmp eq i32 %38, -1, !dbg !3457
  br i1 %cmp130, label %if.then132, label %if.then191, !dbg !3458

if.then132:                                       ; preds = %land.lhs.true128
  %sub136 = add nsw i32 %28, -1, !dbg !3459
  %idxprom137 = sext i32 %sub136 to i64, !dbg !3460
  %arrayidx138 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %29, i64 %idxprom137, !dbg !3460
  %39 = load %struct.redisObject*, %struct.redisObject** %arrayidx138, align 8, !dbg !3460, !tbaa !782
  %ptr139 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %39, i64 0, i32 0, !dbg !3461
  %40 = load i8*, i8** %ptr139, align 8, !dbg !3461, !tbaa !1328
  %call140 = tail call i32 @atoi(i8* noundef %40) #27, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %call140, metadata !3321, metadata !DIExpression()), !dbg !3463
  %41 = bitcast %struct.redisObject* %39 to i8*, !dbg !3464
  tail call void @decrRefCount(i8* noundef %41) #22, !dbg !3465
  %42 = icmp ugt i32 %call140, 1073741824, !dbg !3466
  %43 = load i32, i32* %argc118, align 8, !dbg !3463, !tbaa !1350
  %dec153 = add nsw i32 %43, -1, !dbg !3463
  store i32 %dec153, i32* %argc118, align 8, !dbg !3463, !tbaa !1350
  br i1 %42, label %if.then151, label %if.end155, !dbg !3466

if.then151:                                       ; preds = %if.then132
  %call154 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46, i64 0, i64 0)) #23, !dbg !3468
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call154) #22, !dbg !3470
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3471
  br label %cleanup278, !dbg !3472

if.end155:                                        ; preds = %if.then132
  %add158 = add nuw nsw i32 %call140, 2, !dbg !3473
  store i32 %add158, i32* %bulklen129, align 8, !dbg !3474, !tbaa !3164
  %querybuf = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 3, !dbg !3475
  %44 = load i8*, i8** %querybuf, align 8, !dbg !3475, !tbaa !1446
  %call160 = tail call i64 @sdslen(i8* noundef %44) #23, !dbg !3477
  %conv161 = trunc i64 %call160 to i32, !dbg !3478
  %45 = load i32, i32* %bulklen129, align 8, !dbg !3479, !tbaa !3164
  %cmp163.not = icmp sgt i32 %45, %conv161, !dbg !3480
  br i1 %cmp163.not, label %cleanup278, label %if.end187, !dbg !3481

if.end187:                                        ; preds = %if.end155
  %46 = load i8*, i8** %querybuf, align 8, !dbg !3482, !tbaa !1446
  %sub168 = add nsw i32 %45, -2, !dbg !3484
  %conv169 = sext i32 %sub168 to i64, !dbg !3485
  %call170 = tail call %struct.redisObject* @createStringObject(i8* noundef %46, i64 noundef %conv169) #22, !dbg !3486
  %47 = load %struct.redisObject**, %struct.redisObject*** %argv91, align 8, !dbg !3487, !tbaa !1352
  %48 = load i32, i32* %argc118, align 8, !dbg !3488, !tbaa !1350
  %idxprom173 = sext i32 %48 to i64, !dbg !3489
  %arrayidx174 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %47, i64 %idxprom173, !dbg !3489
  store %struct.redisObject* %call170, %struct.redisObject** %arrayidx174, align 8, !dbg !3490, !tbaa !782
  %inc176 = add nsw i32 %48, 1, !dbg !3491
  store i32 %inc176, i32* %argc118, align 8, !dbg !3491, !tbaa !1350
  %49 = load i8*, i8** %querybuf, align 8, !dbg !3492, !tbaa !1446
  %50 = load i32, i32* %bulklen129, align 8, !dbg !3493, !tbaa !3164
  %conv179 = sext i32 %50 to i64, !dbg !3494
  %call180 = tail call i8* @sdsrange(i8* noundef %49, i64 noundef %conv179, i64 noundef -1) #23, !dbg !3495
  store i8* %call180, i8** %querybuf, align 8, !dbg !3496, !tbaa !1446
  %.pre406 = load i32, i32* %flags, align 4, !dbg !3497, !tbaa !1340
  %.pre407 = and i32 %.pre406, 1, !dbg !3499
  %tobool190.not = icmp eq i32 %.pre407, 0, !dbg !3499
  br i1 %tobool190.not, label %if.end203, label %if.then191, !dbg !3500

if.then191:                                       ; preds = %land.lhs.true128, %if.end187
  %51 = load %struct.redisObject**, %struct.redisObject*** %argv91, align 8, !dbg !3501, !tbaa !1352
  %52 = load i32, i32* %argc118, align 8, !dbg !3502, !tbaa !1350
  %sub194 = add nsw i32 %52, -1, !dbg !3503
  %idxprom195 = sext i32 %sub194 to i64, !dbg !3504
  %arrayidx196 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %51, i64 %idxprom195, !dbg !3504
  %53 = load %struct.redisObject*, %struct.redisObject** %arrayidx196, align 8, !dbg !3504, !tbaa !782
  %call197 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %53) #22, !dbg !3505
  %54 = load %struct.redisObject**, %struct.redisObject*** %argv91, align 8, !dbg !3506, !tbaa !1352
  %55 = load i32, i32* %argc118, align 8, !dbg !3507, !tbaa !1350
  %sub200 = add nsw i32 %55, -1, !dbg !3508
  %idxprom201 = sext i32 %sub200 to i64, !dbg !3509
  %arrayidx202 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %54, i64 %idxprom201, !dbg !3509
  store %struct.redisObject* %call197, %struct.redisObject** %arrayidx202, align 8, !dbg !3510, !tbaa !782
  br label %if.end203, !dbg !3509

if.end203:                                        ; preds = %if.else126, %if.then191, %if.end187
  %56 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !3511, !tbaa !2159
  %tobool204.not = icmp eq i8* %56, null, !dbg !3513
  br i1 %tobool204.not, label %if.end212, label %land.lhs.true205, !dbg !3514

land.lhs.true205:                                 ; preds = %if.end203
  %authenticated = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 15, !dbg !3515
  %57 = load i32, i32* %authenticated, align 8, !dbg !3515, !tbaa !3516
  %tobool206.not = icmp eq i32 %57, 0, !dbg !3517
  br i1 %tobool206.not, label %land.lhs.true207, label %if.end212, !dbg !3518

land.lhs.true207:                                 ; preds = %land.lhs.true205
  %proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 1, !dbg !3519
  %58 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc, align 8, !dbg !3519, !tbaa !1354
  %cmp208.not = icmp eq void (%struct.redisClient*)* %58, @authCommand, !dbg !3520
  br i1 %cmp208.not, label %if.end212, label %if.then210, !dbg !3521

if.then210:                                       ; preds = %land.lhs.true207
  %call211 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0)) #23, !dbg !3522
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call211) #22, !dbg !3524
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3525
  br label %cleanup278, !dbg !3526

if.end212:                                        ; preds = %land.lhs.true207, %land.lhs.true205, %if.end203
  %59 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3527, !tbaa !2040
  %tobool213.not = icmp eq i64 %59, 0, !dbg !3529
  br i1 %tobool213.not, label %if.end224, label %land.lhs.true214, !dbg !3530

land.lhs.true214:                                 ; preds = %if.end212
  %60 = load i32, i32* %flags, align 4, !dbg !3531, !tbaa !1340
  %and216 = and i32 %60, 4, !dbg !3532
  %tobool217.not = icmp eq i32 %and216, 0, !dbg !3532
  br i1 %tobool217.not, label %if.end224, label %land.lhs.true218, !dbg !3533

land.lhs.true218:                                 ; preds = %land.lhs.true214
  %call219 = tail call i64 @zmalloc_used_memory() #23, !dbg !3534
  %61 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3535, !tbaa !2040
  %cmp220 = icmp ugt i64 %call219, %61, !dbg !3536
  br i1 %cmp220, label %if.then222, label %if.end224, !dbg !3537

if.then222:                                       ; preds = %land.lhs.true218
  %call223 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.51, i64 0, i64 0)) #23, !dbg !3538
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call223) #22, !dbg !3540
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3541
  br label %cleanup278, !dbg !3542

if.end224:                                        ; preds = %land.lhs.true218, %land.lhs.true214, %if.end212
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !3543
  %62 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !3543, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %62, i64 0, i32 2, i64 0, i32 3, !dbg !3543
  %63 = load i64, i64* %used, align 8, !dbg !3543, !tbaa !3545
  %used229 = getelementptr inbounds %struct.dict, %struct.dict* %62, i64 0, i32 2, i64 1, i32 3, !dbg !3543
  %64 = load i64, i64* %used229, align 8, !dbg !3543, !tbaa !3545
  %add230 = sub i64 0, %64, !dbg !3547
  %cmp231.not = icmp eq i64 %63, %add230, !dbg !3547
  br i1 %cmp231.not, label %lor.lhs.false233, label %land.lhs.true236, !dbg !3548

lor.lhs.false233:                                 ; preds = %if.end224
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !3549
  %65 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !3549, !tbaa !2643
  %len = getelementptr inbounds %struct.list, %struct.list* %65, i64 0, i32 5, !dbg !3549
  %66 = load i32, i32* %len, align 8, !dbg !3549, !tbaa !1358
  %cmp234.not = icmp eq i32 %66, 0, !dbg !3550
  br i1 %cmp234.not, label %if.end254, label %land.lhs.true236, !dbg !3551

land.lhs.true236:                                 ; preds = %lor.lhs.false233, %if.end224
  %proc237 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 1, !dbg !3552
  %67 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc237, align 8, !dbg !3552, !tbaa !1354
  %cmp238.not = icmp eq void (%struct.redisClient*)* %67, @subscribeCommand, !dbg !3553
  %cmp242.not = icmp eq void (%struct.redisClient*)* %67, @unsubscribeCommand
  %or.cond = or i1 %cmp238.not, %cmp242.not, !dbg !3554
  %cmp246.not = icmp eq void (%struct.redisClient*)* %67, @psubscribeCommand
  %or.cond402 = or i1 %cmp246.not, %or.cond, !dbg !3554
  %cmp250.not = icmp eq void (%struct.redisClient*)* %67, @punsubscribeCommand
  %or.cond403 = or i1 %cmp250.not, %or.cond402, !dbg !3554
  br i1 %or.cond403, label %if.end254, label %if.then252, !dbg !3554

if.then252:                                       ; preds = %land.lhs.true236
  %call253 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.52, i64 0, i64 0)) #23, !dbg !3555
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call253) #22, !dbg !3557
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3558
  br label %cleanup278, !dbg !3559

if.end254:                                        ; preds = %land.lhs.true236, %lor.lhs.false233
  %flags255 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !3560
  %68 = load i32, i32* %flags255, align 8, !dbg !3560, !tbaa !1402
  %and256 = and i32 %68, 8, !dbg !3562
  %tobool257.not = icmp eq i32 %and256, 0, !dbg !3562
  br i1 %tobool257.not, label %if.else267, label %land.lhs.true258, !dbg !3563

land.lhs.true258:                                 ; preds = %if.end254
  %proc259 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %call101, i64 0, i32 1, !dbg !3564
  %69 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc259, align 8, !dbg !3564, !tbaa !1354
  %cmp260.not = icmp eq void (%struct.redisClient*)* %69, @execCommand, !dbg !3565
  %cmp264.not = icmp eq void (%struct.redisClient*)* %69, @discardCommand
  %or.cond404 = or i1 %cmp260.not, %cmp264.not, !dbg !3566
  br i1 %or.cond404, label %if.else267, label %if.then266, !dbg !3566

if.then266:                                       ; preds = %land.lhs.true258
  tail call void @queueMultiCommand(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef nonnull %call101) #22, !dbg !3567
  %70 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 11), align 8, !dbg !3569, !tbaa !3570
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %70) #22, !dbg !3572
  br label %if.end277, !dbg !3573

if.else267:                                       ; preds = %land.lhs.true258, %if.end254
  %71 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !3574, !tbaa !1384
  %tobool268 = icmp ne i32 %71, 0, !dbg !3577
  %72 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4
  %cmp270 = icmp sgt i32 %72, 0
  %or.cond280 = select i1 %tobool268, i1 %cmp270, i1 false, !dbg !3578
  br i1 %or.cond280, label %land.lhs.true272, label %if.end276, !dbg !3578

land.lhs.true272:                                 ; preds = %if.else267
  %call273 = tail call i32 @blockClientOnSwappedKeys(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef nonnull %call101) #22, !dbg !3579
  %tobool274.not = icmp eq i32 %call273, 0, !dbg !3579
  br i1 %tobool274.not, label %if.end276, label %cleanup278, !dbg !3580

if.end276:                                        ; preds = %land.lhs.true272, %if.else267
  tail call void @call(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef nonnull %call101) #22, !dbg !3581
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then266
  tail call void @resetClient(%struct.redisClient* noundef nonnull %c) #22, !dbg !3582
  br label %cleanup278, !dbg !3583

cleanup278:                                       ; preds = %land.lhs.true272, %if.then151, %if.end155, %if.then48, %if.end52, %if.end277, %if.then252, %if.then222, %if.then210, %if.then123, %if.then103, %if.then96, %if.else85, %if.then33, %if.else, %if.then14
  %retval.2 = phi i32 [ 1, %if.then14 ], [ 1, %if.else ], [ 1, %if.then33 ], [ 1, %if.then123 ], [ 1, %if.then222 ], [ 1, %if.then252 ], [ 1, %if.end277 ], [ 1, %if.then210 ], [ 1, %if.then103 ], [ 0, %if.then96 ], [ 1, %if.else85 ], [ 1, %if.end52 ], [ 1, %if.then48 ], [ 1, %if.end155 ], [ 1, %if.then151 ], [ 1, %land.lhs.true272 ], !dbg !3326
  ret i32 %retval.2, !dbg !3584
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createStringObject(i8* noundef %ptr, i64 noundef %len) #0 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !3589, metadata !DIExpression()), !dbg !3591
  call void @llvm.dbg.value(metadata i64 %len, metadata !3590, metadata !DIExpression()), !dbg !3591
  %call = tail call i8* @sdsnewlen(i8* noundef %ptr, i64 noundef %len) #23, !dbg !3592
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call) #22, !dbg !3593
  ret %struct.redisObject* %call1, !dbg !3594
}

declare !dbg !3595 dso_local i8* @sdsrange(i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @freeMemoryIfNeeded() #0 !dbg !3598 {
entry:
  %.old = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3616, !tbaa !2040
  %tobool.not.old = icmp eq i64 %.old, 0, !dbg !3617
  br i1 %tobool.not.old, label %while.end, label %land.rhs, !dbg !3618

land.rhs:                                         ; preds = %entry, %cleanup
  %call = tail call i64 @zmalloc_used_memory() #23, !dbg !3619
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3620, !tbaa !2040
  %cmp = icmp ugt i64 %call, %0, !dbg !3621
  br i1 %cmp, label %while.body, label %while.end, !dbg !3622

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata i32 0, metadata !3603, metadata !DIExpression()), !dbg !3623
  %call1 = tail call i32 @tryFreeOneObjectFromFreelist() #22, !dbg !3624
  %cmp2 = icmp eq i32 %call1, 0, !dbg !3626
  br i1 %cmp2, label %cleanup, label %for.cond.preheader, !dbg !3627, !llvm.loop !3628

for.cond.preheader:                               ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 0, metadata !3600, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32 0, metadata !3603, metadata !DIExpression()), !dbg !3623
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !3630, !tbaa !2013
  %cmp356 = icmp sgt i32 %1, 0, !dbg !3631
  br i1 %cmp356, label %for.body.preheader, label %for.end30, !dbg !3632

for.body.preheader:                               ; preds = %for.cond.preheader
  %.pre60 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !3633, !tbaa !2351
  br label %for.body, !dbg !3632

for.body:                                         ; preds = %for.body.preheader, %if.end27
  %2 = phi i32 [ %1, %for.body.preheader ], [ %24, %if.end27 ]
  %3 = phi %struct.redisDb* [ %.pre60, %for.body.preheader ], [ %25, %if.end27 ], !dbg !3633
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %if.end27 ]
  %freed.057 = phi i32 [ 0, %for.body.preheader ], [ %freed.1, %if.end27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3600, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32 %freed.057, metadata !3603, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32 -1, metadata !3604, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !3608, metadata !DIExpression()), !dbg !3634
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 %indvars.iv, i32 1, !dbg !3633
  %4 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !3633, !tbaa !3635
  %used = getelementptr inbounds %struct.dict, %struct.dict* %4, i64 0, i32 2, i64 0, i32 3, !dbg !3633
  %5 = load i64, i64* %used, align 8, !dbg !3633, !tbaa !3545
  %used10 = getelementptr inbounds %struct.dict, %struct.dict* %4, i64 0, i32 2, i64 1, i32 3, !dbg !3633
  %6 = load i64, i64* %used10, align 8, !dbg !3633, !tbaa !3545
  %add = sub i64 0, %6, !dbg !3633
  %tobool11.not = icmp eq i64 %5, %add, !dbg !3633
  br i1 %tobool11.not, label %if.end27, label %if.end25, !dbg !3636

if.end25:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !3602, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !3608, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i32 -1, metadata !3604, metadata !DIExpression()), !dbg !3634
  %call19 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef nonnull %4) #23, !dbg !3637
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call19, metadata !3609, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i8* undef, metadata !3610, metadata !DIExpression()), !dbg !3638
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call19, i64 0, i32 1, !dbg !3639
  %7 = load i8*, i8** %val, align 8, !dbg !3639, !tbaa !2458
  call void @llvm.dbg.value(metadata i8* %7, metadata !3610, metadata !DIExpression()), !dbg !3638
  %8 = ptrtoint i8* %7 to i64, !dbg !3640
  call void @llvm.dbg.value(metadata i64 %8, metadata !3610, metadata !DIExpression()), !dbg !3638
  %9 = bitcast %struct.dictEntry* %call19 to %struct.redisObject**, !dbg !3641
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !3641, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %10, metadata !3608, metadata !DIExpression()), !dbg !3634
  %conv24 = trunc i64 %8 to i32, !dbg !3644
  call void @llvm.dbg.value(metadata i32 1, metadata !3602, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i32 %conv24, metadata !3604, metadata !DIExpression()), !dbg !3634
  %11 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !3645, !tbaa !2351
  %expires18.1 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %11, i64 %indvars.iv, i32 1, !dbg !3646
  %12 = load %struct.dict*, %struct.dict** %expires18.1, align 8, !dbg !3646, !tbaa !3635
  %call19.1 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %12) #23, !dbg !3637
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call19.1, metadata !3609, metadata !DIExpression()), !dbg !3634
  %val.1 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call19.1, i64 0, i32 1, !dbg !3639
  %13 = load i8*, i8** %val.1, align 8, !dbg !3639, !tbaa !2458
  %14 = ptrtoint i8* %13 to i64, !dbg !3640
  call void @llvm.dbg.value(metadata i64 %14, metadata !3610, metadata !DIExpression()), !dbg !3638
  %cmp20.1 = icmp eq i32 %conv24, -1, !dbg !3647
  %sext63 = shl i64 %8, 32
  %conv.1 = ashr exact i64 %sext63, 32
  %cmp21.1 = icmp sgt i64 %conv.1, %14
  %or.cond.1 = select i1 %cmp20.1, i1 true, i1 %cmp21.1, !dbg !3648
  br i1 %or.cond.1, label %if.then23.1, label %if.end25.1, !dbg !3648

if.then23.1:                                      ; preds = %if.end25
  %15 = bitcast %struct.dictEntry* %call19.1 to %struct.redisObject**, !dbg !3641
  %16 = load %struct.redisObject*, %struct.redisObject** %15, align 8, !dbg !3641, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %16, metadata !3608, metadata !DIExpression()), !dbg !3634
  %conv24.1 = trunc i64 %14 to i32, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %conv24.1, metadata !3604, metadata !DIExpression()), !dbg !3634
  %sext = shl i64 %14, 32
  %.pre62 = ashr exact i64 %sext, 32
  br label %if.end25.1, !dbg !3649

if.end25.1:                                       ; preds = %if.then23.1, %if.end25
  %conv.2.pre-phi = phi i64 [ %.pre62, %if.then23.1 ], [ %conv.1, %if.end25 ]
  %minttl.1.1 = phi i32 [ %conv24.1, %if.then23.1 ], [ %conv24, %if.end25 ], !dbg !3634
  %minkey.1.1 = phi %struct.redisObject* [ %16, %if.then23.1 ], [ %10, %if.end25 ], !dbg !3634
  call void @llvm.dbg.value(metadata i32 2, metadata !3602, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata %struct.redisObject* %minkey.1.1, metadata !3608, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i32 %minttl.1.1, metadata !3604, metadata !DIExpression()), !dbg !3634
  %17 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !3645, !tbaa !2351
  %expires18.2 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %17, i64 %indvars.iv, i32 1, !dbg !3646
  %18 = load %struct.dict*, %struct.dict** %expires18.2, align 8, !dbg !3646, !tbaa !3635
  %call19.2 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %18) #23, !dbg !3637
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call19.2, metadata !3609, metadata !DIExpression()), !dbg !3634
  %val.2 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call19.2, i64 0, i32 1, !dbg !3639
  %19 = load i8*, i8** %val.2, align 8, !dbg !3639, !tbaa !2458
  %20 = ptrtoint i8* %19 to i64, !dbg !3640
  call void @llvm.dbg.value(metadata i64 %20, metadata !3610, metadata !DIExpression()), !dbg !3638
  %cmp20.2 = icmp eq i32 %minttl.1.1, -1, !dbg !3647
  %cmp21.2 = icmp sgt i64 %conv.2.pre-phi, %20
  %or.cond.2 = select i1 %cmp20.2, i1 true, i1 %cmp21.2, !dbg !3648
  br i1 %or.cond.2, label %if.then23.2, label %if.end25.2, !dbg !3648

if.then23.2:                                      ; preds = %if.end25.1
  %21 = bitcast %struct.dictEntry* %call19.2 to %struct.redisObject**, !dbg !3641
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !3641, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %22, metadata !3608, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i64 %20, metadata !3604, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3634
  br label %if.end25.2, !dbg !3649

if.end25.2:                                       ; preds = %if.then23.2, %if.end25.1
  %minkey.1.2 = phi %struct.redisObject* [ %22, %if.then23.2 ], [ %minkey.1.1, %if.end25.1 ], !dbg !3634
  call void @llvm.dbg.value(metadata %struct.redisObject* %minkey.1.2, metadata !3608, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i32 undef, metadata !3604, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.value(metadata i32 3, metadata !3602, metadata !DIExpression()), !dbg !3623
  %23 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !3650, !tbaa !2351
  %add.ptr = getelementptr inbounds %struct.redisDb, %struct.redisDb* %23, i64 %indvars.iv, !dbg !3651
  %call26 = tail call i32 @deleteKey(%struct.redisDb* noundef %add.ptr, %struct.redisObject* noundef %minkey.1.2) #22, !dbg !3652
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !3633, !tbaa !2351
  %.pre61 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !3630, !tbaa !2013
  br label %if.end27, !dbg !3653

if.end27:                                         ; preds = %if.end25.2, %for.body
  %24 = phi i32 [ %.pre61, %if.end25.2 ], [ %2, %for.body ], !dbg !3630
  %25 = phi %struct.redisDb* [ %.pre, %if.end25.2 ], [ %3, %for.body ]
  %freed.1 = phi i32 [ 1, %if.end25.2 ], [ %freed.057, %for.body ], !dbg !3623
  call void @llvm.dbg.value(metadata i32 %freed.1, metadata !3603, metadata !DIExpression()), !dbg !3623
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3654
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3600, metadata !DIExpression()), !dbg !3623
  %26 = sext i32 %24 to i64, !dbg !3631
  %cmp3 = icmp slt i64 %indvars.iv.next, %26, !dbg !3631
  br i1 %cmp3, label %for.body, label %for.end30, !dbg !3632, !llvm.loop !3655

for.end30:                                        ; preds = %if.end27, %for.cond.preheader
  %freed.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %freed.1, %if.end27 ], !dbg !3623
  %tobool31.not = icmp eq i32 %freed.0.lcssa, 0, !dbg !3657
  %. = zext i1 %tobool31.not to i32, !dbg !3659
  br label %cleanup, !dbg !3659

cleanup:                                          ; preds = %for.end30, %while.body
  %cleanup.dest.slot.0 = phi i32 [ 2, %while.body ], [ %., %for.end30 ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 1
  %27 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8
  %tobool.not = icmp eq i64 %27, 0
  %or.cond52 = select i1 %switch, i1 true, i1 %tobool.not
  br i1 %or.cond52, label %while.end, label %land.rhs

while.end:                                        ; preds = %cleanup, %land.rhs, %entry
  ret void, !dbg !3660
}

; Function Attrs: noinline nounwind uwtable
define internal void @resetClient(%struct.redisClient* nocapture noundef %c) #0 !dbg !3661 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3663, metadata !DIExpression()), !dbg !3664
  tail call void @freeClientArgv(%struct.redisClient* noundef %c) #22, !dbg !3665
  %bulklen = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 8, !dbg !3666
  store i32 -1, i32* %bulklen, align 8, !dbg !3667, !tbaa !3164
  %multibulk = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 9, !dbg !3668
  store i32 0, i32* %multibulk, align 4, !dbg !3669, !tbaa !3333
  ret void, !dbg !3670
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %s) #0 !dbg !3671 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3675, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8* %s, metadata !3676, metadata !DIExpression()), !dbg !3678
  %call = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %s) #22, !dbg !3679
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !3677, metadata !DIExpression()), !dbg !3678
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call) #22, !dbg !3680
  %0 = bitcast %struct.redisObject* %call to i8*, !dbg !3681
  tail call void @decrRefCount(i8* noundef %0) #22, !dbg !3682
  ret void, !dbg !3683
}

declare !dbg !3684 dso_local i8* @sdsnew(i8* noundef) local_unnamed_addr #4

declare !dbg !3687 dso_local i8* @zrealloc(i8* noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !3690 dso_local i32 @strcasecmp(i8* noundef, i8* noundef) local_unnamed_addr #11

declare !dbg !3692 dso_local i8* @sdscatprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @authCommand(%struct.redisClient* noundef %c) #0 !dbg !3695 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3697, metadata !DIExpression()), !dbg !3698
  %0 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !3699, !tbaa !2159
  %tobool.not = icmp eq i8* %0, null, !dbg !3701
  br i1 %tobool.not, label %if.then, label %lor.lhs.false, !dbg !3702

lor.lhs.false:                                    ; preds = %entry
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3703
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3703, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !3704
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3704, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 0, !dbg !3705
  %3 = load i8*, i8** %ptr, align 8, !dbg !3705, !tbaa !1328
  %call = tail call i32 @strcmp(i8* noundef %3, i8* noundef nonnull %0) #27, !dbg !3706
  %tobool1.not = icmp eq i32 %call, 0, !dbg !3706
  br i1 %tobool1.not, label %if.then, label %if.else, !dbg !3707

if.then:                                          ; preds = %lor.lhs.false, %entry
  %authenticated = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 15, !dbg !3708
  store i32 1, i32* %authenticated, align 8, !dbg !3710, !tbaa !3516
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !3711, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %4) #22, !dbg !3713
  br label %if.end, !dbg !3714

if.else:                                          ; preds = %lor.lhs.false
  %authenticated2 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 15, !dbg !3715
  store i32 0, i32* %authenticated2, align 8, !dbg !3717, !tbaa !3516
  %call3 = tail call i8* (...) @sdsempty() #23, !dbg !3718
  %call4 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call3, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64 0)) #23, !dbg !3719
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call4) #22, !dbg !3720
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3721
}

; Function Attrs: noinline nounwind uwtable
define internal void @subscribeCommand(%struct.redisClient* noundef %c) #0 !dbg !3722 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i32 1, metadata !3725, metadata !DIExpression()), !dbg !3726
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  call void @llvm.dbg.value(metadata i32 1, metadata !3725, metadata !DIExpression()), !dbg !3726
  %0 = load i32, i32* %argc, align 8, !dbg !3727, !tbaa !1350
  %cmp6 = icmp sgt i32 %0, 1, !dbg !3730
  br i1 %cmp6, label %for.body.lr.ph, label %for.end, !dbg !3731

for.body.lr.ph:                                   ; preds = %entry
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !3731

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3725, metadata !DIExpression()), !dbg !3726
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3732, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 %indvars.iv, !dbg !3733
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3733, !tbaa !782
  %call = tail call i32 @pubsubSubscribeChannel(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2) #22, !dbg !3734
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3735
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3725, metadata !DIExpression()), !dbg !3726
  %3 = load i32, i32* %argc, align 8, !dbg !3727, !tbaa !1350
  %4 = sext i32 %3 to i64, !dbg !3730
  %cmp = icmp slt i64 %indvars.iv.next, %4, !dbg !3730
  br i1 %cmp, label %for.body, label %for.end, !dbg !3731, !llvm.loop !3736

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !3738
}

; Function Attrs: noinline nounwind uwtable
define internal void @unsubscribeCommand(%struct.redisClient* noundef %c) #0 !dbg !3739 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3741, metadata !DIExpression()), !dbg !3745
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3746
  %0 = load i32, i32* %argc, align 8, !dbg !3746, !tbaa !1350
  %cmp = icmp eq i32 %0, 1, !dbg !3747
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !3748

for.cond.preheader:                               ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !3742, metadata !DIExpression()), !dbg !3749
  %cmp211 = icmp sgt i32 %0, 1, !dbg !3750
  br i1 %cmp211, label %for.body.lr.ph, label %if.end, !dbg !3753

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !3753

if.then:                                          ; preds = %entry
  %call = tail call i32 @pubsubUnsubscribeAllChannels(%struct.redisClient* noundef nonnull %c, i32 noundef 1) #22, !dbg !3754
  br label %if.end, !dbg !3756

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3742, metadata !DIExpression()), !dbg !3749
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3757, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 %indvars.iv, !dbg !3758
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3758, !tbaa !782
  %call3 = tail call i32 @pubsubUnsubscribeChannel(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2, i32 noundef 1) #22, !dbg !3759
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3760
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3742, metadata !DIExpression()), !dbg !3749
  %3 = load i32, i32* %argc, align 8, !dbg !3761, !tbaa !1350
  %4 = sext i32 %3 to i64, !dbg !3750
  %cmp2 = icmp slt i64 %indvars.iv.next, %4, !dbg !3750
  br i1 %cmp2, label %for.body, label %if.end, !dbg !3753, !llvm.loop !3762

if.end:                                           ; preds = %for.body, %for.cond.preheader, %if.then
  ret void, !dbg !3764
}

; Function Attrs: noinline nounwind uwtable
define internal void @psubscribeCommand(%struct.redisClient* noundef %c) #0 !dbg !3765 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3767, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata i32 1, metadata !3768, metadata !DIExpression()), !dbg !3769
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  call void @llvm.dbg.value(metadata i32 1, metadata !3768, metadata !DIExpression()), !dbg !3769
  %0 = load i32, i32* %argc, align 8, !dbg !3770, !tbaa !1350
  %cmp6 = icmp sgt i32 %0, 1, !dbg !3773
  br i1 %cmp6, label %for.body.lr.ph, label %for.end, !dbg !3774

for.body.lr.ph:                                   ; preds = %entry
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !3774

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3768, metadata !DIExpression()), !dbg !3769
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3775, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 %indvars.iv, !dbg !3776
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3776, !tbaa !782
  %call = tail call i32 @pubsubSubscribePattern(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2) #22, !dbg !3777
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3778
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3768, metadata !DIExpression()), !dbg !3769
  %3 = load i32, i32* %argc, align 8, !dbg !3770, !tbaa !1350
  %4 = sext i32 %3 to i64, !dbg !3773
  %cmp = icmp slt i64 %indvars.iv.next, %4, !dbg !3773
  br i1 %cmp, label %for.body, label %for.end, !dbg !3774, !llvm.loop !3779

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !3781
}

; Function Attrs: noinline nounwind uwtable
define internal void @punsubscribeCommand(%struct.redisClient* noundef %c) #0 !dbg !3782 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3784, metadata !DIExpression()), !dbg !3788
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3789
  %0 = load i32, i32* %argc, align 8, !dbg !3789, !tbaa !1350
  %cmp = icmp eq i32 %0, 1, !dbg !3790
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !3791

for.cond.preheader:                               ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !3785, metadata !DIExpression()), !dbg !3792
  %cmp211 = icmp sgt i32 %0, 1, !dbg !3793
  br i1 %cmp211, label %for.body.lr.ph, label %if.end, !dbg !3796

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !3796

if.then:                                          ; preds = %entry
  %call = tail call i32 @pubsubUnsubscribeAllPatterns(%struct.redisClient* noundef nonnull %c, i32 noundef 1) #22, !dbg !3797
  br label %if.end, !dbg !3799

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3785, metadata !DIExpression()), !dbg !3792
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3800, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 %indvars.iv, !dbg !3801
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3801, !tbaa !782
  %call3 = tail call i32 @pubsubUnsubscribePattern(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2, i32 noundef 1) #22, !dbg !3802
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3803
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3785, metadata !DIExpression()), !dbg !3792
  %3 = load i32, i32* %argc, align 8, !dbg !3804, !tbaa !1350
  %4 = sext i32 %3 to i64, !dbg !3793
  %cmp2 = icmp slt i64 %indvars.iv.next, %4, !dbg !3793
  br i1 %cmp2, label %for.body, label %if.end, !dbg !3796, !llvm.loop !3805

if.end:                                           ; preds = %for.body, %for.cond.preheader, %if.then
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind uwtable
define internal void @execCommand(%struct.redisClient* noundef %c) #0 !dbg !3808 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3810, metadata !DIExpression()), !dbg !3814
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !3815
  %0 = load i32, i32* %flags, align 8, !dbg !3815, !tbaa !1402
  %and = and i32 %0, 8, !dbg !3817
  %tobool.not = icmp eq i32 %and, 0, !dbg !3817
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !3818

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.58, i64 0, i64 0)) #23, !dbg !3819
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call) #22, !dbg !3821
  br label %cleanup, !dbg !3822

if.end:                                           ; preds = %entry
  tail call void @execCommandReplicateMulti(%struct.redisClient* noundef nonnull %c) #22, !dbg !3823
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3824
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3824, !tbaa !1352
  call void @llvm.dbg.value(metadata %struct.redisObject** %1, metadata !3812, metadata !DIExpression()), !dbg !3814
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3825
  %2 = load i32, i32* %argc, align 8, !dbg !3825, !tbaa !1350
  call void @llvm.dbg.value(metadata i32 %2, metadata !3813, metadata !DIExpression()), !dbg !3814
  %call1 = tail call i8* (...) @sdsempty() #23, !dbg !3826
  %count = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 1, !dbg !3827
  %3 = load i32, i32* %count, align 8, !dbg !3827, !tbaa !3107
  %call2 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call1, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %3) #23, !dbg !3828
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call2) #22, !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3811, metadata !DIExpression()), !dbg !3814
  %4 = load i32, i32* %count, align 8, !dbg !3830, !tbaa !3107
  %cmp50 = icmp sgt i32 %4, 0, !dbg !3833
  br i1 %cmp50, label %for.body.lr.ph, label %for.end, !dbg !3834

for.body.lr.ph:                                   ; preds = %if.end
  %commands = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 0
  br label %for.body, !dbg !3834

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3811, metadata !DIExpression()), !dbg !3814
  %5 = load %struct.multiCmd*, %struct.multiCmd** %commands, align 8, !dbg !3835, !tbaa !3111
  %argc6 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %5, i64 %indvars.iv, i32 1, !dbg !3837
  %6 = load i32, i32* %argc6, align 8, !dbg !3837, !tbaa !3117
  store i32 %6, i32* %argc, align 8, !dbg !3838, !tbaa !1350
  %argv12 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %5, i64 %indvars.iv, i32 0, !dbg !3839
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv12, align 8, !dbg !3839, !tbaa !3122
  store %struct.redisObject** %7, %struct.redisObject*** %argv, align 8, !dbg !3840, !tbaa !1352
  %cmd = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %5, i64 %indvars.iv, i32 2, !dbg !3841
  %8 = load %struct.redisCommand*, %struct.redisCommand** %cmd, align 8, !dbg !3841, !tbaa !3842
  tail call void @call(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef %8) #22, !dbg !3843
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3844
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3811, metadata !DIExpression()), !dbg !3814
  %9 = load i32, i32* %count, align 8, !dbg !3830, !tbaa !3107
  %10 = sext i32 %9 to i64, !dbg !3833
  %cmp = icmp slt i64 %indvars.iv.next, %10, !dbg !3833
  br i1 %cmp, label %for.body, label %for.end, !dbg !3834, !llvm.loop !3845

for.end:                                          ; preds = %for.body, %if.end
  store %struct.redisObject** %1, %struct.redisObject*** %argv, align 8, !dbg !3847, !tbaa !1352
  store i32 %2, i32* %argc, align 8, !dbg !3848, !tbaa !1350
  tail call void @freeClientMultiState(%struct.redisClient* noundef nonnull %c) #22, !dbg !3849
  tail call void @initClientMultiState(%struct.redisClient* noundef nonnull %c) #22, !dbg !3850
  %11 = load i32, i32* %flags, align 8, !dbg !3851, !tbaa !1402
  %and21 = and i32 %11, -9, !dbg !3851
  store i32 %and21, i32* %flags, align 8, !dbg !3851, !tbaa !1402
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3852, !tbaa !708
  %inc22 = add nsw i64 %12, 1, !dbg !3852
  store i64 %inc22, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3852, !tbaa !708
  br label %cleanup, !dbg !3853

cleanup:                                          ; preds = %for.end, %if.then
  ret void, !dbg !3853
}

; Function Attrs: noinline nounwind uwtable
define internal void @discardCommand(%struct.redisClient* noundef %c) #0 !dbg !3854 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3856, metadata !DIExpression()), !dbg !3857
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !3858
  %0 = load i32, i32* %flags, align 8, !dbg !3858, !tbaa !1402
  %and = and i32 %0, 8, !dbg !3860
  %tobool.not = icmp eq i32 %and, 0, !dbg !3860
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !3861

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i64 0, i64 0)) #23, !dbg !3862
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call) #22, !dbg !3864
  br label %return, !dbg !3865

if.end:                                           ; preds = %entry
  tail call void @freeClientMultiState(%struct.redisClient* noundef nonnull %c) #22, !dbg !3866
  tail call void @initClientMultiState(%struct.redisClient* noundef nonnull %c) #22, !dbg !3867
  %1 = load i32, i32* %flags, align 8, !dbg !3868, !tbaa !1402
  %and2 = and i32 %1, -9, !dbg !3868
  store i32 %and2, i32* %flags, align 8, !dbg !3868, !tbaa !1402
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !3869, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2) #22, !dbg !3870
  br label %return, !dbg !3871

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3871
}

; Function Attrs: noinline nounwind uwtable
define internal void @queueMultiCommand(%struct.redisClient* nocapture noundef %c, %struct.redisCommand* noundef %cmd) #0 !dbg !3872 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3876, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !3877, metadata !DIExpression()), !dbg !3880
  %mstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, !dbg !3881
  %0 = bitcast %struct.multiState* %mstate to i8**, !dbg !3882
  %1 = load i8*, i8** %0, align 8, !dbg !3882, !tbaa !3111
  %count = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 1, !dbg !3883
  %2 = load i32, i32* %count, align 8, !dbg !3883, !tbaa !3107
  %add = add nsw i32 %2, 1, !dbg !3884
  %conv = sext i32 %add to i64, !dbg !3885
  %mul = mul nsw i64 %conv, 24, !dbg !3886
  %call = tail call i8* @zrealloc(i8* noundef %1, i64 noundef %mul) #23, !dbg !3887
  %3 = bitcast i8* %call to %struct.multiCmd*, !dbg !3887
  store i8* %call, i8** %0, align 8, !dbg !3888, !tbaa !3111
  %4 = load i32, i32* %count, align 8, !dbg !3889, !tbaa !3107
  %idx.ext = sext i32 %4 to i64, !dbg !3890
  call void @llvm.dbg.value(metadata !DIArgList(%struct.multiCmd* %3, i64 %idx.ext), metadata !3878, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3880
  %cmd8 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %3, i64 %idx.ext, i32 2, !dbg !3891
  store %struct.redisCommand* %cmd, %struct.redisCommand** %cmd8, align 8, !dbg !3892, !tbaa !3842
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3893
  %5 = load i32, i32* %argc, align 8, !dbg !3893, !tbaa !1350
  %argc9 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %3, i64 %idx.ext, i32 1, !dbg !3894
  store i32 %5, i32* %argc9, align 8, !dbg !3895, !tbaa !3117
  %conv11 = sext i32 %5 to i64, !dbg !3896
  %mul12 = shl nsw i64 %conv11, 3, !dbg !3897
  %call13 = tail call i8* @zmalloc(i64 noundef %mul12) #23, !dbg !3898
  %argv = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %3, i64 %idx.ext, i32 0, !dbg !3899
  %6 = bitcast %struct.redisObject*** %argv to i8**, !dbg !3900
  store i8* %call13, i8** %6, align 8, !dbg !3900, !tbaa !3122
  %argv15 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3901
  %7 = bitcast %struct.redisObject*** %argv15 to i8**, !dbg !3901
  %8 = load i8*, i8** %7, align 8, !dbg !3901, !tbaa !1352
  %9 = load i32, i32* %argc, align 8, !dbg !3902, !tbaa !1350
  %conv17 = sext i32 %9 to i64, !dbg !3903
  %mul18 = shl nsw i64 %conv17, 3, !dbg !3904
  %call19 = tail call i8* @memcpy(i8* noundef %call13, i8* noundef %8, i64 noundef %mul18) #23, !dbg !3905
  call void @llvm.dbg.value(metadata i32 0, metadata !3879, metadata !DIExpression()), !dbg !3880
  %10 = load i32, i32* %argc, align 8, !dbg !3906, !tbaa !1350
  %cmp44 = icmp sgt i32 %10, 0, !dbg !3909
  br i1 %cmp44, label %for.body, label %for.end, !dbg !3910

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3879, metadata !DIExpression()), !dbg !3880
  %11 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !3911, !tbaa !3122
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %11, i64 %indvars.iv, !dbg !3912
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !3912, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %12) #22, !dbg !3913
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3914
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3879, metadata !DIExpression()), !dbg !3880
  %13 = load i32, i32* %argc, align 8, !dbg !3906, !tbaa !1350
  %14 = sext i32 %13 to i64, !dbg !3909
  %cmp = icmp slt i64 %indvars.iv.next, %14, !dbg !3909
  br i1 %cmp, label %for.body, label %for.end, !dbg !3910, !llvm.loop !3915

for.end:                                          ; preds = %for.body, %entry
  %15 = load i32, i32* %count, align 8, !dbg !3917, !tbaa !3107
  %inc25 = add nsw i32 %15, 1, !dbg !3917
  store i32 %inc25, i32* %count, align 8, !dbg !3917, !tbaa !3107
  ret void, !dbg !3918
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %obj) #0 !dbg !3919 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3923, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !3924, metadata !DIExpression()), !dbg !3925
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 10, !dbg !3926
  %0 = load %struct.list*, %struct.list** %reply, align 8, !dbg !3926, !tbaa !1357
  %len = getelementptr inbounds %struct.list, %struct.list* %0, i64 0, i32 5, !dbg !3926
  %1 = load i32, i32* %len, align 8, !dbg !3926, !tbaa !1358
  %cmp = icmp eq i32 %1, 0, !dbg !3928
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3929

land.lhs.true:                                    ; preds = %entry
  %replstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 16, !dbg !3930
  %2 = load i32, i32* %replstate, align 4, !dbg !3930, !tbaa !896
  switch i32 %2, label %if.end [
    i32 0, label %land.lhs.true4
    i32 6, label %land.lhs.true4
  ], !dbg !3931

land.lhs.true4:                                   ; preds = %land.lhs.true, %land.lhs.true
  %3 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !3932, !tbaa !941
  %fd = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 0, !dbg !3933
  %4 = load i32, i32* %fd, align 8, !dbg !3933, !tbaa !943
  %5 = bitcast %struct.redisClient* %c to i8*, !dbg !3934
  %call = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %3, i32 noundef %4, i32 noundef 2, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @sendReplyToClient, i8* noundef %5) #23, !dbg !3935
  %cmp5 = icmp eq i32 %call, -1, !dbg !3936
  br i1 %cmp5, label %return, label %if.end, !dbg !3937

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true4, %entry
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !3938, !tbaa !1384
  %tobool.not = icmp eq i32 %6, 0, !dbg !3940
  br i1 %tobool.not, label %if.end11, label %land.lhs.true6, !dbg !3941

land.lhs.true6:                                   ; preds = %if.end
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 3, !dbg !3942
  %7 = load i8, i8* %storage, align 2, !dbg !3942, !tbaa !1547
  %cmp7.not = icmp eq i8 %7, 0, !dbg !3943
  br i1 %cmp7.not, label %if.end11, label %if.then9, !dbg !3944

if.then9:                                         ; preds = %land.lhs.true6
  %call10 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef nonnull %obj) #22, !dbg !3945
  call void @llvm.dbg.value(metadata %struct.redisObject* %call10, metadata !3924, metadata !DIExpression()), !dbg !3925
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call10, i64 0, i32 5, !dbg !3947
  store i32 0, i32* %refcount, align 4, !dbg !3948, !tbaa !1534
  br label %if.end11, !dbg !3949

if.end11:                                         ; preds = %if.then9, %land.lhs.true6, %if.end
  %obj.addr.0 = phi %struct.redisObject* [ %call10, %if.then9 ], [ %obj, %land.lhs.true6 ], [ %obj, %if.end ]
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj.addr.0, metadata !3924, metadata !DIExpression()), !dbg !3925
  %8 = load %struct.list*, %struct.list** %reply, align 8, !dbg !3950, !tbaa !1357
  %call13 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %obj.addr.0) #22, !dbg !3951
  %9 = bitcast %struct.redisObject* %call13 to i8*, !dbg !3951
  %call14 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %8, i8* noundef %9) #23, !dbg !3952
  br label %return, !dbg !3953

return:                                           ; preds = %land.lhs.true4, %if.end11
  ret void, !dbg !3953
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @blockClientOnSwappedKeys(%struct.redisClient* noundef %c, %struct.redisCommand* noundef %cmd) #0 !dbg !3954 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3958, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !3959, metadata !DIExpression()), !dbg !3960
  %vm_preload_proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 4, !dbg !3961
  %0 = load void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)*, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)** %vm_preload_proc, align 8, !dbg !3961, !tbaa !3963
  %cmp.not = icmp eq void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* %0, null, !dbg !3964
  %argc2 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !3965
  %1 = load i32, i32* %argc2, align 8, !dbg !3965, !tbaa !1350
  %argv3 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !3965
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv3, align 8, !dbg !3965, !tbaa !1352
  br i1 %cmp.not, label %if.else, label %if.then, !dbg !3966

if.then:                                          ; preds = %entry
  tail call void %0(%struct.redisClient* noundef %c, %struct.redisCommand* noundef nonnull %cmd, i32 noundef %1, %struct.redisObject** noundef %2) #23, !dbg !3967
  br label %if.end, !dbg !3969

if.else:                                          ; preds = %entry
  tail call void @waitForMultipleSwappedKeys(%struct.redisClient* noundef %c, %struct.redisCommand* noundef nonnull %cmd, i32 noundef %1, %struct.redisObject** noundef %2) #22, !dbg !3970
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %io_keys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 24, !dbg !3972
  %3 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !3972, !tbaa !2671
  %len = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 5, !dbg !3972
  %4 = load i32, i32* %len, align 8, !dbg !3972, !tbaa !1358
  %tobool.not = icmp eq i32 %4, 0, !dbg !3972
  br i1 %tobool.not, label %return, label %if.then4, !dbg !3974

if.then4:                                         ; preds = %if.end
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !3975
  %5 = load i32, i32* %flags, align 8, !dbg !3977, !tbaa !1402
  %or = or i32 %5, 32, !dbg !3977
  store i32 %or, i32* %flags, align 8, !dbg !3977, !tbaa !1402
  %6 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !3978, !tbaa !941
  %fd = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 0, !dbg !3979
  %7 = load i32, i32* %fd, align 8, !dbg !3979, !tbaa !943
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %6, i32 noundef %7, i32 noundef 1) #23, !dbg !3980
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !3981, !tbaa !2545
  %inc = add i32 %8, 1, !dbg !3981
  store i32 %inc, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !3981, !tbaa !2545
  br label %return, !dbg !3982

return:                                           ; preds = %if.end, %if.then4
  %retval.0 = phi i32 [ 1, %if.then4 ], [ 0, %if.end ], !dbg !3983
  ret i32 %retval.0, !dbg !3984
}

; Function Attrs: noinline nounwind uwtable
define internal void @call(%struct.redisClient* noundef %c, %struct.redisCommand* nocapture noundef readonly %cmd) #0 !dbg !3985 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !3987, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !3988, metadata !DIExpression()), !dbg !3990
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3991, !tbaa !708
  call void @llvm.dbg.value(metadata i64 %0, metadata !3989, metadata !DIExpression()), !dbg !3990
  %proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 1, !dbg !3992
  %1 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc, align 8, !dbg !3992, !tbaa !1354
  tail call void %1(%struct.redisClient* noundef %c) #23, !dbg !3993
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3994, !tbaa !708
  call void @llvm.dbg.value(metadata !DIArgList(i64 %2, i64 %0), metadata !3989, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3990
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !3995, !tbaa !1260
  %tobool = icmp ne i32 %3, 0, !dbg !3997
  %tobool1 = icmp ne i64 %2, %0
  %or.cond = select i1 %tobool, i1 %tobool1, i1 false, !dbg !3998
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3998

if.then:                                          ; preds = %entry
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !3999
  %4 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !3999, !tbaa !2890
  %id = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 0, i32 4, !dbg !4000
  %5 = load i32, i32* %id, align 8, !dbg !4000, !tbaa !4001
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !4002
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !4002, !tbaa !1352
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !4003
  %7 = load i32, i32* %argc, align 8, !dbg !4003, !tbaa !1350
  tail call void @feedAppendOnlyFile(%struct.redisCommand* noundef nonnull %cmd, i32 noundef %5, %struct.redisObject** noundef %6, i32 noundef %7) #22, !dbg !4004
  br label %if.end, !dbg !4004

if.end:                                           ; preds = %if.then, %entry
  br i1 %tobool1, label %land.lhs.true4, label %lor.lhs.false, !dbg !4005

lor.lhs.false:                                    ; preds = %if.end
  %flags = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 3, !dbg !4007
  %8 = load i32, i32* %flags, align 4, !dbg !4007, !tbaa !1340
  %and = and i32 %8, 8, !dbg !4008
  %tobool3.not = icmp eq i32 %and, 0, !dbg !4008
  br i1 %tobool3.not, label %if.end11, label %land.lhs.true4, !dbg !4009

land.lhs.true4:                                   ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4010, !tbaa !886
  %len = getelementptr inbounds %struct.list, %struct.list* %9, i64 0, i32 5, !dbg !4010
  %10 = load i32, i32* %len, align 8, !dbg !4010, !tbaa !1358
  %tobool5.not = icmp eq i32 %10, 0, !dbg !4010
  br i1 %tobool5.not, label %if.end11, label %if.then6, !dbg !4011

if.then6:                                         ; preds = %land.lhs.true4
  %db7 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !4012
  %11 = load %struct.redisDb*, %struct.redisDb** %db7, align 8, !dbg !4012, !tbaa !2890
  %id8 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %11, i64 0, i32 4, !dbg !4013
  %12 = load i32, i32* %id8, align 8, !dbg !4013, !tbaa !4001
  %argv9 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !4014
  %13 = load %struct.redisObject**, %struct.redisObject*** %argv9, align 8, !dbg !4014, !tbaa !1352
  %argc10 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !4015
  %14 = load i32, i32* %argc10, align 8, !dbg !4015, !tbaa !1350
  tail call void @replicationFeedSlaves(%struct.list* noundef nonnull %9, i32 noundef %12, %struct.redisObject** noundef %13, i32 noundef %14) #22, !dbg !4016
  br label %if.end11, !dbg !4016

if.end11:                                         ; preds = %if.then6, %land.lhs.true4, %lor.lhs.false
  %15 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4017, !tbaa !4019
  %len12 = getelementptr inbounds %struct.list, %struct.list* %15, i64 0, i32 5, !dbg !4017
  %16 = load i32, i32* %len12, align 8, !dbg !4017, !tbaa !1358
  %tobool13.not = icmp eq i32 %16, 0, !dbg !4017
  br i1 %tobool13.not, label %if.end19, label %if.then14, !dbg !4020

if.then14:                                        ; preds = %if.end11
  %db15 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !4021
  %17 = load %struct.redisDb*, %struct.redisDb** %db15, align 8, !dbg !4021, !tbaa !2890
  %id16 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %17, i64 0, i32 4, !dbg !4022
  %18 = load i32, i32* %id16, align 8, !dbg !4022, !tbaa !4001
  %argv17 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !4023
  %19 = load %struct.redisObject**, %struct.redisObject*** %argv17, align 8, !dbg !4023, !tbaa !1352
  %argc18 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !4024
  %20 = load i32, i32* %argc18, align 8, !dbg !4024, !tbaa !1350
  tail call void @replicationFeedMonitors(%struct.list* noundef nonnull %15, i32 noundef %18, %struct.redisObject** noundef %19, i32 noundef %20) #22, !dbg !4025
  br label %if.end19, !dbg !4025

if.end19:                                         ; preds = %if.then14, %if.end11
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !4026, !tbaa !4027
  %inc = add nsw i64 %21, 1, !dbg !4026
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !4026, !tbaa !4027
  ret void, !dbg !4028
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @tryFreeOneObjectFromFreelist() #0 !dbg !4029 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !4035, !tbaa !1384
  %tobool.not = icmp eq i32 %0, 0, !dbg !4037
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4038

if.then:                                          ; preds = %entry
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !4039
  br label %if.end, !dbg !4039

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 8, !dbg !4040, !tbaa !1501
  %len = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 5, !dbg !4040
  %2 = load i32, i32* %len, align 8, !dbg !4040, !tbaa !1358
  %tobool1.not = icmp eq i32 %2, 0, !dbg !4040
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !4041

if.then2:                                         ; preds = %if.end
  %head3 = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 0, !dbg !4042
  %3 = load %struct.listNode*, %struct.listNode** %head3, align 8, !dbg !4042, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %3, metadata !4032, metadata !DIExpression()), !dbg !4043
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %3, i64 0, i32 2, !dbg !4044
  %4 = load i8*, i8** %value, align 8, !dbg !4044, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %4, metadata !4031, metadata !DIExpression()), !dbg !4045
  tail call void @listDelNode(%struct.list* noundef nonnull %1, %struct.listNode* noundef %3) #23, !dbg !4046
  %5 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !4047, !tbaa !1384
  %tobool4.not = icmp eq i32 %5, 0, !dbg !4049
  br i1 %tobool4.not, label %if.end7, label %if.then5, !dbg !4050

if.then5:                                         ; preds = %if.then2
  %call6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !4051
  br label %if.end7, !dbg !4051

if.end7:                                          ; preds = %if.then5, %if.then2
  tail call void @zfree(i8* noundef %4) #23, !dbg !4052
  br label %cleanup

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !4053, !tbaa !1384
  %tobool8.not = icmp eq i32 %6, 0, !dbg !4056
  br i1 %tobool8.not, label %cleanup, label %if.then9, !dbg !4057

if.then9:                                         ; preds = %if.else
  %call10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74)) #23, !dbg !4058
  br label %cleanup, !dbg !4058

cleanup:                                          ; preds = %if.else, %if.then9, %if.end7
  %retval.0 = phi i32 [ 0, %if.end7 ], [ -1, %if.then9 ], [ -1, %if.else ], !dbg !4059
  ret i32 %retval.0, !dbg !4060
}

declare !dbg !4061 dso_local %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @deleteKey(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !4064 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !4068, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !4069, metadata !DIExpression()), !dbg !4071
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !4072
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !4073
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !4073, !tbaa !3635
  %used = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !4073
  %1 = load i64, i64* %used, align 8, !dbg !4073, !tbaa !3545
  %used5 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !4073
  %2 = load i64, i64* %used5, align 8, !dbg !4073, !tbaa !3545
  %add = sub i64 0, %2, !dbg !4073
  %tobool.not = icmp eq i64 %1, %add, !dbg !4073
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4075

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !4076
  %call = tail call i32 @dictDelete(%struct.dict* noundef nonnull %0, i8* noundef %3) #23, !dbg !4077
  br label %if.end, !dbg !4077

if.end:                                           ; preds = %entry, %if.then
  %.pre-phi = bitcast %struct.redisObject* %key to i8*, !dbg !4078
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 0, !dbg !4079
  %4 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !4079, !tbaa !2353
  %call7 = tail call i32 @dictDelete(%struct.dict* noundef %4, i8* noundef %.pre-phi) #23, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %call7, metadata !4070, metadata !DIExpression()), !dbg !4071
  tail call void @decrRefCount(i8* noundef %.pre-phi) #22, !dbg !4081
  %cmp = icmp eq i32 %call7, 0, !dbg !4082
  %conv = zext i1 %cmp to i32, !dbg !4082
  ret i32 %conv, !dbg !4083
}

; Function Attrs: nounwind
declare !dbg !4084 dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !4089 dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal void @incrRefCount(%struct.redisObject* nocapture noundef %o) #14 !dbg !4090 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !4094, metadata !DIExpression()), !dbg !4095
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 5, !dbg !4096
  %0 = load i32, i32* %refcount, align 4, !dbg !4097, !tbaa !1534
  %inc = add nsw i32 %0, 1, !dbg !4097
  store i32 %inc, i32* %refcount, align 4, !dbg !4097, !tbaa !1534
  ret void, !dbg !4098
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubSubscribeChannel(%struct.redisClient* noundef %c, %struct.redisObject* noundef %channel) #0 !dbg !4099 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4101, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata %struct.redisObject* %channel, metadata !4102, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata %struct.list* null, metadata !4104, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata i32 0, metadata !4105, metadata !DIExpression()), !dbg !4106
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !4107
  %0 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4107, !tbaa !2640
  %1 = bitcast %struct.redisObject* %channel to i8*, !dbg !4109
  %call = tail call i32 @dictAdd(%struct.dict* noundef %0, i8* noundef %1, i8* noundef null) #23, !dbg !4110
  %cmp = icmp eq i32 %call, 0, !dbg !4111
  br i1 %cmp, label %if.then, label %if.end8, !dbg !4112

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !4105, metadata !DIExpression()), !dbg !4106
  tail call void @incrRefCount(%struct.redisObject* noundef %channel) #22, !dbg !4113
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4115, !tbaa !4116
  %call2 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %2, i8* noundef %1) #23, !dbg !4117
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call2, metadata !4103, metadata !DIExpression()), !dbg !4106
  %cmp3 = icmp eq %struct.dictEntry* %call2, null, !dbg !4118
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4120

if.then4:                                         ; preds = %if.then
  %call5 = tail call %struct.list* @listCreate() #23, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.list* %call5, metadata !4104, metadata !DIExpression()), !dbg !4106
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4123, !tbaa !4116
  %4 = bitcast %struct.list* %call5 to i8*, !dbg !4124
  %call6 = tail call i32 @dictAdd(%struct.dict* noundef %3, i8* noundef %1, i8* noundef %4) #23, !dbg !4125
  tail call void @incrRefCount(%struct.redisObject* noundef %channel) #22, !dbg !4126
  br label %if.end, !dbg !4127

if.else:                                          ; preds = %if.then
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call2, i64 0, i32 1, !dbg !4128
  %5 = bitcast i8** %val to %struct.list**, !dbg !4128
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !4128, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %6, metadata !4104, metadata !DIExpression()), !dbg !4106
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %clients.0 = phi %struct.list* [ %call5, %if.then4 ], [ %6, %if.else ], !dbg !4130
  call void @llvm.dbg.value(metadata %struct.list* %clients.0, metadata !4104, metadata !DIExpression()), !dbg !4106
  %7 = bitcast %struct.redisClient* %c to i8*, !dbg !4131
  %call7 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %clients.0, i8* noundef %7) #23, !dbg !4132
  br label %if.end8, !dbg !4133

if.end8:                                          ; preds = %if.end, %entry
  %retval1.0 = phi i32 [ 1, %if.end ], [ 0, %entry ], !dbg !4106
  call void @llvm.dbg.value(metadata i32 %retval1.0, metadata !4105, metadata !DIExpression()), !dbg !4106
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !4134, !tbaa !4135
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !4136
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 31), align 8, !dbg !4137, !tbaa !4138
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %9) #22, !dbg !4139
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %channel) #22, !dbg !4140
  %10 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4141, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 0, i32 3, !dbg !4141
  %11 = load i64, i64* %used, align 8, !dbg !4141, !tbaa !3545
  %used13 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 1, i32 3, !dbg !4141
  %12 = load i64, i64* %used13, align 8, !dbg !4141, !tbaa !3545
  %add = add i64 %12, %11, !dbg !4141
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !4142
  %13 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4142, !tbaa !2643
  %len = getelementptr inbounds %struct.list, %struct.list* %13, i64 0, i32 5, !dbg !4142
  %14 = load i32, i32* %len, align 8, !dbg !4142, !tbaa !1358
  %conv = zext i32 %14 to i64, !dbg !4142
  %add14 = add i64 %add, %conv, !dbg !4143
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add14) #22, !dbg !4144
  ret i32 %retval1.0, !dbg !4145
}

declare !dbg !4146 dso_local i32 @dictAdd(%struct.dict* noundef, i8* noundef, i8* noundef) local_unnamed_addr #4

declare !dbg !4149 dso_local %struct.list* @listCreate() local_unnamed_addr #4

declare !dbg !4152 dso_local %struct.list* @listAddNodeTail(%struct.list* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %obj) #0 !dbg !4155 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4157, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !4158, metadata !DIExpression()), !dbg !4159
  tail call void @addReplyBulkLen(%struct.redisClient* noundef %c, %struct.redisObject* noundef %obj) #22, !dbg !4160
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %obj) #22, !dbg !4161
  %0 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !4162, !tbaa !4163
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %0) #22, !dbg !4164
  ret void, !dbg !4165
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyLongLong(%struct.redisClient* noundef %c, i64 noundef %ll) #0 !dbg !4166 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4170, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.value(metadata i64 %ll, metadata !4171, metadata !DIExpression()), !dbg !4174
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !4175
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !4175
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !4172, metadata !DIExpression()), !dbg !4176
  switch i64 %ll, label %if.end3 [
    i64 0, label %if.then
    i64 1, label %if.then2
  ], !dbg !4177

if.then:                                          ; preds = %entry
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !4178, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !4182
  br label %cleanup, !dbg !4183

if.then2:                                         ; preds = %entry
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !4184, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2) #22, !dbg !4188
  br label %cleanup, !dbg !4189

if.end3:                                          ; preds = %entry
  store i8 58, i8* %0, align 16, !dbg !4190, !tbaa !795
  %add.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1, !dbg !4191
  %call = call i32 @ll2string(i8* noundef nonnull %add.ptr, i64 noundef 127, i64 noundef %ll) #22, !dbg !4192
  %conv = sext i32 %call to i64, !dbg !4192
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4173, metadata !DIExpression()), !dbg !4174
  %add = add nsw i64 %conv, 1, !dbg !4193
  %arrayidx4 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %add, !dbg !4194
  store i8 13, i8* %arrayidx4, align 1, !dbg !4195, !tbaa !795
  %add5 = add nsw i64 %conv, 2, !dbg !4196
  %arrayidx6 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %add5, !dbg !4197
  store i8 10, i8* %arrayidx6, align 1, !dbg !4198, !tbaa !795
  %add8 = add nsw i64 %conv, 3, !dbg !4199
  %call9 = call i8* @sdsnewlen(i8* noundef nonnull %0, i64 noundef %add8) #23, !dbg !4200
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call9) #22, !dbg !4201
  br label %cleanup, !dbg !4202

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !4202
  ret void, !dbg !4202
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyBulkLen(%struct.redisClient* noundef %c, %struct.redisObject* nocapture noundef readonly %obj) #0 !dbg !4203 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4205, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !4206, metadata !DIExpression()), !dbg !4213
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !4214
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !4214
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !4209, metadata !DIExpression()), !dbg !4215
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 2, !dbg !4216
  %1 = load i8, i8* %encoding, align 1, !dbg !4216, !tbaa !1529
  %cmp = icmp eq i8 %1, 0, !dbg !4217
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 0, !dbg !4218
  %2 = load i8*, i8** %ptr, align 8, !dbg !4218, !tbaa !1328
  br i1 %cmp, label %if.then, label %if.else, !dbg !4219

if.then:                                          ; preds = %entry
  %call = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !4220
  call void @llvm.dbg.value(metadata i64 %call, metadata !4207, metadata !DIExpression()), !dbg !4213
  br label %if.end9, !dbg !4222

if.else:                                          ; preds = %entry
  %3 = ptrtoint i8* %2 to i64, !dbg !4223
  call void @llvm.dbg.value(metadata i64 %3, metadata !4210, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i64 1, metadata !4207, metadata !DIExpression()), !dbg !4213
  %cmp3 = icmp slt i8* %2, null, !dbg !4225
  %sub = sub nsw i64 0, %3
  %spec.select = select i1 %cmp3, i64 2, i64 1, !dbg !4227
  %spec.select29 = select i1 %cmp3, i64 %sub, i64 %3, !dbg !4227
  call void @llvm.dbg.value(metadata i64 %spec.select29, metadata !4210, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !4207, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i64 %spec.select29, metadata !4210, metadata !DIExpression(DW_OP_constu, 10, DW_OP_div, DW_OP_stack_value)), !dbg !4224
  %n.1.off30 = add i64 %spec.select29, 9, !dbg !4228
  %4 = icmp ult i64 %n.1.off30, 19, !dbg !4228
  br i1 %4, label %if.end9, label %while.body, !dbg !4229

while.body:                                       ; preds = %if.else, %while.body
  %n.132 = phi i64 [ %div, %while.body ], [ %spec.select29, %if.else ]
  %len.131 = phi i64 [ %inc8, %while.body ], [ %spec.select, %if.else ]
  call void @llvm.dbg.value(metadata i64 %n.132, metadata !4210, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i64 %len.131, metadata !4207, metadata !DIExpression()), !dbg !4213
  %div = sdiv i64 %n.132, 10, !dbg !4230
  call void @llvm.dbg.value(metadata i64 %div, metadata !4210, metadata !DIExpression()), !dbg !4224
  %inc8 = add i64 %len.131, 1, !dbg !4231
  call void @llvm.dbg.value(metadata i64 %inc8, metadata !4207, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i64 %div, metadata !4210, metadata !DIExpression(DW_OP_constu, 10, DW_OP_div, DW_OP_stack_value)), !dbg !4224
  %n.1.off = add nsw i64 %div, 9, !dbg !4228
  %5 = icmp ult i64 %n.1.off, 19, !dbg !4228
  br i1 %5, label %if.end9, label %while.body, !dbg !4229, !llvm.loop !4233

if.end9:                                          ; preds = %while.body, %if.else, %if.then
  %len.2 = phi i64 [ %call, %if.then ], [ %spec.select, %if.else ], [ %inc8, %while.body ], !dbg !4218
  call void @llvm.dbg.value(metadata i64 %len.2, metadata !4207, metadata !DIExpression()), !dbg !4213
  store i8 36, i8* %0, align 16, !dbg !4235, !tbaa !795
  %add.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1, !dbg !4236
  %call10 = call i32 @ll2string(i8* noundef nonnull %add.ptr, i64 noundef 127, i64 noundef %len.2) #22, !dbg !4237
  %conv11 = sext i32 %call10 to i64, !dbg !4237
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !4208, metadata !DIExpression()), !dbg !4213
  %add = add nsw i64 %conv11, 1, !dbg !4238
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %add, !dbg !4239
  store i8 13, i8* %arrayidx12, align 1, !dbg !4240, !tbaa !795
  %add13 = add nsw i64 %conv11, 2, !dbg !4241
  %arrayidx14 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %add13, !dbg !4242
  store i8 10, i8* %arrayidx14, align 1, !dbg !4243, !tbaa !795
  %add16 = add nsw i64 %conv11, 3, !dbg !4244
  %call17 = call i8* @sdsnewlen(i8* noundef nonnull %0, i64 noundef %add16) #23, !dbg !4245
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call17) #22, !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !4247
  ret void, !dbg !4247
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ll2string(i8* noundef %s, i64 noundef %len, i64 noundef %value) #0 !dbg !4248 {
entry:
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %s, metadata !4252, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i64 %len, metadata !4253, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i64 %value, metadata !4254, metadata !DIExpression()), !dbg !4262
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !4263
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #24, !dbg !4263
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !4255, metadata !DIExpression()), !dbg !4264
  %cmp = icmp eq i64 %len, 0, !dbg !4265
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4267

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %value, 0, !dbg !4268
  %sub = sub nsw i64 0, %value, !dbg !4269
  %cond = select i1 %cmp1, i64 %sub, i64 %value, !dbg !4269
  call void @llvm.dbg.value(metadata i64 %cond, metadata !4260, metadata !DIExpression()), !dbg !4262
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 31, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4259, metadata !DIExpression()), !dbg !4262
  br label %do.body, !dbg !4271

do.body:                                          ; preds = %do.body, %if.end
  %p.0 = phi i8* [ %add.ptr, %if.end ], [ %incdec.ptr, %do.body ], !dbg !4262
  %v.0 = phi i64 [ %cond, %if.end ], [ %div, %do.body ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %v.0, metadata !4260, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !4259, metadata !DIExpression()), !dbg !4262
  %rem = urem i64 %v.0, 10, !dbg !4272
  %1 = trunc i64 %rem to i8, !dbg !4274
  %conv = or i8 %1, 48, !dbg !4274
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 -1, !dbg !4275
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4259, metadata !DIExpression()), !dbg !4262
  store i8 %conv, i8* %p.0, align 1, !dbg !4276, !tbaa !795
  %div = udiv i64 %v.0, 10, !dbg !4277
  call void @llvm.dbg.value(metadata i64 %div, metadata !4260, metadata !DIExpression()), !dbg !4262
  %2 = icmp ult i64 %v.0, 10, !dbg !4278
  br i1 %2, label %do.end, label %do.body, !dbg !4278, !llvm.loop !4279

do.end:                                           ; preds = %do.body
  br i1 %cmp1, label %if.then4, label %if.end6, !dbg !4281

if.then4:                                         ; preds = %do.end
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !4259, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !4262
  store i8 45, i8* %incdec.ptr, align 1, !dbg !4282, !tbaa !795
  br label %if.end6, !dbg !4284

if.end6:                                          ; preds = %if.then4, %do.end
  %3 = phi i64 [ -2, %if.then4 ], [ -1, %do.end ], !dbg !4262
  %4 = getelementptr inbounds i8, i8* %p.0, i64 %3, !dbg !4285
  call void @llvm.dbg.value(metadata i8* undef, metadata !4259, metadata !DIExpression()), !dbg !4262
  %incdec.ptr7 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !4286
  call void @llvm.dbg.value(metadata i8* %incdec.ptr7, metadata !4259, metadata !DIExpression()), !dbg !4262
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr7 to i64, !dbg !4287
  %sub.ptr.rhs.cast = ptrtoint [32 x i8]* %buf to i64, !dbg !4287
  %sub.ptr.sub.neg = sub i64 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast, !dbg !4287
  %sub9 = add i64 %sub.ptr.sub.neg, 32, !dbg !4288
  call void @llvm.dbg.value(metadata i64 %sub9, metadata !4261, metadata !DIExpression()), !dbg !4262
  %add10 = add i64 %sub.ptr.sub.neg, 33, !dbg !4289
  %cmp11 = icmp ugt i64 %add10, %len, !dbg !4291
  %sub14 = add i64 %len, -1
  %spec.select = select i1 %cmp11, i64 %sub14, i64 %sub9, !dbg !4292
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !4261, metadata !DIExpression()), !dbg !4262
  %call = call i8* @memcpy(i8* noundef %s, i8* noundef nonnull %incdec.ptr7, i64 noundef %spec.select) #23, !dbg !4293
  %arrayidx = getelementptr inbounds i8, i8* %s, i64 %spec.select, !dbg !4294
  store i8 0, i8* %arrayidx, align 1, !dbg !4295, !tbaa !795
  %conv16 = trunc i64 %spec.select to i32, !dbg !4296
  br label %cleanup, !dbg !4297

cleanup:                                          ; preds = %entry, %if.end6
  %retval.0 = phi i32 [ %conv16, %if.end6 ], [ 0, %entry ], !dbg !4262
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #24, !dbg !4298
  ret i32 %retval.0, !dbg !4298
}

; Function Attrs: nounwind
declare !dbg !4299 dso_local i8* @memcpy(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubUnsubscribeChannel(%struct.redisClient* noundef %c, %struct.redisObject* noundef %channel, i32 noundef %notify) #0 !dbg !4303 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4307, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata %struct.redisObject* %channel, metadata !4308, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 %notify, metadata !4309, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 0, metadata !4313, metadata !DIExpression()), !dbg !4314
  tail call void @incrRefCount(%struct.redisObject* noundef %channel) #22, !dbg !4315
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !4316
  %0 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4316, !tbaa !2640
  %1 = bitcast %struct.redisObject* %channel to i8*, !dbg !4318
  %call = tail call i32 @dictDelete(%struct.dict* noundef %0, i8* noundef %1) #23, !dbg !4319
  %cmp = icmp eq i32 %call, 0, !dbg !4320
  br i1 %cmp, label %if.then, label %if.end12, !dbg !4321

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !4313, metadata !DIExpression()), !dbg !4314
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4322, !tbaa !4116
  %call2 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %2, i8* noundef %1) #23, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call2, metadata !4310, metadata !DIExpression()), !dbg !4314
  %cmp3.not = icmp eq %struct.dictEntry* %call2, null, !dbg !4325
  br i1 %cmp3.not, label %cond.false, label %cond.end, !dbg !4325

cond.false:                                       ; preds = %if.then
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 10241, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.pubsubUnsubscribeChannel, i64 0, i64 0)) #26, !dbg !4325
  unreachable, !dbg !4325

cond.end:                                         ; preds = %if.then
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call2, i64 0, i32 1, !dbg !4326
  %3 = bitcast i8** %val to %struct.list**, !dbg !4326
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !4326, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !4311, metadata !DIExpression()), !dbg !4314
  %5 = bitcast %struct.redisClient* %c to i8*, !dbg !4327
  %call4 = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %4, i8* noundef %5) #23, !dbg !4328
  call void @llvm.dbg.value(metadata %struct.listNode* %call4, metadata !4312, metadata !DIExpression()), !dbg !4314
  %cmp5.not = icmp eq %struct.listNode* %call4, null, !dbg !4329
  br i1 %cmp5.not, label %cond.false7, label %cond.end8, !dbg !4329

cond.false7:                                      ; preds = %cond.end
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 10244, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.pubsubUnsubscribeChannel, i64 0, i64 0)) #26, !dbg !4329
  unreachable, !dbg !4329

cond.end8:                                        ; preds = %cond.end
  tail call void @listDelNode(%struct.list* noundef %4, %struct.listNode* noundef nonnull %call4) #23, !dbg !4330
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !4331
  %6 = load i32, i32* %len, align 8, !dbg !4331, !tbaa !1358
  %cmp9 = icmp eq i32 %6, 0, !dbg !4333
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !4334

if.then10:                                        ; preds = %cond.end8
  %7 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4335, !tbaa !4116
  %call11 = tail call i32 @dictDelete(%struct.dict* noundef %7, i8* noundef %1) #23, !dbg !4337
  br label %if.end12, !dbg !4338

if.end12:                                         ; preds = %cond.end8, %if.then10, %entry
  %retval1.0 = phi i32 [ 1, %if.then10 ], [ 1, %cond.end8 ], [ 0, %entry ], !dbg !4314
  call void @llvm.dbg.value(metadata i32 %retval1.0, metadata !4313, metadata !DIExpression()), !dbg !4314
  %tobool.not = icmp eq i32 %notify, 0, !dbg !4339
  br i1 %tobool.not, label %if.end21, label %if.then13, !dbg !4341

if.then13:                                        ; preds = %if.end12
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !4342, !tbaa !4135
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !4344
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 32), align 8, !dbg !4345, !tbaa !4346
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %9) #22, !dbg !4347
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %channel) #22, !dbg !4348
  %10 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4349, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 0, i32 3, !dbg !4349
  %11 = load i64, i64* %used, align 8, !dbg !4349, !tbaa !3545
  %used18 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 1, i32 3, !dbg !4349
  %12 = load i64, i64* %used18, align 8, !dbg !4349, !tbaa !3545
  %add = add i64 %12, %11, !dbg !4349
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !4350
  %13 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4350, !tbaa !2643
  %len19 = getelementptr inbounds %struct.list, %struct.list* %13, i64 0, i32 5, !dbg !4350
  %14 = load i32, i32* %len19, align 8, !dbg !4350, !tbaa !1358
  %conv = zext i32 %14 to i64, !dbg !4350
  %add20 = add i64 %add, %conv, !dbg !4351
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add20) #22, !dbg !4352
  br label %if.end21, !dbg !4353

if.end21:                                         ; preds = %if.then13, %if.end12
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !4354
  ret i32 %retval1.0, !dbg !4355
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubSubscribePattern(%struct.redisClient* noundef %c, %struct.redisObject* noundef %pattern) #0 !dbg !4356 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4358, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata %struct.redisObject* %pattern, metadata !4359, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 0, metadata !4360, metadata !DIExpression()), !dbg !4370
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !4371
  %0 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4371, !tbaa !2643
  %1 = bitcast %struct.redisObject* %pattern to i8*, !dbg !4372
  %call = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %0, i8* noundef %1) #23, !dbg !4373
  %cmp = icmp eq %struct.listNode* %call, null, !dbg !4374
  br i1 %cmp, label %if.then, label %if.end, !dbg !4375

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !4360, metadata !DIExpression()), !dbg !4370
  %2 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4376, !tbaa !2643
  %call3 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %2, i8* noundef %1) #23, !dbg !4377
  tail call void @incrRefCount(%struct.redisObject* noundef %pattern) #22, !dbg !4378
  %call4 = tail call i8* @zmalloc(i64 noundef 16) #23, !dbg !4379
  call void @llvm.dbg.value(metadata i8* %call4, metadata !4361, metadata !DIExpression()), !dbg !4380
  %call5 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %pattern) #22, !dbg !4381
  %pattern6 = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !4382
  %3 = bitcast i8* %pattern6 to %struct.redisObject**, !dbg !4382
  store %struct.redisObject* %call5, %struct.redisObject** %3, align 8, !dbg !4383, !tbaa !4384
  %client = bitcast i8* %call4 to %struct.redisClient**, !dbg !4386
  store %struct.redisClient* %c, %struct.redisClient** %client, align 8, !dbg !4387, !tbaa !4388
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !4389, !tbaa !4390
  %call7 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %4, i8* noundef %call4) #23, !dbg !4391
  br label %if.end, !dbg !4392

if.end:                                           ; preds = %if.then, %entry
  %retval1.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !4370
  call void @llvm.dbg.value(metadata i32 %retval1.0, metadata !4360, metadata !DIExpression()), !dbg !4370
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !4393, !tbaa !4135
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !4394
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 35), align 8, !dbg !4395, !tbaa !4396
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !4397
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %pattern) #22, !dbg !4398
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !4399
  %7 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4399, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %7, i64 0, i32 2, i64 0, i32 3, !dbg !4399
  %8 = load i64, i64* %used, align 8, !dbg !4399, !tbaa !3545
  %used11 = getelementptr inbounds %struct.dict, %struct.dict* %7, i64 0, i32 2, i64 1, i32 3, !dbg !4399
  %9 = load i64, i64* %used11, align 8, !dbg !4399, !tbaa !3545
  %add = add i64 %9, %8, !dbg !4399
  %10 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4400, !tbaa !2643
  %len = getelementptr inbounds %struct.list, %struct.list* %10, i64 0, i32 5, !dbg !4400
  %11 = load i32, i32* %len, align 8, !dbg !4400, !tbaa !1358
  %conv = zext i32 %11 to i64, !dbg !4400
  %add13 = add i64 %add, %conv, !dbg !4401
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add13) #22, !dbg !4402
  ret i32 %retval1.0, !dbg !4403
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %o) #0 !dbg !4404 {
entry:
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !4406, metadata !DIExpression()), !dbg !4411
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !4412
  %0 = load i8, i8* %encoding, align 1, !dbg !4412, !tbaa !1529
  %cmp = icmp eq i8 %0, 0, !dbg !4414
  br i1 %cmp, label %if.then, label %if.end, !dbg !4415

if.then:                                          ; preds = %entry
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %o) #22, !dbg !4416
  br label %cleanup, !dbg !4418

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !4419
  %1 = load i8, i8* %type, align 8, !dbg !4419, !tbaa !1526
  %cmp3 = icmp eq i8 %1, 0, !dbg !4420
  %cmp7 = icmp eq i8 %0, 1
  %or.cond = select i1 %cmp3, i1 %cmp7, i1 false, !dbg !4421
  br i1 %or.cond, label %if.then9, label %if.else, !dbg !4421

if.then9:                                         ; preds = %if.end
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #24, !dbg !4422
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !4408, metadata !DIExpression()), !dbg !4423
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !4424
  %3 = load i8*, i8** %ptr, align 8, !dbg !4424, !tbaa !1328
  %4 = ptrtoint i8* %3 to i64, !dbg !4425
  %call = call i32 @ll2string(i8* noundef nonnull %2, i64 noundef 32, i64 noundef %4) #22, !dbg !4426
  %call12 = call i64 @strlen(i8* noundef nonnull %2) #27, !dbg !4427
  %call13 = call %struct.redisObject* @createStringObject(i8* noundef nonnull %2, i64 noundef %call12) #22, !dbg !4428
  call void @llvm.dbg.value(metadata %struct.redisObject* %call13, metadata !4407, metadata !DIExpression()), !dbg !4411
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #24, !dbg !4429
  br label %cleanup

if.else:                                          ; preds = %if.end
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3224) #22, !dbg !4430
  tail call void @_exit(i32 noundef 1) #26, !dbg !4430
  unreachable, !dbg !4430

cleanup:                                          ; preds = %if.then9, %if.then
  %retval.0 = phi %struct.redisObject* [ %o, %if.then ], [ %call13, %if.then9 ], !dbg !4411
  ret %struct.redisObject* %retval.0, !dbg !4432
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !4433 dso_local i64 @strlen(i8* noundef) local_unnamed_addr #11

; Function Attrs: noinline nounwind uwtable
define internal void @_redisPanic(i8* noundef %msg, i8* noundef %file, i32 noundef %line) #0 !dbg !4436 {
entry:
  call void @llvm.dbg.value(metadata i8* %msg, metadata !4438, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8* %file, metadata !4439, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %line, metadata !4440, metadata !DIExpression()), !dbg !4441
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.55, i64 0, i64 0)) #22, !dbg !4442
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* noundef %msg, i8* noundef %file, i32 noundef %line) #22, !dbg !4443
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.57, i64 0, i64 0)) #22, !dbg !4444
  store i8 120, i8* inttoptr (i64 -1 to i8*), align 1, !dbg !4445, !tbaa !795
  ret void, !dbg !4446
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubUnsubscribePattern(%struct.redisClient* noundef %c, %struct.redisObject* noundef %pattern, i32 noundef %notify) #0 !dbg !4447 {
entry:
  %pat = alloca %struct.pubsubPattern, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4449, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata %struct.redisObject* %pattern, metadata !4450, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i32 %notify, metadata !4451, metadata !DIExpression()), !dbg !4455
  %0 = bitcast %struct.pubsubPattern* %pat to i8*, !dbg !4456
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !4456
  call void @llvm.dbg.declare(metadata %struct.pubsubPattern* %pat, metadata !4453, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 0, metadata !4454, metadata !DIExpression()), !dbg !4455
  tail call void @incrRefCount(%struct.redisObject* noundef %pattern) #22, !dbg !4458
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 26, !dbg !4459
  %1 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4459, !tbaa !2643
  %2 = bitcast %struct.redisObject* %pattern to i8*, !dbg !4461
  %call = tail call %struct.listNode* @listSearchKey(%struct.list* noundef %1, i8* noundef %2) #23, !dbg !4462
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !4452, metadata !DIExpression()), !dbg !4455
  %cmp.not = icmp eq %struct.listNode* %call, null, !dbg !4463
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !4464

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !4454, metadata !DIExpression()), !dbg !4455
  %3 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4465, !tbaa !2643
  tail call void @listDelNode(%struct.list* noundef %3, %struct.listNode* noundef nonnull %call) #23, !dbg !4467
  %client = getelementptr inbounds %struct.pubsubPattern, %struct.pubsubPattern* %pat, i64 0, i32 0, !dbg !4468
  store %struct.redisClient* %c, %struct.redisClient** %client, align 8, !dbg !4469, !tbaa !4388
  %pattern3 = getelementptr inbounds %struct.pubsubPattern, %struct.pubsubPattern* %pat, i64 0, i32 1, !dbg !4470
  store %struct.redisObject* %pattern, %struct.redisObject** %pattern3, align 8, !dbg !4471, !tbaa !4384
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !4472, !tbaa !4390
  %call4 = call %struct.listNode* @listSearchKey(%struct.list* noundef %4, i8* noundef nonnull %0) #23, !dbg !4473
  call void @llvm.dbg.value(metadata %struct.listNode* %call4, metadata !4452, metadata !DIExpression()), !dbg !4455
  %5 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !4474, !tbaa !4390
  call void @listDelNode(%struct.list* noundef %5, %struct.listNode* noundef %call4) #23, !dbg !4475
  br label %if.end, !dbg !4476

if.end:                                           ; preds = %if.then, %entry
  %retval1.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !4455
  call void @llvm.dbg.value(metadata i32 %retval1.0, metadata !4454, metadata !DIExpression()), !dbg !4455
  %tobool.not = icmp eq i32 %notify, 0, !dbg !4477
  br i1 %tobool.not, label %if.end12, label %if.then5, !dbg !4479

if.then5:                                         ; preds = %if.end
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !4480, !tbaa !4135
  call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !4482
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 36), align 8, !dbg !4483, !tbaa !4484
  call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !4485
  call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %pattern) #22, !dbg !4486
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 25, !dbg !4487
  %8 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !4487, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 0, i32 3, !dbg !4487
  %9 = load i64, i64* %used, align 8, !dbg !4487, !tbaa !3545
  %used9 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 1, i32 3, !dbg !4487
  %10 = load i64, i64* %used9, align 8, !dbg !4487, !tbaa !3545
  %add = add i64 %10, %9, !dbg !4487
  %11 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !4488, !tbaa !2643
  %len = getelementptr inbounds %struct.list, %struct.list* %11, i64 0, i32 5, !dbg !4488
  %12 = load i32, i32* %len, align 8, !dbg !4488, !tbaa !1358
  %conv = zext i32 %12 to i64, !dbg !4488
  %add11 = add i64 %add, %conv, !dbg !4489
  call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add11) #22, !dbg !4490
  br label %if.end12, !dbg !4491

if.end12:                                         ; preds = %if.then5, %if.end
  call void @decrRefCount(i8* noundef %2) #22, !dbg !4492
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !4493
  ret i32 %retval1.0, !dbg !4494
}

; Function Attrs: noinline nounwind uwtable
define internal void @execCommandReplicateMulti(%struct.redisClient* nocapture noundef readonly %c) #0 !dbg !4495 {
entry:
  %multistring = alloca %struct.redisObject*, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4497, metadata !DIExpression()), !dbg !4500
  %0 = bitcast %struct.redisObject** %multistring to i8*, !dbg !4501
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4501
  %call = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 noundef 5) #22, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !4499, metadata !DIExpression()), !dbg !4500
  store %struct.redisObject* %call, %struct.redisObject** %multistring, align 8, !dbg !4503, !tbaa !782
  %call1 = tail call fastcc %struct.redisCommand* @lookupCommand(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #22, !dbg !4504
  call void @llvm.dbg.value(metadata %struct.redisCommand* %call1, metadata !4498, metadata !DIExpression()), !dbg !4500
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !4505, !tbaa !1260
  %tobool.not = icmp eq i32 %1, 0, !dbg !4507
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4508

if.then:                                          ; preds = %entry
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !4509
  %2 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !4509, !tbaa !2890
  %id = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 0, i32 4, !dbg !4510
  %3 = load i32, i32* %id, align 8, !dbg !4510, !tbaa !4001
  call void @llvm.dbg.value(metadata %struct.redisObject** %multistring, metadata !4499, metadata !DIExpression(DW_OP_deref)), !dbg !4500
  call void @feedAppendOnlyFile(%struct.redisCommand* noundef %call1, i32 noundef %3, %struct.redisObject** noundef nonnull %multistring, i32 noundef 1) #22, !dbg !4511
  br label %if.end, !dbg !4511

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4512, !tbaa !886
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !4512
  %5 = load i32, i32* %len, align 8, !dbg !4512, !tbaa !1358
  %tobool2.not = icmp eq i32 %5, 0, !dbg !4512
  br i1 %tobool2.not, label %if.end6, label %if.then3, !dbg !4514

if.then3:                                         ; preds = %if.end
  %db4 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !4515
  %6 = load %struct.redisDb*, %struct.redisDb** %db4, align 8, !dbg !4515, !tbaa !2890
  %id5 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %6, i64 0, i32 4, !dbg !4516
  %7 = load i32, i32* %id5, align 8, !dbg !4516, !tbaa !4001
  call void @llvm.dbg.value(metadata %struct.redisObject** %multistring, metadata !4499, metadata !DIExpression(DW_OP_deref)), !dbg !4500
  call void @replicationFeedSlaves(%struct.list* noundef nonnull %4, i32 noundef %7, %struct.redisObject** noundef nonnull %multistring, i32 noundef 1) #22, !dbg !4517
  br label %if.end6, !dbg !4517

if.end6:                                          ; preds = %if.then3, %if.end
  %8 = bitcast %struct.redisObject* %call to i8*, !dbg !4508
  call void @llvm.dbg.value(metadata %struct.redisObject* undef, metadata !4499, metadata !DIExpression()), !dbg !4500
  tail call void @decrRefCount(i8* noundef %8) #22, !dbg !4518
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4519
  ret void, !dbg !4519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal void @initClientMultiState(%struct.redisClient* nocapture noundef writeonly %c) #15 !dbg !4520 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4522, metadata !DIExpression()), !dbg !4523
  %commands = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 0, !dbg !4524
  store %struct.multiCmd* null, %struct.multiCmd** %commands, align 8, !dbg !4525, !tbaa !3111
  %count = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 1, !dbg !4526
  store i32 0, i32* %count, align 8, !dbg !4527, !tbaa !3107
  ret void, !dbg !4528
}

; Function Attrs: noinline nounwind uwtable
define internal void @feedAppendOnlyFile(%struct.redisCommand* nocapture noundef readonly %cmd, i32 noundef %dictid, %struct.redisObject** nocapture noundef readonly %argv, i32 noundef %argc) #0 !dbg !4529 {
entry:
  %tmpargv = alloca [3 x %struct.redisObject*], align 16
  %seldb = alloca [64 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !4533, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %dictid, metadata !4534, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !4535, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %argc, metadata !4536, metadata !DIExpression()), !dbg !4543
  %call = tail call i8* (...) @sdsempty() #23, !dbg !4544
  call void @llvm.dbg.value(metadata i8* %call, metadata !4537, metadata !DIExpression()), !dbg !4543
  %0 = bitcast [3 x %struct.redisObject*]* %tmpargv to i8*, !dbg !4545
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #24, !dbg !4545
  call void @llvm.dbg.declare(metadata [3 x %struct.redisObject*]* %tmpargv, metadata !4538, metadata !DIExpression()), !dbg !4546
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4547, !tbaa !1050
  %cmp.not = icmp eq i32 %1, %dictid, !dbg !4548
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !4549

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds [64 x i8], [64 x i8]* %seldb, i64 0, i64 0, !dbg !4550
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #24, !dbg !4550
  call void @llvm.dbg.declare(metadata [64 x i8]* %seldb, metadata !4540, metadata !DIExpression()), !dbg !4551
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %2, i64 noundef 64, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), i32 noundef %dictid) #23, !dbg !4552
  %call3 = call i64 @strlen(i8* noundef nonnull %2) #27, !dbg !4553
  %call5 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i64 noundef %call3, i8* noundef nonnull %2) #23, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %call5, metadata !4537, metadata !DIExpression()), !dbg !4543
  store i32 %dictid, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4555, !tbaa !1050
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #24, !dbg !4556
  br label %if.end, !dbg !4557

if.end:                                           ; preds = %if.then, %entry
  %buf.0 = phi i8* [ %call5, %if.then ], [ %call, %entry ], !dbg !4543
  call void @llvm.dbg.value(metadata i8* %buf.0, metadata !4537, metadata !DIExpression()), !dbg !4543
  %proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 1, !dbg !4558
  %3 = load void (%struct.redisClient*)*, void (%struct.redisClient*)** %proc, align 8, !dbg !4558, !tbaa !1354
  %cmp6 = icmp eq void (%struct.redisClient*)* %3, @expireCommand, !dbg !4560
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !4561

if.then7:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 1, !dbg !4562
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !4562, !tbaa !782
  %arrayidx8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 2, !dbg !4564
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx8, align 8, !dbg !4564, !tbaa !782
  %call9 = call i8* @catAppendOnlyExpireAtCommand(i8* noundef %buf.0, %struct.redisObject* noundef %4, %struct.redisObject* noundef %5) #22, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %call9, metadata !4537, metadata !DIExpression()), !dbg !4543
  br label %if.end28, !dbg !4566

if.else:                                          ; preds = %if.end
  %cmp11 = icmp eq void (%struct.redisClient*)* %3, @setexCommand, !dbg !4567
  br i1 %cmp11, label %if.then12, label %if.else25, !dbg !4569

if.then12:                                        ; preds = %if.else
  %call13 = call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i64 noundef 3) #22, !dbg !4570
  %arrayidx14 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %tmpargv, i64 0, i64 0, !dbg !4572
  store %struct.redisObject* %call13, %struct.redisObject** %arrayidx14, align 16, !dbg !4573, !tbaa !782
  %arrayidx15 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 1, !dbg !4574
  %6 = load %struct.redisObject*, %struct.redisObject** %arrayidx15, align 8, !dbg !4574, !tbaa !782
  %arrayidx16 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %tmpargv, i64 0, i64 1, !dbg !4575
  store %struct.redisObject* %6, %struct.redisObject** %arrayidx16, align 8, !dbg !4576, !tbaa !782
  %arrayidx17 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 3, !dbg !4577
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx17, align 8, !dbg !4577, !tbaa !782
  %arrayidx18 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %tmpargv, i64 0, i64 2, !dbg !4578
  store %struct.redisObject* %7, %struct.redisObject** %arrayidx18, align 16, !dbg !4579, !tbaa !782
  %call20 = call i8* @catAppendOnlyGenericCommand(i8* noundef %buf.0, i32 noundef 3, %struct.redisObject** noundef nonnull %arrayidx14) #22, !dbg !4580
  call void @llvm.dbg.value(metadata i8* %call20, metadata !4537, metadata !DIExpression()), !dbg !4543
  %8 = bitcast %struct.redisObject* %call13 to i8*, !dbg !4581
  call void @decrRefCount(i8* noundef %8) #22, !dbg !4582
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx15, align 8, !dbg !4583, !tbaa !782
  %arrayidx23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 2, !dbg !4584
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx23, align 8, !dbg !4584, !tbaa !782
  %call24 = call i8* @catAppendOnlyExpireAtCommand(i8* noundef %call20, %struct.redisObject* noundef %9, %struct.redisObject* noundef %10) #22, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %call24, metadata !4537, metadata !DIExpression()), !dbg !4543
  br label %if.end28, !dbg !4586

if.else25:                                        ; preds = %if.else
  %call26 = call i8* @catAppendOnlyGenericCommand(i8* noundef %buf.0, i32 noundef %argc, %struct.redisObject** noundef %argv) #22, !dbg !4587
  call void @llvm.dbg.value(metadata i8* %call26, metadata !4537, metadata !DIExpression()), !dbg !4543
  br label %if.end28

if.end28:                                         ; preds = %if.then12, %if.else25, %if.then7
  %buf.1 = phi i8* [ %call9, %if.then7 ], [ %call24, %if.then12 ], [ %call26, %if.else25 ], !dbg !4589
  call void @llvm.dbg.value(metadata i8* %buf.1, metadata !4537, metadata !DIExpression()), !dbg !4543
  %11 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !4590, !tbaa !4591
  %call29 = call i64 @sdslen(i8* noundef %buf.1) #23, !dbg !4592
  %call30 = call i8* @sdscatlen(i8* noundef %11, i8* noundef %buf.1, i64 noundef %call29) #23, !dbg !4593
  store i8* %call30, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !4594, !tbaa !4591
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !4595, !tbaa !996
  %cmp31.not = icmp eq i32 %12, -1, !dbg !4597
  br i1 %cmp31.not, label %if.end35, label %if.then32, !dbg !4598

if.then32:                                        ; preds = %if.end28
  %13 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !4599, !tbaa !1010
  %call33 = call i64 @sdslen(i8* noundef %buf.1) #23, !dbg !4600
  %call34 = call i8* @sdscatlen(i8* noundef %13, i8* noundef %buf.1, i64 noundef %call33) #23, !dbg !4601
  store i8* %call34, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !4602, !tbaa !1010
  br label %if.end35, !dbg !4603

if.end35:                                         ; preds = %if.then32, %if.end28
  call void @sdsfree(i8* noundef %buf.1) #23, !dbg !4604
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #24, !dbg !4605
  ret void, !dbg !4605
}

; Function Attrs: noinline nounwind uwtable
define internal void @replicationFeedSlaves(%struct.list* noundef %slaves, i32 noundef %dictid, %struct.redisObject** nocapture noundef readonly %argv, i32 noundef %argc) #0 !dbg !4606 {
entry:
  %li = alloca %struct.listIter, align 8
  %static_outv = alloca [25 x %struct.redisObject*], align 16
  call void @llvm.dbg.value(metadata %struct.list* %slaves, metadata !4610, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %dictid, metadata !4611, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !4612, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %argc, metadata !4613, metadata !DIExpression()), !dbg !4629
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !4630
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !4630
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !4615, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i32 0, metadata !4616, metadata !DIExpression()), !dbg !4629
  %1 = bitcast [25 x %struct.redisObject*]* %static_outv to i8*, !dbg !4632
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1) #24, !dbg !4632
  call void @llvm.dbg.declare(metadata [25 x %struct.redisObject*]* %static_outv, metadata !4619, metadata !DIExpression()), !dbg !4633
  %cmp = icmp slt i32 %argc, 9, !dbg !4634
  br i1 %cmp, label %if.then, label %if.else, !dbg !4636

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [25 x %struct.redisObject*], [25 x %struct.redisObject*]* %static_outv, i64 0, i64 0, !dbg !4637
  call void @llvm.dbg.value(metadata %struct.redisObject** %arraydecay, metadata !4618, metadata !DIExpression()), !dbg !4629
  br label %if.end, !dbg !4639

if.else:                                          ; preds = %entry
  %mul = mul nsw i32 %argc, 3, !dbg !4640
  %add = add nsw i32 %mul, 1, !dbg !4642
  %conv = sext i32 %add to i64, !dbg !4643
  %mul1 = shl nsw i64 %conv, 3, !dbg !4644
  %call = tail call i8* @zmalloc(i64 noundef %mul1) #23, !dbg !4645
  %2 = bitcast i8* %call to %struct.redisObject**, !dbg !4645
  call void @llvm.dbg.value(metadata %struct.redisObject** %2, metadata !4618, metadata !DIExpression()), !dbg !4629
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %outv.0 = phi %struct.redisObject** [ %arraydecay, %if.then ], [ %2, %if.else ], !dbg !4646
  call void @llvm.dbg.value(metadata %struct.redisObject** %outv.0, metadata !4618, metadata !DIExpression()), !dbg !4629
  %call2 = tail call i8* (...) @sdsempty() #23, !dbg !4647
  %call3 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call2, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %argc) #23, !dbg !4648
  %call4 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call3) #22, !dbg !4649
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !4623, metadata !DIExpression()), !dbg !4629
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call4, i64 0, i32 5, !dbg !4650
  store i32 0, i32* %refcount, align 4, !dbg !4651, !tbaa !1534
  call void @llvm.dbg.value(metadata i32 1, metadata !4616, metadata !DIExpression()), !dbg !4629
  store %struct.redisObject* %call4, %struct.redisObject** %outv.0, align 8, !dbg !4652, !tbaa !782
  call void @llvm.dbg.value(metadata i32 0, metadata !4617, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 1, metadata !4616, metadata !DIExpression()), !dbg !4629
  %cmp5129 = icmp sgt i32 %argc, 0, !dbg !4653
  br i1 %cmp5129, label %for.body.preheader, label %for.cond26.preheader, !dbg !4656

for.body.preheader:                               ; preds = %if.end
  %wide.trip.count = zext i32 %argc to i64, !dbg !4653
  br label %for.body, !dbg !4656

for.cond26.preheader.loopexit:                    ; preds = %for.body
  %3 = trunc i64 %indvars.iv.next to i32, !dbg !4657
  br label %for.cond26.preheader, !dbg !4657

for.cond26.preheader:                             ; preds = %for.cond26.preheader.loopexit, %if.end
  %outc.0.lcssa = phi i32 [ 1, %if.end ], [ %3, %for.cond26.preheader.loopexit ], !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4617, metadata !DIExpression()), !dbg !4629
  %umax = call i32 @llvm.umax.i32(i32 %outc.0.lcssa, i32 1), !dbg !4657
  %wide.trip.count148 = zext i32 %umax to i64, !dbg !4659
  br label %for.body29, !dbg !4657

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv140 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next141, %for.body ]
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4616, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i64 %indvars.iv140, metadata !4617, metadata !DIExpression()), !dbg !4629
  %call7 = tail call i8* (...) @sdsempty() #23, !dbg !4661
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %indvars.iv140, !dbg !4663
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx9, align 8, !dbg !4663, !tbaa !782
  %call10 = tail call i64 @stringObjectLen(%struct.redisObject* noundef %4) #22, !dbg !4664
  %call11 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call7, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i64 noundef %call10) #23, !dbg !4665
  %call12 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call11) #22, !dbg !4666
  call void @llvm.dbg.value(metadata %struct.redisObject* %call12, metadata !4623, metadata !DIExpression()), !dbg !4629
  %refcount13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call12, i64 0, i32 5, !dbg !4667
  store i32 0, i32* %refcount13, align 4, !dbg !4668, !tbaa !1534
  %5 = add nuw nsw i64 %indvars.iv, 1, !dbg !4669
  call void @llvm.dbg.value(metadata i64 %5, metadata !4616, metadata !DIExpression()), !dbg !4629
  %arrayidx16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %indvars.iv, !dbg !4670
  store %struct.redisObject* %call12, %struct.redisObject** %arrayidx16, align 8, !dbg !4671, !tbaa !782
  %6 = load %struct.redisObject*, %struct.redisObject** %arrayidx9, align 8, !dbg !4672, !tbaa !782
  %7 = add nuw nsw i64 %indvars.iv, 2, !dbg !4673
  call void @llvm.dbg.value(metadata i64 %7, metadata !4616, metadata !DIExpression()), !dbg !4629
  %arrayidx21 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %5, !dbg !4674
  store %struct.redisObject* %6, %struct.redisObject** %arrayidx21, align 8, !dbg !4675, !tbaa !782
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !4676, !tbaa !4163
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 3, !dbg !4677
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !4616, metadata !DIExpression()), !dbg !4629
  %arrayidx24 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %7, !dbg !4678
  store %struct.redisObject* %8, %struct.redisObject** %arrayidx24, align 8, !dbg !4679, !tbaa !782
  %indvars.iv.next141 = add nuw nsw i64 %indvars.iv140, 1, !dbg !4680
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next141, metadata !4617, metadata !DIExpression()), !dbg !4629
  %exitcond.not = icmp eq i64 %indvars.iv.next141, %wide.trip.count, !dbg !4653
  br i1 %exitcond.not, label %for.cond26.preheader.loopexit, label %for.body, !dbg !4656, !llvm.loop !4681

for.body29:                                       ; preds = %for.cond26.preheader, %for.body29
  %indvars.iv145 = phi i64 [ 0, %for.cond26.preheader ], [ %indvars.iv.next146, %for.body29 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv145, metadata !4617, metadata !DIExpression()), !dbg !4629
  %arrayidx31 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %indvars.iv145, !dbg !4683
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx31, align 8, !dbg !4683, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %9) #22, !dbg !4684
  %indvars.iv.next146 = add nuw nsw i64 %indvars.iv145, 1, !dbg !4685
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next146, metadata !4617, metadata !DIExpression()), !dbg !4629
  %exitcond149.not = icmp eq i64 %indvars.iv.next146, %wide.trip.count148, !dbg !4659
  br i1 %exitcond149.not, label %for.end34, label %for.body29, !dbg !4657, !llvm.loop !4686

for.end34:                                        ; preds = %for.body29
  call void @listRewind(%struct.list* noundef %slaves, %struct.listIter* noundef nonnull %li) #23, !dbg !4688
  %call35134 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !4689
  call void @llvm.dbg.value(metadata %struct.listNode* %call35134, metadata !4614, metadata !DIExpression()), !dbg !4629
  %tobool.not135 = icmp eq %struct.listNode* %call35134, null, !dbg !4690
  br i1 %tobool.not135, label %for.body70.preheader, label %while.body, !dbg !4690

while.body:                                       ; preds = %for.end34, %cleanup
  %call35136 = phi %struct.listNode* [ %call35, %cleanup ], [ %call35134, %for.end34 ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call35136, i64 0, i32 2, !dbg !4691
  %10 = bitcast i8** %value to %struct.redisClient**, !dbg !4691
  %11 = load %struct.redisClient*, %struct.redisClient** %10, align 8, !dbg !4691, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %11, metadata !4624, metadata !DIExpression()), !dbg !4692
  %replstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %11, i64 0, i32 16, !dbg !4693
  %12 = load i32, i32* %replstate, align 4, !dbg !4693, !tbaa !896
  %cmp36 = icmp eq i32 %12, 3, !dbg !4695
  br i1 %cmp36, label %cleanup, label %if.end39, !dbg !4696, !llvm.loop !4697

if.end39:                                         ; preds = %while.body
  %slaveseldb = getelementptr inbounds %struct.redisClient, %struct.redisClient* %11, i64 0, i32 14, !dbg !4699
  %13 = load i32, i32* %slaveseldb, align 4, !dbg !4699, !tbaa !4700
  %cmp40.not = icmp eq i32 %13, %dictid, !dbg !4701
  br i1 %cmp40.not, label %for.body61.preheader, label %if.then42, !dbg !4702

if.then42:                                        ; preds = %if.end39
  switch i32 %dictid, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb43
    i32 2, label %sw.bb44
    i32 3, label %sw.bb45
    i32 4, label %sw.bb46
    i32 5, label %sw.bb47
    i32 6, label %sw.bb48
    i32 7, label %sw.bb49
    i32 8, label %sw.bb50
    i32 9, label %sw.bb51
  ], !dbg !4703

sw.bb:                                            ; preds = %if.then42
  %14 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 19), align 8, !dbg !4704, !tbaa !4706
  call void @llvm.dbg.value(metadata %struct.redisObject* %14, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4708

sw.bb43:                                          ; preds = %if.then42
  %15 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 20), align 8, !dbg !4709, !tbaa !4710
  call void @llvm.dbg.value(metadata %struct.redisObject* %15, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4711

sw.bb44:                                          ; preds = %if.then42
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 21), align 8, !dbg !4712, !tbaa !4713
  call void @llvm.dbg.value(metadata %struct.redisObject* %16, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4714

sw.bb45:                                          ; preds = %if.then42
  %17 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 22), align 8, !dbg !4715, !tbaa !4716
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4717

sw.bb46:                                          ; preds = %if.then42
  %18 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 23), align 8, !dbg !4718, !tbaa !4719
  call void @llvm.dbg.value(metadata %struct.redisObject* %18, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4720

sw.bb47:                                          ; preds = %if.then42
  %19 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 24), align 8, !dbg !4721, !tbaa !4722
  call void @llvm.dbg.value(metadata %struct.redisObject* %19, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4723

sw.bb48:                                          ; preds = %if.then42
  %20 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 25), align 8, !dbg !4724, !tbaa !4725
  call void @llvm.dbg.value(metadata %struct.redisObject* %20, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4726

sw.bb49:                                          ; preds = %if.then42
  %21 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 26), align 8, !dbg !4727, !tbaa !4728
  call void @llvm.dbg.value(metadata %struct.redisObject* %21, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4729

sw.bb50:                                          ; preds = %if.then42
  %22 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 27), align 8, !dbg !4730, !tbaa !4731
  call void @llvm.dbg.value(metadata %struct.redisObject* %22, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4732

sw.bb51:                                          ; preds = %if.then42
  %23 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 28), align 8, !dbg !4733, !tbaa !4734
  call void @llvm.dbg.value(metadata %struct.redisObject* %23, metadata !4626, metadata !DIExpression()), !dbg !4707
  br label %sw.epilog, !dbg !4735

sw.default:                                       ; preds = %if.then42
  %call52 = call i8* (...) @sdsempty() #23, !dbg !4736
  %call53 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call52, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 noundef %dictid) #23, !dbg !4737
  %call54 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call53) #22, !dbg !4738
  call void @llvm.dbg.value(metadata %struct.redisObject* %call54, metadata !4626, metadata !DIExpression()), !dbg !4707
  %refcount55 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call54, i64 0, i32 5, !dbg !4739
  store i32 0, i32* %refcount55, align 4, !dbg !4740, !tbaa !1534
  br label %sw.epilog, !dbg !4741

sw.epilog:                                        ; preds = %sw.default, %sw.bb51, %sw.bb50, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb
  %selectcmd.0 = phi %struct.redisObject* [ %call54, %sw.default ], [ %23, %sw.bb51 ], [ %22, %sw.bb50 ], [ %21, %sw.bb49 ], [ %20, %sw.bb48 ], [ %19, %sw.bb47 ], [ %18, %sw.bb46 ], [ %17, %sw.bb45 ], [ %16, %sw.bb44 ], [ %15, %sw.bb43 ], [ %14, %sw.bb ], !dbg !4742
  call void @llvm.dbg.value(metadata %struct.redisObject* %selectcmd.0, metadata !4626, metadata !DIExpression()), !dbg !4707
  call void @addReply(%struct.redisClient* noundef nonnull %11, %struct.redisObject* noundef %selectcmd.0) #22, !dbg !4743
  store i32 %dictid, i32* %slaveseldb, align 4, !dbg !4744, !tbaa !4700
  br label %for.body61.preheader, !dbg !4745

for.body61.preheader:                             ; preds = %sw.epilog, %if.end39
  br label %for.body61, !dbg !4746

for.body61:                                       ; preds = %for.body61.preheader, %for.body61
  %indvars.iv150 = phi i64 [ %indvars.iv.next151, %for.body61 ], [ 0, %for.body61.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv150, metadata !4617, metadata !DIExpression()), !dbg !4629
  %arrayidx63 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %indvars.iv150, !dbg !4748
  %24 = load %struct.redisObject*, %struct.redisObject** %arrayidx63, align 8, !dbg !4748, !tbaa !782
  call void @addReply(%struct.redisClient* noundef %11, %struct.redisObject* noundef %24) #22, !dbg !4750
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1, !dbg !4751
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next151, metadata !4617, metadata !DIExpression()), !dbg !4629
  %exitcond154.not = icmp eq i64 %indvars.iv.next151, %wide.trip.count148, !dbg !4752
  br i1 %exitcond154.not, label %cleanup, label %for.body61, !dbg !4746, !llvm.loop !4753

cleanup:                                          ; preds = %for.body61, %while.body
  %call35 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !4689
  call void @llvm.dbg.value(metadata %struct.listNode* %call35, metadata !4614, metadata !DIExpression()), !dbg !4629
  %tobool.not = icmp eq %struct.listNode* %call35, null, !dbg !4690
  br i1 %tobool.not, label %for.body70.preheader, label %while.body, !dbg !4690

for.body70.preheader:                             ; preds = %cleanup, %for.end34
  br label %for.body70, !dbg !4755

for.body70:                                       ; preds = %for.body70.preheader, %for.body70
  %indvars.iv155 = phi i64 [ %indvars.iv.next156, %for.body70 ], [ 0, %for.body70.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv155, metadata !4617, metadata !DIExpression()), !dbg !4629
  %arrayidx72 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %outv.0, i64 %indvars.iv155, !dbg !4757
  %25 = bitcast %struct.redisObject** %arrayidx72 to i8**, !dbg !4757
  %26 = load i8*, i8** %25, align 8, !dbg !4757, !tbaa !782
  call void @decrRefCount(i8* noundef %26) #22, !dbg !4759
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1, !dbg !4760
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next156, metadata !4617, metadata !DIExpression()), !dbg !4629
  %exitcond159.not = icmp eq i64 %indvars.iv.next156, %wide.trip.count148, !dbg !4761
  br i1 %exitcond159.not, label %for.end75, label %for.body70, !dbg !4755, !llvm.loop !4762

for.end75:                                        ; preds = %for.body70
  %arraydecay76 = getelementptr inbounds [25 x %struct.redisObject*], [25 x %struct.redisObject*]* %static_outv, i64 0, i64 0, !dbg !4764
  %cmp77.not = icmp eq %struct.redisObject** %outv.0, %arraydecay76, !dbg !4766
  br i1 %cmp77.not, label %if.end80, label %if.then79, !dbg !4767

if.then79:                                        ; preds = %for.end75
  %27 = bitcast %struct.redisObject** %outv.0 to i8*, !dbg !4768
  call void @zfree(i8* noundef nonnull %27) #23, !dbg !4769
  br label %if.end80, !dbg !4769

if.end80:                                         ; preds = %if.then79, %for.end75
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1) #24, !dbg !4770
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !4770
  ret void, !dbg !4770
}

; Function Attrs: noinline nounwind uwtable
define internal void @expireCommand(%struct.redisClient* noundef %c) #0 !dbg !4771 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4773, metadata !DIExpression()), !dbg !4774
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !4775
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !4775, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !4776
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !4776, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !4777
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !4777, !tbaa !782
  tail call void @expireGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2, i64 noundef 0) #22, !dbg !4778
  ret void, !dbg !4779
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @catAppendOnlyExpireAtCommand(i8* noundef %buf, %struct.redisObject* noundef %key, %struct.redisObject* noundef %seconds) #0 !dbg !4780 {
entry:
  %argv = alloca [3 x %struct.redisObject*], align 16
  call void @llvm.dbg.value(metadata i8* %buf, metadata !4784, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !4785, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata %struct.redisObject* %seconds, metadata !4786, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 3, metadata !4787, metadata !DIExpression()), !dbg !4790
  %0 = bitcast [3 x %struct.redisObject*]* %argv to i8*, !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #24, !dbg !4791
  call void @llvm.dbg.declare(metadata [3 x %struct.redisObject*]* %argv, metadata !4789, metadata !DIExpression()), !dbg !4792
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %seconds) #22, !dbg !4793
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !4786, metadata !DIExpression()), !dbg !4790
  %call1 = tail call i64 @time(i64* noundef null) #23, !dbg !4794
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !4795
  %1 = load i8*, i8** %ptr, align 8, !dbg !4795, !tbaa !1328
  %call2 = tail call i64 @strtol(i8* noundef %1, i8** noundef null, i32 noundef 10) #23, !dbg !4796
  %add = add nsw i64 %call2, %call1, !dbg !4797
  call void @llvm.dbg.value(metadata i64 %add, metadata !4788, metadata !DIExpression()), !dbg !4790
  %2 = bitcast %struct.redisObject* %call to i8*, !dbg !4798
  tail call void @decrRefCount(i8* noundef %2) #22, !dbg !4799
  %call3 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), i64 noundef 8) #22, !dbg !4800
  %arrayidx = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %argv, i64 0, i64 0, !dbg !4801
  store %struct.redisObject* %call3, %struct.redisObject** %arrayidx, align 16, !dbg !4802, !tbaa !782
  %arrayidx4 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %argv, i64 0, i64 1, !dbg !4803
  store %struct.redisObject* %key, %struct.redisObject** %arrayidx4, align 8, !dbg !4804, !tbaa !782
  %call5 = tail call i8* (...) @sdsempty() #23, !dbg !4805
  %call6 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), i64 noundef %add) #23, !dbg !4806
  %call7 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call6) #22, !dbg !4807
  %arrayidx8 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %argv, i64 0, i64 2, !dbg !4808
  store %struct.redisObject* %call7, %struct.redisObject** %arrayidx8, align 16, !dbg !4809, !tbaa !782
  %call9 = call i8* @catAppendOnlyGenericCommand(i8* noundef %buf, i32 noundef 3, %struct.redisObject** noundef nonnull %arrayidx) #22, !dbg !4810
  call void @llvm.dbg.value(metadata i8* %call9, metadata !4784, metadata !DIExpression()), !dbg !4790
  %3 = bitcast %struct.redisObject* %call3 to i8*, !dbg !4811
  tail call void @decrRefCount(i8* noundef %3) #22, !dbg !4812
  %.cast = bitcast %struct.redisObject* %call7 to i8*, !dbg !4813
  tail call void @decrRefCount(i8* noundef %.cast) #22, !dbg !4814
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #24, !dbg !4815
  ret i8* %call9, !dbg !4816
}

; Function Attrs: noinline nounwind uwtable
define internal void @setexCommand(%struct.redisClient* noundef %c) #0 !dbg !4817 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4819, metadata !DIExpression()), !dbg !4820
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !4821
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !4821, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !4822
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !4822, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 3, !dbg !4823
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !4823, !tbaa !782
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !4824
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx4, align 8, !dbg !4824, !tbaa !782
  tail call void @setGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2, %struct.redisObject* noundef %3) #22, !dbg !4825
  ret void, !dbg !4826
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @catAppendOnlyGenericCommand(i8* noundef %buf, i32 noundef %argc, %struct.redisObject** nocapture noundef readonly %argv) #0 !dbg !4827 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf, metadata !4831, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i32 %argc, metadata !4832, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !4833, metadata !DIExpression()), !dbg !4839
  %call = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %buf, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %argc) #23, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %call, metadata !4831, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i32 0, metadata !4834, metadata !DIExpression()), !dbg !4839
  %cmp21 = icmp sgt i32 %argc, 0, !dbg !4841
  br i1 %cmp21, label %for.body.preheader, label %for.end, !dbg !4842

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %argc to i64, !dbg !4841
  br label %for.body, !dbg !4842

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %buf.addr.023 = phi i8* [ %call, %for.body.preheader ], [ %call8, %for.body ]
  call void @llvm.dbg.value(metadata i8* %buf.addr.023, metadata !4831, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4834, metadata !DIExpression()), !dbg !4839
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %indvars.iv, !dbg !4843
  %0 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !4843, !tbaa !782
  %call1 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %0) #22, !dbg !4844
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !4835, metadata !DIExpression()), !dbg !4845
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call1, i64 0, i32 0, !dbg !4846
  %1 = load i8*, i8** %ptr, align 8, !dbg !4846, !tbaa !1328
  %call2 = tail call i64 @sdslen(i8* noundef %1) #23, !dbg !4847
  %call3 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %buf.addr.023, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i64 noundef %call2) #23, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %call3, metadata !4831, metadata !DIExpression()), !dbg !4839
  %2 = load i8*, i8** %ptr, align 8, !dbg !4849, !tbaa !1328
  %call6 = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !4850
  %call7 = tail call i8* @sdscatlen(i8* noundef %call3, i8* noundef %2, i64 noundef %call6) #23, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %call7, metadata !4831, metadata !DIExpression()), !dbg !4839
  %call8 = tail call i8* @sdscatlen(i8* noundef %call7, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 noundef 2) #23, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %call8, metadata !4831, metadata !DIExpression()), !dbg !4839
  %3 = bitcast %struct.redisObject* %call1 to i8*, !dbg !4853
  tail call void @decrRefCount(i8* noundef %3) #22, !dbg !4854
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4855
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !4834, metadata !DIExpression()), !dbg !4839
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !4841
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !4842, !llvm.loop !4856

for.end:                                          ; preds = %for.body, %entry
  %buf.addr.0.lcssa = phi i8* [ %call, %entry ], [ %call8, %for.body ], !dbg !4839
  ret i8* %buf.addr.0.lcssa, !dbg !4858
}

; Function Attrs: noinline nounwind uwtable
define internal void @expireGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key, %struct.redisObject* noundef %param, i64 noundef %offset) #0 !dbg !4859 {
entry:
  %seconds = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4863, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !4864, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata %struct.redisObject* %param, metadata !4865, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i64 %offset, metadata !4866, metadata !DIExpression()), !dbg !4872
  %0 = bitcast i64* %seconds to i8*, !dbg !4873
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4873
  call void @llvm.dbg.value(metadata i64* %seconds, metadata !4868, metadata !DIExpression(DW_OP_deref)), !dbg !4872
  %call = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %param, i64* noundef nonnull %seconds, i8* noundef null) #22, !dbg !4874
  %cmp.not = icmp eq i32 %call, 0, !dbg !4876
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !4877

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %seconds, align 8, !dbg !4878, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %1, metadata !4868, metadata !DIExpression()), !dbg !4872
  %sub = sub nsw i64 %1, %offset, !dbg !4878
  call void @llvm.dbg.value(metadata i64 %sub, metadata !4868, metadata !DIExpression()), !dbg !4872
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !4879
  %2 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !4879, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 0, i32 0, !dbg !4880
  %3 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !4880, !tbaa !2353
  %4 = bitcast %struct.redisObject* %key to i8*, !dbg !4881
  %call1 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %3, i8* noundef %4) #23, !dbg !4882
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call1, metadata !4867, metadata !DIExpression()), !dbg !4872
  %cmp2 = icmp eq %struct.dictEntry* %call1, null, !dbg !4883
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4885

if.then3:                                         ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !4886, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !4888
  br label %cleanup, !dbg !4889

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 %sub, metadata !4868, metadata !DIExpression()), !dbg !4872
  %cmp5 = icmp slt i64 %sub, 1, !dbg !4890
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !4891

if.then6:                                         ; preds = %if.end4
  %6 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !4892, !tbaa !2890
  %call8 = tail call i32 @deleteKey(%struct.redisDb* noundef %6, %struct.redisObject* noundef %key) #22, !dbg !4895
  %tobool.not = icmp eq i32 %call8, 0, !dbg !4895
  br i1 %tobool.not, label %if.end10, label %if.then9, !dbg !4896

if.then9:                                         ; preds = %if.then6
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !4897, !tbaa !708
  %inc = add nsw i64 %7, 1, !dbg !4897
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !4897, !tbaa !708
  br label %if.end10, !dbg !4898

if.end10:                                         ; preds = %if.then9, %if.then6
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !4899, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !4900
  br label %cleanup, !dbg !4901

if.else:                                          ; preds = %if.end4
  %call11 = tail call i64 @time(i64* noundef null) #23, !dbg !4902
  call void @llvm.dbg.value(metadata i64 %sub, metadata !4868, metadata !DIExpression()), !dbg !4872
  %add = add nsw i64 %call11, %sub, !dbg !4903
  call void @llvm.dbg.value(metadata i64 %add, metadata !4869, metadata !DIExpression()), !dbg !4904
  %9 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !4905, !tbaa !2890
  %call13 = tail call i32 @setExpire(%struct.redisDb* noundef %9, %struct.redisObject* noundef %key, i64 noundef %add) #22, !dbg !4907
  %tobool14.not = icmp eq i32 %call13, 0, !dbg !4907
  br i1 %tobool14.not, label %if.else17, label %if.then15, !dbg !4908

if.then15:                                        ; preds = %if.else
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !4909, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !4911
  %11 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !4912, !tbaa !708
  %inc16 = add nsw i64 %11, 1, !dbg !4912
  store i64 %inc16, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !4912, !tbaa !708
  br label %cleanup, !dbg !4913

if.else17:                                        ; preds = %if.else
  %12 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !4914, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %12) #22, !dbg !4916
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %if.else17, %entry, %if.end10, %if.then3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4917
  ret void, !dbg !4917
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %o, i64* nocapture noundef writeonly %target, i8* noundef %msg) #0 !dbg !4918 {
entry:
  %value = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4923, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !4924, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i64* %target, metadata !4925, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %msg, metadata !4926, metadata !DIExpression()), !dbg !4928
  %0 = bitcast i64* %value to i8*, !dbg !4929
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4929
  call void @llvm.dbg.value(metadata i64* %value, metadata !4927, metadata !DIExpression(DW_OP_deref)), !dbg !4928
  %call = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %o, i64* noundef nonnull %value, i8* noundef %msg) #22, !dbg !4930
  %cmp.not = icmp eq i32 %call, 0, !dbg !4932
  br i1 %cmp.not, label %if.end10, label %cleanup, !dbg !4933

if.end10:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 undef, metadata !4927, metadata !DIExpression()), !dbg !4928
  %1 = load i64, i64* %value, align 8, !dbg !4934, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %1, metadata !4927, metadata !DIExpression()), !dbg !4928
  store i64 %1, i64* %target, align 8, !dbg !4937, !tbaa !790
  br label %cleanup, !dbg !4938

cleanup:                                          ; preds = %entry, %if.end10
  %retval.0 = phi i32 [ 0, %if.end10 ], [ -1, %entry ], !dbg !4928
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4939
  ret i32 %retval.0, !dbg !4939
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @setExpire(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key, i64 noundef %when) #0 !dbg !4940 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !4944, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !4945, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i64 %when, metadata !4946, metadata !DIExpression()), !dbg !4947
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !4948
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !4948, !tbaa !3635
  %1 = bitcast %struct.redisObject* %key to i8*, !dbg !4950
  %2 = inttoptr i64 %when to i8*, !dbg !4951
  %call = tail call i32 @dictAdd(%struct.dict* noundef %0, i8* noundef %1, i8* noundef %2) #23, !dbg !4952
  %cmp = icmp eq i32 %call, 1, !dbg !4953
  br i1 %cmp, label %return, label %if.else, !dbg !4954

if.else:                                          ; preds = %entry
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !4955
  br label %return, !dbg !4957

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi i32 [ 1, %if.else ], [ 0, %entry ], !dbg !4958
  ret i32 %retval.0, !dbg !4959
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %o, i64* nocapture noundef writeonly %target, i8* noundef %msg) #0 !dbg !4960 {
entry:
  %value = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !4965, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !4966, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i64* %target, metadata !4967, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i8* %msg, metadata !4968, metadata !DIExpression()), !dbg !4970
  %0 = bitcast i64* %value to i8*, !dbg !4971
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4971
  call void @llvm.dbg.value(metadata i64* %value, metadata !4969, metadata !DIExpression(DW_OP_deref)), !dbg !4970
  %call = call i32 @getLongLongFromObject(%struct.redisObject* noundef %o, i64* noundef nonnull %value) #22, !dbg !4972
  %cmp.not = icmp eq i32 %call, 0, !dbg !4974
  br i1 %cmp.not, label %if.end6, label %if.then, !dbg !4975

if.then:                                          ; preds = %entry
  %cmp1.not = icmp eq i8* %msg, null, !dbg !4976
  br i1 %cmp1.not, label %if.else, label %if.then2, !dbg !4979

if.then2:                                         ; preds = %if.then
  %call3 = tail call i8* (...) @sdsempty() #23, !dbg !4980
  %call4 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call3, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i64 0, i64 0), i8* noundef nonnull %msg) #23, !dbg !4982
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call4) #22, !dbg !4983
  br label %cleanup, !dbg !4984

if.else:                                          ; preds = %if.then
  %call5 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0)) #23, !dbg !4985
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call5) #22, !dbg !4987
  br label %cleanup

if.end6:                                          ; preds = %entry
  %1 = load i64, i64* %value, align 8, !dbg !4988, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %1, metadata !4969, metadata !DIExpression()), !dbg !4970
  store i64 %1, i64* %target, align 8, !dbg !4989, !tbaa !4936
  br label %cleanup, !dbg !4990

cleanup:                                          ; preds = %if.then2, %if.else, %if.end6
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -1, %if.else ], [ -1, %if.then2 ], !dbg !4970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !4991
  ret i32 %retval.0, !dbg !4991
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getLongLongFromObject(%struct.redisObject* noundef readonly %o, i64* nocapture noundef writeonly %target) #0 !dbg !4992 {
entry:
  %eptr = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i64* %target, metadata !4997, metadata !DIExpression()), !dbg !5000
  %0 = bitcast i8** %eptr to i8*, !dbg !5001
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5001
  %cmp = icmp eq %struct.redisObject* %o, null, !dbg !5002
  br i1 %cmp, label %if.end21, label %if.else, !dbg !5004

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !5005
  %1 = load i8, i8* %type, align 8, !dbg !5005, !tbaa !1526
  %cmp1 = icmp eq i8 %1, 0, !dbg !5005
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !5005

cond.false:                                       ; preds = %if.else
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3326) #22, !dbg !5005
  tail call void @_exit(i32 noundef 1) #26, !dbg !5005
  unreachable, !dbg !5005

cond.end:                                         ; preds = %if.else
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !5007
  %2 = load i8, i8* %encoding, align 1, !dbg !5007, !tbaa !1529
  switch i8 %2, label %if.else18 [
    i8 0, label %if.then6
    i8 1, label %if.then16
  ], !dbg !5009

if.then6:                                         ; preds = %cond.end
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !5010
  %3 = load i8*, i8** %ptr, align 8, !dbg !5010, !tbaa !1328
  call void @llvm.dbg.value(metadata i8** %eptr, metadata !4999, metadata !DIExpression(DW_OP_deref)), !dbg !5000
  %call = call i64 @strtoll(i8* noundef %3, i8** noundef nonnull %eptr, i32 noundef 10) #23, !dbg !5012
  call void @llvm.dbg.value(metadata i64 %call, metadata !4998, metadata !DIExpression()), !dbg !5000
  %4 = load i8*, i8** %eptr, align 8, !dbg !5013, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %4, metadata !4999, metadata !DIExpression()), !dbg !5000
  %5 = load i8, i8* %4, align 1, !dbg !5013, !tbaa !795
  %cmp8.not = icmp eq i8 %5, 0, !dbg !5015
  br i1 %cmp8.not, label %if.end21, label %cleanup, !dbg !5016

if.then16:                                        ; preds = %cond.end
  %ptr17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !5017
  %6 = load i8*, i8** %ptr17, align 8, !dbg !5017, !tbaa !1328
  %7 = ptrtoint i8* %6 to i64, !dbg !5020
  call void @llvm.dbg.value(metadata i64 %7, metadata !4998, metadata !DIExpression()), !dbg !5000
  br label %if.end21

if.else18:                                        ; preds = %cond.end
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3333) #22, !dbg !5021
  tail call void @_exit(i32 noundef 1) #26, !dbg !5021
  unreachable, !dbg !5021

if.end21:                                         ; preds = %entry, %if.then16, %if.then6
  %value.0 = phi i64 [ %call, %if.then6 ], [ %7, %if.then16 ], [ 0, %entry ], !dbg !5023
  call void @llvm.dbg.value(metadata i64 %value.0, metadata !4998, metadata !DIExpression()), !dbg !5000
  store i64 %value.0, i64* %target, align 8, !dbg !5024, !tbaa !4936
  br label %cleanup, !dbg !5025

cleanup:                                          ; preds = %if.then6, %if.end21
  %retval.0 = phi i32 [ 0, %if.end21 ], [ -1, %if.then6 ], !dbg !5000
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5026
  ret i32 %retval.0, !dbg !5026
}

; Function Attrs: nounwind
declare !dbg !5027 dso_local i64 @strtoll(i8* noundef, i8** noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @setGenericCommand(%struct.redisClient* noundef %c, i32 noundef %nx, %struct.redisObject* noundef %key, %struct.redisObject* noundef %val, %struct.redisObject* noundef %expire) #0 !dbg !5030 {
entry:
  %seconds = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !5034, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i32 %nx, metadata !5035, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !5036, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata %struct.redisObject* %val, metadata !5037, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata %struct.redisObject* %expire, metadata !5038, metadata !DIExpression()), !dbg !5041
  %0 = bitcast i64* %seconds to i8*, !dbg !5042
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5042
  call void @llvm.dbg.value(metadata i64 0, metadata !5040, metadata !DIExpression()), !dbg !5041
  store i64 0, i64* %seconds, align 8, !dbg !5043, !tbaa !790
  %tobool.not = icmp eq %struct.redisObject* %expire, null, !dbg !5044
  br i1 %tobool.not, label %if.end6, label %if.then, !dbg !5046

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64* %seconds, metadata !5040, metadata !DIExpression(DW_OP_deref)), !dbg !5041
  %call = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef nonnull %expire, i64* noundef nonnull %seconds, i8* noundef null) #22, !dbg !5047
  %cmp.not = icmp eq i32 %call, 0, !dbg !5050
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !5051

if.end:                                           ; preds = %if.then
  %1 = load i64, i64* %seconds, align 8, !dbg !5052, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %1, metadata !5040, metadata !DIExpression()), !dbg !5041
  %cmp2 = icmp slt i64 %1, 1, !dbg !5054
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !5055

if.then3:                                         ; preds = %if.end
  %call4 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i64 0, i64 0)) #23, !dbg !5056
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call4) #22, !dbg !5058
  br label %cleanup, !dbg !5059

if.end6:                                          ; preds = %if.end, %entry
  %2 = phi i64 [ %1, %if.end ], [ 0, %entry ]
  %tobool7.not = icmp eq i32 %nx, 0, !dbg !5060
  br i1 %tobool7.not, label %if.end10, label %if.then8, !dbg !5062

if.then8:                                         ; preds = %if.end6
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !5063
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !5063, !tbaa !2890
  %call9 = tail call i32 @deleteIfVolatile(%struct.redisDb* noundef %3, %struct.redisObject* noundef %key) #22, !dbg !5064
  br label %if.end10, !dbg !5064

if.end10:                                         ; preds = %if.then8, %if.end6
  %db11 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !5065
  %4 = load %struct.redisDb*, %struct.redisDb** %db11, align 8, !dbg !5065, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 0, i32 0, !dbg !5066
  %5 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !5066, !tbaa !2353
  %6 = bitcast %struct.redisObject* %key to i8*, !dbg !5067
  %7 = bitcast %struct.redisObject* %val to i8*, !dbg !5068
  %call12 = tail call i32 @dictAdd(%struct.dict* noundef %5, i8* noundef %6, i8* noundef %7) #23, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %call12, metadata !5039, metadata !DIExpression()), !dbg !5041
  %cmp13 = icmp eq i32 %call12, 1, !dbg !5070
  br i1 %cmp13, label %if.then14, label %if.else27, !dbg !5072

if.then14:                                        ; preds = %if.end10
  br i1 %tobool7.not, label %if.then16, label %if.else, !dbg !5073

if.then16:                                        ; preds = %if.then14
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !5075, !tbaa !1384
  %tobool17.not = icmp eq i32 %8, 0, !dbg !5079
  br i1 %tobool17.not, label %if.end22, label %land.lhs.true, !dbg !5080

land.lhs.true:                                    ; preds = %if.then16
  %9 = load %struct.redisDb*, %struct.redisDb** %db11, align 8, !dbg !5081, !tbaa !2890
  %call19 = tail call i32 @deleteIfSwapped(%struct.redisDb* noundef %9, %struct.redisObject* noundef %key) #22, !dbg !5082
  %tobool20.not = icmp eq i32 %call19, 0, !dbg !5082
  br i1 %tobool20.not, label %if.end22, label %if.then21, !dbg !5083

if.then21:                                        ; preds = %land.lhs.true
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !5084
  br label %if.end22, !dbg !5084

if.end22:                                         ; preds = %if.then21, %land.lhs.true, %if.then16
  %10 = load %struct.redisDb*, %struct.redisDb** %db11, align 8, !dbg !5085, !tbaa !2890
  %dict24 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %10, i64 0, i32 0, !dbg !5086
  %11 = load %struct.dict*, %struct.dict** %dict24, align 8, !dbg !5086, !tbaa !2353
  %call25 = tail call i32 @dictReplace(%struct.dict* noundef %11, i8* noundef %6, i8* noundef %7) #23, !dbg !5087
  br label %if.end28, !dbg !5088

if.else:                                          ; preds = %if.then14
  %12 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !5089, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %12) #22, !dbg !5091
  br label %cleanup, !dbg !5092

if.else27:                                        ; preds = %if.end10
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !5093
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.end22
  tail call void @incrRefCount(%struct.redisObject* noundef %val) #22, !dbg !5095
  %13 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !5096, !tbaa !708
  %inc = add nsw i64 %13, 1, !dbg !5096
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !5096, !tbaa !708
  %14 = load %struct.redisDb*, %struct.redisDb** %db11, align 8, !dbg !5097, !tbaa !2890
  %call30 = tail call i32 @removeExpire(%struct.redisDb* noundef %14, %struct.redisObject* noundef %key) #22, !dbg !5098
  br i1 %tobool.not, label %if.end36, label %if.then32, !dbg !5099

if.then32:                                        ; preds = %if.end28
  %15 = load %struct.redisDb*, %struct.redisDb** %db11, align 8, !dbg !5100, !tbaa !2890
  %call34 = tail call i64 @time(i64* noundef null) #23, !dbg !5102
  call void @llvm.dbg.value(metadata i64 %2, metadata !5040, metadata !DIExpression()), !dbg !5041
  %add = add nsw i64 %2, %call34, !dbg !5103
  %call35 = tail call i32 @setExpire(%struct.redisDb* noundef %15, %struct.redisObject* noundef %key, i64 noundef %add) #22, !dbg !5104
  br label %if.end36, !dbg !5104

if.end36:                                         ; preds = %if.then32, %if.end28
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !5105
  %17 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !5105
  %cond = select i1 %tobool7.not, %struct.redisObject* %17, %struct.redisObject* %16, !dbg !5105
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond) #22, !dbg !5106
  br label %cleanup, !dbg !5107

cleanup:                                          ; preds = %if.then, %if.end36, %if.else, %if.then3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5107
  ret void, !dbg !5107
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @deleteIfVolatile(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !5108 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !5110, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !5111, metadata !DIExpression()), !dbg !5113
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !5114
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !5114, !tbaa !3635
  %used = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !5114
  %1 = load i64, i64* %used, align 8, !dbg !5114, !tbaa !3545
  %used4 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !5114
  %2 = load i64, i64* %used4, align 8, !dbg !5114, !tbaa !3545
  %add = sub i64 0, %2, !dbg !5116
  %cmp = icmp eq i64 %1, %add, !dbg !5116
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !5117

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !5118
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef nonnull %0, i8* noundef %3) #23, !dbg !5119
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !5112, metadata !DIExpression()), !dbg !5113
  %cmp6 = icmp eq %struct.dictEntry* %call, null, !dbg !5120
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !5121

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !5122, !tbaa !708
  %inc = add nsw i64 %4, 1, !dbg !5122
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !5122, !tbaa !708
  %5 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !5123, !tbaa !5124
  %inc7 = add nsw i64 %5, 1, !dbg !5123
  store i64 %inc7, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !5123, !tbaa !5124
  %6 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !5125, !tbaa !3635
  %call9 = tail call i32 @dictDelete(%struct.dict* noundef %6, i8* noundef %3) #23, !dbg !5126
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 0, !dbg !5127
  %7 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !5127, !tbaa !2353
  %call10 = tail call i32 @dictDelete(%struct.dict* noundef %7, i8* noundef %3) #23, !dbg !5128
  %cmp11 = icmp eq i32 %call10, 0, !dbg !5129
  %conv = zext i1 %cmp11 to i32, !dbg !5129
  br label %cleanup, !dbg !5130

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !5113
  ret i32 %retval.0, !dbg !5131
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @deleteIfSwapped(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !5132 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !5134, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !5135, metadata !DIExpression()), !dbg !5138
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 0, !dbg !5139
  %0 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !5139, !tbaa !2353
  %1 = bitcast %struct.redisObject* %key to i8*, !dbg !5141
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %0, i8* noundef %1) #23, !dbg !5142
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !5136, metadata !DIExpression()), !dbg !5138
  %cmp = icmp eq %struct.dictEntry* %call, null, !dbg !5143
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5144

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !5145
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !5145, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %3, metadata !5137, metadata !DIExpression()), !dbg !5138
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 3, !dbg !5146
  %4 = load i8, i8* %storage, align 2, !dbg !5146, !tbaa !1547
  %cmp2 = icmp eq i8 %4, 0, !dbg !5148
  br i1 %cmp2, label %cleanup, label %if.end5, !dbg !5149

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @deleteKey(%struct.redisDb* noundef nonnull %db, %struct.redisObject* noundef %key) #22, !dbg !5150
  br label %cleanup, !dbg !5151

cleanup:                                          ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi i32 [ 1, %if.end5 ], [ 0, %entry ], [ 0, %if.end ], !dbg !5138
  ret i32 %retval.0, !dbg !5152
}

declare !dbg !5153 dso_local i32 @dictReplace(%struct.dict* noundef, i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @removeExpire(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !5154 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !5156, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !5157, metadata !DIExpression()), !dbg !5158
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !5159
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !5159, !tbaa !3635
  %1 = bitcast %struct.redisObject* %key to i8*, !dbg !5161
  %call = tail call i32 @dictDelete(%struct.dict* noundef %0, i8* noundef %1) #23, !dbg !5162
  %cmp = icmp eq i32 %call, 0, !dbg !5163
  %. = zext i1 %cmp to i32, !dbg !5164
  ret i32 %., !dbg !5165
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @stringObjectLen(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !5166 {
entry:
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !5170, metadata !DIExpression()), !dbg !5174
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !5175
  %0 = load i8, i8* %type, align 8, !dbg !5175, !tbaa !1526
  %cmp = icmp eq i8 %0, 0, !dbg !5175
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5175

cond.false:                                       ; preds = %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3272) #22, !dbg !5175
  tail call void @_exit(i32 noundef 1) #26, !dbg !5175
  unreachable, !dbg !5175

cond.end:                                         ; preds = %entry
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !5176
  %1 = load i8, i8* %encoding, align 1, !dbg !5176, !tbaa !1529
  %cmp3 = icmp eq i8 %1, 0, !dbg !5177
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5178

if.then:                                          ; preds = %cond.end
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !5179
  %2 = load i8*, i8** %ptr, align 8, !dbg !5179, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !5181
  br label %return, !dbg !5182

if.else:                                          ; preds = %cond.end
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !5183
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !5183
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !5171, metadata !DIExpression()), !dbg !5184
  %ptr5 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !5185
  %4 = load i8*, i8** %ptr5, align 8, !dbg !5185, !tbaa !1328
  %5 = ptrtoint i8* %4 to i64, !dbg !5186
  %call6 = call i32 @ll2string(i8* noundef nonnull %3, i64 noundef 32, i64 noundef %5) #22, !dbg !5187
  %conv7 = sext i32 %call6 to i64, !dbg !5187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #24, !dbg !5188
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i64 [ %call, %if.then ], [ %conv7, %if.else ], !dbg !5189
  ret i64 %retval.0, !dbg !5190
}

; Function Attrs: noinline nounwind uwtable
define internal void @sendReplyToClient(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* noundef %privdata, i32 noundef %mask) #0 !dbg !5191 {
entry:
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !5193, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %fd, metadata !5194, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !5195, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %mask, metadata !5196, metadata !DIExpression()), !dbg !5202
  %0 = bitcast i8* %privdata to %struct.redisClient*, !dbg !5203
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !5197, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 0, metadata !5198, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 0, metadata !5199, metadata !DIExpression()), !dbg !5202
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19), align 4, !dbg !5204, !tbaa !2074
  %tobool.not = icmp eq i32 %1, 0, !dbg !5206
  br i1 %tobool.not, label %land.lhs.true, label %if.end, !dbg !5207

land.lhs.true:                                    ; preds = %entry
  %reply = getelementptr inbounds i8, i8* %privdata, i64 64, !dbg !5208
  %2 = bitcast i8* %reply to %struct.list**, !dbg !5208
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !5208, !tbaa !1357
  %len = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 5, !dbg !5208
  %4 = load i32, i32* %len, align 8, !dbg !5208, !tbaa !1358
  %cmp = icmp ugt i32 %4, 3, !dbg !5209
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !5210

land.lhs.true1:                                   ; preds = %land.lhs.true
  %flags = getelementptr inbounds i8, i8* %privdata, i64 88, !dbg !5211
  %5 = bitcast i8* %flags to i32*, !dbg !5211
  %6 = load i32, i32* %5, align 8, !dbg !5211, !tbaa !1402
  %and = and i32 %6, 2, !dbg !5212
  %tobool2.not = icmp eq i32 %and, 0, !dbg !5212
  br i1 %tobool2.not, label %if.then, label %if.end, !dbg !5213

if.then:                                          ; preds = %land.lhs.true1
  tail call void @sendReplyToClientWritev(%struct.aeEventLoop* noundef %el, i32 noundef %fd, i8* noundef nonnull %privdata, i32 noundef %mask) #22, !dbg !5214
  br label %cleanup, !dbg !5216

if.end:                                           ; preds = %entry, %land.lhs.true1, %land.lhs.true
  %reply3 = getelementptr inbounds i8, i8* %privdata, i64 64
  %7 = bitcast i8* %reply3 to %struct.list**
  %flags21 = getelementptr inbounds i8, i8* %privdata, i64 88
  %8 = bitcast i8* %flags21 to i32*
  %sentlen = getelementptr inbounds i8, i8* %privdata, i64 72
  %9 = bitcast i8* %sentlen to i32*
  br label %while.cond.outer, !dbg !5217

while.cond.outer:                                 ; preds = %if.end47, %if.end
  %totwritten.0.ph = phi i32 [ %add38, %if.end47 ], [ 0, %if.end ]
  %nwritten.0.ph = phi i32 [ %nwritten.1, %if.end47 ], [ 0, %if.end ]
  call void @llvm.dbg.value(metadata i32 %nwritten.0.ph, metadata !5198, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %totwritten.0.ph, metadata !5199, metadata !DIExpression()), !dbg !5202
  %10 = load %struct.list*, %struct.list** %7, align 8, !dbg !5218, !tbaa !1357
  %len4127 = getelementptr inbounds %struct.list, %struct.list* %10, i64 0, i32 5, !dbg !5218
  %11 = load i32, i32* %len4127, align 8, !dbg !5218, !tbaa !1358
  %tobool5.not128 = icmp eq i32 %11, 0, !dbg !5217
  br i1 %tobool5.not128, label %while.end, label %while.body, !dbg !5217

while.body:                                       ; preds = %while.cond.outer, %if.then16
  %12 = phi %struct.list* [ %22, %if.then16 ], [ %10, %while.cond.outer ]
  %13 = phi i32 [ %23, %if.then16 ], [ %11, %while.cond.outer ]
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19), align 4, !dbg !5219, !tbaa !2074
  %tobool6.not = icmp ne i32 %14, 0, !dbg !5222
  %cmp10 = icmp ne i32 %13, 1
  %or.cond = select i1 %tobool6.not, i1 %cmp10, i1 false, !dbg !5223
  br i1 %or.cond, label %if.then11, label %if.end12, !dbg !5223

if.then11:                                        ; preds = %while.body
  tail call void @glueReplyBuffersIfNeeded(%struct.redisClient* noundef nonnull %0) #22, !dbg !5224
  %.pre = load %struct.list*, %struct.list** %7, align 8, !dbg !5225, !tbaa !1357
  br label %if.end12, !dbg !5224

if.end12:                                         ; preds = %if.then11, %while.body
  %15 = phi %struct.list* [ %.pre, %if.then11 ], [ %12, %while.body ], !dbg !5225
  %head = getelementptr inbounds %struct.list, %struct.list* %15, i64 0, i32 0, !dbg !5225
  %16 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !5225, !tbaa !1366
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %16, i64 0, i32 2, !dbg !5225
  %17 = bitcast i8** %value to %struct.redisObject**, !dbg !5225
  %18 = load %struct.redisObject*, %struct.redisObject** %17, align 8, !dbg !5225, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %18, metadata !5201, metadata !DIExpression()), !dbg !5202
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 0, !dbg !5226
  %19 = load i8*, i8** %ptr, align 8, !dbg !5226, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %19) #23, !dbg !5227
  %conv = trunc i64 %call to i32, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5200, metadata !DIExpression()), !dbg !5202
  %cmp14 = icmp eq i32 %conv, 0, !dbg !5228
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !5230

if.then16:                                        ; preds = %if.end12
  %20 = load %struct.list*, %struct.list** %7, align 8, !dbg !5231, !tbaa !1357
  %head19 = getelementptr inbounds %struct.list, %struct.list* %20, i64 0, i32 0, !dbg !5233
  %21 = load %struct.listNode*, %struct.listNode** %head19, align 8, !dbg !5233, !tbaa !1366
  tail call void @listDelNode(%struct.list* noundef %20, %struct.listNode* noundef %21) #23, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %nwritten.0.ph, metadata !5198, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %totwritten.0.ph, metadata !5199, metadata !DIExpression()), !dbg !5202
  %22 = load %struct.list*, %struct.list** %7, align 8, !dbg !5218, !tbaa !1357
  %len4 = getelementptr inbounds %struct.list, %struct.list* %22, i64 0, i32 5, !dbg !5218
  %23 = load i32, i32* %len4, align 8, !dbg !5218, !tbaa !1358
  %tobool5.not = icmp eq i32 %23, 0, !dbg !5217
  br i1 %tobool5.not, label %while.end, label %while.body, !dbg !5217, !llvm.loop !5235

if.end20:                                         ; preds = %if.end12
  %conv.le = trunc i64 %call to i32, !dbg !5227
  %24 = load i32, i32* %8, align 8, !dbg !5237, !tbaa !1402
  %and22 = and i32 %24, 2, !dbg !5239
  %tobool23.not = icmp eq i32 %and22, 0, !dbg !5239
  br i1 %tobool23.not, label %if.else, label %if.then24, !dbg !5240

if.then24:                                        ; preds = %if.end20
  %25 = load i32, i32* %9, align 8, !dbg !5241, !tbaa !5243
  %sub = sub nsw i32 %conv.le, %25, !dbg !5244
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5198, metadata !DIExpression()), !dbg !5202
  br label %if.end36, !dbg !5245

if.else:                                          ; preds = %if.end20
  %ptr.le = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 0, !dbg !5226
  %26 = load i8*, i8** %ptr.le, align 8, !dbg !5246, !tbaa !1328
  %27 = load i32, i32* %9, align 8, !dbg !5248, !tbaa !5243
  %idx.ext = sext i32 %27 to i64, !dbg !5249
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !5249
  %sub28 = sub nsw i32 %conv.le, %27, !dbg !5250
  %conv29 = sext i32 %sub28 to i64, !dbg !5251
  %call30 = tail call i64 @write(i32 noundef %fd, i8* noundef %add.ptr, i64 noundef %conv29) #23, !dbg !5252
  %conv31 = trunc i64 %call30 to i32, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %conv31, metadata !5198, metadata !DIExpression()), !dbg !5202
  %cmp32 = icmp slt i32 %conv31, 1, !dbg !5253
  br i1 %cmp32, label %while.end.loopexit151.split.loop.exit157, label %if.else.if.end36_crit_edge, !dbg !5255

if.else.if.end36_crit_edge:                       ; preds = %if.else
  %.pre150 = load i32, i32* %9, align 8, !dbg !5256, !tbaa !5243
  br label %if.end36, !dbg !5255

if.end36:                                         ; preds = %if.else.if.end36_crit_edge, %if.then24
  %28 = phi i32 [ %25, %if.then24 ], [ %.pre150, %if.else.if.end36_crit_edge ], !dbg !5256
  %nwritten.1 = phi i32 [ %sub, %if.then24 ], [ %conv31, %if.else.if.end36_crit_edge ], !dbg !5257
  call void @llvm.dbg.value(metadata i32 %nwritten.1, metadata !5198, metadata !DIExpression()), !dbg !5202
  %add = add nsw i32 %28, %nwritten.1, !dbg !5256
  store i32 %add, i32* %9, align 8, !dbg !5256, !tbaa !5243
  %add38 = add nsw i32 %nwritten.1, %totwritten.0.ph, !dbg !5258
  call void @llvm.dbg.value(metadata i32 %add38, metadata !5199, metadata !DIExpression()), !dbg !5202
  %cmp40 = icmp eq i32 %add, %conv.le, !dbg !5259
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !5261

if.then42:                                        ; preds = %if.end36
  %29 = load %struct.list*, %struct.list** %7, align 8, !dbg !5262, !tbaa !1357
  %head45 = getelementptr inbounds %struct.list, %struct.list* %29, i64 0, i32 0, !dbg !5264
  %30 = load %struct.listNode*, %struct.listNode** %head45, align 8, !dbg !5264, !tbaa !1366
  tail call void @listDelNode(%struct.list* noundef %29, %struct.listNode* noundef %30) #23, !dbg !5265
  store i32 0, i32* %9, align 8, !dbg !5266, !tbaa !5243
  br label %if.end47, !dbg !5267

if.end47:                                         ; preds = %if.then42, %if.end36
  %cmp48 = icmp sgt i32 %add38, 65536, !dbg !5268
  br i1 %cmp48, label %while.end, label %while.cond.outer, !dbg !5270, !llvm.loop !5235

while.end.loopexit151.split.loop.exit157:         ; preds = %if.else
  %conv31.le = trunc i64 %call30 to i32, !dbg !5252
  br label %while.end, !dbg !5271

while.end:                                        ; preds = %while.cond.outer, %if.end47, %if.then16, %while.end.loopexit151.split.loop.exit157
  %totwritten.1 = phi i32 [ %totwritten.0.ph, %while.end.loopexit151.split.loop.exit157 ], [ %totwritten.0.ph, %if.then16 ], [ %totwritten.0.ph, %while.cond.outer ], [ %add38, %if.end47 ], !dbg !5202
  %nwritten.2 = phi i32 [ %conv31.le, %while.end.loopexit151.split.loop.exit157 ], [ %nwritten.0.ph, %if.then16 ], [ %nwritten.0.ph, %while.cond.outer ], [ %nwritten.1, %if.end47 ], !dbg !5202
  call void @llvm.dbg.value(metadata i32 %nwritten.2, metadata !5198, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %totwritten.1, metadata !5199, metadata !DIExpression()), !dbg !5202
  %cmp52 = icmp eq i32 %nwritten.2, -1, !dbg !5271
  br i1 %cmp52, label %if.then54, label %if.end63, !dbg !5273

if.then54:                                        ; preds = %while.end
  %call55 = tail call i32* @__errno_location() #25, !dbg !5274
  %31 = load i32, i32* %call55, align 4, !dbg !5274, !tbaa !926
  %cmp56 = icmp eq i32 %31, 11, !dbg !5277
  br i1 %cmp56, label %if.end63, label %if.else59, !dbg !5278

if.else59:                                        ; preds = %if.then54
  %call61 = tail call i8* @strerror(i32 noundef %31) #23, !dbg !5279
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0), i8* noundef %call61) #22, !dbg !5281
  tail call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !5282
  br label %cleanup, !dbg !5283

if.end63:                                         ; preds = %if.then54, %while.end
  %cmp64 = icmp sgt i32 %totwritten.1, 0, !dbg !5284
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !5286

if.then66:                                        ; preds = %if.end63
  %call67 = tail call i64 @time(i64* noundef null) #23, !dbg !5287
  %lastinteraction = getelementptr inbounds i8, i8* %privdata, i64 80, !dbg !5288
  %32 = bitcast i8* %lastinteraction to i64*, !dbg !5288
  store i64 %call67, i64* %32, align 8, !dbg !5289, !tbaa !5290
  br label %if.end68, !dbg !5291

if.end68:                                         ; preds = %if.then66, %if.end63
  %33 = load %struct.list*, %struct.list** %7, align 8, !dbg !5292, !tbaa !1357
  %len70 = getelementptr inbounds %struct.list, %struct.list* %33, i64 0, i32 5, !dbg !5292
  %34 = load i32, i32* %len70, align 8, !dbg !5292, !tbaa !1358
  %cmp71 = icmp eq i32 %34, 0, !dbg !5294
  br i1 %cmp71, label %if.then73, label %cleanup, !dbg !5295

if.then73:                                        ; preds = %if.end68
  store i32 0, i32* %9, align 8, !dbg !5296, !tbaa !5243
  %35 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5298, !tbaa !941
  %fd75 = bitcast i8* %privdata to i32*, !dbg !5299
  %36 = load i32, i32* %fd75, align 8, !dbg !5299, !tbaa !943
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %35, i32 noundef %36, i32 noundef 2) #23, !dbg !5300
  br label %cleanup, !dbg !5301

cleanup:                                          ; preds = %if.end68, %if.then73, %if.else59, %if.then
  ret void, !dbg !5302
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @dupStringObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !5303 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !5305, metadata !DIExpression()), !dbg !5306
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !5307
  %0 = load i8, i8* %encoding, align 1, !dbg !5307, !tbaa !1529
  %cmp = icmp eq i8 %0, 0, !dbg !5307
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5307

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.78, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 2952, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__PRETTY_FUNCTION__.dupStringObject, i64 0, i64 0)) #26, !dbg !5307
  unreachable, !dbg !5307

cond.end:                                         ; preds = %entry
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !5308
  %1 = load i8*, i8** %ptr, align 8, !dbg !5308, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %1) #23, !dbg !5309
  %call3 = tail call %struct.redisObject* @createStringObject(i8* noundef %1, i64 noundef %call) #22, !dbg !5310
  ret %struct.redisObject* %call3, !dbg !5311
}

; Function Attrs: noinline nounwind uwtable
define internal void @sendReplyToClientWritev(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* noundef %privdata, i32 noundef %mask) #0 !dbg !5312 {
entry:
  %iov = alloca [256 x %struct.iovec], align 16
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !5314, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %fd, metadata !5315, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !5316, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %mask, metadata !5317, metadata !DIExpression()), !dbg !5334
  %0 = bitcast i8* %privdata to %struct.redisClient*, !dbg !5335
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !5318, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 0, metadata !5319, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 0, metadata !5320, metadata !DIExpression()), !dbg !5334
  %1 = bitcast [256 x %struct.iovec]* %iov to i8*, !dbg !5336
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %1) #24, !dbg !5336
  call void @llvm.dbg.declare(metadata [256 x %struct.iovec]* %iov, metadata !5324, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i32 0, metadata !5332, metadata !DIExpression()), !dbg !5334
  %reply = getelementptr inbounds i8, i8* %privdata, i64 64
  %2 = bitcast i8* %reply to %struct.list**
  call void @llvm.dbg.value(metadata i32 0, metadata !5320, metadata !DIExpression()), !dbg !5334
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !5338, !tbaa !1357
  %len146 = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 5, !dbg !5338
  %4 = load i32, i32* %len146, align 8, !dbg !5338, !tbaa !1358
  %tobool.not147 = icmp eq i32 %4, 0, !dbg !5339
  br i1 %tobool.not147, label %if.end64, label %while.body.lr.ph, !dbg !5339

while.body.lr.ph:                                 ; preds = %entry
  %sentlen = getelementptr inbounds i8, i8* %privdata, i64 72
  %5 = bitcast i8* %sentlen to i32*
  %arraydecay = getelementptr inbounds [256 x %struct.iovec], [256 x %struct.iovec]* %iov, i64 0, i64 0
  %.pre = load i32, i32* %5, align 8, !dbg !5340, !tbaa !5243
  br label %while.body, !dbg !5339

while.body:                                       ; preds = %while.body.lr.ph, %while.end
  %6 = phi i32 [ %.pre, %while.body.lr.ph ], [ %23, %while.end ], !dbg !5340
  %7 = phi %struct.list* [ %3, %while.body.lr.ph ], [ %24, %while.end ]
  %totwritten.0148 = phi i32 [ 0, %while.body.lr.ph ], [ %add32, %while.end ]
  call void @llvm.dbg.value(metadata i32 %totwritten.0148, metadata !5320, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %6, metadata !5331, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 0, metadata !5332, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 0, metadata !5322, metadata !DIExpression()), !dbg !5334
  %head = getelementptr inbounds %struct.list, %struct.list* %7, i64 0, i32 0, !dbg !5342
  call void @llvm.dbg.value(metadata %struct.listNode* undef, metadata !5333, metadata !DIExpression()), !dbg !5334
  %node.0133 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !5344, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.listNode* %node.0133, metadata !5333, metadata !DIExpression()), !dbg !5334
  %tobool2.not134 = icmp eq %struct.listNode* %node.0133, null, !dbg !5345
  br i1 %tobool2.not134, label %while.end59, label %for.body, !dbg !5345

for.body:                                         ; preds = %while.body, %if.end7
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end7 ], [ 0, %while.body ]
  %node.0138 = phi %struct.listNode* [ %node.0, %if.end7 ], [ %node.0133, %while.body ]
  %offset.0136 = phi i32 [ 0, %if.end7 ], [ %6, %while.body ]
  %willwrite.0135 = phi i32 [ %add14, %if.end7 ], [ 0, %while.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5332, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %offset.0136, metadata !5331, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %willwrite.0135, metadata !5322, metadata !DIExpression()), !dbg !5334
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %node.0138, i64 0, i32 2, !dbg !5346
  %8 = bitcast i8** %value to %struct.redisObject**, !dbg !5346
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !5346, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %9, metadata !5323, metadata !DIExpression()), !dbg !5334
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !5349
  %10 = load i8*, i8** %ptr, align 8, !dbg !5349, !tbaa !1328
  %call = call i64 @sdslen(i8* noundef %10) #23, !dbg !5350
  %conv = trunc i64 %call to i32, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5321, metadata !DIExpression()), !dbg !5334
  %add = sub i32 %totwritten.0148, %offset.0136, !dbg !5351
  %sub = add i32 %add, %conv, !dbg !5353
  %cmp = icmp sgt i32 %sub, 65536, !dbg !5354
  %cmp4 = icmp eq i64 %indvars.iv, 256
  %or.cond = select i1 %cmp, i1 true, i1 %cmp4, !dbg !5355
  br i1 %or.cond, label %for.end, label %if.end7, !dbg !5355

if.end7:                                          ; preds = %for.body
  %11 = load i8*, i8** %ptr, align 8, !dbg !5356, !tbaa !1328
  %idx.ext = sext i32 %offset.0136 to i64, !dbg !5357
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !5357
  %iov_base = getelementptr inbounds [256 x %struct.iovec], [256 x %struct.iovec]* %iov, i64 0, i64 %indvars.iv, i32 0, !dbg !5358
  store i8* %add.ptr, i8** %iov_base, align 16, !dbg !5359, !tbaa !5360
  %sub9 = sub nsw i32 %conv, %offset.0136, !dbg !5362
  %conv10 = sext i32 %sub9 to i64, !dbg !5363
  %iov_len = getelementptr inbounds [256 x %struct.iovec], [256 x %struct.iovec]* %iov, i64 0, i64 %indvars.iv, i32 1, !dbg !5364
  store i64 %conv10, i64* %iov_len, align 8, !dbg !5365, !tbaa !5366
  %add14 = add nsw i32 %sub9, %willwrite.0135, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %add14, metadata !5322, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 0, metadata !5331, metadata !DIExpression()), !dbg !5334
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5368
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !5332, metadata !DIExpression()), !dbg !5334
  %next = getelementptr inbounds %struct.listNode, %struct.listNode* %node.0138, i64 0, i32 1, !dbg !5369
  call void @llvm.dbg.value(metadata %struct.listNode* undef, metadata !5333, metadata !DIExpression()), !dbg !5334
  %node.0 = load %struct.listNode*, %struct.listNode** %next, align 8, !dbg !5344, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.listNode* %node.0, metadata !5333, metadata !DIExpression()), !dbg !5334
  %tobool2.not = icmp eq %struct.listNode* %node.0, null, !dbg !5345
  br i1 %tobool2.not, label %for.end, label %for.body, !dbg !5345, !llvm.loop !5370

for.end:                                          ; preds = %if.end7, %for.body
  %willwrite.0.lcssa.ph = phi i32 [ %add14, %if.end7 ], [ %willwrite.0135, %for.body ]
  %ion.0.lcssa.ph.in = phi i64 [ %indvars.iv.next, %if.end7 ], [ %indvars.iv, %for.body ]
  %cmp15 = icmp eq i32 %willwrite.0.lcssa.ph, 0, !dbg !5372
  br i1 %cmp15, label %while.end59, label %if.end18, !dbg !5374

if.end18:                                         ; preds = %for.end
  %ion.0.lcssa.ph = trunc i64 %ion.0.lcssa.ph.in to i32, !dbg !5375
  %call19 = call i64 @writev(i32 noundef %fd, %struct.iovec* noundef nonnull %arraydecay, i32 noundef %ion.0.lcssa.ph) #23, !dbg !5376
  %conv20 = trunc i64 %call19 to i32, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %conv20, metadata !5319, metadata !DIExpression()), !dbg !5334
  %cmp21 = icmp slt i32 %conv20, 0, !dbg !5378
  br i1 %cmp21, label %if.then23, label %if.end31, !dbg !5379

if.then23:                                        ; preds = %if.end18
  %call24 = tail call i32* @__errno_location() #25, !dbg !5380
  %12 = load i32, i32* %call24, align 4, !dbg !5380, !tbaa !926
  %cmp25.not = icmp eq i32 %12, 11, !dbg !5383
  br i1 %cmp25.not, label %while.end59, label %if.then27, !dbg !5384

if.then27:                                        ; preds = %if.then23
  %call29 = call i8* @strerror(i32 noundef %12) #23, !dbg !5385
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0), i8* noundef %call29) #22, !dbg !5387
  call void @freeClient(%struct.redisClient* noundef %0) #22, !dbg !5388
  br label %cleanup, !dbg !5389

if.end31:                                         ; preds = %if.end18
  %add32 = add nsw i32 %totwritten.0148, %conv20, !dbg !5390
  call void @llvm.dbg.value(metadata i32 %add32, metadata !5320, metadata !DIExpression()), !dbg !5334
  %13 = load i32, i32* %5, align 8, !dbg !5391, !tbaa !5243
  call void @llvm.dbg.value(metadata i32 %13, metadata !5331, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %conv20, metadata !5319, metadata !DIExpression()), !dbg !5334
  %tobool35.not142 = icmp eq i32 %conv20, 0, !dbg !5392
  br i1 %tobool35.not142, label %while.end, label %land.rhs, !dbg !5393

land.rhs:                                         ; preds = %if.end31, %if.then49
  %offset.1144 = phi i32 [ 0, %if.then49 ], [ %13, %if.end31 ]
  %nwritten.0143 = phi i32 [ %sub54, %if.then49 ], [ %conv20, %if.end31 ]
  call void @llvm.dbg.value(metadata i32 %offset.1144, metadata !5331, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %nwritten.0143, metadata !5319, metadata !DIExpression()), !dbg !5334
  %14 = load %struct.list*, %struct.list** %2, align 8, !dbg !5394, !tbaa !1357
  %len37 = getelementptr inbounds %struct.list, %struct.list* %14, i64 0, i32 5, !dbg !5394
  %15 = load i32, i32* %len37, align 8, !dbg !5394, !tbaa !1358
  %tobool38.not = icmp eq i32 %15, 0, !dbg !5393
  br i1 %tobool38.not, label %while.end, label %while.body39, !dbg !5395

while.body39:                                     ; preds = %land.rhs
  %head41 = getelementptr inbounds %struct.list, %struct.list* %14, i64 0, i32 0, !dbg !5396
  %16 = load %struct.listNode*, %struct.listNode** %head41, align 8, !dbg !5396, !tbaa !1366
  %value42 = getelementptr inbounds %struct.listNode, %struct.listNode* %16, i64 0, i32 2, !dbg !5396
  %17 = bitcast i8** %value42 to %struct.redisObject**, !dbg !5396
  %18 = load %struct.redisObject*, %struct.redisObject** %17, align 8, !dbg !5396, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %18, metadata !5323, metadata !DIExpression()), !dbg !5334
  %ptr43 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 0, !dbg !5398
  %19 = load i8*, i8** %ptr43, align 8, !dbg !5398, !tbaa !1328
  %call44 = call i64 @sdslen(i8* noundef %19) #23, !dbg !5399
  %conv45 = trunc i64 %call44 to i32, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %conv45, metadata !5321, metadata !DIExpression()), !dbg !5334
  %sub46 = sub nsw i32 %conv45, %offset.1144, !dbg !5400
  %cmp47.not = icmp slt i32 %nwritten.0143, %sub46, !dbg !5402
  br i1 %cmp47.not, label %if.else, label %if.then49, !dbg !5403

if.then49:                                        ; preds = %while.body39
  %20 = load %struct.list*, %struct.list** %2, align 8, !dbg !5404, !tbaa !1357
  %head52 = getelementptr inbounds %struct.list, %struct.list* %20, i64 0, i32 0, !dbg !5406
  %21 = load %struct.listNode*, %struct.listNode** %head52, align 8, !dbg !5406, !tbaa !1366
  call void @listDelNode(%struct.list* noundef %20, %struct.listNode* noundef %21) #23, !dbg !5407
  %sub54 = sub nsw i32 %nwritten.0143, %sub46, !dbg !5408
  call void @llvm.dbg.value(metadata i32 %sub54, metadata !5319, metadata !DIExpression()), !dbg !5334
  store i32 0, i32* %5, align 8, !dbg !5409, !tbaa !5243
  call void @llvm.dbg.value(metadata i32 0, metadata !5331, metadata !DIExpression()), !dbg !5334
  %tobool35.not = icmp eq i32 %sub54, 0, !dbg !5392
  br i1 %tobool35.not, label %while.end, label %land.rhs, !dbg !5393, !llvm.loop !5410

if.else:                                          ; preds = %while.body39
  %22 = load i32, i32* %5, align 8, !dbg !5412, !tbaa !5243
  %add57 = add nsw i32 %22, %nwritten.0143, !dbg !5412
  store i32 %add57, i32* %5, align 8, !dbg !5412, !tbaa !5243
  br label %while.end, !dbg !5414

while.end:                                        ; preds = %land.rhs, %if.then49, %if.end31, %if.else
  %23 = phi i32 [ %13, %if.end31 ], [ %add57, %if.else ], [ %offset.1144, %land.rhs ], [ 0, %if.then49 ]
  call void @llvm.dbg.value(metadata i32 %add32, metadata !5320, metadata !DIExpression()), !dbg !5334
  %24 = load %struct.list*, %struct.list** %2, align 8, !dbg !5338, !tbaa !1357
  %len = getelementptr inbounds %struct.list, %struct.list* %24, i64 0, i32 5, !dbg !5338
  %25 = load i32, i32* %len, align 8, !dbg !5338, !tbaa !1358
  %tobool.not = icmp eq i32 %25, 0, !dbg !5339
  br i1 %tobool.not, label %while.end59, label %while.body, !dbg !5339, !llvm.loop !5415

while.end59:                                      ; preds = %while.body, %while.end, %for.end, %if.then23
  %totwritten.0132 = phi i32 [ %totwritten.0148, %if.then23 ], [ %totwritten.0148, %while.body ], [ %add32, %while.end ], [ %totwritten.0148, %for.end ]
  %cmp60 = icmp sgt i32 %totwritten.0132, 0, !dbg !5417
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !5419

if.then62:                                        ; preds = %while.end59
  %call63 = call i64 @time(i64* noundef null) #23, !dbg !5420
  %lastinteraction = getelementptr inbounds i8, i8* %privdata, i64 80, !dbg !5421
  %26 = bitcast i8* %lastinteraction to i64*, !dbg !5421
  store i64 %call63, i64* %26, align 8, !dbg !5422, !tbaa !5290
  br label %if.end64, !dbg !5423

if.end64:                                         ; preds = %entry, %if.then62, %while.end59
  %27 = load %struct.list*, %struct.list** %2, align 8, !dbg !5424, !tbaa !1357
  %len66 = getelementptr inbounds %struct.list, %struct.list* %27, i64 0, i32 5, !dbg !5424
  %28 = load i32, i32* %len66, align 8, !dbg !5424, !tbaa !1358
  %cmp67 = icmp eq i32 %28, 0, !dbg !5426
  br i1 %cmp67, label %if.then69, label %cleanup, !dbg !5427

if.then69:                                        ; preds = %if.end64
  %sentlen70 = getelementptr inbounds i8, i8* %privdata, i64 72, !dbg !5428
  %29 = bitcast i8* %sentlen70 to i32*, !dbg !5428
  store i32 0, i32* %29, align 8, !dbg !5430, !tbaa !5243
  %30 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5431, !tbaa !941
  %fd71 = bitcast i8* %privdata to i32*, !dbg !5432
  %31 = load i32, i32* %fd71, align 8, !dbg !5432, !tbaa !943
  call void @aeDeleteFileEvent(%struct.aeEventLoop* noundef %30, i32 noundef %31, i32 noundef 2) #23, !dbg !5433
  br label %cleanup, !dbg !5434

cleanup:                                          ; preds = %if.end64, %if.then69, %if.then27
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %1) #24, !dbg !5435
  ret void, !dbg !5435
}

; Function Attrs: noinline nounwind uwtable
define internal void @glueReplyBuffersIfNeeded(%struct.redisClient* nocapture noundef readonly %c) #0 !dbg !5436 {
entry:
  %buf = alloca [1024 x i8], align 16
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !5438, metadata !DIExpression()), !dbg !5446
  call void @llvm.dbg.value(metadata i32 0, metadata !5439, metadata !DIExpression()), !dbg !5446
  %0 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !5447
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %0) #24, !dbg !5447
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !5440, metadata !DIExpression()), !dbg !5448
  %1 = bitcast %struct.listIter* %li to i8*, !dbg !5449
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #24, !dbg !5449
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !5442, metadata !DIExpression()), !dbg !5450
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 10, !dbg !5451
  %2 = load %struct.list*, %struct.list** %reply, align 8, !dbg !5451, !tbaa !1357
  call void @listRewind(%struct.list* noundef %2, %struct.listIter* noundef nonnull %li) #23, !dbg !5452
  call void @llvm.dbg.value(metadata i32 0, metadata !5439, metadata !DIExpression()), !dbg !5446
  %call47 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5453
  call void @llvm.dbg.value(metadata %struct.listNode* %call47, metadata !5441, metadata !DIExpression()), !dbg !5446
  %tobool.not48 = icmp eq %struct.listNode* %call47, null, !dbg !5454
  br i1 %tobool.not48, label %while.end, label %while.body, !dbg !5454

while.body:                                       ; preds = %entry, %cleanup
  %call50 = phi %struct.listNode* [ %call, %cleanup ], [ %call47, %entry ]
  %copylen.049 = phi i32 [ %add, %cleanup ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i32 %copylen.049, metadata !5439, metadata !DIExpression()), !dbg !5446
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call50, i64 0, i32 2, !dbg !5455
  %3 = bitcast i8** %value to %struct.redisObject**, !dbg !5455
  %4 = load %struct.redisObject*, %struct.redisObject** %3, align 8, !dbg !5455, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %4, metadata !5443, metadata !DIExpression()), !dbg !5446
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 0, !dbg !5456
  %5 = load i8*, i8** %ptr, align 8, !dbg !5456, !tbaa !1328
  %call1 = call i64 @sdslen(i8* noundef %5) #23, !dbg !5457
  %conv = trunc i64 %call1 to i32, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5444, metadata !DIExpression()), !dbg !5458
  %add = add nsw i32 %copylen.049, %conv, !dbg !5459
  %cmp = icmp slt i32 %add, 1025, !dbg !5461
  br i1 %cmp, label %cleanup, label %if.else, !dbg !5462

if.else:                                          ; preds = %while.body
  %cmp8 = icmp eq i32 %copylen.049, 0, !dbg !5463
  br i1 %cmp8, label %cleanup18, label %while.end, !dbg !5466

cleanup:                                          ; preds = %while.body
  %idx.ext = sext i32 %copylen.049 to i64, !dbg !5467
  %add.ptr = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 %idx.ext, !dbg !5467
  %6 = load i8*, i8** %ptr, align 8, !dbg !5469, !tbaa !1328
  %sext = shl i64 %call1, 32, !dbg !5470
  %conv4 = ashr exact i64 %sext, 32, !dbg !5470
  %call5 = call i8* @memcpy(i8* noundef nonnull %add.ptr, i8* noundef %6, i64 noundef %conv4) #23, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %add, metadata !5439, metadata !DIExpression()), !dbg !5446
  %7 = load %struct.list*, %struct.list** %reply, align 8, !dbg !5472, !tbaa !1357
  call void @listDelNode(%struct.list* noundef %7, %struct.listNode* noundef nonnull %call50) #23, !dbg !5473
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5453
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !5441, metadata !DIExpression()), !dbg !5446
  %tobool.not = icmp eq %struct.listNode* %call, null, !dbg !5454
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !5454

while.end:                                        ; preds = %cleanup, %entry, %if.else
  %copylen.046 = phi i32 [ %copylen.049, %if.else ], [ 0, %entry ], [ %add, %cleanup ]
  call void @llvm.dbg.value(metadata i32 %copylen.046, metadata !5439, metadata !DIExpression()), !dbg !5446
  %conv13 = sext i32 %copylen.046 to i64, !dbg !5474
  %call14 = call i8* @sdsnewlen(i8* noundef nonnull %0, i64 noundef %conv13) #23, !dbg !5475
  %call15 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call14) #22, !dbg !5476
  call void @llvm.dbg.value(metadata %struct.redisObject* %call15, metadata !5443, metadata !DIExpression()), !dbg !5446
  %8 = load %struct.list*, %struct.list** %reply, align 8, !dbg !5477, !tbaa !1357
  %9 = bitcast %struct.redisObject* %call15 to i8*, !dbg !5478
  %call17 = call %struct.list* @listAddNodeHead(%struct.list* noundef %8, i8* noundef %9) #23, !dbg !5479
  br label %cleanup18, !dbg !5480

cleanup18:                                        ; preds = %if.else, %while.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #24, !dbg !5480
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %0) #24, !dbg !5480
  ret void, !dbg !5480
}

declare !dbg !5481 dso_local i64 @writev(i32 noundef, %struct.iovec* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !5487 dso_local %struct.list* @listAddNodeHead(%struct.list* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @waitForMultipleSwappedKeys(%struct.redisClient* noundef %c, %struct.redisCommand* nocapture noundef readonly %cmd, i32 noundef %argc, %struct.redisObject** nocapture noundef readonly %argv) #0 !dbg !5488 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !5490, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !5491, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i32 %argc, metadata !5492, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !5493, metadata !DIExpression()), !dbg !5496
  %vm_firstkey = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 5, !dbg !5497
  %0 = load i32, i32* %vm_firstkey, align 8, !dbg !5497, !tbaa !5499
  %cmp = icmp eq i32 %0, 0, !dbg !5500
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5501

if.end:                                           ; preds = %entry
  %vm_lastkey = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 6, !dbg !5502
  %1 = load i32, i32* %vm_lastkey, align 4, !dbg !5502, !tbaa !5503
  call void @llvm.dbg.value(metadata i32 %1, metadata !5495, metadata !DIExpression()), !dbg !5496
  %cmp1 = icmp slt i32 %1, 0, !dbg !5504
  %add = select i1 %cmp1, i32 %argc, i32 0, !dbg !5506
  %spec.select = add nsw i32 %add, %1, !dbg !5506
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5495, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i32 %0, metadata !5494, metadata !DIExpression()), !dbg !5496
  %cmp5.not20 = icmp sgt i32 %0, %spec.select, !dbg !5507
  br i1 %cmp5.not20, label %cleanup, label %for.body.lr.ph, !dbg !5510

for.body.lr.ph:                                   ; preds = %if.end
  %vm_keystep = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %cmd, i64 0, i32 7
  br label %for.body, !dbg !5510

for.body:                                         ; preds = %for.body.lr.ph, %cond.end
  %j.021 = phi i32 [ %0, %for.body.lr.ph ], [ %add7, %cond.end ]
  call void @llvm.dbg.value(metadata i32 %j.021, metadata !5494, metadata !DIExpression()), !dbg !5496
  %cmp6 = icmp slt i32 %j.021, %argc, !dbg !5511
  br i1 %cmp6, label %cond.end, label %cond.false, !dbg !5511

cond.false:                                       ; preds = %for.body
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9836) #22, !dbg !5511
  tail call void @_exit(i32 noundef 1) #26, !dbg !5511
  unreachable, !dbg !5511

cond.end:                                         ; preds = %for.body
  %idxprom = sext i32 %j.021 to i64, !dbg !5513
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %idxprom, !dbg !5513
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !5513, !tbaa !782
  %call = tail call i32 @waitForSwappedKey(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2) #22, !dbg !5514
  %3 = load i32, i32* %vm_keystep, align 8, !dbg !5515, !tbaa !5516
  %add7 = add nsw i32 %3, %j.021, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %add7, metadata !5494, metadata !DIExpression()), !dbg !5496
  %cmp5.not = icmp sgt i32 %add7, %spec.select, !dbg !5507
  br i1 %cmp5.not, label %cleanup, label %for.body, !dbg !5510, !llvm.loop !5518

cleanup:                                          ; preds = %cond.end, %if.end, %entry
  ret void, !dbg !5520
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @waitForSwappedKey(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key) #0 !dbg !5521 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !5523, metadata !DIExpression()), !dbg !5546
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !5524, metadata !DIExpression()), !dbg !5546
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !5547
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !5547, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !5548
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !5548, !tbaa !2353
  %2 = bitcast %struct.redisObject* %key to i8*, !dbg !5549
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %1, i8* noundef %2) #23, !dbg !5550
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !5525, metadata !DIExpression()), !dbg !5546
  %cmp = icmp eq %struct.dictEntry* %call, null, !dbg !5551
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5553

if.end:                                           ; preds = %entry
  %3 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !5554
  %4 = load %struct.redisObject*, %struct.redisObject** %3, align 8, !dbg !5554, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %4, metadata !5526, metadata !DIExpression()), !dbg !5546
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 3, !dbg !5555
  %5 = load i8, i8* %storage, align 2, !dbg !5555, !tbaa !1547
  switch i8 %5, label %if.end11 [
    i8 0, label %cleanup
    i8 2, label %if.then9
  ], !dbg !5557

if.then9:                                         ; preds = %if.end
  tail call void @vmCancelThreadedIOJob(%struct.redisObject* noundef nonnull %4) #22, !dbg !5558
  br label %cleanup, !dbg !5561

if.end11:                                         ; preds = %if.end
  %io_keys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 24, !dbg !5562
  %6 = load %struct.list*, %struct.list** %io_keys, align 8, !dbg !5562, !tbaa !2671
  %call12 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %6, i8* noundef %2) #23, !dbg !5563
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !5564
  %7 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !5565, !tbaa !2890
  %io_keys14 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %7, i64 0, i32 3, !dbg !5566
  %8 = load %struct.dict*, %struct.dict** %io_keys14, align 8, !dbg !5566, !tbaa !3075
  %call15 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %8, i8* noundef %2) #23, !dbg !5567
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call15, metadata !5525, metadata !DIExpression()), !dbg !5546
  %cmp16 = icmp eq %struct.dictEntry* %call15, null, !dbg !5568
  br i1 %cmp16, label %if.then18, label %if.else26, !dbg !5569

if.then18:                                        ; preds = %if.end11
  %call20 = tail call %struct.list* @listCreate() #23, !dbg !5570
  call void @llvm.dbg.value(metadata %struct.list* %call20, metadata !5527, metadata !DIExpression()), !dbg !5546
  %9 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !5571, !tbaa !2890
  %io_keys22 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %9, i64 0, i32 3, !dbg !5572
  %10 = load %struct.dict*, %struct.dict** %io_keys22, align 8, !dbg !5572, !tbaa !3075
  %11 = bitcast %struct.list* %call20 to i8*, !dbg !5573
  %call23 = tail call i32 @dictAdd(%struct.dict* noundef %10, i8* noundef %2, i8* noundef %11) #23, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %call23, metadata !5528, metadata !DIExpression()), !dbg !5575
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !5576
  %cmp24 = icmp eq i32 %call23, 0, !dbg !5577
  br i1 %cmp24, label %if.end27, label %cond.false, !dbg !5577

cond.false:                                       ; preds = %if.then18
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9801, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.waitForSwappedKey, i64 0, i64 0)) #26, !dbg !5577
  unreachable, !dbg !5577

if.else26:                                        ; preds = %if.end11
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call15, i64 0, i32 1, !dbg !5578
  %12 = bitcast i8** %val to %struct.list**, !dbg !5578
  %13 = load %struct.list*, %struct.list** %12, align 8, !dbg !5578, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %13, metadata !5527, metadata !DIExpression()), !dbg !5546
  br label %if.end27

if.end27:                                         ; preds = %if.then18, %if.else26
  %l.0 = phi %struct.list* [ %13, %if.else26 ], [ %call20, %if.then18 ], !dbg !5580
  call void @llvm.dbg.value(metadata %struct.list* %l.0, metadata !5527, metadata !DIExpression()), !dbg !5546
  %14 = bitcast %struct.redisClient* %c to i8*, !dbg !5581
  %call28 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %l.0, i8* noundef %14) #23, !dbg !5582
  %15 = load i8, i8* %storage, align 2, !dbg !5583, !tbaa !1547
  %cmp31 = icmp eq i8 %15, 1, !dbg !5584
  br i1 %cmp31, label %if.then33, label %cleanup, !dbg !5585

if.then33:                                        ; preds = %if.end27
  store i8 3, i8* %storage, align 2, !dbg !5586, !tbaa !1547
  %call35 = tail call i8* @zmalloc(i64 noundef 64) #23, !dbg !5587
  %16 = bitcast i8* %call35 to %struct.iojob*, !dbg !5587
  call void @llvm.dbg.value(metadata %struct.iojob* %16, metadata !5531, metadata !DIExpression()), !dbg !5588
  %type = bitcast i8* %call35 to i32*, !dbg !5589
  store i32 0, i32* %type, align 8, !dbg !5590, !tbaa !5591
  %17 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !5593, !tbaa !2890
  %db37 = getelementptr inbounds i8, i8* %call35, i64 8, !dbg !5594
  %18 = bitcast i8* %db37 to %struct.redisDb**, !dbg !5594
  store %struct.redisDb* %17, %struct.redisDb** %18, align 8, !dbg !5595, !tbaa !5596
  %key38 = getelementptr inbounds i8, i8* %call35, i64 16, !dbg !5597
  %19 = bitcast i8* %key38 to %struct.redisObject**, !dbg !5597
  store %struct.redisObject* %4, %struct.redisObject** %19, align 8, !dbg !5598, !tbaa !5599
  %page = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 6, i32 0, !dbg !5600
  %20 = load i64, i64* %page, align 8, !dbg !5600, !tbaa !1647
  %page41 = getelementptr inbounds i8, i8* %call35, i64 32, !dbg !5601
  %21 = bitcast i8* %page41 to i64*, !dbg !5601
  store i64 %20, i64* %21, align 8, !dbg !5602, !tbaa !5603
  %val42 = getelementptr inbounds i8, i8* %call35, i64 24, !dbg !5604
  %22 = bitcast i8* %val42 to %struct.redisObject**, !dbg !5604
  store %struct.redisObject* null, %struct.redisObject** %22, align 8, !dbg !5605, !tbaa !5606
  %canceled = getelementptr inbounds i8, i8* %call35, i64 48, !dbg !5607
  %23 = bitcast i8* %canceled to i32*, !dbg !5607
  store i32 0, i32* %23, align 8, !dbg !5608, !tbaa !5609
  %thread = getelementptr inbounds i8, i8* %call35, i64 56, !dbg !5610
  %24 = bitcast i8* %thread to i64*, !dbg !5610
  store i64 -1, i64* %24, align 8, !dbg !5611, !tbaa !5612
  tail call void @lockThreadedIO() #22, !dbg !5613
  tail call void @queueIOJob(%struct.iojob* noundef %16) #22, !dbg !5614
  tail call void @unlockThreadedIO() #22, !dbg !5615
  br label %cleanup, !dbg !5616

cleanup:                                          ; preds = %if.end27, %if.then33, %if.end, %entry, %if.then9
  %retval.0 = phi i32 [ 0, %if.then9 ], [ 0, %entry ], [ 0, %if.end ], [ 1, %if.then33 ], [ 1, %if.end27 ], !dbg !5546
  ret i32 %retval.0, !dbg !5617
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmCancelThreadedIOJob(%struct.redisObject* noundef %o) #0 !dbg !5618 {
entry:
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !5620, metadata !DIExpression()), !dbg !5632
  %0 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !5633, !tbaa !5634
  call void @llvm.dbg.value(metadata %struct.list* %0, metadata !5621, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !5632
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5635, !tbaa !5636
  call void @llvm.dbg.value(metadata %struct.list* %1, metadata !5621, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !5632
  %2 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !5637, !tbaa !5638
  call void @llvm.dbg.value(metadata %struct.list* %2, metadata !5621, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !5632
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 3, !dbg !5639
  %3 = load i8, i8* %storage, align 2, !dbg !5639, !tbaa !1547
  %4 = and i8 %3, -2, !dbg !5639
  %switch = icmp eq i8 %4, 2, !dbg !5639
  br i1 %switch, label %again.preheader, label %cond.false, !dbg !5639

again.preheader:                                  ; preds = %entry
  %5 = bitcast %struct.listIter* %li to i8*
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0
  br label %again, !dbg !5640

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.81, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9543, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.vmCancelThreadedIOJob, i64 0, i64 0)) #26, !dbg !5639
  unreachable, !dbg !5639

again:                                            ; preds = %again.preheader, %cleanup42
  call void @llvm.dbg.label(metadata !5631), !dbg !5641
  call void @lockThreadedIO() #22, !dbg !5642
  call void @llvm.dbg.value(metadata i32 0, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.value(metadata i32 0, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.value(metadata i64 0, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !5628, metadata !DIExpression()), !dbg !5644
  call void @listRewind(%struct.list* noundef %0, %struct.listIter* noundef nonnull %li) #23, !dbg !5645
  %call84 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call84, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not85 = icmp eq %struct.listNode* %call84, null, !dbg !5648
  br i1 %cmp9.not85, label %for.inc, label %while.body, !dbg !5649

while.body:                                       ; preds = %again, %cleanup
  %call86 = phi %struct.listNode* [ %call, %cleanup ], [ %call84, %again ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call86, i64 0, i32 2, !dbg !5650
  %6 = load i8*, i8** %value, align 8, !dbg !5650, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %6, metadata !5629, metadata !DIExpression()), !dbg !5651
  %canceled = getelementptr inbounds i8, i8* %6, i64 48, !dbg !5652
  %7 = bitcast i8* %canceled to i32*, !dbg !5652
  %8 = load i32, i32* %7, align 8, !dbg !5652, !tbaa !5609
  %tobool.not = icmp eq i32 %8, 0, !dbg !5654
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !5655, !llvm.loop !5656

if.end:                                           ; preds = %while.body
  %key = getelementptr inbounds i8, i8* %6, i64 16, !dbg !5658
  %9 = bitcast i8* %key to %struct.redisObject**, !dbg !5658
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !5658, !tbaa !5599
  %cmp11 = icmp eq %struct.redisObject* %10, %o, !dbg !5660
  br i1 %cmp11, label %land.lhs.true, label %cleanup, !dbg !5661

land.lhs.true:                                    ; preds = %if.end, %if.end.2
  %switch136 = phi i1 [ false, %if.end.2 ], [ true, %if.end ]
  %i.087.lcssa.wide.ph = phi i32 [ 2, %if.end.2 ], [ 0, %if.end ]
  %.lcssa93.ph = phi %struct.list* [ %2, %if.end.2 ], [ %0, %if.end ]
  %call86.lcssa.ph = phi %struct.listNode* [ %call86.2, %if.end.2 ], [ %call86, %if.end ]
  %.lcssa.ph = phi i8* [ %28, %if.end.2 ], [ %6, %if.end ]
  %canceled.lcssa.ph = phi i8* [ %canceled.2, %if.end.2 ], [ %canceled, %if.end ]
  %11 = load i8*, i8** %ptr, align 8, !dbg !5662, !tbaa !1328
  %type118 = bitcast i8* %.lcssa.ph to i32*, !dbg !5664
  %12 = load i32, i32* %type118, align 8, !dbg !5664, !tbaa !5591
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.82, i64 0, i64 0), i8* noundef nonnull %.lcssa.ph, i8* noundef %11, i32 noundef %12, i32 noundef %i.087.lcssa.wide.ph) #22, !dbg !5665
  %13 = bitcast i8* %.lcssa.ph to %struct.iojob*, !dbg !5666
  %14 = bitcast i8* %canceled.lcssa.ph to i32*, !dbg !5652
  %15 = load i32, i32* %type118, align 8, !dbg !5667, !tbaa !5591
  %cmp17 = icmp eq i32 %15, 2, !dbg !5669
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5670

if.then19:                                        ; preds = %land.lhs.true
  %page = getelementptr inbounds i8, i8* %.lcssa.ph, i64 32, !dbg !5671
  %16 = bitcast i8* %page to i64*, !dbg !5671
  %17 = load i64, i64* %16, align 8, !dbg !5671, !tbaa !5603
  %pages = getelementptr inbounds i8, i8* %.lcssa.ph, i64 40, !dbg !5672
  %18 = bitcast i8* %pages to i64*, !dbg !5672
  %19 = load i64, i64* %18, align 8, !dbg !5672, !tbaa !5673
  call void @vmMarkPagesFree(i64 noundef %17, i64 noundef %19) #22, !dbg !5674
  br label %if.end20, !dbg !5674

if.end20:                                         ; preds = %if.then19, %land.lhs.true
  br i1 %switch136, label %sw.bb, label %sw.bb25, !dbg !5675

sw.bb:                                            ; preds = %if.end20
  call void @freeIOJob(%struct.iojob* noundef nonnull %13) #22, !dbg !5676
  call void @listDelNode(%struct.list* noundef %.lcssa93.ph, %struct.listNode* noundef nonnull %call86.lcssa.ph) #23, !dbg !5678
  br label %sw.epilog, !dbg !5679

sw.bb25:                                          ; preds = %if.end20
  store i32 1, i32* %14, align 8, !dbg !5680, !tbaa !5609
  br label %sw.epilog, !dbg !5681

sw.epilog:                                        ; preds = %sw.bb25, %sw.bb
  %20 = load i8, i8* %storage, align 2, !dbg !5682, !tbaa !1547
  switch i8 %20, label %cleanup46 [
    i8 3, label %cleanup46.sink.split
    i8 2, label %if.then37
  ], !dbg !5684

if.then37:                                        ; preds = %sw.epilog
  br label %cleanup46.sink.split, !dbg !5685

cleanup:                                          ; preds = %if.end, %while.body
  %call = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not = icmp eq %struct.listNode* %call, null, !dbg !5648
  br i1 %cmp9.not, label %for.inc, label %while.body, !dbg !5649

cleanup42:                                        ; preds = %if.end.1
  %21 = load i8*, i8** %ptr, align 8, !dbg !5662, !tbaa !1328
  %type = bitcast i8* %23 to i32*, !dbg !5664
  %22 = load i32, i32* %type, align 8, !dbg !5664, !tbaa !5591
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.82, i64 0, i64 0), i8* noundef nonnull %23, i8* noundef %21, i32 noundef %22, i32 noundef 1) #22, !dbg !5665
  call void @unlockThreadedIO() #22, !dbg !5687
  %call24 = call i32 @usleep(i32 noundef 1) #23, !dbg !5688
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5689
  br label %again

for.inc:                                          ; preds = %cleanup, %again
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5689
  call void @llvm.dbg.value(metadata i64 1, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !5628, metadata !DIExpression()), !dbg !5644
  call void @listRewind(%struct.list* noundef %1, %struct.listIter* noundef nonnull %li) #23, !dbg !5645
  %call84.1 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call84.1, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not85.1 = icmp eq %struct.listNode* %call84.1, null, !dbg !5648
  br i1 %cmp9.not85.1, label %for.inc.1, label %while.body.1, !dbg !5649

while.body.1:                                     ; preds = %for.inc, %cleanup.1
  %call86.1 = phi %struct.listNode* [ %call.1, %cleanup.1 ], [ %call84.1, %for.inc ]
  %value.1 = getelementptr inbounds %struct.listNode, %struct.listNode* %call86.1, i64 0, i32 2, !dbg !5650
  %23 = load i8*, i8** %value.1, align 8, !dbg !5650, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %23, metadata !5629, metadata !DIExpression()), !dbg !5651
  %canceled.1 = getelementptr inbounds i8, i8* %23, i64 48, !dbg !5652
  %24 = bitcast i8* %canceled.1 to i32*, !dbg !5652
  %25 = load i32, i32* %24, align 8, !dbg !5652, !tbaa !5609
  %tobool.not.1 = icmp eq i32 %25, 0, !dbg !5654
  br i1 %tobool.not.1, label %if.end.1, label %cleanup.1, !dbg !5655, !llvm.loop !5656

if.end.1:                                         ; preds = %while.body.1
  %key.1 = getelementptr inbounds i8, i8* %23, i64 16, !dbg !5658
  %26 = bitcast i8* %key.1 to %struct.redisObject**, !dbg !5658
  %27 = load %struct.redisObject*, %struct.redisObject** %26, align 8, !dbg !5658, !tbaa !5599
  %cmp11.1 = icmp eq %struct.redisObject* %27, %o, !dbg !5660
  br i1 %cmp11.1, label %cleanup42, label %cleanup.1, !dbg !5661

cleanup.1:                                        ; preds = %if.end.1, %while.body.1
  %call.1 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call.1, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not.1 = icmp eq %struct.listNode* %call.1, null, !dbg !5648
  br i1 %cmp9.not.1, label %for.inc.1, label %while.body.1, !dbg !5649

for.inc.1:                                        ; preds = %for.inc, %cleanup.1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5689
  call void @llvm.dbg.value(metadata i64 2, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !5628, metadata !DIExpression()), !dbg !5644
  call void @listRewind(%struct.list* noundef %2, %struct.listIter* noundef nonnull %li) #23, !dbg !5645
  %call84.2 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call84.2, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not85.2 = icmp eq %struct.listNode* %call84.2, null, !dbg !5648
  br i1 %cmp9.not85.2, label %for.inc.2, label %while.body.2, !dbg !5649

while.body.2:                                     ; preds = %for.inc.1, %cleanup.2
  %call86.2 = phi %struct.listNode* [ %call.2, %cleanup.2 ], [ %call84.2, %for.inc.1 ]
  %value.2 = getelementptr inbounds %struct.listNode, %struct.listNode* %call86.2, i64 0, i32 2, !dbg !5650
  %28 = load i8*, i8** %value.2, align 8, !dbg !5650, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %28, metadata !5629, metadata !DIExpression()), !dbg !5651
  %canceled.2 = getelementptr inbounds i8, i8* %28, i64 48, !dbg !5652
  %29 = bitcast i8* %canceled.2 to i32*, !dbg !5652
  %30 = load i32, i32* %29, align 8, !dbg !5652, !tbaa !5609
  %tobool.not.2 = icmp eq i32 %30, 0, !dbg !5654
  br i1 %tobool.not.2, label %if.end.2, label %cleanup.2, !dbg !5655, !llvm.loop !5656

if.end.2:                                         ; preds = %while.body.2
  %key.2 = getelementptr inbounds i8, i8* %28, i64 16, !dbg !5658
  %31 = bitcast i8* %key.2 to %struct.redisObject**, !dbg !5658
  %32 = load %struct.redisObject*, %struct.redisObject** %31, align 8, !dbg !5658, !tbaa !5599
  %cmp11.2 = icmp eq %struct.redisObject* %32, %o, !dbg !5660
  br i1 %cmp11.2, label %land.lhs.true, label %cleanup.2, !dbg !5661

cleanup.2:                                        ; preds = %if.end.2, %while.body.2
  %call.2 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.listNode* %call.2, metadata !5624, metadata !DIExpression()), !dbg !5647
  %cmp9.not.2 = icmp eq %struct.listNode* %call.2, null, !dbg !5648
  br i1 %cmp9.not.2, label %for.inc.2, label %while.body.2, !dbg !5649

for.inc.2:                                        ; preds = %cleanup.2, %for.inc.1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5689
  call void @llvm.dbg.value(metadata i64 3, metadata !5623, metadata !DIExpression()), !dbg !5632
  call void @unlockThreadedIO() #22, !dbg !5690
  call void @__assert_fail(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9611, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.vmCancelThreadedIOJob, i64 0, i64 0)) #26, !dbg !5691
  unreachable, !dbg !5691

cleanup46.sink.split:                             ; preds = %sw.epilog, %if.then37
  %.sink = phi i8 [ 0, %if.then37 ], [ 1, %sw.epilog ]
  store i8 %.sink, i8* %storage, align 2, !dbg !5692, !tbaa !1547
  br label %cleanup46, !dbg !5693

cleanup46:                                        ; preds = %cleanup46.sink.split, %sw.epilog
  call void @unlockThreadedIO() #22, !dbg !5693
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !5689
  ret void, !dbg !5694
}

; Function Attrs: noinline nounwind uwtable
define internal void @lockThreadedIO() #0 !dbg !5695 {
entry:
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 73)) #23, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: noinline nounwind uwtable
define internal void @queueIOJob(%struct.iojob* noundef %j) #0 !dbg !5698 {
entry:
  call void @llvm.dbg.value(metadata %struct.iojob* %j, metadata !5702, metadata !DIExpression()), !dbg !5703
  %0 = bitcast %struct.iojob* %j to i8*, !dbg !5704
  %type = getelementptr inbounds %struct.iojob, %struct.iojob* %j, i64 0, i32 0, !dbg !5705
  %1 = load i32, i32* %type, align 8, !dbg !5705, !tbaa !5591
  %key = getelementptr inbounds %struct.iojob, %struct.iojob* %j, i64 0, i32 2, !dbg !5706
  %2 = load %struct.redisObject*, %struct.redisObject** %key, align 8, !dbg !5706, !tbaa !5599
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 0, !dbg !5707
  %3 = load i8*, i8** %ptr, align 8, !dbg !5707, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.86, i64 0, i64 0), %struct.iojob* noundef %j, i32 noundef %1, i8* noundef %3) #22, !dbg !5708
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !5709, !tbaa !5634
  %call = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %4, i8* noundef %0) #23, !dbg !5710
  %5 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !5711, !tbaa !5713
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !5714, !tbaa !2236
  %cmp = icmp slt i32 %5, %6, !dbg !5715
  br i1 %cmp, label %if.then, label %if.end, !dbg !5716

if.then:                                          ; preds = %entry
  tail call void @spawnIOThread() #22, !dbg !5717
  br label %if.end, !dbg !5717

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5718
}

; Function Attrs: noinline nounwind uwtable
define internal void @unlockThreadedIO() #0 !dbg !5719 {
entry:
  %call = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 73)) #23, !dbg !5720
  ret void, !dbg !5721
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmMarkPagesFree(i64 noundef %page, i64 noundef %count) #0 !dbg !5722 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !5726, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i64 %count, metadata !5727, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i64 0, metadata !5728, metadata !DIExpression()), !dbg !5729
  %cmp7 = icmp sgt i64 %count, 0, !dbg !5730
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5733

for.body:                                         ; preds = %entry, %for.body
  %j.08 = phi i64 [ %inc, %for.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %j.08, metadata !5728, metadata !DIExpression()), !dbg !5729
  %add = add nsw i64 %j.08, %page, !dbg !5734
  tail call void @vmMarkPageFree(i64 noundef %add) #22, !dbg !5735
  %inc = add nuw nsw i64 %j.08, 1, !dbg !5736
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5728, metadata !DIExpression()), !dbg !5729
  %exitcond.not = icmp eq i64 %inc, %count, !dbg !5730
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !5733, !llvm.loop !5737

for.end:                                          ; preds = %for.body, %entry
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !5739, !tbaa !5740
  %sub = sub i64 %0, %count, !dbg !5739
  store i64 %sub, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !5739, !tbaa !5740
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.84, i64 0, i64 0), i64 noundef %count, i64 noundef %page) #22, !dbg !5741
  ret void, !dbg !5742
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeIOJob(%struct.iojob* noundef %j) #0 !dbg !5743 {
entry:
  call void @llvm.dbg.value(metadata %struct.iojob* %j, metadata !5745, metadata !DIExpression()), !dbg !5746
  %type = getelementptr inbounds %struct.iojob, %struct.iojob* %j, i64 0, i32 0, !dbg !5747
  %0 = load i32, i32* %type, align 8, !dbg !5747, !tbaa !5591
  %switch = icmp ult i32 %0, 3, !dbg !5749
  br i1 %switch, label %land.lhs.true, label %if.end, !dbg !5749

land.lhs.true:                                    ; preds = %entry
  %val = getelementptr inbounds %struct.iojob, %struct.iojob* %j, i64 0, i32 3, !dbg !5750
  %1 = load %struct.redisObject*, %struct.redisObject** %val, align 8, !dbg !5750, !tbaa !5606
  %cmp6.not = icmp eq %struct.redisObject* %1, null, !dbg !5751
  br i1 %cmp6.not, label %if.end, label %if.then, !dbg !5752

if.then:                                          ; preds = %land.lhs.true
  %2 = bitcast %struct.redisObject* %1 to i8*, !dbg !5753
  tail call void @decrRefCount(i8* noundef nonnull %2) #22, !dbg !5754
  br label %if.end, !dbg !5754

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %3 = bitcast %struct.iojob* %j to i8*, !dbg !5755
  tail call void @zfree(i8* noundef %3) #23, !dbg !5756
  ret void, !dbg !5757
}

declare !dbg !5758 dso_local i32 @usleep(i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @vmMarkPageFree(i64 noundef %page) #0 !dbg !5762 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !5766, metadata !DIExpression()), !dbg !5769
  call void @llvm.dbg.value(metadata i64 %page, metadata !5767, metadata !DIExpression(DW_OP_constu, 8, DW_OP_div, DW_OP_stack_value)), !dbg !5769
  call void @llvm.dbg.value(metadata i64 %page, metadata !5768, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5769
  %call = tail call i32 @vmFreePage(i64 noundef %page) #22, !dbg !5770
  %cmp = icmp eq i32 %call, 0, !dbg !5770
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5770

cond.false:                                       ; preds = %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 8962) #22, !dbg !5770
  tail call void @_exit(i32 noundef 1) #26, !dbg !5770
  unreachable, !dbg !5770

cond.end:                                         ; preds = %entry
  %0 = trunc i64 %page to i8, !dbg !5771
  %conv = and i8 %0, 7, !dbg !5771
  call void @llvm.dbg.value(metadata i64 %page, metadata !5768, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5769
  %div = sdiv i64 %page, 8, !dbg !5772
  call void @llvm.dbg.value(metadata i64 %div, metadata !5767, metadata !DIExpression()), !dbg !5769
  %shl = shl nuw i8 1, %conv, !dbg !5773
  %neg = xor i8 %shl, -1, !dbg !5774
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67), align 8, !dbg !5775, !tbaa !5776
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %div, !dbg !5777
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5778, !tbaa !795
  %and3 = and i8 %2, %neg, !dbg !5778
  store i8 %and3, i8* %arrayidx, align 1, !dbg !5778, !tbaa !795
  ret void, !dbg !5779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i32 @vmFreePage(i64 noundef %page) #16 !dbg !5780 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !5784, metadata !DIExpression()), !dbg !5787
  %div = sdiv i64 %page, 8, !dbg !5788
  call void @llvm.dbg.value(metadata i64 %div, metadata !5785, metadata !DIExpression()), !dbg !5787
  %0 = trunc i64 %page to i32, !dbg !5789
  %conv = and i32 %0, 7, !dbg !5789
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5786, metadata !DIExpression()), !dbg !5787
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67), align 8, !dbg !5790, !tbaa !5776
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %div, !dbg !5791
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5791, !tbaa !795
  %conv1 = zext i8 %2 to i32, !dbg !5791
  %3 = xor i32 %conv1, -1, !dbg !5792
  %4 = lshr i32 %3, %conv, !dbg !5792
  %5 = and i32 %4, 1, !dbg !5792
  ret i32 %5, !dbg !5793
}

; Function Attrs: noinline nounwind uwtable
define internal void @spawnIOThread() #0 !dbg !5794 {
entry:
  %thread = alloca i64, align 8
  %mask = alloca %struct.__sigset_t, align 8
  %omask = alloca %struct.__sigset_t, align 8
  %0 = bitcast i64* %thread to i8*, !dbg !5800
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5800
  %1 = bitcast %struct.__sigset_t* %mask to i8*, !dbg !5801
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !5801
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %mask, metadata !5797, metadata !DIExpression()), !dbg !5802
  %2 = bitcast %struct.__sigset_t* %omask to i8*, !dbg !5801
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %2) #24, !dbg !5801
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %omask, metadata !5798, metadata !DIExpression()), !dbg !5803
  %call = call i32 @sigemptyset(%struct.__sigset_t* noundef nonnull %mask) #23, !dbg !5804
  %call1 = call i32 @sigaddset(%struct.__sigset_t* noundef nonnull %mask, i32 noundef 17) #23, !dbg !5805
  %call2 = call i32 @sigaddset(%struct.__sigset_t* noundef nonnull %mask, i32 noundef 1) #23, !dbg !5806
  %call3 = call i32 @sigaddset(%struct.__sigset_t* noundef nonnull %mask, i32 noundef 13) #23, !dbg !5807
  %call4 = call i32 @pthread_sigmask(i32 noundef 2, %struct.__sigset_t* noundef nonnull %mask, %struct.__sigset_t* noundef nonnull %omask) #23, !dbg !5808
  call void @llvm.dbg.value(metadata i64* %thread, metadata !5796, metadata !DIExpression(DW_OP_deref)), !dbg !5809
  %call510 = call i32 @pthread_create(i64* noundef nonnull %thread, %union.pthread_attr_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76), i8* (i8*)* noundef nonnull @IOThreadEntryPoint, i8* noundef null) #23, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %call510, metadata !5799, metadata !DIExpression()), !dbg !5809
  %cmp.not11 = icmp eq i32 %call510, 0, !dbg !5811
  br i1 %cmp.not11, label %while.end, label %while.body, !dbg !5812

while.body:                                       ; preds = %entry, %while.body
  %call512 = phi i32 [ %call5, %while.body ], [ %call510, %entry ]
  %call6 = call i8* @strerror(i32 noundef %call512) #23, !dbg !5813
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0), i8* noundef %call6) #22, !dbg !5815
  %call7 = call i32 @usleep(i32 noundef 1000000) #23, !dbg !5816
  call void @llvm.dbg.value(metadata i64* %thread, metadata !5796, metadata !DIExpression(DW_OP_deref)), !dbg !5809
  %call5 = call i32 @pthread_create(i64* noundef nonnull %thread, %union.pthread_attr_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76), i8* (i8*)* noundef nonnull @IOThreadEntryPoint, i8* noundef null) #23, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %call5, metadata !5799, metadata !DIExpression()), !dbg !5809
  %cmp.not = icmp eq i32 %call5, 0, !dbg !5811
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !5812, !llvm.loop !5817

while.end:                                        ; preds = %while.body, %entry
  %call8 = call i32 @pthread_sigmask(i32 noundef 2, %struct.__sigset_t* noundef nonnull %omask, %struct.__sigset_t* noundef null) #23, !dbg !5819
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !5820, !tbaa !5713
  %inc = add nsw i32 %3, 1, !dbg !5820
  store i32 %inc, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !5820, !tbaa !5713
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %2) #24, !dbg !5821
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !5821
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !5821
  ret void, !dbg !5821
}

; Function Attrs: nounwind
declare !dbg !5822 dso_local i32 @sigemptyset(%struct.__sigset_t* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !5826 dso_local i32 @sigaddset(%struct.__sigset_t* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !5829 dso_local i32 @pthread_sigmask(i32 noundef, %struct.__sigset_t* noundef, %struct.__sigset_t* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !5838 dso_local i32 @pthread_create(i64* noundef, %union.pthread_attr_t* noundef, i8* (i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal noalias i8* @IOThreadEntryPoint(i8* nocapture noundef readnone %arg) #0 !dbg !5846 {
entry:
  call void @llvm.dbg.value(metadata i8* %arg, metadata !5848, metadata !DIExpression()), !dbg !5856
  %call = tail call i64 @pthread_self() #25, !dbg !5857
  %call1 = tail call i32 @pthread_detach(i64 noundef %call) #23, !dbg !5858
  br label %while.cond, !dbg !5859

while.cond:                                       ; preds = %if.end33, %entry
  tail call void @lockThreadedIO() #22, !dbg !5860
  %0 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !5861, !tbaa !5634
  %len = getelementptr inbounds %struct.list, %struct.list* %0, i64 0, i32 5, !dbg !5861
  %1 = load i32, i32* %len, align 8, !dbg !5861, !tbaa !1358
  %cmp = icmp eq i32 %1, 0, !dbg !5863
  br i1 %cmp, label %if.then, label %if.end, !dbg !5864

if.then:                                          ; preds = %while.cond
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.88, i64 0, i64 0), i64 noundef %call) #22, !dbg !5865
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !5867, !tbaa !5713
  %dec = add nsw i32 %2, -1, !dbg !5867
  store i32 %dec, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !5867, !tbaa !5713
  tail call void @unlockThreadedIO() #22, !dbg !5868
  ret i8* null, !dbg !5869

if.end:                                           ; preds = %while.cond
  %head = getelementptr inbounds %struct.list, %struct.list* %0, i64 0, i32 0, !dbg !5870
  %3 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !5870, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %3, metadata !5850, metadata !DIExpression()), !dbg !5856
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %3, i64 0, i32 2, !dbg !5871
  %4 = load i8*, i8** %value, align 8, !dbg !5871, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %4, metadata !5849, metadata !DIExpression()), !dbg !5856
  tail call void @listDelNode(%struct.list* noundef nonnull %0, %struct.listNode* noundef %3) #23, !dbg !5872
  %thread = getelementptr inbounds i8, i8* %4, i64 56, !dbg !5873
  %5 = bitcast i8* %thread to i64*, !dbg !5873
  store i64 %call, i64* %5, align 8, !dbg !5874, !tbaa !5612
  %6 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5875, !tbaa !5636
  %call4 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %6, i8* noundef %4) #23, !dbg !5876
  %7 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5877, !tbaa !5636
  %tail = getelementptr inbounds %struct.list, %struct.list* %7, i64 0, i32 1, !dbg !5877
  %8 = load %struct.listNode*, %struct.listNode** %tail, align 8, !dbg !5877, !tbaa !5878
  call void @llvm.dbg.value(metadata %struct.listNode* %8, metadata !5850, metadata !DIExpression()), !dbg !5856
  tail call void @unlockThreadedIO() #22, !dbg !5879
  %type = bitcast i8* %4 to i32*, !dbg !5880
  %9 = load i32, i32* %type, align 8, !dbg !5880, !tbaa !5591
  %key = getelementptr inbounds i8, i8* %4, i64 16, !dbg !5881
  %10 = bitcast i8* %key to %struct.redisObject**, !dbg !5881
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !5881, !tbaa !5599
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !5882
  %12 = load i8*, i8** %ptr, align 8, !dbg !5882, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.89, i64 0, i64 0), i64 noundef %call, i32 noundef %9, i8* noundef %4, i8* noundef %12) #22, !dbg !5883
  %13 = load i32, i32* %type, align 8, !dbg !5884, !tbaa !5591
  switch i32 %13, label %if.end33 [
    i32 0, label %if.then8
    i32 1, label %if.then14
    i32 2, label %if.then23
  ], !dbg !5885

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %4, metadata !5849, metadata !DIExpression()), !dbg !5856
  %page = getelementptr inbounds i8, i8* %4, i64 32, !dbg !5886
  %14 = bitcast i8* %page to i64*, !dbg !5886
  %15 = load i64, i64* %14, align 8, !dbg !5886, !tbaa !5603
  %16 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !5888, !tbaa !5599
  %vtype = getelementptr inbounds %struct.redisObject, %struct.redisObject* %16, i64 0, i32 4, !dbg !5889
  %17 = load i8, i8* %vtype, align 1, !dbg !5889, !tbaa !5890
  %conv = zext i8 %17 to i32, !dbg !5891
  %call10 = tail call %struct.redisObject* @vmReadObjectFromSwap(i64 noundef %15, i32 noundef %conv) #22, !dbg !5892
  %val = getelementptr inbounds i8, i8* %4, i64 24, !dbg !5893
  %18 = bitcast i8* %val to %struct.redisObject**, !dbg !5893
  store %struct.redisObject* %call10, %struct.redisObject** %18, align 8, !dbg !5894, !tbaa !5606
  br label %if.end33, !dbg !5895

if.then14:                                        ; preds = %if.end
  %call15 = tail call %struct._IO_FILE* @fopen64(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.91, i64 0, i64 0)) #23, !dbg !5896
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call15, metadata !5851, metadata !DIExpression()), !dbg !5897
  %val16 = getelementptr inbounds i8, i8* %4, i64 24, !dbg !5898
  %19 = bitcast i8* %val16 to %struct.redisObject**, !dbg !5898
  %20 = load %struct.redisObject*, %struct.redisObject** %19, align 8, !dbg !5898, !tbaa !5606
  %call17 = tail call i64 @rdbSavedObjectPages(%struct.redisObject* noundef %20, %struct._IO_FILE* noundef %call15) #22, !dbg !5899
  %pages = getelementptr inbounds i8, i8* %4, i64 40, !dbg !5900
  %21 = bitcast i8* %pages to i64*, !dbg !5900
  store i64 %call17, i64* %21, align 8, !dbg !5901, !tbaa !5673
  %call18 = tail call i32 @fclose(%struct._IO_FILE* noundef %call15) #23, !dbg !5902
  br label %if.end33, !dbg !5903

if.then23:                                        ; preds = %if.end
  %val24 = getelementptr inbounds i8, i8* %4, i64 24, !dbg !5904
  %22 = bitcast i8* %val24 to %struct.redisObject**, !dbg !5904
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !5904, !tbaa !5606
  %page25 = getelementptr inbounds i8, i8* %4, i64 32, !dbg !5908
  %24 = bitcast i8* %page25 to i64*, !dbg !5908
  %25 = load i64, i64* %24, align 8, !dbg !5908, !tbaa !5603
  %call26 = tail call i32 @vmWriteObjectOnSwap(%struct.redisObject* noundef %23, i64 noundef %25) #22, !dbg !5909
  %cmp27 = icmp eq i32 %call26, -1, !dbg !5910
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !5911

if.then29:                                        ; preds = %if.then23
  %canceled = getelementptr inbounds i8, i8* %4, i64 48, !dbg !5912
  %26 = bitcast i8* %canceled to i32*, !dbg !5912
  store i32 1, i32* %26, align 8, !dbg !5913, !tbaa !5609
  br label %if.end33, !dbg !5914

if.end33:                                         ; preds = %if.end, %if.then14, %if.then23, %if.then29, %if.then8
  %27 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !5915, !tbaa !5599
  %ptr36 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %27, i64 0, i32 0, !dbg !5916
  %28 = load i8*, i8** %ptr36, align 8, !dbg !5916, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.92, i64 0, i64 0), i64 noundef %call, i8* noundef nonnull %4, i8* noundef %28) #22, !dbg !5917
  tail call void @lockThreadedIO() #22, !dbg !5918
  %29 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5919, !tbaa !5636
  tail call void @listDelNode(%struct.list* noundef %29, %struct.listNode* noundef %8) #23, !dbg !5920
  %30 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !5921, !tbaa !5638
  %call37 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %30, i8* noundef nonnull %4) #23, !dbg !5922
  tail call void @unlockThreadedIO() #22, !dbg !5923
  %31 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 80), align 4, !dbg !5924, !tbaa !5925
  %call38 = tail call i64 @write(i32 noundef %31, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i64 0, i64 0), i64 noundef 1) #23, !dbg !5924
  %cmp39 = icmp eq i64 %call38, 1, !dbg !5924
  br i1 %cmp39, label %while.cond, label %cond.false, !dbg !5924, !llvm.loop !5926

cond.false:                                       ; preds = %if.end33
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.94, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9663, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.IOThreadEntryPoint, i64 0, i64 0)) #26, !dbg !5924
  unreachable, !dbg !5924
}

; Function Attrs: nounwind
declare !dbg !5928 dso_local i32 @pthread_detach(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare !dbg !5931 dso_local i64 @pthread_self() local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @vmReadObjectFromSwap(i64 noundef %page, i32 noundef %type) #0 !dbg !5934 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !5938, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i32 %type, metadata !5939, metadata !DIExpression()), !dbg !5941
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !5942, !tbaa !1384
  %tobool.not = icmp eq i32 %0, 0, !dbg !5944
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !5945

if.then:                                          ; preds = %entry
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75)) #23, !dbg !5946
  br label %if.end, !dbg !5946

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !5947, !tbaa !5949
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !5950, !tbaa !2218
  %mul = mul nsw i64 %2, %page, !dbg !5951
  %call1 = tail call i32 @fseeko64(%struct._IO_FILE* noundef %1, i64 noundef %mul, i32 noundef 0) #23, !dbg !5952
  %cmp = icmp eq i32 %call1, -1, !dbg !5953
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !5954

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32* @__errno_location() #25, !dbg !5955
  %3 = load i32, i32* %call3, align 4, !dbg !5955, !tbaa !926
  %call4 = tail call i8* @strerror(i32 noundef %3) #23, !dbg !5957
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.95, i64 0, i64 0), i8* noundef %call4) #22, !dbg !5958
  tail call void @_exit(i32 noundef 1) #26, !dbg !5959
  unreachable, !dbg !5959

if.end5:                                          ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !5960, !tbaa !5949
  %call6 = tail call %struct.redisObject* @rdbLoadObject(i32 noundef %type, %struct._IO_FILE* noundef %4) #22, !dbg !5961
  call void @llvm.dbg.value(metadata %struct.redisObject* %call6, metadata !5940, metadata !DIExpression()), !dbg !5941
  %cmp7 = icmp eq %struct.redisObject* %call6, null, !dbg !5962
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !5964

if.then8:                                         ; preds = %if.end5
  %call9 = tail call i32* @__errno_location() #25, !dbg !5965
  %5 = load i32, i32* %call9, align 4, !dbg !5965, !tbaa !926
  %call10 = tail call i8* @strerror(i32 noundef %5) #23, !dbg !5967
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([89 x i8], [89 x i8]* @.str.96, i64 0, i64 0), i8* noundef %call10) #22, !dbg !5968
  tail call void @_exit(i32 noundef 1) #26, !dbg !5969
  unreachable, !dbg !5969

if.end11:                                         ; preds = %if.end5
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !5970, !tbaa !1384
  %tobool12.not = icmp eq i32 %6, 0, !dbg !5972
  br i1 %tobool12.not, label %if.end15, label %if.then13, !dbg !5973

if.then13:                                        ; preds = %if.end11
  %call14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75)) #23, !dbg !5974
  br label %if.end15, !dbg !5974

if.end15:                                         ; preds = %if.then13, %if.end11
  ret %struct.redisObject* %call6, !dbg !5975
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @rdbSavedObjectPages(%struct.redisObject* noundef %o, %struct._IO_FILE* noundef %fp) #0 !dbg !5976 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !5980, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !5981, metadata !DIExpression()), !dbg !5983
  %call = tail call i64 @rdbSavedObjectLen(%struct.redisObject* noundef %o, %struct._IO_FILE* noundef %fp) #22, !dbg !5984
  call void @llvm.dbg.value(metadata i64 %call, metadata !5982, metadata !DIExpression()), !dbg !5983
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !5985, !tbaa !2218
  %sub = add i64 %call, -1, !dbg !5986
  %add = add i64 %sub, %0, !dbg !5987
  %div = sdiv i64 %add, %0, !dbg !5988
  ret i64 %div, !dbg !5989
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmWriteObjectOnSwap(%struct.redisObject* noundef %o, i64 noundef %page) #0 !dbg !5990 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !5994, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata i64 %page, metadata !5995, metadata !DIExpression()), !dbg !5996
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !5997, !tbaa !1384
  %tobool.not = icmp eq i32 %0, 0, !dbg !5999
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !6000

if.then:                                          ; preds = %entry
  %call = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75)) #23, !dbg !6001
  br label %if.end, !dbg !6001

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !6002, !tbaa !5949
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !6004, !tbaa !2218
  %mul = mul nsw i64 %2, %page, !dbg !6005
  %call1 = tail call i32 @fseeko64(%struct._IO_FILE* noundef %1, i64 noundef %mul, i32 noundef 0) #23, !dbg !6006
  %cmp = icmp eq i32 %call1, -1, !dbg !6007
  br i1 %cmp, label %if.then2, label %if.end9, !dbg !6008

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !6009, !tbaa !1384
  %tobool3.not = icmp eq i32 %3, 0, !dbg !6012
  br i1 %tobool3.not, label %if.end6, label %if.then4, !dbg !6013

if.then4:                                         ; preds = %if.then2
  %call5 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75)) #23, !dbg !6014
  br label %if.end6, !dbg !6014

if.end6:                                          ; preds = %if.then4, %if.then2
  %call7 = tail call i32* @__errno_location() #25, !dbg !6015
  %4 = load i32, i32* %call7, align 4, !dbg !6015, !tbaa !926
  %call8 = tail call i8* @strerror(i32 noundef %4) #23, !dbg !6016
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.106, i64 0, i64 0), i8* noundef %call8) #22, !dbg !6017
  br label %return, !dbg !6018

if.end9:                                          ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !6019, !tbaa !5949
  %call10 = tail call i32 @rdbSaveObject(%struct._IO_FILE* noundef %5, %struct.redisObject* noundef %o) #22, !dbg !6020
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !6021, !tbaa !5949
  %call11 = tail call i32 @fflush(%struct._IO_FILE* noundef %6) #23, !dbg !6022
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !6023, !tbaa !1384
  %tobool12.not = icmp eq i32 %7, 0, !dbg !6025
  br i1 %tobool12.not, label %return, label %if.then13, !dbg !6026

if.then13:                                        ; preds = %if.end9
  %call14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75)) #23, !dbg !6027
  br label %return, !dbg !6027

return:                                           ; preds = %if.end9, %if.then13, %if.end6
  %retval.0 = phi i32 [ -1, %if.end6 ], [ 0, %if.then13 ], [ 0, %if.end9 ], !dbg !5996
  ret i32 %retval.0, !dbg !6028
}

declare !dbg !6029 dso_local i32 @fseeko64(%struct._IO_FILE* noundef, i64 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbLoadObject(i32 noundef %type, %struct._IO_FILE* noundef %fp) #0 !dbg !6032 {
entry:
  call void @llvm.dbg.value(metadata i32 %type, metadata !6036, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6037, metadata !DIExpression()), !dbg !6061
  %call = tail call i64 @ftell(%struct._IO_FILE* noundef %fp) #23, !dbg !6062
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.97, i64 0, i64 0), i32 noundef %type, i64 noundef %call) #22, !dbg !6063
  %cmp = icmp eq i32 %type, 0, !dbg !6064
  br i1 %cmp, label %if.then, label %if.else, !dbg !6065

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.redisObject* @rdbLoadEncodedStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6066
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !6038, metadata !DIExpression()), !dbg !6061
  %cmp2 = icmp eq %struct.redisObject* %call1, null, !dbg !6069
  br i1 %cmp2, label %cleanup156, label %if.end, !dbg !6070

if.end:                                           ; preds = %if.then
  %call4 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef nonnull %call1) #22, !dbg !6071
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !6038, metadata !DIExpression()), !dbg !6061
  br label %cleanup156, !dbg !6072

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i32 %type, 1, !dbg !6073
  %cmp6 = icmp eq i32 %type, 2
  %0 = add i32 %type, -1, !dbg !6074
  %1 = icmp ult i32 %0, 2, !dbg !6074
  br i1 %1, label %if.then7, label %if.else38, !dbg !6074

if.then7:                                         ; preds = %if.else
  %call8 = tail call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef null) #22, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6039, metadata !DIExpression()), !dbg !6077
  %cmp9 = icmp eq i32 %call8, -1, !dbg !6078
  br i1 %cmp9, label %cleanup156, label %if.end11, !dbg !6079

if.end11:                                         ; preds = %if.then7
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !6080

cond.true:                                        ; preds = %if.end11
  %call13 = tail call %struct.redisObject* @createListObject() #22, !dbg !6081
  br label %cond.end, !dbg !6080

cond.false:                                       ; preds = %if.end11
  %call14 = tail call %struct.redisObject* @createSetObject() #22, !dbg !6082
  br label %cond.end, !dbg !6080

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.redisObject* [ %call13, %cond.true ], [ %call14, %cond.false ], !dbg !6080
  call void @llvm.dbg.value(metadata %struct.redisObject* %cond, metadata !6038, metadata !DIExpression()), !dbg !6061
  %cmp16 = icmp ugt i32 %call8, 4
  %or.cond163 = select i1 %cmp6, i1 %cmp16, i1 false, !dbg !6083
  br i1 %or.cond163, label %if.end19.thread, label %if.end19, !dbg !6083

if.end19.thread:                                  ; preds = %cond.end
  %2 = bitcast %struct.redisObject* %cond to %struct.dict**, !dbg !6085
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !6085, !tbaa !1328
  %conv = zext i32 %call8 to i64, !dbg !6086
  %call18 = tail call i32 @dictExpand(%struct.dict* noundef %3, i64 noundef %conv) #23, !dbg !6087
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6039, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6077
  br label %while.body.lr.ph, !dbg !6088

if.end19:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6039, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6077
  %tobool.not255 = icmp eq i32 %call8, 0, !dbg !6088
  br i1 %tobool.not255, label %cleanup156, label %while.body.lr.ph, !dbg !6088

while.body.lr.ph:                                 ; preds = %if.end19.thread, %if.end19
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6039, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6077
  %4 = bitcast %struct.redisObject* %cond to %struct.dict**
  %5 = bitcast %struct.redisObject* %cond to %struct.list**
  br label %while.body, !dbg !6088

while.body:                                       ; preds = %while.body.lr.ph, %cleanup
  %dec256.in = phi i32 [ %call8, %while.body.lr.ph ], [ %dec256, %cleanup ]
  %dec256 = add i32 %dec256.in, -1, !dbg !6089
  %call20 = tail call %struct.redisObject* @rdbLoadEncodedStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6090
  call void @llvm.dbg.value(metadata %struct.redisObject* %call20, metadata !6043, metadata !DIExpression()), !dbg !6092
  %cmp21 = icmp eq %struct.redisObject* %call20, null, !dbg !6093
  br i1 %cmp21, label %cleanup156, label %if.end24, !dbg !6094

if.end24:                                         ; preds = %while.body
  %call25 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef nonnull %call20) #22, !dbg !6095
  call void @llvm.dbg.value(metadata %struct.redisObject* %call25, metadata !6043, metadata !DIExpression()), !dbg !6092
  br i1 %cmp5, label %if.then28, label %if.else31, !dbg !6096

if.then28:                                        ; preds = %if.end24
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !6097, !tbaa !1328
  %7 = bitcast %struct.redisObject* %call25 to i8*, !dbg !6100
  %call30 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %6, i8* noundef %7) #23, !dbg !6101
  br label %cleanup, !dbg !6102

if.else31:                                        ; preds = %if.end24
  %8 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !6103, !tbaa !1328
  %9 = bitcast %struct.redisObject* %call25 to i8*, !dbg !6105
  %call33 = tail call i32 @dictAdd(%struct.dict* noundef %8, i8* noundef %9, i8* noundef null) #23, !dbg !6106
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %if.else31
  call void @llvm.dbg.value(metadata i32 %dec256, metadata !6039, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6077
  %tobool.not = icmp eq i32 %dec256, 0, !dbg !6088
  br i1 %tobool.not, label %cleanup156, label %while.body, !dbg !6088, !llvm.loop !6107

if.else38:                                        ; preds = %if.else
  switch i32 %type, label %if.else151 [
    i32 3, label %if.then41
    i32 4, label %if.then80
  ], !dbg !6109

if.then41:                                        ; preds = %if.else38
  %call42 = tail call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef null) #22, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %call42, metadata !6045, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6112
  %cmp44 = icmp eq i32 %call42, -1, !dbg !6113
  br i1 %cmp44, label %cleanup156, label %if.end47, !dbg !6114

if.end47:                                         ; preds = %if.then41
  call void @llvm.dbg.value(metadata i32 %call42, metadata !6045, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6112
  %call48 = tail call %struct.redisObject* @createZsetObject() #22, !dbg !6115
  call void @llvm.dbg.value(metadata %struct.redisObject* %call48, metadata !6038, metadata !DIExpression()), !dbg !6061
  %10 = bitcast %struct.redisObject* %call48 to %struct.zset**, !dbg !6116
  %11 = load %struct.zset*, %struct.zset** %10, align 8, !dbg !6116, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %11, metadata !6048, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %call42, metadata !6045, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6112
  %tobool52.not249 = icmp eq i32 %call42, 0, !dbg !6117
  br i1 %tobool52.not249, label %cleanup156, label %while.body53.lr.ph, !dbg !6117

while.body53.lr.ph:                               ; preds = %if.end47
  %conv43 = zext i32 %call42 to i64, !dbg !6110
  call void @llvm.dbg.value(metadata i64 %conv43, metadata !6045, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6112
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %11, i64 0, i32 0
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %11, i64 0, i32 1
  br label %while.body53, !dbg !6117

while.body53:                                     ; preds = %while.body53.lr.ph, %if.end66
  %dec51250.in = phi i64 [ %conv43, %while.body53.lr.ph ], [ %dec51250, %if.end66 ]
  %dec51250 = add nsw i64 %dec51250.in, -1, !dbg !6118
  %call55 = tail call i8* @zmalloc(i64 noundef 8) #23, !dbg !6119
  %12 = bitcast i8* %call55 to double*, !dbg !6119
  call void @llvm.dbg.value(metadata double* %12, metadata !6051, metadata !DIExpression()), !dbg !6120
  %call56 = tail call %struct.redisObject* @rdbLoadEncodedStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6121
  call void @llvm.dbg.value(metadata %struct.redisObject* %call56, metadata !6049, metadata !DIExpression()), !dbg !6120
  %cmp57 = icmp eq %struct.redisObject* %call56, null, !dbg !6123
  br i1 %cmp57, label %cleanup156, label %if.end60, !dbg !6124, !llvm.loop !6125

if.end60:                                         ; preds = %while.body53
  %call61 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef nonnull %call56) #22, !dbg !6127
  call void @llvm.dbg.value(metadata %struct.redisObject* %call61, metadata !6049, metadata !DIExpression()), !dbg !6120
  %call62 = tail call i32 @rdbLoadDoubleValue(%struct._IO_FILE* noundef %fp, double* noundef %12) #22, !dbg !6128
  %cmp63 = icmp eq i32 %call62, -1, !dbg !6130
  br i1 %cmp63, label %cleanup156, label %if.end66, !dbg !6131, !llvm.loop !6125

if.end66:                                         ; preds = %if.end60
  %13 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !6132, !tbaa !6133
  %14 = bitcast %struct.redisObject* %call61 to i8*, !dbg !6135
  %call67 = tail call i32 @dictAdd(%struct.dict* noundef %13, i8* noundef %14, i8* noundef %call55) #23, !dbg !6136
  %15 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !6137, !tbaa !6138
  %16 = load double, double* %12, align 8, !dbg !6139, !tbaa !6140
  tail call void @zslInsert(%struct.zskiplist* noundef %15, double noundef %16, %struct.redisObject* noundef %call61) #22, !dbg !6141
  tail call void @incrRefCount(%struct.redisObject* noundef %call61) #22, !dbg !6142
  call void @llvm.dbg.value(metadata i64 %dec51250, metadata !6045, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6112
  %tobool52.not = icmp eq i64 %dec51250, 0, !dbg !6117
  br i1 %tobool52.not, label %cleanup156, label %while.body53, !dbg !6117

if.then80:                                        ; preds = %if.else38
  %call81 = tail call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef null) #22, !dbg !6143
  %conv82 = zext i32 %call81 to i64, !dbg !6143
  call void @llvm.dbg.value(metadata i64 %conv82, metadata !6052, metadata !DIExpression()), !dbg !6145
  %cmp83 = icmp eq i32 %call81, -1, !dbg !6146
  br i1 %cmp83, label %cleanup156, label %if.end86, !dbg !6147

if.end86:                                         ; preds = %if.then80
  %call87 = tail call %struct.redisObject* @createHashObject() #22, !dbg !6148
  call void @llvm.dbg.value(metadata %struct.redisObject* %call87, metadata !6038, metadata !DIExpression()), !dbg !6061
  %17 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61), align 8, !dbg !6149, !tbaa !2245
  %cmp88 = icmp ult i64 %17, %conv82, !dbg !6151
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !6152

if.then90:                                        ; preds = %if.end86
  tail call void @convertToRealHash(%struct.redisObject* noundef %call87) #22, !dbg !6153
  br label %if.end91, !dbg !6153

if.end91:                                         ; preds = %if.then90, %if.end86
  call void @llvm.dbg.value(metadata i64 %conv82, metadata !6052, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6145
  %tobool94.not244 = icmp eq i32 %call81, 0, !dbg !6154
  br i1 %tobool94.not244, label %cleanup156, label %while.body95.lr.ph, !dbg !6154

while.body95.lr.ph:                               ; preds = %if.end91
  call void @llvm.dbg.value(metadata i64 %conv82, metadata !6052, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6145
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call87, i64 0, i32 2
  %ptr126 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call87, i64 0, i32 0
  %18 = bitcast %struct.redisObject* %call87 to %struct.dict**
  br label %while.body95, !dbg !6154

while.body95:                                     ; preds = %while.body95.lr.ph, %cleanup143
  %dec93245.in = phi i64 [ %conv82, %while.body95.lr.ph ], [ %dec93245, %cleanup143 ]
  %dec93245 = add nsw i64 %dec93245.in, -1, !dbg !6155
  %call96 = tail call %struct.redisObject* @rdbLoadStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6156
  call void @llvm.dbg.value(metadata %struct.redisObject* %call96, metadata !6055, metadata !DIExpression()), !dbg !6158
  %cmp97 = icmp eq %struct.redisObject* %call96, null, !dbg !6159
  br i1 %cmp97, label %cleanup156, label %if.end100, !dbg !6160

if.end100:                                        ; preds = %while.body95
  %call101 = tail call %struct.redisObject* @rdbLoadStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6161
  call void @llvm.dbg.value(metadata %struct.redisObject* %call101, metadata !6057, metadata !DIExpression()), !dbg !6158
  %cmp102 = icmp eq %struct.redisObject* %call101, null, !dbg !6163
  br i1 %cmp102, label %cleanup156, label %if.end105, !dbg !6164

if.end105:                                        ; preds = %if.end100
  %19 = load i8, i8* %encoding, align 1, !dbg !6165, !tbaa !1529
  %cmp107.not = icmp eq i8 %19, 3, !dbg !6167
  br i1 %cmp107.not, label %if.else137, label %land.lhs.true109, !dbg !6168

land.lhs.true109:                                 ; preds = %if.end105
  %ptr110 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call96, i64 0, i32 0, !dbg !6169
  %20 = load i8*, i8** %ptr110, align 8, !dbg !6169, !tbaa !1328
  %call111 = tail call i64 @sdslen(i8* noundef %20) #23, !dbg !6170
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62), align 8, !dbg !6171, !tbaa !2254
  %cmp112 = icmp ugt i64 %call111, %21, !dbg !6172
  br i1 %cmp112, label %if.then119, label %lor.lhs.false114, !dbg !6173

lor.lhs.false114:                                 ; preds = %land.lhs.true109
  %ptr115 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call101, i64 0, i32 0, !dbg !6174
  %22 = load i8*, i8** %ptr115, align 8, !dbg !6174, !tbaa !1328
  %call116 = tail call i64 @sdslen(i8* noundef %22) #23, !dbg !6175
  %23 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62), align 8, !dbg !6176, !tbaa !2254
  %cmp117 = icmp ugt i64 %call116, %23, !dbg !6177
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !6178

if.then119:                                       ; preds = %lor.lhs.false114, %land.lhs.true109
  tail call void @convertToRealHash(%struct.redisObject* noundef nonnull %call87) #22, !dbg !6179
  br label %if.end120, !dbg !6181

if.end120:                                        ; preds = %if.then119, %lor.lhs.false114
  %.pr = load i8, i8* %encoding, align 1, !dbg !6182, !tbaa !1529
  %cmp123 = icmp eq i8 %.pr, 2, !dbg !6183
  br i1 %cmp123, label %if.then125, label %if.else137, !dbg !6184

if.then125:                                       ; preds = %if.end120
  %24 = load i8*, i8** %ptr126, align 8, !dbg !6185, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %24, metadata !6058, metadata !DIExpression()), !dbg !6186
  %25 = load i8*, i8** %ptr110, align 8, !dbg !6187, !tbaa !1328
  %call129 = tail call i64 @sdslen(i8* noundef %25) #23, !dbg !6188
  %conv130 = trunc i64 %call129 to i32, !dbg !6188
  %ptr131 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call101, i64 0, i32 0, !dbg !6189
  %26 = load i8*, i8** %ptr131, align 8, !dbg !6189, !tbaa !1328
  %call133 = tail call i64 @sdslen(i8* noundef %26) #23, !dbg !6190
  %conv134 = trunc i64 %call133 to i32, !dbg !6190
  %call135 = tail call i8* @zipmapSet(i8* noundef %24, i8* noundef %25, i32 noundef %conv130, i8* noundef %26, i32 noundef %conv134, i32* noundef null) #23, !dbg !6191
  call void @llvm.dbg.value(metadata i8* %call135, metadata !6058, metadata !DIExpression()), !dbg !6186
  store i8* %call135, i8** %ptr126, align 8, !dbg !6192, !tbaa !1328
  %27 = bitcast %struct.redisObject* %call96 to i8*, !dbg !6193
  tail call void @decrRefCount(i8* noundef nonnull %27) #22, !dbg !6194
  %28 = bitcast %struct.redisObject* %call101 to i8*, !dbg !6195
  tail call void @decrRefCount(i8* noundef nonnull %28) #22, !dbg !6196
  br label %cleanup143, !dbg !6197

if.else137:                                       ; preds = %if.end105, %if.end120
  %call138 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef nonnull %call96) #22, !dbg !6198
  call void @llvm.dbg.value(metadata %struct.redisObject* %call138, metadata !6055, metadata !DIExpression()), !dbg !6158
  %call139 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef nonnull %call101) #22, !dbg !6200
  call void @llvm.dbg.value(metadata %struct.redisObject* %call139, metadata !6057, metadata !DIExpression()), !dbg !6158
  %29 = load %struct.dict*, %struct.dict** %18, align 8, !dbg !6201, !tbaa !1328
  %30 = bitcast %struct.redisObject* %call138 to i8*, !dbg !6202
  %31 = bitcast %struct.redisObject* %call139 to i8*, !dbg !6203
  %call141 = tail call i32 @dictAdd(%struct.dict* noundef %29, i8* noundef %30, i8* noundef %31) #23, !dbg !6204
  br label %cleanup143

cleanup143:                                       ; preds = %if.then125, %if.else137
  call void @llvm.dbg.value(metadata i64 %dec93245, metadata !6052, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6145
  %tobool94.not = icmp eq i64 %dec93245, 0, !dbg !6154
  br i1 %tobool94.not, label %cleanup156, label %while.body95, !dbg !6154, !llvm.loop !6205

if.else151:                                       ; preds = %if.else38
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 4064) #22, !dbg !6207
  tail call void @_exit(i32 noundef 1) #26, !dbg !6207
  unreachable, !dbg !6207

cleanup156:                                       ; preds = %cleanup143, %while.body95, %if.end100, %if.end66, %if.end60, %while.body53, %cleanup, %while.body, %if.end91, %if.end47, %if.end19, %if.then80, %if.then41, %if.then7, %if.end, %if.then
  %retval.9 = phi %struct.redisObject* [ null, %if.then ], [ %call4, %if.end ], [ null, %if.then7 ], [ null, %if.then41 ], [ null, %if.then80 ], [ %cond, %if.end19 ], [ %call48, %if.end47 ], [ %call87, %if.end91 ], [ %cond, %cleanup ], [ null, %while.body ], [ %call48, %if.end66 ], [ null, %if.end60 ], [ null, %while.body53 ], [ %call87, %cleanup143 ], [ null, %while.body95 ], [ null, %if.end100 ], !dbg !6061
  ret %struct.redisObject* %retval.9, !dbg !6209
}

declare !dbg !6210 dso_local i64 @ftell(%struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbLoadEncodedStringObject(%struct._IO_FILE* noundef %fp) #0 !dbg !6213 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6217, metadata !DIExpression()), !dbg !6218
  %call = tail call %struct.redisObject* @rdbGenericLoadStringObject(%struct._IO_FILE* noundef %fp, i32 noundef 1) #22, !dbg !6219
  ret %struct.redisObject* %call, !dbg !6220
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef writeonly %isencoded) #0 !dbg !6221 {
entry:
  %buf = alloca [2 x i8], align 1
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6225, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata i32* %isencoded, metadata !6226, metadata !DIExpression()), !dbg !6231
  %0 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6232
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24, !dbg !6232
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !6227, metadata !DIExpression()), !dbg !6233
  %1 = bitcast i32* %len to i8*, !dbg !6234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #24, !dbg !6234
  %tobool.not = icmp eq i32* %isencoded, null, !dbg !6235
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !6237

if.then:                                          ; preds = %entry
  store i32 0, i32* %isencoded, align 4, !dbg !6238, !tbaa !926
  br label %if.end, !dbg !6239

if.end:                                           ; preds = %if.then, %entry
  %call = call i64 @fread(i8* noundef nonnull %0, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6240
  %cmp = icmp eq i64 %call, 0, !dbg !6242
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !6243

if.end2:                                          ; preds = %if.end
  %2 = load i8, i8* %0, align 1, !dbg !6244, !tbaa !795
  %conv = zext i8 %2 to i32, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6230, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_stack_value)), !dbg !6231
  %cmp3 = icmp ult i8 %2, 64, !dbg !6245
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !6247

if.then5:                                         ; preds = %if.end2
  %and8 = and i32 %conv, 63, !dbg !6248
  br label %cleanup, !dbg !6250

if.else:                                          ; preds = %if.end2
  %3 = lshr i32 %conv, 6, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %3, metadata !6230, metadata !DIExpression()), !dbg !6231
  switch i32 %3, label %if.else33 [
    i32 3, label %if.then11
    i32 1, label %if.then21
  ], !dbg !6252

if.then11:                                        ; preds = %if.else
  br i1 %tobool.not, label %if.end14, label %if.then13, !dbg !6253

if.then13:                                        ; preds = %if.then11
  store i32 1, i32* %isencoded, align 4, !dbg !6256, !tbaa !926
  br label %if.end14, !dbg !6258

if.end14:                                         ; preds = %if.then13, %if.then11
  %4 = and i8 %2, 63, !dbg !6259
  %and17 = zext i8 %4 to i32, !dbg !6259
  br label %cleanup, !dbg !6260

if.then21:                                        ; preds = %if.else
  %add.ptr = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6261
  %call23 = call i64 @fread(i8* noundef nonnull %add.ptr, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6265
  %cmp24 = icmp eq i64 %call23, 0, !dbg !6266
  br i1 %cmp24, label %cleanup, label %if.end27, !dbg !6267

if.end27:                                         ; preds = %if.then21
  %5 = load i8, i8* %0, align 1, !dbg !6268, !tbaa !795
  %6 = and i8 %5, 63, !dbg !6269
  %and30 = zext i8 %6 to i32, !dbg !6269
  %shl = shl nuw nsw i32 %and30, 8, !dbg !6270
  %7 = load i8, i8* %add.ptr, align 1, !dbg !6271, !tbaa !795
  %conv32 = zext i8 %7 to i32, !dbg !6271
  %or = or i32 %shl, %conv32, !dbg !6272
  br label %cleanup, !dbg !6273

if.else33:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32* %len, metadata !6229, metadata !DIExpression(DW_OP_deref)), !dbg !6231
  %call34 = call i64 @fread(i8* noundef nonnull %1, i64 noundef 4, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6274
  %cmp35 = icmp eq i64 %call34, 0, !dbg !6277
  br i1 %cmp35, label %cleanup, label %if.end38, !dbg !6278

if.end38:                                         ; preds = %if.else33
  %8 = load i32, i32* %len, align 4, !dbg !6279, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %8, metadata !6229, metadata !DIExpression()), !dbg !6231
  %call39 = call fastcc i32 @__bswap_32(i32 noundef %8) #22, !dbg !6279
  br label %cleanup, !dbg !6280

cleanup:                                          ; preds = %if.else33, %if.then21, %if.end, %if.end38, %if.end27, %if.end14, %if.then5
  %retval.0 = phi i32 [ %and8, %if.then5 ], [ %and17, %if.end14 ], [ %or, %if.end27 ], [ %call39, %if.end38 ], [ -1, %if.end ], [ -1, %if.then21 ], [ -1, %if.else33 ], !dbg !6231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24, !dbg !6281
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24, !dbg !6281
  ret i32 %retval.0, !dbg !6281
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createListObject() #0 !dbg !6282 {
entry:
  %call = tail call %struct.list* @listCreate() #23, !dbg !6287
  call void @llvm.dbg.value(metadata %struct.list* %call, metadata !6286, metadata !DIExpression()), !dbg !6288
  %free = getelementptr inbounds %struct.list, %struct.list* %call, i64 0, i32 3, !dbg !6289
  store void (i8*)* @decrRefCount, void (i8*)** %free, align 8, !dbg !6289, !tbaa !1459
  %0 = bitcast %struct.list* %call to i8*, !dbg !6290
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 1, i8* noundef %0) #22, !dbg !6291
  ret %struct.redisObject* %call1, !dbg !6292
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createSetObject() #0 !dbg !6293 {
entry:
  %call = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @setDictType, i8* noundef null) #23, !dbg !6296
  call void @llvm.dbg.value(metadata %struct.dict* %call, metadata !6295, metadata !DIExpression()), !dbg !6297
  %0 = bitcast %struct.dict* %call to i8*, !dbg !6298
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 2, i8* noundef %0) #22, !dbg !6299
  ret %struct.redisObject* %call1, !dbg !6300
}

declare !dbg !6301 dso_local i32 @dictExpand(%struct.dict* noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createZsetObject() #0 !dbg !6304 {
entry:
  %call = tail call i8* @zmalloc(i64 noundef 16) #23, !dbg !6307
  call void @llvm.dbg.value(metadata i8* %call, metadata !6306, metadata !DIExpression()), !dbg !6308
  %call1 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @zsetDictType, i8* noundef null) #23, !dbg !6309
  %dict = bitcast i8* %call to %struct.dict**, !dbg !6310
  store %struct.dict* %call1, %struct.dict** %dict, align 8, !dbg !6311, !tbaa !6133
  %call2 = tail call %struct.zskiplist* @zslCreate() #22, !dbg !6312
  %zsl = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6313
  %0 = bitcast i8* %zsl to %struct.zskiplist**, !dbg !6313
  store %struct.zskiplist* %call2, %struct.zskiplist** %0, align 8, !dbg !6314, !tbaa !6138
  %call3 = tail call %struct.redisObject* @createObject(i32 noundef 3, i8* noundef %call) #22, !dbg !6315
  ret %struct.redisObject* %call3, !dbg !6316
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbLoadDoubleValue(%struct._IO_FILE* noundef %fp, double* noundef %val) #0 !dbg !6317 {
entry:
  %buf = alloca [128 x i8], align 16
  %len = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6321, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata double* %val, metadata !6322, metadata !DIExpression()), !dbg !6325
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !6326
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !6326
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !6323, metadata !DIExpression()), !dbg !6327
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %len) #24, !dbg !6328
  call void @llvm.dbg.value(metadata i8* %len, metadata !6324, metadata !DIExpression(DW_OP_deref)), !dbg !6325
  %call = call i64 @fread(i8* noundef nonnull %len, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6329
  %cmp = icmp eq i64 %call, 0, !dbg !6331
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6332

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %len, align 1, !dbg !6333, !tbaa !795
  call void @llvm.dbg.value(metadata i8 %1, metadata !6324, metadata !DIExpression()), !dbg !6325
  switch i8 %1, label %sw.default [
    i8 -1, label %sw.bb
    i8 -2, label %sw.bb1
    i8 -3, label %sw.bb2
  ], !dbg !6334

sw.bb:                                            ; preds = %if.end
  %2 = load double, double* @R_NegInf, align 8, !dbg !6335, !tbaa !6140
  store double %2, double* %val, align 8, !dbg !6337, !tbaa !6140
  br label %cleanup, !dbg !6338

sw.bb1:                                           ; preds = %if.end
  %3 = load double, double* @R_PosInf, align 8, !dbg !6339, !tbaa !6140
  store double %3, double* %val, align 8, !dbg !6340, !tbaa !6140
  br label %cleanup, !dbg !6341

sw.bb2:                                           ; preds = %if.end
  %4 = load double, double* @R_Nan, align 8, !dbg !6342, !tbaa !6140
  store double %4, double* %val, align 8, !dbg !6343, !tbaa !6140
  br label %cleanup, !dbg !6344

sw.default:                                       ; preds = %if.end
  %conv3 = zext i8 %1 to i64, !dbg !6345
  %call4 = call i64 @fread(i8* noundef nonnull %0, i64 noundef %conv3, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6347
  %cmp5 = icmp eq i64 %call4, 0, !dbg !6348
  br i1 %cmp5, label %cleanup, label %if.end8, !dbg !6349

if.end8:                                          ; preds = %sw.default
  %5 = load i8, i8* %len, align 1, !dbg !6350, !tbaa !795
  call void @llvm.dbg.value(metadata i8 %5, metadata !6324, metadata !DIExpression()), !dbg !6325
  %idxprom = zext i8 %5 to i64, !dbg !6351
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %idxprom, !dbg !6351
  store i8 0, i8* %arrayidx, align 1, !dbg !6352, !tbaa !795
  %call10 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), double* noundef %val) #23, !dbg !6353
  br label %cleanup, !dbg !6354

cleanup:                                          ; preds = %sw.default, %entry, %if.end8, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ 0, %if.end8 ], [ 0, %sw.bb2 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ], [ -1, %entry ], [ -1, %sw.default ], !dbg !6325
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %len) #24, !dbg !6355
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !6355
  ret i32 %retval.0, !dbg !6355
}

; Function Attrs: noinline nounwind uwtable
define internal void @zslInsert(%struct.zskiplist* nocapture noundef %zsl, double noundef %score, %struct.redisObject* noundef %obj) #0 !dbg !6356 {
entry:
  %update = alloca [32 x %struct.zskiplistNode*], align 16
  %rank = alloca [32 x i32], align 16
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !6360, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata double %score, metadata !6361, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !6362, metadata !DIExpression()), !dbg !6370
  %0 = bitcast [32 x %struct.zskiplistNode*]* %update to i8*, !dbg !6371
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !6371
  call void @llvm.dbg.declare(metadata [32 x %struct.zskiplistNode*]* %update, metadata !6363, metadata !DIExpression()), !dbg !6372
  %1 = bitcast [32 x i32]* %rank to i8*, !dbg !6373
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !6373
  call void @llvm.dbg.declare(metadata [32 x i32]* %rank, metadata !6366, metadata !DIExpression()), !dbg !6374
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* undef, metadata !6365, metadata !DIExpression()), !dbg !6370
  %level1 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !6376
  %2 = load i32, i32* %level1, align 8, !dbg !6376, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %2, metadata !6368, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6370
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* undef, metadata !6365, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i32 %2, metadata !6368, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6370
  %cmp238 = icmp sgt i32 %2, 0, !dbg !6378
  br i1 %cmp238, label %for.body.preheader, label %for.end, !dbg !6380

for.body.preheader:                               ; preds = %entry
  %3 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !6375, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %3, metadata !6365, metadata !DIExpression()), !dbg !6370
  %4 = zext i32 %2 to i64, !dbg !6380
  br label %for.body, !dbg !6380

for.body:                                         ; preds = %while.end.for.body_crit_edge, %for.body.preheader
  %5 = phi i32 [ %2, %for.body.preheader ], [ %.pre, %while.end.for.body_crit_edge ], !dbg !6381
  %indvars.iv = phi i64 [ %4, %for.body.preheader ], [ %indvars.iv.next, %while.end.for.body_crit_edge ]
  %x.0241 = phi %struct.zskiplistNode* [ %3, %for.body.preheader ], [ %x.1.lcssa, %while.end.for.body_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6383
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.0241, metadata !6365, metadata !DIExpression()), !dbg !6370
  %6 = zext i32 %5 to i64, !dbg !6384
  %cmp4 = icmp eq i64 %indvars.iv, %6, !dbg !6384
  br i1 %cmp4, label %cond.end, label %cond.false, !dbg !6385

cond.false:                                       ; preds = %for.body
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %indvars.iv, !dbg !6386
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6386, !tbaa !926
  br label %cond.end, !dbg !6385

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i32 [ %7, %cond.false ], [ 0, %for.body ], !dbg !6385
  %idxprom5226 = and i64 %indvars.iv.next, 4294967295, !dbg !6387
  %arrayidx6 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %idxprom5226, !dbg !6387
  store i32 %cond, i32* %arrayidx6, align 4, !dbg !6388, !tbaa !926
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.0241, metadata !6365, metadata !DIExpression()), !dbg !6370
  %forward229 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.0241, i64 0, i32 0, !dbg !6389
  %8 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward229, align 8, !dbg !6389, !tbaa !1141
  %arrayidx8230 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %8, i64 %idxprom5226, !dbg !6390
  %9 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx8230, align 8, !dbg !6390, !tbaa !782
  %tobool.not231 = icmp eq %struct.zskiplistNode* %9, null, !dbg !6390
  br i1 %tobool.not231, label %while.end, label %land.rhs.lr.ph, !dbg !6391

land.rhs.lr.ph:                                   ; preds = %cond.end
  %cmp26 = icmp ugt i64 %indvars.iv, 1
  %sub28 = add nuw i64 %indvars.iv, 4294967294
  %10 = and i64 %sub28, 4294967295
  br label %land.rhs, !dbg !6391

land.rhs:                                         ; preds = %land.rhs.lr.ph, %cond.end32
  %11 = phi i32 [ %cond, %land.rhs.lr.ph ], [ %add36, %cond.end32 ]
  %12 = phi %struct.zskiplistNode* [ %9, %land.rhs.lr.ph ], [ %20, %cond.end32 ]
  %forward234 = phi %struct.zskiplistNode*** [ %forward229, %land.rhs.lr.ph ], [ %forward, %cond.end32 ]
  %x.1232 = phi %struct.zskiplistNode* [ %x.0241, %land.rhs.lr.ph ], [ %18, %cond.end32 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1232, metadata !6365, metadata !DIExpression()), !dbg !6370
  %score12 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %12, i64 0, i32 3, !dbg !6392
  %13 = load double, double* %score12, align 8, !dbg !6392, !tbaa !6393
  %cmp13 = fcmp olt double %13, %score, !dbg !6394
  br i1 %cmp13, label %while.body, label %lor.rhs, !dbg !6395

lor.rhs:                                          ; preds = %land.rhs
  %cmp18 = fcmp oeq double %13, %score, !dbg !6396
  br i1 %cmp18, label %land.rhs19, label %while.end, !dbg !6397

land.rhs19:                                       ; preds = %lor.rhs
  %obj23 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %12, i64 0, i32 4, !dbg !6398
  %14 = load %struct.redisObject*, %struct.redisObject** %obj23, align 8, !dbg !6398, !tbaa !6399
  %call = tail call i32 @compareStringObjects(%struct.redisObject* noundef %14, %struct.redisObject* noundef %obj) #22, !dbg !6400
  %cmp24 = icmp slt i32 %call, 0, !dbg !6401
  br i1 %cmp24, label %while.body, label %while.end, !dbg !6402

while.body:                                       ; preds = %land.rhs, %land.rhs19
  br i1 %cmp26, label %cond.true27, label %cond.end32, !dbg !6403

cond.true27:                                      ; preds = %while.body
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1232, i64 0, i32 2, !dbg !6405
  %15 = load i32*, i32** %span, align 8, !dbg !6405, !tbaa !1148
  %arrayidx30 = getelementptr inbounds i32, i32* %15, i64 %10, !dbg !6406
  %16 = load i32, i32* %arrayidx30, align 4, !dbg !6406, !tbaa !926
  br label %cond.end32, !dbg !6403

cond.end32:                                       ; preds = %while.body, %cond.true27
  %cond33 = phi i32 [ %16, %cond.true27 ], [ 1, %while.body ], !dbg !6403
  %add36 = add i32 %11, %cond33, !dbg !6407
  store i32 %add36, i32* %arrayidx6, align 4, !dbg !6407, !tbaa !926
  %17 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward234, align 8, !dbg !6408, !tbaa !1141
  %arrayidx39 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %17, i64 %idxprom5226, !dbg !6409
  %18 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx39, align 8, !dbg !6409, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %18, metadata !6365, metadata !DIExpression()), !dbg !6370
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %18, i64 0, i32 0, !dbg !6389
  %19 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !6389, !tbaa !1141
  %arrayidx8 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %19, i64 %idxprom5226, !dbg !6390
  %20 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx8, align 8, !dbg !6390, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %20, null, !dbg !6390
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !6391, !llvm.loop !6410

while.end:                                        ; preds = %land.rhs19, %cond.end32, %lor.rhs, %cond.end
  %x.1.lcssa = phi %struct.zskiplistNode* [ %x.0241, %cond.end ], [ %x.1232, %lor.rhs ], [ %18, %cond.end32 ], [ %x.1232, %land.rhs19 ], !dbg !6370
  %arrayidx41 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %idxprom5226, !dbg !6412
  store %struct.zskiplistNode* %x.1.lcssa, %struct.zskiplistNode** %arrayidx41, align 8, !dbg !6413, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.lcssa, metadata !6365, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !6368, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6370
  %cmp = icmp sgt i64 %indvars.iv, 1, !dbg !6378
  br i1 %cmp, label %while.end.for.body_crit_edge, label %for.end, !dbg !6380, !llvm.loop !6414

while.end.for.body_crit_edge:                     ; preds = %while.end
  %.pre = load i32, i32* %level1, align 8, !dbg !6381, !tbaa !1133
  br label %for.body, !dbg !6380

for.end:                                          ; preds = %while.end, %entry
  %call42 = tail call i32 @zslRandomLevel() #22, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %call42, metadata !6369, metadata !DIExpression()), !dbg !6370
  %21 = load i32, i32* %level1, align 8, !dbg !6417, !tbaa !1133
  %cmp44 = icmp sgt i32 %call42, %21, !dbg !6419
  br i1 %cmp44, label %for.body48.lr.ph, label %if.end, !dbg !6420

for.body48.lr.ph:                                 ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 %21, metadata !6368, metadata !DIExpression()), !dbg !6370
  %22 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !tbaa !1178
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 2
  %23 = load i64, i64* %length, align 8, !tbaa !1187
  %conv = trunc i64 %23 to i32
  %span56 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %22, i64 0, i32 2
  %24 = load i32*, i32** %span56, align 8, !tbaa !1148
  %25 = sext i32 %21 to i64, !dbg !6421
  %wide.trip.count = sext i32 %call42 to i64, !dbg !6424
  %26 = sub nsw i64 %wide.trip.count, %25, !dbg !6421
  %min.iters.check = icmp ult i64 %26, 4, !dbg !6421
  br i1 %min.iters.check, label %for.body48.preheader, label %vector.ph, !dbg !6421

vector.ph:                                        ; preds = %for.body48.lr.ph
  %n.vec = and i64 %26, -4, !dbg !6421
  %ind.end = add nsw i64 %n.vec, %25, !dbg !6421
  %broadcast.splatinsert = insertelement <2 x %struct.zskiplistNode*> poison, %struct.zskiplistNode* %22, i64 0, !dbg !6421
  %broadcast.splat = shufflevector <2 x %struct.zskiplistNode*> %broadcast.splatinsert, <2 x %struct.zskiplistNode*> poison, <2 x i32> zeroinitializer, !dbg !6421
  %broadcast.splatinsert269 = insertelement <2 x %struct.zskiplistNode*> poison, %struct.zskiplistNode* %22, i64 0, !dbg !6421
  %broadcast.splat270 = shufflevector <2 x %struct.zskiplistNode*> %broadcast.splatinsert269, <2 x %struct.zskiplistNode*> poison, <2 x i32> zeroinitializer, !dbg !6421
  %broadcast.splatinsert271 = insertelement <2 x i32> poison, i32 %conv, i64 0, !dbg !6421
  %broadcast.splat272 = shufflevector <2 x i32> %broadcast.splatinsert271, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !6421
  %broadcast.splatinsert273 = insertelement <2 x i32> poison, i32 %conv, i64 0, !dbg !6421
  %broadcast.splat274 = shufflevector <2 x i32> %broadcast.splatinsert273, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !6421
  %27 = add nsw i64 %n.vec, -4, !dbg !6421
  %28 = lshr exact i64 %27, 2, !dbg !6421
  %29 = add nuw nsw i64 %28, 1, !dbg !6421
  %xtraiter = and i64 %29, 1, !dbg !6421
  %30 = icmp eq i64 %27, 0, !dbg !6421
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new, !dbg !6421

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %29, 9223372036854775806, !dbg !6421
  br label %vector.body, !dbg !6421

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ 0, %vector.ph.new ], [ %niter.next.1, %vector.body ]
  %offset.idx = add i64 %index, %25
  %31 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %offset.idx, !dbg !6426
  %32 = bitcast i32* %31 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %32, align 4, !dbg !6428, !tbaa !926
  %33 = getelementptr inbounds i32, i32* %31, i64 2, !dbg !6428
  %34 = bitcast i32* %33 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %34, align 4, !dbg !6428, !tbaa !926
  %35 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %offset.idx, !dbg !6429
  %36 = bitcast %struct.zskiplistNode** %35 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat, <2 x %struct.zskiplistNode*>* %36, align 8, !dbg !6430, !tbaa !782
  %37 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %35, i64 2, !dbg !6430
  %38 = bitcast %struct.zskiplistNode** %37 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat270, <2 x %struct.zskiplistNode*>* %38, align 8, !dbg !6430, !tbaa !782
  %39 = add nsw i64 %offset.idx, -1, !dbg !6431
  %40 = getelementptr inbounds i32, i32* %24, i64 %39, !dbg !6432
  %41 = bitcast i32* %40 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat272, <2 x i32>* %41, align 4, !dbg !6433, !tbaa !926
  %42 = getelementptr inbounds i32, i32* %40, i64 2, !dbg !6433
  %43 = bitcast i32* %42 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat274, <2 x i32>* %43, align 4, !dbg !6433, !tbaa !926
  %index.next = or i64 %index, 4
  %offset.idx.1 = add i64 %index.next, %25
  %44 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %offset.idx.1, !dbg !6426
  %45 = bitcast i32* %44 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %45, align 4, !dbg !6428, !tbaa !926
  %46 = getelementptr inbounds i32, i32* %44, i64 2, !dbg !6428
  %47 = bitcast i32* %46 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %47, align 4, !dbg !6428, !tbaa !926
  %48 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %offset.idx.1, !dbg !6429
  %49 = bitcast %struct.zskiplistNode** %48 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat, <2 x %struct.zskiplistNode*>* %49, align 8, !dbg !6430, !tbaa !782
  %50 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %48, i64 2, !dbg !6430
  %51 = bitcast %struct.zskiplistNode** %50 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat270, <2 x %struct.zskiplistNode*>* %51, align 8, !dbg !6430, !tbaa !782
  %52 = add nsw i64 %offset.idx.1, -1, !dbg !6431
  %53 = getelementptr inbounds i32, i32* %24, i64 %52, !dbg !6432
  %54 = bitcast i32* %53 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat272, <2 x i32>* %54, align 4, !dbg !6433, !tbaa !926
  %55 = getelementptr inbounds i32, i32* %53, i64 2, !dbg !6433
  %56 = bitcast i32* %55 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat274, <2 x i32>* %56, align 4, !dbg !6433, !tbaa !926
  %index.next.1 = add nuw i64 %index, 8
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !6434

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %offset.idx.epil = add i64 %index.unr, %25
  %57 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %offset.idx.epil, !dbg !6426
  %58 = bitcast i32* %57 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %58, align 4, !dbg !6428, !tbaa !926
  %59 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !6428
  %60 = bitcast i32* %59 to <2 x i32>*, !dbg !6428
  store <2 x i32> zeroinitializer, <2 x i32>* %60, align 4, !dbg !6428, !tbaa !926
  %61 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %offset.idx.epil, !dbg !6429
  %62 = bitcast %struct.zskiplistNode** %61 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat, <2 x %struct.zskiplistNode*>* %62, align 8, !dbg !6430, !tbaa !782
  %63 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %61, i64 2, !dbg !6430
  %64 = bitcast %struct.zskiplistNode** %63 to <2 x %struct.zskiplistNode*>*, !dbg !6430
  store <2 x %struct.zskiplistNode*> %broadcast.splat270, <2 x %struct.zskiplistNode*>* %64, align 8, !dbg !6430, !tbaa !782
  %65 = add nsw i64 %offset.idx.epil, -1, !dbg !6431
  %66 = getelementptr inbounds i32, i32* %24, i64 %65, !dbg !6432
  %67 = bitcast i32* %66 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat272, <2 x i32>* %67, align 4, !dbg !6433, !tbaa !926
  %68 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !6433
  %69 = bitcast i32* %68 to <2 x i32>*, !dbg !6433
  store <2 x i32> %broadcast.splat274, <2 x i32>* %69, align 4, !dbg !6433, !tbaa !926
  br label %middle.block, !dbg !6421

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %cmp.n = icmp eq i64 %26, %n.vec, !dbg !6421
  br i1 %cmp.n, label %for.end61, label %for.body48.preheader, !dbg !6421

for.body48.preheader:                             ; preds = %for.body48.lr.ph, %middle.block
  %indvars.iv251.ph = phi i64 [ %25, %for.body48.lr.ph ], [ %ind.end, %middle.block ]
  br label %for.body48, !dbg !6421

for.body48:                                       ; preds = %for.body48.preheader, %for.body48
  %indvars.iv251 = phi i64 [ %indvars.iv.next252, %for.body48 ], [ %indvars.iv251.ph, %for.body48.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv251, metadata !6368, metadata !DIExpression()), !dbg !6370
  %arrayidx50 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %indvars.iv251, !dbg !6426
  store i32 0, i32* %arrayidx50, align 4, !dbg !6428, !tbaa !926
  %arrayidx53 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv251, !dbg !6429
  store %struct.zskiplistNode* %22, %struct.zskiplistNode** %arrayidx53, align 8, !dbg !6430, !tbaa !782
  %70 = add nsw i64 %indvars.iv251, -1, !dbg !6431
  %arrayidx59 = getelementptr inbounds i32, i32* %24, i64 %70, !dbg !6432
  store i32 %conv, i32* %arrayidx59, align 4, !dbg !6433, !tbaa !926
  %indvars.iv.next252 = add nsw i64 %indvars.iv251, 1, !dbg !6437
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next252, metadata !6368, metadata !DIExpression()), !dbg !6370
  %exitcond.not = icmp eq i64 %indvars.iv.next252, %wide.trip.count, !dbg !6424
  br i1 %exitcond.not, label %for.end61, label %for.body48, !dbg !6421, !llvm.loop !6438

for.end61:                                        ; preds = %for.body48, %middle.block
  store i32 %call42, i32* %level1, align 8, !dbg !6440, !tbaa !1133
  br label %if.end, !dbg !6441

if.end:                                           ; preds = %for.end61, %for.end
  %call63 = tail call %struct.zskiplistNode* @zslCreateNode(i32 noundef %call42, double noundef %score, %struct.redisObject* noundef %obj) #22, !dbg !6442
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %call63, metadata !6365, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i32 0, metadata !6368, metadata !DIExpression()), !dbg !6370
  %cmp65245 = icmp sgt i32 %call42, 0, !dbg !6443
  br i1 %cmp65245, label %for.inc111.peel, label %for.cond114.preheader, !dbg !6446

for.inc111.peel:                                  ; preds = %if.end
  %forward73 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %call63, i64 0, i32 0
  %arrayidx90 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 0
  %71 = load i32, i32* %arrayidx90, align 16
  %span95 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %call63, i64 0, i32 2
  %sub102 = add i32 %71, 1
  %wide.trip.count261 = zext i32 %call42 to i64, !dbg !6443
  call void @llvm.dbg.value(metadata i64 0, metadata !6368, metadata !DIExpression()), !dbg !6370
  %arrayidx69.peel = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 0, !dbg !6447
  %72 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx69.peel, align 16, !dbg !6447, !tbaa !782
  %forward70.peel = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %72, i64 0, i32 0, !dbg !6449
  %73 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward70.peel, align 8, !dbg !6449, !tbaa !1141
  %74 = load %struct.zskiplistNode*, %struct.zskiplistNode** %73, align 8, !dbg !6447, !tbaa !782
  %75 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward73, align 8, !dbg !6450, !tbaa !1141
  store %struct.zskiplistNode* %74, %struct.zskiplistNode** %75, align 8, !dbg !6451, !tbaa !782
  %76 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward70.peel, align 8, !dbg !6452, !tbaa !1141
  store %struct.zskiplistNode* %call63, %struct.zskiplistNode** %76, align 8, !dbg !6453, !tbaa !782
  call void @llvm.dbg.value(metadata i64 1, metadata !6368, metadata !DIExpression()), !dbg !6370
  %exitcond262.peel.not = icmp eq i32 %call42, 1, !dbg !6443
  br i1 %exitcond262.peel.not, label %for.cond114.preheader, label %for.inc111, !dbg !6446

for.cond114.preheader:                            ; preds = %for.inc111, %for.inc111.peel, %if.end
  call void @llvm.dbg.value(metadata i32 %call42, metadata !6368, metadata !DIExpression()), !dbg !6370
  %77 = load i32, i32* %level1, align 8, !dbg !6454, !tbaa !1133
  %cmp116248 = icmp slt i32 %call42, %77, !dbg !6457
  br i1 %cmp116248, label %for.body118.preheader, label %for.end128, !dbg !6458

for.body118.preheader:                            ; preds = %for.cond114.preheader
  %78 = sext i32 %call42 to i64, !dbg !6458
  br label %for.body118, !dbg !6458

for.inc111:                                       ; preds = %for.inc111.peel, %for.inc111
  %indvars.iv256 = phi i64 [ %indvars.iv.next257, %for.inc111 ], [ 1, %for.inc111.peel ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv256, metadata !6368, metadata !DIExpression()), !dbg !6370
  %arrayidx69 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv256, !dbg !6447
  %79 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx69, align 8, !dbg !6447, !tbaa !782
  %forward70 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %79, i64 0, i32 0, !dbg !6449
  %80 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward70, align 8, !dbg !6449, !tbaa !1141
  %arrayidx72 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %80, i64 %indvars.iv256, !dbg !6447
  %81 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx72, align 8, !dbg !6447, !tbaa !782
  %82 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward73, align 8, !dbg !6450, !tbaa !1141
  %arrayidx75 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %82, i64 %indvars.iv256, !dbg !6459
  store %struct.zskiplistNode* %81, %struct.zskiplistNode** %arrayidx75, align 8, !dbg !6451, !tbaa !782
  %83 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward70, align 8, !dbg !6452, !tbaa !1141
  %arrayidx80 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %83, i64 %indvars.iv256, !dbg !6460
  store %struct.zskiplistNode* %call63, %struct.zskiplistNode** %arrayidx80, align 8, !dbg !6453, !tbaa !782
  %span86 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %79, i64 0, i32 2, !dbg !6461
  %84 = load i32*, i32** %span86, align 8, !dbg !6461, !tbaa !1148
  %85 = add nuw i64 %indvars.iv256, 4294967295
  %86 = and i64 %85, 4294967295
  %arrayidx89 = getelementptr inbounds i32, i32* %84, i64 %86, !dbg !6464
  %87 = load i32, i32* %arrayidx89, align 4, !dbg !6464, !tbaa !926
  %arrayidx92 = getelementptr inbounds [32 x i32], [32 x i32]* %rank, i64 0, i64 %indvars.iv256, !dbg !6465
  %88 = load i32, i32* %arrayidx92, align 4, !dbg !6465, !tbaa !926
  %sub93.neg = sub i32 %87, %71, !dbg !6466
  %sub94 = add i32 %sub93.neg, %88, !dbg !6467
  %89 = load i32*, i32** %span95, align 8, !dbg !6468, !tbaa !1148
  %arrayidx98 = getelementptr inbounds i32, i32* %89, i64 %86, !dbg !6469
  store i32 %sub94, i32* %arrayidx98, align 4, !dbg !6470, !tbaa !926
  %add103 = sub i32 %sub102, %88, !dbg !6471
  store i32 %add103, i32* %arrayidx89, align 4, !dbg !6472, !tbaa !926
  %indvars.iv.next257 = add nuw nsw i64 %indvars.iv256, 1, !dbg !6473
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next257, metadata !6368, metadata !DIExpression()), !dbg !6370
  %exitcond262.not = icmp eq i64 %indvars.iv.next257, %wide.trip.count261, !dbg !6443
  br i1 %exitcond262.not, label %for.cond114.preheader, label %for.inc111, !dbg !6446, !llvm.loop !6474

for.body118:                                      ; preds = %for.body118.preheader, %for.body118
  %indvars.iv264 = phi i64 [ %78, %for.body118.preheader ], [ %indvars.iv.next265, %for.body118 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv264, metadata !6368, metadata !DIExpression()), !dbg !6370
  %arrayidx120 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv264, !dbg !6476
  %90 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx120, align 8, !dbg !6476, !tbaa !782
  %span121 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %90, i64 0, i32 2, !dbg !6478
  %91 = load i32*, i32** %span121, align 8, !dbg !6478, !tbaa !1148
  %92 = add nsw i64 %indvars.iv264, -1, !dbg !6479
  %arrayidx124 = getelementptr inbounds i32, i32* %91, i64 %92, !dbg !6476
  %93 = load i32, i32* %arrayidx124, align 4, !dbg !6480, !tbaa !926
  %inc125 = add i32 %93, 1, !dbg !6480
  store i32 %inc125, i32* %arrayidx124, align 4, !dbg !6480, !tbaa !926
  %indvars.iv.next265 = add nsw i64 %indvars.iv264, 1, !dbg !6481
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next265, metadata !6368, metadata !DIExpression()), !dbg !6370
  %94 = load i32, i32* %level1, align 8, !dbg !6454, !tbaa !1133
  %95 = sext i32 %94 to i64, !dbg !6457
  %cmp116 = icmp slt i64 %indvars.iv.next265, %95, !dbg !6457
  br i1 %cmp116, label %for.body118, label %for.end128, !dbg !6458, !llvm.loop !6482

for.end128:                                       ; preds = %for.body118, %for.cond114.preheader
  %arrayidx129 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 0, !dbg !6484
  %96 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx129, align 16, !dbg !6484, !tbaa !782
  %97 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !6485, !tbaa !1178
  %cmp131 = icmp eq %struct.zskiplistNode* %96, %97, !dbg !6486
  %cond137 = select i1 %cmp131, %struct.zskiplistNode* null, %struct.zskiplistNode* %96, !dbg !6487
  %backward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %call63, i64 0, i32 1, !dbg !6488
  store %struct.zskiplistNode* %cond137, %struct.zskiplistNode** %backward, align 8, !dbg !6489, !tbaa !1173
  %forward138 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %call63, i64 0, i32 0, !dbg !6490
  %98 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward138, align 8, !dbg !6490, !tbaa !1141
  %99 = load %struct.zskiplistNode*, %struct.zskiplistNode** %98, align 8, !dbg !6492, !tbaa !782
  %tobool140.not = icmp eq %struct.zskiplistNode* %99, null, !dbg !6492
  %tail = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 1, !dbg !6493
  %backward144 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %99, i64 0, i32 1, !dbg !6493
  %tail.sink = select i1 %tobool140.not, %struct.zskiplistNode** %tail, %struct.zskiplistNode** %backward144, !dbg !6493
  store %struct.zskiplistNode* %call63, %struct.zskiplistNode** %tail.sink, align 8, !dbg !6494, !tbaa !782
  %length146 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 2, !dbg !6495
  %100 = load i64, i64* %length146, align 8, !dbg !6496, !tbaa !1187
  %inc147 = add i64 %100, 1, !dbg !6496
  store i64 %inc147, i64* %length146, align 8, !dbg !6496, !tbaa !1187
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !6497
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !6497
  ret void, !dbg !6497
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createHashObject() #0 !dbg !6498 {
entry:
  %call = tail call i8* @zipmapNew() #23, !dbg !6502
  call void @llvm.dbg.value(metadata i8* %call, metadata !6500, metadata !DIExpression()), !dbg !6503
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 4, i8* noundef %call) #22, !dbg !6504
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !6501, metadata !DIExpression()), !dbg !6503
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call1, i64 0, i32 2, !dbg !6505
  store i8 2, i8* %encoding, align 1, !dbg !6506, !tbaa !1529
  ret %struct.redisObject* %call1, !dbg !6507
}

; Function Attrs: noinline nounwind uwtable
define internal void @convertToRealHash(%struct.redisObject* nocapture noundef %o) #0 !dbg !6508 {
entry:
  %key = alloca i8*, align 8
  %val = alloca i8*, align 8
  %klen = alloca i32, align 4
  %vlen = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !6510, metadata !DIExpression()), !dbg !6521
  %0 = bitcast i8** %key to i8*, !dbg !6522
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !6522
  %1 = bitcast i8** %val to i8*, !dbg !6522
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !6522
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !6523
  %2 = load i8*, i8** %ptr, align 8, !dbg !6523, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %2, metadata !6514, metadata !DIExpression()), !dbg !6521
  %3 = bitcast i32* %klen to i8*, !dbg !6524
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6524
  %4 = bitcast i32* %vlen to i8*, !dbg !6524
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !6524
  %call = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @hashDictType, i8* noundef null) #23, !dbg !6525
  call void @llvm.dbg.value(metadata %struct.dict* %call, metadata !6517, metadata !DIExpression()), !dbg !6521
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !6526
  %5 = load i8, i8* %type, align 8, !dbg !6526, !tbaa !1526
  %cmp = icmp eq i8 %5, 4, !dbg !6526
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6526

land.lhs.true:                                    ; preds = %entry
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !6526
  %6 = load i8, i8* %encoding, align 1, !dbg !6526, !tbaa !1529
  %cmp3.not = icmp eq i8 %6, 3, !dbg !6526
  br i1 %cmp3.not, label %cond.false, label %cond.end, !dbg !6526

cond.false:                                       ; preds = %land.lhs.true, %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 6788, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__PRETTY_FUNCTION__.convertToRealHash, i64 0, i64 0)) #26, !dbg !6526
  unreachable, !dbg !6526

cond.end:                                         ; preds = %land.lhs.true
  %call5 = tail call i8* @zipmapRewind(i8* noundef %2) #23, !dbg !6527
  call void @llvm.dbg.value(metadata i8* %call5, metadata !6513, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i8** %key, metadata !6511, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i8** %val, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i32* %klen, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !6516, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  %call631 = call i8* @zipmapNext(i8* noundef %call5, i8** noundef nonnull %key, i32* noundef nonnull %klen, i8** noundef nonnull %val, i32* noundef nonnull %vlen) #23, !dbg !6528
  call void @llvm.dbg.value(metadata i8* %call631, metadata !6513, metadata !DIExpression()), !dbg !6521
  %cmp7.not32 = icmp eq i8* %call631, null, !dbg !6529
  br i1 %cmp7.not32, label %while.end, label %while.body, !dbg !6530

while.body:                                       ; preds = %cond.end, %while.body
  %call633 = phi i8* [ %call6, %while.body ], [ %call631, %cond.end ]
  %7 = load i8*, i8** %key, align 8, !dbg !6531, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %7, metadata !6511, metadata !DIExpression()), !dbg !6521
  %8 = load i32, i32* %klen, align 4, !dbg !6532, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %8, metadata !6515, metadata !DIExpression()), !dbg !6521
  %conv9 = zext i32 %8 to i64, !dbg !6532
  %call10 = call %struct.redisObject* @createStringObject(i8* noundef %7, i64 noundef %conv9) #22, !dbg !6533
  call void @llvm.dbg.value(metadata %struct.redisObject* %call10, metadata !6518, metadata !DIExpression()), !dbg !6534
  %9 = load i8*, i8** %val, align 8, !dbg !6535, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %9, metadata !6512, metadata !DIExpression()), !dbg !6521
  %10 = load i32, i32* %vlen, align 4, !dbg !6536, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %10, metadata !6516, metadata !DIExpression()), !dbg !6521
  %conv11 = zext i32 %10 to i64, !dbg !6536
  %call12 = call %struct.redisObject* @createStringObject(i8* noundef %9, i64 noundef %conv11) #22, !dbg !6537
  call void @llvm.dbg.value(metadata %struct.redisObject* %call12, metadata !6520, metadata !DIExpression()), !dbg !6534
  %call13 = call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %call10) #22, !dbg !6538
  call void @llvm.dbg.value(metadata %struct.redisObject* %call13, metadata !6518, metadata !DIExpression()), !dbg !6534
  %call14 = call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %call12) #22, !dbg !6539
  call void @llvm.dbg.value(metadata %struct.redisObject* %call14, metadata !6520, metadata !DIExpression()), !dbg !6534
  %11 = bitcast %struct.redisObject* %call13 to i8*, !dbg !6540
  %12 = bitcast %struct.redisObject* %call14 to i8*, !dbg !6541
  %call15 = call i32 @dictAdd(%struct.dict* noundef %call, i8* noundef %11, i8* noundef %12) #23, !dbg !6542
  call void @llvm.dbg.value(metadata i8* %call633, metadata !6513, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i8** %key, metadata !6511, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i8** %val, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i32* %klen, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !6516, metadata !DIExpression(DW_OP_deref)), !dbg !6521
  %call6 = call i8* @zipmapNext(i8* noundef nonnull %call633, i8** noundef nonnull %key, i32* noundef nonnull %klen, i8** noundef nonnull %val, i32* noundef nonnull %vlen) #23, !dbg !6528
  call void @llvm.dbg.value(metadata i8* %call6, metadata !6513, metadata !DIExpression()), !dbg !6521
  %cmp7.not = icmp eq i8* %call6, null, !dbg !6529
  br i1 %cmp7.not, label %while.end, label %while.body, !dbg !6530, !llvm.loop !6543

while.end:                                        ; preds = %while.body, %cond.end
  store i8 3, i8* %encoding, align 1, !dbg !6545, !tbaa !1529
  %13 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !6546
  store %struct.dict* %call, %struct.dict** %13, align 8, !dbg !6546, !tbaa !1328
  call void @zfree(i8* noundef %2) #23, !dbg !6547
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !6548
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6548
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !6548
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !6548
  ret void, !dbg !6548
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbLoadStringObject(%struct._IO_FILE* noundef %fp) #0 !dbg !6549 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6551, metadata !DIExpression()), !dbg !6552
  %call = tail call %struct.redisObject* @rdbGenericLoadStringObject(%struct._IO_FILE* noundef %fp, i32 noundef 0) #22, !dbg !6553
  ret %struct.redisObject* %call, !dbg !6554
}

declare !dbg !6555 dso_local i8* @zipmapSet(i8* noundef, i8* noundef, i32 noundef, i8* noundef, i32 noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbGenericLoadStringObject(%struct._IO_FILE* noundef %fp, i32 noundef %encode) #0 !dbg !6559 {
entry:
  %isencoded = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6563, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i32 %encode, metadata !6564, metadata !DIExpression()), !dbg !6568
  %0 = bitcast i32* %isencoded to i8*, !dbg !6569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !6569
  call void @llvm.dbg.value(metadata i32* %isencoded, metadata !6565, metadata !DIExpression(DW_OP_deref)), !dbg !6568
  %call = call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef nonnull %isencoded) #22, !dbg !6570
  call void @llvm.dbg.value(metadata i32 %call, metadata !6566, metadata !DIExpression()), !dbg !6568
  %1 = load i32, i32* %isencoded, align 4, !dbg !6571, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %1, metadata !6565, metadata !DIExpression()), !dbg !6568
  %tobool.not = icmp eq i32 %1, 0, !dbg !6571
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !6573

if.then:                                          ; preds = %entry
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb2
  ], !dbg !6574

sw.bb:                                            ; preds = %if.then, %if.then, %if.then
  %call1 = call %struct.redisObject* @rdbLoadIntegerObject(%struct._IO_FILE* noundef %fp, i32 noundef %call, i32 noundef %encode) #22, !dbg !6576
  br label %cleanup, !dbg !6578

sw.bb2:                                           ; preds = %if.then
  %call3 = call %struct.redisObject* @rdbLoadLzfStringObject(%struct._IO_FILE* noundef %fp) #22, !dbg !6579
  br label %cleanup, !dbg !6580

sw.default:                                       ; preds = %if.then
  call void @_redisPanic(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3934) #22, !dbg !6581
  call void @_exit(i32 noundef 1) #26, !dbg !6581
  unreachable, !dbg !6581

if.end:                                           ; preds = %entry
  %cmp = icmp eq i32 %call, -1, !dbg !6582
  br i1 %cmp, label %cleanup, label %if.end5, !dbg !6584

if.end5:                                          ; preds = %if.end
  %conv = zext i32 %call to i64, !dbg !6585
  %call6 = call i8* @sdsnewlen(i8* noundef null, i64 noundef %conv) #23, !dbg !6586
  call void @llvm.dbg.value(metadata i8* %call6, metadata !6567, metadata !DIExpression()), !dbg !6568
  %tobool7.not = icmp eq i32 %call, 0, !dbg !6587
  br i1 %tobool7.not, label %if.end13, label %land.lhs.true, !dbg !6589

land.lhs.true:                                    ; preds = %if.end5
  %call9 = call i64 @fread(i8* noundef %call6, i64 noundef %conv, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6590
  %cmp10 = icmp eq i64 %call9, 0, !dbg !6591
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6592

if.then12:                                        ; preds = %land.lhs.true
  call void @sdsfree(i8* noundef %call6) #23, !dbg !6593
  br label %cleanup, !dbg !6595

if.end13:                                         ; preds = %land.lhs.true, %if.end5
  %call14 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call6) #22, !dbg !6596
  br label %cleanup, !dbg !6597

cleanup:                                          ; preds = %if.end, %if.end13, %if.then12, %sw.bb2, %sw.bb
  %retval.0 = phi %struct.redisObject* [ %call3, %sw.bb2 ], [ %call1, %sw.bb ], [ null, %if.then12 ], [ %call14, %if.end13 ], [ null, %if.end ], !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !6598
  ret %struct.redisObject* %retval.0, !dbg !6598
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbLoadIntegerObject(%struct._IO_FILE* noundef %fp, i32 noundef %enctype, i32 noundef %encode) #0 !dbg !6599 {
entry:
  %enc = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6603, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %enctype, metadata !6604, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %encode, metadata !6605, metadata !DIExpression()), !dbg !6617
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %enc, i64 0, i64 0, !dbg !6618
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !6618
  call void @llvm.dbg.declare(metadata [4 x i8]* %enc, metadata !6606, metadata !DIExpression()), !dbg !6619
  switch i32 %enctype, label %if.else47 [
    i32 0, label %if.then
    i32 1, label %if.then5
    i32 2, label %if.then21
  ], !dbg !6620

if.then:                                          ; preds = %entry
  %call = call i64 @fread(i8* noundef nonnull %0, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6621
  %cmp1 = icmp eq i64 %call, 0, !dbg !6624
  br i1 %cmp1, label %cleanup56, label %if.end, !dbg !6625

if.end:                                           ; preds = %if.then
  %1 = load i8, i8* %0, align 1, !dbg !6626, !tbaa !795
  %conv = sext i8 %1 to i64, !dbg !6627
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6608, metadata !DIExpression()), !dbg !6617
  br label %if.end50, !dbg !6628

if.then5:                                         ; preds = %entry
  %call7 = call i64 @fread(i8* noundef nonnull %0, i64 noundef 2, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6629
  %cmp8 = icmp eq i64 %call7, 0, !dbg !6631
  br i1 %cmp8, label %cleanup56, label %cleanup, !dbg !6632

cleanup:                                          ; preds = %if.then5
  %2 = load i8, i8* %0, align 1, !dbg !6633, !tbaa !795
  %conv13 = zext i8 %2 to i16, !dbg !6633
  %arrayidx14 = getelementptr inbounds [4 x i8], [4 x i8]* %enc, i64 0, i64 1, !dbg !6634
  %3 = load i8, i8* %arrayidx14, align 1, !dbg !6634, !tbaa !795
  %conv15 = zext i8 %3 to i16, !dbg !6634
  %shl = shl nuw i16 %conv15, 8, !dbg !6635
  %or = or i16 %shl, %conv13, !dbg !6636
  call void @llvm.dbg.value(metadata i16 %or, metadata !6609, metadata !DIExpression()), !dbg !6637
  %conv17 = sext i16 %or to i64, !dbg !6638
  call void @llvm.dbg.value(metadata i64 %conv17, metadata !6608, metadata !DIExpression()), !dbg !6617
  br label %if.end50

if.then21:                                        ; preds = %entry
  %call24 = call i64 @fread(i8* noundef nonnull %0, i64 noundef 4, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6639
  %cmp25 = icmp eq i64 %call24, 0, !dbg !6641
  br i1 %cmp25, label %cleanup56, label %cleanup44, !dbg !6642

cleanup44:                                        ; preds = %if.then21
  %4 = load i8, i8* %0, align 1, !dbg !6643, !tbaa !795
  %conv30 = zext i8 %4 to i32, !dbg !6643
  %arrayidx31 = getelementptr inbounds [4 x i8], [4 x i8]* %enc, i64 0, i64 1, !dbg !6644
  %5 = load i8, i8* %arrayidx31, align 1, !dbg !6644, !tbaa !795
  %conv32 = zext i8 %5 to i32, !dbg !6644
  %shl33 = shl nuw nsw i32 %conv32, 8, !dbg !6645
  %or34 = or i32 %shl33, %conv30, !dbg !6646
  %arrayidx35 = getelementptr inbounds [4 x i8], [4 x i8]* %enc, i64 0, i64 2, !dbg !6647
  %6 = load i8, i8* %arrayidx35, align 1, !dbg !6647, !tbaa !795
  %conv36 = zext i8 %6 to i32, !dbg !6647
  %shl37 = shl nuw nsw i32 %conv36, 16, !dbg !6648
  %or38 = or i32 %or34, %shl37, !dbg !6649
  %arrayidx39 = getelementptr inbounds [4 x i8], [4 x i8]* %enc, i64 0, i64 3, !dbg !6650
  %7 = load i8, i8* %arrayidx39, align 1, !dbg !6650, !tbaa !795
  %conv40 = zext i8 %7 to i32, !dbg !6650
  %shl41 = shl nuw i32 %conv40, 24, !dbg !6651
  %or42 = or i32 %or38, %shl41, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %or42, metadata !6614, metadata !DIExpression()), !dbg !6653
  %conv43 = sext i32 %or42 to i64, !dbg !6654
  call void @llvm.dbg.value(metadata i64 %conv43, metadata !6608, metadata !DIExpression()), !dbg !6617
  br label %if.end50

if.else47:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !6608, metadata !DIExpression()), !dbg !6617
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.100, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3892) #22, !dbg !6655
  tail call void @_exit(i32 noundef 1) #26, !dbg !6655
  unreachable, !dbg !6655

if.end50:                                         ; preds = %cleanup44, %cleanup, %if.end
  %val.2 = phi i64 [ %conv, %if.end ], [ %conv17, %cleanup ], [ %conv43, %cleanup44 ]
  call void @llvm.dbg.value(metadata i64 %val.2, metadata !6608, metadata !DIExpression()), !dbg !6617
  %tobool.not = icmp eq i32 %encode, 0, !dbg !6657
  br i1 %tobool.not, label %if.else53, label %if.then51, !dbg !6659

if.then51:                                        ; preds = %if.end50
  %call52 = call %struct.redisObject* @createStringObjectFromLongLong(i64 noundef %val.2) #22, !dbg !6660
  br label %cleanup56, !dbg !6661

if.else53:                                        ; preds = %if.end50
  %call54 = call i8* @sdsfromlonglong(i64 noundef %val.2) #23, !dbg !6662
  %call55 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call54) #22, !dbg !6663
  br label %cleanup56, !dbg !6664

cleanup56:                                        ; preds = %if.then21, %if.then5, %if.then, %if.else53, %if.then51
  %retval.2 = phi %struct.redisObject* [ %call52, %if.then51 ], [ %call55, %if.else53 ], [ null, %if.then ], [ null, %if.then5 ], [ null, %if.then21 ], !dbg !6617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !6665
  ret %struct.redisObject* %retval.2, !dbg !6665
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @rdbLoadLzfStringObject(%struct._IO_FILE* noundef %fp) #0 !dbg !6666 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !6668, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* null, metadata !6671, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* null, metadata !6672, metadata !DIExpression()), !dbg !6674
  %call = tail call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef null) #22, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %call, metadata !6670, metadata !DIExpression()), !dbg !6674
  %cmp = icmp eq i32 %call, -1, !dbg !6677
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6678

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @rdbLoadLen(%struct._IO_FILE* noundef %fp, i32* noundef null) #22, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %call1, metadata !6669, metadata !DIExpression()), !dbg !6674
  %cmp2 = icmp eq i32 %call1, -1, !dbg !6681
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !6682

if.end4:                                          ; preds = %if.end
  %conv = zext i32 %call to i64, !dbg !6683
  %call5 = tail call i8* @zmalloc(i64 noundef %conv) #23, !dbg !6685
  call void @llvm.dbg.value(metadata i8* %call5, metadata !6671, metadata !DIExpression()), !dbg !6674
  %cmp6 = icmp eq i8* %call5, null, !dbg !6686
  br i1 %cmp6, label %err, label %if.end9, !dbg !6687

if.end9:                                          ; preds = %if.end4
  %conv10 = zext i32 %call1 to i64, !dbg !6688
  %call11 = tail call i8* @sdsnewlen(i8* noundef null, i64 noundef %conv10) #23, !dbg !6690
  call void @llvm.dbg.value(metadata i8* %call11, metadata !6672, metadata !DIExpression()), !dbg !6674
  %cmp12 = icmp eq i8* %call11, null, !dbg !6691
  br i1 %cmp12, label %err, label %if.end15, !dbg !6692

if.end15:                                         ; preds = %if.end9
  %call17 = tail call i64 @fread(i8* noundef nonnull %call5, i64 noundef %conv, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !6693
  %cmp18 = icmp eq i64 %call17, 0, !dbg !6695
  br i1 %cmp18, label %err, label %if.end21, !dbg !6696

if.end21:                                         ; preds = %if.end15
  %call22 = tail call i32 @lzf_decompress(i8* noundef nonnull %call5, i32 noundef %call, i8* noundef nonnull %call11, i32 noundef %call1) #23, !dbg !6697
  %cmp23 = icmp eq i32 %call22, 0, !dbg !6699
  br i1 %cmp23, label %err, label %if.end26, !dbg !6700

if.end26:                                         ; preds = %if.end21
  tail call void @zfree(i8* noundef nonnull %call5) #23, !dbg !6701
  %call27 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef nonnull %call11) #22, !dbg !6702
  br label %cleanup, !dbg !6703

err:                                              ; preds = %if.end21, %if.end15, %if.end9, %if.end4
  %val.0 = phi i8* [ null, %if.end4 ], [ null, %if.end9 ], [ %call11, %if.end15 ], [ %call11, %if.end21 ], !dbg !6674
  call void @llvm.dbg.value(metadata i8* %val.0, metadata !6672, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.label(metadata !6673), !dbg !6704
  tail call void @zfree(i8* noundef %call5) #23, !dbg !6705
  tail call void @sdsfree(i8* noundef %val.0) #23, !dbg !6706
  br label %cleanup, !dbg !6707

cleanup:                                          ; preds = %if.end, %entry, %err, %if.end26
  %retval.0 = phi %struct.redisObject* [ null, %err ], [ %call27, %if.end26 ], [ null, %entry ], [ null, %if.end ], !dbg !6674
  ret %struct.redisObject* %retval.0, !dbg !6708
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @createStringObjectFromLongLong(i64 noundef %value) #0 !dbg !6709 {
entry:
  call void @llvm.dbg.value(metadata i64 %value, metadata !6713, metadata !DIExpression()), !dbg !6715
  %0 = icmp ult i64 %value, 10000, !dbg !6716
  br i1 %0, label %land.lhs.true2, label %if.then8, !dbg !6716

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i64 @pthread_self() #25, !dbg !6718
  %1 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 0), align 8, !dbg !6719, !tbaa !1599
  %call3 = tail call i32 @pthread_equal(i64 noundef %call, i64 noundef %1) #25, !dbg !6720
  %tobool.not = icmp eq i32 %call3, 0, !dbg !6720
  br i1 %tobool.not, label %if.then8, label %if.then, !dbg !6721

if.then:                                          ; preds = %land.lhs.true2
  %arrayidx = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 37, i64 %value, !dbg !6722
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !6722, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %2) #22, !dbg !6724
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !6725, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.redisObject* %3, metadata !6714, metadata !DIExpression()), !dbg !6715
  br label %if.end13, !dbg !6726

if.then8:                                         ; preds = %entry, %land.lhs.true2
  %call9 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !6727
  call void @llvm.dbg.value(metadata %struct.redisObject* %call9, metadata !6714, metadata !DIExpression()), !dbg !6715
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call9, i64 0, i32 2, !dbg !6731
  store i8 1, i8* %encoding, align 1, !dbg !6732, !tbaa !1529
  %4 = inttoptr i64 %value to i8*, !dbg !6733
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call9, i64 0, i32 0, !dbg !6734
  store i8* %4, i8** %ptr, align 8, !dbg !6735, !tbaa !1328
  br label %if.end13, !dbg !6736

if.end13:                                         ; preds = %if.then8, %if.then
  %o.0 = phi %struct.redisObject* [ %3, %if.then ], [ %call9, %if.then8 ], !dbg !6737
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !6714, metadata !DIExpression()), !dbg !6715
  ret %struct.redisObject* %o.0, !dbg !6738
}

declare !dbg !6739 dso_local i8* @sdsfromlonglong(i64 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone uwtable willreturn
declare dso_local i32 @pthread_equal(i64 noundef, i64 noundef) local_unnamed_addr #17

declare !dbg !6742 dso_local i32 @lzf_decompress(i8* noundef, i32 noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone uwtable willreturn
define internal fastcc i32 @__bswap_32(i32 noundef %__bsx) unnamed_addr #17 !dbg !6747 {
entry:
  call void @llvm.dbg.value(metadata i32 %__bsx, metadata !6752, metadata !DIExpression()), !dbg !6753
  %or7 = tail call i32 @llvm.bswap.i32(i32 %__bsx), !dbg !6754
  ret i32 %or7, !dbg !6755
}

declare !dbg !6756 dso_local %struct.dict* @dictCreate(%struct.dictType* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @dictEncObjHash(i8* noundef %key) #0 !dbg !6759 {
entry:
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %key, metadata !6761, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i8* %key, metadata !6762, metadata !DIExpression()), !dbg !6771
  %0 = getelementptr inbounds i8, i8* %key, i64 9, !dbg !6772
  %1 = load i8, i8* %0, align 1, !dbg !6772, !tbaa !1529
  switch i8 %1, label %if.else14 [
    i8 0, label %if.then
    i8 1, label %if.then9
  ], !dbg !6773

if.then:                                          ; preds = %entry
  %ptr = bitcast i8* %key to i8**, !dbg !6774
  %2 = load i8*, i8** %ptr, align 8, !dbg !6774, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !6776
  %conv3 = trunc i64 %call to i32, !dbg !6776
  %call4 = tail call i32 @dictGenHashFunction(i8* noundef %2, i32 noundef %conv3) #23, !dbg !6777
  br label %cleanup, !dbg !6778

if.then9:                                         ; preds = %entry
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !6779
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6779
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !6763, metadata !DIExpression()), !dbg !6780
  %ptr10 = bitcast i8* %key to i8**, !dbg !6781
  %4 = load i8*, i8** %ptr10, align 8, !dbg !6781, !tbaa !1328
  %5 = ptrtoint i8* %4 to i64, !dbg !6782
  %call11 = call i32 @ll2string(i8* noundef nonnull %3, i64 noundef 32, i64 noundef %5) #22, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %call11, metadata !6768, metadata !DIExpression()), !dbg !6784
  %call13 = call i32 @dictGenHashFunction(i8* noundef nonnull %3, i32 noundef %call11) #23, !dbg !6785
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6786
  br label %cleanup

if.else14:                                        ; preds = %entry
  %6 = bitcast i8* %key to %struct.redisObject*, !dbg !6787
  call void @llvm.dbg.value(metadata %struct.redisObject* %6, metadata !6762, metadata !DIExpression()), !dbg !6771
  %call15 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %6) #22, !dbg !6788
  call void @llvm.dbg.value(metadata %struct.redisObject* %call15, metadata !6762, metadata !DIExpression()), !dbg !6771
  %ptr16 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call15, i64 0, i32 0, !dbg !6789
  %7 = load i8*, i8** %ptr16, align 8, !dbg !6789, !tbaa !1328
  %call18 = tail call i64 @sdslen(i8* noundef %7) #23, !dbg !6790
  %conv19 = trunc i64 %call18 to i32, !dbg !6790
  %call20 = tail call i32 @dictGenHashFunction(i8* noundef %7, i32 noundef %conv19) #23, !dbg !6791
  call void @llvm.dbg.value(metadata i32 %call20, metadata !6769, metadata !DIExpression()), !dbg !6792
  %8 = bitcast %struct.redisObject* %call15 to i8*, !dbg !6793
  tail call void @decrRefCount(i8* noundef %8) #22, !dbg !6794
  br label %cleanup

cleanup:                                          ; preds = %if.else14, %if.then9, %if.then
  %retval.0 = phi i32 [ %call4, %if.then ], [ %call13, %if.then9 ], [ %call20, %if.else14 ], !dbg !6795
  ret i32 %retval.0, !dbg !6796
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dictEncObjKeyCompare(i8* nocapture noundef readnone %privdata, i8* noundef %key1, i8* noundef %key2) #0 !dbg !6797 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !6799, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* %key1, metadata !6800, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* %key2, metadata !6801, metadata !DIExpression()), !dbg !6805
  %0 = bitcast i8* %key1 to %struct.redisObject*, !dbg !6806
  call void @llvm.dbg.value(metadata %struct.redisObject* %0, metadata !6802, metadata !DIExpression()), !dbg !6805
  %1 = bitcast i8* %key2 to %struct.redisObject*, !dbg !6807
  call void @llvm.dbg.value(metadata %struct.redisObject* %1, metadata !6803, metadata !DIExpression()), !dbg !6805
  %2 = getelementptr inbounds i8, i8* %key1, i64 9, !dbg !6808
  %3 = load i8, i8* %2, align 1, !dbg !6808, !tbaa !1529
  %cmp1 = icmp eq i8 %3, 1, !dbg !6810
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6811

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds i8, i8* %key2, i64 9, !dbg !6812
  %5 = load i8, i8* %4, align 1, !dbg !6812, !tbaa !1529
  %cmp5 = icmp eq i8 %5, 1, !dbg !6813
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6814

if.then:                                          ; preds = %land.lhs.true
  %ptr = bitcast i8* %key1 to i8**, !dbg !6815
  %6 = load i8*, i8** %ptr, align 8, !dbg !6815, !tbaa !1328
  %ptr7 = bitcast i8* %key2 to i8**, !dbg !6816
  %7 = load i8*, i8** %ptr7, align 8, !dbg !6816, !tbaa !1328
  %cmp8 = icmp eq i8* %6, %7, !dbg !6817
  %conv9 = zext i1 %cmp8 to i32, !dbg !6817
  br label %cleanup, !dbg !6818

if.end:                                           ; preds = %land.lhs.true, %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %0) #22, !dbg !6819
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !6802, metadata !DIExpression()), !dbg !6805
  %call10 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %1) #22, !dbg !6820
  call void @llvm.dbg.value(metadata %struct.redisObject* %call10, metadata !6803, metadata !DIExpression()), !dbg !6805
  %ptr11 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !6821
  %8 = load i8*, i8** %ptr11, align 8, !dbg !6821, !tbaa !1328
  %ptr12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call10, i64 0, i32 0, !dbg !6822
  %9 = load i8*, i8** %ptr12, align 8, !dbg !6822, !tbaa !1328
  %call13 = tail call i32 @sdsDictKeyCompare(i8* noundef %privdata, i8* noundef %8, i8* noundef %9) #22, !dbg !6823
  call void @llvm.dbg.value(metadata i32 %call13, metadata !6804, metadata !DIExpression()), !dbg !6805
  %10 = bitcast %struct.redisObject* %call to i8*, !dbg !6824
  tail call void @decrRefCount(i8* noundef %10) #22, !dbg !6825
  %11 = bitcast %struct.redisObject* %call10 to i8*, !dbg !6826
  tail call void @decrRefCount(i8* noundef %11) #22, !dbg !6827
  br label %cleanup, !dbg !6828

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %conv9, %if.then ], [ %call13, %if.end ], !dbg !6805
  ret i32 %retval.0, !dbg !6829
}

; Function Attrs: noinline nounwind uwtable
define internal void @dictRedisObjectDestructor(i8* nocapture noundef readnone %privdata, i8* noundef %val) #0 !dbg !6830 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %val, metadata !6833, metadata !DIExpression()), !dbg !6834
  %cmp = icmp eq i8* %val, null, !dbg !6835
  br i1 %cmp, label %return, label %if.end, !dbg !6837

if.end:                                           ; preds = %entry
  tail call void @decrRefCount(i8* noundef nonnull %val) #22, !dbg !6838
  br label %return, !dbg !6839

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6839
}

declare !dbg !6840 dso_local i32 @dictGenHashFunction(i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @sdsDictKeyCompare(i8* nocapture noundef readnone %privdata, i8* noundef %key1, i8* noundef %key2) #0 !dbg !6845 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !6847, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i8* %key1, metadata !6848, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i8* %key2, metadata !6849, metadata !DIExpression()), !dbg !6852
  %call = tail call i64 @sdslen(i8* noundef %key1) #23, !dbg !6853
  %conv = trunc i64 %call to i32, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6850, metadata !DIExpression()), !dbg !6852
  %call1 = tail call i64 @sdslen(i8* noundef %key2) #23, !dbg !6854
  %conv2 = trunc i64 %call1 to i32, !dbg !6854
  call void @llvm.dbg.value(metadata i32 %conv2, metadata !6851, metadata !DIExpression()), !dbg !6852
  %cmp.not = icmp eq i32 %conv, %conv2, !dbg !6855
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !6857

if.end:                                           ; preds = %entry
  %sext = shl i64 %call, 32, !dbg !6858
  %conv4 = ashr exact i64 %sext, 32, !dbg !6858
  %call5 = tail call i32 @memcmp(i8* noundef %key1, i8* noundef %key2, i64 noundef %conv4) #27, !dbg !6859
  %cmp6 = icmp eq i32 %call5, 0, !dbg !6860
  %conv7 = zext i1 %cmp6 to i32, !dbg !6860
  br label %cleanup, !dbg !6861

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv7, %if.end ], [ 0, %entry ], !dbg !6852
  ret i32 %retval.0, !dbg !6862
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !6863 dso_local i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #11

; Function Attrs: noinline nounwind uwtable
define internal %struct.zskiplist* @zslCreate() #0 !dbg !6866 {
entry:
  %call = tail call i8* @zmalloc(i64 noundef 32) #23, !dbg !6872
  call void @llvm.dbg.value(metadata i8* %call, metadata !6871, metadata !DIExpression()), !dbg !6873
  %level = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6874
  %0 = bitcast i8* %level to i32*, !dbg !6874
  store i32 1, i32* %0, align 8, !dbg !6875, !tbaa !1133
  %length = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6876
  %1 = bitcast i8* %length to i64*, !dbg !6876
  store i64 0, i64* %1, align 8, !dbg !6877, !tbaa !1187
  %call1 = tail call %struct.zskiplistNode* @zslCreateNode(i32 noundef 32, double noundef 0.000000e+00, %struct.redisObject* noundef null) #22, !dbg !6878
  %header = bitcast i8* %call to %struct.zskiplistNode**, !dbg !6879
  store %struct.zskiplistNode* %call1, %struct.zskiplistNode** %header, align 8, !dbg !6880, !tbaa !1178
  call void @llvm.dbg.value(metadata i32 0, metadata !6870, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i64 0, metadata !6870, metadata !DIExpression()), !dbg !6873
  %forward25 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %call1, i64 0, i32 0, !dbg !6881
  %2 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward25, align 8, !dbg !6881, !tbaa !1141
  store %struct.zskiplistNode* null, %struct.zskiplistNode** %2, align 8, !dbg !6885, !tbaa !782
  br label %for.inc.for.body_crit_edge, !dbg !6886

for.inc.for.body_crit_edge:                       ; preds = %for.inc.for.body_crit_edge.1, %entry
  %indvars.iv26 = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.inc.for.body_crit_edge.1 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv26, metadata !6870, metadata !DIExpression()), !dbg !6873
  %3 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !6887, !tbaa !1178
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %3, i64 0, i32 2, !dbg !6889
  %4 = load i32*, i32** %span, align 8, !dbg !6889, !tbaa !1148
  %arrayidx6 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv26, !dbg !6890
  store i32 0, i32* %arrayidx6, align 4, !dbg !6891, !tbaa !926
  %indvars.iv.next = or i64 %indvars.iv26, 1, !dbg !6892
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !6870, metadata !DIExpression()), !dbg !6873
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %3, i64 0, i32 0, !dbg !6881
  %5 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !6881, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %5, i64 %indvars.iv.next, !dbg !6893
  store %struct.zskiplistNode* null, %struct.zskiplistNode** %arrayidx, align 8, !dbg !6885, !tbaa !782
  %cmp3.not = icmp eq i64 %indvars.iv.next, 31, !dbg !6894
  br i1 %cmp3.not, label %for.end, label %for.inc.for.body_crit_edge.1, !dbg !6886

for.inc.for.body_crit_edge.1:                     ; preds = %for.inc.for.body_crit_edge
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !6870, metadata !DIExpression()), !dbg !6873
  %6 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !6887, !tbaa !1178
  %span.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %6, i64 0, i32 2, !dbg !6889
  %7 = load i32*, i32** %span.1, align 8, !dbg !6889, !tbaa !1148
  %arrayidx6.1 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next, !dbg !6890
  store i32 0, i32* %arrayidx6.1, align 4, !dbg !6891, !tbaa !926
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv26, 2, !dbg !6892
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !6870, metadata !DIExpression()), !dbg !6873
  %forward.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %6, i64 0, i32 0, !dbg !6881
  %8 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.1, align 8, !dbg !6881, !tbaa !1141
  %arrayidx.1 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %8, i64 %indvars.iv.next.1, !dbg !6893
  store %struct.zskiplistNode* null, %struct.zskiplistNode** %arrayidx.1, align 8, !dbg !6885, !tbaa !782
  br label %for.inc.for.body_crit_edge

for.end:                                          ; preds = %for.inc.for.body_crit_edge
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !6870, metadata !DIExpression()), !dbg !6873
  %9 = bitcast i8* %call to %struct.zskiplist*, !dbg !6872
  call void @llvm.dbg.value(metadata %struct.zskiplist* %9, metadata !6871, metadata !DIExpression()), !dbg !6873
  %10 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !6895, !tbaa !1178
  %backward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %10, i64 0, i32 1, !dbg !6896
  store %struct.zskiplistNode* null, %struct.zskiplistNode** %backward, align 8, !dbg !6897, !tbaa !1173
  %tail = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6898
  %11 = bitcast i8* %tail to %struct.zskiplistNode**, !dbg !6898
  store %struct.zskiplistNode* null, %struct.zskiplistNode** %11, align 8, !dbg !6899, !tbaa !6900
  ret %struct.zskiplist* %9, !dbg !6901
}

; Function Attrs: noinline nounwind uwtable
define internal void @dictVanillaFree(i8* nocapture noundef readnone %privdata, i8* noundef %val) #0 !dbg !6902 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !6904, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8* %val, metadata !6905, metadata !DIExpression()), !dbg !6906
  tail call void @zfree(i8* noundef %val) #23, !dbg !6907
  ret void, !dbg !6908
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zskiplistNode* @zslCreateNode(i32 noundef %level, double noundef %score, %struct.redisObject* noundef %obj) #0 !dbg !6909 {
entry:
  call void @llvm.dbg.value(metadata i32 %level, metadata !6913, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata double %score, metadata !6914, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !6915, metadata !DIExpression()), !dbg !6917
  %call = tail call i8* @zmalloc(i64 noundef 40) #23, !dbg !6918
  call void @llvm.dbg.value(metadata i8* %call, metadata !6916, metadata !DIExpression()), !dbg !6917
  %conv = sext i32 %level to i64, !dbg !6919
  %mul = shl nsw i64 %conv, 3, !dbg !6920
  %call1 = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !6921
  %0 = bitcast i8* %call to i8**, !dbg !6922
  store i8* %call1, i8** %0, align 8, !dbg !6922, !tbaa !1141
  %cmp = icmp sgt i32 %level, 1, !dbg !6923
  br i1 %cmp, label %if.then, label %if.else, !dbg !6925

if.then:                                          ; preds = %entry
  %sub = add nsw i32 %level, -1, !dbg !6926
  %1 = zext i32 %sub to i64
  %mul4 = shl nuw nsw i64 %1, 2, !dbg !6927
  %call5 = tail call i8* @zmalloc(i64 noundef %mul4) #23, !dbg !6928
  %span = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6929
  %2 = bitcast i8* %span to i8**, !dbg !6930
  store i8* %call5, i8** %2, align 8, !dbg !6930, !tbaa !1148
  br label %if.end, !dbg !6931

if.else:                                          ; preds = %entry
  %span6 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6932
  %3 = bitcast i8* %span6 to i32**, !dbg !6932
  store i32* null, i32** %3, align 8, !dbg !6933, !tbaa !1148
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = bitcast i8* %call to %struct.zskiplistNode*, !dbg !6918
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %4, metadata !6916, metadata !DIExpression()), !dbg !6917
  %score7 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6934
  %5 = bitcast i8* %score7 to double*, !dbg !6934
  store double %score, double* %5, align 8, !dbg !6935, !tbaa !6393
  %obj8 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !6936
  %6 = bitcast i8* %obj8 to %struct.redisObject**, !dbg !6936
  store %struct.redisObject* %obj, %struct.redisObject** %6, align 8, !dbg !6937, !tbaa !6399
  ret %struct.zskiplistNode* %4, !dbg !6938
}

; Function Attrs: nounwind
declare !dbg !6939 dso_local i32 @__isoc99_sscanf(i8* noundef, i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @compareStringObjects(%struct.redisObject* noundef readonly %a, %struct.redisObject* noundef readonly %b) #0 !dbg !6942 {
entry:
  %bufa = alloca [128 x i8], align 16
  %bufb = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisObject* %a, metadata !6946, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata %struct.redisObject* %b, metadata !6947, metadata !DIExpression()), !dbg !6953
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %a, i64 0, i32 1, !dbg !6954
  %0 = load i8, i8* %type, align 8, !dbg !6954, !tbaa !1526
  %cmp = icmp eq i8 %0, 0, !dbg !6954
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6954

land.lhs.true:                                    ; preds = %entry
  %type2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 1, !dbg !6954
  %1 = load i8, i8* %type2, align 8, !dbg !6954, !tbaa !1526
  %cmp4 = icmp eq i8 %1, 0, !dbg !6954
  br i1 %cmp4, label %cond.end, label %cond.false, !dbg !6954

cond.false:                                       ; preds = %land.lhs.true, %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.102, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3237) #22, !dbg !6954
  tail call void @_exit(i32 noundef 1) #26, !dbg !6954
  unreachable, !dbg !6954

cond.end:                                         ; preds = %land.lhs.true
  %2 = getelementptr inbounds [128 x i8], [128 x i8]* %bufa, i64 0, i64 0, !dbg !6955
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %2) #24, !dbg !6955
  call void @llvm.dbg.declare(metadata [128 x i8]* %bufa, metadata !6948, metadata !DIExpression()), !dbg !6956
  %3 = getelementptr inbounds [128 x i8], [128 x i8]* %bufb, i64 0, i64 0, !dbg !6955
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #24, !dbg !6955
  call void @llvm.dbg.declare(metadata [128 x i8]* %bufb, metadata !6949, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 1, metadata !6952, metadata !DIExpression()), !dbg !6953
  %cmp6 = icmp eq %struct.redisObject* %a, %b, !dbg !6958
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !6960

if.end:                                           ; preds = %cond.end
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %a, i64 0, i32 2, !dbg !6961
  %4 = load i8, i8* %encoding, align 1, !dbg !6961, !tbaa !1529
  %cmp9.not = icmp eq i8 %4, 0, !dbg !6963
  %ptr13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %a, i64 0, i32 0, !dbg !6964
  %5 = load i8*, i8** %ptr13, align 8, !dbg !6964, !tbaa !1328
  br i1 %cmp9.not, label %if.end14.thread, label %if.end14, !dbg !6965

if.end14:                                         ; preds = %if.end
  %6 = ptrtoint i8* %5 to i64, !dbg !6966
  %call = call i32 @ll2string(i8* noundef nonnull %2, i64 noundef 128, i64 noundef %6) #22, !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i8* %2, metadata !6950, metadata !DIExpression()), !dbg !6953
  %encoding15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 2, !dbg !6969
  %7 = load i8, i8* %encoding15, align 1, !dbg !6969, !tbaa !1529
  %cmp17.not = icmp eq i8 %7, 0, !dbg !6971
  br i1 %cmp17.not, label %if.end26, label %if.end26.thread, !dbg !6972

if.end14.thread:                                  ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i8* %2, metadata !6950, metadata !DIExpression()), !dbg !6953
  %encoding1555 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 2, !dbg !6969
  %8 = load i8, i8* %encoding1555, align 1, !dbg !6969, !tbaa !1529
  %cmp17.not56 = icmp eq i8 %8, 0, !dbg !6971
  br i1 %cmp17.not56, label %cond.true27, label %if.end26.thread, !dbg !6972

if.end26.thread:                                  ; preds = %if.end14, %if.end14.thread
  %astr.059 = phi i8* [ %5, %if.end14.thread ], [ %2, %if.end14 ]
  %ptr21 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 0, !dbg !6973
  %9 = load i8*, i8** %ptr21, align 8, !dbg !6973, !tbaa !1328
  %10 = ptrtoint i8* %9 to i64, !dbg !6975
  %call22 = call i32 @ll2string(i8* noundef nonnull %3, i64 noundef 128, i64 noundef %10) #22, !dbg !6976
  call void @llvm.dbg.value(metadata i32 0, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i8* %11, metadata !6951, metadata !DIExpression()), !dbg !6953
  br label %cond.false29, !dbg !6977

if.end26:                                         ; preds = %if.end14
  %ptr25 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 0, !dbg !6978
  %11 = load i8*, i8** %ptr25, align 8, !dbg !6978, !tbaa !1328
  call void @llvm.dbg.value(metadata i32 0, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i8* %11, metadata !6951, metadata !DIExpression()), !dbg !6953
  br label %cond.false29, !dbg !6977

cond.true27:                                      ; preds = %if.end14.thread
  %ptr2564 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 0, !dbg !6978
  %12 = load i8*, i8** %ptr2564, align 8, !dbg !6978, !tbaa !1328
  call void @llvm.dbg.value(metadata i32 0, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i8* %11, metadata !6951, metadata !DIExpression()), !dbg !6953
  %call28 = tail call i32 @sdscmp(i8* noundef %5, i8* noundef %12) #23, !dbg !6980
  br label %cleanup, !dbg !6977

cond.false29:                                     ; preds = %if.end26, %if.end26.thread
  %astr.058 = phi i8* [ %astr.059, %if.end26.thread ], [ %2, %if.end26 ]
  %bstr.052 = phi i8* [ %3, %if.end26.thread ], [ %11, %if.end26 ]
  %call30 = call i32 @strcmp(i8* noundef %astr.058, i8* noundef %bstr.052) #27, !dbg !6981
  br label %cleanup, !dbg !6977

cleanup:                                          ; preds = %cond.true27, %cond.false29, %cond.end
  %retval.0 = phi i32 [ 0, %cond.end ], [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !6953
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #24, !dbg !6982
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %2) #24, !dbg !6982
  ret i32 %retval.0, !dbg !6982
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @zslRandomLevel() #0 !dbg !6983 {
entry:
  call void @llvm.dbg.value(metadata i32 1, metadata !6985, metadata !DIExpression()), !dbg !6986
  br label %while.cond, !dbg !6987

while.cond:                                       ; preds = %while.cond, %entry
  %level.0 = phi i32 [ 1, %entry ], [ %add, %while.cond ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %level.0, metadata !6985, metadata !DIExpression()), !dbg !6986
  %call = tail call i64 @random() #23, !dbg !6988
  %and = and i64 %call, 49152, !dbg !6989
  %cmp = icmp eq i64 %and, 0, !dbg !6990
  %add = add nuw nsw i32 %level.0, 1, !dbg !6991
  call void @llvm.dbg.value(metadata i32 %add, metadata !6985, metadata !DIExpression()), !dbg !6986
  br i1 %cmp, label %while.cond, label %while.end, !dbg !6987, !llvm.loop !6992

while.end:                                        ; preds = %while.cond
  %cmp2 = icmp ult i32 %level.0, 32, !dbg !6994
  %cond = select i1 %cmp2, i32 %level.0, i32 32, !dbg !6995
  ret i32 %cond, !dbg !6996
}

declare !dbg !6997 dso_local i32 @sdscmp(i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !7000 dso_local i64 @random() local_unnamed_addr #3

declare !dbg !7003 dso_local i8* @zipmapNew() local_unnamed_addr #4

declare !dbg !7006 dso_local i8* @zipmapRewind(i8* noundef) local_unnamed_addr #4

declare !dbg !7009 dso_local i8* @zipmapNext(i8* noundef, i8** noundef, i32* noundef, i8** noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i64 @rdbSavedObjectLen(%struct.redisObject* noundef %o, %struct._IO_FILE* noundef %fp) #0 !dbg !7013 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !7015, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7016, metadata !DIExpression()), !dbg !7017
  %cmp = icmp eq %struct._IO_FILE* %fp, null, !dbg !7018
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 87), align 8
  %spec.select = select i1 %cmp, %struct._IO_FILE* %0, %struct._IO_FILE* %fp, !dbg !7020
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %spec.select, metadata !7016, metadata !DIExpression()), !dbg !7017
  tail call void @rewind(%struct._IO_FILE* noundef %spec.select) #23, !dbg !7021
  %call = tail call i32 @rdbSaveObject(%struct._IO_FILE* noundef %spec.select, %struct.redisObject* noundef %o) #22, !dbg !7022
  %call2 = tail call i64 @ftello64(%struct._IO_FILE* noundef %spec.select) #23, !dbg !7023
  ret i64 %call2, !dbg !7024
}

declare !dbg !7025 dso_local void @rewind(%struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %o) #0 !dbg !7028 {
entry:
  %li = alloca %struct.listIter, align 8
  %key129 = alloca i8*, align 8
  %val130 = alloca i8*, align 8
  %klen = alloca i32, align 4
  %vlen = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7032, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !7033, metadata !DIExpression()), !dbg !7073
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !7074
  %0 = load i8, i8* %type, align 8, !dbg !7074, !tbaa !1526
  switch i8 %0, label %if.else211 [
    i8 0, label %if.then
    i8 1, label %if.then9
    i8 2, label %if.then31
    i8 3, label %if.then68
    i8 4, label %if.then120
  ], !dbg !7075

if.then:                                          ; preds = %entry
  %call = tail call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef nonnull %o) #22, !dbg !7076
  %cmp2 = icmp eq i32 %call, -1, !dbg !7079
  br i1 %cmp2, label %return, label %if.end216, !dbg !7080

if.then9:                                         ; preds = %entry
  %1 = bitcast %struct.redisObject* %o to %struct.list**, !dbg !7081
  %2 = load %struct.list*, %struct.list** %1, align 8, !dbg !7081, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %2, metadata !7034, metadata !DIExpression()), !dbg !7082
  %3 = bitcast %struct.listIter* %li to i8*, !dbg !7083
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !7083
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !7038, metadata !DIExpression()), !dbg !7084
  %len = getelementptr inbounds %struct.list, %struct.list* %2, i64 0, i32 5, !dbg !7085
  %4 = load i32, i32* %len, align 8, !dbg !7085, !tbaa !1358
  %call10 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %4) #22, !dbg !7087
  %cmp11 = icmp eq i32 %call10, -1, !dbg !7088
  br i1 %cmp11, label %cleanup21.thread, label %if.end14, !dbg !7089

if.end14:                                         ; preds = %if.then9
  call void @listRewind(%struct.list* noundef nonnull %2, %struct.listIter* noundef nonnull %li) #23, !dbg !7090
  br label %while.cond, !dbg !7091

while.cond:                                       ; preds = %while.body, %if.end14
  %call15 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !7092
  call void @llvm.dbg.value(metadata %struct.listNode* %call15, metadata !7039, metadata !DIExpression()), !dbg !7082
  %tobool.not = icmp eq %struct.listNode* %call15, null, !dbg !7091
  br i1 %tobool.not, label %cleanup21, label %while.body, !dbg !7091

while.body:                                       ; preds = %while.cond
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call15, i64 0, i32 2, !dbg !7093
  %5 = bitcast i8** %value to %struct.redisObject**, !dbg !7093
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !7093, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %6, metadata !7040, metadata !DIExpression()), !dbg !7094
  %call16 = call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %6) #22, !dbg !7095
  %cmp17 = icmp eq i32 %call16, -1, !dbg !7097
  br i1 %cmp17, label %cleanup21.thread, label %while.cond, !llvm.loop !7098

cleanup21.thread:                                 ; preds = %while.body, %if.then9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !7100
  br label %return

cleanup21:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !7100
  br label %if.end216

if.then31:                                        ; preds = %entry
  %7 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !7101
  %8 = load %struct.dict*, %struct.dict** %7, align 8, !dbg !7101, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.dict* %8, metadata !7042, metadata !DIExpression()), !dbg !7102
  %call33 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %8) #23, !dbg !7103
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call33, metadata !7045, metadata !DIExpression()), !dbg !7102
  %used = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 0, i32 3, !dbg !7104
  %9 = load i64, i64* %used, align 8, !dbg !7104, !tbaa !3545
  %used36 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 1, i32 3, !dbg !7104
  %10 = load i64, i64* %used36, align 8, !dbg !7104, !tbaa !3545
  %add = add i64 %10, %9, !dbg !7104
  %conv37 = trunc i64 %add to i32, !dbg !7104
  %call38 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %conv37) #22, !dbg !7106
  %cmp39 = icmp eq i32 %call38, -1, !dbg !7107
  br i1 %cmp39, label %return, label %while.cond43, !dbg !7108

while.cond43:                                     ; preds = %if.then31, %while.body47
  %call44 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call33) #23, !dbg !7109
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call44, metadata !7046, metadata !DIExpression()), !dbg !7102
  %cmp45.not = icmp eq %struct.dictEntry* %call44, null, !dbg !7110
  br i1 %cmp45.not, label %cleanup58, label %while.body47, !dbg !7111

while.body47:                                     ; preds = %while.cond43
  %11 = bitcast %struct.dictEntry* %call44 to %struct.redisObject**, !dbg !7112
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !7112, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %12, metadata !7047, metadata !DIExpression()), !dbg !7113
  %call49 = tail call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %12) #22, !dbg !7114
  %cmp50 = icmp eq i32 %call49, -1, !dbg !7116
  br i1 %cmp50, label %return, label %while.cond43, !llvm.loop !7117

cleanup58:                                        ; preds = %while.cond43
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call33) #23, !dbg !7119
  br label %if.end216

if.then68:                                        ; preds = %entry
  %13 = bitcast %struct.redisObject* %o to %struct.zset**, !dbg !7120
  %14 = load %struct.zset*, %struct.zset** %13, align 8, !dbg !7120, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %14, metadata !7049, metadata !DIExpression()), !dbg !7121
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %14, i64 0, i32 0, !dbg !7122
  %15 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !7122, !tbaa !6133
  %call71 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %15) #23, !dbg !7123
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call71, metadata !7052, metadata !DIExpression()), !dbg !7121
  %16 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !7124, !tbaa !6133
  %used76 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 3, !dbg !7124
  %17 = load i64, i64* %used76, align 8, !dbg !7124, !tbaa !3545
  %used80 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 3, !dbg !7124
  %18 = load i64, i64* %used80, align 8, !dbg !7124, !tbaa !3545
  %add81 = add i64 %18, %17, !dbg !7124
  %conv82 = trunc i64 %add81 to i32, !dbg !7124
  %call83 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %conv82) #22, !dbg !7126
  %cmp84 = icmp eq i32 %call83, -1, !dbg !7127
  br i1 %cmp84, label %return, label %while.cond88, !dbg !7128

while.cond88:                                     ; preds = %if.then68, %if.end99
  %call89 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call71) #23, !dbg !7129
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call89, metadata !7053, metadata !DIExpression()), !dbg !7121
  %cmp90.not = icmp eq %struct.dictEntry* %call89, null, !dbg !7130
  br i1 %cmp90.not, label %cleanup110, label %while.body92, !dbg !7131

while.body92:                                     ; preds = %while.cond88
  %19 = bitcast %struct.dictEntry* %call89 to %struct.redisObject**, !dbg !7132
  %20 = load %struct.redisObject*, %struct.redisObject** %19, align 8, !dbg !7132, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %20, metadata !7054, metadata !DIExpression()), !dbg !7133
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call89, i64 0, i32 1, !dbg !7134
  %21 = bitcast i8** %val to double**, !dbg !7134
  %22 = load double*, double** %21, align 8, !dbg !7134, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %22, metadata !7056, metadata !DIExpression()), !dbg !7133
  %call95 = tail call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %20) #22, !dbg !7135
  %cmp96 = icmp eq i32 %call95, -1, !dbg !7137
  br i1 %cmp96, label %return, label %if.end99, !dbg !7138

if.end99:                                         ; preds = %while.body92
  %23 = load double, double* %22, align 8, !dbg !7139, !tbaa !6140
  %call100 = tail call i32 @rdbSaveDoubleValue(%struct._IO_FILE* noundef %fp, double noundef %23) #22, !dbg !7141
  %cmp101.not = icmp eq i32 %call100, -1, !dbg !7142
  br i1 %cmp101.not, label %return, label %while.cond88, !llvm.loop !7143

cleanup110:                                       ; preds = %while.cond88
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call71) #23, !dbg !7145
  br label %if.end216

if.then120:                                       ; preds = %entry
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !7146
  %24 = load i8, i8* %encoding, align 1, !dbg !7146, !tbaa !1529
  %cmp122 = icmp eq i8 %24, 2, !dbg !7147
  br i1 %cmp122, label %if.then124, label %if.else162, !dbg !7148

if.then124:                                       ; preds = %if.then120
  %ptr125 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !7149
  %25 = load i8*, i8** %ptr125, align 8, !dbg !7149, !tbaa !1328
  %call126 = tail call i8* @zipmapRewind(i8* noundef %25) #23, !dbg !7150
  call void @llvm.dbg.value(metadata i8* %call126, metadata !7057, metadata !DIExpression()), !dbg !7151
  %26 = load i8*, i8** %ptr125, align 8, !dbg !7152, !tbaa !1328
  %call128 = tail call i32 @zipmapLen(i8* noundef %26) #23, !dbg !7153
  call void @llvm.dbg.value(metadata i32 %call128, metadata !7062, metadata !DIExpression()), !dbg !7151
  %27 = bitcast i8** %key129 to i8*, !dbg !7154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #24, !dbg !7154
  %28 = bitcast i8** %val130 to i8*, !dbg !7154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #24, !dbg !7154
  %29 = bitcast i32* %klen to i8*, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #24, !dbg !7155
  %30 = bitcast i32* %vlen to i8*, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #24, !dbg !7155
  %call131 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %call128) #22, !dbg !7156
  %cmp132 = icmp eq i32 %call131, -1, !dbg !7158
  br i1 %cmp132, label %cleanup154.thread, label %while.cond136, !dbg !7159

while.cond136:                                    ; preds = %if.then124, %if.end146
  %p.0 = phi i8* [ %call137, %if.end146 ], [ %call126, %if.then124 ], !dbg !7151
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !7057, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i8** %key129, metadata !7063, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call void @llvm.dbg.value(metadata i8** %val130, metadata !7064, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call void @llvm.dbg.value(metadata i32* %klen, metadata !7065, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !7066, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  %call137 = call i8* @zipmapNext(i8* noundef %p.0, i8** noundef nonnull %key129, i32* noundef nonnull %klen, i8** noundef nonnull %val130, i32* noundef nonnull %vlen) #23, !dbg !7160
  call void @llvm.dbg.value(metadata i8* %call137, metadata !7057, metadata !DIExpression()), !dbg !7151
  %cmp138.not = icmp eq i8* %call137, null, !dbg !7161
  br i1 %cmp138.not, label %cleanup154, label %while.body140, !dbg !7162

while.body140:                                    ; preds = %while.cond136
  %31 = load i8*, i8** %key129, align 8, !dbg !7163, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %31, metadata !7063, metadata !DIExpression()), !dbg !7151
  %32 = load i32, i32* %klen, align 4, !dbg !7166, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %32, metadata !7065, metadata !DIExpression()), !dbg !7151
  %conv141 = zext i32 %32 to i64, !dbg !7166
  %call142 = call i32 @rdbSaveRawString(%struct._IO_FILE* noundef %fp, i8* noundef %31, i64 noundef %conv141) #22, !dbg !7167
  %cmp143 = icmp eq i32 %call142, -1, !dbg !7168
  br i1 %cmp143, label %cleanup154.thread, label %if.end146, !dbg !7169

if.end146:                                        ; preds = %while.body140
  %33 = load i8*, i8** %val130, align 8, !dbg !7170, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %33, metadata !7064, metadata !DIExpression()), !dbg !7151
  %34 = load i32, i32* %vlen, align 4, !dbg !7172, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %34, metadata !7066, metadata !DIExpression()), !dbg !7151
  %conv147 = zext i32 %34 to i64, !dbg !7172
  %call148 = call i32 @rdbSaveRawString(%struct._IO_FILE* noundef %fp, i8* noundef %33, i64 noundef %conv147) #22, !dbg !7173
  %cmp149 = icmp eq i32 %call148, -1, !dbg !7174
  br i1 %cmp149, label %cleanup154.thread, label %while.cond136, !dbg !7175, !llvm.loop !7176

cleanup154.thread:                                ; preds = %while.body140, %if.end146, %if.then124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #24, !dbg !7178
  br label %return

cleanup154:                                       ; preds = %while.cond136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #24, !dbg !7178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #24, !dbg !7178
  br label %if.end216

if.else162:                                       ; preds = %if.then120
  %35 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !7179
  %36 = load %struct.dict*, %struct.dict** %35, align 8, !dbg !7179, !tbaa !1328
  %call165 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %36) #23, !dbg !7180
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call165, metadata !7067, metadata !DIExpression()), !dbg !7181
  %37 = load %struct.dict*, %struct.dict** %35, align 8, !dbg !7182, !tbaa !1328
  %used170 = getelementptr inbounds %struct.dict, %struct.dict* %37, i64 0, i32 2, i64 0, i32 3, !dbg !7182
  %38 = load i64, i64* %used170, align 8, !dbg !7182, !tbaa !3545
  %used174 = getelementptr inbounds %struct.dict, %struct.dict* %37, i64 0, i32 2, i64 1, i32 3, !dbg !7182
  %39 = load i64, i64* %used174, align 8, !dbg !7182, !tbaa !3545
  %add175 = add i64 %39, %38, !dbg !7182
  %conv176 = trunc i64 %add175 to i32, !dbg !7182
  %call177 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %conv176) #22, !dbg !7184
  %cmp178 = icmp eq i32 %call177, -1, !dbg !7185
  br i1 %cmp178, label %return, label %while.cond182, !dbg !7186

while.cond182:                                    ; preds = %if.else162, %if.end195
  %call183 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call165) #23, !dbg !7187
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call183, metadata !7069, metadata !DIExpression()), !dbg !7181
  %cmp184.not = icmp eq %struct.dictEntry* %call183, null, !dbg !7188
  br i1 %cmp184.not, label %cleanup206, label %while.body186, !dbg !7189

while.body186:                                    ; preds = %while.cond182
  %40 = bitcast %struct.dictEntry* %call183 to %struct.redisObject**, !dbg !7190
  %41 = load %struct.redisObject*, %struct.redisObject** %40, align 8, !dbg !7190, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %41, metadata !7070, metadata !DIExpression()), !dbg !7191
  %val190 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call183, i64 0, i32 1, !dbg !7192
  %42 = bitcast i8** %val190 to %struct.redisObject**, !dbg !7192
  %43 = load %struct.redisObject*, %struct.redisObject** %42, align 8, !dbg !7192, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %43, metadata !7072, metadata !DIExpression()), !dbg !7191
  %call191 = tail call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %41) #22, !dbg !7193
  %cmp192 = icmp eq i32 %call191, -1, !dbg !7195
  br i1 %cmp192, label %return, label %if.end195, !dbg !7196

if.end195:                                        ; preds = %while.body186
  %call196 = tail call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %43) #22, !dbg !7197
  %cmp197.not = icmp eq i32 %call196, -1, !dbg !7199
  br i1 %cmp197.not, label %return, label %while.cond182, !llvm.loop !7200

cleanup206:                                       ; preds = %while.cond182
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call165) #23, !dbg !7202
  br label %if.end216

if.else211:                                       ; preds = %entry
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3666) #22, !dbg !7203
  tail call void @_exit(i32 noundef 1) #26, !dbg !7203
  unreachable, !dbg !7203

if.end216:                                        ; preds = %cleanup206, %cleanup154, %cleanup110, %cleanup58, %cleanup21, %if.then
  br label %return, !dbg !7205

return:                                           ; preds = %while.body186, %if.end195, %while.body92, %if.end99, %while.body47, %if.else162, %if.then68, %if.then31, %cleanup154.thread, %cleanup21.thread, %if.then, %if.end216
  %retval.13 = phi i32 [ 0, %if.end216 ], [ -1, %if.then ], [ -1, %cleanup21.thread ], [ -1, %cleanup154.thread ], [ -1, %if.then31 ], [ -1, %if.then68 ], [ -1, %if.else162 ], [ -1, %while.body47 ], [ -1, %if.end99 ], [ -1, %while.body92 ], [ -1, %if.end195 ], [ -1, %while.body186 ], !dbg !7073
  ret i32 %retval.13, !dbg !7206
}

declare !dbg !7207 dso_local i64 @ftello64(%struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveStringObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %obj) #0 !dbg !7210 {
entry:
  %buf = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7212, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !7213, metadata !DIExpression()), !dbg !7223
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 2, !dbg !7224
  %0 = load i8, i8* %encoding, align 1, !dbg !7224, !tbaa !1529
  %cmp = icmp eq i8 %0, 1, !dbg !7225
  br i1 %cmp, label %if.then, label %if.end15, !dbg !7226

if.then:                                          ; preds = %entry
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 0, !dbg !7227
  %1 = load i8*, i8** %ptr, align 8, !dbg !7227, !tbaa !1328
  %2 = ptrtoint i8* %1 to i64, !dbg !7228
  call void @llvm.dbg.value(metadata i64 %2, metadata !7215, metadata !DIExpression()), !dbg !7229
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %buf, i64 0, i64 0, !dbg !7230
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #24, !dbg !7230
  call void @llvm.dbg.declare(metadata [5 x i8]* %buf, metadata !7218, metadata !DIExpression()), !dbg !7231
  %call = call i32 @rdbEncodeInteger(i64 noundef %2, i8* noundef nonnull %3) #22, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %call, metadata !7222, metadata !DIExpression()), !dbg !7229
  %cmp3 = icmp sgt i32 %call, 0, !dbg !7234
  br i1 %cmp3, label %cleanup, label %cleanup.thread, !dbg !7235

cleanup.thread:                                   ; preds = %if.then
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #24, !dbg !7236
  %.pr = load i8, i8* %encoding, align 1, !dbg !7237, !tbaa !1529
  br label %if.end15

cleanup:                                          ; preds = %if.then
  %conv747 = zext i32 %call to i64, !dbg !7239
  %call8 = call i64 @fwrite(i8* noundef nonnull %3, i64 noundef %conv747, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7242
  %cmp9 = icmp eq i64 %call8, 0, !dbg !7243
  %. = sext i1 %cmp9 to i32, !dbg !7244
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #24, !dbg !7236
  br label %cleanup31

if.end15:                                         ; preds = %cleanup.thread, %entry
  %4 = phi i8 [ %.pr, %cleanup.thread ], [ %0, %entry ], !dbg !7237
  %cmp18.not = icmp eq i8 %4, 0, !dbg !7245
  br i1 %cmp18.not, label %if.else, label %if.then20, !dbg !7246

if.then20:                                        ; preds = %if.end15
  %call21 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %obj) #22, !dbg !7247
  call void @llvm.dbg.value(metadata %struct.redisObject* %call21, metadata !7213, metadata !DIExpression()), !dbg !7223
  %ptr22 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call21, i64 0, i32 0, !dbg !7249
  %5 = load i8*, i8** %ptr22, align 8, !dbg !7249, !tbaa !1328
  %call24 = tail call i64 @sdslen(i8* noundef %5) #23, !dbg !7250
  %call25 = tail call i32 @rdbSaveRawString(%struct._IO_FILE* noundef %fp, i8* noundef %5, i64 noundef %call24) #22, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %call25, metadata !7214, metadata !DIExpression()), !dbg !7223
  %6 = bitcast %struct.redisObject* %call21 to i8*, !dbg !7252
  tail call void @decrRefCount(i8* noundef %6) #22, !dbg !7253
  br label %cleanup31, !dbg !7254

if.else:                                          ; preds = %if.end15
  %ptr26 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 0, !dbg !7255
  %7 = load i8*, i8** %ptr26, align 8, !dbg !7255, !tbaa !1328
  %call28 = tail call i64 @sdslen(i8* noundef %7) #23, !dbg !7257
  %call29 = tail call i32 @rdbSaveRawString(%struct._IO_FILE* noundef %fp, i8* noundef %7, i64 noundef %call28) #22, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %call29, metadata !7214, metadata !DIExpression()), !dbg !7223
  br label %cleanup31

cleanup31:                                        ; preds = %cleanup, %if.then20, %if.else
  %retval.1 = phi i32 [ %., %cleanup ], [ %call25, %if.then20 ], [ %call29, %if.else ], !dbg !7223
  ret i32 %retval.1, !dbg !7259
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %len) #0 !dbg !7260 {
entry:
  %len.addr = alloca i32, align 4
  %buf = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7264, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %len, metadata !7265, metadata !DIExpression()), !dbg !7267
  %0 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !7268
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24, !dbg !7268
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !7266, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i32 %len, metadata !7265, metadata !DIExpression()), !dbg !7267
  %cmp = icmp ult i32 %len, 64, !dbg !7270
  br i1 %cmp, label %if.then, label %if.else, !dbg !7272

if.then:                                          ; preds = %entry
  %conv = trunc i32 %len to i8, !dbg !7273
  store i8 %conv, i8* %0, align 1, !dbg !7275, !tbaa !795
  %call = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7276
  %cmp1 = icmp eq i64 %call, 0, !dbg !7278
  br i1 %cmp1, label %cleanup, label %if.end35, !dbg !7279

if.else:                                          ; preds = %entry
  %cmp4 = icmp ult i32 %len, 16384, !dbg !7280
  br i1 %cmp4, label %if.then6, label %if.else20, !dbg !7282

if.then6:                                         ; preds = %if.else
  %shr = lshr i32 %len, 8, !dbg !7283
  %1 = trunc i32 %shr to i8, !dbg !7285
  %conv9 = or i8 %1, 64, !dbg !7285
  store i8 %conv9, i8* %0, align 1, !dbg !7286, !tbaa !795
  call void @llvm.dbg.value(metadata i32 %len, metadata !7265, metadata !DIExpression()), !dbg !7267
  %conv12 = trunc i32 %len to i8, !dbg !7287
  %arrayidx13 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !7288
  store i8 %conv12, i8* %arrayidx13, align 1, !dbg !7289, !tbaa !795
  %call15 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef 2, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7290
  %cmp16 = icmp eq i64 %call15, 0, !dbg !7292
  br i1 %cmp16, label %cleanup, label %if.end35, !dbg !7293

if.else20:                                        ; preds = %if.else
  store i8 -128, i8* %0, align 1, !dbg !7294, !tbaa !795
  %call23 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7296
  %cmp24 = icmp eq i64 %call23, 0, !dbg !7298
  br i1 %cmp24, label %cleanup, label %if.end27, !dbg !7299

if.end27:                                         ; preds = %if.else20
  call void @llvm.dbg.value(metadata i32 %len, metadata !7265, metadata !DIExpression()), !dbg !7267
  %call28 = call fastcc i32 @__bswap_32(i32 noundef %len) #22, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %call28, metadata !7265, metadata !DIExpression()), !dbg !7267
  store i32 %call28, i32* %len.addr, align 4, !dbg !7301, !tbaa !926
  %2 = bitcast i32* %len.addr to i8*, !dbg !7302
  call void @llvm.dbg.value(metadata i32* %len.addr, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7267
  %call29 = call i64 @fwrite(i8* noundef nonnull %2, i64 noundef 4, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7304
  %cmp30 = icmp eq i64 %call29, 0, !dbg !7305
  br i1 %cmp30, label %cleanup, label %if.end35, !dbg !7306

if.end35:                                         ; preds = %if.then6, %if.end27, %if.then
  br label %cleanup, !dbg !7307

cleanup:                                          ; preds = %if.end27, %if.else20, %if.then6, %if.then, %if.end35
  %retval.0 = phi i32 [ 0, %if.end35 ], [ -1, %if.then ], [ -1, %if.then6 ], [ -1, %if.else20 ], [ -1, %if.end27 ], !dbg !7267
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24, !dbg !7308
  ret i32 %retval.0, !dbg !7308
}

declare !dbg !7309 dso_local %struct.dictIterator* @dictGetIterator(%struct.dict* noundef) local_unnamed_addr #4

declare !dbg !7312 dso_local %struct.dictEntry* @dictNext(%struct.dictIterator* noundef) local_unnamed_addr #4

declare !dbg !7315 dso_local void @dictReleaseIterator(%struct.dictIterator* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveDoubleValue(%struct._IO_FILE* noundef %fp, double noundef %val) #0 !dbg !7318 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7322, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata double %val, metadata !7323, metadata !DIExpression()), !dbg !7332
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !7333
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !7333
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !7324, metadata !DIExpression()), !dbg !7334
  %cmp = fcmp uno double %val, 0.000000e+00, !dbg !7335
  br i1 %cmp, label %if.then, label %if.else, !dbg !7336

if.then:                                          ; preds = %entry
  store i8 -3, i8* %0, align 16, !dbg !7337, !tbaa !795
  call void @llvm.dbg.value(metadata i32 1, metadata !7326, metadata !DIExpression()), !dbg !7332
  br label %if.end28, !dbg !7339

if.else:                                          ; preds = %entry
  %1 = tail call double @llvm.fabs.f64(double %val) #28, !dbg !7340
  %cmpinf = fcmp ueq double %1, 0x7FF0000000000000, !dbg !7340
  br i1 %cmpinf, label %if.then1, label %if.else4, !dbg !7341

if.then1:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 1, metadata !7326, metadata !DIExpression()), !dbg !7332
  %cmp2 = fcmp olt double %val, 0.000000e+00, !dbg !7342
  %conv = select i1 %cmp2, i8 -1, i8 -2, !dbg !7344
  store i8 %conv, i8* %0, align 16, !dbg !7345, !tbaa !795
  br label %if.end28, !dbg !7346

if.else4:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata double 0xC32FFFFFFFFFFFFE, metadata !7327, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata double 0x4330000000000000, metadata !7331, metadata !DIExpression()), !dbg !7347
  %cmp5 = fcmp ogt double %val, 0xC32FFFFFFFFFFFFE, !dbg !7348
  %cmp7 = fcmp olt double %val, 0x4330000000000000
  %or.cond = and i1 %cmp5, %cmp7, !dbg !7350
  br i1 %or.cond, label %land.lhs.true9, label %if.else16, !dbg !7350

land.lhs.true9:                                   ; preds = %if.else4
  %conv10 = fptosi double %val to i64, !dbg !7351
  %conv11 = sitofp i64 %conv10 to double, !dbg !7352
  %cmp12 = fcmp oeq double %conv11, %val, !dbg !7353
  br i1 %cmp12, label %if.then14, label %if.else16, !dbg !7354

if.then14:                                        ; preds = %land.lhs.true9
  %add.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1, !dbg !7355
  %call = call i32 @ll2string(i8* noundef nonnull %add.ptr, i64 noundef 128, i64 noundef %conv10) #22, !dbg !7356
  br label %if.end, !dbg !7356

if.else16:                                        ; preds = %land.lhs.true9, %if.else4
  %add.ptr18 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1, !dbg !7357
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %add.ptr18, i64 noundef 127, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), double noundef %val) #23, !dbg !7358
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  %add.ptr21 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 1, !dbg !7359
  %call22 = call i64 @strlen(i8* noundef nonnull %add.ptr21) #27, !dbg !7360
  %conv23 = trunc i64 %call22 to i8, !dbg !7360
  store i8 %conv23, i8* %0, align 16, !dbg !7361, !tbaa !795
  %conv26 = and i64 %call22, 255, !dbg !7362
  %add = add nuw nsw i64 %conv26, 1, !dbg !7363
  call void @llvm.dbg.value(metadata i64 %add, metadata !7326, metadata !DIExpression()), !dbg !7332
  br label %if.end28

if.end28:                                         ; preds = %if.then1, %if.end, %if.then
  %len.0 = phi i64 [ 1, %if.then ], [ %add, %if.end ], [ 1, %if.then1 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7326, metadata !DIExpression()), !dbg !7332
  %call31 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %len.0, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7364
  %cmp32 = icmp eq i64 %call31, 0, !dbg !7366
  %. = sext i1 %cmp32 to i32, !dbg !7332
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !7367
  ret i32 %., !dbg !7367
}

declare !dbg !7368 dso_local i32 @zipmapLen(i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveRawString(%struct._IO_FILE* noundef %fp, i8* noundef %s, i64 noundef %len) #0 !dbg !7371 {
entry:
  %buf = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7375, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* %s, metadata !7376, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i64 %len, metadata !7377, metadata !DIExpression()), !dbg !7385
  %cmp = icmp ult i64 %len, 12, !dbg !7386
  br i1 %cmp, label %if.then, label %if.end9, !dbg !7387

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds [5 x i8], [5 x i8]* %buf, i64 0, i64 0, !dbg !7388
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %0) #24, !dbg !7388
  call void @llvm.dbg.declare(metadata [5 x i8]* %buf, metadata !7379, metadata !DIExpression()), !dbg !7389
  %call = call i32 @rdbTryIntegerEncoding(i8* noundef %s, i64 noundef %len, i8* noundef nonnull %0) #22, !dbg !7390
  call void @llvm.dbg.value(metadata i32 %call, metadata !7378, metadata !DIExpression()), !dbg !7385
  %cmp1 = icmp sgt i32 %call, 0, !dbg !7392
  br i1 %cmp1, label %cleanup, label %if.end9.thread, !dbg !7393

if.end9.thread:                                   ; preds = %if.then
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %0) #24, !dbg !7394
  br label %if.end26, !dbg !7395

cleanup:                                          ; preds = %if.then
  %conv65 = zext i32 %call to i64, !dbg !7396
  %call4 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %conv65, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7399
  %cmp5 = icmp eq i64 %call4, 0, !dbg !7400
  %. = sext i1 %cmp5 to i32, !dbg !7401
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %0) #24, !dbg !7394
  br label %cleanup40

if.end9:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7402, !tbaa !2085
  %tobool = icmp ne i32 %1, 0, !dbg !7403
  %cmp10 = icmp ugt i64 %len, 20
  %or.cond = and i1 %cmp10, %tobool, !dbg !7395
  br i1 %or.cond, label %if.then12, label %if.end26, !dbg !7395

if.then12:                                        ; preds = %if.end9
  %call14 = tail call i32 @rdbSaveLzfStringObject(%struct._IO_FILE* noundef %fp, i8* noundef %s, i64 noundef %len) #22, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %call14, metadata !7382, metadata !DIExpression()), !dbg !7405
  %cmp15 = icmp eq i32 %call14, -1, !dbg !7406
  br i1 %cmp15, label %cleanup40, label %cleanup23, !dbg !7408

cleanup23:                                        ; preds = %if.then12
  %cmp19 = icmp slt i32 %call14, 1, !dbg !7409
  br i1 %cmp19, label %if.end26, label %cleanup40

if.end26:                                         ; preds = %if.end9.thread, %cleanup23, %if.end9
  %conv27 = trunc i64 %len to i32, !dbg !7411
  %call28 = tail call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %conv27) #22, !dbg !7413
  %cmp29 = icmp eq i32 %call28, -1, !dbg !7414
  br i1 %cmp29, label %cleanup40, label %if.end32, !dbg !7415

if.end32:                                         ; preds = %if.end26
  %tobool33.not = icmp eq i64 %len, 0, !dbg !7416
  br i1 %tobool33.not, label %if.end39, label %land.lhs.true34, !dbg !7418

land.lhs.true34:                                  ; preds = %if.end32
  %call35 = tail call i64 @fwrite(i8* noundef %s, i64 noundef %len, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7419
  %cmp36 = icmp eq i64 %call35, 0, !dbg !7420
  br i1 %cmp36, label %cleanup40, label %if.end39, !dbg !7421

if.end39:                                         ; preds = %land.lhs.true34, %if.end32
  br label %cleanup40, !dbg !7422

cleanup40:                                        ; preds = %if.then12, %cleanup, %land.lhs.true34, %if.end26, %cleanup23, %if.end39
  %retval.3 = phi i32 [ 0, %if.end39 ], [ 0, %cleanup23 ], [ %., %cleanup ], [ -1, %if.end26 ], [ -1, %land.lhs.true34 ], [ -1, %if.then12 ], !dbg !7385
  ret i32 %retval.3, !dbg !7423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal i32 @rdbEncodeInteger(i64 noundef %value, i8* nocapture noundef writeonly %enc) #15 !dbg !7424 {
entry:
  call void @llvm.dbg.value(metadata i64 %value, metadata !7428, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8* %enc, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = add i64 %value, 128, !dbg !7431
  %1 = icmp ult i64 %0, 256, !dbg !7431
  br i1 %1, label %if.then, label %if.else, !dbg !7431

if.then:                                          ; preds = %entry
  store i8 -64, i8* %enc, align 1, !dbg !7433, !tbaa !795
  br label %return.sink.split, !dbg !7435

if.else:                                          ; preds = %entry
  %2 = add i64 %value, 32768, !dbg !7436
  %3 = icmp ult i64 %2, 65536, !dbg !7436
  br i1 %3, label %if.then8, label %if.else16, !dbg !7436

if.then8:                                         ; preds = %if.else
  store i8 -63, i8* %enc, align 1, !dbg !7438, !tbaa !795
  %conv11 = trunc i64 %value to i8, !dbg !7440
  %arrayidx12 = getelementptr inbounds i8, i8* %enc, i64 1, !dbg !7441
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !7442, !tbaa !795
  %4 = lshr i64 %value, 8, !dbg !7443
  br label %return.sink.split, !dbg !7444

if.else16:                                        ; preds = %if.else
  %5 = add i64 %value, 2147483648, !dbg !7445
  %6 = icmp ult i64 %5, 4294967296, !dbg !7445
  br i1 %6, label %if.then22, label %return, !dbg !7445

if.then22:                                        ; preds = %if.else16
  store i8 -62, i8* %enc, align 1, !dbg !7447, !tbaa !795
  %conv25 = trunc i64 %value to i8, !dbg !7449
  %arrayidx26 = getelementptr inbounds i8, i8* %enc, i64 1, !dbg !7450
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !7451, !tbaa !795
  %7 = lshr i64 %value, 8, !dbg !7452
  %conv29 = trunc i64 %7 to i8, !dbg !7453
  %arrayidx30 = getelementptr inbounds i8, i8* %enc, i64 2, !dbg !7454
  store i8 %conv29, i8* %arrayidx30, align 1, !dbg !7455, !tbaa !795
  %8 = lshr i64 %value, 16, !dbg !7456
  %conv33 = trunc i64 %8 to i8, !dbg !7457
  %arrayidx34 = getelementptr inbounds i8, i8* %enc, i64 3, !dbg !7458
  store i8 %conv33, i8* %arrayidx34, align 1, !dbg !7459, !tbaa !795
  %9 = lshr i64 %value, 24, !dbg !7460
  br label %return.sink.split, !dbg !7461

return.sink.split:                                ; preds = %if.then, %if.then8, %if.then22
  %.sink63 = phi i64 [ %9, %if.then22 ], [ %4, %if.then8 ], [ %value, %if.then ]
  %.sink = phi i64 [ 4, %if.then22 ], [ 2, %if.then8 ], [ 1, %if.then ]
  %retval.0.ph = phi i32 [ 5, %if.then22 ], [ 3, %if.then8 ], [ 2, %if.then ]
  %conv37 = trunc i64 %.sink63 to i8, !dbg !7462
  %arrayidx38 = getelementptr inbounds i8, i8* %enc, i64 %.sink, !dbg !7462
  store i8 %conv37, i8* %arrayidx38, align 1, !dbg !7462, !tbaa !795
  br label %return, !dbg !7463

return:                                           ; preds = %return.sink.split, %if.else16
  %retval.0 = phi i32 [ 0, %if.else16 ], [ %retval.0.ph, %return.sink.split ], !dbg !7462
  ret i32 %retval.0, !dbg !7463
}

declare !dbg !7464 dso_local i64 @fwrite(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbTryIntegerEncoding(i8* noundef %s, i64 noundef %len, i8* nocapture noundef writeonly %enc) #0 !dbg !7467 {
entry:
  %endptr = alloca i8*, align 8
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %s, metadata !7471, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i64 %len, metadata !7472, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i8* %enc, metadata !7473, metadata !DIExpression()), !dbg !7477
  %0 = bitcast i8** %endptr to i8*, !dbg !7478
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !7478
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !7478
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #24, !dbg !7478
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !7476, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !7475, metadata !DIExpression(DW_OP_deref)), !dbg !7477
  %call = call i64 @strtoll(i8* noundef %s, i8** noundef nonnull %endptr, i32 noundef 10) #23, !dbg !7480
  call void @llvm.dbg.value(metadata i64 %call, metadata !7474, metadata !DIExpression()), !dbg !7477
  %2 = load i8*, i8** %endptr, align 8, !dbg !7481, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %2, metadata !7475, metadata !DIExpression()), !dbg !7477
  %3 = load i8, i8* %2, align 1, !dbg !7481, !tbaa !795
  %cmp.not = icmp eq i8 %3, 0, !dbg !7483
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !7484

if.end:                                           ; preds = %entry
  %call2 = call i32 @ll2string(i8* noundef nonnull %1, i64 noundef 32, i64 noundef %call) #22, !dbg !7485
  %call4 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !7486
  %cmp5.not = icmp eq i64 %call4, %len, !dbg !7488
  br i1 %cmp5.not, label %lor.lhs.false, label %cleanup, !dbg !7489

lor.lhs.false:                                    ; preds = %if.end
  %call8 = call i32 @memcmp(i8* noundef nonnull %1, i8* noundef %s, i64 noundef %len) #27, !dbg !7490
  %tobool.not = icmp eq i32 %call8, 0, !dbg !7490
  br i1 %tobool.not, label %if.end10, label %cleanup, !dbg !7491

if.end10:                                         ; preds = %lor.lhs.false
  %call11 = call i32 @rdbEncodeInteger(i64 noundef %call, i8* noundef %enc) #22, !dbg !7492
  br label %cleanup, !dbg !7493

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %entry, %if.end10
  %retval.0 = phi i32 [ %call11, %if.end10 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], !dbg !7477
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #24, !dbg !7494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !7494
  ret i32 %retval.0, !dbg !7494
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveLzfStringObject(%struct._IO_FILE* noundef %fp, i8* noundef %s, i64 noundef %len) #0 !dbg !7495 {
entry:
  %byte = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !7497, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i8* %s, metadata !7498, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i64 %len, metadata !7499, metadata !DIExpression()), !dbg !7505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %byte) #24, !dbg !7506
  %cmp = icmp ult i64 %len, 5, !dbg !7507
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7509

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %len, metadata !7501, metadata !DIExpression(DW_OP_constu, 4, DW_OP_minus, DW_OP_stack_value)), !dbg !7505
  %add = add i64 %len, -3, !dbg !7510
  %call = tail call i8* @zmalloc(i64 noundef %add) #23, !dbg !7512
  call void @llvm.dbg.value(metadata i8* %call, metadata !7503, metadata !DIExpression()), !dbg !7505
  %cmp1 = icmp eq i8* %call, null, !dbg !7513
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !7514

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 %len, metadata !7501, metadata !DIExpression(DW_OP_plus_uconst, 4294967292, DW_OP_stack_value)), !dbg !7505
  %conv = trunc i64 %len to i32, !dbg !7515
  %conv4 = add i32 %conv, -4, !dbg !7516
  %call5 = tail call i32 @lzf_compress(i8* noundef %s, i32 noundef %conv, i8* noundef nonnull %call, i32 noundef %conv4) #23, !dbg !7517
  %conv6 = zext i32 %call5 to i64, !dbg !7517
  call void @llvm.dbg.value(metadata i64 %conv6, metadata !7500, metadata !DIExpression()), !dbg !7505
  %cmp7 = icmp eq i32 %call5, 0, !dbg !7518
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !7520

if.then9:                                         ; preds = %if.end3
  tail call void @zfree(i8* noundef nonnull %call) #23, !dbg !7521
  br label %cleanup, !dbg !7523

if.end10:                                         ; preds = %if.end3
  call void @llvm.dbg.value(metadata i8 -61, metadata !7502, metadata !DIExpression()), !dbg !7505
  store i8 -61, i8* %byte, align 1, !dbg !7524, !tbaa !795
  call void @llvm.dbg.value(metadata i8* %byte, metadata !7502, metadata !DIExpression(DW_OP_deref)), !dbg !7505
  %call11 = call i64 @fwrite(i8* noundef nonnull %byte, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7525
  %cmp12 = icmp eq i64 %call11, 0, !dbg !7527
  br i1 %cmp12, label %writeerr, label %if.end15, !dbg !7528

if.end15:                                         ; preds = %if.end10
  %call17 = call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %call5) #22, !dbg !7529
  %cmp18 = icmp eq i32 %call17, -1, !dbg !7531
  br i1 %cmp18, label %writeerr, label %if.end21, !dbg !7532

if.end21:                                         ; preds = %if.end15
  %call23 = call i32 @rdbSaveLen(%struct._IO_FILE* noundef %fp, i32 noundef %conv) #22, !dbg !7533
  %cmp24 = icmp eq i32 %call23, -1, !dbg !7535
  br i1 %cmp24, label %writeerr, label %if.end27, !dbg !7536

if.end27:                                         ; preds = %if.end21
  %call28 = call i64 @fwrite(i8* noundef nonnull %call, i64 noundef %conv6, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !7537
  %cmp29 = icmp eq i64 %call28, 0, !dbg !7539
  br i1 %cmp29, label %writeerr, label %if.end32, !dbg !7540

if.end32:                                         ; preds = %if.end27
  call void @zfree(i8* noundef nonnull %call) #23, !dbg !7541
  br label %cleanup, !dbg !7542

writeerr:                                         ; preds = %if.end27, %if.end21, %if.end15, %if.end10
  call void @llvm.dbg.label(metadata !7504), !dbg !7543
  call void @zfree(i8* noundef nonnull %call) #23, !dbg !7544
  br label %cleanup, !dbg !7545

cleanup:                                          ; preds = %if.end, %entry, %writeerr, %if.end32, %if.then9
  %retval.0 = phi i32 [ 0, %if.then9 ], [ -1, %writeerr ], [ %call5, %if.end32 ], [ 0, %entry ], [ 0, %if.end ], !dbg !7505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %byte) #24, !dbg !7546
  ret i32 %retval.0, !dbg !7546
}

declare !dbg !7547 dso_local i32 @lzf_compress(i8* noundef, i32 noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @replicationFeedMonitors(%struct.list* noundef %monitors, i32 noundef %dictid, %struct.redisObject** nocapture noundef readonly %argv, i32 noundef %argc) #0 !dbg !7548 {
entry:
  %li = alloca %struct.listIter, align 8
  %tv = alloca %struct.timeval, align 8
  call void @llvm.dbg.value(metadata %struct.list* %monitors, metadata !7550, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32 %dictid, metadata !7551, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !7552, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32 %argc, metadata !7553, metadata !DIExpression()), !dbg !7568
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !7569
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !7569
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !7555, metadata !DIExpression()), !dbg !7570
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i64 0, i64 0)) #23, !dbg !7571
  call void @llvm.dbg.value(metadata i8* %call, metadata !7557, metadata !DIExpression()), !dbg !7568
  %1 = bitcast %struct.timeval* %tv to i8*, !dbg !7572
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #24, !dbg !7572
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !7559, metadata !DIExpression()), !dbg !7573
  %call1 = call i32 @gettimeofday(%struct.timeval* noundef nonnull %tv, i8* noundef null) #23, !dbg !7574
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i64 0, i32 0, !dbg !7575
  %2 = load i64, i64* %tv_sec, align 8, !dbg !7575, !tbaa !7576
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i64 0, i32 1, !dbg !7578
  %3 = load i64, i64* %tv_usec, align 8, !dbg !7578, !tbaa !7579
  %call2 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i64 0, i64 0), i64 noundef %2, i64 noundef %3) #23, !dbg !7580
  call void @llvm.dbg.value(metadata i8* %call2, metadata !7557, metadata !DIExpression()), !dbg !7568
  %cmp.not = icmp eq i32 %dictid, 0, !dbg !7581
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !7583

if.then:                                          ; preds = %entry
  %call3 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call2, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i32 noundef %dictid) #23, !dbg !7584
  call void @llvm.dbg.value(metadata i8* %call3, metadata !7557, metadata !DIExpression()), !dbg !7568
  br label %if.end, !dbg !7585

if.end:                                           ; preds = %if.then, %entry
  %cmdrepr.0 = phi i8* [ %call3, %if.then ], [ %call2, %entry ], !dbg !7568
  call void @llvm.dbg.value(metadata i8* %cmdrepr.0, metadata !7557, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32 0, metadata !7556, metadata !DIExpression()), !dbg !7568
  %cmp451 = icmp sgt i32 %argc, 0, !dbg !7586
  br i1 %cmp451, label %for.body.lr.ph, label %for.end, !dbg !7589

for.body.lr.ph:                                   ; preds = %if.end
  %sub = add nsw i32 %argc, -1
  %4 = zext i32 %sub to i64, !dbg !7589
  %wide.trip.count = zext i32 %argc to i64, !dbg !7586
  br label %for.body, !dbg !7589

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %cmdrepr.152 = phi i8* [ %cmdrepr.0, %for.body.lr.ph ], [ %cmdrepr.3, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7556, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i8* %cmdrepr.152, metadata !7557, metadata !DIExpression()), !dbg !7568
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %indvars.iv, !dbg !7590
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !7590, !tbaa !782
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !7593
  %6 = load i8, i8* %encoding, align 1, !dbg !7593, !tbaa !1529
  %cmp5 = icmp eq i8 %6, 1, !dbg !7594
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !7595
  %7 = load i8*, i8** %ptr, align 8, !dbg !7595, !tbaa !1328
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !7596

if.then7:                                         ; preds = %for.body
  %8 = ptrtoint i8* %7 to i64, !dbg !7597
  %call10 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %cmdrepr.152, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0), i64 noundef %8) #23, !dbg !7599
  call void @llvm.dbg.value(metadata i8* %call10, metadata !7557, metadata !DIExpression()), !dbg !7568
  br label %if.end19, !dbg !7600

if.else:                                          ; preds = %for.body
  %call17 = call i64 @sdslen(i8* noundef %7) #23, !dbg !7601
  %call18 = call i8* @sdscatrepr(i8* noundef %cmdrepr.152, i8* noundef %7, i64 noundef %call17) #22, !dbg !7603
  call void @llvm.dbg.value(metadata i8* %call18, metadata !7557, metadata !DIExpression()), !dbg !7568
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then7
  %cmdrepr.2 = phi i8* [ %call10, %if.then7 ], [ %call18, %if.else ], !dbg !7595
  call void @llvm.dbg.value(metadata i8* %cmdrepr.2, metadata !7557, metadata !DIExpression()), !dbg !7568
  %cmp20.not = icmp eq i64 %indvars.iv, %4, !dbg !7604
  br i1 %cmp20.not, label %for.inc, label %if.then22, !dbg !7606

if.then22:                                        ; preds = %if.end19
  %call23 = call i8* @sdscatlen(i8* noundef %cmdrepr.2, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0), i64 noundef 1) #23, !dbg !7607
  call void @llvm.dbg.value(metadata i8* %call23, metadata !7557, metadata !DIExpression()), !dbg !7568
  br label %for.inc, !dbg !7608

for.inc:                                          ; preds = %if.end19, %if.then22
  %cmdrepr.3 = phi i8* [ %call23, %if.then22 ], [ %cmdrepr.2, %if.end19 ], !dbg !7609
  call void @llvm.dbg.value(metadata i8* %cmdrepr.3, metadata !7557, metadata !DIExpression()), !dbg !7568
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7610
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !7556, metadata !DIExpression()), !dbg !7568
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !7586
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !7589, !llvm.loop !7611

for.end:                                          ; preds = %for.inc, %if.end
  %cmdrepr.1.lcssa = phi i8* [ %cmdrepr.0, %if.end ], [ %cmdrepr.3, %for.inc ], !dbg !7568
  %call25 = call i8* @sdscatlen(i8* noundef %cmdrepr.1.lcssa, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 noundef 2) #23, !dbg !7613
  call void @llvm.dbg.value(metadata i8* %call25, metadata !7557, metadata !DIExpression()), !dbg !7568
  %call26 = call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call25) #22, !dbg !7614
  call void @llvm.dbg.value(metadata %struct.redisObject* %call26, metadata !7558, metadata !DIExpression()), !dbg !7568
  call void @listRewind(%struct.list* noundef %monitors, %struct.listIter* noundef nonnull %li) #23, !dbg !7615
  %call2754 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !7616
  call void @llvm.dbg.value(metadata %struct.listNode* %call2754, metadata !7554, metadata !DIExpression()), !dbg !7568
  %tobool.not55 = icmp eq %struct.listNode* %call2754, null, !dbg !7617
  br i1 %tobool.not55, label %while.end, label %while.body, !dbg !7617

while.body:                                       ; preds = %for.end, %while.body
  %call2756 = phi %struct.listNode* [ %call27, %while.body ], [ %call2754, %for.end ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call2756, i64 0, i32 2, !dbg !7618
  %9 = bitcast i8** %value to %struct.redisClient**, !dbg !7618
  %10 = load %struct.redisClient*, %struct.redisClient** %9, align 8, !dbg !7618, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %10, metadata !7566, metadata !DIExpression()), !dbg !7619
  call void @addReply(%struct.redisClient* noundef %10, %struct.redisObject* noundef %call26) #22, !dbg !7620
  %call27 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !7616
  call void @llvm.dbg.value(metadata %struct.listNode* %call27, metadata !7554, metadata !DIExpression()), !dbg !7568
  %tobool.not = icmp eq %struct.listNode* %call27, null, !dbg !7617
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !7617, !llvm.loop !7621

while.end:                                        ; preds = %while.body, %for.end
  %11 = bitcast %struct.redisObject* %call26 to i8*, !dbg !7623
  call void @decrRefCount(i8* noundef %11) #22, !dbg !7624
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #24, !dbg !7625
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !7625
  ret void, !dbg !7625
}

; Function Attrs: nounwind
declare !dbg !7626 dso_local i32 @gettimeofday(%struct.timeval* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @sdscatrepr(i8* noundef %s, i8* nocapture noundef readonly %p, i64 noundef %len) #0 !dbg !7632 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %p, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i64 %len, metadata !7638, metadata !DIExpression()), !dbg !7639
  %call = tail call i8* @sdscatlen(i8* noundef %s, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.111, i64 0, i64 0), i64 noundef 1) #23, !dbg !7640
  call void @llvm.dbg.value(metadata i8* %call, metadata !7636, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i64 %len, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %p, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i64 %len, metadata !7638, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7639
  %tobool.not37 = icmp eq i64 %len, 0, !dbg !7641
  br i1 %tobool.not37, label %while.end, label %while.body, !dbg !7641

while.body:                                       ; preds = %entry, %sw.epilog
  %dec40.in = phi i64 [ %dec40, %sw.epilog ], [ %len, %entry ]
  %p.addr.039 = phi i8* [ %incdec.ptr, %sw.epilog ], [ %p, %entry ]
  %s.addr.038 = phi i8* [ %s.addr.1, %sw.epilog ], [ %call, %entry ]
  %dec40 = add i64 %dec40.in, -1, !dbg !7642
  call void @llvm.dbg.value(metadata i8* %p.addr.039, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %s.addr.038, metadata !7636, metadata !DIExpression()), !dbg !7639
  %0 = load i8, i8* %p.addr.039, align 1, !dbg !7643, !tbaa !795
  %conv = sext i8 %0 to i32, !dbg !7643
  switch i32 %conv, label %sw.default [
    i32 92, label %sw.bb
    i32 34, label %sw.bb
    i32 10, label %sw.bb3
    i32 13, label %sw.bb5
    i32 9, label %sw.bb7
    i32 7, label %sw.bb9
    i32 8, label %sw.bb11
  ], !dbg !7645

sw.bb:                                            ; preds = %while.body, %while.body
  %call2 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0), i32 noundef %conv) #23, !dbg !7646
  call void @llvm.dbg.value(metadata i8* %call2, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7648

sw.bb3:                                           ; preds = %while.body
  %call4 = tail call i8* @sdscatlen(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.113, i64 0, i64 0), i64 noundef 1) #23, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %call4, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7650

sw.bb5:                                           ; preds = %while.body
  %call6 = tail call i8* @sdscatlen(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.114, i64 0, i64 0), i64 noundef 1) #23, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %call6, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7652

sw.bb7:                                           ; preds = %while.body
  %call8 = tail call i8* @sdscatlen(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i64 0, i64 0), i64 noundef 1) #23, !dbg !7653
  call void @llvm.dbg.value(metadata i8* %call8, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7654

sw.bb9:                                           ; preds = %while.body
  %call10 = tail call i8* @sdscatlen(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.116, i64 0, i64 0), i64 noundef 1) #23, !dbg !7655
  call void @llvm.dbg.value(metadata i8* %call10, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7656

sw.bb11:                                          ; preds = %while.body
  %call12 = tail call i8* @sdscatlen(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i64 0, i64 0), i64 noundef 1) #23, !dbg !7657
  call void @llvm.dbg.value(metadata i8* %call12, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7658

sw.default:                                       ; preds = %while.body
  %call13 = tail call i16** @__ctype_b_loc() #25, !dbg !7659
  %1 = load i16*, i16** %call13, align 8, !dbg !7659, !tbaa !782
  %idxprom = sext i8 %0 to i64, !dbg !7659
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %idxprom, !dbg !7659
  %2 = load i16, i16* %arrayidx, align 2, !dbg !7659, !tbaa !7661
  %3 = and i16 %2, 16384, !dbg !7659
  %tobool16.not = icmp eq i16 %3, 0, !dbg !7659
  br i1 %tobool16.not, label %if.else, label %if.then, !dbg !7663

if.then:                                          ; preds = %sw.default
  %call18 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118, i64 0, i64 0), i32 noundef %conv) #23, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %call18, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog, !dbg !7665

if.else:                                          ; preds = %sw.default
  %conv19 = zext i8 %0 to i32, !dbg !7666
  %call20 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %s.addr.038, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0), i32 noundef %conv19) #23, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %call20, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %if.else, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %s.addr.1 = phi i8* [ %call18, %if.then ], [ %call20, %if.else ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %call4, %sw.bb3 ], [ %call2, %sw.bb ], !dbg !7668
  call void @llvm.dbg.value(metadata i8* %s.addr.1, metadata !7636, metadata !DIExpression()), !dbg !7639
  %incdec.ptr = getelementptr inbounds i8, i8* %p.addr.039, i64 1, !dbg !7669
  call void @llvm.dbg.value(metadata i64 %dec40, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i64 %dec40, metadata !7638, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7639
  %tobool.not = icmp eq i64 %dec40, 0, !dbg !7641
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !7641, !llvm.loop !7670

while.end:                                        ; preds = %sw.epilog, %entry
  %s.addr.0.lcssa = phi i8* [ %call, %entry ], [ %s.addr.1, %sw.epilog ], !dbg !7639
  %call21 = tail call i8* @sdscatlen(i8* noundef %s.addr.0.lcssa, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.111, i64 0, i64 0), i64 noundef 1) #23, !dbg !7672
  ret i8* %call21, !dbg !7673
}

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @equalStringObjects(%struct.redisObject* noundef %a, %struct.redisObject* noundef %b) #0 !dbg !7674 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %a, metadata !7676, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata %struct.redisObject* %b, metadata !7677, metadata !DIExpression()), !dbg !7678
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %a, i64 0, i32 2, !dbg !7679
  %0 = load i8, i8* %encoding, align 1, !dbg !7679, !tbaa !1529
  %cmp.not = icmp eq i8 %0, 0, !dbg !7681
  br i1 %cmp.not, label %if.else, label %land.lhs.true, !dbg !7682

land.lhs.true:                                    ; preds = %entry
  %encoding2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 2, !dbg !7683
  %1 = load i8, i8* %encoding2, align 1, !dbg !7683, !tbaa !1529
  %cmp4.not = icmp eq i8 %1, 0, !dbg !7684
  br i1 %cmp4.not, label %if.else, label %if.then, !dbg !7685

if.then:                                          ; preds = %land.lhs.true
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %a, i64 0, i32 0, !dbg !7686
  %2 = load i8*, i8** %ptr, align 8, !dbg !7686, !tbaa !1328
  %ptr6 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %b, i64 0, i32 0, !dbg !7688
  %3 = load i8*, i8** %ptr6, align 8, !dbg !7688, !tbaa !1328
  %cmp7 = icmp eq i8* %2, %3, !dbg !7689
  br label %return, !dbg !7690

if.else:                                          ; preds = %land.lhs.true, %entry
  %call = tail call i32 @compareStringObjects(%struct.redisObject* noundef nonnull %a, %struct.redisObject* noundef %b) #22, !dbg !7691
  %cmp9 = icmp eq i32 %call, 0, !dbg !7693
  br label %return, !dbg !7694

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi i1 [ %cmp7, %if.then ], [ %cmp9, %if.else ]
  %retval.0 = zext i1 %retval.0.in to i32, !dbg !7695
  ret i32 %retval.0, !dbg !7696
}

; Function Attrs: nounwind
declare !dbg !7697 dso_local i64 @lseek64(i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !7700 dso_local i64 @read(i32 noundef, i8* noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @waitEmptyIOJobsQueue() #0 !dbg !7703 {
entry:
  br label %while.body, !dbg !7707

while.body:                                       ; preds = %cleanup, %entry
  tail call void @lockThreadedIO() #22, !dbg !7708
  %0 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !7709, !tbaa !5634
  %len = getelementptr inbounds %struct.list, %struct.list* %0, i64 0, i32 5, !dbg !7709
  %1 = load i32, i32* %len, align 8, !dbg !7709, !tbaa !1358
  %cmp = icmp eq i32 %1, 0, !dbg !7711
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7712

land.lhs.true:                                    ; preds = %while.body
  %2 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !7713, !tbaa !5636
  %len1 = getelementptr inbounds %struct.list, %struct.list* %2, i64 0, i32 5, !dbg !7713
  %3 = load i32, i32* %len1, align 8, !dbg !7713, !tbaa !1358
  %cmp2 = icmp eq i32 %3, 0, !dbg !7714
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8
  %cmp4 = icmp eq i32 %4, 0
  %or.cond = select i1 %cmp2, i1 %cmp4, i1 false, !dbg !7715
  br i1 %or.cond, label %return, label %if.end, !dbg !7715

if.end:                                           ; preds = %land.lhs.true, %while.body
  %5 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !7716, !tbaa !5638
  %len5 = getelementptr inbounds %struct.list, %struct.list* %5, i64 0, i32 5, !dbg !7716
  %6 = load i32, i32* %len5, align 8, !dbg !7716, !tbaa !1358
  call void @llvm.dbg.value(metadata i32 %6, metadata !7705, metadata !DIExpression()), !dbg !7717
  tail call void @unlockThreadedIO() #22, !dbg !7718
  %tobool.not = icmp eq i32 %6, 0, !dbg !7719
  br i1 %tobool.not, label %cleanup, label %if.then6, !dbg !7721

if.then6:                                         ; preds = %if.end
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 79), align 8, !dbg !7722, !tbaa !7724
  tail call void @vmThreadedIOCompletedJob(%struct.aeEventLoop* noundef null, i32 noundef %7, i8* noundef nonnull inttoptr (i64 3735928559 to i8*), i32 noundef 0) #22, !dbg !7725
  br label %cleanup, !dbg !7726

cleanup:                                          ; preds = %if.end, %if.then6
  %.sink = phi i32 [ 1000, %if.then6 ], [ 10000, %if.end ]
  %call = tail call i32 @usleep(i32 noundef %.sink) #23, !dbg !7727
  br label %while.body

return:                                           ; preds = %land.lhs.true
  tail call void @unlockThreadedIO() #22, !dbg !7728
  ret void, !dbg !7730
}

; Function Attrs: nounwind
declare !dbg !7731 dso_local i32 @fork() local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @vmReopenSwapFile() #0 !dbg !7732 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !7733, !tbaa !2197
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef %0, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i64 0, i64 0)) #23, !dbg !7734
  store %struct._IO_FILE* %call, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !7735, !tbaa !5949
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !7736
  br i1 %cmp, label %if.then, label %if.end, !dbg !7738

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !7739, !tbaa !2197
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.150, i64 0, i64 0), i8* noundef %1) #22, !dbg !7741
  tail call void @_exit(i32 noundef 1) #26, !dbg !7742
  unreachable, !dbg !7742

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @fileno(%struct._IO_FILE* noundef nonnull %call) #23, !dbg !7743
  store i32 %call1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !7744, !tbaa !7745
  ret void, !dbg !7746
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSave(i8* noundef %filename) #0 !dbg !7747 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %filename, metadata !7749, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !7750, metadata !DIExpression()), !dbg !7769
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !7770
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !7770
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !7753, metadata !DIExpression()), !dbg !7771
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !7772
  call void @llvm.dbg.value(metadata i64 %call, metadata !7755, metadata !DIExpression()), !dbg !7769
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !7773, !tbaa !1384
  %tobool.not = icmp eq i32 %1, 0, !dbg !7775
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !7776

if.then:                                          ; preds = %entry
  tail call void @waitEmptyIOJobsQueue() #22, !dbg !7777
  br label %if.end, !dbg !7777

if.end:                                           ; preds = %if.then, %entry
  %call1 = tail call i32 @getpid() #23, !dbg !7778
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 256, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i32 noundef %call1) #23, !dbg !7779
  %call4 = call %struct._IO_FILE* @fopen64(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i64 0, i64 0)) #23, !dbg !7780
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call4, metadata !7752, metadata !DIExpression()), !dbg !7769
  %tobool5.not = icmp eq %struct._IO_FILE* %call4, null, !dbg !7781
  br i1 %tobool5.not, label %if.then6, label %if.end9, !dbg !7783

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32* @__errno_location() #25, !dbg !7784
  %2 = load i32, i32* %call7, align 4, !dbg !7784, !tbaa !926
  %call8 = call i8* @strerror(i32 noundef %2) #23, !dbg !7786
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.152, i64 0, i64 0), i8* noundef %call8) #22, !dbg !7787
  br label %cleanup129, !dbg !7788

if.end9:                                          ; preds = %if.end
  %call10 = call i64 @fwrite(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.153, i64 0, i64 0), i64 noundef 9, i64 noundef 1, %struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7789
  %cmp = icmp eq i64 %call10, 0, !dbg !7791
  br i1 %cmp, label %werr, label %for.cond.preheader, !dbg !7792

for.cond.preheader:                               ; preds = %if.end9
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !7750, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i32 0, metadata !7754, metadata !DIExpression()), !dbg !7769
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !7793, !tbaa !2013
  %cmp13205 = icmp sgt i32 %3, 0, !dbg !7794
  br i1 %cmp13205, label %for.body.preheader, label %for.end, !dbg !7795

for.body.preheader:                               ; preds = %for.cond.preheader
  %.pre212 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !7796, !tbaa !2351
  br label %for.body, !dbg !7795

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %4 = phi i32 [ %3, %for.body.preheader ], [ %19, %for.inc ]
  %5 = phi %struct.redisDb* [ %.pre212, %for.body.preheader ], [ %20, %for.inc ], !dbg !7796
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %di.0207 = phi %struct.dictIterator* [ null, %for.body.preheader ], [ %di.1.ph, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.dictIterator* %di.0207, metadata !7750, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7754, metadata !DIExpression()), !dbg !7769
  %add.ptr = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 %indvars.iv, !dbg !7797
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr, metadata !7756, metadata !DIExpression()), !dbg !7798
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %add.ptr, i64 0, i32 0, !dbg !7799
  %6 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !7799, !tbaa !2353
  call void @llvm.dbg.value(metadata %struct.dict* %6, metadata !7760, metadata !DIExpression()), !dbg !7798
  %used = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 0, i32 3, !dbg !7800
  %7 = load i64, i64* %used, align 8, !dbg !7800, !tbaa !3545
  %used16 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 1, i32 3, !dbg !7800
  %8 = load i64, i64* %used16, align 8, !dbg !7800, !tbaa !3545
  %add = sub i64 0, %8, !dbg !7802
  %cmp17 = icmp eq i64 %7, %add, !dbg !7802
  br i1 %cmp17, label %for.inc, label %if.end19, !dbg !7803

if.end19:                                         ; preds = %for.body
  %call20 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %6) #23, !dbg !7804
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call20, metadata !7750, metadata !DIExpression()), !dbg !7769
  %tobool21.not = icmp eq %struct.dictIterator* %call20, null, !dbg !7805
  br i1 %tobool21.not, label %cleanup97, label %if.end24, !dbg !7807

if.end24:                                         ; preds = %if.end19
  %call25 = call i32 @rdbSaveType(%struct._IO_FILE* noundef nonnull %call4, i8 noundef zeroext -2) #22, !dbg !7808
  %cmp26 = icmp eq i32 %call25, -1, !dbg !7810
  br i1 %cmp26, label %werr, label %if.end28, !dbg !7811

if.end28:                                         ; preds = %if.end24
  %9 = trunc i64 %indvars.iv to i32, !dbg !7812
  %call29 = call i32 @rdbSaveLen(%struct._IO_FILE* noundef nonnull %call4, i32 noundef %9) #22, !dbg !7812
  %cmp30 = icmp eq i32 %call29, -1, !dbg !7814
  br i1 %cmp30, label %werr, label %while.cond.preheader, !dbg !7815

while.cond.preheader:                             ; preds = %if.end28
  %call33202 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef nonnull %call20) #23, !dbg !7816
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call33202, metadata !7751, metadata !DIExpression()), !dbg !7769
  %cmp34.not203 = icmp eq %struct.dictEntry* %call33202, null, !dbg !7817
  br i1 %cmp34.not203, label %while.end, label %while.body, !dbg !7818

while.body:                                       ; preds = %while.cond.preheader, %cleanup92
  %call33204 = phi %struct.dictEntry* [ %call33, %cleanup92 ], [ %call33202, %while.cond.preheader ]
  %10 = bitcast %struct.dictEntry* %call33204 to %struct.redisObject**, !dbg !7819
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !7819, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %11, metadata !7761, metadata !DIExpression()), !dbg !7820
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call33204, i64 0, i32 1, !dbg !7821
  %12 = bitcast i8** %val to %struct.redisObject**, !dbg !7821
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !7821, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %13, metadata !7763, metadata !DIExpression()), !dbg !7820
  %call36 = call i64 @getExpire(%struct.redisDb* noundef %add.ptr, %struct.redisObject* noundef %11) #22, !dbg !7822
  call void @llvm.dbg.value(metadata i64 %call36, metadata !7764, metadata !DIExpression()), !dbg !7820
  %cmp37.not = icmp eq i64 %call36, -1, !dbg !7823
  br i1 %cmp37.not, label %if.end50, label %if.then38, !dbg !7825

if.then38:                                        ; preds = %while.body
  %cmp39 = icmp slt i64 %call36, %call, !dbg !7826
  br i1 %cmp39, label %cleanup92, label %if.end41, !dbg !7829, !llvm.loop !7830

if.end41:                                         ; preds = %if.then38
  %call42 = call i32 @rdbSaveType(%struct._IO_FILE* noundef nonnull %call4, i8 noundef zeroext -3) #22, !dbg !7832
  %cmp43 = icmp eq i32 %call42, -1, !dbg !7834
  br i1 %cmp43, label %werr, label %if.end45, !dbg !7835

if.end45:                                         ; preds = %if.end41
  %call46 = call i32 @rdbSaveTime(%struct._IO_FILE* noundef nonnull %call4, i64 noundef %call36) #22, !dbg !7836
  %cmp47 = icmp eq i32 %call46, -1, !dbg !7838
  br i1 %cmp47, label %werr, label %if.end50, !dbg !7839

if.end50:                                         ; preds = %if.end45, %while.body
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !7840, !tbaa !1384
  %tobool51.not = icmp eq i32 %14, 0, !dbg !7841
  br i1 %tobool51.not, label %if.then59, label %lor.lhs.false, !dbg !7842

lor.lhs.false:                                    ; preds = %if.end50
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 3, !dbg !7843
  %15 = load i8, i8* %storage, align 2, !dbg !7843, !tbaa !1547
  switch i8 %15, label %if.else [
    i8 0, label %if.then59
    i8 2, label %if.then59
  ], !dbg !7844

if.then59:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %if.end50
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 1, !dbg !7845
  %16 = load i8, i8* %type, align 8, !dbg !7845, !tbaa !1526
  %call60 = call i32 @rdbSaveType(%struct._IO_FILE* noundef nonnull %call4, i8 noundef zeroext %16) #22, !dbg !7848
  %cmp61 = icmp eq i32 %call60, -1, !dbg !7849
  br i1 %cmp61, label %werr, label %if.end64, !dbg !7850

if.end64:                                         ; preds = %if.then59
  %call65 = call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef nonnull %call4, %struct.redisObject* noundef %11) #22, !dbg !7851
  %cmp66 = icmp eq i32 %call65, -1, !dbg !7853
  br i1 %cmp66, label %werr, label %if.end69, !dbg !7854

if.end69:                                         ; preds = %if.end64
  %call70 = call i32 @rdbSaveObject(%struct._IO_FILE* noundef nonnull %call4, %struct.redisObject* noundef nonnull %13) #22, !dbg !7855
  %cmp71 = icmp eq i32 %call70, -1, !dbg !7857
  br i1 %cmp71, label %werr, label %cleanup92, !dbg !7858

if.else:                                          ; preds = %lor.lhs.false
  %call75 = call %struct.redisObject* @vmPreviewObject(%struct.redisObject* noundef nonnull %11) #22, !dbg !7859
  call void @llvm.dbg.value(metadata %struct.redisObject* %call75, metadata !7765, metadata !DIExpression()), !dbg !7860
  %vtype = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 4, !dbg !7861
  %17 = load i8, i8* %vtype, align 1, !dbg !7861, !tbaa !5890
  %call76 = call i32 @rdbSaveType(%struct._IO_FILE* noundef nonnull %call4, i8 noundef zeroext %17) #22, !dbg !7863
  %cmp77 = icmp eq i32 %call76, -1, !dbg !7864
  br i1 %cmp77, label %werr, label %if.end80, !dbg !7865

if.end80:                                         ; preds = %if.else
  %call81 = call i32 @rdbSaveStringObject(%struct._IO_FILE* noundef nonnull %call4, %struct.redisObject* noundef nonnull %11) #22, !dbg !7866
  %cmp82 = icmp eq i32 %call81, -1, !dbg !7868
  br i1 %cmp82, label %werr, label %if.end85, !dbg !7869

if.end85:                                         ; preds = %if.end80
  %call86 = call i32 @rdbSaveObject(%struct._IO_FILE* noundef nonnull %call4, %struct.redisObject* noundef %call75) #22, !dbg !7870
  %cmp87 = icmp eq i32 %call86, -1, !dbg !7872
  br i1 %cmp87, label %werr, label %cleanup, !dbg !7873

cleanup:                                          ; preds = %if.end85
  %18 = bitcast %struct.redisObject* %call75 to i8*, !dbg !7874
  call void @decrRefCount(i8* noundef %18) #22, !dbg !7875
  br label %cleanup92

cleanup92:                                        ; preds = %if.end69, %cleanup, %if.then38
  %call33 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef nonnull %call20) #23, !dbg !7816
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call33, metadata !7751, metadata !DIExpression()), !dbg !7769
  %cmp34.not = icmp eq %struct.dictEntry* %call33, null, !dbg !7817
  br i1 %cmp34.not, label %while.end, label %while.body, !dbg !7818

while.end:                                        ; preds = %cleanup92, %while.cond.preheader
  call void @dictReleaseIterator(%struct.dictIterator* noundef nonnull %call20) #23, !dbg !7876
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !7796, !tbaa !2351
  %.pre213 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !7793, !tbaa !2013
  br label %for.inc, !dbg !7877

cleanup97:                                        ; preds = %if.end19
  %call23 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7878
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !7750, metadata !DIExpression()), !dbg !7769
  br label %cleanup129

for.inc:                                          ; preds = %while.end, %for.body
  %19 = phi i32 [ %4, %for.body ], [ %.pre213, %while.end ], !dbg !7793
  %20 = phi %struct.redisDb* [ %5, %for.body ], [ %.pre, %while.end ]
  %di.1.ph = phi %struct.dictIterator* [ %di.0207, %for.body ], [ %call20, %while.end ]
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !7750, metadata !DIExpression()), !dbg !7769
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7880
  call void @llvm.dbg.value(metadata %struct.dictIterator* %di.1.ph, metadata !7750, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !7754, metadata !DIExpression()), !dbg !7769
  %21 = sext i32 %19 to i64, !dbg !7794
  %cmp13 = icmp slt i64 %indvars.iv.next, %21, !dbg !7794
  br i1 %cmp13, label %for.body, label %for.end, !dbg !7795, !llvm.loop !7881

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %di.0.lcssa = phi %struct.dictIterator* [ null, %for.cond.preheader ], [ %di.1.ph, %for.inc ], !dbg !7883
  %call101 = call i32 @rdbSaveType(%struct._IO_FILE* noundef nonnull %call4, i8 noundef zeroext -1) #22, !dbg !7884
  %cmp102 = icmp eq i32 %call101, -1, !dbg !7886
  br i1 %cmp102, label %werr, label %if.end105, !dbg !7887

if.end105:                                        ; preds = %for.end
  %call106 = call i32 @fflush(%struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7888
  %call107 = call i32 @fileno(%struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7889
  %call108 = call i32 @fsync(i32 noundef %call107) #23, !dbg !7890
  %call109 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7891
  %call111 = call i32 @rename(i8* noundef nonnull %0, i8* noundef %filename) #23, !dbg !7892
  %cmp112 = icmp eq i32 %call111, -1, !dbg !7894
  br i1 %cmp112, label %if.then114, label %if.end119, !dbg !7895

if.then114:                                       ; preds = %if.end105
  %call115 = tail call i32* @__errno_location() #25, !dbg !7896
  %22 = load i32, i32* %call115, align 4, !dbg !7896, !tbaa !926
  %call116 = call i8* @strerror(i32 noundef %22) #23, !dbg !7898
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.154, i64 0, i64 0), i8* noundef %call116) #22, !dbg !7899
  %call118 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !7900
  br label %cleanup129, !dbg !7901

if.end119:                                        ; preds = %if.end105
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.155, i64 0, i64 0)) #22, !dbg !7902
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !7903, !tbaa !708
  %call120 = call i64 @time(i64* noundef null) #23, !dbg !7904
  store i64 %call120, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !7905, !tbaa !722
  br label %cleanup129, !dbg !7906

werr:                                             ; preds = %if.end28, %if.end24, %if.end85, %if.end80, %if.else, %if.end69, %if.end64, %if.then59, %if.end45, %if.end41, %for.end, %if.end9
  %di.2 = phi %struct.dictIterator* [ null, %if.end9 ], [ %di.0.lcssa, %for.end ], [ %call20, %if.end41 ], [ %call20, %if.end45 ], [ %call20, %if.then59 ], [ %call20, %if.end64 ], [ %call20, %if.end69 ], [ %call20, %if.else ], [ %call20, %if.end80 ], [ %call20, %if.end85 ], [ %call20, %if.end24 ], [ %call20, %if.end28 ], !dbg !7883
  call void @llvm.dbg.value(metadata %struct.dictIterator* %di.2, metadata !7750, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.label(metadata !7768), !dbg !7907
  %call121 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %call4) #23, !dbg !7908
  %call123 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !7909
  %call124 = tail call i32* @__errno_location() #25, !dbg !7910
  %23 = load i32, i32* %call124, align 4, !dbg !7910, !tbaa !926
  %call125 = call i8* @strerror(i32 noundef %23) #23, !dbg !7911
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.156, i64 0, i64 0), i8* noundef %call125) #22, !dbg !7912
  %tobool126.not = icmp eq %struct.dictIterator* %di.2, null, !dbg !7913
  br i1 %tobool126.not, label %cleanup129, label %if.then127, !dbg !7915

if.then127:                                       ; preds = %werr
  call void @dictReleaseIterator(%struct.dictIterator* noundef nonnull %di.2) #23, !dbg !7916
  br label %cleanup129, !dbg !7916

cleanup129:                                       ; preds = %cleanup97, %werr, %if.then127, %if.end119, %if.then114, %if.then6
  %retval.2 = phi i32 [ -1, %cleanup97 ], [ -1, %if.then114 ], [ 0, %if.end119 ], [ -1, %if.then6 ], [ -1, %if.then127 ], [ -1, %werr ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !7917
  ret i32 %retval.2, !dbg !7917
}

; Function Attrs: noinline nounwind uwtable
define internal void @updateDictResizePolicy() #0 !dbg !7918 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !7919, !tbaa !732
  %cmp = icmp eq i32 %0, -1, !dbg !7921
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4
  %cmp1 = icmp eq i32 %1, -1
  %or.cond = select i1 %cmp, i1 %cmp1, i1 false, !dbg !7922
  br i1 %or.cond, label %if.then, label %if.else, !dbg !7922

if.then:                                          ; preds = %entry
  tail call void @dictEnableResize() #23, !dbg !7923
  br label %if.end, !dbg !7923

if.else:                                          ; preds = %entry
  tail call void @dictDisableResize() #23, !dbg !7924
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7925
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmThreadedIOCompletedJob(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* noundef readnone %privdata, i32 noundef %mask) #0 !dbg !7926 {
entry:
  %buf = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !7928, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %fd, metadata !7929, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !7930, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %mask, metadata !7931, metadata !DIExpression()), !dbg !7952
  %0 = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0, !dbg !7953
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %0) #24, !dbg !7953
  call void @llvm.dbg.declare(metadata [1 x i8]* %buf, metadata !7932, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 0, metadata !7934, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 -1, metadata !7935, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 1, metadata !7936, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i1 undef, metadata !7936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7952
  call void @llvm.dbg.value(metadata i32 0, metadata !7934, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 -1, metadata !7935, metadata !DIExpression()), !dbg !7952
  %call233 = call i64 @read(i32 noundef %fd, i8* noundef nonnull %0, i64 noundef 1) #23, !dbg !7955
  %conv234 = trunc i64 %call233 to i32, !dbg !7955
  call void @llvm.dbg.value(metadata i32 %conv234, metadata !7933, metadata !DIExpression()), !dbg !7952
  %cmp1235 = icmp eq i32 %conv234, 1, !dbg !7956
  br i1 %cmp1235, label %while.body.preheader, label %while.end137, !dbg !7957

while.body.preheader:                             ; preds = %entry
  %cmp.not = icmp eq i8* %privdata, null, !dbg !7958
  call void @llvm.dbg.value(metadata i1 %cmp.not, metadata !7936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7952
  %spec.store.select = zext i1 %cmp.not to i32, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !7936, metadata !DIExpression()), !dbg !7952
  br label %while.body, !dbg !7961

while.body:                                       ; preds = %while.body.preheader, %cleanup
  %processed.0239 = phi i32 [ %processed.1, %cleanup ], [ 0, %while.body.preheader ]
  %toprocess.0238 = phi i32 [ %toprocess.1, %cleanup ], [ -1, %while.body.preheader ]
  %trytoswap.0236 = phi i32 [ %trytoswap.4, %cleanup ], [ %spec.store.select, %while.body.preheader ]
  call void @llvm.dbg.value(metadata i32 %processed.0239, metadata !7934, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %toprocess.0238, metadata !7935, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %trytoswap.0236, metadata !7936, metadata !DIExpression()), !dbg !7952
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i64 0, i64 0)) #22, !dbg !7962
  call void @lockThreadedIO() #22, !dbg !7963
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !7961, !tbaa !5638
  %len = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 5, !dbg !7961
  %2 = load i32, i32* %len, align 8, !dbg !7961, !tbaa !1358
  %cmp3.not = icmp eq i32 %2, 0, !dbg !7961
  br i1 %cmp3.not, label %cond.false, label %cond.end, !dbg !7961

cond.false:                                       ; preds = %while.body
  call void @__assert_fail(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.130, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9411, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__.vmThreadedIOCompletedJob, i64 0, i64 0)) #26, !dbg !7961
  unreachable, !dbg !7961

cond.end:                                         ; preds = %while.body
  %cmp5 = icmp eq i32 %toprocess.0238, -1, !dbg !7964
  br i1 %cmp5, label %if.then7, label %if.end13, !dbg !7966

if.then7:                                         ; preds = %cond.end
  %div = udiv i32 %2, 100, !dbg !7967
  call void @llvm.dbg.value(metadata i32 %div, metadata !7935, metadata !DIExpression()), !dbg !7952
  %3 = icmp ult i32 %2, 100, !dbg !7969
  %spec.store.select155 = select i1 %3, i32 1, i32 %div, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %spec.store.select155, metadata !7935, metadata !DIExpression()), !dbg !7952
  br label %if.end13, !dbg !7972

if.end13:                                         ; preds = %if.then7, %cond.end
  %toprocess.1 = phi i32 [ %spec.store.select155, %if.then7 ], [ %toprocess.0238, %cond.end ], !dbg !7952
  call void @llvm.dbg.value(metadata i32 %toprocess.1, metadata !7935, metadata !DIExpression()), !dbg !7952
  %head = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 0, !dbg !7973
  %4 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !7973, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %4, metadata !7939, metadata !DIExpression()), !dbg !7974
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %4, i64 0, i32 2, !dbg !7975
  %5 = load i8*, i8** %value, align 8, !dbg !7975, !tbaa !891
  %6 = bitcast i8* %5 to %struct.iojob*, !dbg !7976
  call void @llvm.dbg.value(metadata %struct.iojob* %6, metadata !7937, metadata !DIExpression()), !dbg !7974
  call void @listDelNode(%struct.list* noundef nonnull %1, %struct.listNode* noundef %4) #23, !dbg !7977
  call void @unlockThreadedIO() #22, !dbg !7978
  %canceled = getelementptr inbounds i8, i8* %5, i64 48, !dbg !7979
  %7 = bitcast i8* %canceled to i32*, !dbg !7979
  %8 = load i32, i32* %7, align 8, !dbg !7979, !tbaa !5609
  %tobool.not = icmp eq i32 %8, 0, !dbg !7981
  br i1 %tobool.not, label %if.end15, label %if.then14, !dbg !7982

if.then14:                                        ; preds = %if.end13
  call void @freeIOJob(%struct.iojob* noundef nonnull %6) #22, !dbg !7983
  br label %cleanup, !dbg !7985, !llvm.loop !7986

if.end15:                                         ; preds = %if.end13
  %type = bitcast i8* %5 to i32*, !dbg !7988
  %9 = load i32, i32* %type, align 8, !dbg !7988, !tbaa !5591
  %key16 = getelementptr inbounds i8, i8* %5, i64 16, !dbg !7989
  %10 = bitcast i8* %key16 to %struct.redisObject**, !dbg !7989
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !7989, !tbaa !5599
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !7990
  %12 = load i8*, i8** %ptr, align 8, !dbg !7990, !tbaa !1328
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 5, !dbg !7991
  %13 = load i32, i32* %refcount, align 4, !dbg !7991, !tbaa !1534
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.131, i64 0, i64 0), i8* noundef nonnull %5, i32 noundef %9, %struct.redisObject* noundef %11, i8* noundef %12, i32 noundef %13) #22, !dbg !7992
  %db = getelementptr inbounds i8, i8* %5, i64 8, !dbg !7993
  %14 = bitcast i8* %db to %struct.redisDb**, !dbg !7993
  %15 = load %struct.redisDb*, %struct.redisDb** %14, align 8, !dbg !7993, !tbaa !5596
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %15, i64 0, i32 0, !dbg !7994
  %16 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !7994, !tbaa !2353
  %17 = bitcast i8* %key16 to i8**, !dbg !7995
  %18 = load i8*, i8** %17, align 8, !dbg !7995, !tbaa !5599
  %call20 = call %struct.dictEntry* @dictFind(%struct.dict* noundef %16, i8* noundef %18) #23, !dbg !7996
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call20, metadata !7941, metadata !DIExpression()), !dbg !7974
  %cmp21.not = icmp eq %struct.dictEntry* %call20, null, !dbg !7997
  br i1 %cmp21.not, label %cond.false24, label %cond.end25, !dbg !7997

cond.false24:                                     ; preds = %if.end15
  call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9429, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__.vmThreadedIOCompletedJob, i64 0, i64 0)) #26, !dbg !7997
  unreachable, !dbg !7997

cond.end25:                                       ; preds = %if.end15
  %19 = bitcast %struct.dictEntry* %call20 to %struct.redisObject**, !dbg !7998
  %20 = load %struct.redisObject*, %struct.redisObject** %19, align 8, !dbg !7998, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %20, metadata !7940, metadata !DIExpression()), !dbg !7974
  %21 = load i32, i32* %type, align 8, !dbg !7999, !tbaa !5591
  switch i32 %21, label %if.end128 [
    i32 0, label %if.then30
    i32 1, label %if.then41
    i32 2, label %if.then59
  ], !dbg !8000

if.then30:                                        ; preds = %cond.end25
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 3, !dbg !8001
  store i8 0, i8* %storage, align 2, !dbg !8002, !tbaa !1547
  %22 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !8003, !tbaa !1541
  %atime = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 6, i32 2, !dbg !8004
  store i64 %22, i64* %atime, align 8, !dbg !8005, !tbaa !1544
  %page = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 6, i32 0, !dbg !8006
  %23 = load i64, i64* %page, align 8, !dbg !8006, !tbaa !1647
  %usedpages = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 6, i32 1, !dbg !8007
  %24 = load i64, i64* %usedpages, align 8, !dbg !8007, !tbaa !1649
  call void @vmMarkPagesFree(i64 noundef %23, i64 noundef %24) #22, !dbg !8008
  %ptr34 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 0, !dbg !8009
  %25 = load i8*, i8** %ptr34, align 8, !dbg !8009, !tbaa !1328
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.132, i64 0, i64 0), i8* noundef %25) #22, !dbg !8010
  %26 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !8011, !tbaa !1661
  %dec = add i64 %26, -1, !dbg !8011
  store i64 %dec, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !8011, !tbaa !1661
  %27 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !8012, !tbaa !8013
  %inc = add i64 %27, 1, !dbg !8012
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !8012, !tbaa !8013
  %val = getelementptr inbounds i8, i8* %5, i64 24, !dbg !8014
  %28 = bitcast i8* %val to i8**, !dbg !8014
  %29 = load i8*, i8** %28, align 8, !dbg !8014, !tbaa !5606
  %val35 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call20, i64 0, i32 1, !dbg !8015
  store i8* %29, i8** %val35, align 8, !dbg !8016, !tbaa !2458
  %.cast = bitcast i8* %29 to %struct.redisObject*, !dbg !8017
  call void @incrRefCount(%struct.redisObject* noundef %.cast) #22, !dbg !8018
  %30 = load %struct.redisDb*, %struct.redisDb** %14, align 8, !dbg !8019, !tbaa !5596
  call void @llvm.dbg.value(metadata %struct.redisDb* %30, metadata !7942, metadata !DIExpression()), !dbg !8020
  call void @freeIOJob(%struct.iojob* noundef nonnull %6) #22, !dbg !8021
  call void @handleClientsBlockedOnSwappedKey(%struct.redisDb* noundef %30, %struct.redisObject* noundef %20) #22, !dbg !8022
  br label %if.end128, !dbg !8023

if.then41:                                        ; preds = %cond.end25
  %call42 = call i32 @vmCanSwapOut() #22, !dbg !8024
  %tobool43.not = icmp eq i32 %call42, 0, !dbg !8024
  br i1 %tobool43.not, label %if.then48, label %lor.lhs.false, !dbg !8027

lor.lhs.false:                                    ; preds = %if.then41
  %page44 = getelementptr inbounds i8, i8* %5, i64 32, !dbg !8028
  %31 = bitcast i8* %page44 to i64*, !dbg !8028
  %pages = getelementptr inbounds i8, i8* %5, i64 40, !dbg !8029
  %32 = bitcast i8* %pages to i64*, !dbg !8029
  %33 = load i64, i64* %32, align 8, !dbg !8029, !tbaa !5673
  %call45 = call i32 @vmFindContiguousPages(i64* noundef nonnull %31, i64 noundef %33) #22, !dbg !8030
  %cmp46 = icmp eq i32 %call45, -1, !dbg !8031
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !8032

if.then48:                                        ; preds = %lor.lhs.false, %if.then41
  call void @freeIOJob(%struct.iojob* noundef nonnull %6) #22, !dbg !8033
  %storage49 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 3, !dbg !8035
  store i8 0, i8* %storage49, align 2, !dbg !8036, !tbaa !1547
  br label %if.end128, !dbg !8037

if.else50:                                        ; preds = %lor.lhs.false
  %34 = load i64, i64* %31, align 8, !dbg !8038, !tbaa !5603
  %35 = load i64, i64* %32, align 8, !dbg !8040, !tbaa !5673
  call void @vmMarkPagesUsed(i64 noundef %34, i64 noundef %35) #22, !dbg !8041
  store i32 2, i32* %type, align 8, !dbg !8042, !tbaa !5591
  call void @lockThreadedIO() #22, !dbg !8043
  call void @queueIOJob(%struct.iojob* noundef nonnull %6) #22, !dbg !8044
  call void @unlockThreadedIO() #22, !dbg !8045
  br label %if.end128

if.then59:                                        ; preds = %cond.end25
  %storage61 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 3, !dbg !8046
  %36 = load i8, i8* %storage61, align 2, !dbg !8046, !tbaa !1547
  %cmp63.not = icmp eq i8 %36, 2, !dbg !8048
  br i1 %cmp63.not, label %cond.end89, label %if.end82, !dbg !8049

if.end82:                                         ; preds = %if.then59
  %conv62 = zext i8 %36 to i32, !dbg !8050
  %call68 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i64 0, i64 0), i32 noundef %conv62) #23, !dbg !8051
  %ptr69 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 0, !dbg !8053
  %37 = load i8*, i8** %ptr69, align 8, !dbg !8053, !tbaa !1328
  %call70 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i64 0, i64 0), i8* noundef %37) #23, !dbg !8054
  %refcount71 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 5, !dbg !8055
  %38 = load i32, i32* %refcount71, align 4, !dbg !8055, !tbaa !1534
  %call72 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.135, i64 0, i64 0), i32 noundef %38) #23, !dbg !8056
  %val73 = getelementptr inbounds i8, i8* %5, i64 24, !dbg !8057
  %39 = bitcast i8* %val73 to %struct.redisObject**, !dbg !8057
  %40 = bitcast i8* %val73 to i8**, !dbg !8057
  %41 = load i8*, i8** %40, align 8, !dbg !8057, !tbaa !5606
  %call74 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i64 0, i64 0), i8* noundef %41) #23, !dbg !8058
  %42 = load %struct.redisObject*, %struct.redisObject** %39, align 8, !dbg !8059, !tbaa !5606
  %type76 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %42, i64 0, i32 1, !dbg !8060
  %43 = load i8, i8* %type76, align 8, !dbg !8060, !tbaa !1526
  %conv77 = zext i8 %43 to i32, !dbg !8061
  %call78 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0), i32 noundef %conv77) #23, !dbg !8062
  %44 = load %struct.redisObject*, %struct.redisObject** %39, align 8, !dbg !8063, !tbaa !5606
  %ptr80 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %44, i64 0, i32 0, !dbg !8064
  %45 = load i8*, i8** %ptr80, align 8, !dbg !8064, !tbaa !1328
  %call81 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0), i8* noundef %45) #23, !dbg !8065
  %.pr = load i8, i8* %storage61, align 2, !dbg !8066, !tbaa !1547
  %cmp85 = icmp eq i8 %.pr, 2, !dbg !8066
  br i1 %cmp85, label %cond.end89, label %cond.false88, !dbg !8066

cond.false88:                                     ; preds = %if.end82
  call void @_redisAssert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.139, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9481) #22, !dbg !8066
  call void @_exit(i32 noundef 1) #26, !dbg !8066
  unreachable, !dbg !8066

cond.end89:                                       ; preds = %if.then59, %if.end82
  %val90 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call20, i64 0, i32 1, !dbg !8067
  %46 = load i8*, i8** %val90, align 8, !dbg !8067, !tbaa !2458
  call void @llvm.dbg.value(metadata i8* %46, metadata !7945, metadata !DIExpression()), !dbg !8068
  %page91 = getelementptr inbounds i8, i8* %5, i64 32, !dbg !8069
  %47 = bitcast i8* %page91 to i64*, !dbg !8069
  %page93 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 6, i32 0, !dbg !8070
  %pages94 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !8071
  %48 = bitcast i8* %pages94 to i64*, !dbg !8071
  %49 = bitcast i8* %page91 to <2 x i64>*, !dbg !8069
  %50 = load <2 x i64>, <2 x i64>* %49, align 8, !dbg !8069, !tbaa !790
  %51 = bitcast i64* %page93 to <2 x i64>*, !dbg !8072
  store <2 x i64> %50, <2 x i64>* %51, align 8, !dbg !8072, !tbaa !790
  store i8 1, i8* %storage61, align 2, !dbg !8073, !tbaa !1547
  %val98 = getelementptr inbounds i8, i8* %5, i64 24, !dbg !8074
  %52 = bitcast i8* %val98 to %struct.redisObject**, !dbg !8074
  %53 = load %struct.redisObject*, %struct.redisObject** %52, align 8, !dbg !8074, !tbaa !5606
  %type99 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %53, i64 0, i32 1, !dbg !8075
  %54 = load i8, i8* %type99, align 8, !dbg !8075, !tbaa !1526
  %vtype = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 4, !dbg !8076
  store i8 %54, i8* %vtype, align 1, !dbg !8077, !tbaa !5890
  call void @decrRefCount(i8* noundef %46) #22, !dbg !8078
  store i8* null, i8** %val90, align 8, !dbg !8079, !tbaa !2458
  %ptr101 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 0, !dbg !8080
  %55 = load i8*, i8** %ptr101, align 8, !dbg !8080, !tbaa !1328
  %56 = load i64, i64* %47, align 8, !dbg !8081, !tbaa !5603
  %57 = load i64, i64* %48, align 8, !dbg !8082, !tbaa !5673
  call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i64 0, i64 0), i8* noundef %55, i64 noundef %56, i64 noundef %57) #22, !dbg !8083
  %58 = load <2 x i64>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82) to <2 x i64>*), align 8, !dbg !8084, !tbaa !4936
  %59 = add <2 x i64> %58, <i64 1, i64 1>, !dbg !8084
  store <2 x i64> %59, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82) to <2 x i64>*), align 8, !dbg !8084, !tbaa !4936
  call void @freeIOJob(%struct.iojob* noundef nonnull %6) #22, !dbg !8085
  %tobool106.not = icmp eq i32 %trytoswap.0236, 0, !dbg !8086
  br i1 %tobool106.not, label %if.end128, label %land.lhs.true, !dbg !8087

land.lhs.true:                                    ; preds = %cond.end89
  %call107 = call i32 @vmCanSwapOut() #22, !dbg !8088
  %tobool108.not = icmp eq i32 %call107, 0, !dbg !8088
  br i1 %tobool108.not, label %if.end128, label %land.lhs.true109, !dbg !8089

land.lhs.true109:                                 ; preds = %land.lhs.true
  %call110 = call i64 @zmalloc_used_memory() #23, !dbg !8090
  %60 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !8091, !tbaa !1379
  %cmp111 = icmp ugt i64 %call110, %60, !dbg !8092
  br i1 %cmp111, label %while.cond114, label %if.end128, !dbg !8093

while.cond114:                                    ; preds = %land.lhs.true109, %while.body116
  %more.0 = phi i32 [ %conv119, %while.body116 ], [ 1, %land.lhs.true109 ], !dbg !8094
  call void @llvm.dbg.value(metadata i32 %more.0, metadata !7949, metadata !DIExpression()), !dbg !8094
  %tobool115.not = icmp eq i32 %more.0, 0, !dbg !8095
  br i1 %tobool115.not, label %if.end128, label %while.body116, !dbg !8095

while.body116:                                    ; preds = %while.cond114
  call void @lockThreadedIO() #22, !dbg !8096
  %61 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !8098, !tbaa !5634
  %len117 = getelementptr inbounds %struct.list, %struct.list* %61, i64 0, i32 5, !dbg !8098
  %62 = load i32, i32* %len117, align 8, !dbg !8098, !tbaa !1358
  %63 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !8099, !tbaa !2236
  %cmp118 = icmp ult i32 %62, %63, !dbg !8100
  %conv119 = zext i1 %cmp118 to i32, !dbg !8100
  call void @llvm.dbg.value(metadata i32 %conv119, metadata !7949, metadata !DIExpression()), !dbg !8094
  call void @unlockThreadedIO() #22, !dbg !8101
  %call120 = call i32 @vmSwapOneObjectThreaded() #22, !dbg !8102
  %cmp121 = icmp eq i32 %call120, -1, !dbg !8104
  br i1 %cmp121, label %if.end128, label %while.cond114, !dbg !8105, !llvm.loop !8106

if.end128:                                        ; preds = %while.body116, %while.cond114, %cond.end89, %land.lhs.true, %land.lhs.true109, %cond.end25, %if.else50, %if.then48, %if.then30
  %trytoswap.3 = phi i32 [ %trytoswap.0236, %if.then30 ], [ %trytoswap.0236, %if.then48 ], [ %trytoswap.0236, %if.else50 ], [ %trytoswap.0236, %cond.end25 ], [ 1, %land.lhs.true109 ], [ 1, %land.lhs.true ], [ 0, %cond.end89 ], [ 0, %while.body116 ], [ 1, %while.cond114 ], !dbg !7952
  call void @llvm.dbg.value(metadata i32 %trytoswap.3, metadata !7936, metadata !DIExpression()), !dbg !7952
  %inc129 = add nsw i32 %processed.0239, 1, !dbg !8108
  call void @llvm.dbg.value(metadata i32 %inc129, metadata !7934, metadata !DIExpression()), !dbg !7952
  %cmp130 = icmp eq i32 %inc129, %toprocess.1, !dbg !8109
  br i1 %cmp130, label %cleanup148, label %cleanup, !dbg !7952

cleanup:                                          ; preds = %if.end128, %if.then14
  %trytoswap.4 = phi i32 [ %trytoswap.0236, %if.then14 ], [ %trytoswap.3, %if.end128 ], !dbg !7952
  %processed.1 = phi i32 [ %processed.0239, %if.then14 ], [ %inc129, %if.end128 ], !dbg !7952
  call void @llvm.dbg.value(metadata i32 %processed.1, metadata !7934, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %toprocess.1, metadata !7935, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %trytoswap.4, metadata !7936, metadata !DIExpression()), !dbg !7952
  %call = call i64 @read(i32 noundef %fd, i8* noundef nonnull %0, i64 noundef 1) #23, !dbg !7955
  %conv = trunc i64 %call to i32, !dbg !7955
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7933, metadata !DIExpression()), !dbg !7952
  %cmp1 = icmp eq i32 %conv, 1, !dbg !7956
  br i1 %cmp1, label %while.body, label %while.end137, !dbg !7957

while.end137:                                     ; preds = %cleanup, %entry
  %call.lcssa = phi i64 [ %call233, %entry ], [ %call, %cleanup ]
  %64 = and i64 %call.lcssa, 2147483648, !dbg !8111
  %cmp138.not = icmp eq i64 %64, 0, !dbg !8111
  br i1 %cmp138.not, label %cleanup148, label %land.lhs.true140, !dbg !8113

land.lhs.true140:                                 ; preds = %while.end137
  %call141 = tail call i32* @__errno_location() #25, !dbg !8114
  %65 = load i32, i32* %call141, align 4, !dbg !8114, !tbaa !926
  %cmp142.not = icmp eq i32 %65, 11, !dbg !8115
  br i1 %cmp142.not, label %cleanup148, label %if.then144, !dbg !8116

if.then144:                                       ; preds = %land.lhs.true140
  %call146 = call i8* @strerror(i32 noundef %65) #23, !dbg !8117
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.141, i64 0, i64 0), i8* noundef %call146) #22, !dbg !8119
  br label %cleanup148, !dbg !8120

cleanup148:                                       ; preds = %if.end128, %while.end137, %land.lhs.true140, %if.then144
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %0) #24, !dbg !8121
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind uwtable
define internal void @handleClientsBlockedOnSwappedKey(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !8122 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !8126, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8127, metadata !DIExpression()), !dbg !8134
  %io_keys = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 3, !dbg !8135
  %0 = load %struct.dict*, %struct.dict** %io_keys, align 8, !dbg !8135, !tbaa !3075
  %1 = bitcast %struct.redisObject* %key to i8*, !dbg !8136
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %0, i8* noundef %1) #23, !dbg !8137
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !8128, metadata !DIExpression()), !dbg !8134
  %tobool.not = icmp eq %struct.dictEntry* %call, null, !dbg !8138
  br i1 %tobool.not, label %cleanup, label %if.end, !dbg !8140

if.end:                                           ; preds = %entry
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !8141
  %2 = bitcast i8** %val to %struct.list**, !dbg !8141
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !8141, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %3, metadata !8129, metadata !DIExpression()), !dbg !8134
  %len1 = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 5, !dbg !8142
  %4 = load i32, i32* %len1, align 8, !dbg !8142, !tbaa !1358
  call void @llvm.dbg.value(metadata i32 %4, metadata !8131, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32 %4, metadata !8131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8134
  %tobool2.not21 = icmp eq i32 %4, 0, !dbg !8143
  br i1 %tobool2.not21, label %cleanup, label %while.body.lr.ph, !dbg !8143

while.body.lr.ph:                                 ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %4, metadata !8131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8134
  %head = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 0
  br label %while.body, !dbg !8143

while.body:                                       ; preds = %while.body.lr.ph, %if.end7
  %dec22.in = phi i32 [ %4, %while.body.lr.ph ], [ %dec22, %if.end7 ]
  %dec22 = add nsw i32 %dec22.in, -1, !dbg !8144
  %5 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !8145, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %5, metadata !8130, metadata !DIExpression()), !dbg !8134
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %5, i64 0, i32 2, !dbg !8146
  %6 = load i8*, i8** %value, align 8, !dbg !8146, !tbaa !891
  %7 = bitcast i8* %6 to %struct.redisClient*, !dbg !8147
  call void @llvm.dbg.value(metadata %struct.redisClient* %7, metadata !8132, metadata !DIExpression()), !dbg !8148
  %call3 = tail call i32 @dontWaitForSwappedKey(%struct.redisClient* noundef %7, %struct.redisObject* noundef %key) #22, !dbg !8149
  %tobool4.not = icmp eq i32 %call3, 0, !dbg !8149
  br i1 %tobool4.not, label %if.end7, label %if.then5, !dbg !8151

if.then5:                                         ; preds = %while.body
  %8 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !8152, !tbaa !2529
  %call6 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %8, i8* noundef %6) #23, !dbg !8154
  br label %if.end7, !dbg !8155

if.end7:                                          ; preds = %if.then5, %while.body
  call void @llvm.dbg.value(metadata i32 %dec22, metadata !8131, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata i32 %dec22, metadata !8131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8134
  %tobool2.not = icmp eq i32 %dec22, 0, !dbg !8143
  br i1 %tobool2.not, label %cleanup, label %while.body, !dbg !8143, !llvm.loop !8156

cleanup:                                          ; preds = %if.end7, %if.end, %entry
  ret void, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i32 @vmCanSwapOut() #16 !dbg !8159 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !8160, !tbaa !732
  %cmp = icmp eq i32 %0, -1, !dbg !8161
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !8162
  %cmp1 = icmp eq i32 %1, -1, !dbg !8162
  %2 = select i1 %cmp, i1 %cmp1, i1 false, !dbg !8162
  %land.ext = zext i1 %2 to i32, !dbg !8162
  ret i32 %land.ext, !dbg !8163
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmFindContiguousPages(i64* nocapture noundef %first, i64 noundef %n) #0 !dbg !8164 {
entry:
  call void @llvm.dbg.value(metadata i64* %first, metadata !8169, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %n, metadata !8170, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8172, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8174, metadata !DIExpression()), !dbg !8177
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 66), align 8, !dbg !8178, !tbaa !8180
  %cmp = icmp eq i64 %0, 65536, !dbg !8181
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !8182

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 65), align 8, !dbg !8183, !tbaa !8184
  %phi.bo = add i64 %0, 1, !dbg !8182
  br label %if.end, !dbg !8182

if.then:                                          ; preds = %entry
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 65), align 8, !dbg !8185, !tbaa !8184
  br label %if.end, !dbg !8187

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %1 = phi i64 [ 0, %if.then ], [ %.pre, %entry.if.end_crit_edge ], !dbg !8183
  %2 = phi i64 [ 1, %if.then ], [ %phi.bo, %entry.if.end_crit_edge ]
  store i64 %2, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 66), align 8, !dbg !8188, !tbaa !8180
  call void @llvm.dbg.value(metadata i64 %1, metadata !8171, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8172, metadata !DIExpression()), !dbg !8177
  %3 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !8189, !tbaa !2227
  %cmp154 = icmp sgt i64 %3, 0, !dbg !8190
  br i1 %cmp154, label %while.body, label %cleanup26, !dbg !8191

while.body:                                       ; preds = %if.end, %cleanup
  %4 = phi i64 [ %6, %cleanup ], [ %3, %if.end ]
  %numfree.057 = phi i64 [ %numfree.2, %cleanup ], [ 0, %if.end ]
  %since_jump.056 = phi i64 [ %since_jump.1, %cleanup ], [ 0, %if.end ]
  %offset.055 = phi i64 [ %offset.1, %cleanup ], [ 0, %if.end ]
  call void @llvm.dbg.value(metadata i64 %numfree.057, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %since_jump.056, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %offset.055, metadata !8172, metadata !DIExpression()), !dbg !8177
  %add = add nsw i64 %offset.055, %1, !dbg !8192
  call void @llvm.dbg.value(metadata i64 %add, metadata !8175, metadata !DIExpression()), !dbg !8193
  %cmp2.not = icmp slt i64 %add, %4, !dbg !8194
  %sub = sub nsw i64 %add, %4, !dbg !8196
  %this.0 = select i1 %cmp2.not, i64 %add, i64 %sub, !dbg !8196
  call void @llvm.dbg.value(metadata i64 %this.0, metadata !8175, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.value(metadata i64 undef, metadata !8174, metadata !DIExpression()), !dbg !8177
  %call = tail call i32 @vmFreePage(i64 noundef %this.0) #22, !dbg !8197
  %tobool.not = icmp eq i32 %call, 0, !dbg !8197
  br i1 %tobool.not, label %if.end16, label %if.then8, !dbg !8199

if.then8:                                         ; preds = %while.body
  %cmp4 = icmp eq i64 %sub, 0, !dbg !8196
  %spec.select = select i1 %cmp4, i64 0, i64 %numfree.057, !dbg !8196
  %numfree.1 = select i1 %cmp2.not, i64 %numfree.057, i64 %spec.select, !dbg !8196
  call void @llvm.dbg.value(metadata i64 %numfree.1, metadata !8174, metadata !DIExpression()), !dbg !8177
  %inc9 = add nsw i64 %numfree.1, 1, !dbg !8200
  call void @llvm.dbg.value(metadata i64 %inc9, metadata !8174, metadata !DIExpression()), !dbg !8177
  %cmp10 = icmp eq i64 %inc9, %n, !dbg !8202
  br i1 %cmp10, label %cleanup.thread, label %if.end16, !dbg !8204

cleanup.thread:                                   ; preds = %if.then8
  %sub12.neg = sub i64 1, %n, !dbg !8205
  %sub13 = add i64 %sub12.neg, %this.0, !dbg !8207
  store i64 %sub13, i64* %first, align 8, !dbg !8208, !tbaa !790
  %add14 = add nsw i64 %this.0, 1, !dbg !8209
  store i64 %add14, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 65), align 8, !dbg !8210, !tbaa !8184
  %5 = load i64, i64* %first, align 8, !dbg !8211, !tbaa !790
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.142, i64 0, i64 0), i64 noundef %n, i64 noundef %5) #22, !dbg !8212
  call void @llvm.dbg.value(metadata i64 %numfree.2, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %since_jump.1, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %offset.1, metadata !8172, metadata !DIExpression()), !dbg !8177
  br label %cleanup26

if.end16:                                         ; preds = %while.body, %if.then8
  %numfree.2 = phi i64 [ %inc9, %if.then8 ], [ 0, %while.body ], !dbg !8213
  call void @llvm.dbg.value(metadata i64 %numfree.2, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %since_jump.056, metadata !8173, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8177
  %tobool18 = icmp eq i64 %numfree.2, 0, !dbg !8214
  %cmp19 = icmp sgt i64 %since_jump.056, 1022
  %or.cond = select i1 %tobool18, i1 %cmp19, i1 false, !dbg !8216
  br i1 %or.cond, label %if.then20, label %if.else23, !dbg !8216

if.then20:                                        ; preds = %if.end16
  %call21 = tail call i64 @random() #23, !dbg !8217
  %rem = srem i64 %call21, 4096, !dbg !8219
  call void @llvm.dbg.value(metadata !DIArgList(i64 %offset.055, i64 %rem), metadata !8172, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !8177
  call void @llvm.dbg.value(metadata i64 0, metadata !8173, metadata !DIExpression()), !dbg !8177
  %.pre59 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !8189, !tbaa !2227
  br label %cleanup, !dbg !8220

if.else23:                                        ; preds = %if.end16
  %inc17 = add nsw i64 %since_jump.056, 1, !dbg !8221
  call void @llvm.dbg.value(metadata i64 %inc17, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %offset.055, metadata !8172, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8177
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %if.else23
  %6 = phi i64 [ %.pre59, %if.then20 ], [ %4, %if.else23 ], !dbg !8189
  %rem.pn = phi i64 [ %rem, %if.then20 ], [ 1, %if.else23 ]
  %since_jump.1 = phi i64 [ 0, %if.then20 ], [ %inc17, %if.else23 ], !dbg !8193
  %offset.1 = add nsw i64 %rem.pn, %offset.055, !dbg !8222
  call void @llvm.dbg.value(metadata i64 %numfree.2, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %since_jump.1, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i64 %offset.1, metadata !8172, metadata !DIExpression()), !dbg !8177
  %cmp1 = icmp slt i64 %offset.1, %6, !dbg !8190
  br i1 %cmp1, label %while.body, label %cleanup26, !dbg !8191, !llvm.loop !8223

cleanup26:                                        ; preds = %cleanup, %if.end, %cleanup.thread
  %retval.2 = phi i32 [ 0, %cleanup.thread ], [ -1, %if.end ], [ -1, %cleanup ], !dbg !8177
  ret i32 %retval.2, !dbg !8225
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmMarkPagesUsed(i64 noundef %page, i64 noundef %count) #0 !dbg !8226 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !8228, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i64 %count, metadata !8229, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i64 0, metadata !8230, metadata !DIExpression()), !dbg !8231
  %cmp8 = icmp sgt i64 %count, 0, !dbg !8232
  br i1 %cmp8, label %for.body, label %for.end, !dbg !8235

for.body:                                         ; preds = %entry, %for.body
  %j.09 = phi i64 [ %inc, %for.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %j.09, metadata !8230, metadata !DIExpression()), !dbg !8231
  %add = add nsw i64 %j.09, %page, !dbg !8236
  tail call void @vmMarkPageUsed(i64 noundef %add) #22, !dbg !8237
  %inc = add nuw nsw i64 %j.09, 1, !dbg !8238
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8230, metadata !DIExpression()), !dbg !8231
  %exitcond.not = icmp eq i64 %inc, %count, !dbg !8232
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !8235, !llvm.loop !8239

for.end:                                          ; preds = %for.body, %entry
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !8241, !tbaa !5740
  %add1 = add i64 %0, %count, !dbg !8241
  store i64 %add1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !8241, !tbaa !5740
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.143, i64 0, i64 0), i64 noundef %count, i64 noundef %page) #22, !dbg !8242
  ret void, !dbg !8243
}

declare !dbg !8244 dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmSwapOneObjectThreaded() #0 !dbg !8247 {
entry:
  %call = tail call i32 @vmSwapOneObject(i32 noundef 1) #22, !dbg !8248
  ret i32 %call, !dbg !8249
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmMarkPageUsed(i64 noundef %page) #0 !dbg !8250 {
entry:
  call void @llvm.dbg.value(metadata i64 %page, metadata !8252, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i64 %page, metadata !8253, metadata !DIExpression(DW_OP_constu, 8, DW_OP_div, DW_OP_stack_value)), !dbg !8255
  call void @llvm.dbg.value(metadata i64 %page, metadata !8254, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8255
  %call = tail call i32 @vmFreePage(i64 noundef %page) #22, !dbg !8256
  %cmp = icmp eq i32 %call, 1, !dbg !8256
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !8256

cond.false:                                       ; preds = %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.144, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 8943) #22, !dbg !8256
  tail call void @_exit(i32 noundef 1) #26, !dbg !8256
  unreachable, !dbg !8256

cond.end:                                         ; preds = %entry
  %0 = trunc i64 %page to i8, !dbg !8257
  %conv = and i8 %0, 7, !dbg !8257
  call void @llvm.dbg.value(metadata i64 %page, metadata !8254, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !8255
  %div = sdiv i64 %page, 8, !dbg !8258
  call void @llvm.dbg.value(metadata i64 %div, metadata !8253, metadata !DIExpression()), !dbg !8255
  %shl = shl nuw i8 1, %conv, !dbg !8259
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67), align 8, !dbg !8260, !tbaa !5776
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %div, !dbg !8261
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8262, !tbaa !795
  %or = or i8 %2, %shl, !dbg !8262
  store i8 %or, i8* %arrayidx, align 1, !dbg !8262, !tbaa !795
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmSwapOneObject(i32 noundef %usethreads) #0 !dbg !8264 {
entry:
  call void @llvm.dbg.value(metadata i32 %usethreads, metadata !8266, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.dictEntry* null, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !8270, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* null, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8287
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !8288, !tbaa !2013
  %cmp123 = icmp sgt i32 %0, 0, !dbg !8289
  br i1 %cmp123, label %for.body, label %cleanup65, !dbg !8290

for.body:                                         ; preds = %entry, %cleanup36
  %1 = phi i32 [ %15, %cleanup36 ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup36 ], [ 0, %entry ]
  %best.0126 = phi %struct.dictEntry* [ %best.4, %cleanup36 ], [ null, %entry ]
  %best_db.0125 = phi %struct.redisDb* [ %best_db.4, %cleanup36 ], [ null, %entry ]
  %best_swappability.0124 = phi double [ %best_swappability.4, %cleanup36 ], [ 0.000000e+00, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8267, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.dictEntry* %best.0126, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* %best_db.0125, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double %best_swappability.0124, metadata !8270, metadata !DIExpression()), !dbg !8287
  %2 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !8291, !tbaa !2351
  %add.ptr = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 %indvars.iv, !dbg !8292
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr, metadata !8274, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 100, metadata !8278, metadata !DIExpression()), !dbg !8293
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %add.ptr, i64 0, i32 0, !dbg !8294
  %3 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !8294, !tbaa !2353
  %used = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 0, i32 3, !dbg !8294
  %4 = load i64, i64* %used, align 8, !dbg !8294, !tbaa !3545
  %used4 = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 1, i32 3, !dbg !8294
  %5 = load i64, i64* %used4, align 8, !dbg !8294, !tbaa !3545
  %add = sub i64 0, %5, !dbg !8296
  %cmp5 = icmp eq i64 %4, %add, !dbg !8296
  br i1 %cmp5, label %cleanup36, label %for.body8, !dbg !8297

for.body8:                                        ; preds = %for.body, %cleanup.for.body8_crit_edge
  %6 = phi %struct.dict* [ %.pre, %cleanup.for.body8_crit_edge ], [ %3, %for.body ], !dbg !8298
  %i.0121 = phi i32 [ %inc, %cleanup.for.body8_crit_edge ], [ 0, %for.body ]
  %maxtries.0120 = phi i32 [ %spec.select, %cleanup.for.body8_crit_edge ], [ 100, %for.body ]
  %best.1118 = phi %struct.dictEntry* [ %best.3, %cleanup.for.body8_crit_edge ], [ %best.0126, %for.body ]
  %best_db.1116 = phi %struct.redisDb* [ %best_db.3, %cleanup.for.body8_crit_edge ], [ %best_db.0125, %for.body ]
  %best_swappability.1114 = phi double [ %best_swappability.3, %cleanup.for.body8_crit_edge ], [ %best_swappability.0124, %for.body ]
  call void @llvm.dbg.value(metadata i32 %i.0121, metadata !8268, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %maxtries.0120, metadata !8278, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %struct.dictEntry* %best.1118, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* %best_db.1116, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double %best_swappability.1114, metadata !8270, metadata !DIExpression()), !dbg !8287
  %tobool.not = icmp eq i32 %maxtries.0120, 0, !dbg !8299
  %dec = add nsw i32 %maxtries.0120, -1
  %spec.select = select i1 %tobool.not, i32 0, i32 %dec, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8278, metadata !DIExpression()), !dbg !8293
  %call = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %6) #23, !dbg !8302
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !8279, metadata !DIExpression()), !dbg !8303
  %7 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !8304
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !8304, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %8, metadata !8272, metadata !DIExpression()), !dbg !8287
  %val13 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !8305
  %9 = bitcast i8** %val13 to %struct.redisObject**, !dbg !8305
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !8305, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %10, metadata !8273, metadata !DIExpression()), !dbg !8287
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 3, !dbg !8306
  %11 = load i8, i8* %storage, align 2, !dbg !8306, !tbaa !1547
  %cmp14.not = icmp eq i8 %11, 0, !dbg !8308
  br i1 %cmp14.not, label %lor.lhs.false, label %if.then20, !dbg !8309

lor.lhs.false:                                    ; preds = %for.body8
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !8310, !tbaa !2236
  %cmp16.not = icmp eq i32 %12, 0, !dbg !8311
  br i1 %cmp16.not, label %if.end25, label %land.lhs.true, !dbg !8312

land.lhs.true:                                    ; preds = %lor.lhs.false
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 5, !dbg !8313
  %13 = load i32, i32* %refcount, align 4, !dbg !8313, !tbaa !1534
  %cmp18.not = icmp eq i32 %13, 1, !dbg !8314
  br i1 %cmp18.not, label %if.end25, label %if.then20, !dbg !8315

if.then20:                                        ; preds = %land.lhs.true, %for.body8
  %tobool21.not = icmp ne i32 %spec.select, 0, !dbg !8316
  %dec23 = sext i1 %tobool21.not to i32, !dbg !8319
  %spec.select113 = add nsw i32 %i.0121, %dec23, !dbg !8319
  call void @llvm.dbg.value(metadata i32 %spec.select113, metadata !8268, metadata !DIExpression()), !dbg !8287
  br label %cleanup, !dbg !8320

if.end25:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %atime = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 6, i32 2, !dbg !8321
  %14 = load i64, i64* %atime, align 8, !dbg !8321, !tbaa !1544
  %atime27 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 6, i32 2, !dbg !8322
  store i64 %14, i64* %atime27, align 8, !dbg !8323, !tbaa !1544
  %call28 = tail call double @computeObjectSwappability(%struct.redisObject* noundef %10) #22, !dbg !8324
  call void @llvm.dbg.value(metadata double %call28, metadata !8283, metadata !DIExpression()), !dbg !8303
  %tobool29.not = icmp eq %struct.dictEntry* %best.1118, null, !dbg !8325
  %cmp31 = fcmp ogt double %call28, %best_swappability.1114
  %or.cond = select i1 %tobool29.not, i1 true, i1 %cmp31, !dbg !8327
  %best_swappability.2 = select i1 %or.cond, double %call28, double %best_swappability.1114, !dbg !8327
  %best_db.2 = select i1 %or.cond, %struct.redisDb* %add.ptr, %struct.redisDb* %best_db.1116, !dbg !8327
  %best.2 = select i1 %or.cond, %struct.dictEntry* %call, %struct.dictEntry* %best.1118, !dbg !8327
  call void @llvm.dbg.value(metadata %struct.dictEntry* %best.2, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* %best_db.2, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double %best_swappability.2, metadata !8270, metadata !DIExpression()), !dbg !8287
  br label %cleanup, !dbg !8328

cleanup:                                          ; preds = %if.end25, %if.then20
  %best_swappability.3 = phi double [ %best_swappability.1114, %if.then20 ], [ %best_swappability.2, %if.end25 ], !dbg !8287
  %best_db.3 = phi %struct.redisDb* [ %best_db.1116, %if.then20 ], [ %best_db.2, %if.end25 ], !dbg !8287
  %best.3 = phi %struct.dictEntry* [ %best.1118, %if.then20 ], [ %best.2, %if.end25 ], !dbg !8287
  %i.2 = phi i32 [ %spec.select113, %if.then20 ], [ %i.0121, %if.end25 ], !dbg !8329
  call void @llvm.dbg.value(metadata %struct.dictEntry* %best.3, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* %best_db.3, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double %best_swappability.3, metadata !8270, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !8268, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8278, metadata !DIExpression()), !dbg !8293
  %cmp7 = icmp slt i32 %i.2, 4, !dbg !8330
  br i1 %cmp7, label %cleanup.for.body8_crit_edge, label %cleanup36.loopexit, !dbg !8331, !llvm.loop !8332

cleanup.for.body8_crit_edge:                      ; preds = %cleanup
  %inc = add nsw i32 %i.2, 1, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8268, metadata !DIExpression()), !dbg !8287
  %.pre = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !8298, !tbaa !2353
  br label %for.body8, !dbg !8331

cleanup36.loopexit:                               ; preds = %cleanup
  %.pre131 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !8288, !tbaa !2013
  br label %cleanup36, !dbg !8335

cleanup36:                                        ; preds = %cleanup36.loopexit, %for.body
  %15 = phi i32 [ %1, %for.body ], [ %.pre131, %cleanup36.loopexit ], !dbg !8288
  %best_swappability.4 = phi double [ %best_swappability.0124, %for.body ], [ %best_swappability.3, %cleanup36.loopexit ], !dbg !8336
  %best_db.4 = phi %struct.redisDb* [ %best_db.0125, %for.body ], [ %best_db.3, %cleanup36.loopexit ], !dbg !8337
  %best.4 = phi %struct.dictEntry* [ %best.0126, %for.body ], [ %best.3, %cleanup36.loopexit ], !dbg !8338
  call void @llvm.dbg.value(metadata %struct.dictEntry* %best.4, metadata !8269, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisDb* %best_db.4, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata double %best_swappability.4, metadata !8270, metadata !DIExpression()), !dbg !8287
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8335
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !8267, metadata !DIExpression()), !dbg !8287
  %16 = sext i32 %15 to i64, !dbg !8289
  %cmp = icmp slt i64 %indvars.iv.next, %16, !dbg !8289
  br i1 %cmp, label %for.body, label %for.end42, !dbg !8290, !llvm.loop !8339

for.end42:                                        ; preds = %cleanup36
  %cmp43 = icmp eq %struct.dictEntry* %best.4, null, !dbg !8341
  br i1 %cmp43, label %cleanup65, label %if.end46, !dbg !8343

if.end46:                                         ; preds = %for.end42
  %key47 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %best.4, i64 0, i32 0, !dbg !8344
  %17 = load i8*, i8** %key47, align 8, !dbg !8344, !tbaa !2455
  %18 = bitcast i8* %17 to %struct.redisObject*, !dbg !8344
  call void @llvm.dbg.value(metadata %struct.redisObject* %18, metadata !8272, metadata !DIExpression()), !dbg !8287
  %val48 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %best.4, i64 0, i32 1, !dbg !8345
  %19 = bitcast i8** %val48 to %struct.redisObject**, !dbg !8345
  %20 = load %struct.redisObject*, %struct.redisObject** %19, align 8, !dbg !8345, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %20, metadata !8273, metadata !DIExpression()), !dbg !8287
  %ptr = bitcast i8* %17 to i8**, !dbg !8346
  %21 = load i8*, i8** %ptr, align 8, !dbg !8346, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.145, i64 0, i64 0), i8* noundef %21, double noundef %best_swappability.4) #22, !dbg !8347
  %refcount49 = getelementptr inbounds i8, i8* %17, i64 12, !dbg !8348
  %22 = bitcast i8* %refcount49 to i32*, !dbg !8348
  %23 = load i32, i32* %22, align 4, !dbg !8348, !tbaa !1534
  %cmp50 = icmp sgt i32 %23, 1, !dbg !8349
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !8350

if.then52:                                        ; preds = %if.end46
  %call53 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef nonnull %18) #22, !dbg !8351
  call void @llvm.dbg.value(metadata %struct.redisObject* %call53, metadata !8284, metadata !DIExpression()), !dbg !8352
  tail call void @decrRefCount(i8* noundef nonnull %17) #22, !dbg !8353
  %24 = bitcast %struct.dictEntry* %best.4 to %struct.redisObject**, !dbg !8354
  store %struct.redisObject* %call53, %struct.redisObject** %24, align 8, !dbg !8354, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %call53, metadata !8272, metadata !DIExpression()), !dbg !8287
  br label %if.end55, !dbg !8355

if.end55:                                         ; preds = %if.then52, %if.end46
  %key.0 = phi %struct.redisObject* [ %call53, %if.then52 ], [ %18, %if.end46 ], !dbg !8287
  call void @llvm.dbg.value(metadata %struct.redisObject* %key.0, metadata !8272, metadata !DIExpression()), !dbg !8287
  %tobool56.not = icmp eq i32 %usethreads, 0, !dbg !8356
  br i1 %tobool56.not, label %if.else, label %if.then57, !dbg !8358

if.then57:                                        ; preds = %if.end55
  %call58 = tail call i32 @vmSwapObjectThreaded(%struct.redisObject* noundef %key.0, %struct.redisObject* noundef %20, %struct.redisDb* noundef %best_db.4) #22, !dbg !8359
  br label %cleanup65, !dbg !8361

if.else:                                          ; preds = %if.end55
  %call59 = tail call i32 @vmSwapObjectBlocking(%struct.redisObject* noundef %key.0, %struct.redisObject* noundef %20) #22, !dbg !8362
  %cmp60 = icmp eq i32 %call59, 0, !dbg !8365
  br i1 %cmp60, label %if.then62, label %cleanup65, !dbg !8366

if.then62:                                        ; preds = %if.else
  store i8* null, i8** %val48, align 8, !dbg !8367, !tbaa !2458
  br label %cleanup65, !dbg !8369

cleanup65:                                        ; preds = %entry, %if.else, %for.end42, %if.then62, %if.then57
  %retval.0 = phi i32 [ 0, %if.then57 ], [ 0, %if.then62 ], [ -1, %for.end42 ], [ -1, %if.else ], [ -1, %entry ], !dbg !8287
  ret i32 %retval.0, !dbg !8370
}

; Function Attrs: noinline nounwind uwtable
define internal double @computeObjectSwappability(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !8371 {
entry:
  %klen = alloca i32, align 4
  %vlen = alloca i32, align 4
  %key99 = alloca i8*, align 8
  %val = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !8375, metadata !DIExpression()), !dbg !8406
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !8407, !tbaa !1541
  %atime = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 6, i32 2, !dbg !8408
  %1 = load i64, i64* %atime, align 8, !dbg !8408, !tbaa !1544
  %sub = sub nsw i64 %0, %1, !dbg !8409
  call void @llvm.dbg.value(metadata i64 %sub, metadata !8376, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.value(metadata i64 0, metadata !8377, metadata !DIExpression()), !dbg !8406
  %cmp = icmp slt i64 %sub, 1, !dbg !8410
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8412

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !8413
  %2 = load i8, i8* %type, align 8, !dbg !8413, !tbaa !1526
  switch i8 %2, label %sw.epilog [
    i8 0, label %sw.bb
    i8 1, label %sw.bb7
    i8 2, label %sw.bb21
    i8 3, label %sw.bb21
    i8 4, label %sw.bb88
  ], !dbg !8414

sw.bb:                                            ; preds = %if.end
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !8415
  %3 = load i8, i8* %encoding, align 1, !dbg !8415, !tbaa !1529
  %cmp2.not = icmp eq i8 %3, 0, !dbg !8417
  br i1 %cmp2.not, label %if.else, label %sw.epilog, !dbg !8418

if.else:                                          ; preds = %sw.bb
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !8419
  %4 = load i8*, i8** %ptr, align 8, !dbg !8419, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %4) #23, !dbg !8421
  %add5 = add i64 %call, 56, !dbg !8422
  call void @llvm.dbg.value(metadata i64 %add5, metadata !8377, metadata !DIExpression()), !dbg !8406
  br label %sw.epilog

sw.bb7:                                           ; preds = %if.end
  %5 = bitcast %struct.redisObject* %o to %struct.list**, !dbg !8423
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !8423, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %6, metadata !8378, metadata !DIExpression()), !dbg !8406
  %head = getelementptr inbounds %struct.list, %struct.list* %6, i64 0, i32 0, !dbg !8424
  %7 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !8424, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %7, metadata !8382, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i64 48, metadata !8377, metadata !DIExpression()), !dbg !8406
  %tobool.not = icmp eq %struct.listNode* %7, null, !dbg !8426
  br i1 %tobool.not, label %sw.epilog, label %if.then9, !dbg !8427

if.then9:                                         ; preds = %sw.bb7
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %7, i64 0, i32 2, !dbg !8428
  %8 = bitcast i8** %value to %struct.redisObject**, !dbg !8428
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !8428, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %9, metadata !8384, metadata !DIExpression()), !dbg !8429
  %encoding10 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 2, !dbg !8430
  %10 = load i8, i8* %encoding10, align 1, !dbg !8430, !tbaa !1529
  %cmp12 = icmp eq i8 %10, 0, !dbg !8431
  br i1 %cmp12, label %cond.true, label %cond.end, !dbg !8432

cond.true:                                        ; preds = %if.then9
  %ptr14 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !8433
  %11 = load i8*, i8** %ptr14, align 8, !dbg !8433, !tbaa !1328
  %call15 = tail call i64 @sdslen(i8* noundef %11) #23, !dbg !8434
  %phi.bo243 = add i64 %call15, 64, !dbg !8432
  br label %cond.end, !dbg !8432

cond.end:                                         ; preds = %if.then9, %cond.true
  %cond = phi i64 [ %phi.bo243, %cond.true ], [ 64, %if.then9 ]
  call void @llvm.dbg.value(metadata i64 undef, metadata !8387, metadata !DIExpression()), !dbg !8429
  %len = getelementptr inbounds %struct.list, %struct.list* %6, i64 0, i32 5, !dbg !8435
  %12 = load i32, i32* %len, align 8, !dbg !8435, !tbaa !1358
  %conv18 = zext i32 %12 to i64, !dbg !8435
  %mul = mul i64 %cond, %conv18, !dbg !8436
  %add19 = add i64 %mul, 48, !dbg !8437
  call void @llvm.dbg.value(metadata i64 %add19, metadata !8377, metadata !DIExpression()), !dbg !8406
  br label %sw.epilog, !dbg !8438

sw.bb21:                                          ; preds = %if.end, %if.end
  %cmp24 = icmp eq i8 %2, 3, !dbg !8439
  call void @llvm.dbg.value(metadata i1 %cmp24, metadata !8381, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8406
  br i1 %cmp24, label %cond.true27, label %cond.false29, !dbg !8440

cond.true27:                                      ; preds = %sw.bb21
  %13 = bitcast %struct.redisObject* %o to %struct.zset**, !dbg !8441
  %14 = load %struct.zset*, %struct.zset** %13, align 8, !dbg !8441, !tbaa !1328
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %14, i64 0, i32 0, !dbg !8442
  br label %cond.end31, !dbg !8440

cond.false29:                                     ; preds = %sw.bb21
  %15 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !8443
  br label %cond.end31, !dbg !8440

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %spec.select.v = phi i64 [ 88, %cond.false29 ], [ 16, %cond.true27 ]
  %.in = phi %struct.dict** [ %15, %cond.false29 ], [ %dict, %cond.true27 ]
  %16 = load %struct.dict*, %struct.dict** %.in, align 8, !dbg !8440, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.dict* %16, metadata !8379, metadata !DIExpression()), !dbg !8406
  %size = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 1, !dbg !8444
  %17 = load i64, i64* %size, align 8, !dbg !8444, !tbaa !8445
  %size35 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 1, !dbg !8444
  %18 = load i64, i64* %size35, align 8, !dbg !8444, !tbaa !8445
  %add36 = add i64 %18, %17, !dbg !8444
  %mul37 = shl i64 %add36, 3, !dbg !8446
  call void @llvm.dbg.value(metadata i64 %mul37, metadata !8377, metadata !DIExpression(DW_OP_plus_uconst, 88, DW_OP_stack_value)), !dbg !8406
  %spec.select = add i64 %mul37, %spec.select.v, !dbg !8447
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !8377, metadata !DIExpression()), !dbg !8406
  %used = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 3, !dbg !8448
  %19 = load i64, i64* %used, align 8, !dbg !8448, !tbaa !3545
  %used47 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 3, !dbg !8448
  %20 = load i64, i64* %used47, align 8, !dbg !8448, !tbaa !3545
  %add48 = sub i64 0, %20, !dbg !8448
  %tobool49.not = icmp eq i64 %19, %add48, !dbg !8448
  br i1 %tobool49.not, label %sw.epilog, label %if.then50, !dbg !8449

if.then50:                                        ; preds = %cond.end31
  %call53 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef nonnull %16) #23, !dbg !8450
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call53, metadata !8380, metadata !DIExpression()), !dbg !8406
  %21 = bitcast %struct.dictEntry* %call53 to %struct.redisObject**, !dbg !8451
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !8451, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %22, metadata !8391, metadata !DIExpression()), !dbg !8452
  %encoding54 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %22, i64 0, i32 2, !dbg !8453
  %23 = load i8, i8* %encoding54, align 1, !dbg !8453, !tbaa !1529
  %cmp56 = icmp eq i8 %23, 0, !dbg !8454
  br i1 %cmp56, label %cond.true58, label %cond.end63, !dbg !8455

cond.true58:                                      ; preds = %if.then50
  %ptr59 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %22, i64 0, i32 0, !dbg !8456
  %24 = load i8*, i8** %ptr59, align 8, !dbg !8456, !tbaa !1328
  %call60 = tail call i64 @sdslen(i8* noundef %24) #23, !dbg !8457
  %phi.bo242 = add i64 %call60, 64, !dbg !8455
  br label %cond.end63, !dbg !8455

cond.end63:                                       ; preds = %if.then50, %cond.true58
  %cond64 = phi i64 [ %phi.bo242, %cond.true58 ], [ 64, %if.then50 ]
  call void @llvm.dbg.value(metadata i64 undef, metadata !8388, metadata !DIExpression()), !dbg !8452
  %25 = load i64, i64* %used, align 8, !dbg !8458, !tbaa !3545
  %26 = load i64, i64* %used47, align 8, !dbg !8458, !tbaa !3545
  %add72 = add i64 %26, %25, !dbg !8458
  %mul73 = mul i64 %add72, %cond64, !dbg !8459
  %add74 = add i64 %mul73, %spec.select, !dbg !8460
  call void @llvm.dbg.value(metadata i64 %add74, metadata !8377, metadata !DIExpression()), !dbg !8406
  %mul84 = mul i64 %add72, 40, !dbg !8461
  %add85 = select i1 %cmp24, i64 %mul84, i64 0, !dbg !8461
  %asize.1 = add i64 %add74, %add85, !dbg !8461
  call void @llvm.dbg.value(metadata i64 %asize.1, metadata !8377, metadata !DIExpression()), !dbg !8406
  br label %sw.epilog, !dbg !8462

sw.bb88:                                          ; preds = %if.end
  %encoding89 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !8463
  %27 = load i8, i8* %encoding89, align 1, !dbg !8463, !tbaa !1529
  switch i8 %27, label %sw.epilog [
    i8 2, label %if.then93
    i8 3, label %if.then114
  ], !dbg !8464

if.then93:                                        ; preds = %sw.bb88
  %ptr94 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !8465
  %28 = load i8*, i8** %ptr94, align 8, !dbg !8465, !tbaa !1328
  %call95 = tail call i8* @zipmapRewind(i8* noundef %28) #23, !dbg !8466
  call void @llvm.dbg.value(metadata i8* %call95, metadata !8392, metadata !DIExpression()), !dbg !8467
  %29 = load i8*, i8** %ptr94, align 8, !dbg !8468, !tbaa !1328
  %call98 = tail call i32 @zipmapLen(i8* noundef %29) #23, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %call98, metadata !8395, metadata !DIExpression()), !dbg !8467
  %30 = bitcast i32* %klen to i8*, !dbg !8470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #24, !dbg !8470
  %31 = bitcast i32* %vlen to i8*, !dbg !8470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #24, !dbg !8470
  %32 = bitcast i8** %key99 to i8*, !dbg !8471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #24, !dbg !8471
  %33 = bitcast i8** %val to i8*, !dbg !8471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #24, !dbg !8471
  call void @llvm.dbg.value(metadata i32* %klen, metadata !8396, metadata !DIExpression(DW_OP_deref)), !dbg !8467
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !8397, metadata !DIExpression(DW_OP_deref)), !dbg !8467
  call void @llvm.dbg.value(metadata i8** %key99, metadata !8398, metadata !DIExpression(DW_OP_deref)), !dbg !8467
  call void @llvm.dbg.value(metadata i8** %val, metadata !8399, metadata !DIExpression(DW_OP_deref)), !dbg !8467
  %call100 = call i8* @zipmapNext(i8* noundef %call95, i8** noundef nonnull %key99, i32* noundef nonnull %klen, i8** noundef nonnull %val, i32* noundef nonnull %vlen) #23, !dbg !8472
  call void @llvm.dbg.value(metadata i8* %call100, metadata !8392, metadata !DIExpression()), !dbg !8467
  %cmp101 = icmp eq i8* %call100, null, !dbg !8474
  %.pre = load i32, i32* %klen, align 4, !dbg !8475
  %.pre244 = load i32, i32* %vlen, align 4, !dbg !8475
  %phi.bo245 = add i32 %.pre, 3, !dbg !8475
  %34 = add i32 %phi.bo245, %.pre244, !dbg !8475
  %add106 = select i1 %cmp101, i32 3, i32 %34, !dbg !8475
  call void @llvm.dbg.value(metadata i32 undef, metadata !8396, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.value(metadata i32 undef, metadata !8397, metadata !DIExpression()), !dbg !8467
  %mul107 = mul i32 %add106, %call98, !dbg !8476
  %conv108 = zext i32 %mul107 to i64, !dbg !8477
  call void @llvm.dbg.value(metadata i64 %conv108, metadata !8377, metadata !DIExpression()), !dbg !8406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #24, !dbg !8478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #24, !dbg !8478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #24, !dbg !8478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #24, !dbg !8478
  br label %sw.epilog, !dbg !8479

if.then114:                                       ; preds = %sw.bb88
  %35 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !8480
  %36 = load %struct.dict*, %struct.dict** %35, align 8, !dbg !8480, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.dict* %36, metadata !8379, metadata !DIExpression()), !dbg !8406
  %size118 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 0, i32 1, !dbg !8481
  %37 = load i64, i64* %size118, align 8, !dbg !8481, !tbaa !8445
  %size121 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 1, i32 1, !dbg !8481
  %38 = load i64, i64* %size121, align 8, !dbg !8481, !tbaa !8445
  %add122 = add i64 %38, %37, !dbg !8481
  %mul123 = shl i64 %add122, 3, !dbg !8482
  %add124 = add i64 %mul123, 88, !dbg !8483
  call void @llvm.dbg.value(metadata i64 %add124, metadata !8377, metadata !DIExpression()), !dbg !8406
  %used127 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 0, i32 3, !dbg !8484
  %39 = load i64, i64* %used127, align 8, !dbg !8484, !tbaa !3545
  %used130 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 1, i32 3, !dbg !8484
  %40 = load i64, i64* %used130, align 8, !dbg !8484, !tbaa !3545
  %add131 = sub i64 0, %40, !dbg !8484
  %tobool132.not = icmp eq i64 %39, %add131, !dbg !8484
  br i1 %tobool132.not, label %sw.epilog, label %if.then133, !dbg !8485

if.then133:                                       ; preds = %if.then114
  %call136 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef nonnull %36) #23, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call136, metadata !8380, metadata !DIExpression()), !dbg !8406
  %41 = bitcast %struct.dictEntry* %call136 to %struct.redisObject**, !dbg !8487
  %42 = load %struct.redisObject*, %struct.redisObject** %41, align 8, !dbg !8487, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %42, metadata !8405, metadata !DIExpression()), !dbg !8488
  %encoding138 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %42, i64 0, i32 2, !dbg !8489
  %43 = load i8, i8* %encoding138, align 1, !dbg !8489, !tbaa !1529
  %cmp140 = icmp eq i8 %43, 0, !dbg !8490
  br i1 %cmp140, label %cond.true142, label %cond.end147, !dbg !8491

cond.true142:                                     ; preds = %if.then133
  %ptr143 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %42, i64 0, i32 0, !dbg !8492
  %44 = load i8*, i8** %ptr143, align 8, !dbg !8492, !tbaa !1328
  %call144 = tail call i64 @sdslen(i8* noundef %44) #23, !dbg !8493
  br label %cond.end147, !dbg !8491

cond.end147:                                      ; preds = %if.then133, %cond.true142
  call void @llvm.dbg.value(metadata i64 undef, metadata !8400, metadata !DIExpression()), !dbg !8488
  %val149 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call136, i64 0, i32 1, !dbg !8494
  %45 = bitcast i8** %val149 to %struct.redisObject**, !dbg !8494
  %46 = load %struct.redisObject*, %struct.redisObject** %45, align 8, !dbg !8494, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %46, metadata !8405, metadata !DIExpression()), !dbg !8488
  %encoding150 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %46, i64 0, i32 2, !dbg !8495
  %47 = load i8, i8* %encoding150, align 1, !dbg !8495, !tbaa !1529
  %cmp152 = icmp eq i8 %47, 0, !dbg !8496
  br i1 %cmp152, label %cond.true154, label %cond.end159, !dbg !8497

cond.true154:                                     ; preds = %cond.end147
  %ptr155 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %46, i64 0, i32 0, !dbg !8498
  %48 = load i8*, i8** %ptr155, align 8, !dbg !8498, !tbaa !1328
  %call156 = tail call i64 @sdslen(i8* noundef %48) #23, !dbg !8499
  %phi.bo = add i64 %call156, 64, !dbg !8497
  br label %cond.end159, !dbg !8497

cond.end159:                                      ; preds = %cond.end147, %cond.true154
  %cond160 = phi i64 [ %phi.bo, %cond.true154 ], [ 64, %cond.end147 ]
  call void @llvm.dbg.value(metadata i64 undef, metadata !8400, metadata !DIExpression()), !dbg !8488
  %49 = load i64, i64* %used127, align 8, !dbg !8500, !tbaa !3545
  %50 = load i64, i64* %used130, align 8, !dbg !8500, !tbaa !3545
  %add168 = add i64 %50, %49, !dbg !8500
  %mul169 = mul i64 %add168, %cond160, !dbg !8501
  %add170 = add i64 %mul169, %add124, !dbg !8502
  call void @llvm.dbg.value(metadata i64 %add170, metadata !8377, metadata !DIExpression()), !dbg !8406
  br label %sw.epilog, !dbg !8503

sw.epilog:                                        ; preds = %sw.bb88, %sw.bb, %if.then93, %if.then114, %cond.end159, %cond.end31, %cond.end63, %sw.bb7, %cond.end, %if.else, %if.end
  %asize.2 = phi i64 [ 0, %if.end ], [ %conv108, %if.then93 ], [ %add170, %cond.end159 ], [ %add124, %if.then114 ], [ %asize.1, %cond.end63 ], [ %spec.select, %cond.end31 ], [ %add19, %cond.end ], [ 48, %sw.bb7 ], [ %add5, %if.else ], [ 40, %sw.bb ], [ 0, %sw.bb88 ], !dbg !8406
  call void @llvm.dbg.value(metadata i64 %asize.2, metadata !8377, metadata !DIExpression()), !dbg !8406
  %conv174 = sitofp i64 %sub to double, !dbg !8504
  %add175 = add nsw i64 %asize.2, 1, !dbg !8505
  %conv176 = sitofp i64 %add175 to double, !dbg !8506
  %call177 = call double @log(double noundef %conv176) #23, !dbg !8507
  %mul178 = fmul double %call177, %conv174, !dbg !8508
  br label %cleanup, !dbg !8509

cleanup:                                          ; preds = %entry, %sw.epilog
  %retval.0 = phi double [ %mul178, %sw.epilog ], [ 0.000000e+00, %entry ], !dbg !8406
  ret double %retval.0, !dbg !8510
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmSwapObjectThreaded(%struct.redisObject* noundef %key, %struct.redisObject* noundef %val, %struct.redisDb* noundef %db) #0 !dbg !8511 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8515, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %struct.redisObject* %val, metadata !8516, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !8517, metadata !DIExpression()), !dbg !8519
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 3, !dbg !8520
  %0 = load i8, i8* %storage, align 2, !dbg !8520, !tbaa !1547
  %cmp = icmp eq i8 %0, 0, !dbg !8520
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !8520

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.146, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9741, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.vmSwapObjectThreaded, i64 0, i64 0)) #26, !dbg !8520
  unreachable, !dbg !8520

cond.end:                                         ; preds = %entry
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 5, !dbg !8521
  %1 = load i32, i32* %refcount, align 4, !dbg !8521, !tbaa !1534
  %cmp2 = icmp eq i32 %1, 1, !dbg !8521
  br i1 %cmp2, label %cond.end6, label %cond.false5, !dbg !8521

cond.false5:                                      ; preds = %cond.end
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9742, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.vmSwapObjectThreaded, i64 0, i64 0)) #26, !dbg !8521
  unreachable, !dbg !8521

cond.end6:                                        ; preds = %cond.end
  %call = tail call i8* @zmalloc(i64 noundef 64) #23, !dbg !8522
  %2 = bitcast i8* %call to %struct.iojob*, !dbg !8522
  call void @llvm.dbg.value(metadata %struct.iojob* %2, metadata !8518, metadata !DIExpression()), !dbg !8519
  %type = bitcast i8* %call to i32*, !dbg !8523
  store i32 1, i32* %type, align 8, !dbg !8524, !tbaa !5591
  %db7 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !8525
  %3 = bitcast i8* %db7 to %struct.redisDb**, !dbg !8525
  store %struct.redisDb* %db, %struct.redisDb** %3, align 8, !dbg !8526, !tbaa !5596
  %key8 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !8527
  %4 = bitcast i8* %key8 to %struct.redisObject**, !dbg !8527
  store %struct.redisObject* %key, %struct.redisObject** %4, align 8, !dbg !8528, !tbaa !5599
  %val9 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !8529
  %5 = bitcast i8* %val9 to %struct.redisObject**, !dbg !8529
  store %struct.redisObject* %val, %struct.redisObject** %5, align 8, !dbg !8530, !tbaa !5606
  tail call void @incrRefCount(%struct.redisObject* noundef %val) #22, !dbg !8531
  %canceled = getelementptr inbounds i8, i8* %call, i64 48, !dbg !8532
  %6 = bitcast i8* %canceled to i32*, !dbg !8532
  store i32 0, i32* %6, align 8, !dbg !8533, !tbaa !5609
  %thread = getelementptr inbounds i8, i8* %call, i64 56, !dbg !8534
  %7 = bitcast i8* %thread to i64*, !dbg !8534
  store i64 -1, i64* %7, align 8, !dbg !8535, !tbaa !5612
  store i8 2, i8* %storage, align 2, !dbg !8536, !tbaa !1547
  tail call void @lockThreadedIO() #22, !dbg !8537
  tail call void @queueIOJob(%struct.iojob* noundef %2) #22, !dbg !8538
  tail call void @unlockThreadedIO() #22, !dbg !8539
  ret i32 0, !dbg !8540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vmSwapObjectBlocking(%struct.redisObject* nocapture noundef %key, %struct.redisObject* noundef %val) #0 !dbg !8541 {
entry:
  %page = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8543, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata %struct.redisObject* %val, metadata !8544, metadata !DIExpression()), !dbg !8547
  %call = tail call i64 @rdbSavedObjectPages(%struct.redisObject* noundef %val, %struct._IO_FILE* noundef null) #22, !dbg !8548
  call void @llvm.dbg.value(metadata i64 %call, metadata !8545, metadata !DIExpression()), !dbg !8547
  %0 = bitcast i64* %page to i8*, !dbg !8549
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !8549
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 3, !dbg !8550
  %1 = load i8, i8* %storage, align 2, !dbg !8550, !tbaa !1547
  %cmp = icmp eq i8 %1, 0, !dbg !8550
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !8550

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.146, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9081, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.vmSwapObjectBlocking, i64 0, i64 0)) #26, !dbg !8550
  unreachable, !dbg !8550

cond.end:                                         ; preds = %entry
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 5, !dbg !8551
  %2 = load i32, i32* %refcount, align 4, !dbg !8551, !tbaa !1534
  %cmp2 = icmp eq i32 %2, 1, !dbg !8551
  br i1 %cmp2, label %cond.end6, label %cond.false5, !dbg !8551

cond.false5:                                      ; preds = %cond.end
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9082, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.vmSwapObjectBlocking, i64 0, i64 0)) #26, !dbg !8551
  unreachable, !dbg !8551

cond.end6:                                        ; preds = %cond.end
  call void @llvm.dbg.value(metadata i64* %page, metadata !8546, metadata !DIExpression(DW_OP_deref)), !dbg !8547
  %call7 = call i32 @vmFindContiguousPages(i64* noundef nonnull %page, i64 noundef %call) #22, !dbg !8552
  %cmp8 = icmp eq i32 %call7, -1, !dbg !8554
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !8555

if.end:                                           ; preds = %cond.end6
  %3 = load i64, i64* %page, align 8, !dbg !8556, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %3, metadata !8546, metadata !DIExpression()), !dbg !8547
  %call10 = tail call i32 @vmWriteObjectOnSwap(%struct.redisObject* noundef %val, i64 noundef %3) #22, !dbg !8558
  %cmp11 = icmp eq i32 %call10, -1, !dbg !8559
  br i1 %cmp11, label %cleanup, label %if.end14, !dbg !8560

if.end14:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 %3, metadata !8546, metadata !DIExpression()), !dbg !8547
  %page15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 6, i32 0, !dbg !8561
  store i64 %3, i64* %page15, align 8, !dbg !8562, !tbaa !1647
  %usedpages = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 6, i32 1, !dbg !8563
  store i64 %call, i64* %usedpages, align 8, !dbg !8564, !tbaa !1649
  store i8 1, i8* %storage, align 2, !dbg !8565, !tbaa !1547
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %val, i64 0, i32 1, !dbg !8566
  %4 = load i8, i8* %type, align 8, !dbg !8566, !tbaa !1526
  %vtype = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 4, !dbg !8567
  store i8 %4, i8* %vtype, align 1, !dbg !8568, !tbaa !5890
  %5 = bitcast %struct.redisObject* %val to i8*, !dbg !8569
  tail call void @decrRefCount(i8* noundef %5) #22, !dbg !8570
  call void @llvm.dbg.value(metadata i64 %3, metadata !8546, metadata !DIExpression()), !dbg !8547
  tail call void @vmMarkPagesUsed(i64 noundef %3, i64 noundef %call) #22, !dbg !8571
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 0, !dbg !8572
  %6 = load i8*, i8** %ptr, align 8, !dbg !8572, !tbaa !1328
  call void @llvm.dbg.value(metadata i64 %3, metadata !8546, metadata !DIExpression()), !dbg !8547
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i64 0, i64 0), i8* noundef %6, i64 noundef %3, i64 noundef %call) #22, !dbg !8573
  %7 = load <2 x i64>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82) to <2 x i64>*), align 8, !dbg !8574, !tbaa !4936
  %8 = add <2 x i64> %7, <i64 1, i64 1>, !dbg !8574
  store <2 x i64> %8, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82) to <2 x i64>*), align 8, !dbg !8574, !tbaa !4936
  br label %cleanup, !dbg !8575

cleanup:                                          ; preds = %if.end, %cond.end6, %if.end14
  %retval.0 = phi i32 [ 0, %if.end14 ], [ -1, %cond.end6 ], [ -1, %if.end ], !dbg !8547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !8576
  ret i32 %retval.0, !dbg !8576
}

; Function Attrs: nounwind
declare !dbg !8577 dso_local double @log(double noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveType(%struct._IO_FILE* noundef %fp, i8 noundef zeroext %type) #0 !dbg !8581 {
entry:
  %type.addr = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata i8 %type, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i8 %type, i8* %type.addr, align 1, !tbaa !795
  call void @llvm.dbg.value(metadata i8* %type.addr, metadata !8586, metadata !DIExpression(DW_OP_deref)), !dbg !8587
  %call = call i64 @fwrite(i8* noundef nonnull %type.addr, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !8588
  %cmp = icmp eq i64 %call, 0, !dbg !8590
  %. = sext i1 %cmp to i32, !dbg !8587
  ret i32 %., !dbg !8591
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @getExpire(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !8592 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8597, metadata !DIExpression()), !dbg !8599
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !8600
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !8600, !tbaa !3635
  %used = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !8600
  %1 = load i64, i64* %used, align 8, !dbg !8600, !tbaa !3545
  %used4 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !8600
  %2 = load i64, i64* %used4, align 8, !dbg !8600, !tbaa !3545
  %add = sub i64 0, %2, !dbg !8602
  %cmp = icmp eq i64 %1, %add, !dbg !8602
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !8603

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !8604
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef nonnull %0, i8* noundef %3) #23, !dbg !8605
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !8598, metadata !DIExpression()), !dbg !8599
  %cmp6 = icmp eq %struct.dictEntry* %call, null, !dbg !8606
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !8607

if.end:                                           ; preds = %lor.lhs.false
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !8608
  %4 = load i8*, i8** %val, align 8, !dbg !8608, !tbaa !2458
  %5 = ptrtoint i8* %4 to i64, !dbg !8609
  br label %cleanup, !dbg !8610

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi i64 [ %5, %if.end ], [ -1, %lor.lhs.false ], [ -1, %entry ], !dbg !8599
  ret i64 %retval.0, !dbg !8611
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbSaveTime(%struct._IO_FILE* noundef %fp, i64 noundef %t) #0 !dbg !8612 {
entry:
  %t32 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i64 %t, metadata !8617, metadata !DIExpression()), !dbg !8619
  %0 = bitcast i32* %t32 to i8*, !dbg !8620
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !8620
  %conv = trunc i64 %t to i32, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8618, metadata !DIExpression()), !dbg !8619
  store i32 %conv, i32* %t32, align 4, !dbg !8622, !tbaa !926
  call void @llvm.dbg.value(metadata i32* %t32, metadata !8618, metadata !DIExpression(DW_OP_deref)), !dbg !8619
  %call = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef 4, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !8623
  %cmp = icmp eq i64 %call, 0, !dbg !8625
  %. = sext i1 %cmp to i32, !dbg !8619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !8626
  ret i32 %., !dbg !8626
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @vmPreviewObject(%struct.redisObject* nocapture noundef %key) #0 !dbg !8627 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8629, metadata !DIExpression()), !dbg !8630
  %call = tail call %struct.redisObject* @vmGenericLoadObject(%struct.redisObject* noundef %key, i32 noundef 1) #22, !dbg !8631
  ret %struct.redisObject* %call, !dbg !8632
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @vmGenericLoadObject(%struct.redisObject* nocapture noundef %key, i32 noundef %preview) #0 !dbg !8633 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %preview, metadata !8638, metadata !DIExpression()), !dbg !8640
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 3, !dbg !8641
  %0 = load i8, i8* %storage, align 2, !dbg !8641, !tbaa !1547
  switch i8 %0, label %cond.false [
    i8 1, label %cond.end
    i8 3, label %cond.end
  ], !dbg !8641

cond.false:                                       ; preds = %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.157, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 9126) #22, !dbg !8641
  tail call void @_exit(i32 noundef 1) #26, !dbg !8641
  unreachable, !dbg !8641

cond.end:                                         ; preds = %entry, %entry
  %page = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 6, i32 0, !dbg !8642
  %1 = load i64, i64* %page, align 8, !dbg !8642, !tbaa !1647
  %vtype = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 4, !dbg !8643
  %2 = load i8, i8* %vtype, align 1, !dbg !8643, !tbaa !5890
  %conv6 = zext i8 %2 to i32, !dbg !8644
  %call = tail call %struct.redisObject* @vmReadObjectFromSwap(i64 noundef %1, i32 noundef %conv6) #22, !dbg !8645
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !8639, metadata !DIExpression()), !dbg !8640
  %tobool.not = icmp eq i32 %preview, 0, !dbg !8646
  br i1 %tobool.not, label %if.then, label %if.else, !dbg !8648

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %storage, align 2, !dbg !8649, !tbaa !1547
  %3 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !8651, !tbaa !1541
  %atime = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 6, i32 2, !dbg !8652
  store i64 %3, i64* %atime, align 8, !dbg !8653, !tbaa !1544
  %4 = load i64, i64* %page, align 8, !dbg !8654, !tbaa !1647
  %usedpages = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 6, i32 1, !dbg !8655
  %5 = load i64, i64* %usedpages, align 8, !dbg !8655, !tbaa !1649
  tail call void @vmMarkPagesFree(i64 noundef %4, i64 noundef %5) #22, !dbg !8656
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 0, !dbg !8657
  %6 = load i8*, i8** %ptr, align 8, !dbg !8657, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.158, i64 0, i64 0), i8* noundef %6) #22, !dbg !8658
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !8659, !tbaa !1661
  %dec = add i64 %7, -1, !dbg !8659
  store i64 %dec, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !8659, !tbaa !1661
  br label %if.end, !dbg !8660

if.else:                                          ; preds = %cond.end
  %ptr12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 0, !dbg !8661
  %8 = load i8*, i8** %ptr12, align 8, !dbg !8661, !tbaa !1328
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 0, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.159, i64 0, i64 0), i8* noundef %8) #22, !dbg !8663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !8664, !tbaa !8013
  %inc = add i64 %9, 1, !dbg !8664
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !8664, !tbaa !8013
  ret %struct.redisObject* %call, !dbg !8665
}

declare !dbg !8666 dso_local void @dictEnableResize() local_unnamed_addr #4

declare !dbg !8667 dso_local void @dictDisableResize() local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal i32 @selectDb(%struct.redisClient* nocapture noundef writeonly %c, i32 noundef %id) #14 !dbg !8668 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8670, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i32 %id, metadata !8671, metadata !DIExpression()), !dbg !8672
  %cmp = icmp sgt i32 %id, -1, !dbg !8673
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4
  %cmp1.not = icmp sgt i32 %0, %id
  %or.cond = select i1 %cmp, i1 %cmp1.not, i1 false, !dbg !8675
  br i1 %or.cond, label %if.end, label %return, !dbg !8675

if.end:                                           ; preds = %entry
  %1 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !8676, !tbaa !2351
  %idxprom4 = zext i32 %id to i64, !dbg !8677
  %arrayidx = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 %idxprom4, !dbg !8677
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !8678
  store %struct.redisDb* %arrayidx, %struct.redisDb** %db, align 8, !dbg !8679, !tbaa !2890
  br label %return, !dbg !8680

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %entry ], !dbg !8672
  ret i32 %retval.0, !dbg !8681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal i8* @dupClientReplyValue(i8* noundef returned %o) #14 !dbg !8682 {
entry:
  call void @llvm.dbg.value(metadata i8* %o, metadata !8684, metadata !DIExpression()), !dbg !8685
  %0 = bitcast i8* %o to %struct.redisObject*, !dbg !8686
  tail call void @incrRefCount(%struct.redisObject* noundef %0) #22, !dbg !8687
  ret i8* %o, !dbg !8688
}

; Function Attrs: noinline nounwind uwtable
define internal void @getCommand(%struct.redisClient* noundef %c) #0 !dbg !8689 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8691, metadata !DIExpression()), !dbg !8692
  %call = tail call i32 @getGenericCommand(%struct.redisClient* noundef %c) #22, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: noinline nounwind uwtable
define internal void @setCommand(%struct.redisClient* noundef %c) #0 !dbg !8695 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8697, metadata !DIExpression()), !dbg !8698
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8699
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8699, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !8700
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8700, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !8701
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !8701, !tbaa !782
  tail call void @setGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2, %struct.redisObject* noundef null) #22, !dbg !8702
  ret void, !dbg !8703
}

; Function Attrs: noinline nounwind uwtable
define internal void @setnxCommand(%struct.redisClient* noundef %c) #0 !dbg !8704 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8706, metadata !DIExpression()), !dbg !8707
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8708
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8708, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !8709
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8709, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !8710
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !8710, !tbaa !782
  tail call void @setGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2, %struct.redisObject* noundef null) #22, !dbg !8711
  ret void, !dbg !8712
}

; Function Attrs: noinline nounwind uwtable
define internal void @appendCommand(%struct.redisClient* noundef %c) #0 !dbg !8713 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8715, metadata !DIExpression()), !dbg !8725
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !8726
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8726, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8727
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8727, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !8728
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8728, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !8729
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !8718, metadata !DIExpression()), !dbg !8725
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !8730
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8731, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 0, i32 0, !dbg !8731
  %4 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !8731, !tbaa !2353
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8731, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 1, !dbg !8731
  %6 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !8731
  %7 = load i8*, i8** %6, align 8, !dbg !8731, !tbaa !782
  br i1 %cmp, label %if.then, label %if.else, !dbg !8732

if.then:                                          ; preds = %entry
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 2, !dbg !8733
  %8 = bitcast %struct.redisObject** %arrayidx5 to i8**, !dbg !8733
  %9 = load i8*, i8** %8, align 8, !dbg !8733, !tbaa !782
  %call6 = tail call i32 @dictAdd(%struct.dict* noundef %4, i8* noundef %7, i8* noundef %9) #23, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %call6, metadata !8716, metadata !DIExpression()), !dbg !8725
  %10 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8736, !tbaa !1352
  %arrayidx8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 1, !dbg !8737
  %11 = load %struct.redisObject*, %struct.redisObject** %arrayidx8, align 8, !dbg !8737, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %11) #22, !dbg !8738
  %12 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8739, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 2, !dbg !8740
  %13 = load %struct.redisObject*, %struct.redisObject** %arrayidx10, align 8, !dbg !8740, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %13) #22, !dbg !8741
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8742, !tbaa !1352
  %arrayidx12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 2, !dbg !8743
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx12, align 8, !dbg !8743, !tbaa !782
  %call13 = tail call i64 @stringObjectLen(%struct.redisObject* noundef %15) #22, !dbg !8744
  call void @llvm.dbg.value(metadata i64 %call13, metadata !8717, metadata !DIExpression()), !dbg !8725
  br label %if.end66, !dbg !8745

if.else:                                          ; preds = %entry
  %call18 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %4, i8* noundef %7) #23, !dbg !8746
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call18, metadata !8719, metadata !DIExpression()), !dbg !8747
  %cmp19.not = icmp eq %struct.dictEntry* %call18, null, !dbg !8748
  br i1 %cmp19.not, label %cond.false, label %cond.end, !dbg !8748

cond.false:                                       ; preds = %if.else
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 4458, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__.appendCommand, i64 0, i64 0)) #26, !dbg !8748
  unreachable, !dbg !8748

cond.end:                                         ; preds = %if.else
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call18, i64 0, i32 1, !dbg !8749
  %16 = bitcast i8** %val to %struct.redisObject**, !dbg !8749
  %17 = load %struct.redisObject*, %struct.redisObject** %16, align 8, !dbg !8749, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !8718, metadata !DIExpression()), !dbg !8725
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %17, i64 0, i32 1, !dbg !8750
  %18 = load i8, i8* %type, align 8, !dbg !8750, !tbaa !1526
  %cmp20.not = icmp eq i8 %18, 0, !dbg !8752
  br i1 %cmp20.not, label %if.end, label %cleanup, !dbg !8753

if.end:                                           ; preds = %cond.end
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %17, i64 0, i32 5, !dbg !8754
  %19 = load i32, i32* %refcount, align 4, !dbg !8754, !tbaa !1534
  %cmp23.not = icmp eq i32 %19, 1, !dbg !8755
  br i1 %cmp23.not, label %lor.lhs.false, label %if.then28, !dbg !8756

lor.lhs.false:                                    ; preds = %if.end
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %17, i64 0, i32 2, !dbg !8757
  %20 = load i8, i8* %encoding, align 1, !dbg !8757, !tbaa !1529
  %cmp26.not = icmp eq i8 %20, 0, !dbg !8758
  br i1 %cmp26.not, label %if.end38, label %if.then28, !dbg !8759

if.then28:                                        ; preds = %lor.lhs.false, %if.end
  %call29 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %17) #22, !dbg !8760
  call void @llvm.dbg.value(metadata %struct.redisObject* %call29, metadata !8722, metadata !DIExpression()), !dbg !8761
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call29, i64 0, i32 0, !dbg !8762
  %21 = load i8*, i8** %ptr, align 8, !dbg !8762, !tbaa !1328
  %call31 = tail call i64 @sdslen(i8* noundef %21) #23, !dbg !8763
  %call32 = tail call %struct.redisObject* @createStringObject(i8* noundef %21, i64 noundef %call31) #22, !dbg !8764
  call void @llvm.dbg.value(metadata %struct.redisObject* %call32, metadata !8718, metadata !DIExpression()), !dbg !8725
  %22 = bitcast %struct.redisObject* %call29 to i8*, !dbg !8765
  tail call void @decrRefCount(i8* noundef %22) #22, !dbg !8766
  %23 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8767, !tbaa !2890
  %dict34 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %23, i64 0, i32 0, !dbg !8768
  %24 = load %struct.dict*, %struct.dict** %dict34, align 8, !dbg !8768, !tbaa !2353
  %25 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8769, !tbaa !1352
  %arrayidx36 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 1, !dbg !8770
  %26 = bitcast %struct.redisObject** %arrayidx36 to i8**, !dbg !8770
  %27 = load i8*, i8** %26, align 8, !dbg !8770, !tbaa !782
  %28 = bitcast %struct.redisObject* %call32 to i8*, !dbg !8771
  %call37 = tail call i32 @dictReplace(%struct.dict* noundef %24, i8* noundef %27, i8* noundef %28) #23, !dbg !8772
  br label %if.end38, !dbg !8773

if.end38:                                         ; preds = %if.then28, %lor.lhs.false
  %o.0 = phi %struct.redisObject* [ %call32, %if.then28 ], [ %17, %lor.lhs.false ], !dbg !8747
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !8718, metadata !DIExpression()), !dbg !8725
  %29 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8774, !tbaa !1352
  %arrayidx40 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %29, i64 2, !dbg !8776
  %30 = load %struct.redisObject*, %struct.redisObject** %arrayidx40, align 8, !dbg !8776, !tbaa !782
  %encoding41 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %30, i64 0, i32 2, !dbg !8777
  %31 = load i8, i8* %encoding41, align 1, !dbg !8777, !tbaa !1529
  %cmp43 = icmp eq i8 %31, 0, !dbg !8778
  %ptr46 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o.0, i64 0, i32 0, !dbg !8779
  %32 = load i8*, i8** %ptr46, align 8, !dbg !8779, !tbaa !1328
  %ptr49 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %30, i64 0, i32 0, !dbg !8779
  %33 = load i8*, i8** %ptr49, align 8, !dbg !8779, !tbaa !1328
  br i1 %cmp43, label %if.then45, label %if.else56, !dbg !8780

if.then45:                                        ; preds = %if.end38
  %call53 = tail call i64 @sdslen(i8* noundef %33) #23, !dbg !8781
  %call54 = tail call i8* @sdscatlen(i8* noundef %32, i8* noundef %33, i64 noundef %call53) #23, !dbg !8783
  br label %cleanup.thread, !dbg !8784

if.else56:                                        ; preds = %if.end38
  %34 = ptrtoint i8* %33 to i64, !dbg !8785
  %call61 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %32, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), i64 noundef %34) #23, !dbg !8787
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then45, %if.else56
  %call54.sink = phi i8* [ %call54, %if.then45 ], [ %call61, %if.else56 ]
  store i8* %call54.sink, i8** %ptr46, align 8, !dbg !8779, !tbaa !1328
  %call65 = tail call i64 @sdslen(i8* noundef %call54.sink) #23, !dbg !8788
  call void @llvm.dbg.value(metadata i64 undef, metadata !8717, metadata !DIExpression()), !dbg !8725
  br label %if.end66

cleanup:                                          ; preds = %cond.end
  %35 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !8789, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %35) #22, !dbg !8792
  call void @llvm.dbg.value(metadata i64 undef, metadata !8717, metadata !DIExpression()), !dbg !8725
  br label %cleanup69

if.end66:                                         ; preds = %cleanup.thread, %if.then
  %totlen.1 = phi i64 [ %call13, %if.then ], [ %call65, %cleanup.thread ]
  call void @llvm.dbg.value(metadata i64 %totlen.1, metadata !8717, metadata !DIExpression()), !dbg !8725
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !8793, !tbaa !708
  %inc = add nsw i64 %36, 1, !dbg !8793
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !8793, !tbaa !708
  %call67 = tail call i8* (...) @sdsempty() #23, !dbg !8794
  %call68 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call67, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i64 0, i64 0), i64 noundef %totlen.1) #23, !dbg !8795
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call68) #22, !dbg !8796
  br label %cleanup69, !dbg !8797

cleanup69:                                        ; preds = %cleanup, %if.end66
  ret void, !dbg !8797
}

; Function Attrs: noinline nounwind uwtable
define internal void @substrCommand(%struct.redisClient* noundef %c) #0 !dbg !8798 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8800, metadata !DIExpression()), !dbg !8807
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8808
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8808, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !8809
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8809, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !8810
  %2 = load i8*, i8** %ptr, align 8, !dbg !8810, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !8811
  %conv = sext i32 %call to i64, !dbg !8811
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8802, metadata !DIExpression()), !dbg !8807
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 3, !dbg !8812
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !8812, !tbaa !782
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !8813
  %4 = load i8*, i8** %ptr3, align 8, !dbg !8813, !tbaa !1328
  %call4 = tail call i32 @atoi(i8* noundef %4) #27, !dbg !8814
  %conv5 = sext i32 %call4 to i64, !dbg !8814
  call void @llvm.dbg.value(metadata i64 %conv5, metadata !8803, metadata !DIExpression()), !dbg !8807
  %arrayidx7 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !8815
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx7, align 8, !dbg !8815, !tbaa !782
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !8817, !tbaa !8818
  %call8 = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %5, %struct.redisObject* noundef %6) #22, !dbg !8819
  call void @llvm.dbg.value(metadata %struct.redisObject* %call8, metadata !8801, metadata !DIExpression()), !dbg !8807
  %cmp = icmp eq %struct.redisObject* %call8, null, !dbg !8820
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !8821

lor.lhs.false:                                    ; preds = %entry
  %call10 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call8, i32 noundef 0) #22, !dbg !8822
  %tobool.not = icmp eq i32 %call10, 0, !dbg !8822
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !8823

if.end:                                           ; preds = %lor.lhs.false
  %call11 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %call8) #22, !dbg !8824
  call void @llvm.dbg.value(metadata %struct.redisObject* %call11, metadata !8801, metadata !DIExpression()), !dbg !8807
  %ptr12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call11, i64 0, i32 0, !dbg !8825
  %7 = load i8*, i8** %ptr12, align 8, !dbg !8825, !tbaa !1328
  %call13 = tail call i64 @sdslen(i8* noundef %7) #23, !dbg !8826
  call void @llvm.dbg.value(metadata i64 %call13, metadata !8805, metadata !DIExpression()), !dbg !8807
  %cmp14 = icmp slt i32 %call, 0, !dbg !8827
  %add = select i1 %cmp14, i64 %call13, i64 0, !dbg !8829
  %spec.select = add i64 %add, %conv, !dbg !8829
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !8802, metadata !DIExpression()), !dbg !8807
  %cmp18 = icmp slt i32 %call4, 0, !dbg !8830
  %add21 = select i1 %cmp18, i64 %call13, i64 0, !dbg !8832
  %end.0 = add i64 %add21, %conv5, !dbg !8832
  call void @llvm.dbg.value(metadata i64 %end.0, metadata !8803, metadata !DIExpression()), !dbg !8807
  %8 = icmp sgt i64 %spec.select, 0, !dbg !8833
  %spec.store.select = select i1 %8, i64 %spec.select, i64 0, !dbg !8833
  call void @llvm.dbg.value(metadata i64 %spec.store.select, metadata !8802, metadata !DIExpression()), !dbg !8807
  %9 = icmp sgt i64 %end.0, 0, !dbg !8834
  %spec.store.select53 = select i1 %9, i64 %end.0, i64 0, !dbg !8834
  call void @llvm.dbg.value(metadata i64 %spec.store.select53, metadata !8803, metadata !DIExpression()), !dbg !8807
  %cmp31 = icmp ule i64 %spec.store.select, %spec.store.select53, !dbg !8835
  %cmp34.not = icmp ult i64 %spec.store.select, %call13
  %or.cond = select i1 %cmp31, i1 %cmp34.not, i1 false, !dbg !8837
  br i1 %or.cond, label %if.end37, label %cleanup.sink.split, !dbg !8837

if.end37:                                         ; preds = %if.end
  %cmp38.not = icmp ult i64 %spec.store.select53, %call13, !dbg !8838
  %sub = add i64 %call13, -1
  %spec.select89 = select i1 %cmp38.not, i64 %spec.store.select53, i64 %sub, !dbg !8840
  call void @llvm.dbg.value(metadata i64 %spec.select89, metadata !8803, metadata !DIExpression()), !dbg !8807
  %sub42 = sub nsw i64 %spec.select89, %spec.store.select, !dbg !8841
  %add43 = add nsw i64 %sub42, 1, !dbg !8842
  call void @llvm.dbg.value(metadata i64 %add43, metadata !8804, metadata !DIExpression()), !dbg !8807
  %call44 = tail call i8* (...) @sdsempty() #23, !dbg !8843
  %call45 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call44, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.267, i64 0, i64 0), i64 noundef %add43) #23, !dbg !8844
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call45) #22, !dbg !8845
  %10 = load i8*, i8** %ptr12, align 8, !dbg !8846, !tbaa !1328
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %spec.store.select, !dbg !8847
  %call47 = tail call i8* @sdsnewlen(i8* noundef %add.ptr, i64 noundef %add43) #23, !dbg !8848
  call void @llvm.dbg.value(metadata i8* %call47, metadata !8806, metadata !DIExpression()), !dbg !8807
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call47) #22, !dbg !8849
  br label %cleanup.sink.split, !dbg !8850

cleanup.sink.split:                               ; preds = %if.end, %if.end37
  %.sink90 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), %if.end37 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), %if.end ]
  %11 = load %struct.redisObject*, %struct.redisObject** %.sink90, align 8, !dbg !8807, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %11) #22, !dbg !8807
  %12 = bitcast %struct.redisObject* %call11 to i8*, !dbg !8807
  tail call void @decrRefCount(i8* noundef %12) #22, !dbg !8807
  br label %cleanup, !dbg !8850

cleanup:                                          ; preds = %cleanup.sink.split, %entry, %lor.lhs.false
  ret void, !dbg !8850
}

; Function Attrs: noinline nounwind uwtable
define internal void @delCommand(%struct.redisClient* noundef %c) #0 !dbg !8851 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 0, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 1, metadata !8855, metadata !DIExpression()), !dbg !8856
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  call void @llvm.dbg.value(metadata i32 1, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 0, metadata !8854, metadata !DIExpression()), !dbg !8856
  %0 = load i32, i32* %argc, align 8, !dbg !8857, !tbaa !1350
  %cmp11 = icmp sgt i32 %0, 1, !dbg !8860
  br i1 %cmp11, label %for.body.lr.ph, label %for.end, !dbg !8861

for.body.lr.ph:                                   ; preds = %entry
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !8861

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %deleted.012 = phi i32 [ 0, %for.body.lr.ph ], [ %deleted.1, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %deleted.012, metadata !8854, metadata !DIExpression()), !dbg !8856
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8862, !tbaa !2890
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8865, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 %indvars.iv, !dbg !8866
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8866, !tbaa !782
  %call = tail call i32 @deleteKey(%struct.redisDb* noundef %1, %struct.redisObject* noundef %3) #22, !dbg !8867
  %tobool.not = icmp eq i32 %call, 0, !dbg !8867
  br i1 %tobool.not, label %for.inc, label %if.then, !dbg !8868

if.then:                                          ; preds = %for.body
  %4 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !8869, !tbaa !708
  %inc = add nsw i64 %4, 1, !dbg !8869
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !8869, !tbaa !708
  %inc1 = add nsw i32 %deleted.012, 1, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %inc1, metadata !8854, metadata !DIExpression()), !dbg !8856
  br label %for.inc, !dbg !8872

for.inc:                                          ; preds = %for.body, %if.then
  %deleted.1 = phi i32 [ %inc1, %if.then ], [ %deleted.012, %for.body ], !dbg !8856
  call void @llvm.dbg.value(metadata i32 %deleted.1, metadata !8854, metadata !DIExpression()), !dbg !8856
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8873
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !8855, metadata !DIExpression()), !dbg !8856
  %5 = load i32, i32* %argc, align 8, !dbg !8857, !tbaa !1350
  %6 = sext i32 %5 to i64, !dbg !8860
  %cmp = icmp slt i64 %indvars.iv.next, %6, !dbg !8860
  br i1 %cmp, label %for.body, label %for.end, !dbg !8861, !llvm.loop !8874

for.end:                                          ; preds = %for.inc, %entry
  %deleted.0.lcssa = phi i32 [ 0, %entry ], [ %deleted.1, %for.inc ], !dbg !8856
  %conv = sext i32 %deleted.0.lcssa to i64, !dbg !8876
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %conv) #22, !dbg !8877
  ret void, !dbg !8878
}

; Function Attrs: noinline nounwind uwtable
define internal void @existsCommand(%struct.redisClient* noundef %c) #0 !dbg !8879 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8881, metadata !DIExpression()), !dbg !8882
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !8883
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8883, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8884
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8884, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !8885
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8885, !tbaa !782
  %call = tail call i32 @expireIfNeeded(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !8886
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8887, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 0, i32 0, !dbg !8889
  %4 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !8889, !tbaa !2353
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8890, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 1, !dbg !8891
  %6 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !8891
  %7 = load i8*, i8** %6, align 8, !dbg !8891, !tbaa !782
  %call4 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %4, i8* noundef %7) #23, !dbg !8892
  %tobool.not = icmp eq %struct.dictEntry* %call4, null, !dbg !8892
  %.val = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !8893
  %.val11 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !8893
  %8 = select i1 %tobool.not, %struct.redisObject* %.val, %struct.redisObject* %.val11, !dbg !8893
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !8893
  ret void, !dbg !8894
}

; Function Attrs: noinline nounwind uwtable
define internal void @incrCommand(%struct.redisClient* noundef %c) #0 !dbg !8895 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8897, metadata !DIExpression()), !dbg !8898
  tail call void @incrDecrCommand(%struct.redisClient* noundef %c, i64 noundef 1) #22, !dbg !8899
  ret void, !dbg !8900
}

; Function Attrs: noinline nounwind uwtable
define internal void @decrCommand(%struct.redisClient* noundef %c) #0 !dbg !8901 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8903, metadata !DIExpression()), !dbg !8904
  tail call void @incrDecrCommand(%struct.redisClient* noundef %c, i64 noundef -1) #22, !dbg !8905
  ret void, !dbg !8906
}

; Function Attrs: noinline nounwind uwtable
define internal void @mgetCommand(%struct.redisClient* noundef %c) #0 !dbg !8907 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8909, metadata !DIExpression()), !dbg !8915
  %call = tail call i8* (...) @sdsempty() #23, !dbg !8916
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !8917
  %0 = load i32, i32* %argc, align 8, !dbg !8917, !tbaa !1350
  %sub = add nsw i32 %0, -1, !dbg !8918
  %call1 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %sub) #23, !dbg !8919
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call1) #22, !dbg !8920
  call void @llvm.dbg.value(metadata i32 1, metadata !8910, metadata !DIExpression()), !dbg !8915
  %1 = load i32, i32* %argc, align 8, !dbg !8921, !tbaa !1350
  %cmp23 = icmp sgt i32 %1, 1, !dbg !8922
  br i1 %cmp23, label %for.body.lr.ph, label %for.end, !dbg !8923

for.body.lr.ph:                                   ; preds = %entry
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !8923

for.body:                                         ; preds = %for.body.lr.ph, %if.end9
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %if.end9 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8910, metadata !DIExpression()), !dbg !8915
  %2 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !8924, !tbaa !2890
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8925, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 %indvars.iv, !dbg !8926
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8926, !tbaa !782
  %call3 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %2, %struct.redisObject* noundef %4) #22, !dbg !8927
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !8911, metadata !DIExpression()), !dbg !8928
  %cmp4 = icmp eq %struct.redisObject* %call3, null, !dbg !8929
  br i1 %cmp4, label %if.then, label %if.else, !dbg !8931

if.then:                                          ; preds = %for.body
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !8932, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !8934
  br label %if.end9, !dbg !8935

if.else:                                          ; preds = %for.body
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call3, i64 0, i32 1, !dbg !8936
  %6 = load i8, i8* %type, align 8, !dbg !8936, !tbaa !1526
  %cmp5.not = icmp eq i8 %6, 0, !dbg !8939
  br i1 %cmp5.not, label %if.else8, label %if.then7, !dbg !8940

if.then7:                                         ; preds = %if.else
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !8941, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !8943
  br label %if.end9, !dbg !8944

if.else8:                                         ; preds = %if.else
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call3) #22, !dbg !8945
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.else8, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8947
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !8910, metadata !DIExpression()), !dbg !8915
  %8 = load i32, i32* %argc, align 8, !dbg !8921, !tbaa !1350
  %9 = sext i32 %8 to i64, !dbg !8922
  %cmp = icmp slt i64 %indvars.iv.next, %9, !dbg !8922
  br i1 %cmp, label %for.body, label %for.end, !dbg !8923, !llvm.loop !8948

for.end:                                          ; preds = %if.end9, %entry
  ret void, !dbg !8950
}

; Function Attrs: noinline nounwind uwtable
define internal void @rpushCommand(%struct.redisClient* noundef %c) #0 !dbg !8951 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8953, metadata !DIExpression()), !dbg !8954
  tail call void @pushGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !8955
  ret void, !dbg !8956
}

; Function Attrs: noinline nounwind uwtable
define internal void @lpushCommand(%struct.redisClient* noundef %c) #0 !dbg !8957 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8959, metadata !DIExpression()), !dbg !8960
  tail call void @pushGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: noinline nounwind uwtable
define internal void @rpopCommand(%struct.redisClient* noundef %c) #0 !dbg !8963 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8965, metadata !DIExpression()), !dbg !8966
  tail call void @popGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !8967
  ret void, !dbg !8968
}

; Function Attrs: noinline nounwind uwtable
define internal void @lpopCommand(%struct.redisClient* noundef %c) #0 !dbg !8969 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8971, metadata !DIExpression()), !dbg !8972
  tail call void @popGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !8973
  ret void, !dbg !8974
}

; Function Attrs: noinline nounwind uwtable
define internal void @brpopCommand(%struct.redisClient* noundef %c) #0 !dbg !8975 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8977, metadata !DIExpression()), !dbg !8978
  tail call void @blockingPopGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !8979
  ret void, !dbg !8980
}

; Function Attrs: noinline nounwind uwtable
define internal void @blpopCommand(%struct.redisClient* noundef %c) #0 !dbg !8981 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8983, metadata !DIExpression()), !dbg !8984
  tail call void @blockingPopGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: noinline nounwind uwtable
define internal void @llenCommand(%struct.redisClient* noundef %c) #0 !dbg !8987 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !8989, metadata !DIExpression()), !dbg !8992
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !8993
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !8993, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !8995
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !8995, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !8996, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !8997
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !8990, metadata !DIExpression()), !dbg !8992
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !8998
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !8999

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 1) #22, !dbg !9000
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9000
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9001

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !9002
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !9002, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !8991, metadata !DIExpression()), !dbg !8992
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !9003
  %5 = load i32, i32* %len, align 8, !dbg !9003, !tbaa !1358
  %conv = zext i32 %5 to i64, !dbg !9003
  tail call void @addReplyUlong(%struct.redisClient* noundef nonnull %c, i64 noundef %conv) #22, !dbg !9004
  br label %cleanup, !dbg !9005

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  ret void, !dbg !9005
}

; Function Attrs: noinline nounwind uwtable
define internal void @lindexCommand(%struct.redisClient* noundef %c) #0 !dbg !9006 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9008, metadata !DIExpression()), !dbg !9016
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9017
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9017, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9018
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9018, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !9019
  %2 = load i8*, i8** %ptr, align 8, !dbg !9019, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %call, metadata !9010, metadata !DIExpression()), !dbg !9016
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9021
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9021, !tbaa !782
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9023, !tbaa !8818
  %call3 = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, %struct.redisObject* noundef %4) #22, !dbg !9024
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !9009, metadata !DIExpression()), !dbg !9016
  %cmp = icmp eq %struct.redisObject* %call3, null, !dbg !9025
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9026

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call3, i32 noundef 1) #22, !dbg !9027
  %tobool.not = icmp eq i32 %call4, 0, !dbg !9027
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9028

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast %struct.redisObject* %call3 to %struct.list**, !dbg !9029
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !9029, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %6, metadata !9011, metadata !DIExpression()), !dbg !9016
  %call6 = tail call %struct.listNode* @listIndex(%struct.list* noundef %6, i32 noundef %call) #23, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.listNode* %call6, metadata !9012, metadata !DIExpression()), !dbg !9016
  %cmp7 = icmp eq %struct.listNode* %call6, null, !dbg !9031
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !9032

if.then8:                                         ; preds = %if.end
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9033, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !9035
  br label %cleanup, !dbg !9036

if.else:                                          ; preds = %if.end
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call6, i64 0, i32 2, !dbg !9037
  %8 = bitcast i8** %value to %struct.redisObject**, !dbg !9037
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !9037, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %9, metadata !9013, metadata !DIExpression()), !dbg !9038
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %9) #22, !dbg !9039
  br label %cleanup

cleanup:                                          ; preds = %if.then8, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !9040
}

; Function Attrs: noinline nounwind uwtable
define internal void @lsetCommand(%struct.redisClient* noundef %c) #0 !dbg !9041 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9043, metadata !DIExpression()), !dbg !9051
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9052
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9052, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9053
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9053, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !9054
  %2 = load i8*, i8** %ptr, align 8, !dbg !9054, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %call, metadata !9045, metadata !DIExpression()), !dbg !9051
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9056
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9056, !tbaa !782
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !9058, !tbaa !9059
  %call3 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, %struct.redisObject* noundef %4) #22, !dbg !9060
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !9044, metadata !DIExpression()), !dbg !9051
  %cmp = icmp eq %struct.redisObject* %call3, null, !dbg !9061
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9062

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call3, i32 noundef 1) #22, !dbg !9063
  %tobool.not = icmp eq i32 %call4, 0, !dbg !9063
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9064

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast %struct.redisObject* %call3 to %struct.list**, !dbg !9065
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !9065, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %6, metadata !9046, metadata !DIExpression()), !dbg !9051
  %call6 = tail call %struct.listNode* @listIndex(%struct.list* noundef %6, i32 noundef %call) #23, !dbg !9066
  call void @llvm.dbg.value(metadata %struct.listNode* %call6, metadata !9047, metadata !DIExpression()), !dbg !9051
  %cmp7 = icmp eq %struct.listNode* %call6, null, !dbg !9067
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !9068

if.then8:                                         ; preds = %if.end
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 17), align 8, !dbg !9069, !tbaa !9071
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !9072
  br label %cleanup, !dbg !9073

if.else:                                          ; preds = %if.end
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call6, i64 0, i32 2, !dbg !9074
  %8 = load i8*, i8** %value, align 8, !dbg !9074, !tbaa !891
  call void @llvm.dbg.value(metadata i8* %8, metadata !9048, metadata !DIExpression()), !dbg !9075
  tail call void @decrRefCount(i8* noundef %8) #22, !dbg !9076
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9077, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 3, !dbg !9078
  %10 = bitcast %struct.redisObject** %arrayidx10 to i8**, !dbg !9078
  %11 = load i8*, i8** %10, align 8, !dbg !9078, !tbaa !782
  store i8* %11, i8** %value, align 8, !dbg !9079, !tbaa !891
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx10, align 8, !dbg !9080, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %12) #22, !dbg !9081
  %13 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9082, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %13) #22, !dbg !9083
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9084, !tbaa !708
  %inc = add nsw i64 %14, 1, !dbg !9084
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9084, !tbaa !708
  br label %cleanup

cleanup:                                          ; preds = %if.then8, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !9085
}

; Function Attrs: noinline nounwind uwtable
define internal void @lrangeCommand(%struct.redisClient* noundef %c) #0 !dbg !9086 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9088, metadata !DIExpression()), !dbg !9098
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9099
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9099, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9100
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9100, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !9101
  %2 = load i8*, i8** %ptr, align 8, !dbg !9101, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %call, metadata !9090, metadata !DIExpression()), !dbg !9098
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 3, !dbg !9103
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9103, !tbaa !782
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !9104
  %4 = load i8*, i8** %ptr3, align 8, !dbg !9104, !tbaa !1328
  %call4 = tail call i32 @atoi(i8* noundef %4) #27, !dbg !9105
  call void @llvm.dbg.value(metadata i32 %call4, metadata !9091, metadata !DIExpression()), !dbg !9098
  %arrayidx6 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9106
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx6, align 8, !dbg !9106, !tbaa !782
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !9108, !tbaa !9109
  %call7 = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %5, %struct.redisObject* noundef %6) #22, !dbg !9110
  call void @llvm.dbg.value(metadata %struct.redisObject* %call7, metadata !9089, metadata !DIExpression()), !dbg !9098
  %cmp = icmp eq %struct.redisObject* %call7, null, !dbg !9111
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9112

lor.lhs.false:                                    ; preds = %entry
  %call8 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call7, i32 noundef 1) #22, !dbg !9113
  %tobool.not = icmp eq i32 %call8, 0, !dbg !9113
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9114

if.end:                                           ; preds = %lor.lhs.false
  %7 = bitcast %struct.redisObject* %call7 to %struct.list**, !dbg !9115
  %8 = load %struct.list*, %struct.list** %7, align 8, !dbg !9115, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %8, metadata !9095, metadata !DIExpression()), !dbg !9098
  %len = getelementptr inbounds %struct.list, %struct.list* %8, i64 0, i32 5, !dbg !9116
  %9 = load i32, i32* %len, align 8, !dbg !9116, !tbaa !1358
  call void @llvm.dbg.value(metadata i32 %9, metadata !9092, metadata !DIExpression()), !dbg !9098
  %cmp10 = icmp slt i32 %call, 0, !dbg !9117
  %add = select i1 %cmp10, i32 %9, i32 0, !dbg !9119
  %spec.select = add nsw i32 %add, %call, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9090, metadata !DIExpression()), !dbg !9098
  %cmp13 = icmp slt i32 %call4, 0, !dbg !9120
  %add15 = select i1 %cmp13, i32 %9, i32 0, !dbg !9122
  %end.0 = add nsw i32 %add15, %call4, !dbg !9122
  call void @llvm.dbg.value(metadata i32 %end.0, metadata !9091, metadata !DIExpression()), !dbg !9098
  %10 = icmp sgt i32 %spec.select, 0, !dbg !9123
  %spec.store.select = select i1 %10, i32 %spec.select, i32 0, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !9090, metadata !DIExpression()), !dbg !9098
  %cmp20 = icmp sle i32 %spec.store.select, %end.0, !dbg !9124
  %cmp22.not = icmp slt i32 %spec.store.select, %9
  %or.cond = select i1 %cmp20, i1 %cmp22.not, i1 false, !dbg !9126
  br i1 %or.cond, label %if.end24, label %if.then23, !dbg !9126

if.then23:                                        ; preds = %if.end
  %11 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !9127, !tbaa !9109
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %11) #22, !dbg !9129
  br label %cleanup, !dbg !9130

if.end24:                                         ; preds = %if.end
  %cmp25.not = icmp slt i32 %end.0, %9, !dbg !9131
  %sub = add nsw i32 %9, -1
  %spec.select77 = select i1 %cmp25.not, i32 %end.0, i32 %sub, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %spec.select77, metadata !9091, metadata !DIExpression()), !dbg !9098
  %sub28 = sub nsw i32 %spec.select77, %spec.store.select, !dbg !9134
  %add29 = add nsw i32 %sub28, 1, !dbg !9135
  call void @llvm.dbg.value(metadata i32 %add29, metadata !9093, metadata !DIExpression()), !dbg !9098
  %call30 = tail call %struct.listNode* @listIndex(%struct.list* noundef nonnull %8, i32 noundef %spec.store.select) #23, !dbg !9136
  call void @llvm.dbg.value(metadata %struct.listNode* %call30, metadata !9096, metadata !DIExpression()), !dbg !9098
  %call31 = tail call i8* (...) @sdsempty() #23, !dbg !9137
  %call32 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call31, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %add29) #23, !dbg !9138
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call32) #22, !dbg !9139
  call void @llvm.dbg.value(metadata i32 0, metadata !9094, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata %struct.listNode* %call30, metadata !9096, metadata !DIExpression()), !dbg !9098
  %cmp33.not78 = icmp slt i32 %sub28, 0, !dbg !9140
  br i1 %cmp33.not78, label %cleanup, label %for.body.preheader, !dbg !9143

for.body.preheader:                               ; preds = %if.end24
  %12 = add nsw i32 %spec.select77, 1, !dbg !9143
  %13 = sub i32 %12, %spec.store.select, !dbg !9143
  br label %for.body, !dbg !9143

for.body:                                         ; preds = %for.body.preheader, %for.body
  %ln.080 = phi %struct.listNode* [ %16, %for.body ], [ %call30, %for.body.preheader ]
  %j.079 = phi i32 [ %inc, %for.body ], [ 0, %for.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.listNode* %ln.080, metadata !9096, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata i32 %j.079, metadata !9094, metadata !DIExpression()), !dbg !9098
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.080, i64 0, i32 2, !dbg !9144
  %14 = bitcast i8** %value to %struct.redisObject**, !dbg !9144
  %15 = load %struct.redisObject*, %struct.redisObject** %14, align 8, !dbg !9144, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %15, metadata !9097, metadata !DIExpression()), !dbg !9098
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %15) #22, !dbg !9146
  %next = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.080, i64 0, i32 1, !dbg !9147
  %16 = load %struct.listNode*, %struct.listNode** %next, align 8, !dbg !9147, !tbaa !9148
  call void @llvm.dbg.value(metadata %struct.listNode* %16, metadata !9096, metadata !DIExpression()), !dbg !9098
  %inc = add nuw i32 %j.079, 1, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9094, metadata !DIExpression()), !dbg !9098
  %exitcond.not = icmp eq i32 %inc, %13, !dbg !9140
  br i1 %exitcond.not, label %cleanup, label %for.body, !dbg !9143, !llvm.loop !9150

cleanup:                                          ; preds = %for.body, %if.end24, %entry, %lor.lhs.false, %if.then23
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind uwtable
define internal void @ltrimCommand(%struct.redisClient* noundef %c) #0 !dbg !9153 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9155, metadata !DIExpression()), !dbg !9165
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9166
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9166, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9167
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9167, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !9168
  %2 = load i8*, i8** %ptr, align 8, !dbg !9168, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %call, metadata !9157, metadata !DIExpression()), !dbg !9165
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 3, !dbg !9170
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9170, !tbaa !782
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !9171
  %4 = load i8*, i8** %ptr3, align 8, !dbg !9171, !tbaa !1328
  %call4 = tail call i32 @atoi(i8* noundef %4) #27, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %call4, metadata !9158, metadata !DIExpression()), !dbg !9165
  %arrayidx6 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9173
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx6, align 8, !dbg !9173, !tbaa !782
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9175, !tbaa !3712
  %call7 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %5, %struct.redisObject* noundef %6) #22, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.redisObject* %call7, metadata !9156, metadata !DIExpression()), !dbg !9165
  %cmp = icmp eq %struct.redisObject* %call7, null, !dbg !9177
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9178

lor.lhs.false:                                    ; preds = %entry
  %call8 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call7, i32 noundef 1) #22, !dbg !9179
  %tobool.not = icmp eq i32 %call8, 0, !dbg !9179
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9180

if.end:                                           ; preds = %lor.lhs.false
  %7 = bitcast %struct.redisObject* %call7 to %struct.list**, !dbg !9181
  %8 = load %struct.list*, %struct.list** %7, align 8, !dbg !9181, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %8, metadata !9163, metadata !DIExpression()), !dbg !9165
  %len = getelementptr inbounds %struct.list, %struct.list* %8, i64 0, i32 5, !dbg !9182
  %9 = load i32, i32* %len, align 8, !dbg !9182, !tbaa !1358
  call void @llvm.dbg.value(metadata i32 %9, metadata !9159, metadata !DIExpression()), !dbg !9165
  %cmp10 = icmp slt i32 %call, 0, !dbg !9183
  %add = select i1 %cmp10, i32 %9, i32 0, !dbg !9185
  %spec.select = add nsw i32 %add, %call, !dbg !9185
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9157, metadata !DIExpression()), !dbg !9165
  %cmp13 = icmp slt i32 %call4, 0, !dbg !9186
  %add15 = select i1 %cmp13, i32 %9, i32 0, !dbg !9188
  %end.0 = add nsw i32 %add15, %call4, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %end.0, metadata !9158, metadata !DIExpression()), !dbg !9165
  %10 = icmp sgt i32 %spec.select, 0, !dbg !9189
  %spec.store.select = select i1 %10, i32 %spec.select, i32 0, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !9157, metadata !DIExpression()), !dbg !9165
  %cmp20 = icmp sle i32 %spec.store.select, %end.0, !dbg !9190
  %cmp22.not = icmp slt i32 %spec.store.select, %9
  %or.cond = select i1 %cmp20, i1 %cmp22.not, i1 false, !dbg !9192
  br i1 %or.cond, label %if.else, label %if.end29, !dbg !9192

if.else:                                          ; preds = %if.end
  %cmp24.not = icmp slt i32 %end.0, %9, !dbg !9193
  %sub = add nsw i32 %9, -1
  %spec.select94 = select i1 %cmp24.not, i32 %end.0, i32 %sub, !dbg !9196
  call void @llvm.dbg.value(metadata i32 %spec.select94, metadata !9158, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !9161, metadata !DIExpression()), !dbg !9165
  %11 = xor i32 %spec.select94, -1, !dbg !9197
  %sub28 = add i32 %9, %11, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %sub28, metadata !9162, metadata !DIExpression()), !dbg !9165
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.else
  %ltrim.0 = phi i32 [ %spec.store.select, %if.else ], [ %9, %if.end ], !dbg !9198
  %rtrim.0 = phi i32 [ %sub28, %if.else ], [ 0, %if.end ], !dbg !9198
  call void @llvm.dbg.value(metadata i32 %rtrim.0, metadata !9162, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32 %ltrim.0, metadata !9161, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9165
  %cmp3095 = icmp sgt i32 %ltrim.0, 0, !dbg !9199
  br i1 %cmp3095, label %for.body.lr.ph, label %for.cond31.preheader, !dbg !9202

for.body.lr.ph:                                   ; preds = %if.end29
  %head = getelementptr inbounds %struct.list, %struct.list* %8, i64 0, i32 0
  br label %for.body, !dbg !9202

for.cond31.preheader:                             ; preds = %for.body, %if.end29
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9165
  %cmp3297 = icmp sgt i32 %rtrim.0, 0, !dbg !9203
  br i1 %cmp3297, label %for.body33.lr.ph, label %for.end36, !dbg !9206

for.body33.lr.ph:                                 ; preds = %for.cond31.preheader
  %tail = getelementptr inbounds %struct.list, %struct.list* %8, i64 0, i32 1
  br label %for.body33, !dbg !9206

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %j.096 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  call void @llvm.dbg.value(metadata i32 %j.096, metadata !9160, metadata !DIExpression()), !dbg !9165
  %12 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !9207, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %12, metadata !9164, metadata !DIExpression()), !dbg !9165
  tail call void @listDelNode(%struct.list* noundef nonnull %8, %struct.listNode* noundef %12) #23, !dbg !9209
  %inc = add nuw nsw i32 %j.096, 1, !dbg !9210
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9160, metadata !DIExpression()), !dbg !9165
  %exitcond.not = icmp eq i32 %inc, %ltrim.0, !dbg !9199
  br i1 %exitcond.not, label %for.cond31.preheader, label %for.body, !dbg !9202, !llvm.loop !9211

for.body33:                                       ; preds = %for.body33.lr.ph, %for.body33
  %j.198 = phi i32 [ 0, %for.body33.lr.ph ], [ %inc35, %for.body33 ]
  call void @llvm.dbg.value(metadata i32 %j.198, metadata !9160, metadata !DIExpression()), !dbg !9165
  %13 = load %struct.listNode*, %struct.listNode** %tail, align 8, !dbg !9213, !tbaa !5878
  call void @llvm.dbg.value(metadata %struct.listNode* %13, metadata !9164, metadata !DIExpression()), !dbg !9165
  tail call void @listDelNode(%struct.list* noundef nonnull %8, %struct.listNode* noundef %13) #23, !dbg !9215
  %inc35 = add nuw nsw i32 %j.198, 1, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %inc35, metadata !9160, metadata !DIExpression()), !dbg !9165
  %exitcond99.not = icmp eq i32 %inc35, %rtrim.0, !dbg !9203
  br i1 %exitcond99.not, label %for.end36, label %for.body33, !dbg !9206, !llvm.loop !9217

for.end36:                                        ; preds = %for.body33, %for.cond31.preheader
  %14 = load i32, i32* %len, align 8, !dbg !9219, !tbaa !1358
  %cmp38 = icmp eq i32 %14, 0, !dbg !9221
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !9222

if.then39:                                        ; preds = %for.end36
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9223
  %15 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9223, !tbaa !2890
  %16 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9224, !tbaa !1352
  %arrayidx41 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %16, i64 1, !dbg !9225
  %17 = load %struct.redisObject*, %struct.redisObject** %arrayidx41, align 8, !dbg !9225, !tbaa !782
  %call42 = tail call i32 @deleteKey(%struct.redisDb* noundef %15, %struct.redisObject* noundef %17) #22, !dbg !9226
  br label %if.end43, !dbg !9226

if.end43:                                         ; preds = %if.then39, %for.end36
  %18 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9227, !tbaa !708
  %inc44 = add nsw i64 %18, 1, !dbg !9227
  store i64 %inc44, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9227, !tbaa !708
  %19 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9228, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %19) #22, !dbg !9229
  br label %cleanup, !dbg !9230

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end43
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind uwtable
define internal void @lremCommand(%struct.redisClient* noundef %c) #0 !dbg !9231 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9233, metadata !DIExpression()), !dbg !9243
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9244
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9244, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9245
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9245, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !9246
  %2 = load i8*, i8** %ptr, align 8, !dbg !9246, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !9247
  call void @llvm.dbg.value(metadata i32 %call, metadata !9238, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 0, metadata !9239, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 0, metadata !9240, metadata !DIExpression()), !dbg !9243
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9248
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9248, !tbaa !782
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9250, !tbaa !4181
  %call3 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, %struct.redisObject* noundef %4) #22, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !9234, metadata !DIExpression()), !dbg !9243
  %cmp = icmp eq %struct.redisObject* %call3, null, !dbg !9252
  br i1 %cmp, label %cleanup36, label %lor.lhs.false, !dbg !9253

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call3, i32 noundef 1) #22, !dbg !9254
  %tobool.not = icmp eq i32 %call4, 0, !dbg !9254
  br i1 %tobool.not, label %if.end, label %cleanup36, !dbg !9255

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast %struct.redisObject* %call3 to %struct.list**, !dbg !9256
  %6 = load %struct.list*, %struct.list** %5, align 8, !dbg !9256, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %6, metadata !9235, metadata !DIExpression()), !dbg !9243
  %cmp6 = icmp slt i32 %call, 0, !dbg !9257
  %sub = sub nsw i32 0, %call
  %spec.select = select i1 %cmp6, i32 %sub, i32 %call, !dbg !9259
  call void @llvm.dbg.value(metadata i32 undef, metadata !9240, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9238, metadata !DIExpression()), !dbg !9243
  %tail = getelementptr inbounds %struct.list, %struct.list* %6, i64 0, i32 1, !dbg !9260
  %head = getelementptr inbounds %struct.list, %struct.list* %6, i64 0, i32 0, !dbg !9260
  %cond.in = select i1 %cmp6, %struct.listNode** %tail, %struct.listNode** %head, !dbg !9260
  %cond = load %struct.listNode*, %struct.listNode** %cond.in, align 8, !dbg !9260, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.listNode* %cond, metadata !9236, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 0, metadata !9239, metadata !DIExpression()), !dbg !9243
  %tobool10.not78 = icmp eq %struct.listNode* %cond, null, !dbg !9261
  br i1 %tobool10.not78, label %while.end, label %while.body.lr.ph, !dbg !9261

while.body.lr.ph:                                 ; preds = %if.end
  %tobool23.not = icmp ne i32 %call, 0
  br label %while.body, !dbg !9261

while.body:                                       ; preds = %while.body.lr.ph, %cleanup
  %ln.080 = phi %struct.listNode* [ %cond, %while.body.lr.ph ], [ %cond16, %cleanup ]
  %removed.079 = phi i32 [ 0, %while.body.lr.ph ], [ %removed.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.listNode* %ln.080, metadata !9236, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %removed.079, metadata !9239, metadata !DIExpression()), !dbg !9243
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.080, i64 0, i32 2, !dbg !9262
  %7 = bitcast i8** %value to %struct.redisObject**, !dbg !9262
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !9262, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %8, metadata !9241, metadata !DIExpression()), !dbg !9263
  %prev = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.080, i64 0, i32 0, !dbg !9264
  %next14 = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.080, i64 0, i32 1, !dbg !9264
  %cond16.in = select i1 %cmp6, %struct.listNode** %prev, %struct.listNode** %next14, !dbg !9264
  %cond16 = load %struct.listNode*, %struct.listNode** %cond16.in, align 8, !dbg !9264, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.listNode* %cond16, metadata !9237, metadata !DIExpression()), !dbg !9243
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9265, !tbaa !1352
  %arrayidx18 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 3, !dbg !9267
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx18, align 8, !dbg !9267, !tbaa !782
  %call19 = tail call i32 @equalStringObjects(%struct.redisObject* noundef %8, %struct.redisObject* noundef %10) #22, !dbg !9268
  %tobool20.not = icmp eq i32 %call19, 0, !dbg !9268
  br i1 %tobool20.not, label %cleanup, label %if.then21, !dbg !9269

if.then21:                                        ; preds = %while.body
  tail call void @listDelNode(%struct.list* noundef %6, %struct.listNode* noundef nonnull %ln.080) #23, !dbg !9270
  %11 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9272, !tbaa !708
  %inc = add nsw i64 %11, 1, !dbg !9272
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9272, !tbaa !708
  %inc22 = add nsw i32 %removed.079, 1, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %inc22, metadata !9239, metadata !DIExpression()), !dbg !9243
  %cmp24 = icmp eq i32 %inc22, %spec.select
  %or.cond = select i1 %tobool23.not, i1 %cmp24, i1 false, !dbg !9274
  br i1 %or.cond, label %while.end, label %cleanup, !dbg !9274

cleanup:                                          ; preds = %while.body, %if.then21
  %removed.1 = phi i32 [ %inc22, %if.then21 ], [ %removed.079, %while.body ], !dbg !9243
  call void @llvm.dbg.value(metadata %struct.listNode* %cond16, metadata !9236, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %removed.1, metadata !9239, metadata !DIExpression()), !dbg !9243
  %tobool10.not = icmp eq %struct.listNode* %cond16, null, !dbg !9261
  br i1 %tobool10.not, label %while.end, label %while.body, !dbg !9261

while.end:                                        ; preds = %cleanup, %if.then21, %if.end
  %removed.3 = phi i32 [ 0, %if.end ], [ %spec.select, %if.then21 ], [ %removed.1, %cleanup ], !dbg !9243
  call void @llvm.dbg.value(metadata i32 %removed.3, metadata !9239, metadata !DIExpression()), !dbg !9243
  %len = getelementptr inbounds %struct.list, %struct.list* %6, i64 0, i32 5, !dbg !9276
  %12 = load i32, i32* %len, align 8, !dbg !9276, !tbaa !1358
  %cmp28 = icmp eq i32 %12, 0, !dbg !9278
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !9279

if.then29:                                        ; preds = %while.end
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9280
  %13 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9280, !tbaa !2890
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9281, !tbaa !1352
  %arrayidx31 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 1, !dbg !9282
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx31, align 8, !dbg !9282, !tbaa !782
  %call32 = tail call i32 @deleteKey(%struct.redisDb* noundef %13, %struct.redisObject* noundef %15) #22, !dbg !9283
  br label %if.end33, !dbg !9283

if.end33:                                         ; preds = %if.then29, %while.end
  %call34 = tail call i8* (...) @sdsempty() #23, !dbg !9284
  %call35 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call34, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i64 0, i64 0), i32 noundef %removed.3) #23, !dbg !9285
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call35) #22, !dbg !9286
  br label %cleanup36, !dbg !9287

cleanup36:                                        ; preds = %entry, %lor.lhs.false, %if.end33
  ret void, !dbg !9287
}

; Function Attrs: noinline nounwind uwtable
define internal void @rpoplpushcommand(%struct.redisClient* noundef %c) #0 !dbg !9288 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9290, metadata !DIExpression()), !dbg !9299
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9300
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9300, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9302
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9302, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9303, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9304
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9291, metadata !DIExpression()), !dbg !9299
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9305
  br i1 %cmp, label %cleanup42, label %lor.lhs.false, !dbg !9306

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 1) #22, !dbg !9307
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9307
  br i1 %tobool.not, label %if.end, label %cleanup42, !dbg !9308

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !9309
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !9309, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !9292, metadata !DIExpression()), !dbg !9299
  %tail = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 1, !dbg !9310
  %5 = load %struct.listNode*, %struct.listNode** %tail, align 8, !dbg !9310, !tbaa !5878
  call void @llvm.dbg.value(metadata %struct.listNode* %5, metadata !9293, metadata !DIExpression()), !dbg !9299
  %cmp2 = icmp eq %struct.listNode* %5, null, !dbg !9311
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9312

if.then3:                                         ; preds = %if.end
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9313, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !9315
  br label %cleanup42, !dbg !9316

if.else:                                          ; preds = %if.end
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9317
  %7 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9317, !tbaa !2890
  %8 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9318, !tbaa !1352
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %8, i64 2, !dbg !9319
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx5, align 8, !dbg !9319, !tbaa !782
  %call6 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %7, %struct.redisObject* noundef %9) #22, !dbg !9320
  call void @llvm.dbg.value(metadata %struct.redisObject* %call6, metadata !9294, metadata !DIExpression()), !dbg !9321
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %5, i64 0, i32 2, !dbg !9322
  %10 = load i8*, i8** %value, align 8, !dbg !9322, !tbaa !891
  %11 = bitcast i8* %10 to %struct.redisObject*, !dbg !9322
  call void @llvm.dbg.value(metadata %struct.redisObject* %11, metadata !9297, metadata !DIExpression()), !dbg !9321
  %tobool7.not = icmp eq %struct.redisObject* %call6, null, !dbg !9323
  br i1 %tobool7.not, label %if.end11, label %land.lhs.true, !dbg !9325

land.lhs.true:                                    ; preds = %if.else
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call6, i64 0, i32 1, !dbg !9326
  %12 = load i8, i8* %type, align 8, !dbg !9326, !tbaa !1526
  %cmp8.not = icmp eq i8 %12, 1, !dbg !9327
  br i1 %cmp8.not, label %if.end11, label %if.then10, !dbg !9328

if.then10:                                        ; preds = %land.lhs.true
  %13 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !9329, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %13) #22, !dbg !9331
  br label %cleanup42

if.end11:                                         ; preds = %land.lhs.true, %if.else
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9332, !tbaa !1352
  %arrayidx13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 2, !dbg !9334
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx13, align 8, !dbg !9334, !tbaa !782
  %call14 = tail call i32 @handleClientsWaitingListPush(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %15, %struct.redisObject* noundef %11) #22, !dbg !9335
  %tobool15.not = icmp eq i32 %call14, 0, !dbg !9335
  br i1 %tobool15.not, label %if.then16, label %if.end30, !dbg !9336

if.then16:                                        ; preds = %if.end11
  br i1 %tobool7.not, label %if.then19, label %if.end27, !dbg !9337

if.then19:                                        ; preds = %if.then16
  %call20 = tail call %struct.redisObject* @createListObject() #22, !dbg !9339
  call void @llvm.dbg.value(metadata %struct.redisObject* %call20, metadata !9294, metadata !DIExpression()), !dbg !9321
  %16 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9342, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %16, i64 0, i32 0, !dbg !9343
  %17 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9343, !tbaa !2353
  %18 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9344, !tbaa !1352
  %arrayidx23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %18, i64 2, !dbg !9345
  %19 = bitcast %struct.redisObject** %arrayidx23 to i8**, !dbg !9345
  %20 = load i8*, i8** %19, align 8, !dbg !9345, !tbaa !782
  %21 = bitcast %struct.redisObject* %call20 to i8*, !dbg !9346
  %call24 = tail call i32 @dictAdd(%struct.dict* noundef %17, i8* noundef %20, i8* noundef %21) #23, !dbg !9347
  %22 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9348, !tbaa !1352
  %arrayidx26 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 2, !dbg !9349
  %23 = load %struct.redisObject*, %struct.redisObject** %arrayidx26, align 8, !dbg !9349, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %23) #22, !dbg !9350
  br label %if.end27, !dbg !9351

if.end27:                                         ; preds = %if.then19, %if.then16
  %dobj.0 = phi %struct.redisObject* [ %call20, %if.then19 ], [ %call6, %if.then16 ], !dbg !9321
  call void @llvm.dbg.value(metadata %struct.redisObject* %dobj.0, metadata !9294, metadata !DIExpression()), !dbg !9321
  %24 = bitcast %struct.redisObject* %dobj.0 to %struct.list**, !dbg !9352
  %25 = load %struct.list*, %struct.list** %24, align 8, !dbg !9352, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %25, metadata !9298, metadata !DIExpression()), !dbg !9321
  %call29 = tail call %struct.list* @listAddNodeHead(%struct.list* noundef %25, i8* noundef %10) #23, !dbg !9353
  tail call void @incrRefCount(%struct.redisObject* noundef %11) #22, !dbg !9354
  br label %if.end30, !dbg !9355

if.end30:                                         ; preds = %if.end27, %if.end11
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %11) #22, !dbg !9356
  tail call void @listDelNode(%struct.list* noundef nonnull %4, %struct.listNode* noundef nonnull %5) #23, !dbg !9357
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !9358
  %26 = load i32, i32* %len, align 8, !dbg !9358, !tbaa !1358
  %cmp31 = icmp eq i32 %26, 0, !dbg !9360
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !9361

if.then33:                                        ; preds = %if.end30
  %27 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9362, !tbaa !2890
  %28 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9363, !tbaa !1352
  %arrayidx36 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %28, i64 1, !dbg !9364
  %29 = load %struct.redisObject*, %struct.redisObject** %arrayidx36, align 8, !dbg !9364, !tbaa !782
  %call37 = tail call i32 @deleteKey(%struct.redisDb* noundef %27, %struct.redisObject* noundef %29) #22, !dbg !9365
  br label %if.end38, !dbg !9365

if.end38:                                         ; preds = %if.then33, %if.end30
  %30 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9366, !tbaa !708
  %inc = add nsw i64 %30, 1, !dbg !9366
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9366, !tbaa !708
  br label %cleanup42

cleanup42:                                        ; preds = %if.then3, %if.end38, %if.then10, %entry, %lor.lhs.false
  ret void, !dbg !9367
}

; Function Attrs: noinline nounwind uwtable
define internal void @saddCommand(%struct.redisClient* noundef %c) #0 !dbg !9368 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9370, metadata !DIExpression()), !dbg !9372
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9373
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9373, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9374
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9374, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !9375
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9375, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !9376
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9371, metadata !DIExpression()), !dbg !9372
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9377
  br i1 %cmp, label %if.then, label %if.else, !dbg !9379

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.redisObject* @createSetObject() #22, !dbg !9380
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !9371, metadata !DIExpression()), !dbg !9372
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9382, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 0, i32 0, !dbg !9383
  %4 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9383, !tbaa !2353
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9384, !tbaa !1352
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 1, !dbg !9385
  %6 = bitcast %struct.redisObject** %arrayidx4 to i8**, !dbg !9385
  %7 = load i8*, i8** %6, align 8, !dbg !9385, !tbaa !782
  %8 = bitcast %struct.redisObject* %call1 to i8*, !dbg !9386
  %call5 = tail call i32 @dictAdd(%struct.dict* noundef %4, i8* noundef %7, i8* noundef %8) #23, !dbg !9387
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9388, !tbaa !1352
  %arrayidx7 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 1, !dbg !9389
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx7, align 8, !dbg !9389, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %10) #22, !dbg !9390
  br label %if.end11, !dbg !9391

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !9392
  %11 = load i8, i8* %type, align 8, !dbg !9392, !tbaa !1526
  %cmp8.not = icmp eq i8 %11, 2, !dbg !9395
  br i1 %cmp8.not, label %if.end11, label %cleanup, !dbg !9396

if.end11:                                         ; preds = %if.else, %if.then
  %set.0 = phi %struct.redisObject* [ %call1, %if.then ], [ %call, %if.else ], !dbg !9372
  call void @llvm.dbg.value(metadata %struct.redisObject* %set.0, metadata !9371, metadata !DIExpression()), !dbg !9372
  %12 = bitcast %struct.redisObject* %set.0 to %struct.dict**, !dbg !9397
  %13 = load %struct.dict*, %struct.dict** %12, align 8, !dbg !9397, !tbaa !1328
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9399, !tbaa !1352
  %arrayidx13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 2, !dbg !9400
  %15 = bitcast %struct.redisObject** %arrayidx13 to i8**, !dbg !9400
  %16 = load i8*, i8** %15, align 8, !dbg !9400, !tbaa !782
  %call14 = tail call i32 @dictAdd(%struct.dict* noundef %13, i8* noundef %16, i8* noundef null) #23, !dbg !9401
  %cmp15 = icmp eq i32 %call14, 0, !dbg !9402
  br i1 %cmp15, label %if.then17, label %cleanup, !dbg !9403

if.then17:                                        ; preds = %if.end11
  %17 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9404, !tbaa !1352
  %arrayidx19 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 2, !dbg !9406
  %18 = load %struct.redisObject*, %struct.redisObject** %arrayidx19, align 8, !dbg !9406, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %18) #22, !dbg !9407
  %19 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9408, !tbaa !708
  %inc = add nsw i64 %19, 1, !dbg !9408
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9408, !tbaa !708
  br label %cleanup, !dbg !9409

cleanup:                                          ; preds = %if.end11, %if.else, %if.then17
  %.sink35 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), %if.then17 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), %if.else ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), %if.end11 ]
  %20 = load %struct.redisObject*, %struct.redisObject** %.sink35, align 8, !dbg !9372, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %20) #22, !dbg !9372
  ret void, !dbg !9410
}

; Function Attrs: noinline nounwind uwtable
define internal void @sremCommand(%struct.redisClient* noundef %c) #0 !dbg !9411 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9413, metadata !DIExpression()), !dbg !9415
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9416
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9416, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9418
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9418, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9419, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9420
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9414, metadata !DIExpression()), !dbg !9415
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9421
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9422

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 2) #22, !dbg !9423
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9423
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9424

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9425
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9425, !tbaa !1328
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9427, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 2, !dbg !9428
  %6 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !9428
  %7 = load i8*, i8** %6, align 8, !dbg !9428, !tbaa !782
  %call4 = tail call i32 @dictDelete(%struct.dict* noundef %4, i8* noundef %7) #23, !dbg !9429
  %cmp5 = icmp eq i32 %call4, 0, !dbg !9430
  br i1 %cmp5, label %if.then6, label %cleanup.sink.split, !dbg !9431

if.then6:                                         ; preds = %if.end
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9432, !tbaa !708
  %inc = add nsw i64 %8, 1, !dbg !9432
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9432, !tbaa !708
  %9 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9434, !tbaa !1328
  %call8 = tail call i32 @htNeedsResize(%struct.dict* noundef %9) #22, !dbg !9436
  %tobool9.not = icmp eq i32 %call8, 0, !dbg !9436
  br i1 %tobool9.not, label %if.end13, label %if.then10, !dbg !9437

if.then10:                                        ; preds = %if.then6
  %call12 = tail call i32 @dictResize(%struct.dict* noundef %9) #23, !dbg !9438
  %.pre = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9439, !tbaa !1328
  br label %if.end13, !dbg !9438

if.end13:                                         ; preds = %if.then10, %if.then6
  %10 = phi %struct.dict* [ %.pre, %if.then10 ], [ %9, %if.then6 ], !dbg !9439
  %used = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 0, i32 3, !dbg !9439
  %11 = load i64, i64* %used, align 8, !dbg !9439, !tbaa !3545
  %used19 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 1, i32 3, !dbg !9439
  %12 = load i64, i64* %used19, align 8, !dbg !9439, !tbaa !3545
  %add = sub i64 0, %12, !dbg !9441
  %cmp20 = icmp eq i64 %11, %add, !dbg !9441
  br i1 %cmp20, label %if.then21, label %cleanup.sink.split, !dbg !9442

if.then21:                                        ; preds = %if.end13
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9443
  %13 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9443, !tbaa !2890
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9444, !tbaa !1352
  %arrayidx23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 1, !dbg !9445
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx23, align 8, !dbg !9445, !tbaa !782
  %call24 = tail call i32 @deleteKey(%struct.redisDb* noundef %13, %struct.redisObject* noundef %15) #22, !dbg !9446
  br label %cleanup.sink.split, !dbg !9446

cleanup.sink.split:                               ; preds = %if.end, %if.end13, %if.then21
  %.sink40 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), %if.then21 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), %if.end13 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), %if.end ]
  %16 = load %struct.redisObject*, %struct.redisObject** %.sink40, align 8, !dbg !9447, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %16) #22, !dbg !9447
  br label %cleanup, !dbg !9448

cleanup:                                          ; preds = %cleanup.sink.split, %entry, %lor.lhs.false
  ret void, !dbg !9448
}

; Function Attrs: noinline nounwind uwtable
define internal void @smoveCommand(%struct.redisClient* noundef %c) #0 !dbg !9449 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9451, metadata !DIExpression()), !dbg !9454
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9455
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9455, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9456
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9456, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !9457
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9457, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !9458
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9452, metadata !DIExpression()), !dbg !9454
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9459, !tbaa !2890
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9460, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !9461
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !9461, !tbaa !782
  %call4 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %3, %struct.redisObject* noundef %5) #22, !dbg !9462
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !9453, metadata !DIExpression()), !dbg !9454
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9463
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9465

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !9466
  %6 = load i8, i8* %type, align 8, !dbg !9466, !tbaa !1526
  %cmp5.not = icmp eq i8 %6, 2, !dbg !9467
  br i1 %cmp5.not, label %if.end, label %if.then, !dbg !9468

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !9469
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9469
  %cond = select i1 %cmp, %struct.redisObject* %8, %struct.redisObject* %7, !dbg !9469
  br label %cleanup, !dbg !9471

if.end:                                           ; preds = %lor.lhs.false
  %tobool7.not = icmp eq %struct.redisObject* %call4, null, !dbg !9472
  br i1 %tobool7.not, label %if.end13, label %land.lhs.true, !dbg !9474

land.lhs.true:                                    ; preds = %if.end
  %type8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call4, i64 0, i32 1, !dbg !9475
  %9 = load i8, i8* %type8, align 8, !dbg !9475, !tbaa !1526
  %cmp10.not = icmp eq i8 %9, 2, !dbg !9476
  br i1 %cmp10.not, label %if.end13, label %if.then12, !dbg !9477

if.then12:                                        ; preds = %land.lhs.true
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !9478, !tbaa !8791
  br label %cleanup, !dbg !9480

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %11 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9481
  %12 = load %struct.dict*, %struct.dict** %11, align 8, !dbg !9481, !tbaa !1328
  %13 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9483, !tbaa !1352
  %arrayidx15 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %13, i64 3, !dbg !9484
  %14 = bitcast %struct.redisObject** %arrayidx15 to i8**, !dbg !9484
  %15 = load i8*, i8** %14, align 8, !dbg !9484, !tbaa !782
  %call16 = tail call i32 @dictDelete(%struct.dict* noundef %12, i8* noundef %15) #23, !dbg !9485
  %cmp17 = icmp eq i32 %call16, 1, !dbg !9486
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9487

if.then19:                                        ; preds = %if.end13
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9488, !tbaa !4181
  br label %cleanup, !dbg !9490

if.end20:                                         ; preds = %if.end13
  %17 = load %struct.dict*, %struct.dict** %11, align 8, !dbg !9491, !tbaa !1328
  %used = getelementptr inbounds %struct.dict, %struct.dict* %17, i64 0, i32 2, i64 0, i32 3, !dbg !9491
  %18 = load i64, i64* %used, align 8, !dbg !9491, !tbaa !3545
  %used26 = getelementptr inbounds %struct.dict, %struct.dict* %17, i64 0, i32 2, i64 1, i32 3, !dbg !9491
  %19 = load i64, i64* %used26, align 8, !dbg !9491, !tbaa !3545
  %add = sub i64 0, %19, !dbg !9493
  %cmp27 = icmp ne i64 %18, %add, !dbg !9493
  %cmp30.not = icmp eq %struct.redisObject* %call, %call4
  %or.cond = select i1 %cmp27, i1 true, i1 %cmp30.not, !dbg !9494
  br i1 %or.cond, label %if.end37, label %if.then32, !dbg !9494

if.then32:                                        ; preds = %if.end20
  %20 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9495, !tbaa !2890
  %21 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9496, !tbaa !1352
  %arrayidx35 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 1, !dbg !9497
  %22 = load %struct.redisObject*, %struct.redisObject** %arrayidx35, align 8, !dbg !9497, !tbaa !782
  %call36 = tail call i32 @deleteKey(%struct.redisDb* noundef %20, %struct.redisObject* noundef %22) #22, !dbg !9498
  br label %if.end37, !dbg !9498

if.end37:                                         ; preds = %if.then32, %if.end20
  %23 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9499, !tbaa !708
  %inc = add nsw i64 %23, 1, !dbg !9499
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9499, !tbaa !708
  br i1 %tobool7.not, label %if.then39, label %if.end47, !dbg !9500

if.then39:                                        ; preds = %if.end37
  %call40 = tail call %struct.redisObject* @createSetObject() #22, !dbg !9501
  call void @llvm.dbg.value(metadata %struct.redisObject* %call40, metadata !9453, metadata !DIExpression()), !dbg !9454
  %24 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9504, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %24, i64 0, i32 0, !dbg !9505
  %25 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9505, !tbaa !2353
  %26 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9506, !tbaa !1352
  %arrayidx43 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 2, !dbg !9507
  %27 = bitcast %struct.redisObject** %arrayidx43 to i8**, !dbg !9507
  %28 = load i8*, i8** %27, align 8, !dbg !9507, !tbaa !782
  %29 = bitcast %struct.redisObject* %call40 to i8*, !dbg !9508
  %call44 = tail call i32 @dictAdd(%struct.dict* noundef %25, i8* noundef %28, i8* noundef %29) #23, !dbg !9509
  %30 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9510, !tbaa !1352
  %arrayidx46 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %30, i64 2, !dbg !9511
  %31 = load %struct.redisObject*, %struct.redisObject** %arrayidx46, align 8, !dbg !9511, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %31) #22, !dbg !9512
  br label %if.end47, !dbg !9513

if.end47:                                         ; preds = %if.then39, %if.end37
  %dstset.0 = phi %struct.redisObject* [ %call4, %if.end37 ], [ %call40, %if.then39 ], !dbg !9454
  call void @llvm.dbg.value(metadata %struct.redisObject* %dstset.0, metadata !9453, metadata !DIExpression()), !dbg !9454
  %32 = bitcast %struct.redisObject* %dstset.0 to %struct.dict**, !dbg !9514
  %33 = load %struct.dict*, %struct.dict** %32, align 8, !dbg !9514, !tbaa !1328
  %34 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9516, !tbaa !1352
  %arrayidx50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %34, i64 3, !dbg !9517
  %35 = bitcast %struct.redisObject** %arrayidx50 to i8**, !dbg !9517
  %36 = load i8*, i8** %35, align 8, !dbg !9517, !tbaa !782
  %call51 = tail call i32 @dictAdd(%struct.dict* noundef %33, i8* noundef %36, i8* noundef null) #23, !dbg !9518
  %cmp52 = icmp eq i32 %call51, 0, !dbg !9519
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !9520

if.then54:                                        ; preds = %if.end47
  %37 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9521, !tbaa !1352
  %arrayidx56 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %37, i64 3, !dbg !9522
  %38 = load %struct.redisObject*, %struct.redisObject** %arrayidx56, align 8, !dbg !9522, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %38) #22, !dbg !9523
  br label %if.end57, !dbg !9523

if.end57:                                         ; preds = %if.then54, %if.end47
  %39 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !9524, !tbaa !4187
  br label %cleanup, !dbg !9525

cleanup:                                          ; preds = %if.end57, %if.then19, %if.then12, %if.then
  %.sink = phi %struct.redisObject* [ %39, %if.end57 ], [ %16, %if.then19 ], [ %10, %if.then12 ], [ %cond, %if.then ]
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %.sink) #22, !dbg !9454
  ret void, !dbg !9525
}

; Function Attrs: noinline nounwind uwtable
define internal void @sismemberCommand(%struct.redisClient* noundef %c) #0 !dbg !9526 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9528, metadata !DIExpression()), !dbg !9530
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9531
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9531, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9533
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9533, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9534, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9535
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9529, metadata !DIExpression()), !dbg !9530
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9536
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9537

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 2) #22, !dbg !9538
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9538
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9539

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9540
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9540, !tbaa !1328
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9542, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %5, i64 2, !dbg !9543
  %6 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !9543
  %7 = load i8*, i8** %6, align 8, !dbg !9543, !tbaa !782
  %call4 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %4, i8* noundef %7) #23, !dbg !9544
  %tobool5.not = icmp eq %struct.dictEntry* %call4, null, !dbg !9544
  %.val = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9545
  %.val16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !9545
  %8 = select i1 %tobool5.not, %struct.redisObject* %.val, %struct.redisObject* %.val16, !dbg !9545
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !9545
  br label %cleanup, !dbg !9546

cleanup:                                          ; preds = %if.end, %entry, %lor.lhs.false
  ret void, !dbg !9546
}

; Function Attrs: noinline nounwind uwtable
define internal void @scardCommand(%struct.redisClient* noundef %c) #0 !dbg !9547 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9549, metadata !DIExpression()), !dbg !9552
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9553
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9553, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9555
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9555, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9556, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9557
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9550, metadata !DIExpression()), !dbg !9552
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9558
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9559

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 2) #22, !dbg !9560
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9560
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9561

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9562
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9562, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.dict* %4, metadata !9551, metadata !DIExpression()), !dbg !9552
  %used = getelementptr inbounds %struct.dict, %struct.dict* %4, i64 0, i32 2, i64 0, i32 3, !dbg !9563
  %5 = load i64, i64* %used, align 8, !dbg !9563, !tbaa !3545
  %used5 = getelementptr inbounds %struct.dict, %struct.dict* %4, i64 0, i32 2, i64 1, i32 3, !dbg !9563
  %6 = load i64, i64* %used5, align 8, !dbg !9563, !tbaa !3545
  %add = add i64 %6, %5, !dbg !9563
  tail call void @addReplyUlong(%struct.redisClient* noundef nonnull %c, i64 noundef %add) #22, !dbg !9564
  br label %cleanup, !dbg !9565

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  ret void, !dbg !9565
}

; Function Attrs: noinline nounwind uwtable
define internal void @spopCommand(%struct.redisClient* noundef %c) #0 !dbg !9566 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9568, metadata !DIExpression()), !dbg !9574
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9575
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9575, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9577
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9577, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9578, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9579
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9569, metadata !DIExpression()), !dbg !9574
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9580
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9581

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 2) #22, !dbg !9582
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9582
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9583

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9584
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9584, !tbaa !1328
  %call2 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %4) #23, !dbg !9585
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call2, metadata !9570, metadata !DIExpression()), !dbg !9574
  %cmp3 = icmp eq %struct.dictEntry* %call2, null, !dbg !9586
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9587

if.then4:                                         ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9588, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !9590
  br label %cleanup, !dbg !9591

if.else:                                          ; preds = %if.end
  %key = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call2, i64 0, i32 0, !dbg !9592
  %6 = load i8*, i8** %key, align 8, !dbg !9592, !tbaa !2455
  %7 = bitcast i8* %6 to %struct.redisObject*, !dbg !9592
  call void @llvm.dbg.value(metadata %struct.redisObject* %7, metadata !9571, metadata !DIExpression()), !dbg !9593
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !9594
  %8 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9595, !tbaa !1328
  %call6 = tail call i32 @dictDelete(%struct.dict* noundef %8, i8* noundef %6) #23, !dbg !9596
  %9 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9597, !tbaa !1328
  %call8 = tail call i32 @htNeedsResize(%struct.dict* noundef %9) #22, !dbg !9599
  %tobool9.not = icmp eq i32 %call8, 0, !dbg !9599
  br i1 %tobool9.not, label %if.end13, label %if.then10, !dbg !9600

if.then10:                                        ; preds = %if.else
  %call12 = tail call i32 @dictResize(%struct.dict* noundef %9) #23, !dbg !9601
  %.pre = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9602, !tbaa !1328
  br label %if.end13, !dbg !9601

if.end13:                                         ; preds = %if.then10, %if.else
  %10 = phi %struct.dict* [ %.pre, %if.then10 ], [ %9, %if.else ], !dbg !9602
  %used = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 0, i32 3, !dbg !9602
  %11 = load i64, i64* %used, align 8, !dbg !9602, !tbaa !3545
  %used19 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 1, i32 3, !dbg !9602
  %12 = load i64, i64* %used19, align 8, !dbg !9602, !tbaa !3545
  %add = sub i64 0, %12, !dbg !9604
  %cmp20 = icmp eq i64 %11, %add, !dbg !9604
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !9605

if.then21:                                        ; preds = %if.end13
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9606
  %13 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9606, !tbaa !2890
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9607, !tbaa !1352
  %arrayidx23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 1, !dbg !9608
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx23, align 8, !dbg !9608, !tbaa !782
  %call24 = tail call i32 @deleteKey(%struct.redisDb* noundef %13, %struct.redisObject* noundef %15) #22, !dbg !9609
  br label %if.end25, !dbg !9609

if.end25:                                         ; preds = %if.then21, %if.end13
  %16 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9610, !tbaa !708
  %inc = add nsw i64 %16, 1, !dbg !9610
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9610, !tbaa !708
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end25, %entry, %lor.lhs.false
  ret void, !dbg !9611
}

; Function Attrs: noinline nounwind uwtable
define internal void @srandmemberCommand(%struct.redisClient* noundef %c) #0 !dbg !9612 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9614, metadata !DIExpression()), !dbg !9620
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9621
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9621, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9623
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9623, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9624, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9625
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9615, metadata !DIExpression()), !dbg !9620
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9626
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9627

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 2) #22, !dbg !9628
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9628
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9629

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !9630
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !9630, !tbaa !1328
  %call2 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %4) #23, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call2, metadata !9616, metadata !DIExpression()), !dbg !9620
  %cmp3 = icmp eq %struct.dictEntry* %call2, null, !dbg !9632
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9633

if.then4:                                         ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !9634, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !9636
  br label %cleanup, !dbg !9637

if.else:                                          ; preds = %if.end
  %6 = bitcast %struct.dictEntry* %call2 to %struct.redisObject**, !dbg !9638
  %7 = load %struct.redisObject*, %struct.redisObject** %6, align 8, !dbg !9638, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %7, metadata !9617, metadata !DIExpression()), !dbg !9639
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !9640
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !9641
}

; Function Attrs: noinline nounwind uwtable
define internal void @sinterCommand(%struct.redisClient* noundef %c) #0 !dbg !9642 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9644, metadata !DIExpression()), !dbg !9645
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9646
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9646, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9647
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9648
  %1 = load i32, i32* %argc, align 8, !dbg !9648, !tbaa !1350
  %sub = add nsw i32 %1, -1, !dbg !9649
  %conv = sext i32 %sub to i64, !dbg !9650
  tail call void @sinterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i64 noundef %conv, %struct.redisObject* noundef null) #22, !dbg !9651
  ret void, !dbg !9652
}

; Function Attrs: noinline nounwind uwtable
define internal void @sinterstoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9653 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9655, metadata !DIExpression()), !dbg !9656
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9657
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9657, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9658
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9659
  %1 = load i32, i32* %argc, align 8, !dbg !9659, !tbaa !1350
  %sub = add nsw i32 %1, -2, !dbg !9660
  %conv = sext i32 %sub to i64, !dbg !9661
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9662
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9662, !tbaa !782
  tail call void @sinterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i64 noundef %conv, %struct.redisObject* noundef %2) #22, !dbg !9663
  ret void, !dbg !9664
}

; Function Attrs: noinline nounwind uwtable
define internal void @sunionCommand(%struct.redisClient* noundef %c) #0 !dbg !9665 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9667, metadata !DIExpression()), !dbg !9668
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9669
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9669, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9670
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9671
  %1 = load i32, i32* %argc, align 8, !dbg !9671, !tbaa !1350
  %sub = add nsw i32 %1, -1, !dbg !9672
  tail call void @sunionDiffGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i32 noundef %sub, %struct.redisObject* noundef null, i32 noundef 0) #22, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: noinline nounwind uwtable
define internal void @sunionstoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9675 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9677, metadata !DIExpression()), !dbg !9678
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9679
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9679, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9680
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9681
  %1 = load i32, i32* %argc, align 8, !dbg !9681, !tbaa !1350
  %sub = add nsw i32 %1, -2, !dbg !9682
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9683
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9683, !tbaa !782
  tail call void @sunionDiffGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i32 noundef %sub, %struct.redisObject* noundef %2, i32 noundef 0) #22, !dbg !9684
  ret void, !dbg !9685
}

; Function Attrs: noinline nounwind uwtable
define internal void @sdiffCommand(%struct.redisClient* noundef %c) #0 !dbg !9686 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9688, metadata !DIExpression()), !dbg !9689
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9690
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9690, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9691
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9692
  %1 = load i32, i32* %argc, align 8, !dbg !9692, !tbaa !1350
  %sub = add nsw i32 %1, -1, !dbg !9693
  tail call void @sunionDiffGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i32 noundef %sub, %struct.redisObject* noundef null, i32 noundef 1) #22, !dbg !9694
  ret void, !dbg !9695
}

; Function Attrs: noinline nounwind uwtable
define internal void @sdiffstoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9696 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9698, metadata !DIExpression()), !dbg !9699
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9700
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9700, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !9701
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !9702
  %1 = load i32, i32* %argc, align 8, !dbg !9702, !tbaa !1350
  %sub = add nsw i32 %1, -2, !dbg !9703
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9704
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9704, !tbaa !782
  tail call void @sunionDiffGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** noundef nonnull %add.ptr, i32 noundef %sub, %struct.redisObject* noundef %2, i32 noundef 1) #22, !dbg !9705
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind uwtable
define internal void @zaddCommand(%struct.redisClient* noundef %c) #0 !dbg !9707 {
entry:
  %scoreval = alloca double, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9709, metadata !DIExpression()), !dbg !9711
  %0 = bitcast double* %scoreval to i8*, !dbg !9712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9712
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9713
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9713, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 2, !dbg !9715
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9715, !tbaa !782
  call void @llvm.dbg.value(metadata double* %scoreval, metadata !9710, metadata !DIExpression(DW_OP_deref)), !dbg !9711
  %call = call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2, double* noundef nonnull %scoreval, i8* noundef null) #22, !dbg !9716
  %cmp.not = icmp eq i32 %call, 0, !dbg !9717
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !9718

if.end:                                           ; preds = %entry
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9719, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 1, !dbg !9720
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9720, !tbaa !782
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 3, !dbg !9721
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx4, align 8, !dbg !9721, !tbaa !782
  %6 = load double, double* %scoreval, align 8, !dbg !9722, !tbaa !6140
  call void @llvm.dbg.value(metadata double %6, metadata !9710, metadata !DIExpression()), !dbg !9711
  tail call void @zaddGenericCommand(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4, %struct.redisObject* noundef %5, double noundef %6, i32 noundef 0) #22, !dbg !9723
  br label %cleanup, !dbg !9724

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9724
  ret void, !dbg !9724
}

; Function Attrs: noinline nounwind uwtable
define internal void @zincrbyCommand(%struct.redisClient* noundef %c) #0 !dbg !9725 {
entry:
  %scoreval = alloca double, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9727, metadata !DIExpression()), !dbg !9729
  %0 = bitcast double* %scoreval to i8*, !dbg !9730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9730
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9731
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9731, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 2, !dbg !9733
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9733, !tbaa !782
  call void @llvm.dbg.value(metadata double* %scoreval, metadata !9728, metadata !DIExpression(DW_OP_deref)), !dbg !9729
  %call = call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2, double* noundef nonnull %scoreval, i8* noundef null) #22, !dbg !9734
  %cmp.not = icmp eq i32 %call, 0, !dbg !9735
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !9736

if.end:                                           ; preds = %entry
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9737, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 1, !dbg !9738
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9738, !tbaa !782
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 3, !dbg !9739
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx4, align 8, !dbg !9739, !tbaa !782
  %6 = load double, double* %scoreval, align 8, !dbg !9740, !tbaa !6140
  call void @llvm.dbg.value(metadata double %6, metadata !9728, metadata !DIExpression()), !dbg !9729
  tail call void @zaddGenericCommand(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4, %struct.redisObject* noundef %5, double noundef %6, i32 noundef 1) #22, !dbg !9741
  br label %cleanup, !dbg !9742

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9742
  ret void, !dbg !9742
}

; Function Attrs: noinline nounwind uwtable
define internal void @zremCommand(%struct.redisClient* noundef %c) #0 !dbg !9743 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9745, metadata !DIExpression()), !dbg !9751
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9752
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9752, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9754
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9754, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9755, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !9756
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9746, metadata !DIExpression()), !dbg !9751
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !9757
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9758

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 3) #22, !dbg !9759
  %tobool.not = icmp eq i32 %call1, 0, !dbg !9759
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !9760

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !9761
  %4 = load %struct.zset*, %struct.zset** %3, align 8, !dbg !9761, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %4, metadata !9747, metadata !DIExpression()), !dbg !9751
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 0, !dbg !9762
  %5 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9762, !tbaa !6133
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9763, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 2, !dbg !9764
  %7 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !9764
  %8 = load i8*, i8** %7, align 8, !dbg !9764, !tbaa !782
  %call4 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %5, i8* noundef %8) #23, !dbg !9765
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call4, metadata !9748, metadata !DIExpression()), !dbg !9751
  %cmp5 = icmp eq %struct.dictEntry* %call4, null, !dbg !9766
  br i1 %cmp5, label %cleanup.sink.split, label %if.end7, !dbg !9768

if.end7:                                          ; preds = %if.end
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call4, i64 0, i32 1, !dbg !9769
  %9 = bitcast i8** %val to double**, !dbg !9769
  %10 = load double*, double** %9, align 8, !dbg !9769, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %10, metadata !9749, metadata !DIExpression()), !dbg !9751
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 1, !dbg !9770
  %11 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !9770, !tbaa !6138
  %12 = load double, double* %10, align 8, !dbg !9771, !tbaa !6140
  %13 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9772, !tbaa !1352
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %13, i64 2, !dbg !9773
  %14 = load %struct.redisObject*, %struct.redisObject** %arrayidx9, align 8, !dbg !9773, !tbaa !782
  %call10 = tail call i32 @zslDelete(%struct.zskiplist* noundef %11, double noundef %12, %struct.redisObject* noundef %14) #22, !dbg !9774
  call void @llvm.dbg.value(metadata i32 %call10, metadata !9750, metadata !DIExpression()), !dbg !9751
  %cmp11.not = icmp eq i32 %call10, 0, !dbg !9775
  br i1 %cmp11.not, label %cond.false, label %cond.end, !dbg !9775

cond.false:                                       ; preds = %if.end7
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.275, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 5856) #22, !dbg !9775
  tail call void @_exit(i32 noundef 1) #26, !dbg !9775
  unreachable, !dbg !9775

cond.end:                                         ; preds = %if.end7
  %15 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9776, !tbaa !6133
  %16 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9777, !tbaa !1352
  %arrayidx14 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %16, i64 2, !dbg !9778
  %17 = bitcast %struct.redisObject** %arrayidx14 to i8**, !dbg !9778
  %18 = load i8*, i8** %17, align 8, !dbg !9778, !tbaa !782
  %call15 = tail call i32 @dictDelete(%struct.dict* noundef %15, i8* noundef %18) #23, !dbg !9779
  %19 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9780, !tbaa !6133
  %call17 = tail call i32 @htNeedsResize(%struct.dict* noundef %19) #22, !dbg !9782
  %tobool18.not = icmp eq i32 %call17, 0, !dbg !9782
  br i1 %tobool18.not, label %if.end22, label %if.then19, !dbg !9783

if.then19:                                        ; preds = %cond.end
  %call21 = tail call i32 @dictResize(%struct.dict* noundef %19) #23, !dbg !9784
  %.pre = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9785, !tbaa !6133
  br label %if.end22, !dbg !9784

if.end22:                                         ; preds = %if.then19, %cond.end
  %20 = phi %struct.dict* [ %.pre, %if.then19 ], [ %19, %cond.end ], !dbg !9785
  %used = getelementptr inbounds %struct.dict, %struct.dict* %20, i64 0, i32 2, i64 0, i32 3, !dbg !9785
  %21 = load i64, i64* %used, align 8, !dbg !9785, !tbaa !3545
  %used28 = getelementptr inbounds %struct.dict, %struct.dict* %20, i64 0, i32 2, i64 1, i32 3, !dbg !9785
  %22 = load i64, i64* %used28, align 8, !dbg !9785, !tbaa !3545
  %add = sub i64 0, %22, !dbg !9787
  %cmp29 = icmp eq i64 %21, %add, !dbg !9787
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !9788

if.then30:                                        ; preds = %if.end22
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9789
  %23 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9789, !tbaa !2890
  %24 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9790, !tbaa !1352
  %arrayidx32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %24, i64 1, !dbg !9791
  %25 = load %struct.redisObject*, %struct.redisObject** %arrayidx32, align 8, !dbg !9791, !tbaa !782
  %call33 = tail call i32 @deleteKey(%struct.redisDb* noundef %23, %struct.redisObject* noundef %25) #22, !dbg !9792
  br label %if.end34, !dbg !9792

if.end34:                                         ; preds = %if.then30, %if.end22
  %26 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9793, !tbaa !708
  %inc = add nsw i64 %26, 1, !dbg !9793
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9793, !tbaa !708
  br label %cleanup.sink.split, !dbg !9794

cleanup.sink.split:                               ; preds = %if.end, %if.end34
  %.sink61 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), %if.end34 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), %if.end ]
  %27 = load %struct.redisObject*, %struct.redisObject** %.sink61, align 8, !dbg !9751, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %27) #22, !dbg !9751
  br label %cleanup, !dbg !9794

cleanup:                                          ; preds = %cleanup.sink.split, %entry, %lor.lhs.false
  ret void, !dbg !9794
}

; Function Attrs: noinline nounwind uwtable
define internal void @zremrangebyscoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9795 {
entry:
  %min = alloca double, align 8
  %max = alloca double, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9797, metadata !DIExpression()), !dbg !9803
  %0 = bitcast double* %min to i8*, !dbg !9804
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9804
  %1 = bitcast double* %max to i8*, !dbg !9805
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !9805
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9806
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9806, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 2, !dbg !9808
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9808, !tbaa !782
  call void @llvm.dbg.value(metadata double* %min, metadata !9798, metadata !DIExpression(DW_OP_deref)), !dbg !9803
  %call = call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, double* noundef nonnull %min, i8* noundef null) #22, !dbg !9809
  %cmp.not = icmp eq i32 %call, 0, !dbg !9810
  br i1 %cmp.not, label %lor.lhs.false, label %cleanup, !dbg !9811

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9812, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !9813
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9813, !tbaa !782
  call void @llvm.dbg.value(metadata double* %max, metadata !9799, metadata !DIExpression(DW_OP_deref)), !dbg !9803
  %call3 = call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5, double* noundef nonnull %max, i8* noundef null) #22, !dbg !9814
  %cmp4.not = icmp eq i32 %call3, 0, !dbg !9815
  br i1 %cmp4.not, label %if.end, label %cleanup, !dbg !9816

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9817, !tbaa !1352
  %arrayidx6 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 1, !dbg !9819
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx6, align 8, !dbg !9819, !tbaa !782
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9820, !tbaa !4181
  %call7 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7, %struct.redisObject* noundef %8) #22, !dbg !9821
  call void @llvm.dbg.value(metadata %struct.redisObject* %call7, metadata !9801, metadata !DIExpression()), !dbg !9803
  %cmp8 = icmp eq %struct.redisObject* %call7, null, !dbg !9822
  br i1 %cmp8, label %cleanup, label %lor.lhs.false9, !dbg !9823

lor.lhs.false9:                                   ; preds = %if.end
  %call10 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call7, i32 noundef 3) #22, !dbg !9824
  %tobool.not = icmp eq i32 %call10, 0, !dbg !9824
  br i1 %tobool.not, label %if.end12, label %cleanup, !dbg !9825

if.end12:                                         ; preds = %lor.lhs.false9
  %9 = bitcast %struct.redisObject* %call7 to %struct.zset**, !dbg !9826
  %10 = load %struct.zset*, %struct.zset** %9, align 8, !dbg !9826, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %10, metadata !9802, metadata !DIExpression()), !dbg !9803
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %10, i64 0, i32 1, !dbg !9827
  %11 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !9827, !tbaa !6138
  %12 = load double, double* %min, align 8, !dbg !9828, !tbaa !6140
  call void @llvm.dbg.value(metadata double %12, metadata !9798, metadata !DIExpression()), !dbg !9803
  %13 = load double, double* %max, align 8, !dbg !9829, !tbaa !6140
  call void @llvm.dbg.value(metadata double %13, metadata !9799, metadata !DIExpression()), !dbg !9803
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %10, i64 0, i32 0, !dbg !9830
  %14 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9830, !tbaa !6133
  %call13 = tail call fastcc i64 @zslDeleteRangeByScore(%struct.zskiplist* noundef %11, double noundef %12, double noundef %13, %struct.dict* noundef %14) #22, !dbg !9831
  call void @llvm.dbg.value(metadata i64 %call13, metadata !9800, metadata !DIExpression()), !dbg !9803
  %15 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9832, !tbaa !6133
  %call15 = tail call i32 @htNeedsResize(%struct.dict* noundef %15) #22, !dbg !9834
  %tobool16.not = icmp eq i32 %call15, 0, !dbg !9834
  br i1 %tobool16.not, label %if.end20, label %if.then17, !dbg !9835

if.then17:                                        ; preds = %if.end12
  %call19 = tail call i32 @dictResize(%struct.dict* noundef %15) #23, !dbg !9836
  %.pre = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9837, !tbaa !6133
  br label %if.end20, !dbg !9836

if.end20:                                         ; preds = %if.then17, %if.end12
  %16 = phi %struct.dict* [ %.pre, %if.then17 ], [ %15, %if.end12 ], !dbg !9837
  %used = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 3, !dbg !9837
  %17 = load i64, i64* %used, align 8, !dbg !9837, !tbaa !3545
  %used26 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 3, !dbg !9837
  %18 = load i64, i64* %used26, align 8, !dbg !9837, !tbaa !3545
  %add = sub i64 0, %18, !dbg !9839
  %cmp27 = icmp eq i64 %17, %add, !dbg !9839
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !9840

if.then28:                                        ; preds = %if.end20
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9841
  %19 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9841, !tbaa !2890
  %20 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9842, !tbaa !1352
  %arrayidx30 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 1, !dbg !9843
  %21 = load %struct.redisObject*, %struct.redisObject** %arrayidx30, align 8, !dbg !9843, !tbaa !782
  %call31 = tail call i32 @deleteKey(%struct.redisDb* noundef %19, %struct.redisObject* noundef %21) #22, !dbg !9844
  br label %if.end32, !dbg !9844

if.end32:                                         ; preds = %if.then28, %if.end20
  %22 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9845, !tbaa !708
  %add33 = add nsw i64 %22, %call13, !dbg !9845
  store i64 %add33, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9845, !tbaa !708
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %call13) #22, !dbg !9846
  br label %cleanup, !dbg !9847

cleanup:                                          ; preds = %if.end, %lor.lhs.false9, %entry, %lor.lhs.false, %if.end32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !9847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9847
  ret void, !dbg !9847
}

; Function Attrs: noinline nounwind uwtable
define internal void @zremrangebyrankCommand(%struct.redisClient* noundef %c) #0 !dbg !9848 {
entry:
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9850, metadata !DIExpression()), !dbg !9857
  %0 = bitcast i64* %start to i8*, !dbg !9858
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9858
  %1 = bitcast i64* %end to i8*, !dbg !9859
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !9859
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9860
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9860, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 2, !dbg !9862
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9862, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %start, metadata !9851, metadata !DIExpression(DW_OP_deref)), !dbg !9857
  %call = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, i64* noundef nonnull %start, i8* noundef null) #22, !dbg !9863
  %cmp.not = icmp eq i32 %call, 0, !dbg !9864
  br i1 %cmp.not, label %lor.lhs.false, label %cleanup, !dbg !9865

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9866, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !9867
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9867, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %end, metadata !9852, metadata !DIExpression(DW_OP_deref)), !dbg !9857
  %call3 = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5, i64* noundef nonnull %end, i8* noundef null) #22, !dbg !9868
  %cmp4.not = icmp eq i32 %call3, 0, !dbg !9869
  br i1 %cmp4.not, label %if.end, label %cleanup, !dbg !9870

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9871, !tbaa !1352
  %arrayidx6 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 1, !dbg !9873
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx6, align 8, !dbg !9873, !tbaa !782
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9874, !tbaa !4181
  %call7 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7, %struct.redisObject* noundef %8) #22, !dbg !9875
  call void @llvm.dbg.value(metadata %struct.redisObject* %call7, metadata !9855, metadata !DIExpression()), !dbg !9857
  %cmp8 = icmp eq %struct.redisObject* %call7, null, !dbg !9876
  br i1 %cmp8, label %cleanup, label %lor.lhs.false9, !dbg !9877

lor.lhs.false9:                                   ; preds = %if.end
  %call10 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call7, i32 noundef 3) #22, !dbg !9878
  %tobool.not = icmp eq i32 %call10, 0, !dbg !9878
  br i1 %tobool.not, label %if.end12, label %cleanup, !dbg !9879

if.end12:                                         ; preds = %lor.lhs.false9
  %9 = bitcast %struct.redisObject* %call7 to %struct.zset**, !dbg !9880
  %10 = load %struct.zset*, %struct.zset** %9, align 8, !dbg !9880, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %10, metadata !9856, metadata !DIExpression()), !dbg !9857
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %10, i64 0, i32 1, !dbg !9881
  %11 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !9881, !tbaa !6138
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %11, i64 0, i32 2, !dbg !9882
  %12 = load i64, i64* %length, align 8, !dbg !9882, !tbaa !1187
  call void @llvm.dbg.value(metadata i64 %12, metadata !9853, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9857
  %13 = load i64, i64* %start, align 8, !dbg !9883, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %13, metadata !9851, metadata !DIExpression()), !dbg !9857
  %cmp13 = icmp slt i64 %13, 0, !dbg !9885
  %sext106 = shl i64 %12, 32, !dbg !9886
  %conv16 = ashr exact i64 %sext106, 32, !dbg !9886
  %add = select i1 %cmp13, i64 %conv16, i64 0, !dbg !9886
  %14 = add nsw i64 %13, %add, !dbg !9886
  %15 = load i64, i64* %end, align 8, !dbg !9887, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %15, metadata !9852, metadata !DIExpression()), !dbg !9857
  %cmp18 = icmp slt i64 %15, 0, !dbg !9889
  %sext105 = shl i64 %12, 32, !dbg !9890
  %conv21 = ashr exact i64 %sext105, 32, !dbg !9890
  %add22 = select i1 %cmp18, i64 %conv21, i64 0, !dbg !9890
  %16 = add nsw i64 %15, %add22, !dbg !9890
  call void @llvm.dbg.value(metadata i64 %14, metadata !9851, metadata !DIExpression()), !dbg !9857
  %17 = icmp sgt i64 %14, 0, !dbg !9891
  %spec.store.select = select i1 %17, i64 %14, i64 0, !dbg !9891
  store i64 %spec.store.select, i64* %start, align 8, !dbg !9857
  call void @llvm.dbg.value(metadata i64 %spec.store.select, metadata !9851, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i64 %16, metadata !9852, metadata !DIExpression()), !dbg !9857
  %cmp28 = icmp sgt i64 %spec.store.select, %16, !dbg !9892
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !9894

lor.lhs.false30:                                  ; preds = %if.end12
  %sext = shl i64 %12, 32, !dbg !9895
  %conv31 = ashr exact i64 %sext, 32, !dbg !9895
  %cmp32.not = icmp slt i64 %spec.store.select, %conv31, !dbg !9896
  br i1 %cmp32.not, label %if.end35, label %if.then34, !dbg !9897

if.then34:                                        ; preds = %lor.lhs.false30, %if.end12
  %18 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !9898, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %18) #22, !dbg !9900
  br label %cleanup, !dbg !9901

if.end35:                                         ; preds = %lor.lhs.false30
  %cmp37.not = icmp slt i64 %16, %conv31, !dbg !9902
  br i1 %cmp37.not, label %if.end41, label %if.then39, !dbg !9904

if.then39:                                        ; preds = %if.end35
  %sext104 = add i64 %sext, -4294967296, !dbg !9905
  %conv40 = ashr exact i64 %sext104, 32, !dbg !9905
  call void @llvm.dbg.value(metadata i64 %conv40, metadata !9852, metadata !DIExpression()), !dbg !9857
  store i64 %conv40, i64* %end, align 8, !dbg !9906, !tbaa !790
  br label %if.end41, !dbg !9907

if.end41:                                         ; preds = %if.then39, %if.end35
  %19 = phi i64 [ %conv40, %if.then39 ], [ %16, %if.end35 ], !dbg !9908
  call void @llvm.dbg.value(metadata i64 %spec.store.select, metadata !9851, metadata !DIExpression()), !dbg !9857
  %20 = trunc i64 %spec.store.select to i32, !dbg !9909
  %conv44 = add i32 %20, 1, !dbg !9909
  call void @llvm.dbg.value(metadata i64 %19, metadata !9852, metadata !DIExpression()), !dbg !9857
  %21 = trunc i64 %19 to i32, !dbg !9908
  %conv46 = add i32 %21, 1, !dbg !9908
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %10, i64 0, i32 0, !dbg !9910
  %22 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9910, !tbaa !6133
  %call47 = tail call fastcc i64 @zslDeleteRangeByRank(%struct.zskiplist* noundef nonnull %11, i32 noundef %conv44, i32 noundef %conv46, %struct.dict* noundef %22) #22, !dbg !9911
  call void @llvm.dbg.value(metadata i64 %call47, metadata !9854, metadata !DIExpression()), !dbg !9857
  %23 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9912, !tbaa !6133
  %call49 = tail call i32 @htNeedsResize(%struct.dict* noundef %23) #22, !dbg !9914
  %tobool50.not = icmp eq i32 %call49, 0, !dbg !9914
  br i1 %tobool50.not, label %if.end54, label %if.then51, !dbg !9915

if.then51:                                        ; preds = %if.end41
  %call53 = tail call i32 @dictResize(%struct.dict* noundef %23) #23, !dbg !9916
  %.pre = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !9917, !tbaa !6133
  br label %if.end54, !dbg !9916

if.end54:                                         ; preds = %if.then51, %if.end41
  %24 = phi %struct.dict* [ %.pre, %if.then51 ], [ %23, %if.end41 ], !dbg !9917
  %used = getelementptr inbounds %struct.dict, %struct.dict* %24, i64 0, i32 2, i64 0, i32 3, !dbg !9917
  %25 = load i64, i64* %used, align 8, !dbg !9917, !tbaa !3545
  %used60 = getelementptr inbounds %struct.dict, %struct.dict* %24, i64 0, i32 2, i64 1, i32 3, !dbg !9917
  %26 = load i64, i64* %used60, align 8, !dbg !9917, !tbaa !3545
  %add61 = sub i64 0, %26, !dbg !9919
  %cmp62 = icmp eq i64 %25, %add61, !dbg !9919
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !9920

if.then64:                                        ; preds = %if.end54
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !9921
  %27 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !9921, !tbaa !2890
  %28 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9922, !tbaa !1352
  %arrayidx66 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %28, i64 1, !dbg !9923
  %29 = load %struct.redisObject*, %struct.redisObject** %arrayidx66, align 8, !dbg !9923, !tbaa !782
  %call67 = tail call i32 @deleteKey(%struct.redisDb* noundef %27, %struct.redisObject* noundef %29) #22, !dbg !9924
  br label %if.end68, !dbg !9924

if.end68:                                         ; preds = %if.then64, %if.end54
  %30 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9925, !tbaa !708
  %add69 = add nsw i64 %30, %call47, !dbg !9925
  store i64 %add69, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !9925, !tbaa !708
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %call47) #22, !dbg !9926
  br label %cleanup, !dbg !9927

cleanup:                                          ; preds = %if.end, %lor.lhs.false9, %entry, %lor.lhs.false, %if.end68, %if.then34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !9927
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !9927
  ret void, !dbg !9927
}

; Function Attrs: noinline nounwind uwtable
define internal void @zunionstoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9928 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9930, metadata !DIExpression()), !dbg !9931
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9932
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9932, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9933
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9933, !tbaa !782
  tail call void @zunionInterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, i32 noundef 0) #22, !dbg !9934
  ret void, !dbg !9935
}

; Function Attrs: noinline nounwind uwtable
define internal void @zunionInterBlockClientOnSwappedKeys(%struct.redisClient* noundef %c, %struct.redisCommand* nocapture noundef readnone %cmd, i32 noundef %argc, %struct.redisObject** nocapture noundef readonly %argv) #0 !dbg !9936 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9938, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !9939, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 %argc, metadata !9940, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !9941, metadata !DIExpression()), !dbg !9944
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 2, !dbg !9945
  %0 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9945, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 0, !dbg !9946
  %1 = load i8*, i8** %ptr, align 8, !dbg !9946, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %1) #27, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %call, metadata !9943, metadata !DIExpression()), !dbg !9944
  %sub = add nsw i32 %argc, -3, !dbg !9948
  %cmp = icmp sle i32 %call, %sub, !dbg !9950
  %cmp111 = icmp sgt i32 %call, 0
  %or.cond = and i1 %cmp, %cmp111, !dbg !9951
  call void @llvm.dbg.value(metadata i32 0, metadata !9942, metadata !DIExpression()), !dbg !9944
  br i1 %or.cond, label %for.body.preheader, label %cleanup, !dbg !9951

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %call to i64, !dbg !9952
  br label %for.body, !dbg !9955

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9942, metadata !DIExpression()), !dbg !9944
  %2 = add nuw nsw i64 %indvars.iv, 3, !dbg !9956
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %2, !dbg !9958
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !9958, !tbaa !782
  %call3 = tail call i32 @waitForSwappedKey(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3) #22, !dbg !9959
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9960
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !9942, metadata !DIExpression()), !dbg !9944
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !9952
  br i1 %exitcond.not, label %cleanup, label %for.body, !dbg !9955, !llvm.loop !9961

cleanup:                                          ; preds = %for.body, %entry
  ret void, !dbg !9963
}

; Function Attrs: noinline nounwind uwtable
define internal void @zinterstoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9964 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9966, metadata !DIExpression()), !dbg !9967
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !9968
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !9968, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !9969
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !9969, !tbaa !782
  tail call void @zunionInterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, i32 noundef 2) #22, !dbg !9970
  ret void, !dbg !9971
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrangeCommand(%struct.redisClient* noundef %c) #0 !dbg !9972 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9974, metadata !DIExpression()), !dbg !9975
  tail call void @zrangeGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !9976
  ret void, !dbg !9977
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrangebyscoreCommand(%struct.redisClient* noundef %c) #0 !dbg !9978 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9980, metadata !DIExpression()), !dbg !9981
  tail call void @genericZrangebyscoreCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: noinline nounwind uwtable
define internal void @zcountCommand(%struct.redisClient* noundef %c) #0 !dbg !9984 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9986, metadata !DIExpression()), !dbg !9987
  tail call void @genericZrangebyscoreCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrevrangeCommand(%struct.redisClient* noundef %c) #0 !dbg !9990 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9992, metadata !DIExpression()), !dbg !9993
  tail call void @zrangeGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !9994
  ret void, !dbg !9995
}

; Function Attrs: noinline nounwind uwtable
define internal void @zcardCommand(%struct.redisClient* noundef %c) #0 !dbg !9996 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !9998, metadata !DIExpression()), !dbg !10001
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10002
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10002, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10004
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10004, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10005, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10006
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !9999, metadata !DIExpression()), !dbg !10001
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10007
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10008

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 3) #22, !dbg !10009
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10009
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10010

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !10011
  %4 = load %struct.zset*, %struct.zset** %3, align 8, !dbg !10011, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %4, metadata !10000, metadata !DIExpression()), !dbg !10001
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 1, !dbg !10012
  %5 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !10012, !tbaa !6138
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %5, i64 0, i32 2, !dbg !10013
  %6 = load i64, i64* %length, align 8, !dbg !10013, !tbaa !1187
  tail call void @addReplyUlong(%struct.redisClient* noundef nonnull %c, i64 noundef %6) #22, !dbg !10014
  br label %cleanup, !dbg !10015

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  ret void, !dbg !10015
}

; Function Attrs: noinline nounwind uwtable
define internal void @zscoreCommand(%struct.redisClient* noundef %c) #0 !dbg !10016 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10018, metadata !DIExpression()), !dbg !10025
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10026
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10026, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10028
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10028, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10029, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10030
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10019, metadata !DIExpression()), !dbg !10025
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10031
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10032

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 3) #22, !dbg !10033
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10033
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10034

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !10035
  %4 = load %struct.zset*, %struct.zset** %3, align 8, !dbg !10035, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %4, metadata !10020, metadata !DIExpression()), !dbg !10025
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 0, !dbg !10036
  %5 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10036, !tbaa !6133
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10037, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 2, !dbg !10038
  %7 = bitcast %struct.redisObject** %arrayidx3 to i8**, !dbg !10038
  %8 = load i8*, i8** %7, align 8, !dbg !10038, !tbaa !782
  %call4 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %5, i8* noundef %8) #23, !dbg !10039
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call4, metadata !10021, metadata !DIExpression()), !dbg !10025
  %tobool5.not = icmp eq %struct.dictEntry* %call4, null, !dbg !10040
  br i1 %tobool5.not, label %if.then6, label %if.else, !dbg !10041

if.then6:                                         ; preds = %if.end
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10042, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %9) #22, !dbg !10044
  br label %cleanup, !dbg !10045

if.else:                                          ; preds = %if.end
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call4, i64 0, i32 1, !dbg !10046
  %10 = bitcast i8** %val to double**, !dbg !10046
  %11 = load double*, double** %10, align 8, !dbg !10046, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %11, metadata !10022, metadata !DIExpression()), !dbg !10047
  %12 = load double, double* %11, align 8, !dbg !10048, !tbaa !6140
  tail call void @addReplyDouble(%struct.redisClient* noundef nonnull %c, double noundef %12) #22, !dbg !10049
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !10050
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrankCommand(%struct.redisClient* noundef %c) #0 !dbg !10051 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10053, metadata !DIExpression()), !dbg !10054
  tail call void @zrankGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !10055
  ret void, !dbg !10056
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrevrankCommand(%struct.redisClient* noundef %c) #0 !dbg !10057 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10059, metadata !DIExpression()), !dbg !10060
  tail call void @zrankGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: noinline nounwind uwtable
define internal void @hsetCommand(%struct.redisClient* noundef %c) #0 !dbg !10063 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10065, metadata !DIExpression()), !dbg !10068
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10069
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10069, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10071
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10071, !tbaa !782
  %call = tail call %struct.redisObject* @hashLookupWriteOrCreate(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10067, metadata !DIExpression()), !dbg !10068
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10073
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10074

if.end:                                           ; preds = %entry
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10075, !tbaa !1352
  tail call void @hashTryConversion(%struct.redisObject* noundef nonnull %call, %struct.redisObject** noundef %2, i32 noundef 2, i32 noundef 3) #22, !dbg !10076
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10077, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !10078
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 3, !dbg !10079
  tail call void @hashTryObjectEncoding(%struct.redisObject* noundef nonnull %call, %struct.redisObject** noundef nonnull %arrayidx3, %struct.redisObject** noundef nonnull %arrayidx5) #22, !dbg !10080
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10081, !tbaa !1352
  %arrayidx7 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !10082
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx7, align 8, !dbg !10082, !tbaa !782
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !10083
  %6 = load %struct.redisObject*, %struct.redisObject** %arrayidx9, align 8, !dbg !10083, !tbaa !782
  %call10 = tail call i32 @hashSet(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %5, %struct.redisObject* noundef %6) #22, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %call10, metadata !10066, metadata !DIExpression()), !dbg !10068
  %tobool.not = icmp eq i32 %call10, 0, !dbg !10085
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10085
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !10085
  %cond = select i1 %tobool.not, %struct.redisObject* %8, %struct.redisObject* %7, !dbg !10085
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond) #22, !dbg !10086
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10087, !tbaa !708
  %inc = add nsw i64 %9, 1, !dbg !10087
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10087, !tbaa !708
  br label %cleanup, !dbg !10088

cleanup:                                          ; preds = %entry, %if.end
  ret void, !dbg !10088
}

; Function Attrs: noinline nounwind uwtable
define internal void @hsetnxCommand(%struct.redisClient* noundef %c) #0 !dbg !10089 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10091, metadata !DIExpression()), !dbg !10093
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10094
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10094, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10096
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10096, !tbaa !782
  %call = tail call %struct.redisObject* @hashLookupWriteOrCreate(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10097
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10092, metadata !DIExpression()), !dbg !10093
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10098
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10099

if.end:                                           ; preds = %entry
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10100, !tbaa !1352
  tail call void @hashTryConversion(%struct.redisObject* noundef nonnull %call, %struct.redisObject** noundef %2, i32 noundef 2, i32 noundef 3) #22, !dbg !10101
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10102, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !10104
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !10104, !tbaa !782
  %call4 = tail call i32 @hashExists(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %4) #22, !dbg !10105
  %tobool.not = icmp eq i32 %call4, 0, !dbg !10105
  br i1 %tobool.not, label %if.else, label %if.then5, !dbg !10106

if.then5:                                         ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10107, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !10109
  br label %cleanup, !dbg !10110

if.else:                                          ; preds = %if.end
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10111, !tbaa !1352
  %arrayidx7 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 2, !dbg !10113
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 3, !dbg !10114
  tail call void @hashTryObjectEncoding(%struct.redisObject* noundef nonnull %call, %struct.redisObject** noundef nonnull %arrayidx7, %struct.redisObject** noundef nonnull %arrayidx9) #22, !dbg !10115
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10116, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 2, !dbg !10117
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx11, align 8, !dbg !10117, !tbaa !782
  %arrayidx13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 3, !dbg !10118
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx13, align 8, !dbg !10118, !tbaa !782
  %call14 = tail call i32 @hashSet(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %8, %struct.redisObject* noundef %9) #22, !dbg !10119
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !10120, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !10121
  %11 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10122, !tbaa !708
  %inc = add nsw i64 %11, 1, !dbg !10122
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10122, !tbaa !708
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.else, %entry
  ret void, !dbg !10123
}

; Function Attrs: noinline nounwind uwtable
define internal void @hgetCommand(%struct.redisClient* noundef %c) #0 !dbg !10124 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10126, metadata !DIExpression()), !dbg !10129
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10130
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10130, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10132
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10132, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10133, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10134
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10127, metadata !DIExpression()), !dbg !10129
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10135
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10136

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 4) #22, !dbg !10137
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10137
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10138

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10139, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !10141
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !10141, !tbaa !782
  %call4 = tail call %struct.redisObject* @hashGet(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %4) #22, !dbg !10142
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !10128, metadata !DIExpression()), !dbg !10129
  %cmp5.not = icmp eq %struct.redisObject* %call4, null, !dbg !10143
  br i1 %cmp5.not, label %if.else, label %if.then6, !dbg !10144

if.then6:                                         ; preds = %if.end
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call4) #22, !dbg !10145
  %5 = bitcast %struct.redisObject* %call4 to i8*, !dbg !10147
  tail call void @decrRefCount(i8* noundef nonnull %5) #22, !dbg !10148
  br label %cleanup, !dbg !10149

if.else:                                          ; preds = %if.end
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10150, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !10152
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !10153
}

; Function Attrs: noinline nounwind uwtable
define internal void @hmsetCommand(%struct.redisClient* noundef %c) #0 !dbg !10154 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10156, metadata !DIExpression()), !dbg !10159
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !10160
  %0 = load i32, i32* %argc, align 8, !dbg !10160, !tbaa !1350
  %rem = srem i32 %0, 2, !dbg !10162
  %cmp = icmp eq i32 %rem, 1, !dbg !10163
  br i1 %cmp, label %if.then, label %if.end, !dbg !10164

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.289, i64 0, i64 0)) #23, !dbg !10165
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call) #22, !dbg !10167
  br label %cleanup, !dbg !10168

if.end:                                           ; preds = %entry
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10169
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10169, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !10171
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10171, !tbaa !782
  %call1 = tail call %struct.redisObject* @hashLookupWriteOrCreate(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %2) #22, !dbg !10172
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !10158, metadata !DIExpression()), !dbg !10159
  %cmp2 = icmp eq %struct.redisObject* %call1, null, !dbg !10173
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !10174

if.end4:                                          ; preds = %if.end
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10175, !tbaa !1352
  %4 = load i32, i32* %argc, align 8, !dbg !10176, !tbaa !1350
  %sub = add nsw i32 %4, -1, !dbg !10177
  tail call void @hashTryConversion(%struct.redisObject* noundef nonnull %call1, %struct.redisObject** noundef %3, i32 noundef 2, i32 noundef %sub) #22, !dbg !10178
  call void @llvm.dbg.value(metadata i32 2, metadata !10157, metadata !DIExpression()), !dbg !10159
  %5 = load i32, i32* %argc, align 8, !dbg !10179, !tbaa !1350
  %cmp844 = icmp sgt i32 %5, 2, !dbg !10182
  br i1 %cmp844, label %for.body, label %for.end, !dbg !10183

for.body:                                         ; preds = %if.end4, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 2, %if.end4 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10157, metadata !DIExpression()), !dbg !10159
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10184, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 %indvars.iv, !dbg !10186
  %7 = or i64 %indvars.iv, 1, !dbg !10187
  %arrayidx13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 %7, !dbg !10188
  tail call void @hashTryObjectEncoding(%struct.redisObject* noundef nonnull %call1, %struct.redisObject** noundef nonnull %arrayidx10, %struct.redisObject** noundef nonnull %arrayidx13) #22, !dbg !10189
  %8 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10190, !tbaa !1352
  %arrayidx16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %8, i64 %indvars.iv, !dbg !10191
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx16, align 8, !dbg !10191, !tbaa !782
  %arrayidx20 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %8, i64 %7, !dbg !10192
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx20, align 8, !dbg !10192, !tbaa !782
  %call21 = tail call i32 @hashSet(%struct.redisObject* noundef nonnull %call1, %struct.redisObject* noundef %9, %struct.redisObject* noundef %10) #22, !dbg !10193
  %indvars.iv.next = add nuw i64 %indvars.iv, 2, !dbg !10194
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !10157, metadata !DIExpression()), !dbg !10159
  %11 = load i32, i32* %argc, align 8, !dbg !10179, !tbaa !1350
  %12 = trunc i64 %indvars.iv.next to i32, !dbg !10182
  %cmp8 = icmp sgt i32 %11, %12, !dbg !10182
  br i1 %cmp8, label %for.body, label %for.end, !dbg !10183, !llvm.loop !10195

for.end:                                          ; preds = %for.body, %if.end4
  %13 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10197, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %13) #22, !dbg !10198
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10199, !tbaa !708
  %inc = add nsw i64 %14, 1, !dbg !10199
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10199, !tbaa !708
  br label %cleanup, !dbg !10200

cleanup:                                          ; preds = %if.end, %for.end, %if.then
  ret void, !dbg !10200
}

; Function Attrs: noinline nounwind uwtable
define internal void @hmgetCommand(%struct.redisClient* noundef %c) #0 !dbg !10201 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10203, metadata !DIExpression()), !dbg !10207
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10208
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10208, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10209
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10209, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !10210
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10210, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !10211
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10205, metadata !DIExpression()), !dbg !10207
  %cmp.not = icmp eq %struct.redisObject* %call, null, !dbg !10212
  br i1 %cmp.not, label %if.end, label %land.lhs.true, !dbg !10214

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !10215
  %3 = load i8, i8* %type, align 8, !dbg !10215, !tbaa !1526
  %cmp1.not = icmp eq i8 %3, 4, !dbg !10216
  br i1 %cmp1.not, label %if.end, label %if.then, !dbg !10217

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !10218, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4) #22, !dbg !10220
  br label %if.end, !dbg !10221

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call3 = tail call i8* (...) @sdsempty() #23, !dbg !10222
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !10223
  %5 = load i32, i32* %argc, align 8, !dbg !10223, !tbaa !1350
  %sub = add nsw i32 %5, -2, !dbg !10224
  %call4 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call3, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %sub) #23, !dbg !10225
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call4) #22, !dbg !10226
  call void @llvm.dbg.value(metadata i32 2, metadata !10204, metadata !DIExpression()), !dbg !10207
  %6 = load i32, i32* %argc, align 8, !dbg !10227, !tbaa !1350
  %cmp635 = icmp sgt i32 %6, 2, !dbg !10230
  br i1 %cmp635, label %for.body, label %for.end, !dbg !10231

for.body:                                         ; preds = %if.end, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 2, %if.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10204, metadata !DIExpression()), !dbg !10207
  br i1 %cmp.not, label %if.else, label %land.lhs.true10, !dbg !10232

land.lhs.true10:                                  ; preds = %for.body
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10235, !tbaa !1352
  %arrayidx12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv, !dbg !10236
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx12, align 8, !dbg !10236, !tbaa !782
  %call13 = tail call %struct.redisObject* @hashGet(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %8) #22, !dbg !10237
  call void @llvm.dbg.value(metadata %struct.redisObject* %call13, metadata !10206, metadata !DIExpression()), !dbg !10207
  %cmp14.not = icmp eq %struct.redisObject* %call13, null, !dbg !10238
  br i1 %cmp14.not, label %if.else, label %if.then16, !dbg !10239

if.then16:                                        ; preds = %land.lhs.true10
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call13) #22, !dbg !10240
  %9 = bitcast %struct.redisObject* %call13 to i8*, !dbg !10242
  tail call void @decrRefCount(i8* noundef nonnull %9) #22, !dbg !10243
  br label %for.inc, !dbg !10244

if.else:                                          ; preds = %land.lhs.true10, %for.body
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10245, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !10247
  br label %for.inc

for.inc:                                          ; preds = %if.then16, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10248
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !10204, metadata !DIExpression()), !dbg !10207
  %11 = load i32, i32* %argc, align 8, !dbg !10227, !tbaa !1350
  %12 = sext i32 %11 to i64, !dbg !10230
  %cmp6 = icmp slt i64 %indvars.iv.next, %12, !dbg !10230
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10231, !llvm.loop !10249

for.end:                                          ; preds = %for.inc, %if.end
  ret void, !dbg !10251
}

; Function Attrs: noinline nounwind uwtable
define internal void @hincrbyCommand(%struct.redisClient* noundef %c) #0 !dbg !10252 {
entry:
  %value = alloca i64, align 8
  %incr = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10254, metadata !DIExpression()), !dbg !10260
  %0 = bitcast i64* %value to i8*, !dbg !10261
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10261
  %1 = bitcast i64* %incr to i8*, !dbg !10261
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !10261
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10262
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10262, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 3, !dbg !10264
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10264, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %incr, metadata !10256, metadata !DIExpression(DW_OP_deref)), !dbg !10260
  %call = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, i64* noundef nonnull %incr, i8* noundef null) #22, !dbg !10265
  %cmp.not = icmp eq i32 %call, 0, !dbg !10266
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !10267

if.end:                                           ; preds = %entry
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10268, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 1, !dbg !10270
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !10270, !tbaa !782
  %call3 = tail call %struct.redisObject* @hashLookupWriteOrCreate(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !10271
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !10257, metadata !DIExpression()), !dbg !10260
  %cmp4 = icmp eq %struct.redisObject* %call3, null, !dbg !10272
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !10273

if.end6:                                          ; preds = %if.end
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10274, !tbaa !1352
  %arrayidx8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 2, !dbg !10276
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx8, align 8, !dbg !10276, !tbaa !782
  %call9 = tail call %struct.redisObject* @hashGet(%struct.redisObject* noundef nonnull %call3, %struct.redisObject* noundef %7) #22, !dbg !10277
  call void @llvm.dbg.value(metadata %struct.redisObject* %call9, metadata !10258, metadata !DIExpression()), !dbg !10260
  %cmp10.not = icmp eq %struct.redisObject* %call9, null, !dbg !10278
  br i1 %cmp10.not, label %if.else, label %if.then11, !dbg !10279

if.then11:                                        ; preds = %if.end6
  call void @llvm.dbg.value(metadata i64* %value, metadata !10255, metadata !DIExpression(DW_OP_deref)), !dbg !10260
  %call12 = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call9, i64* noundef nonnull %value, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.290, i64 0, i64 0)) #22, !dbg !10280
  %cmp13.not = icmp eq i32 %call12, 0, !dbg !10283
  %8 = bitcast %struct.redisObject* %call9 to i8*, !dbg !10284
  tail call void @decrRefCount(i8* noundef nonnull %8) #22, !dbg !10284
  br i1 %cmp13.not, label %if.end15, label %cleanup, !dbg !10285

if.end15:                                         ; preds = %if.then11
  %.pre = load i64, i64* %value, align 8, !dbg !10286, !tbaa !4936
  br label %if.end16, !dbg !10287

if.else:                                          ; preds = %if.end6
  call void @llvm.dbg.value(metadata i64 0, metadata !10255, metadata !DIExpression()), !dbg !10260
  store i64 0, i64* %value, align 8, !dbg !10288, !tbaa !4936
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end15
  %9 = phi i64 [ 0, %if.else ], [ %.pre, %if.end15 ], !dbg !10286
  %10 = load i64, i64* %incr, align 8, !dbg !10290, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %10, metadata !10256, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i64 %9, metadata !10255, metadata !DIExpression()), !dbg !10260
  %add = add nsw i64 %9, %10, !dbg !10286
  call void @llvm.dbg.value(metadata i64 %add, metadata !10255, metadata !DIExpression()), !dbg !10260
  %call17 = tail call %struct.redisObject* @createStringObjectFromLongLong(i64 noundef %add) #22, !dbg !10291
  call void @llvm.dbg.value(metadata %struct.redisObject* %call17, metadata !10259, metadata !DIExpression()), !dbg !10260
  %11 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10292, !tbaa !1352
  %arrayidx19 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %11, i64 2, !dbg !10293
  tail call void @hashTryObjectEncoding(%struct.redisObject* noundef nonnull %call3, %struct.redisObject** noundef nonnull %arrayidx19, %struct.redisObject** noundef null) #22, !dbg !10294
  %12 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10295, !tbaa !1352
  %arrayidx21 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 2, !dbg !10296
  %13 = load %struct.redisObject*, %struct.redisObject** %arrayidx21, align 8, !dbg !10296, !tbaa !782
  %call22 = tail call i32 @hashSet(%struct.redisObject* noundef nonnull %call3, %struct.redisObject* noundef %13, %struct.redisObject* noundef %call17) #22, !dbg !10297
  %14 = bitcast %struct.redisObject* %call17 to i8*, !dbg !10298
  tail call void @decrRefCount(i8* noundef %14) #22, !dbg !10299
  call void @llvm.dbg.value(metadata i64 %add, metadata !10255, metadata !DIExpression()), !dbg !10260
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add) #22, !dbg !10300
  %15 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10301, !tbaa !708
  %inc = add nsw i64 %15, 1, !dbg !10301
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10301, !tbaa !708
  br label %cleanup, !dbg !10302

cleanup:                                          ; preds = %if.then11, %if.end, %entry, %if.end16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !10302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10302
  ret void, !dbg !10302
}

; Function Attrs: noinline nounwind uwtable
define internal void @hdelCommand(%struct.redisClient* noundef %c) #0 !dbg !10303 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10305, metadata !DIExpression()), !dbg !10307
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10308
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10308, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10310
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10310, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10311, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10306, metadata !DIExpression()), !dbg !10307
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10313
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10314

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 4) #22, !dbg !10315
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10315
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10316

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10317, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !10319
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !10319, !tbaa !782
  %call4 = tail call i32 @hashDelete(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %4) #22, !dbg !10320
  %tobool5.not = icmp eq i32 %call4, 0, !dbg !10320
  br i1 %tobool5.not, label %if.else, label %if.then6, !dbg !10321

if.then6:                                         ; preds = %if.end
  %call7 = tail call fastcc i64 @hashLength(%struct.redisObject* noundef nonnull %call) #22, !dbg !10322
  %cmp8 = icmp eq i64 %call7, 0, !dbg !10325
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !10326

if.then9:                                         ; preds = %if.then6
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10327
  %5 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10327, !tbaa !2890
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10328, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 1, !dbg !10329
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx11, align 8, !dbg !10329, !tbaa !782
  %call12 = tail call i32 @deleteKey(%struct.redisDb* noundef %5, %struct.redisObject* noundef %7) #22, !dbg !10330
  br label %if.end13, !dbg !10330

if.end13:                                         ; preds = %if.then9, %if.then6
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !10331, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !10332
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10333, !tbaa !708
  %inc = add nsw i64 %9, 1, !dbg !10333
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10333, !tbaa !708
  br label %cleanup, !dbg !10334

if.else:                                          ; preds = %if.end
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10335, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !10337
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.else, %entry, %lor.lhs.false
  ret void, !dbg !10338
}

; Function Attrs: noinline nounwind uwtable
define internal void @hlenCommand(%struct.redisClient* noundef %c) #0 !dbg !10339 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10341, metadata !DIExpression()), !dbg !10343
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10344
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10344, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10346
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10346, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10347, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10348
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10342, metadata !DIExpression()), !dbg !10343
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10349
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10350

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 4) #22, !dbg !10351
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10351
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10352

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call fastcc i64 @hashLength(%struct.redisObject* noundef nonnull %call) #22, !dbg !10353
  tail call void @addReplyUlong(%struct.redisClient* noundef nonnull %c, i64 noundef %call2) #22, !dbg !10354
  br label %cleanup, !dbg !10355

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  ret void, !dbg !10355
}

; Function Attrs: noinline nounwind uwtable
define internal void @hkeysCommand(%struct.redisClient* noundef %c) #0 !dbg !10356 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10358, metadata !DIExpression()), !dbg !10359
  tail call void @genericHgetallCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: noinline nounwind uwtable
define internal void @hvalsCommand(%struct.redisClient* noundef %c) #0 !dbg !10362 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10364, metadata !DIExpression()), !dbg !10365
  tail call void @genericHgetallCommand(%struct.redisClient* noundef %c, i32 noundef 2) #22, !dbg !10366
  ret void, !dbg !10367
}

; Function Attrs: noinline nounwind uwtable
define internal void @hgetallCommand(%struct.redisClient* noundef %c) #0 !dbg !10368 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10370, metadata !DIExpression()), !dbg !10371
  tail call void @genericHgetallCommand(%struct.redisClient* noundef %c, i32 noundef 3) #22, !dbg !10372
  ret void, !dbg !10373
}

; Function Attrs: noinline nounwind uwtable
define internal void @hexistsCommand(%struct.redisClient* noundef %c) #0 !dbg !10374 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10376, metadata !DIExpression()), !dbg !10378
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10379
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10379, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10381
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10381, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10382, !tbaa !4181
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !10383
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10377, metadata !DIExpression()), !dbg !10378
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10384
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !10385

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 4) #22, !dbg !10386
  %tobool.not = icmp eq i32 %call1, 0, !dbg !10386
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !10387

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10388, !tbaa !1352
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !10389
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !10389, !tbaa !782
  %call4 = tail call i32 @hashExists(%struct.redisObject* noundef nonnull %call, %struct.redisObject* noundef %4) #22, !dbg !10390
  %tobool5.not = icmp eq i32 %call4, 0, !dbg !10390
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !10390
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !10390
  %cond = select i1 %tobool5.not, %struct.redisObject* %6, %struct.redisObject* %5, !dbg !10390
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond) #22, !dbg !10391
  br label %cleanup, !dbg !10392

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  ret void, !dbg !10392
}

; Function Attrs: noinline nounwind uwtable
define internal void @incrbyCommand(%struct.redisClient* noundef %c) #0 !dbg !10393 {
entry:
  %incr = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10395, metadata !DIExpression()), !dbg !10397
  %0 = bitcast i64* %incr to i8*, !dbg !10398
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10398
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10399
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10399, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 2, !dbg !10401
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10401, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %incr, metadata !10396, metadata !DIExpression(DW_OP_deref)), !dbg !10397
  %call = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2, i64* noundef nonnull %incr, i8* noundef null) #22, !dbg !10402
  %cmp.not = icmp eq i32 %call, 0, !dbg !10403
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !10404

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %incr, align 8, !dbg !10405, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %3, metadata !10396, metadata !DIExpression()), !dbg !10397
  tail call void @incrDecrCommand(%struct.redisClient* noundef nonnull %c, i64 noundef %3) #22, !dbg !10406
  br label %cleanup, !dbg !10407

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10407
  ret void, !dbg !10407
}

; Function Attrs: noinline nounwind uwtable
define internal void @decrbyCommand(%struct.redisClient* noundef %c) #0 !dbg !10408 {
entry:
  %incr = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10410, metadata !DIExpression()), !dbg !10412
  %0 = bitcast i64* %incr to i8*, !dbg !10413
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10413
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10414
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10414, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 2, !dbg !10416
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10416, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %incr, metadata !10411, metadata !DIExpression(DW_OP_deref)), !dbg !10412
  %call = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2, i64* noundef nonnull %incr, i8* noundef null) #22, !dbg !10417
  %cmp.not = icmp eq i32 %call, 0, !dbg !10418
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !10419

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %incr, align 8, !dbg !10420, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %3, metadata !10411, metadata !DIExpression()), !dbg !10412
  %sub = sub nsw i64 0, %3, !dbg !10421
  tail call void @incrDecrCommand(%struct.redisClient* noundef nonnull %c, i64 noundef %sub) #22, !dbg !10422
  br label %cleanup, !dbg !10423

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !10423
  ret void, !dbg !10423
}

; Function Attrs: noinline nounwind uwtable
define internal void @getsetCommand(%struct.redisClient* noundef %c) #0 !dbg !10424 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10426, metadata !DIExpression()), !dbg !10427
  %call = tail call i32 @getGenericCommand(%struct.redisClient* noundef %c) #22, !dbg !10428
  %cmp = icmp eq i32 %call, -1, !dbg !10430
  br i1 %cmp, label %return, label %if.end, !dbg !10431

if.end:                                           ; preds = %entry
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10432
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10432, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !10434
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10434, !tbaa !2353
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10435
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10435, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 1, !dbg !10436
  %3 = bitcast %struct.redisObject** %arrayidx to i8**, !dbg !10436
  %4 = load i8*, i8** %3, align 8, !dbg !10436, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 2, !dbg !10437
  %5 = bitcast %struct.redisObject** %arrayidx2 to i8**, !dbg !10437
  %6 = load i8*, i8** %5, align 8, !dbg !10437, !tbaa !782
  %call3 = tail call i32 @dictAdd(%struct.dict* noundef %1, i8* noundef %4, i8* noundef %6) #23, !dbg !10438
  %cmp4 = icmp eq i32 %call3, 1, !dbg !10439
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10440

if.then5:                                         ; preds = %if.end
  %7 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10441, !tbaa !2890
  %dict7 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %7, i64 0, i32 0, !dbg !10443
  %8 = load %struct.dict*, %struct.dict** %dict7, align 8, !dbg !10443, !tbaa !2353
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10444, !tbaa !1352
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 1, !dbg !10445
  %10 = bitcast %struct.redisObject** %arrayidx9 to i8**, !dbg !10445
  %11 = load i8*, i8** %10, align 8, !dbg !10445, !tbaa !782
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 2, !dbg !10446
  %12 = bitcast %struct.redisObject** %arrayidx11 to i8**, !dbg !10446
  %13 = load i8*, i8** %12, align 8, !dbg !10446, !tbaa !782
  %call12 = tail call i32 @dictReplace(%struct.dict* noundef %8, i8* noundef %11, i8* noundef %13) #23, !dbg !10447
  br label %if.end15, !dbg !10448

if.else:                                          ; preds = %if.end
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10449, !tbaa !1352
  %arrayidx14 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 1, !dbg !10451
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx14, align 8, !dbg !10451, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %15) #22, !dbg !10452
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then5
  %16 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10453, !tbaa !1352
  %arrayidx17 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %16, i64 2, !dbg !10454
  %17 = load %struct.redisObject*, %struct.redisObject** %arrayidx17, align 8, !dbg !10454, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %17) #22, !dbg !10455
  %18 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10456, !tbaa !708
  %inc = add nsw i64 %18, 1, !dbg !10456
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10456, !tbaa !708
  %19 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10457, !tbaa !2890
  %20 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10458, !tbaa !1352
  %arrayidx20 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 1, !dbg !10459
  %21 = load %struct.redisObject*, %struct.redisObject** %arrayidx20, align 8, !dbg !10459, !tbaa !782
  %call21 = tail call i32 @removeExpire(%struct.redisDb* noundef %19, %struct.redisObject* noundef %21) #22, !dbg !10460
  br label %return, !dbg !10461

return:                                           ; preds = %entry, %if.end15
  ret void, !dbg !10461
}

; Function Attrs: noinline nounwind uwtable
define internal void @msetCommand(%struct.redisClient* noundef %c) #0 !dbg !10462 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10464, metadata !DIExpression()), !dbg !10465
  tail call void @msetGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !10466
  ret void, !dbg !10467
}

; Function Attrs: noinline nounwind uwtable
define internal void @msetnxCommand(%struct.redisClient* noundef %c) #0 !dbg !10468 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10470, metadata !DIExpression()), !dbg !10471
  tail call void @msetGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !10472
  ret void, !dbg !10473
}

; Function Attrs: noinline nounwind uwtable
define internal void @randomkeyCommand(%struct.redisClient* noundef %c) #0 !dbg !10474 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10476, metadata !DIExpression()), !dbg !10479
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %while.cond, !dbg !10480

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10481, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !10483
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10483, !tbaa !2353
  %call = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %1) #23, !dbg !10484
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !10477, metadata !DIExpression()), !dbg !10479
  %cond = icmp eq %struct.dictEntry* %call, null, !dbg !10485
  br i1 %cond, label %if.then5, label %lor.lhs.false, !dbg !10485

lor.lhs.false:                                    ; preds = %while.cond
  %2 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10487, !tbaa !2890
  %3 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !10488
  %4 = load %struct.redisObject*, %struct.redisObject** %3, align 8, !dbg !10488, !tbaa !2455
  %call3 = tail call i32 @expireIfNeeded(%struct.redisDb* noundef %2, %struct.redisObject* noundef %4) #22, !dbg !10489
  %cmp = icmp eq i32 %call3, 0, !dbg !10490
  br i1 %cmp, label %if.end6, label %while.cond, !dbg !10491, !llvm.loop !10492

if.then5:                                         ; preds = %while.cond
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !10494, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !10497
  br label %cleanup, !dbg !10498

if.end6:                                          ; preds = %lor.lhs.false
  %6 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !10488
  %7 = load %struct.redisObject*, %struct.redisObject** %6, align 8, !dbg !10499, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %7, metadata !10478, metadata !DIExpression()), !dbg !10479
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !10500, !tbaa !1384
  %tobool8.not = icmp eq i32 %8, 0, !dbg !10502
  br i1 %tobool8.not, label %if.else, label %if.then9, !dbg !10503

if.then9:                                         ; preds = %if.end6
  %call10 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef %7) #22, !dbg !10504
  call void @llvm.dbg.value(metadata %struct.redisObject* %call10, metadata !10478, metadata !DIExpression()), !dbg !10479
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %call10) #22, !dbg !10506
  %9 = bitcast %struct.redisObject* %call10 to i8*, !dbg !10507
  tail call void @decrRefCount(i8* noundef %9) #22, !dbg !10508
  br label %cleanup, !dbg !10509

if.else:                                          ; preds = %if.end6
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !10510
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.else, %if.then5
  ret void, !dbg !10512
}

; Function Attrs: noinline nounwind uwtable
define internal void @selectCommand(%struct.redisClient* noundef %c) #0 !dbg !10513 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10515, metadata !DIExpression()), !dbg !10517
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10518
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10518, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10519
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10519, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !10520
  %2 = load i8*, i8** %ptr, align 8, !dbg !10520, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %call, metadata !10516, metadata !DIExpression()), !dbg !10517
  %call1 = tail call i32 @selectDb(%struct.redisClient* noundef %c, i32 noundef %call) #22, !dbg !10522
  %cmp = icmp eq i32 %call1, -1, !dbg !10524
  br i1 %cmp, label %if.then, label %if.else, !dbg !10525

if.then:                                          ; preds = %entry
  %call2 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.293, i64 0, i64 0)) #23, !dbg !10526
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call2) #22, !dbg !10528
  br label %if.end, !dbg !10529

if.else:                                          ; preds = %entry
  %3 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10530, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %3) #22, !dbg !10532
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10533
}

; Function Attrs: noinline nounwind uwtable
define internal void @moveCommand(%struct.redisClient* noundef %c) #0 !dbg !10534 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10536, metadata !DIExpression()), !dbg !10541
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10542
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10542, !tbaa !2890
  call void @llvm.dbg.value(metadata %struct.redisDb* %0, metadata !10538, metadata !DIExpression()), !dbg !10541
  %id = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 4, !dbg !10543
  %1 = load i32, i32* %id, align 8, !dbg !10543, !tbaa !4001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10540, metadata !DIExpression()), !dbg !10541
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10544
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10544, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 2, !dbg !10546
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10546, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !10547
  %4 = load i8*, i8** %ptr, align 8, !dbg !10547, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %4) #27, !dbg !10548
  %call2 = tail call i32 @selectDb(%struct.redisClient* noundef %c, i32 noundef %call) #22, !dbg !10549
  %cmp = icmp eq i32 %call2, -1, !dbg !10550
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10551

if.end:                                           ; preds = %entry
  %5 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10552, !tbaa !2890
  call void @llvm.dbg.value(metadata %struct.redisDb* %5, metadata !10539, metadata !DIExpression()), !dbg !10541
  %call4 = tail call i32 @selectDb(%struct.redisClient* noundef nonnull %c, i32 noundef %1) #22, !dbg !10553
  %cmp5 = icmp eq %struct.redisDb* %0, %5, !dbg !10554
  br i1 %cmp5, label %cleanup, label %if.end7, !dbg !10556

if.end7:                                          ; preds = %if.end
  %6 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10557, !tbaa !2890
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10558, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !10559
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx10, align 8, !dbg !10559, !tbaa !782
  %call11 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %6, %struct.redisObject* noundef %8) #22, !dbg !10560
  call void @llvm.dbg.value(metadata %struct.redisObject* %call11, metadata !10537, metadata !DIExpression()), !dbg !10541
  %tobool.not = icmp eq %struct.redisObject* %call11, null, !dbg !10561
  br i1 %tobool.not, label %cleanup, label %if.end13, !dbg !10563

if.end13:                                         ; preds = %if.end7
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10564, !tbaa !1352
  %arrayidx15 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 1, !dbg !10565
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx15, align 8, !dbg !10565, !tbaa !782
  %call16 = tail call i32 @deleteIfVolatile(%struct.redisDb* noundef %5, %struct.redisObject* noundef %10) #22, !dbg !10566
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 0, !dbg !10567
  %11 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10567, !tbaa !2353
  %12 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10569, !tbaa !1352
  %arrayidx18 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 1, !dbg !10570
  %13 = bitcast %struct.redisObject** %arrayidx18 to i8**, !dbg !10570
  %14 = load i8*, i8** %13, align 8, !dbg !10570, !tbaa !782
  %15 = bitcast %struct.redisObject* %call11 to i8*, !dbg !10571
  %call19 = tail call i32 @dictAdd(%struct.dict* noundef %11, i8* noundef %14, i8* noundef nonnull %15) #23, !dbg !10572
  %cmp20 = icmp eq i32 %call19, 1, !dbg !10573
  br i1 %cmp20, label %cleanup, label %if.end22, !dbg !10574

if.end22:                                         ; preds = %if.end13
  %16 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10575, !tbaa !1352
  %arrayidx24 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %16, i64 1, !dbg !10576
  %17 = load %struct.redisObject*, %struct.redisObject** %arrayidx24, align 8, !dbg !10576, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %17) #22, !dbg !10577
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %call11) #22, !dbg !10578
  %18 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10579, !tbaa !1352
  %arrayidx26 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %18, i64 1, !dbg !10580
  %19 = load %struct.redisObject*, %struct.redisObject** %arrayidx26, align 8, !dbg !10580, !tbaa !782
  %call27 = tail call i32 @deleteKey(%struct.redisDb* noundef nonnull %0, %struct.redisObject* noundef %19) #22, !dbg !10581
  %20 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10582, !tbaa !708
  %inc = add nsw i64 %20, 1, !dbg !10582
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10582, !tbaa !708
  br label %cleanup, !dbg !10583

cleanup:                                          ; preds = %if.end13, %if.end7, %if.end, %entry, %if.end22
  %.sink57 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), %if.end22 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 17), %entry ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), %if.end ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), %if.end7 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), %if.end13 ]
  %21 = load %struct.redisObject*, %struct.redisObject** %.sink57, align 8, !dbg !10541, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %21) #22, !dbg !10541
  ret void, !dbg !10583
}

; Function Attrs: noinline nounwind uwtable
define internal void @renameCommand(%struct.redisClient* noundef %c) #0 !dbg !10584 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10586, metadata !DIExpression()), !dbg !10587
  tail call void @renameGenericCommand(%struct.redisClient* noundef %c, i32 noundef 0) #22, !dbg !10588
  ret void, !dbg !10589
}

; Function Attrs: noinline nounwind uwtable
define internal void @renamenxCommand(%struct.redisClient* noundef %c) #0 !dbg !10590 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10592, metadata !DIExpression()), !dbg !10593
  tail call void @renameGenericCommand(%struct.redisClient* noundef %c, i32 noundef 1) #22, !dbg !10594
  ret void, !dbg !10595
}

; Function Attrs: noinline nounwind uwtable
define internal void @expireatCommand(%struct.redisClient* noundef %c) #0 !dbg !10596 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10598, metadata !DIExpression()), !dbg !10599
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10600
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10600, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10601
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10601, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !10602
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !10602, !tbaa !782
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !10603
  tail call void @expireGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2, i64 noundef %call) #22, !dbg !10604
  ret void, !dbg !10605
}

; Function Attrs: noinline nounwind uwtable
define internal void @keysCommand(%struct.redisClient* noundef %c) #0 !dbg !10606 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10608, metadata !DIExpression()), !dbg !10618
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10619
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10619, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10620
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10620, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !10621
  %2 = load i8*, i8** %ptr, align 8, !dbg !10621, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %2, metadata !10611, metadata !DIExpression()), !dbg !10618
  %call = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !10622
  %conv = trunc i64 %call to i32, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10612, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i64 0, metadata !10613, metadata !DIExpression()), !dbg !10618
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !10623
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !10614, metadata !DIExpression()), !dbg !10618
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10624
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10624, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 0, i32 0, !dbg !10625
  %4 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10625, !tbaa !2353
  %call2 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %4) #23, !dbg !10626
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call2, metadata !10609, metadata !DIExpression()), !dbg !10618
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call1) #22, !dbg !10627
  %5 = bitcast %struct.redisObject* %call1 to i8*, !dbg !10628
  tail call void @decrRefCount(i8* noundef %5) #22, !dbg !10629
  call void @llvm.dbg.value(metadata i64 0, metadata !10613, metadata !DIExpression()), !dbg !10618
  %call349 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call2) #23, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call349, metadata !10610, metadata !DIExpression()), !dbg !10618
  %cmp.not50 = icmp eq %struct.dictEntry* %call349, null, !dbg !10631
  br i1 %cmp.not50, label %while.end, label %while.body.lr.ph, !dbg !10632

while.body.lr.ph:                                 ; preds = %entry
  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 1
  br label %while.body, !dbg !10632

while.body:                                       ; preds = %while.body.lr.ph, %if.end23
  %call353 = phi %struct.dictEntry* [ %call349, %while.body.lr.ph ], [ %call3, %if.end23 ]
  %numkeys.051 = phi i64 [ 0, %while.body.lr.ph ], [ %numkeys.1, %if.end23 ]
  call void @llvm.dbg.value(metadata i64 %numkeys.051, metadata !10613, metadata !DIExpression()), !dbg !10618
  %6 = bitcast %struct.dictEntry* %call353 to %struct.redisObject**, !dbg !10633
  %7 = load %struct.redisObject*, %struct.redisObject** %6, align 8, !dbg !10633, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %7, metadata !10615, metadata !DIExpression()), !dbg !10634
  %ptr6 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 0, !dbg !10635
  %8 = load i8*, i8** %ptr6, align 8, !dbg !10635, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %8, metadata !10617, metadata !DIExpression()), !dbg !10634
  %9 = load i8, i8* %2, align 1, !dbg !10636, !tbaa !795
  %cmp9 = icmp eq i8 %9, 42, !dbg !10638
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false, !dbg !10639

land.lhs.true:                                    ; preds = %while.body
  %10 = load i8, i8* %arrayidx11, align 1, !dbg !10640, !tbaa !795
  %cmp13 = icmp eq i8 %10, 0, !dbg !10641
  br i1 %cmp13, label %if.then, label %lor.lhs.false, !dbg !10642

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %call15 = tail call i64 @sdslen(i8* noundef %8) #23, !dbg !10643
  %conv16 = trunc i64 %call15 to i32, !dbg !10643
  %call17 = tail call i32 @stringmatchlen(i8* noundef nonnull %2, i32 noundef %conv, i8* noundef %8, i32 noundef %conv16, i32 noundef 0) #22, !dbg !10644
  %tobool.not = icmp eq i32 %call17, 0, !dbg !10644
  br i1 %tobool.not, label %if.end23, label %if.then, !dbg !10645

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %11 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10646, !tbaa !2890
  %call19 = tail call i32 @expireIfNeeded(%struct.redisDb* noundef %11, %struct.redisObject* noundef nonnull %7) #22, !dbg !10649
  %cmp20 = icmp eq i32 %call19, 0, !dbg !10650
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10651

if.then22:                                        ; preds = %if.then
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %7) #22, !dbg !10652
  %inc = add i64 %numkeys.051, 1, !dbg !10654
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10613, metadata !DIExpression()), !dbg !10618
  br label %if.end23, !dbg !10655

if.end23:                                         ; preds = %if.then, %if.then22, %lor.lhs.false
  %numkeys.1 = phi i64 [ %inc, %if.then22 ], [ %numkeys.051, %if.then ], [ %numkeys.051, %lor.lhs.false ], !dbg !10618
  call void @llvm.dbg.value(metadata i64 %numkeys.1, metadata !10613, metadata !DIExpression()), !dbg !10618
  %call3 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call2) #23, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call3, metadata !10610, metadata !DIExpression()), !dbg !10618
  %cmp.not = icmp eq %struct.dictEntry* %call3, null, !dbg !10631
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !10632, !llvm.loop !10656

while.end:                                        ; preds = %if.end23, %entry
  %numkeys.0.lcssa = phi i64 [ 0, %entry ], [ %numkeys.1, %if.end23 ], !dbg !10618
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call2) #23, !dbg !10658
  %call24 = tail call i8* (...) @sdsempty() #23, !dbg !10659
  %call25 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call24, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i64 0, i64 0), i64 noundef %numkeys.0.lcssa) #23, !dbg !10660
  %ptr26 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call1, i64 0, i32 0, !dbg !10661
  store i8* %call25, i8** %ptr26, align 8, !dbg !10662, !tbaa !1328
  ret void, !dbg !10663
}

; Function Attrs: noinline nounwind uwtable
define internal void @dbsizeCommand(%struct.redisClient* noundef %c) #0 !dbg !10664 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10666, metadata !DIExpression()), !dbg !10667
  %call = tail call i8* (...) @sdsempty() #23, !dbg !10668
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10669
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10669, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !10669
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10669, !tbaa !2353
  %used = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 0, i32 3, !dbg !10669
  %2 = load i64, i64* %used, align 8, !dbg !10669, !tbaa !3545
  %used5 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 1, i32 3, !dbg !10669
  %3 = load i64, i64* %used5, align 8, !dbg !10669, !tbaa !3545
  %add = add i64 %3, %2, !dbg !10669
  %call6 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i64 0, i64 0), i64 noundef %add) #23, !dbg !10670
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call6) #22, !dbg !10671
  ret void, !dbg !10672
}

; Function Attrs: noinline nounwind uwtable
define internal void @pingCommand(%struct.redisClient* noundef %c) #0 !dbg !10673 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10675, metadata !DIExpression()), !dbg !10676
  %0 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 6), align 8, !dbg !10677, !tbaa !10678
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %0) #22, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: noinline nounwind uwtable
define internal void @echoCommand(%struct.redisClient* noundef %c) #0 !dbg !10681 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10683, metadata !DIExpression()), !dbg !10684
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10685
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10685, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !10686
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10686, !tbaa !782
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10687
  ret void, !dbg !10688
}

; Function Attrs: noinline nounwind uwtable
define internal void @saveCommand(%struct.redisClient* noundef %c) #0 !dbg !10689 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10691, metadata !DIExpression()), !dbg !10692
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !10693, !tbaa !732
  %cmp.not = icmp eq i32 %0, -1, !dbg !10695
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !10696

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.294, i64 0, i64 0)) #23, !dbg !10697
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call) #22, !dbg !10699
  br label %if.end4, !dbg !10700

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !10701, !tbaa !913
  %call1 = tail call i32 @rdbSave(i8* noundef %1) #22, !dbg !10703
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10704
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10705

if.then3:                                         ; preds = %if.end
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10706, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2) #22, !dbg !10708
  br label %if.end4, !dbg !10709

if.else:                                          ; preds = %if.end
  %3 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !10710, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3) #22, !dbg !10713
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !10714
}

; Function Attrs: noinline nounwind uwtable
define internal void @bgsaveCommand(%struct.redisClient* noundef %c) #0 !dbg !10715 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10717, metadata !DIExpression()), !dbg !10721
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !10722, !tbaa !732
  %cmp.not = icmp eq i32 %0, -1, !dbg !10724
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !10725

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.295, i64 0, i64 0)) #23, !dbg !10726
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call) #22, !dbg !10728
  br label %if.end5, !dbg !10729

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !10730, !tbaa !913
  %call1 = tail call i32 @rdbSaveBackground(i8* noundef %1) #22, !dbg !10731
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10732
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10733

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.296, i64 0, i64 0), metadata !10718, metadata !DIExpression()), !dbg !10734
  %call4 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.296, i64 0, i64 0)) #23, !dbg !10735
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call4) #22, !dbg !10736
  br label %if.end5, !dbg !10737

if.else:                                          ; preds = %if.end
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !10738, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2) #22, !dbg !10740
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !10741
}

; Function Attrs: noinline nounwind uwtable
define internal void @bgrewriteaofCommand(%struct.redisClient* noundef %c) #0 !dbg !10742 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10744, metadata !DIExpression()), !dbg !10748
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !10749, !tbaa !996
  %cmp.not = icmp eq i32 %0, -1, !dbg !10751
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !10752

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.297, i64 0, i64 0)) #23, !dbg !10753
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call) #22, !dbg !10755
  br label %if.end5, !dbg !10756

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @rewriteAppendOnlyFileBackground() #22, !dbg !10757
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10758
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10759

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.298, i64 0, i64 0), metadata !10745, metadata !DIExpression()), !dbg !10760
  %call4 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.298, i64 0, i64 0)) #23, !dbg !10761
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call4) #22, !dbg !10762
  br label %if.end5, !dbg !10763

if.else:                                          ; preds = %if.end
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !10764, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10766
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !10767
}

; Function Attrs: noinline nounwind uwtable
define internal void @shutdownCommand(%struct.redisClient* noundef %c) #0 !dbg !10768 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10770, metadata !DIExpression()), !dbg !10771
  %call = tail call i32 @prepareForShutdown() #22, !dbg !10772
  %cmp = icmp eq i32 %call, 0, !dbg !10774
  br i1 %cmp, label %if.then, label %if.end, !dbg !10775

if.then:                                          ; preds = %entry
  tail call void @exit(i32 noundef 0) #26, !dbg !10776
  unreachable, !dbg !10776

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.314, i64 0, i64 0)) #23, !dbg !10777
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call1) #22, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: noinline nounwind uwtable
define internal void @lastsaveCommand(%struct.redisClient* noundef %c) #0 !dbg !10780 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10782, metadata !DIExpression()), !dbg !10783
  %call = tail call i8* (...) @sdsempty() #23, !dbg !10784
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !10785, !tbaa !722
  %call1 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i64 0, i64 0), i64 noundef %0) #23, !dbg !10786
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call1) #22, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind uwtable
define internal void @typeCommand(%struct.redisClient* noundef %c) #0 !dbg !10789 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10791, metadata !DIExpression()), !dbg !10794
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10795
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10795, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !10796
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !10796, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !10797
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !10797, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !10798
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10792, metadata !DIExpression()), !dbg !10794
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !10799
  br i1 %cmp, label %if.end, label %if.else, !dbg !10801

if.else:                                          ; preds = %entry
  %type1 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !10802
  %3 = load i8, i8* %type1, align 8, !dbg !10802, !tbaa !1526
  %4 = icmp ult i8 %3, 5, !dbg !10804
  br i1 %4, label %switch.lookup, label %if.end, !dbg !10804

switch.lookup:                                    ; preds = %if.else
  %5 = sext i8 %3 to i64, !dbg !10804
  %switch.gep = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.typeCommand, i64 0, i64 %5, !dbg !10804
  %switch.load = load i8*, i8** %switch.gep, align 8, !dbg !10804
  br label %if.end, !dbg !10804

if.end:                                           ; preds = %if.else, %switch.lookup, %entry
  %type.0 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.320, i64 0, i64 0), %entry ], [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.326, i64 0, i64 0), %if.else ], !dbg !10805
  call void @llvm.dbg.value(metadata i8* %type.0, metadata !10793, metadata !DIExpression()), !dbg !10794
  %call6 = tail call i8* @sdsnew(i8* noundef nonnull %type.0) #23, !dbg !10806
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call6) #22, !dbg !10807
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !10808, !tbaa !4163
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind uwtable
define internal void @multiCommand(%struct.redisClient* noundef %c) #0 !dbg !10811 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10813, metadata !DIExpression()), !dbg !10814
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !10815
  %0 = load i32, i32* %flags, align 8, !dbg !10816, !tbaa !1402
  %or = or i32 %0, 8, !dbg !10816
  store i32 %or, i32* %flags, align 8, !dbg !10816, !tbaa !1402
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10817, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: noinline nounwind uwtable
define internal void @execBlockClientOnSwappedKeys(%struct.redisClient* noundef %c, %struct.redisCommand* nocapture noundef readnone %cmd, i32 noundef %argc, %struct.redisObject** nocapture noundef readnone %argv) #0 !dbg !10820 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10822, metadata !DIExpression()), !dbg !10830
  call void @llvm.dbg.value(metadata %struct.redisCommand* %cmd, metadata !10823, metadata !DIExpression()), !dbg !10830
  call void @llvm.dbg.value(metadata i32 %argc, metadata !10824, metadata !DIExpression()), !dbg !10830
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !10825, metadata !DIExpression()), !dbg !10830
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !10831
  %0 = load i32, i32* %flags, align 8, !dbg !10831, !tbaa !1402
  %and = and i32 %0, 8, !dbg !10833
  %tobool.not = icmp eq i32 %and, 0, !dbg !10833
  br i1 %tobool.not, label %cleanup, label %for.cond.preheader, !dbg !10834

for.cond.preheader:                               ; preds = %entry
  %count = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 1
  call void @llvm.dbg.value(metadata i32 0, metadata !10826, metadata !DIExpression()), !dbg !10830
  %1 = load i32, i32* %count, align 8, !dbg !10835, !tbaa !3107
  %cmp39 = icmp sgt i32 %1, 0, !dbg !10838
  br i1 %cmp39, label %for.body.lr.ph, label %cleanup, !dbg !10839

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %commands = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 20, i32 0
  br label %for.body, !dbg !10839

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10826, metadata !DIExpression()), !dbg !10830
  %2 = load %struct.multiCmd*, %struct.multiCmd** %commands, align 8, !dbg !10840, !tbaa !3111
  %cmd2 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %2, i64 %indvars.iv, i32 2, !dbg !10842
  %3 = load %struct.redisCommand*, %struct.redisCommand** %cmd2, align 8, !dbg !10842, !tbaa !3842
  call void @llvm.dbg.value(metadata %struct.redisCommand* %3, metadata !10828, metadata !DIExpression()), !dbg !10830
  %argc7 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %2, i64 %indvars.iv, i32 1, !dbg !10843
  %4 = load i32, i32* %argc7, align 8, !dbg !10843, !tbaa !3117
  call void @llvm.dbg.value(metadata i32 %4, metadata !10827, metadata !DIExpression()), !dbg !10830
  %argv12 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %2, i64 %indvars.iv, i32 0, !dbg !10844
  %5 = load %struct.redisObject**, %struct.redisObject*** %argv12, align 8, !dbg !10844, !tbaa !3122
  call void @llvm.dbg.value(metadata %struct.redisObject** %5, metadata !10829, metadata !DIExpression()), !dbg !10830
  %vm_preload_proc = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %3, i64 0, i32 4, !dbg !10845
  %6 = load void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)*, void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)** %vm_preload_proc, align 8, !dbg !10845, !tbaa !3963
  %cmp13.not = icmp eq void (%struct.redisClient*, %struct.redisCommand*, i32, %struct.redisObject**)* %6, null, !dbg !10847
  br i1 %cmp13.not, label %if.else, label %if.then14, !dbg !10848

if.then14:                                        ; preds = %for.body
  tail call void %6(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef nonnull %3, i32 noundef %4, %struct.redisObject** noundef %5) #23, !dbg !10849
  br label %for.inc, !dbg !10851

if.else:                                          ; preds = %for.body
  tail call void @waitForMultipleSwappedKeys(%struct.redisClient* noundef nonnull %c, %struct.redisCommand* noundef nonnull %3, i32 noundef %4, %struct.redisObject** noundef %5) #22, !dbg !10852
  br label %for.inc

for.inc:                                          ; preds = %if.then14, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10854
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !10826, metadata !DIExpression()), !dbg !10830
  %7 = load i32, i32* %count, align 8, !dbg !10835, !tbaa !3107
  %8 = sext i32 %7 to i64, !dbg !10838
  %cmp = icmp slt i64 %indvars.iv.next, %8, !dbg !10838
  br i1 %cmp, label %for.body, label %cleanup, !dbg !10839, !llvm.loop !10855

cleanup:                                          ; preds = %for.inc, %for.cond.preheader, %entry
  ret void, !dbg !10857
}

; Function Attrs: noinline nounwind uwtable
define internal void @syncCommand(%struct.redisClient* noundef %c) #0 !dbg !10858 {
entry:
  %li = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10860, metadata !DIExpression()), !dbg !10866
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !10867
  %0 = load i32, i32* %flags, align 8, !dbg !10867, !tbaa !1402
  %and = and i32 %0, 1, !dbg !10869
  %tobool.not = icmp eq i32 %and, 0, !dbg !10869
  br i1 %tobool.not, label %if.end, label %return, !dbg !10870

if.end:                                           ; preds = %entry
  %reply = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 10, !dbg !10871
  %1 = load %struct.list*, %struct.list** %reply, align 8, !dbg !10871, !tbaa !1357
  %len = getelementptr inbounds %struct.list, %struct.list* %1, i64 0, i32 5, !dbg !10871
  %2 = load i32, i32* %len, align 8, !dbg !10871, !tbaa !1358
  %cmp.not = icmp eq i32 %2, 0, !dbg !10873
  br i1 %cmp.not, label %if.end2, label %if.then1, !dbg !10874

if.then1:                                         ; preds = %if.end
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.327, i64 0, i64 0)) #23, !dbg !10875
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call) #22, !dbg !10877
  br label %return, !dbg !10878

if.end2:                                          ; preds = %if.end
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.328, i64 0, i64 0)) #22, !dbg !10879
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !10880, !tbaa !732
  %cmp3.not = icmp eq i32 %3, -1, !dbg !10881
  br i1 %cmp3.not, label %if.else19, label %if.then4, !dbg !10882

if.then4:                                         ; preds = %if.end2
  %4 = bitcast %struct.listIter* %li to i8*, !dbg !10883
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #24, !dbg !10883
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !10865, metadata !DIExpression()), !dbg !10884
  %5 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !10885, !tbaa !886
  call void @listRewind(%struct.list* noundef %5, %struct.listIter* noundef nonnull %li) #23, !dbg !10886
  br label %while.cond, !dbg !10887

while.cond:                                       ; preds = %while.body, %if.then4
  call void @llvm.dbg.value(metadata %struct.redisClient* undef, metadata !10861, metadata !DIExpression()), !dbg !10888
  %call5 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !10889
  call void @llvm.dbg.value(metadata %struct.listNode* %call5, metadata !10864, metadata !DIExpression()), !dbg !10888
  %tobool6.not = icmp eq %struct.listNode* %call5, null, !dbg !10887
  br i1 %tobool6.not, label %if.end18, label %while.body, !dbg !10887

while.body:                                       ; preds = %while.cond
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call5, i64 0, i32 2, !dbg !10890
  %6 = bitcast i8** %value to %struct.redisClient**, !dbg !10890
  %7 = load %struct.redisClient*, %struct.redisClient** %6, align 8, !dbg !10890, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %7, metadata !10861, metadata !DIExpression()), !dbg !10888
  %replstate = getelementptr inbounds %struct.redisClient, %struct.redisClient* %7, i64 0, i32 16, !dbg !10892
  %8 = load i32, i32* %replstate, align 4, !dbg !10892, !tbaa !896
  %cmp7 = icmp eq i32 %8, 4, !dbg !10894
  br i1 %cmp7, label %if.then11, label %while.cond, !dbg !10895, !llvm.loop !10896

if.then11:                                        ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.redisClient* %7, metadata !10861, metadata !DIExpression()), !dbg !10888
  %9 = load %struct.list*, %struct.list** %reply, align 8, !dbg !10898, !tbaa !1357
  call void @listRelease(%struct.list* noundef %9) #23, !dbg !10901
  %reply13 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %7, i64 0, i32 10, !dbg !10902
  %10 = load %struct.list*, %struct.list** %reply13, align 8, !dbg !10902, !tbaa !1357
  %call14 = call %struct.list* @listDup(%struct.list* noundef %10) #23, !dbg !10903
  store %struct.list* %call14, %struct.list** %reply, align 8, !dbg !10904, !tbaa !1357
  br label %if.end18, !dbg !10905

if.end18:                                         ; preds = %while.cond, %if.then11
  %.sink46 = phi i32 [ 4, %if.then11 ], [ 3, %while.cond ]
  %.sink = phi i8* [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.329, i64 0, i64 0), %if.then11 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.330, i64 0, i64 0), %while.cond ]
  %replstate17 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 16, !dbg !10906
  store i32 %.sink46, i32* %replstate17, align 4, !dbg !10906, !tbaa !896
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef %.sink) #22, !dbg !10906
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #24, !dbg !10907
  br label %if.end26, !dbg !10908

if.else19:                                        ; preds = %if.end2
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.331, i64 0, i64 0)) #22, !dbg !10909
  %11 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !10911, !tbaa !913
  %call20 = tail call i32 @rdbSaveBackground(i8* noundef %11) #22, !dbg !10913
  %cmp21.not = icmp eq i32 %call20, 0, !dbg !10914
  br i1 %cmp21.not, label %if.end24, label %if.then22, !dbg !10915

if.then22:                                        ; preds = %if.else19
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.332, i64 0, i64 0)) #22, !dbg !10916
  %call23 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.333, i64 0, i64 0)) #23, !dbg !10918
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call23) #22, !dbg !10919
  br label %return, !dbg !10920

if.end24:                                         ; preds = %if.else19
  %replstate25 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 16, !dbg !10921
  store i32 4, i32* %replstate25, align 4, !dbg !10922, !tbaa !896
  br label %if.end26

if.end26:                                         ; preds = %if.end24, %if.end18
  %repldbfd = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 17, !dbg !10923
  store i32 -1, i32* %repldbfd, align 8, !dbg !10924, !tbaa !917
  %12 = load i32, i32* %flags, align 8, !dbg !10925, !tbaa !1402
  %or = or i32 %12, 1, !dbg !10925
  store i32 %or, i32* %flags, align 8, !dbg !10925, !tbaa !1402
  %slaveseldb = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 14, !dbg !10926
  store i32 0, i32* %slaveseldb, align 4, !dbg !10927, !tbaa !4700
  %13 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !10928, !tbaa !886
  %14 = bitcast %struct.redisClient* %c to i8*, !dbg !10929
  %call28 = call %struct.list* @listAddNodeTail(%struct.list* noundef %13, i8* noundef %14) #23, !dbg !10930
  br label %return, !dbg !10931

return:                                           ; preds = %entry, %if.end26, %if.then22, %if.then1
  ret void, !dbg !10932
}

; Function Attrs: noinline nounwind uwtable
define internal void @flushdbCommand(%struct.redisClient* noundef %c) #0 !dbg !10933 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10935, metadata !DIExpression()), !dbg !10936
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !10937
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10937, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 0, !dbg !10937
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !10937, !tbaa !2353
  %used = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 0, i32 3, !dbg !10937
  %2 = load i64, i64* %used, align 8, !dbg !10937, !tbaa !3545
  %used5 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 1, i32 3, !dbg !10937
  %3 = load i64, i64* %used5, align 8, !dbg !10937, !tbaa !3545
  %add = add i64 %3, %2, !dbg !10937
  %4 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10938, !tbaa !708
  %add6 = add i64 %add, %4, !dbg !10938
  store i64 %add6, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10938, !tbaa !708
  tail call void @dictEmpty(%struct.dict* noundef %1) #23, !dbg !10939
  %5 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !10940, !tbaa !2890
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 1, !dbg !10941
  %6 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !10941, !tbaa !3635
  tail call void @dictEmpty(%struct.dict* noundef %6) #23, !dbg !10942
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10943, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %7) #22, !dbg !10944
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind uwtable
define internal void @flushallCommand(%struct.redisClient* noundef %c) #0 !dbg !10946 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10948, metadata !DIExpression()), !dbg !10949
  %call = tail call fastcc i64 @emptyDb() #22, !dbg !10950
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10951, !tbaa !708
  %add = add nsw i64 %0, %call, !dbg !10951
  store i64 %add, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10951, !tbaa !708
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10952, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !10953
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !10954, !tbaa !732
  %cmp.not = icmp eq i32 %2, -1, !dbg !10956
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !10957

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @kill(i32 noundef %2, i32 noundef 9) #23, !dbg !10958
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !10960, !tbaa !732
  tail call void @rdbRemoveTempFile(i32 noundef %3) #22, !dbg !10961
  br label %if.end, !dbg !10962

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !10963, !tbaa !913
  %call2 = tail call i32 @rdbSave(i8* noundef %4) #22, !dbg !10964
  %5 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10965, !tbaa !708
  %inc = add nsw i64 %5, 1, !dbg !10965
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !10965, !tbaa !708
  ret void, !dbg !10966
}

; Function Attrs: noinline nounwind uwtable
define internal void @sortCommand(%struct.redisClient* noundef %c) #0 !dbg !10967 {
entry:
  %li = alloca %struct.listIter, align 8
  %li338 = alloca %struct.listIter, align 8
  %li383 = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !10969, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10971, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10972, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10973, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10974, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 -1, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !10983, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !10984, metadata !DIExpression()), !dbg !11045
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11046
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11046, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11047
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11047, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !11048
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11048, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !11049
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !10982, metadata !DIExpression()), !dbg !11045
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !11050
  br i1 %cmp, label %if.then, label %if.end, !dbg !11052

if.then:                                          ; preds = %entry
  %3 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !11053, !tbaa !9109
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %3) #22, !dbg !11055
  br label %cleanup462, !dbg !11056

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !11057
  %4 = load i8, i8* %type, align 8, !dbg !11057, !tbaa !1526
  %.off = add i8 %4, -1, !dbg !11059
  %switch = icmp ult i8 %.off, 3, !dbg !11059
  br i1 %switch, label %if.end13, label %if.then12, !dbg !11059

if.then12:                                        ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !11060, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !11062
  br label %cleanup462, !dbg !11063

if.end13:                                         ; preds = %if.end
  %call14 = tail call %struct.list* @listCreate() #23, !dbg !11064
  call void @llvm.dbg.value(metadata %struct.list* %call14, metadata !10970, metadata !DIExpression()), !dbg !11045
  %free = getelementptr inbounds %struct.list, %struct.list* %call14, i64 0, i32 3, !dbg !11065
  store void (i8*)* @zfree, void (i8*)** %free, align 8, !dbg !11065, !tbaa !1459
  call void @llvm.dbg.value(metadata i32 2, metadata !10978, metadata !DIExpression()), !dbg !11045
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %call) #22, !dbg !11066
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6
  call void @llvm.dbg.value(metadata i32 0, metadata !10972, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10973, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10974, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 -1, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 2, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !10983, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !10984, metadata !DIExpression()), !dbg !11045
  %6 = load i32, i32* %argc, align 8, !dbg !11067, !tbaa !1350
  %cmp15729 = icmp sgt i32 %6, 2, !dbg !11068
  br i1 %cmp15729, label %while.body, label %while.end, !dbg !11069

while.body:                                       ; preds = %if.end13, %cleanup
  %7 = phi i32 [ %23, %cleanup ], [ %6, %if.end13 ]
  %desc.0738 = phi i32 [ %desc.1, %cleanup ], [ 0, %if.end13 ]
  %alpha.0737 = phi i32 [ %alpha.1, %cleanup ], [ 0, %if.end13 ]
  %limit_start.0736 = phi i32 [ %limit_start.1, %cleanup ], [ 0, %if.end13 ]
  %limit_count.0735 = phi i32 [ %limit_count.1, %cleanup ], [ -1, %if.end13 ]
  %j.0734 = phi i32 [ %inc129, %cleanup ], [ 2, %if.end13 ]
  %dontsort.0733 = phi i32 [ %dontsort.2, %cleanup ], [ 0, %if.end13 ]
  %getop.0732 = phi i32 [ %getop.1, %cleanup ], [ 0, %if.end13 ]
  %sortby.0731 = phi %struct.redisObject* [ %sortby.1, %cleanup ], [ null, %if.end13 ]
  %storekey.0730 = phi %struct.redisObject* [ %storekey.1, %cleanup ], [ null, %if.end13 ]
  call void @llvm.dbg.value(metadata i32 %desc.0738, metadata !10972, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %alpha.0737, metadata !10973, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %limit_start.0736, metadata !10974, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %limit_count.0735, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %j.0734, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %dontsort.0733, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %getop.0732, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* %sortby.0731, metadata !10983, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* %storekey.0730, metadata !10984, metadata !DIExpression()), !dbg !11045
  %8 = xor i32 %j.0734, -1, !dbg !11070
  %sub18 = add i32 %7, %8, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %sub18, metadata !10996, metadata !DIExpression()), !dbg !11071
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11072, !tbaa !1352
  %idxprom = sext i32 %j.0734 to i64, !dbg !11074
  %arrayidx20 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom, !dbg !11074
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx20, align 8, !dbg !11074, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !11075
  %11 = load i8*, i8** %ptr, align 8, !dbg !11075, !tbaa !1328
  %call21 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.334, i64 0, i64 0)) #27, !dbg !11076
  %tobool.not = icmp eq i32 %call21, 0, !dbg !11076
  br i1 %tobool.not, label %cleanup, label %if.else, !dbg !11077

if.else:                                          ; preds = %while.body
  %call27 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0)) #27, !dbg !11078
  %tobool28.not = icmp eq i32 %call27, 0, !dbg !11078
  br i1 %tobool28.not, label %cleanup, label %if.else30, !dbg !11080

if.else30:                                        ; preds = %if.else
  %call35 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0)) #27, !dbg !11081
  %tobool36.not = icmp eq i32 %call35, 0, !dbg !11081
  br i1 %tobool36.not, label %cleanup, label %if.else38, !dbg !11083

if.else38:                                        ; preds = %if.else30
  %call43 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i64 0, i64 0)) #27, !dbg !11084
  %tobool44 = icmp eq i32 %call43, 0, !dbg !11084
  %cmp46 = icmp sgt i32 %sub18, 1
  %or.cond = select i1 %tobool44, i1 %cmp46, i1 false, !dbg !11086
  br i1 %or.cond, label %if.then48, label %if.else61, !dbg !11086

if.then48:                                        ; preds = %if.else38
  %add = add nsw i32 %j.0734, 1, !dbg !11087
  %idxprom50 = sext i32 %add to i64, !dbg !11089
  %arrayidx51 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom50, !dbg !11089
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx51, align 8, !dbg !11089, !tbaa !782
  %ptr52 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 0, !dbg !11090
  %13 = load i8*, i8** %ptr52, align 8, !dbg !11090, !tbaa !1328
  %call53 = tail call i32 @atoi(i8* noundef %13) #27, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %call53, metadata !10974, metadata !DIExpression()), !dbg !11045
  %add55 = add nsw i32 %j.0734, 2, !dbg !11092
  %idxprom56 = sext i32 %add55 to i64, !dbg !11093
  %arrayidx57 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom56, !dbg !11093
  %14 = load %struct.redisObject*, %struct.redisObject** %arrayidx57, align 8, !dbg !11093, !tbaa !782
  %ptr58 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %14, i64 0, i32 0, !dbg !11094
  %15 = load i8*, i8** %ptr58, align 8, !dbg !11094, !tbaa !1328
  %call59 = tail call i32 @atoi(i8* noundef %15) #27, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %call59, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %add55, metadata !10978, metadata !DIExpression()), !dbg !11045
  br label %cleanup, !dbg !11096

if.else61:                                        ; preds = %if.else38
  %call66 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.337, i64 0, i64 0)) #27, !dbg !11097
  %tobool67 = icmp eq i32 %call66, 0, !dbg !11097
  %cmp69 = icmp sgt i32 %sub18, 0
  %or.cond481 = select i1 %tobool67, i1 %cmp69, i1 false, !dbg !11099
  br i1 %or.cond481, label %if.then71, label %if.else76, !dbg !11099

if.then71:                                        ; preds = %if.else61
  %add73 = add nsw i32 %j.0734, 1, !dbg !11100
  %idxprom74 = sext i32 %add73 to i64, !dbg !11102
  %arrayidx75 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom74, !dbg !11102
  %16 = load %struct.redisObject*, %struct.redisObject** %arrayidx75, align 8, !dbg !11102, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.redisObject* %16, metadata !10984, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %add73, metadata !10978, metadata !DIExpression()), !dbg !11045
  br label %cleanup, !dbg !11103

if.else76:                                        ; preds = %if.else61
  %call81 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.338, i64 0, i64 0)) #27, !dbg !11104
  %tobool82 = icmp eq i32 %call81, 0, !dbg !11104
  %or.cond482 = select i1 %tobool82, i1 %cmp69, i1 false, !dbg !11106
  br i1 %or.cond482, label %if.then86, label %if.else102, !dbg !11106

if.then86:                                        ; preds = %if.else76
  %add88 = add nsw i32 %j.0734, 1, !dbg !11107
  %idxprom89 = sext i32 %add88 to i64, !dbg !11109
  %arrayidx90 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom89, !dbg !11109
  %17 = load %struct.redisObject*, %struct.redisObject** %arrayidx90, align 8, !dbg !11109, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !10983, metadata !DIExpression()), !dbg !11045
  %ptr95 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %17, i64 0, i32 0, !dbg !11110
  %18 = load i8*, i8** %ptr95, align 8, !dbg !11110, !tbaa !1328
  %call96 = tail call i8* @strchr(i8* noundef %18, i32 noundef 42) #27, !dbg !11112
  %cmp97 = icmp eq i8* %call96, null, !dbg !11113
  %spec.select = select i1 %cmp97, i32 1, i32 %dontsort.0733, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %add88, metadata !10978, metadata !DIExpression()), !dbg !11045
  br label %cleanup, !dbg !11115

if.else102:                                       ; preds = %if.else76
  %call107 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i64 0, i64 0)) #27, !dbg !11116
  %tobool108 = icmp eq i32 %call107, 0, !dbg !11116
  %or.cond483 = select i1 %tobool108, i1 %cmp69, i1 false, !dbg !11118
  br i1 %or.cond483, label %if.then112, label %cleanup.thread, !dbg !11118

if.then112:                                       ; preds = %if.else102
  %add114 = add nsw i32 %j.0734, 1, !dbg !11119
  %idxprom115 = sext i32 %add114 to i64, !dbg !11121
  %arrayidx116 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom115, !dbg !11121
  %19 = load %struct.redisObject*, %struct.redisObject** %arrayidx116, align 8, !dbg !11121, !tbaa !782
  %call117 = tail call %struct._redisSortOperation* @createSortOperation(i32 noundef 0, %struct.redisObject* noundef %19) #22, !dbg !11122
  %20 = bitcast %struct._redisSortOperation* %call117 to i8*, !dbg !11122
  %call118 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %call14, i8* noundef %20) #23, !dbg !11123
  %inc119 = add nsw i32 %getop.0732, 1, !dbg !11124
  call void @llvm.dbg.value(metadata i32 %inc119, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %add114, metadata !10978, metadata !DIExpression()), !dbg !11045
  %.pre = load i32, i32* %argc, align 8, !dbg !11067, !tbaa !1350
  br label %cleanup

cleanup.thread:                                   ; preds = %if.else102
  %21 = bitcast %struct.redisObject* %call to i8*, !dbg !11125
  tail call void @decrRefCount(i8* noundef nonnull %21) #22, !dbg !11127
  tail call void @listRelease(%struct.list* noundef %call14) #23, !dbg !11128
  %22 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !11129, !tbaa !11130
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %22) #22, !dbg !11131
  call void @llvm.dbg.value(metadata i32 undef, metadata !10972, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10973, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10974, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %inc129, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* undef, metadata !10983, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* undef, metadata !10984, metadata !DIExpression()), !dbg !11045
  br label %cleanup462

cleanup:                                          ; preds = %if.then71, %if.then112, %if.then86, %if.then48, %while.body, %if.else, %if.else30
  %23 = phi i32 [ %7, %if.then48 ], [ %7, %if.then71 ], [ %7, %if.then86 ], [ %.pre, %if.then112 ], [ %7, %while.body ], [ %7, %if.else ], [ %7, %if.else30 ], !dbg !11067
  %storekey.1 = phi %struct.redisObject* [ %storekey.0730, %if.then48 ], [ %16, %if.then71 ], [ %storekey.0730, %if.then86 ], [ %storekey.0730, %if.then112 ], [ %storekey.0730, %while.body ], [ %storekey.0730, %if.else ], [ %storekey.0730, %if.else30 ], !dbg !11045
  %sortby.1 = phi %struct.redisObject* [ %sortby.0731, %if.then48 ], [ %sortby.0731, %if.then71 ], [ %17, %if.then86 ], [ %sortby.0731, %if.then112 ], [ %sortby.0731, %while.body ], [ %sortby.0731, %if.else ], [ %sortby.0731, %if.else30 ], !dbg !11045
  %getop.1 = phi i32 [ %getop.0732, %if.then48 ], [ %getop.0732, %if.then71 ], [ %getop.0732, %if.then86 ], [ %inc119, %if.then112 ], [ %getop.0732, %while.body ], [ %getop.0732, %if.else ], [ %getop.0732, %if.else30 ], !dbg !11045
  %dontsort.2 = phi i32 [ %dontsort.0733, %if.then48 ], [ %dontsort.0733, %if.then71 ], [ %spec.select, %if.then86 ], [ %dontsort.0733, %if.then112 ], [ %dontsort.0733, %while.body ], [ %dontsort.0733, %if.else ], [ %dontsort.0733, %if.else30 ], !dbg !11045
  %j.1 = phi i32 [ %add55, %if.then48 ], [ %add73, %if.then71 ], [ %add88, %if.then86 ], [ %add114, %if.then112 ], [ %j.0734, %while.body ], [ %j.0734, %if.else ], [ %j.0734, %if.else30 ], !dbg !11045
  %limit_count.1 = phi i32 [ %call59, %if.then48 ], [ %limit_count.0735, %if.then71 ], [ %limit_count.0735, %if.then86 ], [ %limit_count.0735, %if.then112 ], [ %limit_count.0735, %while.body ], [ %limit_count.0735, %if.else ], [ %limit_count.0735, %if.else30 ], !dbg !11045
  %limit_start.1 = phi i32 [ %call53, %if.then48 ], [ %limit_start.0736, %if.then71 ], [ %limit_start.0736, %if.then86 ], [ %limit_start.0736, %if.then112 ], [ %limit_start.0736, %while.body ], [ %limit_start.0736, %if.else ], [ %limit_start.0736, %if.else30 ], !dbg !11045
  %alpha.1 = phi i32 [ %alpha.0737, %if.then48 ], [ %alpha.0737, %if.then71 ], [ %alpha.0737, %if.then86 ], [ %alpha.0737, %if.then112 ], [ %alpha.0737, %while.body ], [ %alpha.0737, %if.else ], [ 1, %if.else30 ], !dbg !11045
  %desc.1 = phi i32 [ %desc.0738, %if.then48 ], [ %desc.0738, %if.then71 ], [ %desc.0738, %if.then86 ], [ %desc.0738, %if.then112 ], [ 0, %while.body ], [ 1, %if.else ], [ %desc.0738, %if.else30 ], !dbg !11045
  call void @llvm.dbg.value(metadata i32 %desc.1, metadata !10972, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %alpha.1, metadata !10973, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %limit_start.1, metadata !10974, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %limit_count.1, metadata !10975, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %dontsort.2, metadata !10979, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %getop.1, metadata !10981, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* %sortby.1, metadata !10983, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata %struct.redisObject* %storekey.1, metadata !10984, metadata !DIExpression()), !dbg !11045
  %inc129 = add nsw i32 %j.1, 1, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %inc129, metadata !10978, metadata !DIExpression()), !dbg !11045
  %cmp15 = icmp sgt i32 %23, %inc129, !dbg !11068
  br i1 %cmp15, label %while.body, label %while.end, !dbg !11069, !llvm.loop !11133

while.end:                                        ; preds = %cleanup, %if.end13
  %storekey.0.lcssa = phi %struct.redisObject* [ null, %if.end13 ], [ %storekey.1, %cleanup ], !dbg !11135
  %sortby.0.lcssa = phi %struct.redisObject* [ null, %if.end13 ], [ %sortby.1, %cleanup ], !dbg !11136
  %getop.0.lcssa = phi i32 [ 0, %if.end13 ], [ %getop.1, %cleanup ], !dbg !11137
  %dontsort.0.lcssa = phi i32 [ 0, %if.end13 ], [ %dontsort.2, %cleanup ], !dbg !11138
  %limit_count.0.lcssa = phi i32 [ -1, %if.end13 ], [ %limit_count.1, %cleanup ], !dbg !11045
  %limit_start.0.lcssa = phi i32 [ 0, %if.end13 ], [ %limit_start.1, %cleanup ], !dbg !11045
  %alpha.0.lcssa = phi i32 [ 0, %if.end13 ], [ %alpha.1, %cleanup ], !dbg !11139
  %desc.0.lcssa = phi i32 [ 0, %if.end13 ], [ %desc.1, %cleanup ], !dbg !11140
  %24 = load i8, i8* %type, align 8, !dbg !11141, !tbaa !1526
  switch i8 %24, label %sw.default [
    i8 1, label %sw.bb
    i8 2, label %sw.bb133
    i8 3, label %sw.bb142
  ], !dbg !11142

sw.bb:                                            ; preds = %while.end
  %25 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !11143
  %26 = load %struct.list*, %struct.list** %25, align 8, !dbg !11143, !tbaa !1328
  %len = getelementptr inbounds %struct.list, %struct.list* %26, i64 0, i32 5, !dbg !11143
  %27 = load i32, i32* %len, align 8, !dbg !11143, !tbaa !1358
  call void @llvm.dbg.value(metadata i32 %27, metadata !10980, metadata !DIExpression()), !dbg !11045
  br label %sw.epilog, !dbg !11145

sw.bb133:                                         ; preds = %while.end
  %28 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !11146
  %29 = load %struct.dict*, %struct.dict** %28, align 8, !dbg !11146, !tbaa !1328
  %used = getelementptr inbounds %struct.dict, %struct.dict* %29, i64 0, i32 2, i64 0, i32 3, !dbg !11146
  %30 = load i64, i64* %used, align 8, !dbg !11146, !tbaa !3545
  %used139 = getelementptr inbounds %struct.dict, %struct.dict* %29, i64 0, i32 2, i64 1, i32 3, !dbg !11146
  %31 = load i64, i64* %used139, align 8, !dbg !11146, !tbaa !3545
  %add140 = add i64 %31, %30, !dbg !11146
  %conv141 = trunc i64 %add140 to i32, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %conv141, metadata !10980, metadata !DIExpression()), !dbg !11045
  br label %sw.epilog, !dbg !11147

sw.bb142:                                         ; preds = %while.end
  %32 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !11148
  %33 = load %struct.zset*, %struct.zset** %32, align 8, !dbg !11148, !tbaa !1328
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %33, i64 0, i32 0, !dbg !11148
  %34 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !11148, !tbaa !6133
  %used146 = getelementptr inbounds %struct.dict, %struct.dict* %34, i64 0, i32 2, i64 0, i32 3, !dbg !11148
  %35 = load i64, i64* %used146, align 8, !dbg !11148, !tbaa !3545
  %used151 = getelementptr inbounds %struct.dict, %struct.dict* %34, i64 0, i32 2, i64 1, i32 3, !dbg !11148
  %36 = load i64, i64* %used151, align 8, !dbg !11148, !tbaa !3545
  %add152 = add i64 %36, %35, !dbg !11148
  %conv153 = trunc i64 %add152 to i32, !dbg !11148
  call void @llvm.dbg.value(metadata i32 %conv153, metadata !10980, metadata !DIExpression()), !dbg !11045
  br label %sw.epilog, !dbg !11149

sw.default:                                       ; preds = %while.end
  call void @llvm.dbg.value(metadata i32 0, metadata !10980, metadata !DIExpression()), !dbg !11045
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.339, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7027) #22, !dbg !11150
  tail call void @_exit(i32 noundef 1) #26, !dbg !11150
  unreachable, !dbg !11150

sw.epilog:                                        ; preds = %sw.bb142, %sw.bb133, %sw.bb
  %vectorlen.0 = phi i32 [ %conv153, %sw.bb142 ], [ %conv141, %sw.bb133 ], [ %27, %sw.bb ], !dbg !11151
  call void @llvm.dbg.value(metadata i32 %vectorlen.0, metadata !10980, metadata !DIExpression()), !dbg !11045
  %conv154 = sext i32 %vectorlen.0 to i64, !dbg !11152
  %mul = shl nsw i64 %conv154, 4, !dbg !11153
  %call155 = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !11154
  %37 = bitcast i8* %call155 to %struct._redisSortObject*, !dbg !11154
  call void @llvm.dbg.value(metadata %struct._redisSortObject* %37, metadata !10985, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !10978, metadata !DIExpression()), !dbg !11045
  %38 = load i8, i8* %type, align 8, !dbg !11155, !tbaa !1526
  switch i8 %38, label %if.else182 [
    i8 1, label %if.then160
    i8 2, label %if.then180
  ], !dbg !11156

if.then160:                                       ; preds = %sw.epilog
  %39 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !11157
  %40 = load %struct.list*, %struct.list** %39, align 8, !dbg !11157, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %40, metadata !10998, metadata !DIExpression()), !dbg !11158
  %41 = bitcast %struct.listIter* %li to i8*, !dbg !11159
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #24, !dbg !11159
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !11002, metadata !DIExpression()), !dbg !11160
  call void @listRewind(%struct.list* noundef %40, %struct.listIter* noundef nonnull %li) #23, !dbg !11161
  call void @llvm.dbg.value(metadata i32 0, metadata !10978, metadata !DIExpression()), !dbg !11045
  %call163746 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !11162
  call void @llvm.dbg.value(metadata %struct.listNode* %call163746, metadata !11001, metadata !DIExpression()), !dbg !11158
  %tobool164.not747 = icmp eq %struct.listNode* %call163746, null, !dbg !11163
  br i1 %tobool164.not747, label %while.end174, label %while.body165, !dbg !11163

while.body165:                                    ; preds = %if.then160, %while.body165
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body165 ], [ 0, %if.then160 ]
  %call163749 = phi %struct.listNode* [ %call163, %while.body165 ], [ %call163746, %if.then160 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10978, metadata !DIExpression()), !dbg !11045
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call163749, i64 0, i32 2, !dbg !11164
  %42 = bitcast i8** %value to %struct.redisObject**, !dbg !11164
  %43 = load %struct.redisObject*, %struct.redisObject** %42, align 8, !dbg !11164, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %43, metadata !11003, metadata !DIExpression()), !dbg !11165
  %obj = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv, i32 0, !dbg !11166
  store %struct.redisObject* %43, %struct.redisObject** %obj, align 8, !dbg !11167, !tbaa !11168
  %u = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv, i32 1, !dbg !11170
  %cmpobj = bitcast %union.anon* %u to %struct.redisObject**, !dbg !11171
  store %struct.redisObject* null, %struct.redisObject** %cmpobj, align 8, !dbg !11172, !tbaa !795
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !11173
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !10978, metadata !DIExpression()), !dbg !11045
  %call163 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !11162
  call void @llvm.dbg.value(metadata %struct.listNode* %call163, metadata !11001, metadata !DIExpression()), !dbg !11158
  %tobool164.not = icmp eq %struct.listNode* %call163, null, !dbg !11163
  br i1 %tobool164.not, label %while.end174.loopexit, label %while.body165, !dbg !11163, !llvm.loop !11174

while.end174.loopexit:                            ; preds = %while.body165
  %44 = trunc i64 %indvars.iv.next to i32, !dbg !11176
  br label %while.end174, !dbg !11176

while.end174:                                     ; preds = %while.end174.loopexit, %if.then160
  %j.3.lcssa = phi i32 [ 0, %if.then160 ], [ %44, %while.end174.loopexit ], !dbg !11045
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #24, !dbg !11176
  br label %if.end205, !dbg !11177

if.then180:                                       ; preds = %sw.epilog
  %45 = bitcast %struct.redisObject* %call to %struct.dict**, !dbg !11178
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !11005, metadata !DIExpression()), !dbg !11180
  br label %if.end185, !dbg !11181

if.else182:                                       ; preds = %sw.epilog
  %46 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !11182
  %47 = load %struct.zset*, %struct.zset** %46, align 8, !dbg !11182, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %47, metadata !11009, metadata !DIExpression()), !dbg !11183
  %dict184 = getelementptr inbounds %struct.zset, %struct.zset* %47, i64 0, i32 0, !dbg !11184
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !11005, metadata !DIExpression()), !dbg !11180
  br label %if.end185

if.end185:                                        ; preds = %if.else182, %if.then180
  %set.0.in = phi %struct.dict** [ %45, %if.then180 ], [ %dict184, %if.else182 ]
  %set.0 = load %struct.dict*, %struct.dict** %set.0.in, align 8, !dbg !11185, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.dict* %set.0, metadata !11005, metadata !DIExpression()), !dbg !11180
  %call186 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %set.0) #23, !dbg !11186
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call186, metadata !11007, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !10978, metadata !DIExpression()), !dbg !11045
  %call188751 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call186) #23, !dbg !11187
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call188751, metadata !11008, metadata !DIExpression()), !dbg !11180
  %cmp189.not752 = icmp eq %struct.dictEntry* %call188751, null, !dbg !11188
  br i1 %cmp189.not752, label %while.end204, label %while.body191, !dbg !11189

while.body191:                                    ; preds = %if.end185, %while.body191
  %indvars.iv779 = phi i64 [ %indvars.iv.next780, %while.body191 ], [ 0, %if.end185 ]
  %call188754 = phi %struct.dictEntry* [ %call188, %while.body191 ], [ %call188751, %if.end185 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv779, metadata !10978, metadata !DIExpression()), !dbg !11045
  %48 = bitcast %struct.dictEntry* %call188754 to %struct.redisObject**, !dbg !11190
  %49 = load %struct.redisObject*, %struct.redisObject** %48, align 8, !dbg !11190, !tbaa !2455
  %obj194 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv779, i32 0, !dbg !11192
  store %struct.redisObject* %49, %struct.redisObject** %obj194, align 8, !dbg !11193, !tbaa !11168
  %u197 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv779, i32 1, !dbg !11194
  %cmpobj202 = bitcast %union.anon* %u197 to %struct.redisObject**, !dbg !11195
  store %struct.redisObject* null, %struct.redisObject** %cmpobj202, align 8, !dbg !11196, !tbaa !795
  %indvars.iv.next780 = add nuw i64 %indvars.iv779, 1, !dbg !11197
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next780, metadata !10978, metadata !DIExpression()), !dbg !11045
  %call188 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call186) #23, !dbg !11187
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call188, metadata !11008, metadata !DIExpression()), !dbg !11180
  %cmp189.not = icmp eq %struct.dictEntry* %call188, null, !dbg !11188
  br i1 %cmp189.not, label %while.end204.loopexit, label %while.body191, !dbg !11189, !llvm.loop !11198

while.end204.loopexit:                            ; preds = %while.body191
  %50 = trunc i64 %indvars.iv.next780 to i32, !dbg !11200
  br label %while.end204, !dbg !11200

while.end204:                                     ; preds = %while.end204.loopexit, %if.end185
  %j.4.lcssa = phi i32 [ 0, %if.end185 ], [ %50, %while.end204.loopexit ], !dbg !11045
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call186) #23, !dbg !11200
  br label %if.end205

if.end205:                                        ; preds = %while.end204, %while.end174
  %j.5 = phi i32 [ %j.3.lcssa, %while.end174 ], [ %j.4.lcssa, %while.end204 ], !dbg !11201
  call void @llvm.dbg.value(metadata i32 %j.5, metadata !10978, metadata !DIExpression()), !dbg !11045
  %cmp206 = icmp eq i32 %j.5, %vectorlen.0, !dbg !11202
  br i1 %cmp206, label %cond.end, label %cond.false, !dbg !11202

cond.false:                                       ; preds = %if.end205
  call void @_redisAssert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.340, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7066) #22, !dbg !11202
  call void @_exit(i32 noundef 1) #26, !dbg !11202
  unreachable, !dbg !11202

cond.end:                                         ; preds = %if.end205
  %cmp208 = icmp eq i32 %dontsort.0.lcssa, 0, !dbg !11203
  %cmp211756 = icmp sgt i32 %vectorlen.0, 0
  %or.cond777 = select i1 %cmp208, i1 %cmp211756, i1 false, !dbg !11204
  call void @llvm.dbg.value(metadata i32 0, metadata !10978, metadata !DIExpression()), !dbg !11045
  br i1 %or.cond777, label %for.body.lr.ph, label %if.end272, !dbg !11204

for.body.lr.ph:                                   ; preds = %cond.end
  %tobool213.not = icmp eq %struct.redisObject* %sortby.0.lcssa, null
  %tobool228.not711 = icmp eq i32 %alpha.0.lcssa, 0
  %wide.trip.count = zext i32 %vectorlen.0 to i64, !dbg !11205
  br label %for.body, !dbg !11206

for.body:                                         ; preds = %for.body.lr.ph, %cleanup268
  %indvars.iv782 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next783, %cleanup268 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv782, metadata !10978, metadata !DIExpression()), !dbg !11045
  br i1 %tobool213.not, label %if.end227, label %if.then214, !dbg !11207

if.then214:                                       ; preds = %for.body
  %51 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11208, !tbaa !2890
  %obj218 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv782, i32 0, !dbg !11211
  %52 = load %struct.redisObject*, %struct.redisObject** %obj218, align 8, !dbg !11211, !tbaa !11168
  %call219 = call %struct.redisObject* @lookupKeyByPattern(%struct.redisDb* noundef %51, %struct.redisObject* noundef nonnull %sortby.0.lcssa, %struct.redisObject* noundef %52) #22, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.redisObject* %call219, metadata !11012, metadata !DIExpression()), !dbg !11213
  %tobool220.not = icmp eq %struct.redisObject* %call219, null, !dbg !11214
  br i1 %tobool220.not, label %cleanup268, label %if.end227.thread, !dbg !11216

if.end227:                                        ; preds = %for.body
  %obj226 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv782, i32 0, !dbg !11217
  %53 = load %struct.redisObject*, %struct.redisObject** %obj226, align 8, !dbg !11217, !tbaa !11168
  call void @llvm.dbg.value(metadata %struct.redisObject* %53, metadata !11012, metadata !DIExpression()), !dbg !11213
  br i1 %tobool228.not711, label %if.else238, label %cleanup268, !dbg !11219

if.end227.thread:                                 ; preds = %if.then214
  call void @llvm.dbg.value(metadata %struct.redisObject* %53, metadata !11012, metadata !DIExpression()), !dbg !11213
  br i1 %tobool228.not711, label %if.else238, label %if.end264.thread, !dbg !11219

if.end264.thread:                                 ; preds = %if.end227.thread
  %call232 = call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %call219) #22, !dbg !11220
  %u235 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv782, i32 1, !dbg !11224
  %cmpobj236 = bitcast %union.anon* %u235 to %struct.redisObject**, !dbg !11225
  store %struct.redisObject* %call232, %struct.redisObject** %cmpobj236, align 8, !dbg !11226, !tbaa !795
  br label %if.then266, !dbg !11227

if.else238:                                       ; preds = %if.end227.thread, %if.end227
  %byval.0714 = phi %struct.redisObject* [ %call219, %if.end227.thread ], [ %53, %if.end227 ]
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %byval.0714, i64 0, i32 2, !dbg !11228
  %54 = load i8, i8* %encoding, align 1, !dbg !11228, !tbaa !1529
  switch i8 %54, label %if.else261 [
    i8 0, label %if.then242
    i8 1, label %if.then254
  ], !dbg !11231

if.then242:                                       ; preds = %if.else238
  %ptr243 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %byval.0714, i64 0, i32 0, !dbg !11232
  %55 = load i8*, i8** %ptr243, align 8, !dbg !11232, !tbaa !1328
  %call244 = call double @strtod(i8* noundef %55, i8** noundef null) #23, !dbg !11234
  br label %if.end264, !dbg !11235

if.then254:                                       ; preds = %if.else238
  %ptr255 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %byval.0714, i64 0, i32 0, !dbg !11236
  %56 = load i8*, i8** %ptr255, align 8, !dbg !11236, !tbaa !1328
  %57 = ptrtoint i8* %56 to i64, !dbg !11239
  %conv256 = sitofp i64 %57 to double, !dbg !11239
  br label %if.end264

if.else261:                                       ; preds = %if.else238
  call void @_redisAssert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7092) #22, !dbg !11240
  call void @_exit(i32 noundef 1) #26, !dbg !11240
  unreachable, !dbg !11240

if.end264:                                        ; preds = %if.then242, %if.then254
  %call244.sink = phi double [ %call244, %if.then242 ], [ %conv256, %if.then254 ]
  %score248 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv782, i32 1, i32 0, !dbg !11242
  store double %call244.sink, double* %score248, align 8, !dbg !11242, !tbaa !795
  br i1 %tobool213.not, label %cleanup268, label %if.then266, !dbg !11227

if.then266:                                       ; preds = %if.end264.thread, %if.end264
  %byval.0713718 = phi %struct.redisObject* [ %call219, %if.end264.thread ], [ %byval.0714, %if.end264 ]
  %58 = bitcast %struct.redisObject* %byval.0713718 to i8*, !dbg !11243
  call void @decrRefCount(i8* noundef %58) #22, !dbg !11246
  br label %cleanup268, !dbg !11247

cleanup268:                                       ; preds = %if.end227, %if.end264, %if.then266, %if.then214
  %indvars.iv.next783 = add nuw nsw i64 %indvars.iv782, 1, !dbg !11248
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next783, metadata !10978, metadata !DIExpression()), !dbg !11045
  %exitcond.not = icmp eq i64 %indvars.iv.next783, %wide.trip.count, !dbg !11205
  br i1 %exitcond.not, label %if.end272, label %for.body, !dbg !11206, !llvm.loop !11249

if.end272:                                        ; preds = %cleanup268, %cond.end
  %59 = icmp sgt i32 %limit_start.0.lcssa, 0, !dbg !11251
  %cond = select i1 %59, i32 %limit_start.0.lcssa, i32 0, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10976, metadata !DIExpression()), !dbg !11045
  %cmp278 = icmp slt i32 %limit_count.0.lcssa, 0, !dbg !11252
  %add283 = add nsw i32 %cond, %limit_count.0.lcssa, !dbg !11253
  %cond286.in = select i1 %cmp278, i32 %vectorlen.0, i32 %add283, !dbg !11253
  %cond286 = add nsw i32 %cond286.in, -1, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %cond286, metadata !10977, metadata !DIExpression()), !dbg !11045
  %cmp287.not = icmp slt i32 %cond, %vectorlen.0, !dbg !11254
  %sub290 = add nsw i32 %vectorlen.0, -1, !dbg !11256
  %sub291 = add nsw i32 %vectorlen.0, -2, !dbg !11256
  %end.0 = select i1 %cmp287.not, i32 %cond286, i32 %sub291, !dbg !11256
  %start.0 = select i1 %cmp287.not, i32 %cond, i32 %sub290, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !10976, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %end.0, metadata !10977, metadata !DIExpression()), !dbg !11045
  %cmp293.not = icmp slt i32 %end.0, %vectorlen.0, !dbg !11257
  %end.1 = select i1 %cmp293.not, i32 %end.0, i32 %sub290, !dbg !11259
  call void @llvm.dbg.value(metadata i32 %end.1, metadata !10977, metadata !DIExpression()), !dbg !11045
  br i1 %cmp208, label %if.then300, label %if.end317, !dbg !11260

if.then300:                                       ; preds = %if.end272
  store i32 %desc.0.lcssa, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !11261, !tbaa !11264
  store i32 %alpha.0.lcssa, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 4, !dbg !11265, !tbaa !11266
  %tobool301.not = icmp eq %struct.redisObject* %sortby.0.lcssa, null, !dbg !11267
  %not.tobool301.not = xor i1 %tobool301.not, true, !dbg !11267
  %cond302 = zext i1 %not.tobool301.not to i32, !dbg !11267
  store i32 %cond302, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !11268, !tbaa !11269
  br i1 %tobool301.not, label %if.else314, label %land.lhs.true304, !dbg !11270

land.lhs.true304:                                 ; preds = %if.then300
  %cmp305.not = icmp eq i32 %start.0, 0, !dbg !11272
  %cmp308.not = icmp eq i32 %end.1, %sub290
  %or.cond699 = select i1 %cmp305.not, i1 %cmp308.not, i1 false, !dbg !11273
  br i1 %or.cond699, label %if.else314, label %if.then310, !dbg !11273

if.then310:                                       ; preds = %land.lhs.true304
  %conv312 = sext i32 %start.0 to i64, !dbg !11274
  %conv313 = sext i32 %end.1 to i64, !dbg !11275
  call void @pqsort(i8* noundef %call155, i64 noundef %conv154, i64 noundef 16, i32 (i8*, i8*)* noundef nonnull @sortCompare, i64 noundef %conv312, i64 noundef %conv313) #23, !dbg !11276
  br label %if.end317, !dbg !11276

if.else314:                                       ; preds = %land.lhs.true304, %if.then300
  call void @qsort(i8* noundef %call155, i64 noundef %conv154, i64 noundef 16, i32 (i8*, i8*)* noundef nonnull @sortCompare) #23, !dbg !11277
  br label %if.end317

if.end317:                                        ; preds = %if.then310, %if.else314, %if.end272
  %tobool318.not = icmp eq i32 %getop.0.lcssa, 0, !dbg !11278
  %sub324 = sub i32 1, %start.0, !dbg !11045
  %add325 = add i32 %sub324, %end.1, !dbg !11045
  %mul322 = select i1 %tobool318.not, i32 1, i32 %getop.0.lcssa, !dbg !11278
  %cond327 = mul nsw i32 %add325, %mul322, !dbg !11278
  call void @llvm.dbg.value(metadata i32 %cond327, metadata !10971, metadata !DIExpression()), !dbg !11045
  %cmp328 = icmp eq %struct.redisObject* %storekey.0.lcssa, null, !dbg !11279
  br i1 %cmp328, label %if.then330, label %if.else375, !dbg !11280

if.then330:                                       ; preds = %if.end317
  %call331 = call i8* (...) @sdsempty() #23, !dbg !11281
  %call332 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call331, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %cond327) #23, !dbg !11282
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call332) #22, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !10978, metadata !DIExpression()), !dbg !11045
  %cmp334.not771 = icmp sgt i32 %start.0, %end.1, !dbg !11284
  br i1 %cmp334.not771, label %if.end441, label %for.body336.lr.ph, !dbg !11285

for.body336.lr.ph:                                ; preds = %if.then330
  %60 = bitcast %struct.listIter* %li338 to i8*
  %61 = sext i32 %start.0 to i64, !dbg !11285
  %62 = add nsw i32 %end.1, 1, !dbg !11285
  br label %for.body336, !dbg !11285

for.body336:                                      ; preds = %for.body336.lr.ph, %while.end371
  %indvars.iv789 = phi i64 [ %61, %for.body336.lr.ph ], [ %indvars.iv.next790, %while.end371 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv789, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #24, !dbg !11286
  call void @llvm.dbg.declare(metadata %struct.listIter* %li338, metadata !11024, metadata !DIExpression()), !dbg !11287
  br i1 %tobool318.not, label %if.then340, label %if.end344, !dbg !11288

if.then340:                                       ; preds = %for.body336
  %obj343 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv789, i32 0, !dbg !11289
  %63 = load %struct.redisObject*, %struct.redisObject** %obj343, align 8, !dbg !11289, !tbaa !11168
  call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %63) #22, !dbg !11291
  br label %if.end344, !dbg !11291

if.end344:                                        ; preds = %if.then340, %for.body336
  call void @listRewind(%struct.list* noundef %call14, %struct.listIter* noundef nonnull %li338) #23, !dbg !11292
  %call346768 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li338) #23, !dbg !11293
  call void @llvm.dbg.value(metadata %struct.listNode* %call346768, metadata !11018, metadata !DIExpression()), !dbg !11294
  %tobool347.not769 = icmp eq %struct.listNode* %call346768, null, !dbg !11295
  br i1 %tobool347.not769, label %while.end371, label %while.body348.lr.ph, !dbg !11295

while.body348.lr.ph:                              ; preds = %if.end344
  %obj353 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv789, i32 0
  br label %while.body348, !dbg !11295

while.body348:                                    ; preds = %while.body348.lr.ph, %if.end370
  %call346770 = phi %struct.listNode* [ %call346768, %while.body348.lr.ph ], [ %call346, %if.end370 ]
  %value349 = getelementptr inbounds %struct.listNode, %struct.listNode* %call346770, i64 0, i32 2, !dbg !11296
  %64 = bitcast i8** %value349 to %struct._redisSortOperation**, !dbg !11296
  %65 = load %struct._redisSortOperation*, %struct._redisSortOperation** %64, align 8, !dbg !11296, !tbaa !891
  call void @llvm.dbg.value(metadata %struct._redisSortOperation* %65, metadata !11025, metadata !DIExpression()), !dbg !11297
  %66 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11298, !tbaa !2890
  %pattern = getelementptr inbounds %struct._redisSortOperation, %struct._redisSortOperation* %65, i64 0, i32 1, !dbg !11299
  %67 = load %struct.redisObject*, %struct.redisObject** %pattern, align 8, !dbg !11299, !tbaa !11300
  %68 = load %struct.redisObject*, %struct.redisObject** %obj353, align 8, !dbg !11302, !tbaa !11168
  %call354 = call %struct.redisObject* @lookupKeyByPattern(%struct.redisDb* noundef %66, %struct.redisObject* noundef %67, %struct.redisObject* noundef %68) #22, !dbg !11303
  call void @llvm.dbg.value(metadata %struct.redisObject* %call354, metadata !11033, metadata !DIExpression()), !dbg !11297
  %type355 = getelementptr inbounds %struct._redisSortOperation, %struct._redisSortOperation* %65, i64 0, i32 0, !dbg !11304
  %69 = load i32, i32* %type355, align 8, !dbg !11304, !tbaa !11306
  %cmp356 = icmp eq i32 %69, 0, !dbg !11307
  br i1 %cmp356, label %if.then358, label %cond.false368, !dbg !11308

if.then358:                                       ; preds = %while.body348
  %tobool359.not = icmp eq %struct.redisObject* %call354, null, !dbg !11309
  br i1 %tobool359.not, label %if.then360, label %if.else361, !dbg !11312

if.then360:                                       ; preds = %if.then358
  %70 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !11313, !tbaa !8818
  call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %70) #22, !dbg !11315
  br label %if.end370, !dbg !11316

if.else361:                                       ; preds = %if.then358
  call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call354) #22, !dbg !11317
  %71 = bitcast %struct.redisObject* %call354 to i8*, !dbg !11319
  call void @decrRefCount(i8* noundef nonnull %71) #22, !dbg !11320
  br label %if.end370

cond.false368:                                    ; preds = %while.body348
  call void @_redisAssert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.341, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7149) #22, !dbg !11321
  call void @_exit(i32 noundef 1) #26, !dbg !11321
  unreachable, !dbg !11321

if.end370:                                        ; preds = %if.then360, %if.else361
  %call346 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li338) #23, !dbg !11293
  call void @llvm.dbg.value(metadata %struct.listNode* %call346, metadata !11018, metadata !DIExpression()), !dbg !11294
  %tobool347.not = icmp eq %struct.listNode* %call346, null, !dbg !11295
  br i1 %tobool347.not, label %while.end371, label %while.body348, !dbg !11295, !llvm.loop !11323

while.end371:                                     ; preds = %if.end370, %if.end344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #24, !dbg !11325
  %indvars.iv.next790 = add nsw i64 %indvars.iv789, 1, !dbg !11326
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next790, metadata !10978, metadata !DIExpression()), !dbg !11045
  %lftr.wideiv792 = trunc i64 %indvars.iv.next790 to i32, !dbg !11284
  %exitcond793.not = icmp eq i32 %62, %lftr.wideiv792, !dbg !11284
  br i1 %exitcond793.not, label %if.end441, label %for.body336, !dbg !11285, !llvm.loop !11327

if.else375:                                       ; preds = %if.end317
  %call376 = call %struct.redisObject* @createListObject() #22, !dbg !11329
  call void @llvm.dbg.value(metadata %struct.redisObject* %call376, metadata !11034, metadata !DIExpression()), !dbg !11330
  %72 = bitcast %struct.redisObject* %call376 to %struct.list**, !dbg !11331
  %73 = load %struct.list*, %struct.list** %72, align 8, !dbg !11331, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %73, metadata !11036, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !10978, metadata !DIExpression()), !dbg !11045
  %cmp379.not765 = icmp sgt i32 %start.0, %end.1, !dbg !11332
  br i1 %cmp379.not765, label %for.end429, label %for.body381.lr.ph, !dbg !11333

for.body381.lr.ph:                                ; preds = %if.else375
  %74 = bitcast %struct.listIter* %li383 to i8*
  %75 = sext i32 %start.0 to i64, !dbg !11333
  %76 = add nsw i32 %end.1, 1, !dbg !11333
  br label %for.body381, !dbg !11333

for.body381:                                      ; preds = %for.body381.lr.ph, %while.end426
  %indvars.iv785 = phi i64 [ %75, %for.body381.lr.ph ], [ %indvars.iv.next786, %while.end426 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv785, metadata !10978, metadata !DIExpression()), !dbg !11045
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #24, !dbg !11334
  call void @llvm.dbg.declare(metadata %struct.listIter* %li383, metadata !11041, metadata !DIExpression()), !dbg !11335
  br i1 %tobool318.not, label %if.then385, label %if.end393, !dbg !11336

if.then385:                                       ; preds = %for.body381
  %obj388 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv785, i32 0, !dbg !11337
  %77 = bitcast %struct.redisObject** %obj388 to i8**, !dbg !11337
  %78 = load i8*, i8** %77, align 8, !dbg !11337, !tbaa !11168
  %call389 = call %struct.list* @listAddNodeTail(%struct.list* noundef %73, i8* noundef %78) #23, !dbg !11340
  %79 = load %struct.redisObject*, %struct.redisObject** %obj388, align 8, !dbg !11341, !tbaa !11168
  call void @incrRefCount(%struct.redisObject* noundef %79) #22, !dbg !11342
  br label %if.end393, !dbg !11343

if.end393:                                        ; preds = %if.then385, %for.body381
  call void @listRewind(%struct.list* noundef %call14, %struct.listIter* noundef nonnull %li383) #23, !dbg !11344
  %call395762 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li383) #23, !dbg !11345
  call void @llvm.dbg.value(metadata %struct.listNode* %call395762, metadata !11037, metadata !DIExpression()), !dbg !11346
  %tobool396.not763 = icmp eq %struct.listNode* %call395762, null, !dbg !11347
  br i1 %tobool396.not763, label %while.end426, label %while.body397.lr.ph, !dbg !11347

while.body397.lr.ph:                              ; preds = %if.end393
  %obj405 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv785, i32 0
  br label %while.body397, !dbg !11347

while.body397:                                    ; preds = %while.body397.lr.ph, %if.end425
  %call395764 = phi %struct.listNode* [ %call395762, %while.body397.lr.ph ], [ %call395, %if.end425 ]
  %value399 = getelementptr inbounds %struct.listNode, %struct.listNode* %call395764, i64 0, i32 2, !dbg !11348
  %80 = bitcast i8** %value399 to %struct._redisSortOperation**, !dbg !11348
  %81 = load %struct._redisSortOperation*, %struct._redisSortOperation** %80, align 8, !dbg !11348, !tbaa !891
  call void @llvm.dbg.value(metadata %struct._redisSortOperation* %81, metadata !11042, metadata !DIExpression()), !dbg !11349
  %82 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11350, !tbaa !2890
  %pattern402 = getelementptr inbounds %struct._redisSortOperation, %struct._redisSortOperation* %81, i64 0, i32 1, !dbg !11351
  %83 = load %struct.redisObject*, %struct.redisObject** %pattern402, align 8, !dbg !11351, !tbaa !11300
  %84 = load %struct.redisObject*, %struct.redisObject** %obj405, align 8, !dbg !11352, !tbaa !11168
  %call406 = call %struct.redisObject* @lookupKeyByPattern(%struct.redisDb* noundef %82, %struct.redisObject* noundef %83, %struct.redisObject* noundef %84) #22, !dbg !11353
  call void @llvm.dbg.value(metadata %struct.redisObject* %call406, metadata !11044, metadata !DIExpression()), !dbg !11349
  %type407 = getelementptr inbounds %struct._redisSortOperation, %struct._redisSortOperation* %81, i64 0, i32 0, !dbg !11354
  %85 = load i32, i32* %type407, align 8, !dbg !11354, !tbaa !11306
  %cmp408 = icmp eq i32 %85, 0, !dbg !11356
  br i1 %cmp408, label %if.then410, label %cond.false423, !dbg !11357

if.then410:                                       ; preds = %while.body397
  %tobool411.not = icmp eq %struct.redisObject* %call406, null, !dbg !11358
  br i1 %tobool411.not, label %if.then412, label %if.else415, !dbg !11361

if.then412:                                       ; preds = %if.then410
  %call413 = call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.342, i64 0, i64 0), i64 noundef 0) #22, !dbg !11362
  %86 = bitcast %struct.redisObject* %call413 to i8*, !dbg !11362
  %call414 = call %struct.list* @listAddNodeTail(%struct.list* noundef %73, i8* noundef %86) #23, !dbg !11364
  br label %if.end425, !dbg !11365

if.else415:                                       ; preds = %if.then410
  %87 = bitcast %struct.redisObject* %call406 to i8*, !dbg !11366
  %call416 = call %struct.list* @listAddNodeTail(%struct.list* noundef %73, i8* noundef nonnull %87) #23, !dbg !11368
  br label %if.end425

cond.false423:                                    ; preds = %while.body397
  call void @_redisAssert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.341, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7183) #22, !dbg !11369
  call void @_exit(i32 noundef 1) #26, !dbg !11369
  unreachable, !dbg !11369

if.end425:                                        ; preds = %if.then412, %if.else415
  %call395 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li383) #23, !dbg !11345
  call void @llvm.dbg.value(metadata %struct.listNode* %call395, metadata !11037, metadata !DIExpression()), !dbg !11346
  %tobool396.not = icmp eq %struct.listNode* %call395, null, !dbg !11347
  br i1 %tobool396.not, label %while.end426, label %while.body397, !dbg !11347, !llvm.loop !11371

while.end426:                                     ; preds = %if.end425, %if.end393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #24, !dbg !11373
  %indvars.iv.next786 = add nsw i64 %indvars.iv785, 1, !dbg !11374
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next786, metadata !10978, metadata !DIExpression()), !dbg !11045
  %lftr.wideiv = trunc i64 %indvars.iv.next786 to i32, !dbg !11332
  %exitcond788.not = icmp eq i32 %76, %lftr.wideiv, !dbg !11332
  br i1 %exitcond788.not, label %for.end429, label %for.body381, !dbg !11333, !llvm.loop !11375

for.end429:                                       ; preds = %while.end426, %if.else375
  %88 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11377, !tbaa !2890
  %dict431 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %88, i64 0, i32 0, !dbg !11379
  %89 = load %struct.dict*, %struct.dict** %dict431, align 8, !dbg !11379, !tbaa !2353
  %90 = bitcast %struct.redisObject* %storekey.0.lcssa to i8*, !dbg !11380
  %91 = bitcast %struct.redisObject* %call376 to i8*, !dbg !11381
  %call432 = call i32 @dictReplace(%struct.dict* noundef %89, i8* noundef nonnull %90, i8* noundef %91) #23, !dbg !11382
  %tobool433.not = icmp eq i32 %call432, 0, !dbg !11382
  br i1 %tobool433.not, label %if.end435, label %if.then434, !dbg !11383

if.then434:                                       ; preds = %for.end429
  call void @incrRefCount(%struct.redisObject* noundef nonnull %storekey.0.lcssa) #22, !dbg !11384
  br label %if.end435, !dbg !11386

if.end435:                                        ; preds = %if.then434, %for.end429
  %add436 = add nsw i32 %cond327, 1, !dbg !11387
  %conv437 = sext i32 %add436 to i64, !dbg !11388
  %92 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !11389, !tbaa !708
  %add438 = add nsw i64 %92, %conv437, !dbg !11389
  store i64 %add438, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !11389, !tbaa !708
  %call439 = call i8* (...) @sdsempty() #23, !dbg !11390
  %call440 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call439, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i64 0, i64 0), i32 noundef %cond327) #23, !dbg !11391
  call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call440) #22, !dbg !11392
  br label %if.end441

if.end441:                                        ; preds = %while.end371, %if.then330, %if.end435
  %93 = bitcast %struct.redisObject* %call to i8*, !dbg !11393
  call void @decrRefCount(i8* noundef nonnull %93) #22, !dbg !11394
  call void @listRelease(%struct.list* noundef %call14) #23, !dbg !11395
  call void @llvm.dbg.value(metadata i32 0, metadata !10978, metadata !DIExpression()), !dbg !11045
  br i1 %cmp211756, label %for.body445.lr.ph, label %for.end461, !dbg !11396

for.body445.lr.ph:                                ; preds = %if.end441
  %tobool446.not = icmp eq i32 %alpha.0.lcssa, 0
  %wide.trip.count797 = zext i32 %vectorlen.0 to i64, !dbg !11398
  br label %for.body445, !dbg !11396

for.body445:                                      ; preds = %for.body445.lr.ph, %for.inc459
  %indvars.iv794 = phi i64 [ 0, %for.body445.lr.ph ], [ %indvars.iv.next795, %for.inc459 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv794, metadata !10978, metadata !DIExpression()), !dbg !11045
  br i1 %tobool446.not, label %for.inc459, label %land.lhs.true447, !dbg !11400

land.lhs.true447:                                 ; preds = %for.body445
  %u450 = getelementptr inbounds %struct._redisSortObject, %struct._redisSortObject* %37, i64 %indvars.iv794, i32 1, !dbg !11403
  %cmpobj451 = bitcast %union.anon* %u450 to %struct.redisObject**, !dbg !11404
  %94 = load %struct.redisObject*, %struct.redisObject** %cmpobj451, align 8, !dbg !11404, !tbaa !795
  %tobool452.not = icmp eq %struct.redisObject* %94, null, !dbg !11405
  br i1 %tobool452.not, label %for.inc459, label %if.then453, !dbg !11406

if.then453:                                       ; preds = %land.lhs.true447
  %95 = bitcast %struct.redisObject* %94 to i8*, !dbg !11407
  call void @decrRefCount(i8* noundef nonnull %95) #22, !dbg !11408
  br label %for.inc459, !dbg !11408

for.inc459:                                       ; preds = %for.body445, %land.lhs.true447, %if.then453
  %indvars.iv.next795 = add nuw nsw i64 %indvars.iv794, 1, !dbg !11409
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next795, metadata !10978, metadata !DIExpression()), !dbg !11045
  %exitcond798.not = icmp eq i64 %indvars.iv.next795, %wide.trip.count797, !dbg !11398
  br i1 %exitcond798.not, label %for.end461, label %for.body445, !dbg !11396, !llvm.loop !11410

for.end461:                                       ; preds = %for.inc459, %if.end441
  call void @zfree(i8* noundef %call155) #23, !dbg !11412
  br label %cleanup462, !dbg !11413

cleanup462:                                       ; preds = %cleanup.thread, %for.end461, %if.then12, %if.then
  ret void, !dbg !11413
}

; Function Attrs: noinline nounwind uwtable
define internal void @infoCommand(%struct.redisClient* noundef %c) #0 !dbg !11414 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11416, metadata !DIExpression()), !dbg !11418
  %call = tail call i8* @genRedisInfoString() #22, !dbg !11419
  call void @llvm.dbg.value(metadata i8* %call, metadata !11417, metadata !DIExpression()), !dbg !11418
  %call1 = tail call i8* (...) @sdsempty() #23, !dbg !11420
  %call2 = tail call i64 @sdslen(i8* noundef %call) #23, !dbg !11421
  %call3 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call1, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i64 noundef %call2) #23, !dbg !11422
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call3) #22, !dbg !11423
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call) #22, !dbg !11424
  %0 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !11425, !tbaa !4163
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %0) #22, !dbg !11426
  ret void, !dbg !11427
}

; Function Attrs: noinline nounwind uwtable
define internal void @monitorCommand(%struct.redisClient* noundef %c) #0 !dbg !11428 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11430, metadata !DIExpression()), !dbg !11431
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !11432
  %0 = load i32, i32* %flags, align 8, !dbg !11432, !tbaa !1402
  %and = and i32 %0, 1, !dbg !11434
  %tobool.not = icmp eq i32 %and, 0, !dbg !11434
  br i1 %tobool.not, label %if.end, label %return, !dbg !11435

if.end:                                           ; preds = %entry
  %or = or i32 %0, 5, !dbg !11436
  store i32 %or, i32* %flags, align 8, !dbg !11436, !tbaa !1402
  %slaveseldb = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 14, !dbg !11437
  store i32 0, i32* %slaveseldb, align 4, !dbg !11438, !tbaa !4700
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !11439, !tbaa !4019
  %2 = bitcast %struct.redisClient* %c to i8*, !dbg !11440
  %call = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %1, i8* noundef %2) #23, !dbg !11441
  %3 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11442, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %3) #22, !dbg !11443
  br label %return, !dbg !11444

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !11444
}

; Function Attrs: noinline nounwind uwtable
define internal void @ttlCommand(%struct.redisClient* noundef %c) #0 !dbg !11445 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11447, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 -1, metadata !11449, metadata !DIExpression()), !dbg !11450
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11451
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11451, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11452
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11452, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !11453
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11453, !tbaa !782
  %call = tail call i64 @getExpire(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !11454
  call void @llvm.dbg.value(metadata i64 %call, metadata !11448, metadata !DIExpression()), !dbg !11450
  %cmp.not = icmp eq i64 %call, -1, !dbg !11455
  br i1 %cmp.not, label %if.end5, label %if.then, !dbg !11457

if.then:                                          ; preds = %entry
  %call1 = tail call i64 @time(i64* noundef null) #23, !dbg !11458
  %sub = sub nsw i64 %call, %call1, !dbg !11460
  %conv = trunc i64 %sub to i32, !dbg !11461
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11449, metadata !DIExpression()), !dbg !11450
  %cmp2.inv = icmp sgt i32 %conv, -1, !dbg !11462
  %spec.store.select = select i1 %cmp2.inv, i32 %conv, i32 -1, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %if.end5, !dbg !11463

if.end5:                                          ; preds = %if.then, %entry
  %ttl.0 = phi i32 [ %spec.store.select, %if.then ], [ -1, %entry ], !dbg !11450
  call void @llvm.dbg.value(metadata i32 %ttl.0, metadata !11449, metadata !DIExpression()), !dbg !11450
  %call6 = tail call i8* (...) @sdsempty() #23, !dbg !11464
  %call7 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call6, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i64 0, i64 0), i32 noundef %ttl.0) #23, !dbg !11465
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call7) #22, !dbg !11466
  ret void, !dbg !11467
}

; Function Attrs: noinline nounwind uwtable
define internal void @slaveofCommand(%struct.redisClient* noundef %c) #0 !dbg !11468 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11470, metadata !DIExpression()), !dbg !11471
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11472
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11472, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !11474
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11474, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !11475
  %2 = load i8*, i8** %ptr, align 8, !dbg !11475, !tbaa !1328
  %call = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0)) #27, !dbg !11476
  %tobool.not = icmp eq i32 %call, 0, !dbg !11476
  br i1 %tobool.not, label %land.lhs.true, label %if.else, !dbg !11477

land.lhs.true:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11478
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !11478, !tbaa !782
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !11479
  %4 = load i8*, i8** %ptr3, align 8, !dbg !11479, !tbaa !1328
  %call4 = tail call i32 @strcasecmp(i8* noundef %4, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.361, i64 0, i64 0)) #27, !dbg !11480
  %tobool5.not = icmp eq i32 %call4, 0, !dbg !11480
  br i1 %tobool5.not, label %if.then, label %if.else, !dbg !11481

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !11482, !tbaa !2049
  %tobool6.not = icmp eq i8* %5, null, !dbg !11485
  br i1 %tobool6.not, label %if.end22, label %if.then7, !dbg !11486

if.then7:                                         ; preds = %if.then
  tail call void @sdsfree(i8* noundef nonnull %5) #23, !dbg !11487
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !11489, !tbaa !2049
  %6 = load %struct.redisClient*, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !11490, !tbaa !2719
  %tobool8.not = icmp eq %struct.redisClient* %6, null, !dbg !11492
  br i1 %tobool8.not, label %if.end, label %if.then9, !dbg !11493

if.then9:                                         ; preds = %if.then7
  tail call void @freeClient(%struct.redisClient* noundef nonnull %6) #22, !dbg !11494
  br label %if.end, !dbg !11494

if.end:                                           ; preds = %if.then9, %if.then7
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !11495, !tbaa !2055
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.362, i64 0, i64 0)) #22, !dbg !11496
  br label %if.end22, !dbg !11497

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !11498, !tbaa !2049
  tail call void @sdsfree(i8* noundef %7) #23, !dbg !11500
  %8 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11501, !tbaa !1352
  %arrayidx12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %8, i64 1, !dbg !11502
  %9 = load %struct.redisObject*, %struct.redisObject** %arrayidx12, align 8, !dbg !11502, !tbaa !782
  %ptr13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !11503
  %10 = load i8*, i8** %ptr13, align 8, !dbg !11503, !tbaa !1328
  %call14 = tail call i8* @sdsdup(i8* noundef %10) #23, !dbg !11504
  store i8* %call14, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !11505, !tbaa !2049
  %11 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11506, !tbaa !1352
  %arrayidx16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %11, i64 2, !dbg !11507
  %12 = load %struct.redisObject*, %struct.redisObject** %arrayidx16, align 8, !dbg !11507, !tbaa !782
  %ptr17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 0, !dbg !11508
  %13 = load i8*, i8** %ptr17, align 8, !dbg !11508, !tbaa !1328
  %call18 = tail call i32 @atoi(i8* noundef %13) #27, !dbg !11509
  store i32 %call18, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !11510, !tbaa !2053
  %14 = load %struct.redisClient*, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !11511, !tbaa !2719
  %tobool19.not = icmp eq %struct.redisClient* %14, null, !dbg !11513
  br i1 %tobool19.not, label %if.end21, label %if.then20, !dbg !11514

if.then20:                                        ; preds = %if.else
  tail call void @freeClient(%struct.redisClient* noundef nonnull %14) #22, !dbg !11515
  %.pre = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !11516, !tbaa !2049
  %.pre29 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !11517, !tbaa !2053
  br label %if.end21, !dbg !11515

if.end21:                                         ; preds = %if.then20, %if.else
  %15 = phi i32 [ %.pre29, %if.then20 ], [ %call18, %if.else ], !dbg !11517
  %16 = phi i8* [ %.pre, %if.then20 ], [ %call14, %if.else ], !dbg !11516
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !11518, !tbaa !2055
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.363, i64 0, i64 0), i8* noundef %16, i32 noundef %15) #22, !dbg !11519
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.end, %if.end21
  %17 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11520, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %17) #22, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: noinline nounwind uwtable
define internal void @debugCommand(%struct.redisClient* noundef %c) #0 !dbg !11523 {
entry:
  %buf = alloca [128 x i8], align 16
  %keys = alloca i64, align 8
  %buf158 = alloca [128 x i8], align 16
  %digest = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11525, metadata !DIExpression()), !dbg !11560
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11561
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11561, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !11562
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11562, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !11563
  %2 = load i8*, i8** %ptr, align 8, !dbg !11563, !tbaa !1328
  %call = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.364, i64 0, i64 0)) #27, !dbg !11564
  %tobool.not = icmp eq i32 %call, 0, !dbg !11564
  br i1 %tobool.not, label %if.then, label %if.else, !dbg !11565

if.then:                                          ; preds = %entry
  store i8 120, i8* inttoptr (i64 -1 to i8*), align 1, !dbg !11566, !tbaa !795
  br label %if.end231, !dbg !11568

if.else:                                          ; preds = %entry
  %call4 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.365, i64 0, i64 0)) #27, !dbg !11569
  %tobool5.not = icmp eq i32 %call4, 0, !dbg !11569
  br i1 %tobool5.not, label %if.then6, label %if.else14, !dbg !11570

if.then6:                                         ; preds = %if.else
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !11571, !tbaa !913
  %call7 = tail call i32 @rdbSave(i8* noundef %3) #22, !dbg !11574
  %cmp.not = icmp eq i32 %call7, 0, !dbg !11575
  br i1 %cmp.not, label %if.end, label %if.then8, !dbg !11576

if.then8:                                         ; preds = %if.then6
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !11577, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4) #22, !dbg !11579
  br label %if.end231, !dbg !11580

if.end:                                           ; preds = %if.then6
  %call9 = tail call fastcc i64 @emptyDb() #22, !dbg !11581
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !11582, !tbaa !913
  %call10 = tail call i32 @rdbLoad(i8* noundef %5) #22, !dbg !11584
  %cmp11.not = icmp eq i32 %call10, 0, !dbg !11585
  br i1 %cmp11.not, label %if.end13, label %if.then12, !dbg !11586

if.then12:                                        ; preds = %if.end
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !11587, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !11589
  br label %if.end231, !dbg !11590

if.end13:                                         ; preds = %if.end
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.366, i64 0, i64 0)) #22, !dbg !11591
  %7 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11592, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !11593
  br label %if.end231, !dbg !11594

if.else14:                                        ; preds = %if.else
  %call18 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.367, i64 0, i64 0)) #27, !dbg !11595
  %tobool19.not = icmp eq i32 %call18, 0, !dbg !11595
  br i1 %tobool19.not, label %if.then20, label %if.else26, !dbg !11596

if.then20:                                        ; preds = %if.else14
  %call21 = tail call fastcc i64 @emptyDb() #22, !dbg !11597
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !11599, !tbaa !1029
  %call22 = tail call i32 @loadAppendOnlyFile(i8* noundef %8) #22, !dbg !11601
  %cmp23.not = icmp eq i32 %call22, 0, !dbg !11602
  br i1 %cmp23.not, label %if.end25, label %if.then24, !dbg !11603

if.then24:                                        ; preds = %if.then20
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !11604, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %9) #22, !dbg !11606
  br label %if.end231, !dbg !11607

if.end25:                                         ; preds = %if.then20
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.368, i64 0, i64 0)) #22, !dbg !11608
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11609, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !11610
  br label %if.end231, !dbg !11611

if.else26:                                        ; preds = %if.else14
  %call30 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.369, i64 0, i64 0)) #27, !dbg !11612
  %tobool31.not = icmp eq i32 %call30, 0, !dbg !11612
  br i1 %tobool31.not, label %land.lhs.true, label %if.else75, !dbg !11613

land.lhs.true:                                    ; preds = %if.else26
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11614
  %11 = load i32, i32* %argc, align 8, !dbg !11614, !tbaa !1350
  %cmp32 = icmp eq i32 %11, 3, !dbg !11615
  br i1 %cmp32, label %if.then33, label %if.else75, !dbg !11616

if.then33:                                        ; preds = %land.lhs.true
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11617
  %12 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11617, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %12, i64 0, i32 0, !dbg !11618
  %13 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !11618, !tbaa !2353
  %arrayidx35 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11619
  %14 = bitcast %struct.redisObject** %arrayidx35 to i8**, !dbg !11619
  %15 = load i8*, i8** %14, align 8, !dbg !11619, !tbaa !782
  %call36 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %13, i8* noundef %15) #23, !dbg !11620
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call36, metadata !11526, metadata !DIExpression()), !dbg !11621
  %tobool37.not = icmp eq %struct.dictEntry* %call36, null, !dbg !11622
  br i1 %tobool37.not, label %if.then38, label %if.end39, !dbg !11624

if.then38:                                        ; preds = %if.then33
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !11625, !tbaa !9059
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %16) #22, !dbg !11627
  br label %if.end231, !dbg !11628

if.end39:                                         ; preds = %if.then33
  %key40 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call36, i64 0, i32 0, !dbg !11629
  %17 = load i8*, i8** %key40, align 8, !dbg !11629, !tbaa !2455
  call void @llvm.dbg.value(metadata i8* %17, metadata !11532, metadata !DIExpression()), !dbg !11621
  %val41 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call36, i64 0, i32 1, !dbg !11630
  %18 = load i8*, i8** %val41, align 8, !dbg !11630, !tbaa !2458
  %19 = bitcast i8* %18 to %struct.redisObject*, !dbg !11630
  call void @llvm.dbg.value(metadata %struct.redisObject* %19, metadata !11533, metadata !DIExpression()), !dbg !11621
  %20 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !11631, !tbaa !1384
  %tobool42.not = icmp eq i32 %20, 0, !dbg !11632
  br i1 %tobool42.not, label %if.then50, label %lor.lhs.false, !dbg !11633

lor.lhs.false:                                    ; preds = %if.end39
  %21 = getelementptr inbounds i8, i8* %17, i64 10, !dbg !11634
  %22 = load i8, i8* %21, align 2, !dbg !11634, !tbaa !1547
  switch i8 %22, label %if.else67 [
    i8 0, label %if.then50
    i8 2, label %if.then50
  ], !dbg !11635

if.then50:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %if.end39
  %23 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !11636
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #24, !dbg !11636
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !11537, metadata !DIExpression()), !dbg !11637
  %24 = getelementptr inbounds i8, i8* %18, i64 9, !dbg !11638
  %25 = load i8, i8* %24, align 1, !dbg !11638, !tbaa !1529
  %cmp52 = icmp ult i8 %25, 4, !dbg !11640
  br i1 %cmp52, label %if.then54, label %if.else57, !dbg !11641

if.then54:                                        ; preds = %if.then50
  %conv51 = zext i8 %25 to i64, !dbg !11642
  %arrayidx56 = getelementptr inbounds [4 x i8*], [4 x i8*]* @strencoding, i64 0, i64 %conv51, !dbg !11643
  %26 = load i8*, i8** %arrayidx56, align 8, !dbg !11643, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %26, metadata !11534, metadata !DIExpression()), !dbg !11645
  br label %if.end62, !dbg !11646

if.else57:                                        ; preds = %if.then50
  %conv59 = zext i8 %25 to i32, !dbg !11647
  %call60 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %23, i64 noundef 64, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.370, i64 0, i64 0), i32 noundef %conv59) #23, !dbg !11649
  call void @llvm.dbg.value(metadata i8* %23, metadata !11534, metadata !DIExpression()), !dbg !11645
  br label %if.end62

if.end62:                                         ; preds = %if.else57, %if.then54
  %strenc.0 = phi i8* [ %26, %if.then54 ], [ %23, %if.else57 ], !dbg !11650
  call void @llvm.dbg.value(metadata i8* %strenc.0, metadata !11534, metadata !DIExpression()), !dbg !11645
  %call63 = call i8* (...) @sdsempty() #23, !dbg !11651
  %refcount = getelementptr inbounds i8, i8* %17, i64 12, !dbg !11652
  %27 = bitcast i8* %refcount to i32*, !dbg !11652
  %28 = load i32, i32* %27, align 4, !dbg !11652, !tbaa !1534
  %refcount64 = getelementptr inbounds i8, i8* %18, i64 12, !dbg !11653
  %29 = bitcast i8* %refcount64 to i32*, !dbg !11653
  %30 = load i32, i32* %29, align 4, !dbg !11653, !tbaa !1534
  %call65 = call i64 @rdbSavedObjectLen(%struct.redisObject* noundef nonnull %19, %struct._IO_FILE* noundef null) #22, !dbg !11654
  %call66 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call63, i8* noundef getelementptr inbounds ([84 x i8], [84 x i8]* @.str.371, i64 0, i64 0), i8* noundef %17, i32 noundef %28, i8* noundef nonnull %18, i32 noundef %30, i8* noundef %strenc.0, i64 noundef %call65) #23, !dbg !11655
  call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call66) #22, !dbg !11656
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #24, !dbg !11657
  br label %if.end231, !dbg !11658

if.else67:                                        ; preds = %lor.lhs.false
  %call68 = tail call i8* (...) @sdsempty() #23, !dbg !11659
  %refcount69 = getelementptr inbounds i8, i8* %17, i64 12, !dbg !11661
  %31 = bitcast i8* %refcount69 to i32*, !dbg !11661
  %32 = load i32, i32* %31, align 4, !dbg !11661, !tbaa !1534
  %vm = getelementptr inbounds i8, i8* %17, i64 16, !dbg !11662
  %page = bitcast i8* %vm to i64*, !dbg !11663
  %33 = load i64, i64* %page, align 8, !dbg !11663, !tbaa !1647
  %usedpages = getelementptr inbounds i8, i8* %17, i64 24, !dbg !11664
  %34 = bitcast i8* %usedpages to i64*, !dbg !11664
  %35 = load i64, i64* %34, align 8, !dbg !11664, !tbaa !1649
  %call71 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call68, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.372, i64 0, i64 0), i8* noundef nonnull %17, i32 noundef %32, i64 noundef %33, i64 noundef %35) #23, !dbg !11665
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call71) #22, !dbg !11666
  br label %if.end231

if.else75:                                        ; preds = %land.lhs.true, %if.else26
  %call79 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.373, i64 0, i64 0)) #27, !dbg !11667
  %tobool80.not = icmp eq i32 %call79, 0, !dbg !11667
  br i1 %tobool80.not, label %land.lhs.true81, label %if.else90, !dbg !11668

land.lhs.true81:                                  ; preds = %if.else75
  %argc82 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11669
  %36 = load i32, i32* %argc82, align 8, !dbg !11669, !tbaa !1350
  %cmp83 = icmp eq i32 %36, 3, !dbg !11670
  br i1 %cmp83, label %if.then85, label %if.else90, !dbg !11671

if.then85:                                        ; preds = %land.lhs.true81
  %db86 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11672
  %37 = load %struct.redisDb*, %struct.redisDb** %db86, align 8, !dbg !11672, !tbaa !2890
  %arrayidx88 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11674
  %38 = load %struct.redisObject*, %struct.redisObject** %arrayidx88, align 8, !dbg !11674, !tbaa !782
  %call89 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %37, %struct.redisObject* noundef %38) #22, !dbg !11675
  %39 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11676, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %39) #22, !dbg !11677
  br label %if.end231, !dbg !11678

if.else90:                                        ; preds = %land.lhs.true81, %if.else75
  %call94 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.374, i64 0, i64 0)) #27, !dbg !11679
  %tobool95.not = icmp eq i32 %call94, 0, !dbg !11679
  br i1 %tobool95.not, label %land.lhs.true96, label %if.else145, !dbg !11680

land.lhs.true96:                                  ; preds = %if.else90
  %argc97 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11681
  %40 = load i32, i32* %argc97, align 8, !dbg !11681, !tbaa !1350
  %cmp98 = icmp eq i32 %40, 3, !dbg !11682
  br i1 %cmp98, label %if.then100, label %if.else145, !dbg !11683

if.then100:                                       ; preds = %land.lhs.true96
  %db102 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11684
  %41 = load %struct.redisDb*, %struct.redisDb** %db102, align 8, !dbg !11684, !tbaa !2890
  %dict103 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %41, i64 0, i32 0, !dbg !11685
  %42 = load %struct.dict*, %struct.dict** %dict103, align 8, !dbg !11685, !tbaa !2353
  %arrayidx105 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11686
  %43 = bitcast %struct.redisObject** %arrayidx105 to i8**, !dbg !11686
  %44 = load i8*, i8** %43, align 8, !dbg !11686, !tbaa !782
  %call106 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %42, i8* noundef %44) #23, !dbg !11687
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call106, metadata !11538, metadata !DIExpression()), !dbg !11688
  %45 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !11689, !tbaa !1384
  %tobool109.not = icmp eq i32 %45, 0, !dbg !11691
  br i1 %tobool109.not, label %if.then110, label %if.end112, !dbg !11692

if.then110:                                       ; preds = %if.then100
  %call111 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.375, i64 0, i64 0)) #23, !dbg !11693
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call111) #22, !dbg !11695
  br label %if.end231, !dbg !11696

if.end112:                                        ; preds = %if.then100
  %tobool113.not = icmp eq %struct.dictEntry* %call106, null, !dbg !11697
  br i1 %tobool113.not, label %if.then114, label %if.end115, !dbg !11699

if.then114:                                       ; preds = %if.end112
  %46 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !11700, !tbaa !9059
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %46) #22, !dbg !11702
  br label %if.end231, !dbg !11703

if.end115:                                        ; preds = %if.end112
  %key116 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call106, i64 0, i32 0, !dbg !11704
  %47 = load i8*, i8** %key116, align 8, !dbg !11704, !tbaa !2455
  %48 = bitcast i8* %47 to %struct.redisObject*, !dbg !11704
  call void @llvm.dbg.value(metadata %struct.redisObject* %48, metadata !11542, metadata !DIExpression()), !dbg !11688
  %val117 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call106, i64 0, i32 1, !dbg !11705
  %49 = bitcast i8** %val117 to %struct.redisObject**, !dbg !11705
  %50 = load %struct.redisObject*, %struct.redisObject** %49, align 8, !dbg !11705, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %50, metadata !11543, metadata !DIExpression()), !dbg !11688
  %refcount118 = getelementptr inbounds i8, i8* %47, i64 12, !dbg !11706
  %51 = bitcast i8* %refcount118 to i32*, !dbg !11706
  %52 = load i32, i32* %51, align 4, !dbg !11706, !tbaa !1534
  %cmp119 = icmp sgt i32 %52, 1, !dbg !11707
  br i1 %cmp119, label %if.then121, label %if.end124, !dbg !11708

if.then121:                                       ; preds = %if.end115
  %call122 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef nonnull %48) #22, !dbg !11709
  call void @llvm.dbg.value(metadata %struct.redisObject* %call122, metadata !11544, metadata !DIExpression()), !dbg !11710
  tail call void @decrRefCount(i8* noundef nonnull %47) #22, !dbg !11711
  %53 = bitcast %struct.dictEntry* %call106 to %struct.redisObject**, !dbg !11712
  store %struct.redisObject* %call122, %struct.redisObject** %53, align 8, !dbg !11712, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %call122, metadata !11542, metadata !DIExpression()), !dbg !11688
  br label %if.end124, !dbg !11713

if.end124:                                        ; preds = %if.then121, %if.end115
  %key107.0 = phi %struct.redisObject* [ %call122, %if.then121 ], [ %48, %if.end115 ], !dbg !11688
  call void @llvm.dbg.value(metadata %struct.redisObject* %key107.0, metadata !11542, metadata !DIExpression()), !dbg !11688
  %storage125 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key107.0, i64 0, i32 3, !dbg !11714
  %54 = load i8, i8* %storage125, align 2, !dbg !11714, !tbaa !1547
  %cmp127.not = icmp eq i8 %54, 0, !dbg !11716
  br i1 %cmp127.not, label %if.else131, label %if.then129, !dbg !11717

if.then129:                                       ; preds = %if.end124
  %call130 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.376, i64 0, i64 0)) #23, !dbg !11718
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call130) #22, !dbg !11720
  br label %if.end231, !dbg !11721

if.else131:                                       ; preds = %if.end124
  %call132 = tail call i32 @vmSwapObjectBlocking(%struct.redisObject* noundef nonnull %key107.0, %struct.redisObject* noundef %50) #22, !dbg !11722
  %cmp133 = icmp eq i32 %call132, 0, !dbg !11724
  br i1 %cmp133, label %if.then135, label %if.else137, !dbg !11725

if.then135:                                       ; preds = %if.else131
  store i8* null, i8** %val117, align 8, !dbg !11726, !tbaa !2458
  %55 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11728, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %55) #22, !dbg !11729
  br label %if.end231, !dbg !11730

if.else137:                                       ; preds = %if.else131
  %56 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !11731, !tbaa !10712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %56) #22, !dbg !11733
  br label %if.end231

if.else145:                                       ; preds = %land.lhs.true96, %if.else90
  %call149 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.377, i64 0, i64 0)) #27, !dbg !11734
  %tobool150.not = icmp eq i32 %call149, 0, !dbg !11734
  br i1 %tobool150.not, label %land.lhs.true151, label %if.else196, !dbg !11735

land.lhs.true151:                                 ; preds = %if.else145
  %argc152 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11736
  %57 = load i32, i32* %argc152, align 8, !dbg !11736, !tbaa !1350
  %cmp153 = icmp eq i32 %57, 3, !dbg !11737
  br i1 %cmp153, label %if.then155, label %if.else196, !dbg !11738

if.then155:                                       ; preds = %land.lhs.true151
  %58 = bitcast i64* %keys to i8*, !dbg !11739
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #24, !dbg !11739
  %59 = getelementptr inbounds [128 x i8], [128 x i8]* %buf158, i64 0, i64 0, !dbg !11740
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %59) #24, !dbg !11740
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf158, metadata !11553, metadata !DIExpression()), !dbg !11741
  %arrayidx160 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11742
  %60 = load %struct.redisObject*, %struct.redisObject** %arrayidx160, align 8, !dbg !11742, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %keys, metadata !11547, metadata !DIExpression(DW_OP_deref)), !dbg !11744
  %call161 = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %60, i64* noundef nonnull %keys, i8* noundef null) #22, !dbg !11745
  %cmp162.not = icmp eq i32 %call161, 0, !dbg !11746
  br i1 %cmp162.not, label %for.cond.preheader, label %cleanup189, !dbg !11747

for.cond.preheader:                               ; preds = %if.then155
  %61 = load i64, i64* %keys, align 8, !tbaa !790
  call void @llvm.dbg.value(metadata i64 0, metadata !11550, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i64 %61, metadata !11547, metadata !DIExpression()), !dbg !11744
  %cmp166317 = icmp sgt i64 %61, 0, !dbg !11748
  br i1 %cmp166317, label %for.body.lr.ph, label %for.end, !dbg !11751

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %db174 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %for.body, !dbg !11751

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %j.0318 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %j.0318, metadata !11550, metadata !DIExpression()), !dbg !11744
  %call169 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %59, i64 noundef 128, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.378, i64 0, i64 0), i64 noundef %j.0318) #23, !dbg !11752
  %call172 = call i64 @strlen(i8* noundef nonnull %59) #27, !dbg !11754
  %call173 = call %struct.redisObject* @createStringObject(i8* noundef nonnull %59, i64 noundef %call172) #22, !dbg !11755
  call void @llvm.dbg.value(metadata %struct.redisObject* %call173, metadata !11551, metadata !DIExpression()), !dbg !11744
  %62 = load %struct.redisDb*, %struct.redisDb** %db174, align 8, !dbg !11756, !tbaa !2890
  %call175 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %62, %struct.redisObject* noundef %call173) #22, !dbg !11758
  %cmp176.not = icmp eq %struct.redisObject* %call175, null, !dbg !11759
  br i1 %cmp176.not, label %if.end179, label %if.then178, !dbg !11760

if.then178:                                       ; preds = %for.body
  %63 = bitcast %struct.redisObject* %call173 to i8*, !dbg !11761
  call void @decrRefCount(i8* noundef %63) #22, !dbg !11763
  br label %for.inc, !dbg !11764

if.end179:                                        ; preds = %for.body
  %call181 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %59, i64 noundef 128, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.379, i64 0, i64 0), i64 noundef %j.0318) #23, !dbg !11765
  %call184 = call i64 @strlen(i8* noundef nonnull %59) #27, !dbg !11766
  %call185 = call %struct.redisObject* @createStringObject(i8* noundef nonnull %59, i64 noundef %call184) #22, !dbg !11767
  call void @llvm.dbg.value(metadata %struct.redisObject* %call185, metadata !11552, metadata !DIExpression()), !dbg !11744
  %64 = load %struct.redisDb*, %struct.redisDb** %db174, align 8, !dbg !11768, !tbaa !2890
  %dict187 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %64, i64 0, i32 0, !dbg !11769
  %65 = load %struct.dict*, %struct.dict** %dict187, align 8, !dbg !11769, !tbaa !2353
  %66 = bitcast %struct.redisObject* %call173 to i8*, !dbg !11770
  %67 = bitcast %struct.redisObject* %call185 to i8*, !dbg !11771
  %call188 = call i32 @dictAdd(%struct.dict* noundef %65, i8* noundef %66, i8* noundef %67) #23, !dbg !11772
  br label %for.inc, !dbg !11773

for.inc:                                          ; preds = %if.end179, %if.then178
  %inc = add nuw nsw i64 %j.0318, 1, !dbg !11774
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11550, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i64 %61, metadata !11547, metadata !DIExpression()), !dbg !11744
  %exitcond.not = icmp eq i64 %inc, %61, !dbg !11748
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !11751, !llvm.loop !11775

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %68 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11777, !tbaa !3712
  call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %68) #22, !dbg !11778
  br label %cleanup189, !dbg !11779

cleanup189:                                       ; preds = %if.then155, %for.end
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %59) #24, !dbg !11779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #24, !dbg !11779
  br label %if.end231

if.else196:                                       ; preds = %land.lhs.true151, %if.else145
  %call200 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.380, i64 0, i64 0)) #27, !dbg !11780
  %tobool201.not = icmp eq i32 %call200, 0, !dbg !11780
  br i1 %tobool201.not, label %land.lhs.true202, label %if.else222, !dbg !11781

land.lhs.true202:                                 ; preds = %if.else196
  %argc203 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11782
  %69 = load i32, i32* %argc203, align 8, !dbg !11782, !tbaa !1350
  %cmp204 = icmp eq i32 %69, 2, !dbg !11783
  br i1 %cmp204, label %if.then206, label %if.else222, !dbg !11784

if.then206:                                       ; preds = %land.lhs.true202
  %70 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 0, !dbg !11785
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %70) #24, !dbg !11785
  call void @llvm.dbg.declare(metadata [20 x i8]* %digest, metadata !11554, metadata !DIExpression()), !dbg !11786
  %call207 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i64 0, i64 0)) #23, !dbg !11787
  call void @llvm.dbg.value(metadata i8* %call207, metadata !11558, metadata !DIExpression()), !dbg !11788
  call void @computeDatasetDigest(i8* noundef nonnull %70) #22, !dbg !11789
  call void @llvm.dbg.value(metadata i64 0, metadata !11559, metadata !DIExpression()), !dbg !11788
  %71 = load i8, i8* %70, align 16, !dbg !11790, !tbaa !795
  %conv216 = zext i8 %71 to i32, !dbg !11790
  %call217 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call207, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 1, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.1 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 1, !dbg !11790
  %72 = load i8, i8* %arrayidx215.1, align 1, !dbg !11790, !tbaa !795
  %conv216.1 = zext i8 %72 to i32, !dbg !11790
  %call217.1 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.1) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 2, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.1, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.2 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 2, !dbg !11790
  %73 = load i8, i8* %arrayidx215.2, align 2, !dbg !11790, !tbaa !795
  %conv216.2 = zext i8 %73 to i32, !dbg !11790
  %call217.2 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.2) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 3, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.2, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.3 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 3, !dbg !11790
  %74 = load i8, i8* %arrayidx215.3, align 1, !dbg !11790, !tbaa !795
  %conv216.3 = zext i8 %74 to i32, !dbg !11790
  %call217.3 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.2, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.3) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 4, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.3, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.4 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 4, !dbg !11790
  %75 = load i8, i8* %arrayidx215.4, align 4, !dbg !11790, !tbaa !795
  %conv216.4 = zext i8 %75 to i32, !dbg !11790
  %call217.4 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.3, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.4) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 5, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.4, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.5 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 5, !dbg !11790
  %76 = load i8, i8* %arrayidx215.5, align 1, !dbg !11790, !tbaa !795
  %conv216.5 = zext i8 %76 to i32, !dbg !11790
  %call217.5 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.4, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.5) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 6, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.5, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.6 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 6, !dbg !11790
  %77 = load i8, i8* %arrayidx215.6, align 2, !dbg !11790, !tbaa !795
  %conv216.6 = zext i8 %77 to i32, !dbg !11790
  %call217.6 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.5, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.6) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 7, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.6, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.7 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 7, !dbg !11790
  %78 = load i8, i8* %arrayidx215.7, align 1, !dbg !11790, !tbaa !795
  %conv216.7 = zext i8 %78 to i32, !dbg !11790
  %call217.7 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.7) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 8, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.7, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.8 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 8, !dbg !11790
  %79 = load i8, i8* %arrayidx215.8, align 8, !dbg !11790, !tbaa !795
  %conv216.8 = zext i8 %79 to i32, !dbg !11790
  %call217.8 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.7, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.8) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 9, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.8, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.9 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 9, !dbg !11790
  %80 = load i8, i8* %arrayidx215.9, align 1, !dbg !11790, !tbaa !795
  %conv216.9 = zext i8 %80 to i32, !dbg !11790
  %call217.9 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.8, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.9) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 10, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.9, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.10 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 10, !dbg !11790
  %81 = load i8, i8* %arrayidx215.10, align 2, !dbg !11790, !tbaa !795
  %conv216.10 = zext i8 %81 to i32, !dbg !11790
  %call217.10 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.9, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.10) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 11, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.10, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.11 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 11, !dbg !11790
  %82 = load i8, i8* %arrayidx215.11, align 1, !dbg !11790, !tbaa !795
  %conv216.11 = zext i8 %82 to i32, !dbg !11790
  %call217.11 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.11) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 12, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.11, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.12 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 12, !dbg !11790
  %83 = load i8, i8* %arrayidx215.12, align 4, !dbg !11790, !tbaa !795
  %conv216.12 = zext i8 %83 to i32, !dbg !11790
  %call217.12 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.11, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.12) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 13, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.12, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.13 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 13, !dbg !11790
  %84 = load i8, i8* %arrayidx215.13, align 1, !dbg !11790, !tbaa !795
  %conv216.13 = zext i8 %84 to i32, !dbg !11790
  %call217.13 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.13) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 14, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.13, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.14 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 14, !dbg !11790
  %85 = load i8, i8* %arrayidx215.14, align 2, !dbg !11790, !tbaa !795
  %conv216.14 = zext i8 %85 to i32, !dbg !11790
  %call217.14 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.13, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.14) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 15, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.14, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.15 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 15, !dbg !11790
  %86 = load i8, i8* %arrayidx215.15, align 1, !dbg !11790, !tbaa !795
  %conv216.15 = zext i8 %86 to i32, !dbg !11790
  %call217.15 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.14, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.15) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 16, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.15, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.16 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 16, !dbg !11790
  %87 = load i8, i8* %arrayidx215.16, align 16, !dbg !11790, !tbaa !795
  %conv216.16 = zext i8 %87 to i32, !dbg !11790
  %call217.16 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.15, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.16) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 17, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.16, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.17 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 17, !dbg !11790
  %88 = load i8, i8* %arrayidx215.17, align 1, !dbg !11790, !tbaa !795
  %conv216.17 = zext i8 %88 to i32, !dbg !11790
  %call217.17 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.16, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.17) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 18, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.17, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.18 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 18, !dbg !11790
  %89 = load i8, i8* %arrayidx215.18, align 2, !dbg !11790, !tbaa !795
  %conv216.18 = zext i8 %89 to i32, !dbg !11790
  %call217.18 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.17, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.18) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i64 19, metadata !11559, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %call217.18, metadata !11558, metadata !DIExpression()), !dbg !11788
  %arrayidx215.19 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 19, !dbg !11790
  %90 = load i8, i8* %arrayidx215.19, align 1, !dbg !11790, !tbaa !795
  %conv216.19 = zext i8 %90 to i32, !dbg !11790
  %call217.19 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call217.18, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv216.19) #23, !dbg !11793
  call void @llvm.dbg.value(metadata i8* %call217.19, metadata !11558, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i64 20, metadata !11559, metadata !DIExpression()), !dbg !11788
  %call221 = call i8* @sdscatlen(i8* noundef %call217.19, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 noundef 2) #23, !dbg !11794
  call void @llvm.dbg.value(metadata i8* %call221, metadata !11558, metadata !DIExpression()), !dbg !11788
  call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call221) #22, !dbg !11795
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %70) #24, !dbg !11796
  br label %if.end231, !dbg !11797

if.else222:                                       ; preds = %land.lhs.true202, %if.else196
  %call223 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([89 x i8], [89 x i8]* @.str.382, i64 0, i64 0)) #23, !dbg !11798
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call223) #22, !dbg !11800
  br label %if.end231

if.end231:                                        ; preds = %if.then110, %if.then114, %if.then135, %if.else137, %if.then129, %if.then38, %if.else67, %if.end62, %cleanup189, %if.end13, %if.then206, %if.else222, %if.then85, %if.end25, %if.then8, %if.then12, %if.then24, %if.then
  ret void, !dbg !11801
}

; Function Attrs: noinline nounwind uwtable
define internal void @configCommand(%struct.redisClient* noundef %c) #0 !dbg !11802 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11804, metadata !DIExpression()), !dbg !11806
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11807
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11807, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !11809
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11809, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !11810
  %2 = load i8*, i8** %ptr, align 8, !dbg !11810, !tbaa !1328
  %call = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i64 0, i64 0)) #27, !dbg !11811
  %tobool.not = icmp eq i32 %call, 0, !dbg !11811
  br i1 %tobool.not, label %if.then, label %if.else, !dbg !11812

if.then:                                          ; preds = %entry
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11813
  %3 = load i32, i32* %argc, align 8, !dbg !11813, !tbaa !1350
  %cmp.not = icmp eq i32 %3, 4, !dbg !11816
  br i1 %cmp.not, label %if.end, label %badarity, !dbg !11817

if.end:                                           ; preds = %if.then
  tail call void @configSetCommand(%struct.redisClient* noundef nonnull %c) #22, !dbg !11818
  br label %return, !dbg !11819

if.else:                                          ; preds = %entry
  %call5 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i64 0, i64 0)) #27, !dbg !11820
  %tobool6.not = icmp eq i32 %call5, 0, !dbg !11820
  br i1 %tobool6.not, label %if.then7, label %if.else12, !dbg !11822

if.then7:                                         ; preds = %if.else
  %argc8 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11823
  %4 = load i32, i32* %argc8, align 8, !dbg !11823, !tbaa !1350
  %cmp9.not = icmp eq i32 %4, 3, !dbg !11826
  br i1 %cmp9.not, label %if.end11, label %badarity, !dbg !11827

if.end11:                                         ; preds = %if.then7
  tail call void @configGetCommand(%struct.redisClient* noundef nonnull %c) #22, !dbg !11828
  br label %return, !dbg !11829

if.else12:                                        ; preds = %if.else
  %call16 = tail call i32 @strcasecmp(i8* noundef %2, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.388, i64 0, i64 0)) #27, !dbg !11830
  %tobool17.not = icmp eq i32 %call16, 0, !dbg !11830
  br i1 %tobool17.not, label %if.then18, label %if.else24, !dbg !11832

if.then18:                                        ; preds = %if.else12
  %argc19 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !11833
  %5 = load i32, i32* %argc19, align 8, !dbg !11833, !tbaa !1350
  %cmp20.not = icmp eq i32 %5, 2, !dbg !11836
  br i1 %cmp20.not, label %if.end22, label %badarity, !dbg !11837

if.end22:                                         ; preds = %if.then18
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15) to <2 x i64>*), align 8, !dbg !11838, !tbaa !4936
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !11839, !tbaa !5124
  %call23 = tail call i64 @time(i64* noundef null) #23, !dbg !11840
  store i64 %call23, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 14), align 8, !dbg !11841, !tbaa !11842
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11843, !tbaa !3712
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !11844
  br label %return, !dbg !11845

if.else24:                                        ; preds = %if.else12
  %call25 = tail call i8* (...) @sdsempty() #23, !dbg !11846
  %call26 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call25, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.389, i64 0, i64 0)) #23, !dbg !11848
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call26) #22, !dbg !11849
  br label %return

badarity:                                         ; preds = %if.then18, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !11805), !dbg !11850
  %call30 = tail call i8* (...) @sdsempty() #23, !dbg !11851
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11852, !tbaa !1352
  %arrayidx32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !11853
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx32, align 8, !dbg !11853, !tbaa !782
  %ptr33 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !11854
  %9 = load i8*, i8** %ptr33, align 8, !dbg !11854, !tbaa !1328
  %call34 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call30, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.390, i64 0, i64 0), i8* noundef %9) #23, !dbg !11855
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call34) #22, !dbg !11856
  br label %return, !dbg !11857

return:                                           ; preds = %if.end, %if.end22, %if.else24, %if.end11, %badarity
  ret void, !dbg !11857
}

; Function Attrs: noinline nounwind uwtable
define internal void @publishCommand(%struct.redisClient* noundef %c) #0 !dbg !11858 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11860, metadata !DIExpression()), !dbg !11862
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11863
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11863, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !11864
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11864, !tbaa !782
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !11865
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !11865, !tbaa !782
  %call = tail call i32 @pubsubPublishMessage(%struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %call, metadata !11861, metadata !DIExpression()), !dbg !11862
  %conv = sext i32 %call to i64, !dbg !11867
  tail call void @addReplyLongLong(%struct.redisClient* noundef %c, i64 noundef %conv) #22, !dbg !11868
  ret void, !dbg !11869
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getGenericCommand(%struct.redisClient* noundef %c) #0 !dbg !11870 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11872, metadata !DIExpression()), !dbg !11874
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !11875
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !11875, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !11877
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !11877, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !11878, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !11879
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !11873, metadata !DIExpression()), !dbg !11874
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !11880
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11881

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !11882
  %3 = load i8, i8* %type, align 8, !dbg !11882, !tbaa !1526
  %cmp1.not = icmp eq i8 %3, 0, !dbg !11884
  br i1 %cmp1.not, label %if.else, label %if.then3, !dbg !11885

if.then3:                                         ; preds = %if.end
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !11886, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4) #22, !dbg !11888
  br label %cleanup, !dbg !11889

if.else:                                          ; preds = %if.end
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call) #22, !dbg !11890
  br label %cleanup, !dbg !11892

cleanup:                                          ; preds = %entry, %if.else, %if.then3
  %retval.0 = phi i32 [ -1, %if.then3 ], [ 0, %if.else ], [ 0, %entry ], !dbg !11874
  ret i32 %retval.0, !dbg !11893
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key, %struct.redisObject* noundef %reply) #0 !dbg !11894 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !11898, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !11899, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata %struct.redisObject* %reply, metadata !11900, metadata !DIExpression()), !dbg !11902
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !11903
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !11903, !tbaa !2890
  %call = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %0, %struct.redisObject* noundef %key) #22, !dbg !11904
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !11901, metadata !DIExpression()), !dbg !11902
  %tobool.not = icmp eq %struct.redisObject* %call, null, !dbg !11905
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !11907

if.then:                                          ; preds = %entry
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %reply) #22, !dbg !11908
  br label %if.end, !dbg !11908

if.end:                                           ; preds = %if.then, %entry
  ret %struct.redisObject* %call, !dbg !11909
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKeyRead(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !11910 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !11914, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !11915, metadata !DIExpression()), !dbg !11916
  %call = tail call i32 @expireIfNeeded(%struct.redisDb* noundef %db, %struct.redisObject* noundef %key) #22, !dbg !11917
  %call1 = tail call %struct.redisObject* @lookupKey(%struct.redisDb* noundef %db, %struct.redisObject* noundef %key) #22, !dbg !11918
  ret %struct.redisObject* %call1, !dbg !11919
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @expireIfNeeded(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !11920 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !11922, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !11923, metadata !DIExpression()), !dbg !11926
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 1, !dbg !11927
  %0 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !11927, !tbaa !3635
  %used = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !11927
  %1 = load i64, i64* %used, align 8, !dbg !11927, !tbaa !3545
  %used4 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !11927
  %2 = load i64, i64* %used4, align 8, !dbg !11927, !tbaa !3545
  %add = sub i64 0, %2, !dbg !11929
  %cmp = icmp eq i64 %1, %add, !dbg !11929
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !11930

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !11931
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef nonnull %0, i8* noundef %3) #23, !dbg !11932
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !11925, metadata !DIExpression()), !dbg !11926
  %cmp6 = icmp eq %struct.dictEntry* %call, null, !dbg !11933
  br i1 %cmp6, label %cleanup, label %if.end, !dbg !11934

if.end:                                           ; preds = %lor.lhs.false
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !11935
  %4 = load i8*, i8** %val, align 8, !dbg !11935, !tbaa !2458
  %5 = ptrtoint i8* %4 to i64, !dbg !11936
  call void @llvm.dbg.value(metadata i64 %5, metadata !11924, metadata !DIExpression()), !dbg !11926
  %call7 = tail call i64 @time(i64* noundef null) #23, !dbg !11937
  %cmp8.not = icmp sgt i64 %call7, %5, !dbg !11939
  br i1 %cmp8.not, label %if.end10, label %cleanup, !dbg !11940

if.end10:                                         ; preds = %if.end
  %6 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !11941, !tbaa !3635
  %call12 = tail call i32 @dictDelete(%struct.dict* noundef %6, i8* noundef %3) #23, !dbg !11942
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !11943, !tbaa !5124
  %inc = add nsw i64 %7, 1, !dbg !11943
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !11943, !tbaa !5124
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 0, !dbg !11944
  %8 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !11944, !tbaa !2353
  %call13 = tail call i32 @dictDelete(%struct.dict* noundef %8, i8* noundef %3) #23, !dbg !11945
  %cmp14 = icmp eq i32 %call13, 0, !dbg !11946
  %conv = zext i1 %cmp14 to i32, !dbg !11946
  br label %cleanup, !dbg !11947

cleanup:                                          ; preds = %if.end, %entry, %lor.lhs.false, %if.end10
  %retval.0 = phi i32 [ %conv, %if.end10 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], !dbg !11926
  ret i32 %retval.0, !dbg !11948
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKey(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !11949 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !11951, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !11952, metadata !DIExpression()), !dbg !11963
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %db, i64 0, i32 0, !dbg !11964
  %0 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !11964, !tbaa !2353
  %1 = bitcast %struct.redisObject* %key to i8*, !dbg !11965
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %0, i8* noundef %1) #23, !dbg !11966
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !11953, metadata !DIExpression()), !dbg !11963
  %tobool.not = icmp eq %struct.dictEntry* %call, null, !dbg !11967
  br i1 %tobool.not, label %cleanup, label %if.then, !dbg !11968

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.dictEntry* %call to %struct.redisObject**, !dbg !11969
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !11969, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %3, metadata !11954, metadata !DIExpression()), !dbg !11970
  %val3 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !11971
  %4 = bitcast i8** %val3 to %struct.redisObject**, !dbg !11971
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !11971, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %5, metadata !11957, metadata !DIExpression()), !dbg !11970
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !11972, !tbaa !1384
  %tobool4.not = icmp eq i32 %6, 0, !dbg !11973
  br i1 %tobool4.not, label %cleanup, label %if.then5, !dbg !11974

if.then5:                                         ; preds = %if.then
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 3, !dbg !11975
  %7 = load i8, i8* %storage, align 2, !dbg !11975, !tbaa !1547
  switch i8 %7, label %if.else [
    i8 2, label %if.then16
    i8 0, label %if.end
  ], !dbg !11976

if.then16:                                        ; preds = %if.then5
  tail call void @vmCancelThreadedIOJob(%struct.redisObject* noundef nonnull %3) #22, !dbg !11977
  br label %if.end, !dbg !11977

if.end:                                           ; preds = %if.then5, %if.then16
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !11980, !tbaa !1541
  %atime = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 6, i32 2, !dbg !11981
  store i64 %8, i64* %atime, align 8, !dbg !11982, !tbaa !1544
  br label %cleanup, !dbg !11983

if.else:                                          ; preds = %if.then5
  call void @llvm.dbg.value(metadata i1 undef, metadata !11958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11984
  %cmp21 = icmp eq %struct.redisObject* %5, null, !dbg !11985
  br i1 %cmp21, label %cond.end, label %cond.false, !dbg !11985

cond.false:                                       ; preds = %if.else
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.265, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3087) #22, !dbg !11985
  tail call void @_exit(i32 noundef 1) #26, !dbg !11985
  unreachable, !dbg !11985

cond.end:                                         ; preds = %if.else
  %cmp19 = icmp eq i8 %7, 3, !dbg !11986
  call void @llvm.dbg.value(metadata i1 %cmp19, metadata !11958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11984
  %call23 = tail call %struct.redisObject* @vmLoadObject(%struct.redisObject* noundef nonnull %3) #22, !dbg !11987
  call void @llvm.dbg.value(metadata %struct.redisObject* %call23, metadata !11957, metadata !DIExpression()), !dbg !11970
  store %struct.redisObject* %call23, %struct.redisObject** %4, align 8, !dbg !11988, !tbaa !2458
  br i1 %cmp19, label %if.then26, label %cleanup, !dbg !11989

if.then26:                                        ; preds = %cond.end
  tail call void @handleClientsBlockedOnSwappedKey(%struct.redisDb* noundef nonnull %db, %struct.redisObject* noundef nonnull %3) #22, !dbg !11990
  br label %cleanup, !dbg !11990

cleanup:                                          ; preds = %entry, %if.then, %if.end, %if.then26, %cond.end
  %retval.0 = phi %struct.redisObject* [ %5, %if.end ], [ %5, %if.then ], [ %call23, %if.then26 ], [ %call23, %cond.end ], [ null, %entry ], !dbg !11992
  ret %struct.redisObject* %retval.0, !dbg !11993
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @vmLoadObject(%struct.redisObject* noundef %key) #0 !dbg !11994 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !11996, metadata !DIExpression()), !dbg !11997
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %key, i64 0, i32 3, !dbg !11998
  %0 = load i8, i8* %storage, align 2, !dbg !11998, !tbaa !1547
  %cmp = icmp eq i8 %0, 3, !dbg !12000
  br i1 %cmp, label %if.then, label %if.end, !dbg !12001

if.then:                                          ; preds = %entry
  tail call void @vmCancelThreadedIOJob(%struct.redisObject* noundef nonnull %key) #22, !dbg !12002
  br label %if.end, !dbg !12002

if.end:                                           ; preds = %if.then, %entry
  %call = tail call %struct.redisObject* @vmGenericLoadObject(%struct.redisObject* noundef nonnull %key, i32 noundef 0) #22, !dbg !12003
  ret %struct.redisObject* %call, !dbg !12004
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKeyWrite(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* noundef %key) #0 !dbg !12005 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !12007, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !12008, metadata !DIExpression()), !dbg !12009
  %call = tail call i32 @deleteIfVolatile(%struct.redisDb* noundef %db, %struct.redisObject* noundef %key) #22, !dbg !12010
  %call1 = tail call %struct.redisObject* @lookupKey(%struct.redisDb* noundef %db, %struct.redisObject* noundef %key) #22, !dbg !12011
  ret %struct.redisObject* %call1, !dbg !12012
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @checkType(%struct.redisClient* noundef %c, %struct.redisObject* nocapture noundef readonly %o, i32 noundef %type) #0 !dbg !12013 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12015, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !12016, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata i32 %type, metadata !12017, metadata !DIExpression()), !dbg !12018
  %type1 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !12019
  %0 = load i8, i8* %type1, align 8, !dbg !12019, !tbaa !1526
  %conv = zext i8 %0 to i32, !dbg !12021
  %cmp.not = icmp eq i32 %conv, %type, !dbg !12022
  br i1 %cmp.not, label %return, label %if.then, !dbg !12023

if.then:                                          ; preds = %entry
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12024, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !12026
  br label %return, !dbg !12027

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !12018
  ret i32 %retval.0, !dbg !12028
}

; Function Attrs: noinline nounwind uwtable
define internal void @incrDecrCommand(%struct.redisClient* noundef %c, i64 noundef %incr) #0 !dbg !12029 {
entry:
  %value = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12031, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i64 %incr, metadata !12032, metadata !DIExpression()), !dbg !12036
  %0 = bitcast i64* %value to i8*, !dbg !12037
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12037
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12038
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12038, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !12039
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12039, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 1, !dbg !12040
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12040, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %1, %struct.redisObject* noundef %3) #22, !dbg !12041
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !12035, metadata !DIExpression()), !dbg !12036
  %cmp.not = icmp eq %struct.redisObject* %call, null, !dbg !12042
  br i1 %cmp.not, label %if.end, label %land.lhs.true, !dbg !12044

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 0) #22, !dbg !12045
  %tobool.not = icmp eq i32 %call1, 0, !dbg !12045
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !12046

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata i64* %value, metadata !12033, metadata !DIExpression(DW_OP_deref)), !dbg !12036
  %call2 = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %call, i64* noundef nonnull %value, i8* noundef null) #22, !dbg !12047
  %cmp3.not = icmp eq i32 %call2, 0, !dbg !12049
  br i1 %cmp3.not, label %if.end5, label %cleanup, !dbg !12050

if.end5:                                          ; preds = %if.end
  %4 = load i64, i64* %value, align 8, !dbg !12051, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %4, metadata !12033, metadata !DIExpression()), !dbg !12036
  %add = add nsw i64 %4, %incr, !dbg !12051
  call void @llvm.dbg.value(metadata i64 %add, metadata !12033, metadata !DIExpression()), !dbg !12036
  %call6 = tail call %struct.redisObject* @createStringObjectFromLongLong(i64 noundef %add) #22, !dbg !12052
  call void @llvm.dbg.value(metadata %struct.redisObject* %call6, metadata !12035, metadata !DIExpression()), !dbg !12036
  %5 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12053, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 0, !dbg !12054
  %6 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !12054, !tbaa !2353
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12055, !tbaa !1352
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !12056
  %8 = bitcast %struct.redisObject** %arrayidx9 to i8**, !dbg !12056
  %9 = load i8*, i8** %8, align 8, !dbg !12056, !tbaa !782
  %10 = bitcast %struct.redisObject* %call6 to i8*, !dbg !12057
  %call10 = tail call i32 @dictAdd(%struct.dict* noundef %6, i8* noundef %9, i8* noundef %10) #23, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %call10, metadata !12034, metadata !DIExpression()), !dbg !12036
  %cmp11 = icmp eq i32 %call10, 1, !dbg !12059
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !12061

if.then12:                                        ; preds = %if.end5
  %11 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12062, !tbaa !2890
  %dict14 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %11, i64 0, i32 0, !dbg !12064
  %12 = load %struct.dict*, %struct.dict** %dict14, align 8, !dbg !12064, !tbaa !2353
  %13 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12065, !tbaa !1352
  %arrayidx16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %13, i64 1, !dbg !12066
  %14 = bitcast %struct.redisObject** %arrayidx16 to i8**, !dbg !12066
  %15 = load i8*, i8** %14, align 8, !dbg !12066, !tbaa !782
  %call17 = tail call i32 @dictReplace(%struct.dict* noundef %12, i8* noundef %15, i8* noundef %10) #23, !dbg !12067
  %16 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12068, !tbaa !2890
  %17 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12069, !tbaa !1352
  %arrayidx20 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 1, !dbg !12070
  %18 = load %struct.redisObject*, %struct.redisObject** %arrayidx20, align 8, !dbg !12070, !tbaa !782
  %call21 = tail call i32 @removeExpire(%struct.redisDb* noundef %16, %struct.redisObject* noundef %18) #22, !dbg !12071
  br label %if.end24, !dbg !12072

if.else:                                          ; preds = %if.end5
  %19 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12073, !tbaa !1352
  %arrayidx23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %19, i64 1, !dbg !12075
  %20 = load %struct.redisObject*, %struct.redisObject** %arrayidx23, align 8, !dbg !12075, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %20) #22, !dbg !12076
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then12
  %21 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12077, !tbaa !708
  %inc = add nsw i64 %21, 1, !dbg !12077
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12077, !tbaa !708
  %22 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 8), align 8, !dbg !12078, !tbaa !12079
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %22) #22, !dbg !12080
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %call6) #22, !dbg !12081
  %23 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !12082, !tbaa !4163
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %23) #22, !dbg !12083
  br label %cleanup, !dbg !12084

cleanup:                                          ; preds = %if.end, %land.lhs.true, %if.end24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12084
  ret void, !dbg !12084
}

; Function Attrs: noinline nounwind uwtable
define internal void @pushGenericCommand(%struct.redisClient* noundef %c, i32 noundef %where) #0 !dbg !12085 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12089, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata i32 %where, metadata !12090, metadata !DIExpression()), !dbg !12093
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12094
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12094, !tbaa !2890
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !12095
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12095, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 1, !dbg !12096
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12096, !tbaa !782
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %2) #22, !dbg !12097
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !12091, metadata !DIExpression()), !dbg !12093
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !12098
  br i1 %cmp, label %if.then, label %if.else25, !dbg !12100

if.then:                                          ; preds = %entry
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12101, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 1, !dbg !12104
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !12104, !tbaa !782
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !12105
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx4, align 8, !dbg !12105, !tbaa !782
  %call5 = tail call i32 @handleClientsWaitingListPush(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4, %struct.redisObject* noundef %5) #22, !dbg !12106
  %tobool.not = icmp eq i32 %call5, 0, !dbg !12106
  br i1 %tobool.not, label %if.end, label %if.then6, !dbg !12107

if.then6:                                         ; preds = %if.then
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !12108, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !12110
  br label %cleanup, !dbg !12111

if.end:                                           ; preds = %if.then
  %call7 = tail call %struct.redisObject* @createListObject() #22, !dbg !12112
  call void @llvm.dbg.value(metadata %struct.redisObject* %call7, metadata !12091, metadata !DIExpression()), !dbg !12093
  %7 = bitcast %struct.redisObject* %call7 to %struct.list**, !dbg !12113
  %8 = load %struct.list*, %struct.list** %7, align 8, !dbg !12113, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %8, metadata !12092, metadata !DIExpression()), !dbg !12093
  %cmp8 = icmp eq i32 %where, 0, !dbg !12114
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12116, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 2, !dbg !12116
  %10 = bitcast %struct.redisObject** %arrayidx11 to i8**, !dbg !12116
  %11 = load i8*, i8** %10, align 8, !dbg !12116, !tbaa !782
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !12117

if.then9:                                         ; preds = %if.end
  %call12 = tail call %struct.list* @listAddNodeHead(%struct.list* noundef %8, i8* noundef %11) #23, !dbg !12118
  br label %if.end16, !dbg !12120

if.else:                                          ; preds = %if.end
  %call15 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %8, i8* noundef %11) #23, !dbg !12121
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then9
  %12 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12123, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %12, i64 0, i32 0, !dbg !12124
  %13 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !12124, !tbaa !2353
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12125, !tbaa !1352
  %arrayidx19 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 1, !dbg !12126
  %15 = bitcast %struct.redisObject** %arrayidx19 to i8**, !dbg !12126
  %16 = load i8*, i8** %15, align 8, !dbg !12126, !tbaa !782
  %17 = bitcast %struct.redisObject* %call7 to i8*, !dbg !12127
  %call20 = tail call i32 @dictAdd(%struct.dict* noundef %13, i8* noundef %16, i8* noundef %17) #23, !dbg !12128
  %18 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12129, !tbaa !1352
  %arrayidx22 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %18, i64 1, !dbg !12130
  %19 = load %struct.redisObject*, %struct.redisObject** %arrayidx22, align 8, !dbg !12130, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %19) #22, !dbg !12131
  br label %if.end52, !dbg !12132

if.else25:                                        ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !12133
  %20 = load i8, i8* %type, align 8, !dbg !12133, !tbaa !1526
  %cmp26.not = icmp eq i8 %20, 1, !dbg !12136
  br i1 %cmp26.not, label %if.end29, label %if.then28, !dbg !12137

if.then28:                                        ; preds = %if.else25
  %21 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12138, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %21) #22, !dbg !12140
  br label %cleanup, !dbg !12141

if.end29:                                         ; preds = %if.else25
  %22 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12142, !tbaa !1352
  %arrayidx31 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 1, !dbg !12144
  %23 = load %struct.redisObject*, %struct.redisObject** %arrayidx31, align 8, !dbg !12144, !tbaa !782
  %arrayidx33 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 2, !dbg !12145
  %24 = load %struct.redisObject*, %struct.redisObject** %arrayidx33, align 8, !dbg !12145, !tbaa !782
  %call34 = tail call i32 @handleClientsWaitingListPush(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %23, %struct.redisObject* noundef %24) #22, !dbg !12146
  %tobool35.not = icmp eq i32 %call34, 0, !dbg !12146
  br i1 %tobool35.not, label %if.end37, label %if.then36, !dbg !12147

if.then36:                                        ; preds = %if.end29
  %25 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !12148, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %25) #22, !dbg !12150
  br label %cleanup, !dbg !12151

if.end37:                                         ; preds = %if.end29
  %26 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !12152
  %27 = load %struct.list*, %struct.list** %26, align 8, !dbg !12152, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %27, metadata !12092, metadata !DIExpression()), !dbg !12093
  %cmp39 = icmp eq i32 %where, 0, !dbg !12153
  %28 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12155, !tbaa !1352
  %arrayidx43 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %28, i64 2, !dbg !12155
  %29 = bitcast %struct.redisObject** %arrayidx43 to i8**, !dbg !12155
  %30 = load i8*, i8** %29, align 8, !dbg !12155, !tbaa !782
  br i1 %cmp39, label %if.then41, label %if.else45, !dbg !12156

if.then41:                                        ; preds = %if.end37
  %call44 = tail call %struct.list* @listAddNodeHead(%struct.list* noundef %27, i8* noundef %30) #23, !dbg !12157
  br label %if.end52, !dbg !12159

if.else45:                                        ; preds = %if.end37
  %call48 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %27, i8* noundef %30) #23, !dbg !12160
  br label %if.end52

if.end52:                                         ; preds = %if.then41, %if.else45, %if.end16
  %list.0 = phi %struct.list* [ %8, %if.end16 ], [ %27, %if.else45 ], [ %27, %if.then41 ], !dbg !12162
  %31 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12162, !tbaa !1352
  %arrayidx51 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %31, i64 2, !dbg !12162
  %32 = load %struct.redisObject*, %struct.redisObject** %arrayidx51, align 8, !dbg !12162, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %32) #22, !dbg !12162
  call void @llvm.dbg.value(metadata %struct.list* %list.0, metadata !12092, metadata !DIExpression()), !dbg !12093
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12163, !tbaa !708
  %inc = add nsw i64 %33, 1, !dbg !12163
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12163, !tbaa !708
  %len = getelementptr inbounds %struct.list, %struct.list* %list.0, i64 0, i32 5, !dbg !12164
  %34 = load i32, i32* %len, align 8, !dbg !12164, !tbaa !1358
  %conv53 = zext i32 %34 to i64, !dbg !12164
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %conv53) #22, !dbg !12165
  br label %cleanup, !dbg !12166

cleanup:                                          ; preds = %if.end52, %if.then36, %if.then28, %if.then6
  ret void, !dbg !12166
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @handleClientsWaitingListPush(%struct.redisClient* nocapture noundef readonly %c, %struct.redisObject* noundef %key, %struct.redisObject* noundef %ele) #0 !dbg !12167 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12171, metadata !DIExpression()), !dbg !12178
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !12172, metadata !DIExpression()), !dbg !12178
  call void @llvm.dbg.value(metadata %struct.redisObject* %ele, metadata !12173, metadata !DIExpression()), !dbg !12178
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12179
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12179, !tbaa !2890
  %blockingkeys = getelementptr inbounds %struct.redisDb, %struct.redisDb* %0, i64 0, i32 2, !dbg !12180
  %1 = load %struct.dict*, %struct.dict** %blockingkeys, align 8, !dbg !12180, !tbaa !2892
  %2 = bitcast %struct.redisObject* %key to i8*, !dbg !12181
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %1, i8* noundef %2) #23, !dbg !12182
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !12174, metadata !DIExpression()), !dbg !12178
  %cmp = icmp eq %struct.dictEntry* %call, null, !dbg !12183
  br i1 %cmp, label %cleanup, label %if.end, !dbg !12185

if.end:                                           ; preds = %entry
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !12186
  %3 = bitcast i8** %val to %struct.list**, !dbg !12186
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !12186, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !12176, metadata !DIExpression()), !dbg !12178
  %head = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 0, !dbg !12187
  %5 = load %struct.listNode*, %struct.listNode** %head, align 8, !dbg !12187, !tbaa !1366
  call void @llvm.dbg.value(metadata %struct.listNode* %5, metadata !12177, metadata !DIExpression()), !dbg !12178
  %cmp1.not = icmp eq %struct.listNode* %5, null, !dbg !12188
  br i1 %cmp1.not, label %cond.false, label %cond.end, !dbg !12188

cond.false:                                       ; preds = %if.end
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7702, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.handleClientsWaitingListPush, i64 0, i64 0)) #26, !dbg !12188
  unreachable, !dbg !12188

cond.end:                                         ; preds = %if.end
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %5, i64 0, i32 2, !dbg !12189
  %6 = bitcast i8** %value to %struct.redisClient**, !dbg !12189
  %7 = load %struct.redisClient*, %struct.redisClient** %6, align 8, !dbg !12189, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %7, metadata !12175, metadata !DIExpression()), !dbg !12178
  %call2 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.268, i64 0, i64 0)) #23, !dbg !12190
  tail call void @addReplySds(%struct.redisClient* noundef %7, i8* noundef %call2) #22, !dbg !12191
  tail call void @addReplyBulk(%struct.redisClient* noundef %7, %struct.redisObject* noundef %key) #22, !dbg !12192
  tail call void @addReplyBulk(%struct.redisClient* noundef %7, %struct.redisObject* noundef %ele) #22, !dbg !12193
  tail call void @unblockClientWaitingData(%struct.redisClient* noundef %7) #22, !dbg !12194
  br label %cleanup, !dbg !12195

cleanup:                                          ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ 1, %cond.end ], [ 0, %entry ], !dbg !12178
  ret i32 %retval.0, !dbg !12196
}

; Function Attrs: noinline nounwind uwtable
define internal void @popGenericCommand(%struct.redisClient* noundef %c, i32 noundef %where) #0 !dbg !12197 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12199, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 %where, metadata !12200, metadata !DIExpression()), !dbg !12207
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !12208
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12208, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !12210
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12210, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !12211, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !12212
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !12201, metadata !DIExpression()), !dbg !12207
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !12213
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !12214

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 1) #22, !dbg !12215
  %tobool.not = icmp eq i32 %call1, 0, !dbg !12215
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !12216

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.list**, !dbg !12217
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !12217, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !12202, metadata !DIExpression()), !dbg !12207
  %cmp2 = icmp eq i32 %where, 0, !dbg !12218
  %head = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 0, !dbg !12220
  %tail = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 1, !dbg !12220
  %ln.0.in = select i1 %cmp2, %struct.listNode** %head, %struct.listNode** %tail, !dbg !12220
  %ln.0 = load %struct.listNode*, %struct.listNode** %ln.0.in, align 8, !dbg !12221, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.listNode* %ln.0, metadata !12203, metadata !DIExpression()), !dbg !12207
  %cmp5 = icmp eq %struct.listNode* %ln.0, null, !dbg !12222
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !12223

if.then6:                                         ; preds = %if.end
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !12224, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !12226
  br label %cleanup, !dbg !12227

if.else7:                                         ; preds = %if.end
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %ln.0, i64 0, i32 2, !dbg !12228
  %6 = bitcast i8** %value to %struct.redisObject**, !dbg !12228
  %7 = load %struct.redisObject*, %struct.redisObject** %6, align 8, !dbg !12228, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %7, metadata !12204, metadata !DIExpression()), !dbg !12229
  tail call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7) #22, !dbg !12230
  tail call void @listDelNode(%struct.list* noundef %4, %struct.listNode* noundef nonnull %ln.0) #23, !dbg !12231
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !12232
  %8 = load i32, i32* %len, align 8, !dbg !12232, !tbaa !1358
  %cmp8 = icmp eq i32 %8, 0, !dbg !12234
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !12235

if.then9:                                         ; preds = %if.else7
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12236
  %9 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12236, !tbaa !2890
  %10 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12237, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 1, !dbg !12238
  %11 = load %struct.redisObject*, %struct.redisObject** %arrayidx11, align 8, !dbg !12238, !tbaa !782
  %call12 = tail call i32 @deleteKey(%struct.redisDb* noundef %9, %struct.redisObject* noundef %11) #22, !dbg !12239
  br label %if.end13, !dbg !12239

if.end13:                                         ; preds = %if.then9, %if.else7
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12240, !tbaa !708
  %inc = add nsw i64 %12, 1, !dbg !12240
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12240, !tbaa !708
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %if.end13, %entry, %lor.lhs.false
  ret void, !dbg !12241
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key, %struct.redisObject* noundef %reply) #0 !dbg !12242 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12244, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !12245, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.value(metadata %struct.redisObject* %reply, metadata !12246, metadata !DIExpression()), !dbg !12248
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12249
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12249, !tbaa !2890
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %key) #22, !dbg !12250
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !12247, metadata !DIExpression()), !dbg !12248
  %tobool.not = icmp eq %struct.redisObject* %call, null, !dbg !12251
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !12253

if.then:                                          ; preds = %entry
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %reply) #22, !dbg !12254
  br label %if.end, !dbg !12254

if.end:                                           ; preds = %if.then, %entry
  ret %struct.redisObject* %call, !dbg !12255
}

; Function Attrs: noinline nounwind uwtable
define internal void @blockingPopGenericCommand(%struct.redisClient* noundef %c, i32 noundef %where) #0 !dbg !12256 {
entry:
  %lltimeout = alloca i64, align 8
  %argv20 = alloca [2 x %struct.redisObject*], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12258, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %where, metadata !12259, metadata !DIExpression()), !dbg !12278
  %0 = bitcast i64* %lltimeout to i8*, !dbg !12279
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12279
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !12280
  %1 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12280, !tbaa !1352
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !12282
  %2 = load i32, i32* %argc, align 8, !dbg !12282, !tbaa !1350
  %sub = add nsw i32 %2, -1, !dbg !12283
  %idxprom = sext i32 %sub to i64, !dbg !12284
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1, i64 %idxprom, !dbg !12284
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12284, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %lltimeout, metadata !12261, metadata !DIExpression(DW_OP_deref)), !dbg !12278
  %call = call i32 @getLongLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, i64* noundef nonnull %lltimeout, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.269, i64 0, i64 0)) #22, !dbg !12285
  %cmp.not = icmp eq i32 %call, 0, !dbg !12286
  br i1 %cmp.not, label %if.end, label %cleanup46, !dbg !12287

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %lltimeout, align 8, !dbg !12288, !tbaa !4936
  call void @llvm.dbg.value(metadata i64 %4, metadata !12261, metadata !DIExpression()), !dbg !12278
  %cmp1 = icmp slt i64 %4, 0, !dbg !12290
  br i1 %cmp1, label %if.then2, label %for.cond.preheader, !dbg !12291

for.cond.preheader:                               ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 1, metadata !12263, metadata !DIExpression()), !dbg !12278
  %5 = load i32, i32* %argc, align 8, !dbg !12292, !tbaa !1350
  %cmp789 = icmp sgt i32 %5, 2, !dbg !12293
  br i1 %cmp789, label %for.body.lr.ph, label %for.end, !dbg !12294

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %for.body, !dbg !12294

if.then2:                                         ; preds = %if.end
  %call3 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.270, i64 0, i64 0)) #23, !dbg !12295
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call3) #22, !dbg !12297
  br label %cleanup46, !dbg !12298

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12263, metadata !DIExpression()), !dbg !12278
  %6 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12299, !tbaa !2890
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12300, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv, !dbg !12301
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx10, align 8, !dbg !12301, !tbaa !782
  %call11 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %6, %struct.redisObject* noundef %8) #22, !dbg !12302
  call void @llvm.dbg.value(metadata %struct.redisObject* %call11, metadata !12260, metadata !DIExpression()), !dbg !12278
  %cmp12.not = icmp eq %struct.redisObject* %call11, null, !dbg !12303
  br i1 %cmp12.not, label %for.inc, label %if.then13, !dbg !12304

if.then13:                                        ; preds = %for.body
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call11, i64 0, i32 1, !dbg !12305
  %9 = load i8, i8* %type, align 8, !dbg !12305, !tbaa !1526
  %cmp14.not = icmp eq i8 %9, 1, !dbg !12306
  br i1 %cmp14.not, label %if.else, label %if.then16, !dbg !12307

if.then16:                                        ; preds = %if.then13
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12308, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !12310
  br label %cleanup46, !dbg !12311

if.else:                                          ; preds = %if.then13
  %11 = bitcast %struct.redisObject* %call11 to %struct.list**, !dbg !12312
  %12 = load %struct.list*, %struct.list** %11, align 8, !dbg !12312, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %12, metadata !12264, metadata !DIExpression()), !dbg !12313
  %len = getelementptr inbounds %struct.list, %struct.list* %12, i64 0, i32 5, !dbg !12314
  %13 = load i32, i32* %len, align 8, !dbg !12314, !tbaa !1358
  %cmp17.not = icmp eq i32 %13, 0, !dbg !12315
  br i1 %cmp17.not, label %for.inc, label %if.then19, !dbg !12316

if.then19:                                        ; preds = %if.else
  %idxprom9.le = and i64 %indvars.iv, 4294967295, !dbg !12301
  %14 = bitcast [2 x %struct.redisObject*]* %argv20 to i8*, !dbg !12317
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #24, !dbg !12317
  call void @llvm.dbg.declare(metadata [2 x %struct.redisObject*]* %argv20, metadata !12272, metadata !DIExpression()), !dbg !12318
  %15 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12319, !tbaa !1352
  call void @llvm.dbg.value(metadata %struct.redisObject** %15, metadata !12276, metadata !DIExpression()), !dbg !12320
  %16 = load i32, i32* %argc, align 8, !dbg !12321, !tbaa !1350
  call void @llvm.dbg.value(metadata i32 %16, metadata !12277, metadata !DIExpression()), !dbg !12320
  %arrayidx25 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %idxprom9.le, !dbg !12322
  %17 = load %struct.redisObject*, %struct.redisObject** %arrayidx25, align 8, !dbg !12322, !tbaa !782
  %arrayidx26 = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %argv20, i64 0, i64 1, !dbg !12323
  store %struct.redisObject* %17, %struct.redisObject** %arrayidx26, align 8, !dbg !12324, !tbaa !782
  %arraydecay = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %argv20, i64 0, i64 0, !dbg !12325
  store %struct.redisObject** %arraydecay, %struct.redisObject*** %argv, align 8, !dbg !12326, !tbaa !1352
  store i32 2, i32* %argc, align 8, !dbg !12327, !tbaa !1350
  %call29 = call i8* @sdsnew(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.268, i64 0, i64 0)) #23, !dbg !12328
  call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call29) #22, !dbg !12329
  %18 = load %struct.redisObject*, %struct.redisObject** %arrayidx26, align 8, !dbg !12330, !tbaa !782
  call void @addReplyBulk(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %18) #22, !dbg !12331
  call void @popGenericCommand(%struct.redisClient* noundef nonnull %c, i32 noundef %where) #22, !dbg !12332
  store %struct.redisObject** %15, %struct.redisObject*** %argv, align 8, !dbg !12333, !tbaa !1352
  store i32 %16, i32* %argc, align 8, !dbg !12334, !tbaa !1350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #24, !dbg !12335
  br label %cleanup46

for.inc:                                          ; preds = %if.else, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12336
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !12263, metadata !DIExpression()), !dbg !12278
  %19 = load i32, i32* %argc, align 8, !dbg !12292, !tbaa !1350
  %sub6 = add nsw i32 %19, -1, !dbg !12337
  %20 = sext i32 %sub6 to i64, !dbg !12293
  %cmp7 = icmp slt i64 %indvars.iv.next, %20, !dbg !12293
  br i1 %cmp7, label %for.body, label %for.end, !dbg !12294, !llvm.loop !12338

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %21 = phi i32 [ %5, %for.cond.preheader ], [ %19, %for.inc ]
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !12340
  %22 = load i32, i32* %flags, align 8, !dbg !12340, !tbaa !1402
  %and = and i32 %22, 8, !dbg !12342
  %tobool.not = icmp eq i32 %and, 0, !dbg !12342
  br i1 %tobool.not, label %if.end37, label %if.then36, !dbg !12343

if.then36:                                        ; preds = %for.end
  %23 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !12344, !tbaa !12346
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %23) #22, !dbg !12347
  br label %cleanup46, !dbg !12348

if.end37:                                         ; preds = %for.end
  call void @llvm.dbg.value(metadata i64 %4, metadata !12261, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i64 %4, metadata !12262, metadata !DIExpression()), !dbg !12278
  %cmp38 = icmp sgt i64 %4, 0, !dbg !12349
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !12351

if.then40:                                        ; preds = %if.end37
  %call41 = tail call i64 @time(i64* noundef null) #23, !dbg !12352
  %add = add nsw i64 %call41, %4, !dbg !12353
  call void @llvm.dbg.value(metadata i64 %add, metadata !12262, metadata !DIExpression()), !dbg !12278
  %.pre = load i32, i32* %argc, align 8, !dbg !12354, !tbaa !1350
  br label %if.end42, !dbg !12355

if.end42:                                         ; preds = %if.then40, %if.end37
  %24 = phi i32 [ %.pre, %if.then40 ], [ %21, %if.end37 ], !dbg !12354
  %timeout.0 = phi i64 [ %add, %if.then40 ], [ %4, %if.end37 ], !dbg !12278
  call void @llvm.dbg.value(metadata i64 %timeout.0, metadata !12262, metadata !DIExpression()), !dbg !12278
  %25 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !12356, !tbaa !1352
  %add.ptr = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 1, !dbg !12357
  %sub45 = add nsw i32 %24, -2, !dbg !12358
  tail call void @blockForKeys(%struct.redisClient* noundef nonnull %c, %struct.redisObject** noundef nonnull %add.ptr, i32 noundef %sub45, i64 noundef %timeout.0) #22, !dbg !12359
  br label %cleanup46, !dbg !12360

cleanup46:                                        ; preds = %if.then19, %entry, %if.end42, %if.then36, %if.then16, %if.then2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12360
  ret void, !dbg !12360
}

; Function Attrs: noinline nounwind uwtable
define internal void @blockForKeys(%struct.redisClient* noundef %c, %struct.redisObject** nocapture noundef readonly %keys, i32 noundef %numkeys, i64 noundef %timeout) #0 !dbg !12361 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12365, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.value(metadata %struct.redisObject** %keys, metadata !12366, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.value(metadata i32 %numkeys, metadata !12367, metadata !DIExpression()), !dbg !12378
  call void @llvm.dbg.value(metadata i64 %timeout, metadata !12368, metadata !DIExpression()), !dbg !12378
  %conv = sext i32 %numkeys to i64, !dbg !12379
  %mul = shl nsw i64 %conv, 3, !dbg !12380
  %call = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !12381
  %blockingkeys = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 21, !dbg !12382
  %0 = bitcast %struct.redisObject*** %blockingkeys to i8**, !dbg !12383
  store i8* %call, i8** %0, align 8, !dbg !12383, !tbaa !2881
  %blockingkeysnum = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 22, !dbg !12384
  store i32 %numkeys, i32* %blockingkeysnum, align 8, !dbg !12385, !tbaa !2885
  %blockingto = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 23, !dbg !12386
  store i64 %timeout, i64* %blockingto, align 8, !dbg !12387, !tbaa !12388
  call void @llvm.dbg.value(metadata i32 0, metadata !12371, metadata !DIExpression()), !dbg !12378
  %cmp51 = icmp sgt i32 %numkeys, 0, !dbg !12389
  br i1 %cmp51, label %for.body.lr.ph, label %for.end, !dbg !12390

for.body.lr.ph:                                   ; preds = %entry
  %1 = bitcast i8* %call to %struct.redisObject**, !dbg !12390
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %2 = bitcast %struct.redisClient* %c to i8*
  %wide.trip.count = zext i32 %numkeys to i64, !dbg !12389
  br label %for.body, !dbg !12390

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.redisObject** [ %1, %for.body.lr.ph ], [ %.pre, %if.end.for.body_crit_edge ], !dbg !12391
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end.for.body_crit_edge ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12371, metadata !DIExpression()), !dbg !12378
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %keys, i64 %indvars.iv, !dbg !12392
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12392, !tbaa !782
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 %indvars.iv, !dbg !12393
  store %struct.redisObject* %4, %struct.redisObject** %arrayidx4, align 8, !dbg !12394, !tbaa !782
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12395, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %5) #22, !dbg !12396
  %6 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12397, !tbaa !2890
  %blockingkeys7 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %6, i64 0, i32 2, !dbg !12398
  %7 = load %struct.dict*, %struct.dict** %blockingkeys7, align 8, !dbg !12398, !tbaa !2892
  %8 = bitcast %struct.redisObject** %arrayidx to i8**, !dbg !12399
  %9 = load i8*, i8** %8, align 8, !dbg !12399, !tbaa !782
  %call10 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %7, i8* noundef %9) #23, !dbg !12400
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call10, metadata !12369, metadata !DIExpression()), !dbg !12378
  %cmp11 = icmp eq %struct.dictEntry* %call10, null, !dbg !12401
  br i1 %cmp11, label %if.then, label %if.else, !dbg !12402

if.then:                                          ; preds = %for.body
  %call13 = tail call %struct.list* @listCreate() #23, !dbg !12403
  call void @llvm.dbg.value(metadata %struct.list* %call13, metadata !12370, metadata !DIExpression()), !dbg !12378
  %10 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12404, !tbaa !2890
  %blockingkeys15 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %10, i64 0, i32 2, !dbg !12405
  %11 = load %struct.dict*, %struct.dict** %blockingkeys15, align 8, !dbg !12405, !tbaa !2892
  %12 = load i8*, i8** %8, align 8, !dbg !12406, !tbaa !782
  %13 = bitcast %struct.list* %call13 to i8*, !dbg !12407
  %call18 = tail call i32 @dictAdd(%struct.dict* noundef %11, i8* noundef %12, i8* noundef %13) #23, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %call18, metadata !12372, metadata !DIExpression()), !dbg !12409
  %14 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !12410, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %14) #22, !dbg !12411
  %cmp21 = icmp eq i32 %call18, 0, !dbg !12412
  br i1 %cmp21, label %if.end, label %cond.false, !dbg !12412

cond.false:                                       ; preds = %if.then
  tail call void @__assert_fail(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 7639, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__.blockForKeys, i64 0, i64 0)) #26, !dbg !12412
  unreachable, !dbg !12412

if.else:                                          ; preds = %for.body
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call10, i64 0, i32 1, !dbg !12413
  %15 = bitcast i8** %val to %struct.list**, !dbg !12413
  %16 = load %struct.list*, %struct.list** %15, align 8, !dbg !12413, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %16, metadata !12370, metadata !DIExpression()), !dbg !12378
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %l.0 = phi %struct.list* [ %16, %if.else ], [ %call13, %if.then ], !dbg !12415
  call void @llvm.dbg.value(metadata %struct.list* %l.0, metadata !12370, metadata !DIExpression()), !dbg !12378
  %call23 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %l.0, i8* noundef nonnull %2) #23, !dbg !12416
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12417
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !12371, metadata !DIExpression()), !dbg !12378
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !12389
  br i1 %exitcond.not, label %for.end, label %if.end.for.body_crit_edge, !dbg !12390, !llvm.loop !12418

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.redisObject**, %struct.redisObject*** %blockingkeys, align 8, !dbg !12391, !tbaa !2881
  br label %for.body, !dbg !12390

for.end:                                          ; preds = %if.end, %entry
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 13, !dbg !12420
  %17 = load i32, i32* %flags, align 8, !dbg !12421, !tbaa !1402
  %or = or i32 %17, 16, !dbg !12421
  store i32 %or, i32* %flags, align 8, !dbg !12421, !tbaa !1402
  %18 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !12422, !tbaa !2921
  %inc24 = add i32 %18, 1, !dbg !12422
  store i32 %inc24, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !12422, !tbaa !2921
  ret void, !dbg !12423
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyUlong(%struct.redisClient* noundef %c, i64 noundef %ul) #0 !dbg !12424 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12428, metadata !DIExpression()), !dbg !12432
  call void @llvm.dbg.value(metadata i64 %ul, metadata !12429, metadata !DIExpression()), !dbg !12432
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !12433
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !12433
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !12430, metadata !DIExpression()), !dbg !12434
  switch i64 %ul, label %if.end3 [
    i64 0, label %if.then
    i64 1, label %if.then2
  ], !dbg !12435

if.then:                                          ; preds = %entry
  %1 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !12436, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1) #22, !dbg !12439
  br label %cleanup, !dbg !12440

if.then2:                                         ; preds = %entry
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !12441, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %2) #22, !dbg !12444
  br label %cleanup, !dbg !12445

if.end3:                                          ; preds = %entry
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i64 0, i64 0), i64 noundef %ul) #23, !dbg !12446
  %conv = sext i32 %call to i64, !dbg !12446
  call void @llvm.dbg.value(metadata i64 %conv, metadata !12431, metadata !DIExpression()), !dbg !12432
  %call5 = call i8* @sdsnewlen(i8* noundef nonnull %0, i64 noundef %conv) #23, !dbg !12447
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call5) #22, !dbg !12448
  br label %cleanup, !dbg !12449

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !12449
  ret void, !dbg !12449
}

declare !dbg !12450 dso_local %struct.listNode* @listIndex(%struct.list* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i32 @htNeedsResize(%struct.dict* nocapture noundef readonly %dict) #16 !dbg !12453 {
entry:
  call void @llvm.dbg.value(metadata %struct.dict* %dict, metadata !12457, metadata !DIExpression()), !dbg !12460
  %size1 = getelementptr inbounds %struct.dict, %struct.dict* %dict, i64 0, i32 2, i64 0, i32 1, !dbg !12461
  %0 = load i64, i64* %size1, align 8, !dbg !12461, !tbaa !8445
  %size4 = getelementptr inbounds %struct.dict, %struct.dict* %dict, i64 0, i32 2, i64 1, i32 1, !dbg !12461
  %1 = load i64, i64* %size4, align 8, !dbg !12461, !tbaa !8445
  %add = add i64 %1, %0, !dbg !12461
  call void @llvm.dbg.value(metadata i64 %add, metadata !12458, metadata !DIExpression()), !dbg !12460
  %used7 = getelementptr inbounds %struct.dict, %struct.dict* %dict, i64 0, i32 2, i64 0, i32 3, !dbg !12462
  %2 = load i64, i64* %used7, align 8, !dbg !12462, !tbaa !3545
  %used10 = getelementptr inbounds %struct.dict, %struct.dict* %dict, i64 0, i32 2, i64 1, i32 3, !dbg !12462
  %3 = load i64, i64* %used10, align 8, !dbg !12462, !tbaa !3545
  %add11 = add i64 %3, %2, !dbg !12462
  call void @llvm.dbg.value(metadata i64 %add11, metadata !12459, metadata !DIExpression()), !dbg !12460
  %tobool12 = icmp ne i64 %add11, 0
  %cmp = icmp sgt i64 %add, 4
  %or.cond15 = select i1 %cmp, i1 %tobool12, i1 false, !dbg !12463
  br i1 %or.cond15, label %land.rhs, label %land.end, !dbg !12463

land.rhs:                                         ; preds = %entry
  %mul = mul nsw i64 %add11, 100, !dbg !12464
  %div = sdiv i64 %mul, %add, !dbg !12465
  %cmp14 = icmp slt i64 %div, 10, !dbg !12466
  %phi.cast = zext i1 %cmp14 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i32 [ 0, %entry ], [ %phi.cast, %land.rhs ]
  ret i32 %4, !dbg !12467
}

declare !dbg !12468 dso_local i32 @dictResize(%struct.dict* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @sinterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** nocapture noundef readonly %setskeys, i64 noundef %setsnum, %struct.redisObject* noundef %dstkey) #0 !dbg !12469 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12473, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject** %setskeys, metadata !12474, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata i64 %setsnum, metadata !12475, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject* %dstkey, metadata !12476, metadata !DIExpression()), !dbg !12491
  %mul = shl i64 %setsnum, 3, !dbg !12492
  %call = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !12493
  %0 = bitcast i8* %call to %struct.dict**, !dbg !12493
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !12477, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !12481, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !12482, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata i64 0, metadata !12484, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata i64 0, metadata !12483, metadata !DIExpression()), !dbg !12491
  %cmp166.not = icmp eq i64 %setsnum, 0, !dbg !12494
  br i1 %cmp166.not, label %for.end, label %for.body.lr.ph, !dbg !12495

for.body.lr.ph:                                   ; preds = %entry
  %tobool.not = icmp eq %struct.redisObject* %dstkey, null
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %for.body, !dbg !12495

for.body:                                         ; preds = %for.body.lr.ph, %if.end17
  %j.0167 = phi i64 [ 0, %for.body.lr.ph ], [ %inc19, %if.end17 ]
  call void @llvm.dbg.value(metadata i64 %j.0167, metadata !12483, metadata !DIExpression()), !dbg !12491
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12496, !tbaa !2890
  %arrayidx3 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %setskeys, i64 %j.0167, !dbg !12496
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx3, align 8, !dbg !12496, !tbaa !782
  br i1 %tobool.not, label %cond.end, label %cond.end.thread, !dbg !12497

cond.end:                                         ; preds = %for.body
  %call4 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !12498
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !12485, metadata !DIExpression()), !dbg !12496
  %tobool5.not = icmp eq %struct.redisObject* %call4, null, !dbg !12499
  br i1 %tobool5.not, label %if.else, label %if.end13, !dbg !12501

cond.end.thread:                                  ; preds = %for.body
  %call1 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !12502
  call void @llvm.dbg.value(metadata %struct.redisObject* %call4, metadata !12485, metadata !DIExpression()), !dbg !12496
  %tobool5.not164 = icmp eq %struct.redisObject* %call1, null, !dbg !12499
  br i1 %tobool5.not164, label %if.then7, label %if.end13, !dbg !12501

if.then7:                                         ; preds = %cond.end.thread
  tail call void @zfree(i8* noundef %call) #23, !dbg !12503
  %3 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12505, !tbaa !2890
  %call9 = tail call i32 @deleteKey(%struct.redisDb* noundef %3, %struct.redisObject* noundef nonnull %dstkey) #22, !dbg !12509
  %tobool10.not = icmp eq i32 %call9, 0, !dbg !12509
  br i1 %tobool10.not, label %if.end, label %if.then11, !dbg !12510

if.then11:                                        ; preds = %if.then7
  %4 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12511, !tbaa !708
  %inc = add nsw i64 %4, 1, !dbg !12511
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12511, !tbaa !708
  br label %if.end, !dbg !12512

if.end:                                           ; preds = %if.then11, %if.then7
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !12513, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5) #22, !dbg !12514
  br label %cleanup91, !dbg !12515

if.else:                                          ; preds = %cond.end
  tail call void @zfree(i8* noundef %call) #23, !dbg !12503
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !12516, !tbaa !9109
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !12518
  br label %cleanup91

if.end13:                                         ; preds = %cond.end.thread, %cond.end
  %cond165 = phi %struct.redisObject* [ %call1, %cond.end.thread ], [ %call4, %cond.end ]
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %cond165, i64 0, i32 1, !dbg !12519
  %7 = load i8, i8* %type, align 8, !dbg !12519, !tbaa !1526
  %cmp14.not = icmp eq i8 %7, 2, !dbg !12521
  br i1 %cmp14.not, label %if.end17, label %if.then16, !dbg !12522

if.then16:                                        ; preds = %if.end13
  tail call void @zfree(i8* noundef %call) #23, !dbg !12523
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12525, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !12526
  br label %cleanup91, !dbg !12527

if.end17:                                         ; preds = %if.end13
  %9 = bitcast %struct.redisObject* %cond165 to %struct.dict**, !dbg !12528
  %10 = load %struct.dict*, %struct.dict** %9, align 8, !dbg !12528, !tbaa !1328
  %arrayidx18 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %j.0167, !dbg !12529
  store %struct.dict* %10, %struct.dict** %arrayidx18, align 8, !dbg !12530, !tbaa !782
  %inc19 = add nuw i64 %j.0167, 1, !dbg !12531
  call void @llvm.dbg.value(metadata i64 %inc19, metadata !12483, metadata !DIExpression()), !dbg !12491
  %exitcond.not = icmp eq i64 %inc19, %setsnum, !dbg !12494
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !12495, !llvm.loop !12532

for.end:                                          ; preds = %if.end17, %entry
  tail call void @qsort(i8* noundef %call, i64 noundef %setsnum, i64 noundef 8, i32 (i8*, i8*)* noundef nonnull @qsortCompareSetsByCardinality) #23, !dbg !12534
  %tobool20.not = icmp eq %struct.redisObject* %dstkey, null, !dbg !12535
  br i1 %tobool20.not, label %if.then21, label %if.else23, !dbg !12537

if.then21:                                        ; preds = %for.end
  %call22 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !12538
  call void @llvm.dbg.value(metadata %struct.redisObject* %call22, metadata !12481, metadata !DIExpression()), !dbg !12491
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call22) #22, !dbg !12540
  %11 = bitcast %struct.redisObject* %call22 to i8*, !dbg !12541
  tail call void @decrRefCount(i8* noundef %11) #22, !dbg !12542
  br label %if.end25, !dbg !12543

if.else23:                                        ; preds = %for.end
  %call24 = tail call %struct.redisObject* @createSetObject() #22, !dbg !12544
  call void @llvm.dbg.value(metadata %struct.redisObject* %call24, metadata !12482, metadata !DIExpression()), !dbg !12491
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then21
  %dstset.0 = phi %struct.redisObject* [ %call24, %if.else23 ], [ null, %if.then21 ], !dbg !12491
  %lenobj.0 = phi %struct.redisObject* [ null, %if.else23 ], [ %call22, %if.then21 ], !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject* %lenobj.0, metadata !12481, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata %struct.redisObject* %dstset.0, metadata !12482, metadata !DIExpression()), !dbg !12491
  %12 = load %struct.dict*, %struct.dict** %0, align 8, !dbg !12546, !tbaa !782
  %call27 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %12) #23, !dbg !12547
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call27, metadata !12479, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata i64 0, metadata !12484, metadata !DIExpression()), !dbg !12491
  %call28172 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call27) #23, !dbg !12548
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call28172, metadata !12480, metadata !DIExpression()), !dbg !12491
  %cmp29.not173 = icmp eq %struct.dictEntry* %call28172, null, !dbg !12549
  br i1 %cmp29.not173, label %while.end, label %for.cond31.preheader.lr.ph, !dbg !12550

for.cond31.preheader.lr.ph:                       ; preds = %if.end25
  %cmp32169 = icmp ugt i64 %setsnum, 1
  %13 = bitcast %struct.redisObject* %dstset.0 to %struct.dict**
  br label %for.cond31.preheader, !dbg !12550

for.cond31.preheader:                             ; preds = %for.cond31.preheader.lr.ph, %cleanup56
  %call28175 = phi %struct.dictEntry* [ %call28172, %for.cond31.preheader.lr.ph ], [ %call28, %cleanup56 ]
  %cardinality.0174 = phi i64 [ 0, %for.cond31.preheader.lr.ph ], [ %cardinality.2, %cleanup56 ]
  call void @llvm.dbg.value(metadata i64 %cardinality.0174, metadata !12484, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.value(metadata i64 1, metadata !12483, metadata !DIExpression()), !dbg !12491
  br i1 %cmp32169, label %for.body34.lr.ph, label %for.end43, !dbg !12551

for.body34.lr.ph:                                 ; preds = %for.cond31.preheader
  %key = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call28175, i64 0, i32 0
  br label %for.body34, !dbg !12551

for.body34:                                       ; preds = %for.body34.lr.ph, %for.inc41
  %j.1170 = phi i64 [ 1, %for.body34.lr.ph ], [ %inc42, %for.inc41 ]
  call void @llvm.dbg.value(metadata i64 %j.1170, metadata !12483, metadata !DIExpression()), !dbg !12491
  %arrayidx35 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %j.1170, !dbg !12553
  %14 = load %struct.dict*, %struct.dict** %arrayidx35, align 8, !dbg !12553, !tbaa !782
  %15 = load i8*, i8** %key, align 8, !dbg !12556, !tbaa !2455
  %call36 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %14, i8* noundef %15) #23, !dbg !12557
  %cmp37 = icmp eq %struct.dictEntry* %call36, null, !dbg !12558
  br i1 %cmp37, label %for.end43, label %for.inc41, !dbg !12559

for.inc41:                                        ; preds = %for.body34
  %inc42 = add nuw i64 %j.1170, 1, !dbg !12560
  call void @llvm.dbg.value(metadata i64 %inc42, metadata !12483, metadata !DIExpression()), !dbg !12491
  %exitcond178.not = icmp eq i64 %inc42, %setsnum, !dbg !12561
  br i1 %exitcond178.not, label %if.end47, label %for.body34, !dbg !12551, !llvm.loop !12562

for.end43:                                        ; preds = %for.body34, %for.cond31.preheader
  %j.1.lcssa = phi i64 [ 1, %for.cond31.preheader ], [ %j.1170, %for.body34 ], !dbg !12564
  %cmp44.not = icmp eq i64 %j.1.lcssa, %setsnum, !dbg !12565
  br i1 %cmp44.not, label %if.end47, label %cleanup56, !dbg !12567, !llvm.loop !12568

if.end47:                                         ; preds = %for.inc41, %for.end43
  %key48 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call28175, i64 0, i32 0, !dbg !12570
  %16 = load i8*, i8** %key48, align 8, !dbg !12570, !tbaa !2455
  %17 = bitcast i8* %16 to %struct.redisObject*, !dbg !12570
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !12489, metadata !DIExpression()), !dbg !12571
  br i1 %tobool20.not, label %if.then50, label %if.else52, !dbg !12572

if.then50:                                        ; preds = %if.end47
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %17) #22, !dbg !12573
  %inc51 = add i64 %cardinality.0174, 1, !dbg !12576
  call void @llvm.dbg.value(metadata i64 %inc51, metadata !12484, metadata !DIExpression()), !dbg !12491
  br label %cleanup56, !dbg !12577

if.else52:                                        ; preds = %if.end47
  %18 = load %struct.dict*, %struct.dict** %13, align 8, !dbg !12578, !tbaa !1328
  %call54 = tail call i32 @dictAdd(%struct.dict* noundef %18, i8* noundef %16, i8* noundef null) #23, !dbg !12580
  tail call void @incrRefCount(%struct.redisObject* noundef %17) #22, !dbg !12581
  br label %cleanup56

cleanup56:                                        ; preds = %if.then50, %if.else52, %for.end43
  %cardinality.2 = phi i64 [ %cardinality.0174, %for.end43 ], [ %cardinality.0174, %if.else52 ], [ %inc51, %if.then50 ], !dbg !12582
  call void @llvm.dbg.value(metadata i64 %cardinality.2, metadata !12484, metadata !DIExpression()), !dbg !12491
  %call28 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call27) #23, !dbg !12548
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call28, metadata !12480, metadata !DIExpression()), !dbg !12491
  %cmp29.not = icmp eq %struct.dictEntry* %call28, null, !dbg !12549
  br i1 %cmp29.not, label %while.end, label %for.cond31.preheader, !dbg !12550

while.end:                                        ; preds = %cleanup56, %if.end25
  %cardinality.0.lcssa = phi i64 [ 0, %if.end25 ], [ %cardinality.2, %cleanup56 ], !dbg !12582
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call27) #23, !dbg !12583
  br i1 %tobool20.not, label %if.else86, label %if.then60, !dbg !12584

if.then60:                                        ; preds = %while.end
  %db61 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12585
  %19 = load %struct.redisDb*, %struct.redisDb** %db61, align 8, !dbg !12585, !tbaa !2890
  %call62 = tail call i32 @deleteKey(%struct.redisDb* noundef %19, %struct.redisObject* noundef nonnull %dstkey) #22, !dbg !12588
  %20 = bitcast %struct.redisObject* %dstset.0 to %struct.dict**, !dbg !12589
  %21 = load %struct.dict*, %struct.dict** %20, align 8, !dbg !12589, !tbaa !1328
  %used = getelementptr inbounds %struct.dict, %struct.dict* %21, i64 0, i32 2, i64 0, i32 3, !dbg !12589
  %22 = load i64, i64* %used, align 8, !dbg !12589, !tbaa !3545
  %used68 = getelementptr inbounds %struct.dict, %struct.dict* %21, i64 0, i32 2, i64 1, i32 3, !dbg !12589
  %23 = load i64, i64* %used68, align 8, !dbg !12589, !tbaa !3545
  %add = sub i64 0, %23, !dbg !12591
  %cmp69.not = icmp eq i64 %22, %add, !dbg !12591
  br i1 %cmp69.not, label %if.else83, label %if.then71, !dbg !12592

if.then71:                                        ; preds = %if.then60
  %24 = load %struct.redisDb*, %struct.redisDb** %db61, align 8, !dbg !12593, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %24, i64 0, i32 0, !dbg !12595
  %25 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !12595, !tbaa !2353
  %26 = bitcast %struct.redisObject* %dstkey to i8*, !dbg !12596
  %27 = bitcast %struct.redisObject* %dstset.0 to i8*, !dbg !12597
  %call73 = tail call i32 @dictAdd(%struct.dict* noundef %25, i8* noundef nonnull %26, i8* noundef %27) #23, !dbg !12598
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %dstkey) #22, !dbg !12599
  %28 = load %struct.dict*, %struct.dict** %20, align 8, !dbg !12600, !tbaa !1328
  %used77 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 0, i32 3, !dbg !12600
  %29 = load i64, i64* %used77, align 8, !dbg !12600, !tbaa !3545
  %used81 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 1, i32 3, !dbg !12600
  %30 = load i64, i64* %used81, align 8, !dbg !12600, !tbaa !3545
  %add82 = add i64 %30, %29, !dbg !12600
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add82) #22, !dbg !12601
  br label %if.end84, !dbg !12602

if.else83:                                        ; preds = %if.then60
  %31 = bitcast %struct.redisObject* %dstset.0 to i8*, !dbg !12603
  tail call void @decrRefCount(i8* noundef %31) #22, !dbg !12605
  %32 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !12606, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %32) #22, !dbg !12607
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then71
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12608, !tbaa !708
  %inc85 = add nsw i64 %33, 1, !dbg !12608
  store i64 %inc85, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12608, !tbaa !708
  br label %if.end90, !dbg !12609

if.else86:                                        ; preds = %while.end
  %call87 = tail call i8* (...) @sdsempty() #23, !dbg !12610
  %call88 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call87, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i64 0, i64 0), i64 noundef %cardinality.0.lcssa) #23, !dbg !12612
  %ptr89 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %lenobj.0, i64 0, i32 0, !dbg !12613
  store i8* %call88, i8** %ptr89, align 8, !dbg !12614, !tbaa !1328
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.end84
  tail call void @zfree(i8* noundef %call) #23, !dbg !12615
  br label %cleanup91, !dbg !12616

cleanup91:                                        ; preds = %if.then16, %if.else, %if.end, %if.end90
  ret void, !dbg !12616
}

declare !dbg !12617 dso_local void @qsort(i8* noundef, i64 noundef, i64 noundef, i32 (i8*, i8*)* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i32 @qsortCompareSetsByCardinality(i8* nocapture noundef readonly %s1, i8* nocapture noundef readonly %s2) #16 !dbg !12624 {
entry:
  call void @llvm.dbg.value(metadata i8* %s1, metadata !12626, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.value(metadata i8* %s2, metadata !12627, metadata !DIExpression()), !dbg !12630
  %0 = bitcast i8* %s1 to %struct.dict**, !dbg !12631
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !12628, metadata !DIExpression()), !dbg !12630
  %1 = bitcast i8* %s2 to %struct.dict**, !dbg !12632
  call void @llvm.dbg.value(metadata %struct.dict** %1, metadata !12629, metadata !DIExpression()), !dbg !12630
  %2 = load %struct.dict*, %struct.dict** %0, align 8, !dbg !12633, !tbaa !782
  %used = getelementptr inbounds %struct.dict, %struct.dict* %2, i64 0, i32 2, i64 0, i32 3, !dbg !12633
  %3 = load i64, i64* %used, align 8, !dbg !12633, !tbaa !3545
  %used3 = getelementptr inbounds %struct.dict, %struct.dict* %2, i64 0, i32 2, i64 1, i32 3, !dbg !12633
  %4 = load i64, i64* %used3, align 8, !dbg !12633, !tbaa !3545
  %5 = load %struct.dict*, %struct.dict** %1, align 8, !dbg !12634, !tbaa !782
  %used6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 3, !dbg !12634
  %6 = load i64, i64* %used6, align 8, !dbg !12634, !tbaa !3545
  %used9 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 3, !dbg !12634
  %7 = load i64, i64* %used9, align 8, !dbg !12634, !tbaa !3545
  %add10.neg = add i64 %4, %3, !dbg !12634
  %8 = add i64 %6, %7, !dbg !12635
  %sub = sub i64 %add10.neg, %8, !dbg !12635
  %conv = trunc i64 %sub to i32, !dbg !12633
  ret i32 %conv, !dbg !12636
}

; Function Attrs: noinline nounwind uwtable
define internal void @sunionDiffGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject** nocapture noundef readonly %setskeys, i32 noundef %setsnum, %struct.redisObject* noundef %dstkey, i32 noundef %op) #0 !dbg !12637 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12641, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata %struct.redisObject** %setskeys, metadata !12642, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 %setsnum, metadata !12643, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata %struct.redisObject* %dstkey, metadata !12644, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 %op, metadata !12645, metadata !DIExpression()), !dbg !12665
  %conv = sext i32 %setsnum to i64, !dbg !12666
  %mul = shl nsw i64 %conv, 3, !dbg !12667
  %call = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !12668
  %0 = bitcast i8* %call to %struct.dict**, !dbg !12668
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !12646, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !12649, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12651, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12650, metadata !DIExpression()), !dbg !12665
  %cmp193 = icmp sgt i32 %setsnum, 0, !dbg !12669
  br i1 %cmp193, label %for.body.lr.ph, label %for.end.thread, !dbg !12670

for.end.thread:                                   ; preds = %entry
  %call17217 = tail call %struct.redisObject* @createSetObject() #22, !dbg !12671
  call void @llvm.dbg.value(metadata %struct.redisObject* %call17, metadata !12649, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12650, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12651, metadata !DIExpression()), !dbg !12665
  br label %for.end75, !dbg !12672

for.body.lr.ph:                                   ; preds = %entry
  %tobool.not = icmp eq %struct.redisObject* %dstkey, null
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %wide.trip.count = zext i32 %setsnum to i64, !dbg !12669
  br label %for.body, !dbg !12670

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12650, metadata !DIExpression()), !dbg !12665
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12673, !tbaa !2890
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %setskeys, i64 %indvars.iv, !dbg !12673
  %2 = load %struct.redisObject*, %struct.redisObject** %arrayidx5, align 8, !dbg !12673, !tbaa !782
  br i1 %tobool.not, label %cond.false, label %cond.true, !dbg !12674

cond.true:                                        ; preds = %for.body
  %call2 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !12675
  br label %cond.end, !dbg !12674

cond.false:                                       ; preds = %for.body
  %call6 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !12676
  br label %cond.end, !dbg !12674

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.redisObject* [ %call2, %cond.true ], [ %call6, %cond.false ], !dbg !12674
  call void @llvm.dbg.value(metadata %struct.redisObject* %cond, metadata !12652, metadata !DIExpression()), !dbg !12673
  %tobool7.not = icmp eq %struct.redisObject* %cond, null, !dbg !12677
  br i1 %tobool7.not, label %for.inc, label %if.end, !dbg !12679

if.end:                                           ; preds = %cond.end
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %cond, i64 0, i32 1, !dbg !12680
  %3 = load i8, i8* %type, align 8, !dbg !12680, !tbaa !1526
  %cmp11.not = icmp eq i8 %3, 2, !dbg !12682
  br i1 %cmp11.not, label %if.end14, label %cleanup, !dbg !12683

if.end14:                                         ; preds = %if.end
  %4 = bitcast %struct.redisObject* %cond to %struct.dict**, !dbg !12684
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !12684, !tbaa !1328
  br label %for.inc, !dbg !12685

cleanup:                                          ; preds = %if.end
  tail call void @zfree(i8* noundef %call) #23, !dbg !12686
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12688, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !12689
  br label %cleanup117

for.inc:                                          ; preds = %cond.end, %if.end14
  %.sink = phi %struct.dict* [ %5, %if.end14 ], [ null, %cond.end ]
  %arrayidx16 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %indvars.iv, !dbg !12673
  store %struct.dict* %.sink, %struct.dict** %arrayidx16, align 8, !dbg !12673, !tbaa !782
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12690
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !12650, metadata !DIExpression()), !dbg !12665
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !12669
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !12670, !llvm.loop !12691

for.end:                                          ; preds = %for.inc
  %call17 = tail call %struct.redisObject* @createSetObject() #22, !dbg !12671
  call void @llvm.dbg.value(metadata %struct.redisObject* %call17, metadata !12649, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12650, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 0, metadata !12651, metadata !DIExpression()), !dbg !12665
  br i1 %cmp193, label %for.body21.lr.ph, label %for.end75, !dbg !12672

for.body21.lr.ph:                                 ; preds = %for.end
  %cmp22 = icmp eq i32 %op, 1
  %cmp43 = icmp eq i32 %op, 0
  %7 = bitcast %struct.redisObject* %call17 to %struct.dict**
  %wide.trip.count215 = zext i32 %setsnum to i64, !dbg !12693
  br label %for.body21, !dbg !12672

for.body21:                                       ; preds = %for.body21.lr.ph, %for.inc73
  %indvars.iv212 = phi i64 [ 0, %for.body21.lr.ph ], [ %indvars.iv.next213, %for.inc73 ]
  %cardinality.0203 = phi i32 [ 0, %for.body21.lr.ph ], [ %cardinality.3, %for.inc73 ]
  call void @llvm.dbg.value(metadata i32 %cardinality.0203, metadata !12651, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i64 %indvars.iv212, metadata !12650, metadata !DIExpression()), !dbg !12665
  %cmp24 = icmp eq i64 %indvars.iv212, 0
  %or.cond = select i1 %cmp22, i1 %cmp24, i1 false, !dbg !12694
  br i1 %or.cond, label %land.lhs.true26, label %if.end31, !dbg !12694

land.lhs.true26:                                  ; preds = %for.body21
  %8 = load %struct.dict*, %struct.dict** %0, align 8, !dbg !12696, !tbaa !782
  %tobool29.not = icmp eq %struct.dict* %8, null, !dbg !12696
  br i1 %tobool29.not, label %for.end75, label %if.end31, !dbg !12697

if.end31:                                         ; preds = %land.lhs.true26, %for.body21
  %arrayidx33 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %indvars.iv212, !dbg !12698
  %9 = load %struct.dict*, %struct.dict** %arrayidx33, align 8, !dbg !12698, !tbaa !782
  %tobool34.not = icmp eq %struct.dict* %9, null, !dbg !12698
  br i1 %tobool34.not, label %for.inc73, label %if.end36, !dbg !12700

if.end36:                                         ; preds = %if.end31
  %call39 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %9) #23, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call39, metadata !12647, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata i32 %cardinality.0203, metadata !12651, metadata !DIExpression()), !dbg !12665
  %call40197 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call39) #23, !dbg !12702
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call40197, metadata !12648, metadata !DIExpression()), !dbg !12665
  %cmp41.not198 = icmp eq %struct.dictEntry* %call40197, null, !dbg !12703
  br i1 %cmp41.not198, label %while.end, label %while.body.lr.ph, !dbg !12704

while.body.lr.ph:                                 ; preds = %if.end36
  %or.cond125 = select i1 %cmp43, i1 true, i1 %cmp24
  br label %while.body, !dbg !12704

while.body:                                       ; preds = %while.body.lr.ph, %if.end65
  %call40200 = phi %struct.dictEntry* [ %call40197, %while.body.lr.ph ], [ %call40, %if.end65 ]
  %cardinality.1199 = phi i32 [ %cardinality.0203, %while.body.lr.ph ], [ %cardinality.2, %if.end65 ]
  call void @llvm.dbg.value(metadata i32 %cardinality.1199, metadata !12651, metadata !DIExpression()), !dbg !12665
  %key = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call40200, i64 0, i32 0, !dbg !12705
  %10 = load i8*, i8** %key, align 8, !dbg !12705, !tbaa !2455
  %11 = bitcast i8* %10 to %struct.redisObject*, !dbg !12705
  call void @llvm.dbg.value(metadata %struct.redisObject* %11, metadata !12656, metadata !DIExpression()), !dbg !12706
  br i1 %or.cond125, label %if.then47, label %if.else, !dbg !12707

if.then47:                                        ; preds = %while.body
  %12 = load %struct.dict*, %struct.dict** %7, align 8, !dbg !12709, !tbaa !1328
  %call49 = tail call i32 @dictAdd(%struct.dict* noundef %12, i8* noundef %10, i8* noundef null) #23, !dbg !12712
  %cmp50 = icmp eq i32 %call49, 0, !dbg !12713
  br i1 %cmp50, label %if.then52, label %if.end65, !dbg !12714

if.then52:                                        ; preds = %if.then47
  tail call void @incrRefCount(%struct.redisObject* noundef %11) #22, !dbg !12715
  %inc53 = add nsw i32 %cardinality.1199, 1, !dbg !12717
  call void @llvm.dbg.value(metadata i32 %inc53, metadata !12651, metadata !DIExpression()), !dbg !12665
  br label %if.end65, !dbg !12718

if.else:                                          ; preds = %while.body
  br i1 %cmp22, label %if.then57, label %if.end65, !dbg !12719

if.then57:                                        ; preds = %if.else
  %13 = load %struct.dict*, %struct.dict** %7, align 8, !dbg !12720, !tbaa !1328
  %call59 = tail call i32 @dictDelete(%struct.dict* noundef %13, i8* noundef %10) #23, !dbg !12724
  %cmp60 = icmp eq i32 %call59, 0, !dbg !12725
  %dec = sext i1 %cmp60 to i32, !dbg !12726
  %spec.select = add nsw i32 %cardinality.1199, %dec, !dbg !12726
  br label %if.end65, !dbg !12726

if.end65:                                         ; preds = %if.then57, %if.else, %if.then47, %if.then52
  %cardinality.2 = phi i32 [ %inc53, %if.then52 ], [ %cardinality.1199, %if.then47 ], [ %cardinality.1199, %if.else ], [ %spec.select, %if.then57 ], !dbg !12665
  call void @llvm.dbg.value(metadata i32 %cardinality.2, metadata !12651, metadata !DIExpression()), !dbg !12665
  %call40 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call39) #23, !dbg !12702
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call40, metadata !12648, metadata !DIExpression()), !dbg !12665
  %cmp41.not = icmp eq %struct.dictEntry* %call40, null, !dbg !12703
  br i1 %cmp41.not, label %while.end, label %while.body, !dbg !12704, !llvm.loop !12727

while.end:                                        ; preds = %if.end65, %if.end36
  %cardinality.1.lcssa = phi i32 [ %cardinality.0203, %if.end36 ], [ %cardinality.2, %if.end65 ], !dbg !12665
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call39) #23, !dbg !12729
  %cmp69 = icmp eq i32 %cardinality.1.lcssa, 0
  %or.cond126 = select i1 %cmp22, i1 %cmp69, i1 false, !dbg !12730
  br i1 %or.cond126, label %for.end75, label %for.inc73, !dbg !12730

for.inc73:                                        ; preds = %while.end, %if.end31
  %cardinality.3 = phi i32 [ %cardinality.1.lcssa, %while.end ], [ %cardinality.0203, %if.end31 ], !dbg !12732
  call void @llvm.dbg.value(metadata i32 %cardinality.3, metadata !12651, metadata !DIExpression()), !dbg !12665
  %indvars.iv.next213 = add nuw nsw i64 %indvars.iv212, 1, !dbg !12733
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next213, metadata !12650, metadata !DIExpression()), !dbg !12665
  %exitcond216.not = icmp eq i64 %indvars.iv.next213, %wide.trip.count215, !dbg !12693
  br i1 %exitcond216.not, label %for.end75, label %for.body21, !dbg !12672, !llvm.loop !12734

for.end75:                                        ; preds = %for.inc73, %land.lhs.true26, %while.end, %for.end.thread, %for.end
  %call17218 = phi %struct.redisObject* [ %call17, %for.end ], [ %call17217, %for.end.thread ], [ %call17, %while.end ], [ %call17, %land.lhs.true26 ], [ %call17, %for.inc73 ]
  %cardinality.4 = phi i32 [ 0, %for.end ], [ 0, %for.end.thread ], [ %cardinality.3, %for.inc73 ], [ %cardinality.0203, %land.lhs.true26 ], [ 0, %while.end ], !dbg !12732
  call void @llvm.dbg.value(metadata i32 %cardinality.4, metadata !12651, metadata !DIExpression()), !dbg !12665
  %tobool76.not = icmp eq %struct.redisObject* %dstkey, null, !dbg !12736
  br i1 %tobool76.not, label %if.then77, label %if.else90, !dbg !12737

if.then77:                                        ; preds = %for.end75
  %call78 = tail call i8* (...) @sdsempty() #23, !dbg !12738
  %call79 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call78, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %cardinality.4) #23, !dbg !12739
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call79) #22, !dbg !12740
  %14 = bitcast %struct.redisObject* %call17218 to %struct.dict**, !dbg !12741
  %15 = load %struct.dict*, %struct.dict** %14, align 8, !dbg !12741, !tbaa !1328
  %call81 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %15) #23, !dbg !12742
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call81, metadata !12647, metadata !DIExpression()), !dbg !12665
  %call83208 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call81) #23, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call83208, metadata !12648, metadata !DIExpression()), !dbg !12665
  %cmp84.not209 = icmp eq %struct.dictEntry* %call83208, null, !dbg !12744
  br i1 %cmp84.not209, label %while.end89, label %while.body86, !dbg !12745

while.body86:                                     ; preds = %if.then77, %while.body86
  %call83210 = phi %struct.dictEntry* [ %call83, %while.body86 ], [ %call83208, %if.then77 ]
  %16 = bitcast %struct.dictEntry* %call83210 to %struct.redisObject**, !dbg !12746
  %17 = load %struct.redisObject*, %struct.redisObject** %16, align 8, !dbg !12746, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !12661, metadata !DIExpression()), !dbg !12747
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %17) #22, !dbg !12748
  %call83 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call81) #23, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call83, metadata !12648, metadata !DIExpression()), !dbg !12665
  %cmp84.not = icmp eq %struct.dictEntry* %call83, null, !dbg !12744
  br i1 %cmp84.not, label %while.end89, label %while.body86, !dbg !12745, !llvm.loop !12749

while.end89:                                      ; preds = %while.body86, %if.then77
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call81) #23, !dbg !12751
  %18 = bitcast %struct.redisObject* %call17218 to i8*, !dbg !12752
  tail call void @decrRefCount(i8* noundef %18) #22, !dbg !12753
  br label %if.end116, !dbg !12754

if.else90:                                        ; preds = %for.end75
  %db91 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12755
  %19 = load %struct.redisDb*, %struct.redisDb** %db91, align 8, !dbg !12755, !tbaa !2890
  %call92 = tail call i32 @deleteKey(%struct.redisDb* noundef %19, %struct.redisObject* noundef nonnull %dstkey) #22, !dbg !12757
  %20 = bitcast %struct.redisObject* %call17218 to %struct.dict**, !dbg !12758
  %21 = load %struct.dict*, %struct.dict** %20, align 8, !dbg !12758, !tbaa !1328
  %used = getelementptr inbounds %struct.dict, %struct.dict* %21, i64 0, i32 2, i64 0, i32 3, !dbg !12758
  %22 = load i64, i64* %used, align 8, !dbg !12758, !tbaa !3545
  %used98 = getelementptr inbounds %struct.dict, %struct.dict* %21, i64 0, i32 2, i64 1, i32 3, !dbg !12758
  %23 = load i64, i64* %used98, align 8, !dbg !12758, !tbaa !3545
  %add = sub i64 0, %23, !dbg !12760
  %cmp99.not = icmp eq i64 %22, %add, !dbg !12760
  br i1 %cmp99.not, label %if.else113, label %if.then101, !dbg !12761

if.then101:                                       ; preds = %if.else90
  %24 = load %struct.redisDb*, %struct.redisDb** %db91, align 8, !dbg !12762, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %24, i64 0, i32 0, !dbg !12764
  %25 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !12764, !tbaa !2353
  %26 = bitcast %struct.redisObject* %dstkey to i8*, !dbg !12765
  %27 = bitcast %struct.redisObject* %call17218 to i8*, !dbg !12766
  %call103 = tail call i32 @dictAdd(%struct.dict* noundef %25, i8* noundef nonnull %26, i8* noundef %27) #23, !dbg !12767
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %dstkey) #22, !dbg !12768
  %28 = load %struct.dict*, %struct.dict** %20, align 8, !dbg !12769, !tbaa !1328
  %used107 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 0, i32 3, !dbg !12769
  %29 = load i64, i64* %used107, align 8, !dbg !12769, !tbaa !3545
  %used111 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 1, i32 3, !dbg !12769
  %30 = load i64, i64* %used111, align 8, !dbg !12769, !tbaa !3545
  %add112 = add i64 %30, %29, !dbg !12769
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %add112) #22, !dbg !12770
  br label %if.end114, !dbg !12771

if.else113:                                       ; preds = %if.else90
  %31 = bitcast %struct.redisObject* %call17218 to i8*, !dbg !12772
  tail call void @decrRefCount(i8* noundef %31) #22, !dbg !12774
  %32 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !12775, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %32) #22, !dbg !12776
  br label %if.end114

if.end114:                                        ; preds = %if.else113, %if.then101
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12777, !tbaa !708
  %inc115 = add nsw i64 %33, 1, !dbg !12777
  store i64 %inc115, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12777, !tbaa !708
  br label %if.end116

if.end116:                                        ; preds = %if.end114, %while.end89
  tail call void @zfree(i8* noundef %call) #23, !dbg !12778
  br label %cleanup117, !dbg !12779

cleanup117:                                       ; preds = %cleanup, %if.end116
  ret void, !dbg !12779
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %o, double* nocapture noundef writeonly %target, i8* noundef %msg) #0 !dbg !12780 {
entry:
  %value = alloca double, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12784, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !12785, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata double* %target, metadata !12786, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i8* %msg, metadata !12787, metadata !DIExpression()), !dbg !12789
  %0 = bitcast double* %value to i8*, !dbg !12790
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12790
  call void @llvm.dbg.value(metadata double* %value, metadata !12788, metadata !DIExpression(DW_OP_deref)), !dbg !12789
  %call = call i32 @getDoubleFromObject(%struct.redisObject* noundef %o, double* noundef nonnull %value) #22, !dbg !12791
  %cmp.not = icmp eq i32 %call, 0, !dbg !12793
  br i1 %cmp.not, label %if.end6, label %if.then, !dbg !12794

if.then:                                          ; preds = %entry
  %cmp1.not = icmp eq i8* %msg, null, !dbg !12795
  br i1 %cmp1.not, label %if.else, label %if.then2, !dbg !12798

if.then2:                                         ; preds = %if.then
  %call3 = tail call i8* (...) @sdsempty() #23, !dbg !12799
  %call4 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call3, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i64 0, i64 0), i8* noundef nonnull %msg) #23, !dbg !12801
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call4) #22, !dbg !12802
  br label %cleanup, !dbg !12803

if.else:                                          ; preds = %if.then
  %call5 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.273, i64 0, i64 0)) #23, !dbg !12804
  tail call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call5) #22, !dbg !12806
  br label %cleanup

if.end6:                                          ; preds = %entry
  %1 = load double, double* %value, align 8, !dbg !12807, !tbaa !6140
  call void @llvm.dbg.value(metadata double %1, metadata !12788, metadata !DIExpression()), !dbg !12789
  store double %1, double* %target, align 8, !dbg !12808, !tbaa !6140
  br label %cleanup, !dbg !12809

cleanup:                                          ; preds = %if.then2, %if.else, %if.end6
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -1, %if.else ], [ -1, %if.then2 ], !dbg !12789
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12810
  ret i32 %retval.0, !dbg !12810
}

; Function Attrs: noinline nounwind uwtable
define internal void @zaddGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key, %struct.redisObject* noundef %ele, double noundef %scoreval, i32 noundef %doincrement) #0 !dbg !12811 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12815, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !12816, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata %struct.redisObject* %ele, metadata !12817, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata double %scoreval, metadata !12818, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata i32 %doincrement, metadata !12819, metadata !DIExpression()), !dbg !12836
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !12837
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12837, !tbaa !2890
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %key) #22, !dbg !12838
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !12820, metadata !DIExpression()), !dbg !12836
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !12839
  br i1 %cmp, label %if.then, label %if.else, !dbg !12841

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.redisObject* @createZsetObject() #22, !dbg !12842
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !12820, metadata !DIExpression()), !dbg !12836
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !12844, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 0, i32 0, !dbg !12845
  %2 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !12845, !tbaa !2353
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !12846
  %4 = bitcast %struct.redisObject* %call1 to i8*, !dbg !12847
  %call3 = tail call i32 @dictAdd(%struct.dict* noundef %2, i8* noundef %3, i8* noundef %4) #23, !dbg !12848
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !12849
  br label %if.end7, !dbg !12850

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !12851
  %5 = load i8, i8* %type, align 8, !dbg !12851, !tbaa !1526
  %cmp4.not = icmp eq i8 %5, 3, !dbg !12854
  br i1 %cmp4.not, label %if.end7, label %if.then6, !dbg !12855

if.then6:                                         ; preds = %if.else
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !12856, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !12858
  br label %cleanup60, !dbg !12859

if.end7:                                          ; preds = %if.else, %if.then
  %zsetobj.0 = phi %struct.redisObject* [ %call1, %if.then ], [ %call, %if.else ], !dbg !12836
  call void @llvm.dbg.value(metadata %struct.redisObject* %zsetobj.0, metadata !12820, metadata !DIExpression()), !dbg !12836
  %7 = bitcast %struct.redisObject* %zsetobj.0 to %struct.zset**, !dbg !12860
  %8 = load %struct.zset*, %struct.zset** %7, align 8, !dbg !12860, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %8, metadata !12821, metadata !DIExpression()), !dbg !12836
  %call8 = tail call i8* @zmalloc(i64 noundef 8) #23, !dbg !12861
  %9 = bitcast i8* %call8 to double*, !dbg !12861
  call void @llvm.dbg.value(metadata double* %9, metadata !12822, metadata !DIExpression()), !dbg !12836
  %tobool.not = icmp eq i32 %doincrement, 0, !dbg !12862
  br i1 %tobool.not, label %if.else20, label %if.then9, !dbg !12863

if.then9:                                         ; preds = %if.end7
  %dict10 = getelementptr inbounds %struct.zset, %struct.zset* %8, i64 0, i32 0, !dbg !12864
  %10 = load %struct.dict*, %struct.dict** %dict10, align 8, !dbg !12864, !tbaa !6133
  %11 = bitcast %struct.redisObject* %ele to i8*, !dbg !12865
  %call11 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %10, i8* noundef %11) #23, !dbg !12866
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call11, metadata !12823, metadata !DIExpression()), !dbg !12867
  %tobool12.not = icmp eq %struct.dictEntry* %call11, null, !dbg !12868
  br i1 %tobool12.not, label %if.end15, label %if.then13, !dbg !12869

if.then13:                                        ; preds = %if.then9
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call11, i64 0, i32 1, !dbg !12870
  %12 = bitcast i8** %val to double**, !dbg !12870
  %13 = load double*, double** %12, align 8, !dbg !12870, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %13, metadata !12826, metadata !DIExpression()), !dbg !12871
  %14 = load double, double* %13, align 8, !dbg !12872, !tbaa !6140
  %add = fadd double %14, %scoreval, !dbg !12873
  br label %if.end15, !dbg !12874

if.end15:                                         ; preds = %if.then9, %if.then13
  %storemerge = phi double [ %add, %if.then13 ], [ %scoreval, %if.then9 ], !dbg !12875
  store double %storemerge, double* %9, align 8, !dbg !12875, !tbaa !6140
  %cmp16 = fcmp uno double %storemerge, 0.000000e+00, !dbg !12876
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !12878

if.then17:                                        ; preds = %if.end15
  %call18 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.274, i64 0, i64 0)) #23, !dbg !12879
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call18) #22, !dbg !12881
  tail call void @zfree(i8* noundef nonnull %call8) #23, !dbg !12882
  br label %cleanup60

if.else20:                                        ; preds = %if.end7
  store double %scoreval, double* %9, align 8, !dbg !12883, !tbaa !6140
  br label %if.end21

if.end21:                                         ; preds = %if.end15, %if.else20
  %.pre-phi = bitcast %struct.redisObject* %ele to i8*, !dbg !12885
  %dict22 = getelementptr inbounds %struct.zset, %struct.zset* %8, i64 0, i32 0, !dbg !12886
  %15 = load %struct.dict*, %struct.dict** %dict22, align 8, !dbg !12886, !tbaa !6133
  %call23 = tail call i32 @dictAdd(%struct.dict* noundef %15, i8* noundef %.pre-phi, i8* noundef nonnull %call8) #23, !dbg !12887
  %cmp24 = icmp eq i32 %call23, 0, !dbg !12888
  br i1 %cmp24, label %if.then26, label %if.else31, !dbg !12889

if.then26:                                        ; preds = %if.end21
  tail call void @incrRefCount(%struct.redisObject* noundef %ele) #22, !dbg !12890
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %8, i64 0, i32 1, !dbg !12892
  %16 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !12892, !tbaa !6138
  %17 = load double, double* %9, align 8, !dbg !12893, !tbaa !6140
  tail call void @zslInsert(%struct.zskiplist* noundef %16, double noundef %17, %struct.redisObject* noundef %ele) #22, !dbg !12894
  tail call void @incrRefCount(%struct.redisObject* noundef %ele) #22, !dbg !12895
  %18 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12896, !tbaa !708
  %inc = add nsw i64 %18, 1, !dbg !12896
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12896, !tbaa !708
  br i1 %tobool.not, label %if.else29, label %if.then28, !dbg !12897

if.then28:                                        ; preds = %if.then26
  %19 = load double, double* %9, align 8, !dbg !12898, !tbaa !6140
  tail call void @addReplyDouble(%struct.redisClient* noundef nonnull %c, double noundef %19) #22, !dbg !12900
  br label %cleanup60, !dbg !12900

if.else29:                                        ; preds = %if.then26
  %20 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !12901, !tbaa !4187
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %20) #22, !dbg !12902
  br label %cleanup60

if.else31:                                        ; preds = %if.end21
  %21 = load %struct.dict*, %struct.dict** %dict22, align 8, !dbg !12903, !tbaa !6133
  %call35 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %21, i8* noundef %.pre-phi) #23, !dbg !12904
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call35, metadata !12829, metadata !DIExpression()), !dbg !12905
  %cmp36.not = icmp eq %struct.dictEntry* %call35, null, !dbg !12906
  br i1 %cmp36.not, label %cond.false, label %cond.end, !dbg !12906

cond.false:                                       ; preds = %if.else31
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 5802) #22, !dbg !12906
  tail call void @_exit(i32 noundef 1) #26, !dbg !12906
  unreachable, !dbg !12906

cond.end:                                         ; preds = %if.else31
  %val38 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call35, i64 0, i32 1, !dbg !12907
  %22 = bitcast i8** %val38 to double**, !dbg !12907
  %23 = load double*, double** %22, align 8, !dbg !12907, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %23, metadata !12832, metadata !DIExpression()), !dbg !12905
  %24 = load double, double* %9, align 8, !dbg !12908, !tbaa !6140
  %25 = load double, double* %23, align 8, !dbg !12909, !tbaa !6140
  %cmp39 = fcmp une double %24, %25, !dbg !12910
  br i1 %cmp39, label %if.then41, label %if.else53, !dbg !12911

if.then41:                                        ; preds = %cond.end
  %zsl42 = getelementptr inbounds %struct.zset, %struct.zset* %8, i64 0, i32 1, !dbg !12912
  %26 = load %struct.zskiplist*, %struct.zskiplist** %zsl42, align 8, !dbg !12912, !tbaa !6138
  %call43 = tail call i32 @zslDelete(%struct.zskiplist* noundef %26, double noundef %25, %struct.redisObject* noundef %ele) #22, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %call43, metadata !12833, metadata !DIExpression()), !dbg !12914
  %cmp44.not = icmp eq i32 %call43, 0, !dbg !12915
  br i1 %cmp44.not, label %cond.false47, label %cond.end48, !dbg !12915

cond.false47:                                     ; preds = %if.then41
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.275, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 5809) #22, !dbg !12915
  tail call void @_exit(i32 noundef 1) #26, !dbg !12915
  unreachable, !dbg !12915

cond.end48:                                       ; preds = %if.then41
  %27 = load %struct.zskiplist*, %struct.zskiplist** %zsl42, align 8, !dbg !12916, !tbaa !6138
  %28 = load double, double* %9, align 8, !dbg !12917, !tbaa !6140
  tail call void @zslInsert(%struct.zskiplist* noundef %27, double noundef %28, %struct.redisObject* noundef %ele) #22, !dbg !12918
  tail call void @incrRefCount(%struct.redisObject* noundef %ele) #22, !dbg !12919
  %29 = load %struct.dict*, %struct.dict** %dict22, align 8, !dbg !12920, !tbaa !6133
  %call51 = tail call i32 @dictReplace(%struct.dict* noundef %29, i8* noundef %.pre-phi, i8* noundef nonnull %call8) #23, !dbg !12921
  %30 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12922, !tbaa !708
  %inc52 = add nsw i64 %30, 1, !dbg !12922
  store i64 %inc52, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !12922, !tbaa !708
  br label %if.end54, !dbg !12923

if.else53:                                        ; preds = %cond.end
  tail call void @zfree(i8* noundef nonnull %call8) #23, !dbg !12924
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %cond.end48
  br i1 %tobool.not, label %if.else57, label %if.then56, !dbg !12926

if.then56:                                        ; preds = %if.end54
  %31 = load double, double* %9, align 8, !dbg !12927, !tbaa !6140
  tail call void @addReplyDouble(%struct.redisClient* noundef nonnull %c, double noundef %31) #22, !dbg !12929
  br label %cleanup60, !dbg !12929

if.else57:                                        ; preds = %if.end54
  %32 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !12930, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %32) #22, !dbg !12931
  br label %cleanup60

cleanup60:                                        ; preds = %if.then17, %if.else29, %if.then28, %if.else57, %if.then56, %if.then6
  ret void, !dbg !12932
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getDoubleFromObject(%struct.redisObject* noundef readonly %o, double* nocapture noundef writeonly %target) #0 !dbg !12933 {
entry:
  %eptr = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !12937, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata double* %target, metadata !12938, metadata !DIExpression()), !dbg !12941
  %0 = bitcast i8** %eptr to i8*, !dbg !12942
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12942
  %cmp = icmp eq %struct.redisObject* %o, null, !dbg !12943
  br i1 %cmp, label %if.end23, label %if.else, !dbg !12945

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 1, !dbg !12946
  %1 = load i8, i8* %type, align 8, !dbg !12946, !tbaa !1526
  %cmp1 = icmp eq i8 %1, 0, !dbg !12946
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !12946

cond.false:                                       ; preds = %if.else
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3289) #22, !dbg !12946
  tail call void @_exit(i32 noundef 1) #26, !dbg !12946
  unreachable, !dbg !12946

cond.end:                                         ; preds = %if.else
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !12948
  %2 = load i8, i8* %encoding, align 1, !dbg !12948, !tbaa !1529
  switch i8 %2, label %if.else20 [
    i8 0, label %if.then6
    i8 1, label %if.then17
  ], !dbg !12950

if.then6:                                         ; preds = %cond.end
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !12951
  %3 = load i8*, i8** %ptr, align 8, !dbg !12951, !tbaa !1328
  call void @llvm.dbg.value(metadata i8** %eptr, metadata !12940, metadata !DIExpression(DW_OP_deref)), !dbg !12941
  %call = call double @strtod(i8* noundef %3, i8** noundef nonnull %eptr) #23, !dbg !12953
  call void @llvm.dbg.value(metadata double %call, metadata !12939, metadata !DIExpression()), !dbg !12941
  %4 = load i8*, i8** %eptr, align 8, !dbg !12954, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %4, metadata !12940, metadata !DIExpression()), !dbg !12941
  %5 = load i8, i8* %4, align 1, !dbg !12954, !tbaa !795
  %cmp8 = icmp ne i8 %5, 0, !dbg !12956
  %cmp10 = fcmp uno double %call, 0.000000e+00
  %or.cond = select i1 %cmp8, i1 true, i1 %cmp10, !dbg !12957
  br i1 %or.cond, label %cleanup, label %if.end23, !dbg !12957

if.then17:                                        ; preds = %cond.end
  %ptr18 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !12958
  %6 = load i8*, i8** %ptr18, align 8, !dbg !12958, !tbaa !1328
  %7 = ptrtoint i8* %6 to i64, !dbg !12961
  %conv19 = sitofp i64 %7 to double, !dbg !12961
  call void @llvm.dbg.value(metadata double %conv19, metadata !12939, metadata !DIExpression()), !dbg !12941
  br label %if.end23

if.else20:                                        ; preds = %cond.end
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3296) #22, !dbg !12962
  tail call void @_exit(i32 noundef 1) #26, !dbg !12962
  unreachable, !dbg !12962

if.end23:                                         ; preds = %entry, %if.then17, %if.then6
  %value.0 = phi double [ %call, %if.then6 ], [ %conv19, %if.then17 ], [ 0.000000e+00, %entry ], !dbg !12964
  call void @llvm.dbg.value(metadata double %value.0, metadata !12939, metadata !DIExpression()), !dbg !12941
  store double %value.0, double* %target, align 8, !dbg !12965, !tbaa !6140
  br label %cleanup, !dbg !12966

cleanup:                                          ; preds = %if.then6, %if.end23
  %retval.0 = phi i32 [ 0, %if.end23 ], [ -1, %if.then6 ], !dbg !12941
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !12967
  ret i32 %retval.0, !dbg !12967
}

; Function Attrs: nounwind
declare !dbg !12968 dso_local double @strtod(i8* noundef, i8** noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyDouble(%struct.redisClient* noundef %c, double noundef %d) #0 !dbg !12971 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !12975, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata double %d, metadata !12976, metadata !DIExpression()), !dbg !12978
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !12979
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !12979
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !12977, metadata !DIExpression()), !dbg !12980
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), double noundef %d) #23, !dbg !12981
  %call1 = call i8* (...) @sdsempty() #23, !dbg !12982
  %call3 = call i64 @strlen(i8* noundef nonnull %0) #27, !dbg !12983
  %call5 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call1, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.276, i64 0, i64 0), i64 noundef %call3, i8* noundef nonnull %0) #23, !dbg !12984
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call5) #22, !dbg !12985
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !12986
  ret void, !dbg !12986
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @zslDelete(%struct.zskiplist* nocapture noundef %zsl, double noundef %score, %struct.redisObject* noundef %obj) #0 !dbg !12987 {
entry:
  %update = alloca [32 x %struct.zskiplistNode*], align 16
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !12991, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata double %score, metadata !12992, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !12993, metadata !DIExpression()), !dbg !12997
  %0 = bitcast [32 x %struct.zskiplistNode*]* %update to i8*, !dbg !12998
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !12998
  call void @llvm.dbg.declare(metadata [32 x %struct.zskiplistNode*]* %update, metadata !12994, metadata !DIExpression()), !dbg !12999
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !13000
  %1 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13000, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !12995, metadata !DIExpression()), !dbg !12997
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !13001
  %2 = load i32, i32* %level, align 8, !dbg !13001, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %2, metadata !12996, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12997
  call void @llvm.dbg.value(metadata i32 %2, metadata !12996, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !12995, metadata !DIExpression()), !dbg !12997
  %cmp73 = icmp sgt i32 %2, 0, !dbg !13003
  br i1 %cmp73, label %while.cond.preheader.preheader, label %for.end, !dbg !13005

while.cond.preheader.preheader:                   ; preds = %entry
  %3 = zext i32 %2 to i64, !dbg !13005
  br label %while.cond.preheader, !dbg !13005

while.cond.preheader:                             ; preds = %while.cond.preheader.preheader, %while.end
  %indvars.iv = phi i64 [ %3, %while.cond.preheader.preheader ], [ %indvars.iv.next, %while.end ]
  %x.074 = phi %struct.zskiplistNode* [ %1, %while.cond.preheader.preheader ], [ %x.1.lcssa, %while.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13006
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.074, metadata !12995, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.074, metadata !12995, metadata !DIExpression()), !dbg !12997
  %forward62 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.074, i64 0, i32 0, !dbg !13007
  %4 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward62, align 8, !dbg !13007, !tbaa !1141
  %arrayidx63 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %4, i64 %indvars.iv.next, !dbg !13009
  %5 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx63, align 8, !dbg !13009, !tbaa !782
  %tobool.not64 = icmp eq %struct.zskiplistNode* %5, null, !dbg !13009
  br i1 %tobool.not64, label %while.end, label %land.rhs, !dbg !13010

land.rhs:                                         ; preds = %while.cond.preheader, %while.body
  %6 = phi %struct.zskiplistNode** [ %12, %while.body ], [ %4, %while.cond.preheader ]
  %7 = phi %struct.zskiplistNode* [ %13, %while.body ], [ %5, %while.cond.preheader ]
  %forward66 = phi %struct.zskiplistNode*** [ %forward, %while.body ], [ %forward62, %while.cond.preheader ]
  %x.165 = phi %struct.zskiplistNode* [ %11, %while.body ], [ %x.074, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.165, metadata !12995, metadata !DIExpression()), !dbg !12997
  %score4 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %7, i64 0, i32 3, !dbg !13011
  %8 = load double, double* %score4, align 8, !dbg !13011, !tbaa !6393
  %cmp5 = fcmp olt double %8, %score, !dbg !13012
  br i1 %cmp5, label %while.body, label %lor.rhs, !dbg !13013

lor.rhs:                                          ; preds = %land.rhs
  %cmp10 = fcmp oeq double %8, %score, !dbg !13014
  br i1 %cmp10, label %land.rhs11, label %while.end, !dbg !13015

land.rhs11:                                       ; preds = %lor.rhs
  %obj15 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %7, i64 0, i32 4, !dbg !13016
  %9 = load %struct.redisObject*, %struct.redisObject** %obj15, align 8, !dbg !13016, !tbaa !6399
  %call = tail call i32 @compareStringObjects(%struct.redisObject* noundef %9, %struct.redisObject* noundef %obj) #22, !dbg !13017
  %cmp16 = icmp slt i32 %call, 0, !dbg !13018
  br i1 %cmp16, label %land.rhs11.while.body_crit_edge, label %while.end, !dbg !13019

land.rhs11.while.body_crit_edge:                  ; preds = %land.rhs11
  %.pre = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward66, align 8, !dbg !13020, !tbaa !1141
  br label %while.body, !dbg !13019

while.body:                                       ; preds = %land.rhs11.while.body_crit_edge, %land.rhs
  %10 = phi %struct.zskiplistNode** [ %.pre, %land.rhs11.while.body_crit_edge ], [ %6, %land.rhs ], !dbg !13020
  %arrayidx20 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %10, i64 %indvars.iv.next, !dbg !13021
  %11 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx20, align 8, !dbg !13021, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %11, metadata !12995, metadata !DIExpression()), !dbg !12997
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %11, i64 0, i32 0, !dbg !13007
  %12 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13007, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %12, i64 %indvars.iv.next, !dbg !13009
  %13 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !13009, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %13, null, !dbg !13009
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !13010, !llvm.loop !13022

while.end:                                        ; preds = %land.rhs11, %while.body, %lor.rhs, %while.cond.preheader
  %x.1.lcssa = phi %struct.zskiplistNode* [ %x.074, %while.cond.preheader ], [ %x.165, %lor.rhs ], [ %11, %while.body ], [ %x.165, %land.rhs11 ], !dbg !12997
  %arrayidx22 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next, !dbg !13024
  store %struct.zskiplistNode* %x.1.lcssa, %struct.zskiplistNode** %arrayidx22, align 8, !dbg !13025, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !12996, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.lcssa, metadata !12995, metadata !DIExpression()), !dbg !12997
  %cmp = icmp sgt i64 %indvars.iv, 1, !dbg !13003
  br i1 %cmp, label %while.cond.preheader, label %for.end, !dbg !13005, !llvm.loop !13026

for.end:                                          ; preds = %while.end, %entry
  %x.0.lcssa = phi %struct.zskiplistNode* [ %1, %entry ], [ %x.1.lcssa, %while.end ], !dbg !13028
  %forward23 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.0.lcssa, i64 0, i32 0, !dbg !13029
  %14 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward23, align 8, !dbg !13029, !tbaa !1141
  %15 = load %struct.zskiplistNode*, %struct.zskiplistNode** %14, align 8, !dbg !13030, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %15, metadata !12995, metadata !DIExpression()), !dbg !12997
  %tobool25.not = icmp eq %struct.zskiplistNode* %15, null, !dbg !13031
  br i1 %tobool25.not, label %cleanup, label %land.lhs.true, !dbg !13033

land.lhs.true:                                    ; preds = %for.end
  %score26 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %15, i64 0, i32 3, !dbg !13034
  %16 = load double, double* %score26, align 8, !dbg !13034, !tbaa !6393
  %cmp27 = fcmp oeq double %16, %score, !dbg !13035
  br i1 %cmp27, label %land.lhs.true28, label %cleanup, !dbg !13036

land.lhs.true28:                                  ; preds = %land.lhs.true
  %obj29 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %15, i64 0, i32 4, !dbg !13037
  %17 = load %struct.redisObject*, %struct.redisObject** %obj29, align 8, !dbg !13037, !tbaa !6399
  %call30 = tail call i32 @equalStringObjects(%struct.redisObject* noundef %17, %struct.redisObject* noundef %obj) #22, !dbg !13038
  %tobool31.not = icmp eq i32 %call30, 0, !dbg !13038
  br i1 %tobool31.not, label %cleanup, label %if.then, !dbg !13039

if.then:                                          ; preds = %land.lhs.true28
  %arraydecay = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 0, !dbg !13040
  call void @zslDeleteNode(%struct.zskiplist* noundef %zsl, %struct.zskiplistNode* noundef nonnull %15, %struct.zskiplistNode** noundef nonnull %arraydecay) #22, !dbg !13042
  tail call void @zslFreeNode(%struct.zskiplistNode* noundef nonnull %15) #22, !dbg !13043
  br label %cleanup, !dbg !13044

cleanup:                                          ; preds = %for.end, %land.lhs.true, %land.lhs.true28, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %land.lhs.true28 ], [ 0, %land.lhs.true ], [ 0, %for.end ], !dbg !13045
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !13046
  ret i32 %retval.0, !dbg !13046
}

; Function Attrs: noinline nounwind uwtable
define internal void @zslFreeNode(%struct.zskiplistNode* noundef %node) #0 !dbg !13047 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %node, metadata !13051, metadata !DIExpression()), !dbg !13052
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %node, i64 0, i32 4, !dbg !13053
  %0 = bitcast %struct.redisObject** %obj to i8**, !dbg !13053
  %1 = load i8*, i8** %0, align 8, !dbg !13053, !tbaa !6399
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !13054
  %2 = bitcast %struct.zskiplistNode* %node to i8**, !dbg !13055
  %3 = load i8*, i8** %2, align 8, !dbg !13055, !tbaa !1141
  tail call void @zfree(i8* noundef %3) #23, !dbg !13056
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %node, i64 0, i32 2, !dbg !13057
  %4 = bitcast i32** %span to i8**, !dbg !13057
  %5 = load i8*, i8** %4, align 8, !dbg !13057, !tbaa !1148
  tail call void @zfree(i8* noundef %5) #23, !dbg !13058
  %6 = bitcast %struct.zskiplistNode* %node to i8*, !dbg !13059
  tail call void @zfree(i8* noundef %6) #23, !dbg !13060
  ret void, !dbg !13061
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @zslDeleteRangeByScore(%struct.zskiplist* nocapture noundef %zsl, double noundef %min, double noundef %max, %struct.dict* noundef %dict) unnamed_addr #0 !dbg !13062 {
entry:
  %update = alloca [32 x %struct.zskiplistNode*], align 16
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !13066, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata double %min, metadata !13067, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata double %max, metadata !13068, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.dict* %dict, metadata !13069, metadata !DIExpression()), !dbg !13076
  %0 = bitcast [32 x %struct.zskiplistNode*]* %update to i8*, !dbg !13077
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !13077
  call void @llvm.dbg.declare(metadata [32 x %struct.zskiplistNode*]* %update, metadata !13070, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.value(metadata i64 0, metadata !13072, metadata !DIExpression()), !dbg !13076
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !13079
  %1 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13079, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13071, metadata !DIExpression()), !dbg !13076
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !13080
  %2 = load i32, i32* %level, align 8, !dbg !13080, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %2, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i32 %2, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  %cmp45 = icmp sgt i32 %2, 0, !dbg !13082
  br i1 %cmp45, label %while.cond.preheader.preheader, label %for.end, !dbg !13084

while.cond.preheader.preheader:                   ; preds = %entry
  %3 = zext i32 %2 to i64, !dbg !13084
  %xtraiter = and i64 %3, 1, !dbg !13084
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !13084
  br i1 %lcmp.mod.not, label %while.cond.preheader.prol.loopexit, label %while.cond.preheader.prol, !dbg !13084

while.cond.preheader.prol:                        ; preds = %while.cond.preheader.preheader
  %indvars.iv.next.prol = add nsw i64 %3, -1, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13071, metadata !DIExpression()), !dbg !13076
  br label %while.cond.prol, !dbg !13086

while.cond.prol:                                  ; preds = %land.rhs.prol, %while.cond.preheader.prol
  %x.1.prol = phi %struct.zskiplistNode* [ %5, %land.rhs.prol ], [ %1, %while.cond.preheader.prol ], !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.prol, metadata !13071, metadata !DIExpression()), !dbg !13076
  %forward.prol = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1.prol, i64 0, i32 0, !dbg !13088
  %4 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.prol, align 8, !dbg !13088, !tbaa !1141
  %arrayidx.prol = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %4, i64 %indvars.iv.next.prol, !dbg !13089
  %5 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx.prol, align 8, !dbg !13089, !tbaa !782
  %tobool.not.prol = icmp eq %struct.zskiplistNode* %5, null, !dbg !13089
  br i1 %tobool.not.prol, label %while.end.prol, label %land.rhs.prol, !dbg !13090

land.rhs.prol:                                    ; preds = %while.cond.prol
  %score.prol = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %5, i64 0, i32 3, !dbg !13091
  %6 = load double, double* %score.prol, align 8, !dbg !13091, !tbaa !6393
  %cmp4.prol = fcmp olt double %6, %min, !dbg !13092
  br i1 %cmp4.prol, label %while.cond.prol, label %while.end.prol, !dbg !13086, !llvm.loop !13093

while.end.prol:                                   ; preds = %land.rhs.prol, %while.cond.prol
  %arrayidx9.prol = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next.prol, !dbg !13095
  store %struct.zskiplistNode* %x.1.prol, %struct.zskiplistNode** %arrayidx9.prol, align 8, !dbg !13096, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.prol, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.prol, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.prol, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  br label %while.cond.preheader.prol.loopexit, !dbg !13084

while.cond.preheader.prol.loopexit:               ; preds = %while.end.prol, %while.cond.preheader.preheader
  %indvars.iv.unr = phi i64 [ %3, %while.cond.preheader.preheader ], [ %indvars.iv.next.prol, %while.end.prol ]
  %x.046.unr = phi %struct.zskiplistNode* [ %1, %while.cond.preheader.preheader ], [ %x.1.prol, %while.end.prol ]
  %x.1.lcssa.lcssa.unr = phi %struct.zskiplistNode* [ undef, %while.cond.preheader.preheader ], [ %x.1.prol, %while.end.prol ]
  %7 = icmp eq i32 %2, 1, !dbg !13084
  br i1 %7, label %for.end, label %while.cond.preheader, !dbg !13084

while.cond.preheader:                             ; preds = %while.cond.preheader.prol.loopexit, %while.end.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %while.end.1 ], [ %indvars.iv.unr, %while.cond.preheader.prol.loopexit ]
  %x.046 = phi %struct.zskiplistNode* [ %x.1.1, %while.end.1 ], [ %x.046.unr, %while.cond.preheader.prol.loopexit ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.046, metadata !13071, metadata !DIExpression()), !dbg !13076
  br label %while.cond, !dbg !13086

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %x.1 = phi %struct.zskiplistNode* [ %9, %land.rhs ], [ %x.046, %while.cond.preheader ], !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13071, metadata !DIExpression()), !dbg !13076
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1, i64 0, i32 0, !dbg !13088
  %8 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13088, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %8, i64 %indvars.iv.next, !dbg !13089
  %9 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !13089, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %9, null, !dbg !13089
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !13090

land.rhs:                                         ; preds = %while.cond
  %score = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %9, i64 0, i32 3, !dbg !13091
  %10 = load double, double* %score, align 8, !dbg !13091, !tbaa !6393
  %cmp4 = fcmp olt double %10, %min, !dbg !13092
  br i1 %cmp4, label %while.cond, label %while.end, !dbg !13086, !llvm.loop !13093

while.end:                                        ; preds = %while.cond, %land.rhs
  %arrayidx9 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next, !dbg !13095
  store %struct.zskiplistNode* %x.1, %struct.zskiplistNode** %arrayidx9, align 8, !dbg !13096, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, -2, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13071, metadata !DIExpression()), !dbg !13076
  br label %while.cond.1, !dbg !13086

while.cond.1:                                     ; preds = %land.rhs.1, %while.end
  %x.1.1 = phi %struct.zskiplistNode* [ %12, %land.rhs.1 ], [ %x.1, %while.end ], !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.1, metadata !13071, metadata !DIExpression()), !dbg !13076
  %forward.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1.1, i64 0, i32 0, !dbg !13088
  %11 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.1, align 8, !dbg !13088, !tbaa !1141
  %arrayidx.1 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %11, i64 %indvars.iv.next.1, !dbg !13089
  %12 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx.1, align 8, !dbg !13089, !tbaa !782
  %tobool.not.1 = icmp eq %struct.zskiplistNode* %12, null, !dbg !13089
  br i1 %tobool.not.1, label %while.end.1, label %land.rhs.1, !dbg !13090

land.rhs.1:                                       ; preds = %while.cond.1
  %score.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %12, i64 0, i32 3, !dbg !13091
  %13 = load double, double* %score.1, align 8, !dbg !13091, !tbaa !6393
  %cmp4.1 = fcmp olt double %13, %min, !dbg !13092
  br i1 %cmp4.1, label %while.cond.1, label %while.end.1, !dbg !13086, !llvm.loop !13093

while.end.1:                                      ; preds = %land.rhs.1, %while.cond.1
  %arrayidx9.1 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next.1, !dbg !13095
  store %struct.zskiplistNode* %x.1.1, %struct.zskiplistNode** %arrayidx9.1, align 8, !dbg !13096, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.1, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !13073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13076
  %cmp.1 = icmp sgt i64 %indvars.iv, 2, !dbg !13082
  br i1 %cmp.1, label %while.cond.preheader, label %for.end, !dbg !13084, !llvm.loop !13097

for.end:                                          ; preds = %while.cond.preheader.prol.loopexit, %while.end.1, %entry
  %x.0.lcssa = phi %struct.zskiplistNode* [ %1, %entry ], [ %x.1.lcssa.lcssa.unr, %while.cond.preheader.prol.loopexit ], [ %x.1.1, %while.end.1 ], !dbg !13099
  %forward10 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.0.lcssa, i64 0, i32 0, !dbg !13100
  %14 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward10, align 8, !dbg !13100, !tbaa !1141
  %15 = load %struct.zskiplistNode*, %struct.zskiplistNode** %14, align 8, !dbg !13101, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %15, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 0, metadata !13072, metadata !DIExpression()), !dbg !13076
  %tobool13.not48 = icmp eq %struct.zskiplistNode* %15, null, !dbg !13102
  br i1 %tobool13.not48, label %while.end21, label %land.rhs14.lr.ph, !dbg !13103

land.rhs14.lr.ph:                                 ; preds = %for.end
  %arraydecay = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 0
  br label %land.rhs14, !dbg !13103

land.rhs14:                                       ; preds = %land.rhs14.lr.ph, %while.body18
  %x.250 = phi %struct.zskiplistNode* [ %15, %land.rhs14.lr.ph ], [ %18, %while.body18 ]
  %removed.049 = phi i64 [ 0, %land.rhs14.lr.ph ], [ %inc, %while.body18 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.250, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 %removed.049, metadata !13072, metadata !DIExpression()), !dbg !13076
  %score15 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.250, i64 0, i32 3, !dbg !13104
  %16 = load double, double* %score15, align 8, !dbg !13104, !tbaa !6393
  %cmp16 = fcmp ugt double %16, %max, !dbg !13105
  br i1 %cmp16, label %while.end21, label %while.body18, !dbg !13106

while.body18:                                     ; preds = %land.rhs14
  %forward19 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.250, i64 0, i32 0, !dbg !13107
  %17 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward19, align 8, !dbg !13107, !tbaa !1141
  %18 = load %struct.zskiplistNode*, %struct.zskiplistNode** %17, align 8, !dbg !13108, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %18, metadata !13074, metadata !DIExpression()), !dbg !13109
  call void @zslDeleteNode(%struct.zskiplist* noundef %zsl, %struct.zskiplistNode* noundef nonnull %x.250, %struct.zskiplistNode** noundef nonnull %arraydecay) #22, !dbg !13110
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.250, i64 0, i32 4, !dbg !13111
  %19 = bitcast %struct.redisObject** %obj to i8**, !dbg !13111
  %20 = load i8*, i8** %19, align 8, !dbg !13111, !tbaa !6399
  %call = tail call i32 @dictDelete(%struct.dict* noundef %dict, i8* noundef %20) #23, !dbg !13112
  tail call void @zslFreeNode(%struct.zskiplistNode* noundef nonnull %x.250) #22, !dbg !13113
  %inc = add i64 %removed.049, 1, !dbg !13114
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %18, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13072, metadata !DIExpression()), !dbg !13076
  %tobool13.not = icmp eq %struct.zskiplistNode* %18, null, !dbg !13102
  br i1 %tobool13.not, label %while.end21, label %land.rhs14, !dbg !13103, !llvm.loop !13115

while.end21:                                      ; preds = %land.rhs14, %while.body18, %for.end
  %removed.0.lcssa = phi i64 [ 0, %for.end ], [ %inc, %while.body18 ], [ %removed.049, %land.rhs14 ], !dbg !13076
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !13117
  ret i64 %removed.0.lcssa, !dbg !13118
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @zslDeleteRangeByRank(%struct.zskiplist* nocapture noundef %zsl, i32 noundef %start, i32 noundef %end, %struct.dict* noundef %dict) unnamed_addr #0 !dbg !13119 {
entry:
  %update = alloca [32 x %struct.zskiplistNode*], align 16
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !13123, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 %start, metadata !13124, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 %end, metadata !13125, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata %struct.dict* %dict, metadata !13126, metadata !DIExpression()), !dbg !13134
  %0 = bitcast [32 x %struct.zskiplistNode*]* %update to i8*, !dbg !13135
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !13135
  call void @llvm.dbg.declare(metadata [32 x %struct.zskiplistNode*]* %update, metadata !13127, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i64 0, metadata !13129, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 0, metadata !13130, metadata !DIExpression()), !dbg !13134
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !13137
  %1 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13137, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13128, metadata !DIExpression()), !dbg !13134
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !13138
  %2 = load i32, i32* %level, align 8, !dbg !13138, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %2, metadata !13131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13134
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 %2, metadata !13131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13134
  call void @llvm.dbg.value(metadata i64 0, metadata !13129, metadata !DIExpression()), !dbg !13134
  %cmp90 = icmp sgt i32 %2, 0, !dbg !13140
  br i1 %cmp90, label %while.cond.preheader.lr.ph, label %for.end, !dbg !13142

while.cond.preheader.lr.ph:                       ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %2, metadata !13131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13134
  %conv573 = zext i32 %start to i64
  %3 = zext i32 %2 to i64, !dbg !13142
  br label %while.cond.preheader, !dbg !13142

while.cond.preheader:                             ; preds = %while.cond.preheader.lr.ph, %while.end
  %indvars.iv = phi i64 [ %3, %while.cond.preheader.lr.ph ], [ %indvars.iv.next, %while.end ]
  %x.093 = phi %struct.zskiplistNode* [ %1, %while.cond.preheader.lr.ph ], [ %x.1.lcssa, %while.end ]
  %traversed.091 = phi i64 [ 0, %while.cond.preheader.lr.ph ], [ %traversed.1.lcssa, %while.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13143
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.093, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.091, metadata !13129, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.093, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.091, metadata !13129, metadata !DIExpression()), !dbg !13134
  %forward75 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.093, i64 0, i32 0, !dbg !13144
  %4 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward75, align 8, !dbg !13144, !tbaa !1141
  %arrayidx76 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %4, i64 %indvars.iv.next, !dbg !13146
  %5 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx76, align 8, !dbg !13146, !tbaa !782
  %tobool.not77 = icmp eq %struct.zskiplistNode* %5, null, !dbg !13146
  br i1 %tobool.not77, label %while.end, label %land.rhs.lr.ph, !dbg !13147

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %cmp1 = icmp ugt i64 %indvars.iv, 1
  %6 = add nuw i64 %indvars.iv, 4294967294
  %7 = and i64 %6, 4294967295
  br label %land.rhs, !dbg !13147

land.rhs:                                         ; preds = %land.rhs.lr.ph, %cond.end16
  %8 = phi %struct.zskiplistNode* [ %5, %land.rhs.lr.ph ], [ %12, %cond.end16 ]
  %x.180 = phi %struct.zskiplistNode* [ %x.093, %land.rhs.lr.ph ], [ %8, %cond.end16 ]
  %traversed.178 = phi i64 [ %traversed.091, %land.rhs.lr.ph ], [ %add19, %cond.end16 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.180, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.178, metadata !13129, metadata !DIExpression()), !dbg !13134
  br i1 %cmp1, label %cond.end, label %cond.end.thread, !dbg !13148

cond.end:                                         ; preds = %land.rhs
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.180, i64 0, i32 2, !dbg !13149
  %9 = load i32*, i32** %span, align 8, !dbg !13149, !tbaa !1148
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %7, !dbg !13150
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !13150, !tbaa !926
  %conv = zext i32 %10 to i64, !dbg !13151
  %add = add i64 %traversed.178, %conv, !dbg !13152
  %cmp6 = icmp ult i64 %add, %conv573, !dbg !13153
  br i1 %cmp6, label %cond.end16, label %while.end, !dbg !13154

cond.end.thread:                                  ; preds = %land.rhs
  %add72 = add i64 %traversed.178, 1, !dbg !13152
  %cmp674 = icmp ult i64 %add72, %conv573, !dbg !13153
  br i1 %cmp674, label %cond.end16, label %while.end.thread, !dbg !13154

while.end.thread:                                 ; preds = %cond.end.thread
  %arrayidx24109 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next, !dbg !13155
  store %struct.zskiplistNode* %x.180, %struct.zskiplistNode** %arrayidx24109, align 8, !dbg !13156, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* undef, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13134
  call void @llvm.dbg.value(metadata i64 undef, metadata !13129, metadata !DIExpression()), !dbg !13134
  br label %for.end, !dbg !13142

cond.end16:                                       ; preds = %cond.end, %cond.end.thread
  %cond17 = phi i32 [ 1, %cond.end.thread ], [ %10, %cond.end ], !dbg !13157
  %conv18 = zext i32 %cond17 to i64, !dbg !13157
  %add19 = add i64 %traversed.178, %conv18, !dbg !13159
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %8, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %add19, metadata !13129, metadata !DIExpression()), !dbg !13134
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %8, i64 0, i32 0, !dbg !13144
  %11 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13144, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %11, i64 %indvars.iv.next, !dbg !13146
  %12 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !13146, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %12, null, !dbg !13146
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !13147, !llvm.loop !13160

while.end:                                        ; preds = %cond.end, %cond.end16, %while.cond.preheader
  %traversed.1.lcssa = phi i64 [ %traversed.091, %while.cond.preheader ], [ %add19, %cond.end16 ], [ %traversed.178, %cond.end ], !dbg !13134
  %x.1.lcssa = phi %struct.zskiplistNode* [ %x.093, %while.cond.preheader ], [ %8, %cond.end16 ], [ %x.180, %cond.end ], !dbg !13134
  %arrayidx24 = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 %indvars.iv.next, !dbg !13155
  store %struct.zskiplistNode* %x.1.lcssa, %struct.zskiplistNode** %arrayidx24, align 8, !dbg !13156, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.lcssa, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.1.lcssa, metadata !13129, metadata !DIExpression()), !dbg !13134
  %cmp = icmp sgt i64 %indvars.iv, 1, !dbg !13140
  br i1 %cmp, label %while.cond.preheader, label %for.end, !dbg !13142, !llvm.loop !13162

for.end:                                          ; preds = %while.end, %while.end.thread, %entry
  %traversed.0.lcssa = phi i64 [ 0, %entry ], [ %traversed.178, %while.end.thread ], [ %traversed.1.lcssa, %while.end ], !dbg !13164
  %x.0.lcssa = phi %struct.zskiplistNode* [ %1, %entry ], [ %x.180, %while.end.thread ], [ %x.1.lcssa, %while.end ], !dbg !13165
  call void @llvm.dbg.value(metadata i64 %traversed.0.lcssa, metadata !13129, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13134
  %forward25 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.0.lcssa, i64 0, i32 0, !dbg !13166
  %13 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward25, align 8, !dbg !13166, !tbaa !1141
  %14 = load %struct.zskiplistNode*, %struct.zskiplistNode** %13, align 8, !dbg !13167, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %14, metadata !13128, metadata !DIExpression()), !dbg !13134
  %conv30 = zext i32 %end to i64
  %traversed.297 = add i64 %traversed.0.lcssa, 1, !dbg !13134
  call void @llvm.dbg.value(metadata i64 0, metadata !13130, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.297, metadata !13129, metadata !DIExpression()), !dbg !13134
  %tobool2898 = icmp ne %struct.zskiplistNode* %14, null, !dbg !13168
  %cmp3199 = icmp ule i64 %traversed.297, %conv30, !dbg !13169
  %15 = select i1 %tobool2898, i1 %cmp3199, i1 false, !dbg !13169
  br i1 %15, label %while.body34.lr.ph, label %while.end39, !dbg !13170

while.body34.lr.ph:                               ; preds = %for.end
  %arraydecay = getelementptr inbounds [32 x %struct.zskiplistNode*], [32 x %struct.zskiplistNode*]* %update, i64 0, i64 0
  br label %while.body34, !dbg !13170

while.body34:                                     ; preds = %while.body34.lr.ph, %while.body34
  %traversed.2102 = phi i64 [ %traversed.297, %while.body34.lr.ph ], [ %traversed.2, %while.body34 ]
  %x.2101 = phi %struct.zskiplistNode* [ %14, %while.body34.lr.ph ], [ %17, %while.body34 ]
  %removed.0100 = phi i64 [ 0, %while.body34.lr.ph ], [ %inc37, %while.body34 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.2101, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %removed.0100, metadata !13130, metadata !DIExpression()), !dbg !13134
  %forward35 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.2101, i64 0, i32 0, !dbg !13171
  %16 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward35, align 8, !dbg !13171, !tbaa !1141
  %17 = load %struct.zskiplistNode*, %struct.zskiplistNode** %16, align 8, !dbg !13172, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %17, metadata !13132, metadata !DIExpression()), !dbg !13173
  call void @zslDeleteNode(%struct.zskiplist* noundef %zsl, %struct.zskiplistNode* noundef nonnull %x.2101, %struct.zskiplistNode** noundef nonnull %arraydecay) #22, !dbg !13174
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.2101, i64 0, i32 4, !dbg !13175
  %18 = bitcast %struct.redisObject** %obj to i8**, !dbg !13175
  %19 = load i8*, i8** %18, align 8, !dbg !13175, !tbaa !6399
  %call = tail call i32 @dictDelete(%struct.dict* noundef %dict, i8* noundef %19) #23, !dbg !13176
  tail call void @zslFreeNode(%struct.zskiplistNode* noundef nonnull %x.2101) #22, !dbg !13177
  %inc37 = add nuw nsw i64 %removed.0100, 1, !dbg !13178
  call void @llvm.dbg.value(metadata i64 %inc37, metadata !13130, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.2102, metadata !13129, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13134
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %17, metadata !13128, metadata !DIExpression()), !dbg !13134
  %traversed.2 = add i64 %traversed.2102, 1, !dbg !13134
  call void @llvm.dbg.value(metadata i64 %traversed.2, metadata !13129, metadata !DIExpression()), !dbg !13134
  %tobool28 = icmp ne %struct.zskiplistNode* %17, null, !dbg !13168
  %cmp31 = icmp ule i64 %traversed.2, %conv30, !dbg !13169
  %20 = select i1 %tobool28, i1 %cmp31, i1 false, !dbg !13169
  br i1 %20, label %while.body34, label %while.end39, !dbg !13170, !llvm.loop !13179

while.end39:                                      ; preds = %while.body34, %for.end
  %removed.0.lcssa = phi i64 [ 0, %for.end ], [ %inc37, %while.body34 ], !dbg !13134
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !13181
  ret i64 %removed.0.lcssa, !dbg !13182
}

; Function Attrs: noinline nounwind uwtable
define internal void @zunionInterGenericCommand(%struct.redisClient* noundef %c, %struct.redisObject* noundef %dstkey, i32 noundef %op) #0 !dbg !13183 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !13187, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata %struct.redisObject* %dstkey, metadata !13188, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %op, metadata !13189, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 1, metadata !13193, metadata !DIExpression()), !dbg !13239
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !13240
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13240, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !13241
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !13241, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !13242
  %2 = load i8*, i8** %ptr, align 8, !dbg !13242, !tbaa !1328
  %call = tail call i32 @atoi(i8* noundef %2) #27, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %call, metadata !13192, metadata !DIExpression()), !dbg !13239
  %cmp = icmp slt i32 %call, 1, !dbg !13244
  br i1 %cmp, label %if.then, label %if.end, !dbg !13246

if.then:                                          ; preds = %entry
  %call1 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.277, i64 0, i64 0)) #23, !dbg !13247
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call1) #22, !dbg !13249
  br label %cleanup274, !dbg !13250

if.end:                                           ; preds = %entry
  %add = add nuw nsw i32 %call, 3, !dbg !13251
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !13253
  %3 = load i32, i32* %argc, align 8, !dbg !13253, !tbaa !1350
  %cmp2 = icmp sgt i32 %add, %3, !dbg !13254
  br i1 %cmp2, label %if.then3, label %for.body.lr.ph, !dbg !13255

if.then3:                                         ; preds = %if.end
  %4 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !13256, !tbaa !11130
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %4) #22, !dbg !13258
  br label %cleanup274, !dbg !13259

for.body.lr.ph:                                   ; preds = %if.end
  %conv446 = zext i32 %call to i64, !dbg !13260
  %mul = shl nuw nsw i64 %conv446, 4, !dbg !13261
  %call5 = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !13262
  %5 = bitcast i8* %call5 to %struct.zsetopsrc*, !dbg !13262
  call void @llvm.dbg.value(metadata %struct.zsetopsrc* %5, metadata !13194, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 3, metadata !13191, metadata !DIExpression()), !dbg !13239
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %for.body, !dbg !13263

for.body:                                         ; preds = %for.body.lr.ph, %if.end24
  %indvars.iv490 = phi i64 [ 3, %for.body.lr.ph ], [ %indvars.iv.next491, %if.end24 ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end24 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i64 %indvars.iv490, metadata !13191, metadata !DIExpression()), !dbg !13239
  %6 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !13264, !tbaa !2890
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13265, !tbaa !1352
  %arrayidx9 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 %indvars.iv490, !dbg !13266
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx9, align 8, !dbg !13266, !tbaa !782
  %call10 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %6, %struct.redisObject* noundef %8) #22, !dbg !13267
  call void @llvm.dbg.value(metadata %struct.redisObject* %call10, metadata !13205, metadata !DIExpression()), !dbg !13268
  %tobool.not = icmp eq %struct.redisObject* %call10, null, !dbg !13269
  br i1 %tobool.not, label %if.end24, label %if.else, !dbg !13271

if.else:                                          ; preds = %for.body
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call10, i64 0, i32 1, !dbg !13272
  %9 = load i8, i8* %type, align 8, !dbg !13272, !tbaa !1526
  %cmp15.not = icmp eq i8 %9, 3, !dbg !13275
  br i1 %cmp15.not, label %if.end18, label %if.then17, !dbg !13276

if.then17:                                        ; preds = %if.else
  tail call void @zfree(i8* noundef %call5) #23, !dbg !13277
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !13279, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !13280
  br label %cleanup274

if.end18:                                         ; preds = %if.else
  %11 = bitcast %struct.redisObject* %call10 to %struct.zset**, !dbg !13281
  %12 = load %struct.zset*, %struct.zset** %11, align 8, !dbg !13281, !tbaa !1328
  %dict20 = getelementptr inbounds %struct.zset, %struct.zset* %12, i64 0, i32 0, !dbg !13282
  %13 = load %struct.dict*, %struct.dict** %dict20, align 8, !dbg !13282, !tbaa !6133
  br label %if.end24

if.end24:                                         ; preds = %for.body, %if.end18
  %.sink = phi %struct.dict* [ %13, %if.end18 ], [ null, %for.body ]
  %dict23 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv, i32 0, !dbg !13283
  store %struct.dict* %.sink, %struct.dict** %dict23, align 8, !dbg !13283, !tbaa !13284
  %weight = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv, i32 1, !dbg !13286
  store double 1.000000e+00, double* %weight, align 8, !dbg !13287, !tbaa !13288
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !13289
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13190, metadata !DIExpression()), !dbg !13239
  %indvars.iv.next491 = add nuw nsw i64 %indvars.iv490, 1, !dbg !13290
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next491, metadata !13191, metadata !DIExpression()), !dbg !13239
  %exitcond.not = icmp eq i64 %indvars.iv.next, %conv446, !dbg !13291
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !13263, !llvm.loop !13292

for.end:                                          ; preds = %if.end24
  %14 = trunc i64 %indvars.iv.next491 to i32, !dbg !13294
  %15 = load i32, i32* %argc, align 8, !dbg !13294, !tbaa !1350
  %cmp29 = icmp sgt i32 %15, %14, !dbg !13295
  br i1 %cmp29, label %if.then31, label %if.end113, !dbg !13296

if.then31:                                        ; preds = %for.end
  %sub = sub nsw i32 %15, %14, !dbg !13297
  call void @llvm.dbg.value(metadata i32 %sub, metadata !13209, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata i32 %14, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 1, metadata !13193, metadata !DIExpression()), !dbg !13239
  %tobool33.not465 = icmp eq i32 %sub, 0, !dbg !13299
  br i1 %tobool33.not465, label %if.end113, label %while.body.lr.ph, !dbg !13299

while.body.lr.ph:                                 ; preds = %if.then31
  %16 = xor i32 %call, -1, !dbg !13300
  %weight54527 = getelementptr inbounds i8, i8* %call5, i64 8
  %17 = bitcast i8* %weight54527 to double*
  br label %while.body, !dbg !13299

while.body:                                       ; preds = %while.body.lr.ph, %if.end109
  %j.1469 = phi i32 [ %14, %while.body.lr.ph ], [ %j.3, %if.end109 ]
  %aggregate.0468 = phi i32 [ 1, %while.body.lr.ph ], [ %aggregate.2, %if.end109 ]
  %remaining.0466 = phi i32 [ %sub, %while.body.lr.ph ], [ %remaining.2, %if.end109 ]
  call void @llvm.dbg.value(metadata i32 %j.1469, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %aggregate.0468, metadata !13193, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %remaining.0466, metadata !13209, metadata !DIExpression()), !dbg !13298
  %cmp35.not.not = icmp sgt i32 %remaining.0466, %call, !dbg !13305
  br i1 %cmp35.not.not, label %land.lhs.true, label %if.else65, !dbg !13306

land.lhs.true:                                    ; preds = %while.body
  %18 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13307, !tbaa !1352
  %idxprom38 = sext i32 %j.1469 to i64, !dbg !13308
  %arrayidx39 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %18, i64 %idxprom38, !dbg !13308
  %19 = load %struct.redisObject*, %struct.redisObject** %arrayidx39, align 8, !dbg !13308, !tbaa !782
  %ptr40 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %19, i64 0, i32 0, !dbg !13309
  %20 = load i8*, i8** %ptr40, align 8, !dbg !13309, !tbaa !1328
  %call41 = tail call i32 @strcasecmp(i8* noundef %20, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.278, i64 0, i64 0)) #27, !dbg !13310
  %tobool42.not = icmp eq i32 %call41, 0, !dbg !13310
  br i1 %tobool42.not, label %for.body48.preheader, label %if.else65, !dbg !13311

for.body48.preheader:                             ; preds = %land.lhs.true
  %j.2457 = add i32 %j.1469, 1, !dbg !13312
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %j.2457, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %remaining.0466, metadata !13209, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13298
  %21 = sext i32 %j.2457 to i64, !dbg !13300
  %22 = add i32 %remaining.0466, %16, !dbg !13300
  call void @llvm.dbg.value(metadata i64 0, metadata !13190, metadata !DIExpression()), !dbg !13239
  %arrayidx51526 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %18, i64 %21, !dbg !13313
  %23 = load %struct.redisObject*, %struct.redisObject** %arrayidx51526, align 8, !dbg !13313, !tbaa !782
  %call55528 = tail call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %23, double* noundef nonnull %17, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.279, i64 0, i64 0)) #22, !dbg !13317
  %cmp56.not529 = icmp eq i32 %call55528, 0, !dbg !13318
  call void @llvm.dbg.value(metadata i64 1, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i64 %21, metadata !13191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13239
  call void @llvm.dbg.value(metadata i32 undef, metadata !13209, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13298
  br i1 %cmp56.not529, label %for.cond45, label %if.then58, !dbg !13319

for.cond45:                                       ; preds = %for.body48.preheader, %for.cond45.for.body48_crit_edge
  %indvars.iv.next498531 = phi i64 [ %indvars.iv.next498, %for.cond45.for.body48_crit_edge ], [ 1, %for.body48.preheader ]
  %indvars.iv495530 = phi i64 [ %indvars.iv.next496, %for.cond45.for.body48_crit_edge ], [ %21, %for.body48.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv495530, metadata !13191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13239
  %indvars.iv.next496 = add nsw i64 %indvars.iv495530, 1, !dbg !13312
  call void @llvm.dbg.value(metadata i32 undef, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next496, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 undef, metadata !13209, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13298
  %exitcond503.not = icmp eq i64 %indvars.iv.next498531, %conv446, !dbg !13320
  br i1 %exitcond503.not, label %if.end109.loopexit, label %for.cond45.for.body48_crit_edge, !dbg !13300, !llvm.loop !13321

for.cond45.for.body48_crit_edge:                  ; preds = %for.cond45
  %.pre = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13323, !tbaa !1352
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next498531, metadata !13190, metadata !DIExpression()), !dbg !13239
  %arrayidx51 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %.pre, i64 %indvars.iv.next496, !dbg !13313
  %24 = load %struct.redisObject*, %struct.redisObject** %arrayidx51, align 8, !dbg !13313, !tbaa !782
  %weight54 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv.next498531, i32 1, !dbg !13324
  %call55 = tail call i32 @getDoubleFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %24, double* noundef nonnull %weight54, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.279, i64 0, i64 0)) #22, !dbg !13317
  %cmp56.not = icmp eq i32 %call55, 0, !dbg !13318
  %indvars.iv.next498 = add nuw nsw i64 %indvars.iv.next498531, 1, !dbg !13325
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next498, metadata !13190, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next496, metadata !13191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13239
  call void @llvm.dbg.value(metadata i32 undef, metadata !13209, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13298
  br i1 %cmp56.not, label %for.cond45, label %if.then58, !dbg !13319

if.then58:                                        ; preds = %for.body48.preheader, %for.cond45.for.body48_crit_edge
  tail call void @zfree(i8* noundef %call5) #23, !dbg !13326
  br label %cleanup274

if.else65:                                        ; preds = %land.lhs.true, %while.body
  %cmp66 = icmp sgt i32 %remaining.0466, 1, !dbg !13328
  br i1 %cmp66, label %land.lhs.true68, label %if.else107, !dbg !13330

land.lhs.true68:                                  ; preds = %if.else65
  %25 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13331, !tbaa !1352
  %idxprom70 = sext i32 %j.1469 to i64, !dbg !13332
  %arrayidx71 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 %idxprom70, !dbg !13332
  %26 = load %struct.redisObject*, %struct.redisObject** %arrayidx71, align 8, !dbg !13332, !tbaa !782
  %ptr72 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %26, i64 0, i32 0, !dbg !13333
  %27 = load i8*, i8** %ptr72, align 8, !dbg !13333, !tbaa !1328
  %call73 = tail call i32 @strcasecmp(i8* noundef %27, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.280, i64 0, i64 0)) #27, !dbg !13334
  %tobool74.not = icmp eq i32 %call73, 0, !dbg !13334
  br i1 %tobool74.not, label %if.then75, label %if.else107, !dbg !13335

if.then75:                                        ; preds = %land.lhs.true68
  %inc76 = add nsw i32 %j.1469, 1, !dbg !13336
  call void @llvm.dbg.value(metadata i32 %inc76, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %remaining.0466, metadata !13209, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13298
  %idxprom79 = sext i32 %inc76 to i64, !dbg !13338
  %arrayidx80 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 %idxprom79, !dbg !13338
  %28 = load %struct.redisObject*, %struct.redisObject** %arrayidx80, align 8, !dbg !13338, !tbaa !782
  %ptr81 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %28, i64 0, i32 0, !dbg !13340
  %29 = load i8*, i8** %ptr81, align 8, !dbg !13340, !tbaa !1328
  %call82 = tail call i32 @strcasecmp(i8* noundef %29, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i64 0, i64 0)) #27, !dbg !13341
  %tobool83.not = icmp eq i32 %call82, 0, !dbg !13341
  br i1 %tobool83.not, label %if.end104, label %if.else85, !dbg !13342

if.else85:                                        ; preds = %if.then75
  %call90 = tail call i32 @strcasecmp(i8* noundef %29, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.282, i64 0, i64 0)) #27, !dbg !13343
  %tobool91.not = icmp eq i32 %call90, 0, !dbg !13343
  br i1 %tobool91.not, label %if.end104, label %if.else93, !dbg !13345

if.else93:                                        ; preds = %if.else85
  %call98 = tail call i32 @strcasecmp(i8* noundef %29, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.283, i64 0, i64 0)) #27, !dbg !13346
  %tobool99.not = icmp eq i32 %call98, 0, !dbg !13346
  br i1 %tobool99.not, label %if.end104, label %if.else101, !dbg !13348

if.else101:                                       ; preds = %if.else93
  tail call void @zfree(i8* noundef %call5) #23, !dbg !13349
  %30 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !13351, !tbaa !11130
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %30) #22, !dbg !13352
  br label %cleanup274

if.end104:                                        ; preds = %if.else93, %if.else85, %if.then75
  %aggregate.1 = phi i32 [ 1, %if.then75 ], [ 2, %if.else85 ], [ 3, %if.else93 ], !dbg !13353
  call void @llvm.dbg.value(metadata i32 %aggregate.1, metadata !13193, metadata !DIExpression()), !dbg !13239
  %inc105 = add nsw i32 %j.1469, 2, !dbg !13354
  call void @llvm.dbg.value(metadata i32 %inc105, metadata !13191, metadata !DIExpression()), !dbg !13239
  %dec106 = add nsw i32 %remaining.0466, -2, !dbg !13355
  call void @llvm.dbg.value(metadata i32 %dec106, metadata !13209, metadata !DIExpression()), !dbg !13298
  br label %if.end109

if.else107:                                       ; preds = %land.lhs.true68, %if.else65
  tail call void @zfree(i8* noundef %call5) #23, !dbg !13356
  %31 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !13358, !tbaa !11130
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %31) #22, !dbg !13359
  br label %cleanup274

if.end109.loopexit:                               ; preds = %for.cond45
  %32 = trunc i64 %indvars.iv.next496 to i32, !dbg !13299
  br label %if.end109, !dbg !13299

if.end109:                                        ; preds = %if.end109.loopexit, %if.end104
  %remaining.2 = phi i32 [ %dec106, %if.end104 ], [ %22, %if.end109.loopexit ], !dbg !13360
  %aggregate.2 = phi i32 [ %aggregate.1, %if.end104 ], [ %aggregate.0468, %if.end109.loopexit ], !dbg !13239
  %j.3 = phi i32 [ %inc105, %if.end104 ], [ %32, %if.end109.loopexit ], !dbg !13360
  call void @llvm.dbg.value(metadata i32 %j.3, metadata !13191, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %aggregate.2, metadata !13193, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %remaining.2, metadata !13209, metadata !DIExpression()), !dbg !13298
  %tobool33.not = icmp eq i32 %remaining.2, 0, !dbg !13299
  br i1 %tobool33.not, label %if.end113, label %while.body, !dbg !13299, !llvm.loop !13361

if.end113:                                        ; preds = %if.end109, %if.then31, %for.end
  %aggregate.3 = phi i32 [ 1, %for.end ], [ 1, %if.then31 ], [ %aggregate.2, %if.end109 ], !dbg !13363
  call void @llvm.dbg.value(metadata i32 %aggregate.3, metadata !13193, metadata !DIExpression()), !dbg !13239
  tail call void @qsort(i8* noundef %call5, i64 noundef %conv446, i64 noundef 16, i32 (i8*, i8*)* noundef nonnull @qsortCompareZsetopsrcByCardinality) #23, !dbg !13364
  %call115 = tail call %struct.redisObject* @createZsetObject() #22, !dbg !13365
  call void @llvm.dbg.value(metadata %struct.redisObject* %call115, metadata !13201, metadata !DIExpression()), !dbg !13239
  %33 = bitcast %struct.redisObject* %call115 to %struct.zset**, !dbg !13366
  %34 = load %struct.zset*, %struct.zset** %33, align 8, !dbg !13366, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %34, metadata !13202, metadata !DIExpression()), !dbg !13239
  switch i32 %op, label %cond.false [
    i32 2, label %if.then119
    i32 0, label %for.body188.lr.ph
  ], !dbg !13367

for.body188.lr.ph:                                ; preds = %if.end113
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13239
  %dict204 = getelementptr inbounds %struct.zset, %struct.zset* %34, i64 0, i32 0
  %zsl245 = getelementptr inbounds %struct.zset, %struct.zset* %34, i64 0, i32 1
  %35 = sext i32 %call to i64, !dbg !13368
  br label %for.body188, !dbg !13368

if.then119:                                       ; preds = %if.end113
  %dict121 = bitcast i8* %call5 to %struct.dict**, !dbg !13369
  %36 = load %struct.dict*, %struct.dict** %dict121, align 8, !dbg !13369, !tbaa !13284
  %tobool122.not = icmp eq %struct.dict* %36, null, !dbg !13370
  br i1 %tobool122.not, label %if.end256, label %land.lhs.true123, !dbg !13371

land.lhs.true123:                                 ; preds = %if.then119
  %used = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 0, i32 3, !dbg !13372
  %37 = load i64, i64* %used, align 8, !dbg !13372, !tbaa !3545
  %used131 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 2, i64 1, i32 3, !dbg !13372
  %38 = load i64, i64* %used131, align 8, !dbg !13372, !tbaa !3545
  %add132 = sub i64 0, %38, !dbg !13373
  %cmp133.not = icmp eq i64 %37, %add132, !dbg !13373
  br i1 %cmp133.not, label %if.end256, label %if.then135, !dbg !13374

if.then135:                                       ; preds = %land.lhs.true123
  %call138 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %36) #23, !dbg !13375
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call138, metadata !13203, metadata !DIExpression()), !dbg !13239
  %call140486 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call138) #23, !dbg !13376
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call140486, metadata !13204, metadata !DIExpression()), !dbg !13239
  %cmp141.not487 = icmp eq %struct.dictEntry* %call140486, null, !dbg !13377
  br i1 %cmp141.not487, label %while.end179, label %while.body143.lr.ph, !dbg !13378

while.body143.lr.ph:                              ; preds = %if.then135
  %weight146 = getelementptr inbounds i8, i8* %call5, i64 8
  %39 = bitcast i8* %weight146 to double*
  %cmp149482 = icmp sgt i32 %call, 1
  %dict176 = getelementptr inbounds %struct.zset, %struct.zset* %34, i64 0, i32 0
  %zsl = getelementptr inbounds %struct.zset, %struct.zset* %34, i64 0, i32 1
  br label %while.body143, !dbg !13378

while.body143:                                    ; preds = %while.body143.lr.ph, %if.end178
  %call140488 = phi %struct.dictEntry* [ %call140486, %while.body143.lr.ph ], [ %call140, %if.end178 ]
  %call144 = tail call i8* @zmalloc(i64 noundef 8) #23, !dbg !13379
  %40 = bitcast i8* %call144 to double*, !dbg !13379
  call void @llvm.dbg.value(metadata double* %40, metadata !13212, metadata !DIExpression()), !dbg !13380
  %41 = load double, double* %39, align 8, !dbg !13381, !tbaa !13288
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call140488, i64 0, i32 1, !dbg !13382
  %42 = bitcast i8** %val to double**, !dbg !13382
  %43 = load double*, double** %42, align 8, !dbg !13382, !tbaa !2458
  %44 = load double, double* %43, align 8, !dbg !13383, !tbaa !6140
  %mul147 = fmul double %41, %44, !dbg !13384
  store double %mul147, double* %40, align 8, !dbg !13385, !tbaa !6140
  call void @llvm.dbg.value(metadata i32 1, metadata !13191, metadata !DIExpression()), !dbg !13239
  br i1 %cmp149482, label %for.body151.lr.ph, label %for.end170, !dbg !13386

for.body151.lr.ph:                                ; preds = %while.body143
  %key = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call140488, i64 0, i32 0
  br label %for.body151, !dbg !13386

for.body151:                                      ; preds = %for.body151.lr.ph, %for.inc168
  %indvars.iv517 = phi i64 [ 1, %for.body151.lr.ph ], [ %indvars.iv.next518, %for.inc168 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv517, metadata !13191, metadata !DIExpression()), !dbg !13239
  %dict154 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv517, i32 0, !dbg !13387
  %45 = load %struct.dict*, %struct.dict** %dict154, align 8, !dbg !13387, !tbaa !13284
  %46 = load i8*, i8** %key, align 8, !dbg !13388, !tbaa !2455
  %call155 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %45, i8* noundef %46) #23, !dbg !13389
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call155, metadata !13219, metadata !DIExpression()), !dbg !13390
  %tobool156.not = icmp eq %struct.dictEntry* %call155, null, !dbg !13391
  br i1 %tobool156.not, label %for.end170.loopexit, label %for.inc168, !dbg !13393

for.inc168:                                       ; preds = %for.body151
  %weight160 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv517, i32 1, !dbg !13394
  %47 = load double, double* %weight160, align 8, !dbg !13394, !tbaa !13288
  %val161 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call155, i64 0, i32 1, !dbg !13396
  %48 = bitcast i8** %val161 to double**, !dbg !13396
  %49 = load double*, double** %48, align 8, !dbg !13396, !tbaa !2458
  %50 = load double, double* %49, align 8, !dbg !13397, !tbaa !6140
  %mul162 = fmul double %47, %50, !dbg !13398
  call void @llvm.dbg.value(metadata double %mul162, metadata !13218, metadata !DIExpression()), !dbg !13380
  tail call fastcc void @zunionInterAggregate(double* noundef nonnull %40, double noundef %mul162, i32 noundef %aggregate.3) #22, !dbg !13399
  %indvars.iv.next518 = add nuw nsw i64 %indvars.iv517, 1, !dbg !13400
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next518, metadata !13191, metadata !DIExpression()), !dbg !13239
  %exitcond521.not = icmp eq i64 %indvars.iv.next518, %conv446, !dbg !13401
  br i1 %exitcond521.not, label %if.else174, label %for.body151, !dbg !13386, !llvm.loop !13402

for.end170.loopexit:                              ; preds = %for.body151
  %51 = trunc i64 %indvars.iv517 to i32, !dbg !13393
  br label %for.end170, !dbg !13404

for.end170:                                       ; preds = %for.end170.loopexit, %while.body143
  %j.4.lcssa = phi i32 [ 1, %while.body143 ], [ %51, %for.end170.loopexit ], !dbg !13405
  %cmp171.not = icmp eq i32 %j.4.lcssa, %call, !dbg !13404
  br i1 %cmp171.not, label %if.else174, label %if.then173, !dbg !13406

if.then173:                                       ; preds = %for.end170
  tail call void @zfree(i8* noundef %call144) #23, !dbg !13407
  br label %if.end178, !dbg !13409

if.else174:                                       ; preds = %for.inc168, %for.end170
  %key175 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call140488, i64 0, i32 0, !dbg !13410
  %52 = load i8*, i8** %key175, align 8, !dbg !13410, !tbaa !2455
  %53 = bitcast i8* %52 to %struct.redisObject*, !dbg !13410
  call void @llvm.dbg.value(metadata %struct.redisObject* %53, metadata !13223, metadata !DIExpression()), !dbg !13411
  %54 = load %struct.dict*, %struct.dict** %dict176, align 8, !dbg !13412, !tbaa !6133
  %call177 = tail call i32 @dictAdd(%struct.dict* noundef %54, i8* noundef %52, i8* noundef %call144) #23, !dbg !13413
  tail call void @incrRefCount(%struct.redisObject* noundef %53) #22, !dbg !13414
  %55 = load %struct.zskiplist*, %struct.zskiplist** %zsl, align 8, !dbg !13415, !tbaa !6138
  %56 = load double, double* %40, align 8, !dbg !13416, !tbaa !6140
  tail call void @zslInsert(%struct.zskiplist* noundef %55, double noundef %56, %struct.redisObject* noundef %53) #22, !dbg !13417
  tail call void @incrRefCount(%struct.redisObject* noundef %53) #22, !dbg !13418
  br label %if.end178

if.end178:                                        ; preds = %if.else174, %if.then173
  %call140 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call138) #23, !dbg !13376
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call140, metadata !13204, metadata !DIExpression()), !dbg !13239
  %cmp141.not = icmp eq %struct.dictEntry* %call140, null, !dbg !13377
  br i1 %cmp141.not, label %while.end179, label %while.body143, !dbg !13378, !llvm.loop !13419

while.end179:                                     ; preds = %if.end178, %if.then135
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call138) #23, !dbg !13421
  br label %if.end256, !dbg !13422

for.body188:                                      ; preds = %for.body188.lr.ph, %for.inc247
  %indvars.iv511 = phi i64 [ 0, %for.body188.lr.ph ], [ %indvars.iv.next512, %for.inc247 ]
  %indvars.iv504 = phi i64 [ 1, %for.body188.lr.ph ], [ %indvars.iv.next505, %for.inc247 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv511, metadata !13190, metadata !DIExpression()), !dbg !13239
  %dict191 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv511, i32 0, !dbg !13423
  %57 = load %struct.dict*, %struct.dict** %dict191, align 8, !dbg !13423, !tbaa !13284
  %tobool192.not = icmp eq %struct.dict* %57, null, !dbg !13425
  br i1 %tobool192.not, label %for.inc247, label %if.end194, !dbg !13426

if.end194:                                        ; preds = %for.body188
  %call198 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %57) #23, !dbg !13427
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call198, metadata !13203, metadata !DIExpression()), !dbg !13239
  %call200475 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call198) #23, !dbg !13428
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call200475, metadata !13204, metadata !DIExpression()), !dbg !13239
  %cmp201.not476 = icmp eq %struct.dictEntry* %call200475, null, !dbg !13429
  br i1 %cmp201.not476, label %while.end246, label %while.body203.lr.ph, !dbg !13430

while.body203.lr.ph:                              ; preds = %if.end194
  %weight216 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv511, i32 1
  %58 = add nuw nsw i64 %indvars.iv511, 1
  %cmp221473 = icmp slt i64 %58, %35
  br label %while.body203, !dbg !13430

while.body203:                                    ; preds = %while.body203.lr.ph, %while.cond199.backedge
  %call200477 = phi %struct.dictEntry* [ %call200475, %while.body203.lr.ph ], [ %call200, %while.cond199.backedge ]
  %59 = load %struct.dict*, %struct.dict** %dict204, align 8, !dbg !13431, !tbaa !6133
  %key205 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call200477, i64 0, i32 0, !dbg !13433
  %60 = load i8*, i8** %key205, align 8, !dbg !13433, !tbaa !2455
  %call206 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %59, i8* noundef %60) #23, !dbg !13434
  %cmp207.not = icmp eq %struct.dictEntry* %call206, null, !dbg !13435
  br i1 %cmp207.not, label %if.end210, label %while.cond199.backedge, !dbg !13436

if.end210:                                        ; preds = %while.body203
  %call212 = tail call i8* @zmalloc(i64 noundef 8) #23, !dbg !13437
  %61 = bitcast i8* %call212 to double*, !dbg !13437
  call void @llvm.dbg.value(metadata double* %61, metadata !13226, metadata !DIExpression()), !dbg !13438
  %62 = load double, double* %weight216, align 8, !dbg !13439, !tbaa !13288
  %val217 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call200477, i64 0, i32 1, !dbg !13440
  %63 = bitcast i8** %val217 to double**, !dbg !13440
  %64 = load double*, double** %63, align 8, !dbg !13440, !tbaa !2458
  %65 = load double, double* %64, align 8, !dbg !13441, !tbaa !6140
  %mul218 = fmul double %62, %65, !dbg !13442
  store double %mul218, double* %61, align 8, !dbg !13443, !tbaa !6140
  call void @llvm.dbg.value(metadata i64 %58, metadata !13191, metadata !DIExpression()), !dbg !13239
  br i1 %cmp221473, label %for.body223, label %for.end240, !dbg !13444

for.body223:                                      ; preds = %if.end210, %if.end237
  %indvars.iv506 = phi i64 [ %indvars.iv.next507, %if.end237 ], [ %indvars.iv504, %if.end210 ]
  %dict227 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv506, i32 0, !dbg !13445
  %66 = load %struct.dict*, %struct.dict** %dict227, align 8, !dbg !13445, !tbaa !13284
  %67 = load i8*, i8** %key205, align 8, !dbg !13446, !tbaa !2455
  %call229 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %66, i8* noundef %67) #23, !dbg !13447
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call229, metadata !13234, metadata !DIExpression()), !dbg !13448
  %tobool230.not = icmp eq %struct.dictEntry* %call229, null, !dbg !13449
  br i1 %tobool230.not, label %if.end237, label %if.then231, !dbg !13451

if.then231:                                       ; preds = %for.body223
  %weight234 = getelementptr inbounds %struct.zsetopsrc, %struct.zsetopsrc* %5, i64 %indvars.iv506, i32 1, !dbg !13452
  %68 = load double, double* %weight234, align 8, !dbg !13452, !tbaa !13288
  %val235 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call229, i64 0, i32 1, !dbg !13454
  %69 = bitcast i8** %val235 to double**, !dbg !13454
  %70 = load double*, double** %69, align 8, !dbg !13454, !tbaa !2458
  %71 = load double, double* %70, align 8, !dbg !13455, !tbaa !6140
  %mul236 = fmul double %68, %71, !dbg !13456
  call void @llvm.dbg.value(metadata double %mul236, metadata !13233, metadata !DIExpression()), !dbg !13438
  tail call fastcc void @zunionInterAggregate(double* noundef nonnull %61, double noundef %mul236, i32 noundef %aggregate.3) #22, !dbg !13457
  br label %if.end237, !dbg !13458

if.end237:                                        ; preds = %if.then231, %for.body223
  call void @llvm.dbg.value(metadata i64 %indvars.iv506, metadata !13191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13239
  %indvars.iv.next507 = add nuw nsw i64 %indvars.iv506, 1, !dbg !13459
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next507, metadata !13191, metadata !DIExpression()), !dbg !13239
  %exitcond510.not = icmp eq i64 %indvars.iv.next507, %conv446, !dbg !13460
  br i1 %exitcond510.not, label %for.end240, label %for.body223, !dbg !13444, !llvm.loop !13461

for.end240:                                       ; preds = %if.end237, %if.end210
  %72 = load i8*, i8** %key205, align 8, !dbg !13463, !tbaa !2455
  %73 = bitcast i8* %72 to %struct.redisObject*, !dbg !13463
  call void @llvm.dbg.value(metadata %struct.redisObject* %73, metadata !13238, metadata !DIExpression()), !dbg !13438
  %74 = load %struct.dict*, %struct.dict** %dict204, align 8, !dbg !13464, !tbaa !6133
  %call244 = tail call i32 @dictAdd(%struct.dict* noundef %74, i8* noundef %72, i8* noundef %call212) #23, !dbg !13465
  tail call void @incrRefCount(%struct.redisObject* noundef %73) #22, !dbg !13466
  %75 = load %struct.zskiplist*, %struct.zskiplist** %zsl245, align 8, !dbg !13467, !tbaa !6138
  %76 = load double, double* %61, align 8, !dbg !13468, !tbaa !6140
  tail call void @zslInsert(%struct.zskiplist* noundef %75, double noundef %76, %struct.redisObject* noundef %73) #22, !dbg !13469
  tail call void @incrRefCount(%struct.redisObject* noundef %73) #22, !dbg !13470
  br label %while.cond199.backedge, !dbg !13430

while.cond199.backedge:                           ; preds = %for.end240, %while.body203
  %call200 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call198) #23, !dbg !13428
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call200, metadata !13204, metadata !DIExpression()), !dbg !13239
  %cmp201.not = icmp eq %struct.dictEntry* %call200, null, !dbg !13429
  br i1 %cmp201.not, label %while.end246, label %while.body203, !dbg !13430, !llvm.loop !13471

while.end246:                                     ; preds = %while.cond199.backedge, %if.end194
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %call198) #23, !dbg !13473
  br label %for.inc247, !dbg !13474

for.inc247:                                       ; preds = %for.body188, %while.end246
  %indvars.iv.next512 = add nuw nsw i64 %indvars.iv511, 1, !dbg !13475
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next512, metadata !13190, metadata !DIExpression()), !dbg !13239
  %indvars.iv.next505 = add nuw nsw i64 %indvars.iv504, 1, !dbg !13368
  %exitcond516.not = icmp eq i64 %indvars.iv.next512, %conv446, !dbg !13476
  br i1 %exitcond516.not, label %if.end256, label %for.body188, !dbg !13368, !llvm.loop !13477

cond.false:                                       ; preds = %if.end113
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.284, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 6109) #22, !dbg !13479
  tail call void @_exit(i32 noundef 1) #26, !dbg !13479
  unreachable, !dbg !13479

if.end256:                                        ; preds = %for.inc247, %if.then119, %land.lhs.true123, %while.end179
  %db257 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !13481
  %77 = load %struct.redisDb*, %struct.redisDb** %db257, align 8, !dbg !13481, !tbaa !2890
  %call258 = tail call i32 @deleteKey(%struct.redisDb* noundef %77, %struct.redisObject* noundef %dstkey) #22, !dbg !13483
  %tobool259.not = icmp eq i32 %call258, 0, !dbg !13483
  br i1 %tobool259.not, label %if.end262, label %if.then260, !dbg !13484

if.then260:                                       ; preds = %if.end256
  %78 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !13485, !tbaa !708
  %inc261 = add nsw i64 %78, 1, !dbg !13485
  store i64 %inc261, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !13485, !tbaa !708
  br label %if.end262, !dbg !13486

if.end262:                                        ; preds = %if.then260, %if.end256
  %zsl263 = getelementptr inbounds %struct.zset, %struct.zset* %34, i64 0, i32 1, !dbg !13487
  %79 = load %struct.zskiplist*, %struct.zskiplist** %zsl263, align 8, !dbg !13487, !tbaa !6138
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %79, i64 0, i32 2, !dbg !13489
  %80 = load i64, i64* %length, align 8, !dbg !13489, !tbaa !1187
  %tobool264.not = icmp eq i64 %80, 0, !dbg !13490
  br i1 %tobool264.not, label %if.else272, label %if.then265, !dbg !13491

if.then265:                                       ; preds = %if.end262
  %81 = load %struct.redisDb*, %struct.redisDb** %db257, align 8, !dbg !13492, !tbaa !2890
  %dict267 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %81, i64 0, i32 0, !dbg !13494
  %82 = load %struct.dict*, %struct.dict** %dict267, align 8, !dbg !13494, !tbaa !2353
  %83 = bitcast %struct.redisObject* %dstkey to i8*, !dbg !13495
  %84 = bitcast %struct.redisObject* %call115 to i8*, !dbg !13496
  %call268 = tail call i32 @dictAdd(%struct.dict* noundef %82, i8* noundef %83, i8* noundef %84) #23, !dbg !13497
  tail call void @incrRefCount(%struct.redisObject* noundef %dstkey) #22, !dbg !13498
  %85 = load %struct.zskiplist*, %struct.zskiplist** %zsl263, align 8, !dbg !13499, !tbaa !6138
  %length270 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %85, i64 0, i32 2, !dbg !13500
  %86 = load i64, i64* %length270, align 8, !dbg !13500, !tbaa !1187
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %86) #22, !dbg !13501
  %87 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !13502, !tbaa !708
  %inc271 = add nsw i64 %87, 1, !dbg !13502
  store i64 %inc271, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !13502, !tbaa !708
  br label %if.end273, !dbg !13503

if.else272:                                       ; preds = %if.end262
  %88 = bitcast %struct.redisObject* %call115 to i8*, !dbg !13504
  tail call void @decrRefCount(i8* noundef %88) #22, !dbg !13506
  %89 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !13507, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %89) #22, !dbg !13508
  br label %if.end273

if.end273:                                        ; preds = %if.else272, %if.then265
  tail call void @zfree(i8* noundef %call5) #23, !dbg !13509
  br label %cleanup274, !dbg !13510

cleanup274:                                       ; preds = %if.then58, %if.else101, %if.else107, %if.then17, %if.end273, %if.then3, %if.then
  ret void, !dbg !13510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i32 @qsortCompareZsetopsrcByCardinality(i8* nocapture noundef readonly %s1, i8* nocapture noundef readonly %s2) #16 !dbg !13511 {
entry:
  call void @llvm.dbg.value(metadata i8* %s1, metadata !13513, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i8* %s2, metadata !13514, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i8* %s1, metadata !13515, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i8* %s2, metadata !13516, metadata !DIExpression()), !dbg !13519
  %dict = bitcast i8* %s1 to %struct.dict**, !dbg !13520
  %0 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !13520, !tbaa !13284
  %tobool.not = icmp eq %struct.dict* %0, null, !dbg !13521
  br i1 %tobool.not, label %cond.end, label %cond.true, !dbg !13521

cond.true:                                        ; preds = %entry
  %used = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !13522
  %1 = load i64, i64* %used, align 8, !dbg !13522, !tbaa !3545
  %used5 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !13522
  %2 = load i64, i64* %used5, align 8, !dbg !13522, !tbaa !3545
  %add = add i64 %2, %1, !dbg !13522
  br label %cond.end, !dbg !13521

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %entry ], !dbg !13521
  call void @llvm.dbg.value(metadata i64 %cond, metadata !13517, metadata !DIExpression()), !dbg !13519
  %dict6 = bitcast i8* %s2 to %struct.dict**, !dbg !13523
  %3 = load %struct.dict*, %struct.dict** %dict6, align 8, !dbg !13523, !tbaa !13284
  %tobool7.not = icmp eq %struct.dict* %3, null, !dbg !13524
  br i1 %tobool7.not, label %cond.end19, label %cond.true8, !dbg !13524

cond.true8:                                       ; preds = %cond.end
  %used12 = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 0, i32 3, !dbg !13525
  %4 = load i64, i64* %used12, align 8, !dbg !13525, !tbaa !3545
  %used16 = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 1, i32 3, !dbg !13525
  %5 = load i64, i64* %used16, align 8, !dbg !13525, !tbaa !3545
  %add17 = add i64 %5, %4, !dbg !13525
  br label %cond.end19, !dbg !13524

cond.end19:                                       ; preds = %cond.end, %cond.true8
  %cond20 = phi i64 [ %add17, %cond.true8 ], [ 0, %cond.end ], !dbg !13524
  call void @llvm.dbg.value(metadata i64 %cond20, metadata !13518, metadata !DIExpression()), !dbg !13519
  %sub = sub i64 %cond, %cond20, !dbg !13526
  %conv = trunc i64 %sub to i32, !dbg !13527
  ret i32 %conv, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @zunionInterAggregate(double* nocapture noundef %target, double noundef %val, i32 noundef %aggregate) unnamed_addr #14 !dbg !13529 {
entry:
  call void @llvm.dbg.value(metadata double* %target, metadata !13533, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata double %val, metadata !13534, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 %aggregate, metadata !13535, metadata !DIExpression()), !dbg !13536
  switch i32 %aggregate, label %if.then8 [
    i32 1, label %if.then
    i32 2, label %if.then4
  ], !dbg !13537

if.then:                                          ; preds = %entry
  %0 = load double, double* %target, align 8, !dbg !13538, !tbaa !6140
  %add = fadd double %0, %val, !dbg !13541
  %cmp1 = fcmp uno double %add, 0.000000e+00, !dbg !13542
  br i1 %cmp1, label %if.end17.sink.split, label %if.end17, !dbg !13544

if.then4:                                         ; preds = %entry
  %1 = load double, double* %target, align 8, !dbg !13545, !tbaa !6140
  %cmp5 = fcmp ogt double %1, %val, !dbg !13548
  %val. = select i1 %cmp5, double %val, double %1, !dbg !13549
  br label %if.end17.sink.split, !dbg !13550

if.then8:                                         ; preds = %entry
  %2 = load double, double* %target, align 8, !dbg !13551, !tbaa !6140
  %cmp9 = fcmp olt double %2, %val, !dbg !13554
  %val.34 = select i1 %cmp9, double %val, double %2, !dbg !13555
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.then, %if.then8, %if.then4
  %val..sink = phi double [ %val., %if.then4 ], [ %val.34, %if.then8 ], [ 0.000000e+00, %if.then ]
  br label %if.end17, !dbg !13556

if.end17:                                         ; preds = %if.end17.sink.split, %if.then
  %storemerge = phi double [ %val..sink, %if.end17.sink.split ], [ %add, %if.then ], !dbg !13557
  store double %storemerge, double* %target, align 8, !dbg !13557, !tbaa !6140
  ret void, !dbg !13556
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrangeGenericCommand(%struct.redisClient* noundef %c, i32 noundef %reverse) #0 !dbg !13558 {
entry:
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !13560, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i32 %reverse, metadata !13561, metadata !DIExpression()), !dbg !13573
  %0 = bitcast i64* %start to i8*, !dbg !13574
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !13574
  %1 = bitcast i64* %end to i8*, !dbg !13575
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !13575
  call void @llvm.dbg.value(metadata i32 0, metadata !13565, metadata !DIExpression()), !dbg !13573
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !13576
  %2 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13576, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 2, !dbg !13578
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !13578, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %start, metadata !13563, metadata !DIExpression(DW_OP_deref)), !dbg !13573
  %call = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %3, i64* noundef nonnull %start, i8* noundef null) #22, !dbg !13579
  %cmp.not = icmp eq i32 %call, 0, !dbg !13580
  br i1 %cmp.not, label %lor.lhs.false, label %cleanup, !dbg !13581

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13582, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !13583
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !13583, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %end, metadata !13564, metadata !DIExpression(DW_OP_deref)), !dbg !13573
  %call3 = call i32 @getLongFromObjectOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %5, i64* noundef nonnull %end, i8* noundef null) #22, !dbg !13584
  %cmp4.not = icmp eq i32 %call3, 0, !dbg !13585
  br i1 %cmp4.not, label %if.end, label %cleanup, !dbg !13586

if.end:                                           ; preds = %lor.lhs.false
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !13587
  %6 = load i32, i32* %argc, align 8, !dbg !13587, !tbaa !1350
  %cmp5 = icmp eq i32 %6, 5, !dbg !13589
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !13590

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13591, !tbaa !1352
  %arrayidx7 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 4, !dbg !13592
  %8 = load %struct.redisObject*, %struct.redisObject** %arrayidx7, align 8, !dbg !13592, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !13593
  %9 = load i8*, i8** %ptr, align 8, !dbg !13593, !tbaa !1328
  %call8 = tail call i32 @strcasecmp(i8* noundef %9, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.286, i64 0, i64 0)) #27, !dbg !13594
  %tobool.not = icmp eq i32 %call8, 0, !dbg !13594
  br i1 %tobool.not, label %if.end14, label %cleanup.sink.split, !dbg !13595

if.else:                                          ; preds = %if.end
  %cmp11 = icmp sgt i32 %6, 4, !dbg !13596
  br i1 %cmp11, label %cleanup.sink.split, label %if.else.if.end14_crit_edge, !dbg !13598

if.else.if.end14_crit_edge:                       ; preds = %if.else
  %.pre = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13599, !tbaa !1352
  br label %if.end14, !dbg !13598

if.end14:                                         ; preds = %if.else.if.end14_crit_edge, %land.lhs.true
  %10 = phi %struct.redisObject** [ %.pre, %if.else.if.end14_crit_edge ], [ %7, %land.lhs.true ], !dbg !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()), !dbg !13573
  %arrayidx16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 1, !dbg !13601
  %11 = load %struct.redisObject*, %struct.redisObject** %arrayidx16, align 8, !dbg !13601, !tbaa !782
  %12 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !13602, !tbaa !9109
  %call17 = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %11, %struct.redisObject* noundef %12) #22, !dbg !13603
  call void @llvm.dbg.value(metadata %struct.redisObject* %call17, metadata !13562, metadata !DIExpression()), !dbg !13573
  %cmp18 = icmp eq %struct.redisObject* %call17, null, !dbg !13604
  br i1 %cmp18, label %cleanup, label %lor.lhs.false19, !dbg !13605

lor.lhs.false19:                                  ; preds = %if.end14
  %call20 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call17, i32 noundef 3) #22, !dbg !13606
  %tobool21.not = icmp eq i32 %call20, 0, !dbg !13606
  br i1 %tobool21.not, label %if.end23, label %cleanup, !dbg !13607

if.end23:                                         ; preds = %lor.lhs.false19
  %13 = bitcast %struct.redisObject* %call17 to %struct.zset**, !dbg !13608
  %14 = load %struct.zset*, %struct.zset** %13, align 8, !dbg !13608, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %14, metadata !13569, metadata !DIExpression()), !dbg !13573
  %zsl25 = getelementptr inbounds %struct.zset, %struct.zset* %14, i64 0, i32 1, !dbg !13609
  %15 = load %struct.zskiplist*, %struct.zskiplist** %zsl25, align 8, !dbg !13609, !tbaa !6138
  call void @llvm.dbg.value(metadata %struct.zskiplist* %15, metadata !13570, metadata !DIExpression()), !dbg !13573
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %15, i64 0, i32 2, !dbg !13610
  %16 = load i64, i64* %length, align 8, !dbg !13610, !tbaa !1187
  call void @llvm.dbg.value(metadata i64 %16, metadata !13566, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13573
  %17 = load i64, i64* %start, align 8, !dbg !13611, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %17, metadata !13563, metadata !DIExpression()), !dbg !13573
  %cmp26 = icmp slt i64 %17, 0, !dbg !13613
  %sext152 = shl i64 %16, 32, !dbg !13614
  %conv29 = ashr exact i64 %sext152, 32, !dbg !13614
  %add = select i1 %cmp26, i64 %conv29, i64 0, !dbg !13614
  %18 = add nsw i64 %17, %add, !dbg !13614
  %19 = load i64, i64* %end, align 8, !dbg !13615, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %19, metadata !13564, metadata !DIExpression()), !dbg !13573
  %cmp31 = icmp slt i64 %19, 0, !dbg !13617
  %sext151 = shl i64 %16, 32, !dbg !13618
  %conv34 = ashr exact i64 %sext151, 32, !dbg !13618
  %add35 = select i1 %cmp31, i64 %conv34, i64 0, !dbg !13618
  %20 = add nsw i64 %19, %add35, !dbg !13618
  call void @llvm.dbg.value(metadata i64 %18, metadata !13563, metadata !DIExpression()), !dbg !13573
  %21 = icmp sgt i64 %18, 0, !dbg !13619
  %spec.store.select = select i1 %21, i64 %18, i64 0, !dbg !13619
  store i64 %spec.store.select, i64* %start, align 8, !dbg !13573
  call void @llvm.dbg.value(metadata i64 %spec.store.select, metadata !13563, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i64 %20, metadata !13564, metadata !DIExpression()), !dbg !13573
  %cmp41 = icmp sgt i64 %spec.store.select, %20, !dbg !13620
  br i1 %cmp41, label %cleanup.sink.split, label %lor.lhs.false43, !dbg !13622

lor.lhs.false43:                                  ; preds = %if.end23
  %sext = shl i64 %16, 32, !dbg !13623
  %conv44 = ashr exact i64 %sext, 32, !dbg !13623
  %cmp45.not = icmp sgt i64 %conv44, %spec.store.select, !dbg !13624
  br i1 %cmp45.not, label %if.end48, label %cleanup.sink.split, !dbg !13625

if.end48:                                         ; preds = %lor.lhs.false43
  %cmp50.not = icmp slt i64 %20, %conv44, !dbg !13626
  br i1 %cmp50.not, label %if.end54, label %if.then52, !dbg !13628

if.then52:                                        ; preds = %if.end48
  %sext150 = add i64 %sext, -4294967296, !dbg !13629
  %conv53 = ashr exact i64 %sext150, 32, !dbg !13629
  call void @llvm.dbg.value(metadata i64 %conv53, metadata !13564, metadata !DIExpression()), !dbg !13573
  store i64 %conv53, i64* %end, align 8, !dbg !13630, !tbaa !790
  br label %if.end54, !dbg !13631

if.end54:                                         ; preds = %if.then52, %if.end48
  %22 = phi i64 [ %conv53, %if.then52 ], [ %20, %if.end48 ], !dbg !13632
  call void @llvm.dbg.value(metadata i64 %22, metadata !13564, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i64 %spec.store.select, metadata !13563, metadata !DIExpression()), !dbg !13573
  %sub55 = sub nsw i64 %22, %spec.store.select, !dbg !13633
  %23 = trunc i64 %sub55 to i32, !dbg !13634
  %conv57 = add i32 %23, 1, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %conv57, metadata !13567, metadata !DIExpression()), !dbg !13573
  %tobool58.not = icmp eq i32 %reverse, 0, !dbg !13635
  %cmp66 = icmp slt i64 %18, 1, !dbg !13637
  br i1 %tobool58.not, label %if.else65, label %if.then59, !dbg !13638

if.then59:                                        ; preds = %if.end54
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !13639

cond.true:                                        ; preds = %if.then59
  %tail = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %15, i64 0, i32 1, !dbg !13641
  %24 = load %struct.zskiplistNode*, %struct.zskiplistNode** %tail, align 8, !dbg !13641, !tbaa !6900
  br label %if.end75, !dbg !13639

cond.false:                                       ; preds = %if.then59
  %sub63 = sub nsw i64 %conv44, %spec.store.select, !dbg !13642
  %call64 = tail call %struct.zskiplistNode* @zslGetElementByRank(%struct.zskiplist* noundef nonnull %15, i64 noundef %sub63) #22, !dbg !13643
  br label %if.end75, !dbg !13639

if.else65:                                        ; preds = %if.end54
  br i1 %cmp66, label %cond.true68, label %cond.false70, !dbg !13644

cond.true68:                                      ; preds = %if.else65
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %15, i64 0, i32 0, !dbg !13646
  %25 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13646, !tbaa !1178
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %25, i64 0, i32 0, !dbg !13647
  %26 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13647, !tbaa !1141
  %27 = load %struct.zskiplistNode*, %struct.zskiplistNode** %26, align 8, !dbg !13648, !tbaa !782
  br label %if.end75, !dbg !13644

cond.false70:                                     ; preds = %if.else65
  %add71 = add nuw nsw i64 %spec.store.select, 1, !dbg !13649
  %call72 = tail call %struct.zskiplistNode* @zslGetElementByRank(%struct.zskiplist* noundef nonnull %15, i64 noundef %add71) #22, !dbg !13650
  br label %if.end75, !dbg !13644

if.end75:                                         ; preds = %cond.true68, %cond.false70, %cond.true, %cond.false
  %ln.0 = phi %struct.zskiplistNode* [ %24, %cond.true ], [ %call64, %cond.false ], [ %27, %cond.true68 ], [ %call72, %cond.false70 ], !dbg !13637
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.0, metadata !13571, metadata !DIExpression()), !dbg !13573
  %call76 = tail call i8* (...) @sdsempty() #23, !dbg !13651
  %mul = zext i1 %cmp5 to i32, !dbg !13652
  %cond81 = shl nsw i32 %conv57, %mul, !dbg !13652
  %call82 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call76, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %cond81) #23, !dbg !13653
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call82) #22, !dbg !13654
  call void @llvm.dbg.value(metadata i32 0, metadata !13568, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.0, metadata !13571, metadata !DIExpression()), !dbg !13573
  %cmp83154 = icmp ult i32 %23, 2147483647, !dbg !13655
  br i1 %cmp83154, label %for.body, label %cleanup, !dbg !13658

for.body:                                         ; preds = %if.end75, %cond.end93
  %ln.1156 = phi %struct.zskiplistNode* [ %cond94, %cond.end93 ], [ %ln.0, %if.end75 ]
  %j.0155 = phi i32 [ %inc, %cond.end93 ], [ 0, %if.end75 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.1156, metadata !13571, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i32 %j.0155, metadata !13568, metadata !DIExpression()), !dbg !13573
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1156, i64 0, i32 4, !dbg !13659
  %28 = load %struct.redisObject*, %struct.redisObject** %obj, align 8, !dbg !13659, !tbaa !6399
  call void @llvm.dbg.value(metadata %struct.redisObject* %28, metadata !13572, metadata !DIExpression()), !dbg !13573
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %28) #22, !dbg !13661
  br i1 %cmp5, label %if.then86, label %if.end87, !dbg !13662

if.then86:                                        ; preds = %for.body
  %score = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1156, i64 0, i32 3, !dbg !13663
  %29 = load double, double* %score, align 8, !dbg !13663, !tbaa !6393
  tail call void @addReplyDouble(%struct.redisClient* noundef %c, double noundef %29) #22, !dbg !13665
  br label %if.end87, !dbg !13665

if.end87:                                         ; preds = %if.then86, %for.body
  br i1 %tobool58.not, label %cond.false90, label %cond.true89, !dbg !13666

cond.true89:                                      ; preds = %if.end87
  %backward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1156, i64 0, i32 1, !dbg !13667
  br label %cond.end93, !dbg !13666

cond.false90:                                     ; preds = %if.end87
  %forward91 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1156, i64 0, i32 0, !dbg !13668
  %30 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward91, align 8, !dbg !13668, !tbaa !1141
  br label %cond.end93, !dbg !13666

cond.end93:                                       ; preds = %cond.false90, %cond.true89
  %cond94.in = phi %struct.zskiplistNode** [ %backward, %cond.true89 ], [ %30, %cond.false90 ]
  %cond94 = load %struct.zskiplistNode*, %struct.zskiplistNode** %cond94.in, align 8, !dbg !13666, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %cond94, metadata !13571, metadata !DIExpression()), !dbg !13573
  %inc = add nuw nsw i32 %j.0155, 1, !dbg !13669
  call void @llvm.dbg.value(metadata i32 %inc, metadata !13568, metadata !DIExpression()), !dbg !13573
  %exitcond.not = icmp eq i32 %j.0155, %23, !dbg !13655
  br i1 %exitcond.not, label %cleanup, label %for.body, !dbg !13658, !llvm.loop !13670

cleanup.sink.split:                               ; preds = %if.end23, %lor.lhs.false43, %if.else, %land.lhs.true
  %.sink157 = phi %struct.redisObject** [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), %land.lhs.true ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), %if.else ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), %lor.lhs.false43 ], [ getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), %if.end23 ]
  %31 = load %struct.redisObject*, %struct.redisObject** %.sink157, align 8, !dbg !13573, !tbaa !782
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %31) #22, !dbg !13573
  br label %cleanup, !dbg !13672

cleanup:                                          ; preds = %cond.end93, %cleanup.sink.split, %if.end75, %if.end14, %lor.lhs.false19, %entry, %lor.lhs.false
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !13672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !13672
  ret void, !dbg !13672
}

; Function Attrs: noinline nounwind uwtable
define internal void @genericZrangebyscoreCommand(%struct.redisClient* noundef %c, i32 noundef %justcount) #0 !dbg !13673 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !13675, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %justcount, metadata !13676, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13680, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13681, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13682, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 -1, metadata !13683, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13684, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13685, metadata !DIExpression()), !dbg !13696
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !13697
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13697, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !13699
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !13699, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !13700
  %2 = load i8*, i8** %ptr, align 8, !dbg !13700, !tbaa !1328
  %3 = load i8, i8* %2, align 1, !dbg !13701, !tbaa !795
  %cmp = icmp eq i8 %3, 40, !dbg !13702
  %.sink.idx = zext i1 %cmp to i64, !dbg !13703
  %.sink = getelementptr i8, i8* %2, i64 %.sink.idx, !dbg !13703
  %call9 = tail call double @strtod(i8* noundef nonnull %.sink, i8** noundef null) #23, !dbg !13704
  call void @llvm.dbg.value(metadata double %call9, metadata !13678, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 undef, metadata !13680, metadata !DIExpression()), !dbg !13696
  %4 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13705, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !13707
  %5 = load %struct.redisObject*, %struct.redisObject** %arrayidx11, align 8, !dbg !13707, !tbaa !782
  %ptr12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !13708
  %6 = load i8*, i8** %ptr12, align 8, !dbg !13708, !tbaa !1328
  %7 = load i8, i8* %6, align 1, !dbg !13709, !tbaa !795
  %cmp15 = icmp eq i8 %7, 40, !dbg !13710
  %.sink311.idx = zext i1 %cmp15 to i64, !dbg !13711
  %.sink311 = getelementptr i8, i8* %6, i64 %.sink311.idx, !dbg !13711
  %call27 = tail call double @strtod(i8* noundef nonnull %.sink311, i8** noundef null) #23, !dbg !13712
  call void @llvm.dbg.value(metadata double %call27, metadata !13679, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()), !dbg !13696
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !13713
  %8 = load i32, i32* %argc, align 8, !dbg !13713, !tbaa !1350
  switch i32 %8, label %if.end45 [
    i32 5, label %if.then34
    i32 8, label %if.then34
  ], !dbg !13715

if.then34:                                        ; preds = %entry, %entry
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13716, !tbaa !1352
  %sub = add nsw i32 %8, -1, !dbg !13719
  %idxprom276 = zext i32 %sub to i64, !dbg !13720
  %arrayidx37 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %idxprom276, !dbg !13720
  %10 = load %struct.redisObject*, %struct.redisObject** %arrayidx37, align 8, !dbg !13720, !tbaa !782
  %ptr38 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !13721
  %11 = load i8*, i8** %ptr38, align 8, !dbg !13721, !tbaa !1328
  %call39 = tail call i32 @strcasecmp(i8* noundef %11, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.286, i64 0, i64 0)) #27, !dbg !13722
  %cmp40 = icmp eq i32 %call39, 0, !dbg !13723
  %. = zext i1 %cmp40 to i64
  %not.cmp40 = xor i1 %cmp40, true
  %.272 = zext i1 %cmp40 to i32
  br label %if.end45

if.end45:                                         ; preds = %if.then34, %entry
  %tobool169.not = phi i64 [ 0, %entry ], [ %., %if.then34 ]
  %tobool152.not = phi i1 [ true, %entry ], [ %not.cmp40, %if.then34 ], !dbg !13696
  %withscores.0 = phi i32 [ 0, %entry ], [ %.272, %if.then34 ], !dbg !13696
  %badsyntax.0 = phi i1 [ true, %entry ], [ %cmp40, %if.then34 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %withscores.0, metadata !13684, metadata !DIExpression()), !dbg !13696
  %add = or i32 %withscores.0, 4, !dbg !13724
  %cmp47.not = icmp eq i32 %8, %add, !dbg !13726
  %add50 = add nuw nsw i32 %withscores.0, 7
  %cmp51.not = icmp eq i32 %8, %add50
  %or.cond274 = select i1 %cmp47.not, i1 true, i1 %cmp51.not, !dbg !13727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()), !dbg !13696
  %tobool.not = select i1 %or.cond274, i1 %badsyntax.0, i1 false, !dbg !13728
  br i1 %tobool.not, label %if.end57, label %if.then55, !dbg !13730

if.then55:                                        ; preds = %if.end45
  %call56 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.287, i64 0, i64 0)) #23, !dbg !13731
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call56) #22, !dbg !13733
  br label %cleanup184, !dbg !13734

if.end57:                                         ; preds = %if.end45
  %12 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13696, !tbaa !1352
  br i1 %cmp51.not, label %land.lhs.true62, label %if.end88, !dbg !13735

land.lhs.true62:                                  ; preds = %if.end57
  %arrayidx64 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 4, !dbg !13737
  %13 = load %struct.redisObject*, %struct.redisObject** %arrayidx64, align 8, !dbg !13737, !tbaa !782
  %ptr65 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 0, !dbg !13738
  %14 = load i8*, i8** %ptr65, align 8, !dbg !13738, !tbaa !1328
  %call66 = tail call i32 @strcasecmp(i8* noundef %14, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i64 0, i64 0)) #27, !dbg !13739
  %tobool67.not = icmp eq i32 %call66, 0, !dbg !13739
  br i1 %tobool67.not, label %if.then74, label %if.then68, !dbg !13740

if.then68:                                        ; preds = %land.lhs.true62
  %15 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !13741, !tbaa !11130
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %15) #22, !dbg !13743
  br label %cleanup184, !dbg !13744

if.then74:                                        ; preds = %land.lhs.true62
  %arrayidx76 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 5, !dbg !13745
  %16 = load %struct.redisObject*, %struct.redisObject** %arrayidx76, align 8, !dbg !13745, !tbaa !782
  %ptr77 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %16, i64 0, i32 0, !dbg !13748
  %17 = load i8*, i8** %ptr77, align 8, !dbg !13748, !tbaa !1328
  %call78 = tail call i32 @atoi(i8* noundef %17) #27, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %call78, metadata !13682, metadata !DIExpression()), !dbg !13696
  %arrayidx80 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 6, !dbg !13750
  %18 = load %struct.redisObject*, %struct.redisObject** %arrayidx80, align 8, !dbg !13750, !tbaa !782
  %ptr81 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 0, !dbg !13751
  %19 = load i8*, i8** %ptr81, align 8, !dbg !13751, !tbaa !1328
  %call82 = tail call i32 @atoi(i8* noundef %19) #27, !dbg !13752
  call void @llvm.dbg.value(metadata i32 %call82, metadata !13683, metadata !DIExpression()), !dbg !13696
  %20 = icmp sgt i32 %call78, 0, !dbg !13753
  %spec.store.select = select i1 %20, i32 %call78, i32 0, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %spec.store.select, metadata !13682, metadata !DIExpression()), !dbg !13696
  br label %if.end88, !dbg !13754

if.end88:                                         ; preds = %if.end57, %if.then74
  %offset.0 = phi i32 [ %spec.store.select, %if.then74 ], [ 0, %if.end57 ], !dbg !13696
  %limit.0 = phi i32 [ %call82, %if.then74 ], [ -1, %if.end57 ], !dbg !13696
  call void @llvm.dbg.value(metadata i32 %limit.0, metadata !13683, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !13682, metadata !DIExpression()), !dbg !13696
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !13755
  %21 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !13755, !tbaa !2890
  %arrayidx90 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 1, !dbg !13756
  %22 = load %struct.redisObject*, %struct.redisObject** %arrayidx90, align 8, !dbg !13756, !tbaa !782
  %call91 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %21, %struct.redisObject* noundef %22) #22, !dbg !13757
  call void @llvm.dbg.value(metadata %struct.redisObject* %call91, metadata !13677, metadata !DIExpression()), !dbg !13696
  %cmp92 = icmp eq %struct.redisObject* %call91, null, !dbg !13758
  br i1 %cmp92, label %if.then94, label %if.else96, !dbg !13759

if.then94:                                        ; preds = %if.end88
  %tobool95.not = icmp eq i32 %justcount, 0, !dbg !13760
  %23 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !13760
  %24 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !13760
  %cond = select i1 %tobool95.not, %struct.redisObject* %24, %struct.redisObject* %23, !dbg !13760
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond) #22, !dbg !13762
  br label %cleanup184, !dbg !13763

if.else96:                                        ; preds = %if.end88
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call91, i64 0, i32 1, !dbg !13764
  %25 = load i8, i8* %type, align 8, !dbg !13764, !tbaa !1526
  %cmp98.not = icmp eq i8 %25, 3, !dbg !13765
  br i1 %cmp98.not, label %if.else101, label %if.then100, !dbg !13766

if.then100:                                       ; preds = %if.else96
  %26 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !13767, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %26) #22, !dbg !13769
  br label %cleanup184, !dbg !13770

if.else101:                                       ; preds = %if.else96
  %27 = bitcast %struct.redisObject* %call91 to %struct.zset**, !dbg !13771
  %28 = load %struct.zset*, %struct.zset** %27, align 8, !dbg !13771, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %28, metadata !13686, metadata !DIExpression()), !dbg !13772
  %zsl103 = getelementptr inbounds %struct.zset, %struct.zset* %28, i64 0, i32 1, !dbg !13773
  %29 = load %struct.zskiplist*, %struct.zskiplist** %zsl103, align 8, !dbg !13773, !tbaa !6138
  call void @llvm.dbg.value(metadata %struct.zskiplist* %29, metadata !13691, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !13694, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i64 0, metadata !13695, metadata !DIExpression()), !dbg !13772
  %call104 = tail call %struct.zskiplistNode* @zslFirstWithScore(%struct.zskiplist* noundef %29, double noundef %call9) #22, !dbg !13774
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %call104, metadata !13692, metadata !DIExpression()), !dbg !13772
  %tobool107285 = icmp ne %struct.zskiplistNode* %call104, null
  %or.cond286 = select i1 %cmp, i1 %tobool107285, i1 false, !dbg !13775
  br i1 %or.cond286, label %land.rhs, label %while.end, !dbg !13775

land.rhs:                                         ; preds = %if.else101, %while.body
  %ln.0287 = phi %struct.zskiplistNode* [ %32, %while.body ], [ %call104, %if.else101 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.0287, metadata !13692, metadata !DIExpression()), !dbg !13772
  %score = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.0287, i64 0, i32 3, !dbg !13776
  %30 = load double, double* %score, align 8, !dbg !13776, !tbaa !6393
  %cmp108 = fcmp oeq double %30, %call9, !dbg !13777
  br i1 %cmp108, label %while.body, label %if.end119, !dbg !13778

while.body:                                       ; preds = %land.rhs
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.0287, i64 0, i32 0, !dbg !13779
  %31 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13779, !tbaa !1141
  %32 = load %struct.zskiplistNode*, %struct.zskiplistNode** %31, align 8, !dbg !13780, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %32, metadata !13692, metadata !DIExpression()), !dbg !13772
  %tobool107.not = icmp eq %struct.zskiplistNode* %32, null
  br i1 %tobool107.not, label %if.then113, label %land.rhs, !dbg !13775, !llvm.loop !13781

while.end:                                        ; preds = %if.else101
  %cmp111 = icmp eq %struct.zskiplistNode* %call104, null, !dbg !13783
  br i1 %cmp111, label %if.then113, label %if.end119, !dbg !13785

if.then113:                                       ; preds = %while.body, %while.end
  %tobool114.not = icmp eq i32 %justcount, 0, !dbg !13786
  %33 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !13786
  %34 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !13786
  %cond118 = select i1 %tobool114.not, %struct.redisObject* %34, %struct.redisObject* %33, !dbg !13786
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %cond118) #22, !dbg !13788
  br label %cleanup184, !dbg !13789

if.end119:                                        ; preds = %land.rhs, %while.end
  %ln.0284 = phi %struct.zskiplistNode* [ %call104, %while.end ], [ %ln.0287, %land.rhs ]
  %tobool120.not = icmp eq i32 %justcount, 0, !dbg !13790
  br i1 %tobool120.not, label %if.then121, label %land.rhs126.lr.ph.preheader, !dbg !13792

if.then121:                                       ; preds = %if.end119
  %call122 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !13793
  call void @llvm.dbg.value(metadata %struct.redisObject* %call122, metadata !13694, metadata !DIExpression()), !dbg !13772
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call122) #22, !dbg !13795
  %35 = bitcast %struct.redisObject* %call122 to i8*, !dbg !13796
  tail call void @decrRefCount(i8* noundef %35) #22, !dbg !13797
  br label %land.rhs126.lr.ph.preheader, !dbg !13798

land.rhs126.lr.ph.preheader:                      ; preds = %if.end119, %if.then121
  %lenobj.0 = phi %struct.redisObject* [ null, %if.end119 ], [ %call122, %if.then121 ], !dbg !13772
  call void @llvm.dbg.value(metadata %struct.redisObject* %lenobj.0, metadata !13694, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i64 0, metadata !13695, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.0284, metadata !13692, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %limit.0, metadata !13683, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !13682, metadata !DIExpression()), !dbg !13696
  br label %land.rhs126.lr.ph, !dbg !13799

land.rhs126.lr.ph:                                ; preds = %land.rhs126.lr.ph.preheader, %if.end156
  %rangelen.0.ph299 = phi i64 [ %inc, %if.end156 ], [ 0, %land.rhs126.lr.ph.preheader ]
  %ln.1.ph298 = phi %struct.zskiplistNode* [ %42, %if.end156 ], [ %ln.0284, %land.rhs126.lr.ph.preheader ]
  %limit.1.ph297 = phi i32 [ %spec.select, %if.end156 ], [ %limit.0, %land.rhs126.lr.ph.preheader ]
  %offset.1.ph296 = phi i32 [ 0, %if.end156 ], [ %offset.0, %land.rhs126.lr.ph.preheader ]
  call void @llvm.dbg.value(metadata i64 %rangelen.0.ph299, metadata !13695, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.1.ph298, metadata !13692, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %limit.1.ph297, metadata !13683, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %offset.1.ph296, metadata !13682, metadata !DIExpression()), !dbg !13696
  br label %land.rhs126, !dbg !13800

land.rhs126:                                      ; preds = %land.rhs126.lr.ph, %if.then142
  %ln.1290 = phi %struct.zskiplistNode* [ %ln.1.ph298, %land.rhs126.lr.ph ], [ %38, %if.then142 ]
  %offset.1289 = phi i32 [ %offset.1.ph296, %land.rhs126.lr.ph ], [ %dec, %if.then142 ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %ln.1290, metadata !13692, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %offset.1289, metadata !13682, metadata !DIExpression()), !dbg !13696
  %score129 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1290, i64 0, i32 3, !dbg !13772
  %36 = load double, double* %score129, align 8, !dbg !13772, !tbaa !6393
  br i1 %cmp15, label %cond.true128, label %cond.end136, !dbg !13801

cond.true128:                                     ; preds = %land.rhs126
  %cmp130 = fcmp olt double %36, %call27, !dbg !13802
  br i1 %cmp130, label %while.body140, label %while.end164, !dbg !13799

cond.end136:                                      ; preds = %land.rhs126
  %cmp134 = fcmp ugt double %36, %call27, !dbg !13803
  br i1 %cmp134, label %while.end164, label %while.body140, !dbg !13799

while.body140:                                    ; preds = %cond.true128, %cond.end136
  %tobool141.not = icmp eq i32 %offset.1289, 0, !dbg !13804
  br i1 %tobool141.not, label %if.end145, label %if.then142, !dbg !13807

if.then142:                                       ; preds = %while.body140
  %dec = add nsw i32 %offset.1289, -1, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %dec, metadata !13682, metadata !DIExpression()), !dbg !13696
  %forward143 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1290, i64 0, i32 0, !dbg !13810
  %37 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward143, align 8, !dbg !13810, !tbaa !1141
  %38 = load %struct.zskiplistNode*, %struct.zskiplistNode** %37, align 8, !dbg !13811, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %rangelen.0.ph299, metadata !13695, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %38, metadata !13692, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %limit.1.ph297, metadata !13683, metadata !DIExpression()), !dbg !13696
  %tobool125.not = icmp eq %struct.zskiplistNode* %38, null, !dbg !13812
  br i1 %tobool125.not, label %while.end164, label %land.rhs126, !dbg !13800, !llvm.loop !13813

if.end145:                                        ; preds = %while.body140
  %cmp146 = icmp eq i32 %limit.1.ph297, 0, !dbg !13815
  br i1 %cmp146, label %while.end164, label %if.end149, !dbg !13817

if.end149:                                        ; preds = %if.end145
  br i1 %tobool120.not, label %if.then151, label %if.end156, !dbg !13818

if.then151:                                       ; preds = %if.end149
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1290, i64 0, i32 4, !dbg !13819
  %39 = load %struct.redisObject*, %struct.redisObject** %obj, align 8, !dbg !13819, !tbaa !6399
  call void @llvm.dbg.value(metadata %struct.redisObject* %39, metadata !13693, metadata !DIExpression()), !dbg !13772
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %39) #22, !dbg !13822
  br i1 %tobool152.not, label %if.end156, label %if.then153, !dbg !13823

if.then153:                                       ; preds = %if.then151
  %score154 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1290, i64 0, i32 3, !dbg !13824
  %40 = load double, double* %score154, align 8, !dbg !13824, !tbaa !6393
  tail call void @addReplyDouble(%struct.redisClient* noundef %c, double noundef %40) #22, !dbg !13826
  br label %if.end156, !dbg !13826

if.end156:                                        ; preds = %if.then151, %if.then153, %if.end149
  %forward157 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %ln.1290, i64 0, i32 0, !dbg !13827
  %41 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward157, align 8, !dbg !13827, !tbaa !1141
  %42 = load %struct.zskiplistNode*, %struct.zskiplistNode** %41, align 8, !dbg !13828, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %42, metadata !13692, metadata !DIExpression()), !dbg !13772
  %inc = add i64 %rangelen.0.ph299, 1, !dbg !13829
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13695, metadata !DIExpression()), !dbg !13772
  %cmp159 = icmp sgt i32 %limit.1.ph297, 0, !dbg !13830
  %dec162 = sext i1 %cmp159 to i32, !dbg !13832
  %spec.select = add nsw i32 %limit.1.ph297, %dec162, !dbg !13832
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !13683, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 0, metadata !13682, metadata !DIExpression()), !dbg !13696
  %tobool125.not288 = icmp eq %struct.zskiplistNode* %42, null, !dbg !13812
  br i1 %tobool125.not288, label %while.end164, label %land.rhs126.lr.ph, !dbg !13800, !llvm.loop !13813

while.end164:                                     ; preds = %if.end145, %if.end156, %cond.end136, %if.then142, %cond.true128
  %rangelen.0.ph282 = phi i64 [ %rangelen.0.ph299, %cond.true128 ], [ %rangelen.0.ph299, %if.then142 ], [ %rangelen.0.ph299, %cond.end136 ], [ %inc, %if.end156 ], [ %rangelen.0.ph299, %if.end145 ]
  br i1 %tobool120.not, label %if.else167, label %if.then166, !dbg !13833

if.then166:                                       ; preds = %while.end164
  tail call void @addReplyLongLong(%struct.redisClient* noundef %c, i64 noundef %rangelen.0.ph282) #22, !dbg !13834
  br label %cleanup184, !dbg !13837

if.else167:                                       ; preds = %while.end164
  %call168 = tail call i8* (...) @sdsempty() #23, !dbg !13838
  %cond173 = shl i64 %rangelen.0.ph282, %tobool169.not, !dbg !13840
  %call174 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call168, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i64 0, i64 0), i64 noundef %cond173) #23, !dbg !13841
  %ptr175 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %lenobj.0, i64 0, i32 0, !dbg !13842
  store i8* %call174, i8** %ptr175, align 8, !dbg !13843, !tbaa !1328
  br label %cleanup184

cleanup184:                                       ; preds = %if.then113, %if.else167, %if.then166, %if.then94, %if.then100, %if.then68, %if.then55
  ret void, !dbg !13844
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly uwtable
define internal %struct.zskiplistNode* @zslFirstWithScore(%struct.zskiplist* nocapture noundef readonly %zsl, double noundef %score) #7 !dbg !13845 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !13849, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.value(metadata double %score, metadata !13850, metadata !DIExpression()), !dbg !13853
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !13854
  %0 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13854, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %0, metadata !13851, metadata !DIExpression()), !dbg !13853
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !13855
  %1 = load i32, i32* %level, align 8, !dbg !13855, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %1, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata i32 %1, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %0, metadata !13851, metadata !DIExpression()), !dbg !13853
  %cmp22 = icmp sgt i32 %1, 0, !dbg !13857
  br i1 %cmp22, label %while.cond.preheader.preheader, label %entry.for.end_crit_edge, !dbg !13859

entry.for.end_crit_edge:                          ; preds = %entry
  %forward9.phi.trans.insert = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %0, i64 0, i32 0
  %.pre = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward9.phi.trans.insert, align 8, !dbg !13860, !tbaa !1141
  br label %for.end, !dbg !13859

while.cond.preheader.preheader:                   ; preds = %entry
  %2 = zext i32 %1 to i64, !dbg !13859
  %xtraiter = and i64 %2, 1, !dbg !13859
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !13859
  br i1 %lcmp.mod.not, label %while.cond.preheader.prol.loopexit, label %while.cond.preheader.prol, !dbg !13859

while.cond.preheader.prol:                        ; preds = %while.cond.preheader.preheader
  %indvars.iv.next.prol = add nsw i64 %2, -1, !dbg !13861
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %0, metadata !13851, metadata !DIExpression()), !dbg !13853
  br label %while.cond.prol, !dbg !13862

while.cond.prol:                                  ; preds = %land.rhs.prol, %while.cond.preheader.prol
  %x.1.prol = phi %struct.zskiplistNode* [ %4, %land.rhs.prol ], [ %0, %while.cond.preheader.prol ], !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.prol, metadata !13851, metadata !DIExpression()), !dbg !13853
  %forward.prol = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1.prol, i64 0, i32 0, !dbg !13864
  %3 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.prol, align 8, !dbg !13864, !tbaa !1141
  %arrayidx.prol = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %3, i64 %indvars.iv.next.prol, !dbg !13865
  %4 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx.prol, align 8, !dbg !13865, !tbaa !782
  %tobool.not.prol = icmp eq %struct.zskiplistNode* %4, null, !dbg !13865
  br i1 %tobool.not.prol, label %while.cond.preheader.prol.loopexit, label %land.rhs.prol, !dbg !13866

land.rhs.prol:                                    ; preds = %while.cond.prol
  %score4.prol = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %4, i64 0, i32 3, !dbg !13867
  %5 = load double, double* %score4.prol, align 8, !dbg !13867, !tbaa !6393
  %cmp5.prol = fcmp olt double %5, %score, !dbg !13868
  br i1 %cmp5.prol, label %while.cond.prol, label %while.cond.preheader.prol.loopexit, !dbg !13862, !llvm.loop !13869

while.cond.preheader.prol.loopexit:               ; preds = %while.cond.prol, %land.rhs.prol, %while.cond.preheader.preheader
  %indvars.iv.unr = phi i64 [ %2, %while.cond.preheader.preheader ], [ %indvars.iv.next.prol, %land.rhs.prol ], [ %indvars.iv.next.prol, %while.cond.prol ]
  %x.023.unr = phi %struct.zskiplistNode* [ %0, %while.cond.preheader.preheader ], [ %x.1.prol, %land.rhs.prol ], [ %x.1.prol, %while.cond.prol ]
  %.lcssa.lcssa.unr = phi %struct.zskiplistNode** [ undef, %while.cond.preheader.preheader ], [ %3, %land.rhs.prol ], [ %3, %while.cond.prol ]
  %6 = icmp eq i32 %1, 1, !dbg !13859
  br i1 %6, label %for.end, label %while.cond.preheader, !dbg !13859

while.cond.preheader:                             ; preds = %while.cond.preheader.prol.loopexit, %for.inc.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.inc.1 ], [ %indvars.iv.unr, %while.cond.preheader.prol.loopexit ]
  %x.023 = phi %struct.zskiplistNode* [ %x.1.1, %for.inc.1 ], [ %x.023.unr, %while.cond.preheader.prol.loopexit ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13861
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.023, metadata !13851, metadata !DIExpression()), !dbg !13853
  br label %while.cond, !dbg !13862

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %x.1 = phi %struct.zskiplistNode* [ %8, %land.rhs ], [ %x.023, %while.cond.preheader ], !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13851, metadata !DIExpression()), !dbg !13853
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1, i64 0, i32 0, !dbg !13864
  %7 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13864, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %7, i64 %indvars.iv.next, !dbg !13865
  %8 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !13865, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %8, null, !dbg !13865
  br i1 %tobool.not, label %for.inc, label %land.rhs, !dbg !13866

land.rhs:                                         ; preds = %while.cond
  %score4 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %8, i64 0, i32 3, !dbg !13867
  %9 = load double, double* %score4, align 8, !dbg !13867, !tbaa !6393
  %cmp5 = fcmp olt double %9, %score, !dbg !13868
  br i1 %cmp5, label %while.cond, label %for.inc, !dbg !13862, !llvm.loop !13869

for.inc:                                          ; preds = %land.rhs, %while.cond
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13851, metadata !DIExpression()), !dbg !13853
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, -2, !dbg !13861
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1, metadata !13851, metadata !DIExpression()), !dbg !13853
  br label %while.cond.1, !dbg !13862

while.cond.1:                                     ; preds = %land.rhs.1, %for.inc
  %x.1.1 = phi %struct.zskiplistNode* [ %11, %land.rhs.1 ], [ %x.1, %for.inc ], !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.1, metadata !13851, metadata !DIExpression()), !dbg !13853
  %forward.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1.1, i64 0, i32 0, !dbg !13864
  %10 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward.1, align 8, !dbg !13864, !tbaa !1141
  %arrayidx.1 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %10, i64 %indvars.iv.next.1, !dbg !13865
  %11 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx.1, align 8, !dbg !13865, !tbaa !782
  %tobool.not.1 = icmp eq %struct.zskiplistNode* %11, null, !dbg !13865
  br i1 %tobool.not.1, label %for.inc.1, label %land.rhs.1, !dbg !13866

land.rhs.1:                                       ; preds = %while.cond.1
  %score4.1 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %11, i64 0, i32 3, !dbg !13867
  %12 = load double, double* %score4.1, align 8, !dbg !13867, !tbaa !6393
  %cmp5.1 = fcmp olt double %12, %score, !dbg !13868
  br i1 %cmp5.1, label %while.cond.1, label %for.inc.1, !dbg !13862, !llvm.loop !13869

for.inc.1:                                        ; preds = %land.rhs.1, %while.cond.1
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !13852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13853
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.1, metadata !13851, metadata !DIExpression()), !dbg !13853
  %cmp.1 = icmp sgt i64 %indvars.iv, 2, !dbg !13857
  br i1 %cmp.1, label %while.cond.preheader, label %for.end, !dbg !13859, !llvm.loop !13871

for.end:                                          ; preds = %while.cond.preheader.prol.loopexit, %for.inc.1, %entry.for.end_crit_edge
  %13 = phi %struct.zskiplistNode** [ %.pre, %entry.for.end_crit_edge ], [ %.lcssa.lcssa.unr, %while.cond.preheader.prol.loopexit ], [ %10, %for.inc.1 ], !dbg !13860
  %14 = load %struct.zskiplistNode*, %struct.zskiplistNode** %13, align 8, !dbg !13873, !tbaa !782
  ret %struct.zskiplistNode* %14, !dbg !13874
}

; Function Attrs: noinline nounwind uwtable
define internal void @zrankGenericCommand(%struct.redisClient* noundef %c, i32 noundef %reverse) #0 !dbg !13875 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !13877, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 %reverse, metadata !13878, metadata !DIExpression()), !dbg !13885
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !13886
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13886, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !13888
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !13888, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !13889, !tbaa !8818
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !13890
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !13879, metadata !DIExpression()), !dbg !13885
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !13891
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !13892

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 3) #22, !dbg !13893
  %tobool.not = icmp eq i32 %call1, 0, !dbg !13893
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !13894

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.redisObject* %call to %struct.zset**, !dbg !13895
  %4 = load %struct.zset*, %struct.zset** %3, align 8, !dbg !13895, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %4, metadata !13880, metadata !DIExpression()), !dbg !13885
  %zsl2 = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 1, !dbg !13896
  %5 = load %struct.zskiplist*, %struct.zskiplist** %zsl2, align 8, !dbg !13896, !tbaa !6138
  call void @llvm.dbg.value(metadata %struct.zskiplist* %5, metadata !13881, metadata !DIExpression()), !dbg !13885
  %dict = getelementptr inbounds %struct.zset, %struct.zset* %4, i64 0, i32 0, !dbg !13897
  %6 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !13897, !tbaa !6133
  %7 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13898, !tbaa !1352
  %arrayidx4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 2, !dbg !13899
  %8 = bitcast %struct.redisObject** %arrayidx4 to i8**, !dbg !13899
  %9 = load i8*, i8** %8, align 8, !dbg !13899, !tbaa !782
  %call5 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %6, i8* noundef %9) #23, !dbg !13900
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call5, metadata !13882, metadata !DIExpression()), !dbg !13885
  %tobool6.not = icmp eq %struct.dictEntry* %call5, null, !dbg !13901
  br i1 %tobool6.not, label %if.then7, label %if.end8, !dbg !13903

if.then7:                                         ; preds = %if.end
  %10 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !13904, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %10) #22, !dbg !13906
  br label %cleanup, !dbg !13907

if.end8:                                          ; preds = %if.end
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call5, i64 0, i32 1, !dbg !13908
  %11 = bitcast i8** %val to double**, !dbg !13908
  %12 = load double*, double** %11, align 8, !dbg !13908, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %12, metadata !13884, metadata !DIExpression()), !dbg !13885
  %13 = load double, double* %12, align 8, !dbg !13909, !tbaa !6140
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !13910, !tbaa !1352
  %arrayidx10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 2, !dbg !13911
  %15 = load %struct.redisObject*, %struct.redisObject** %arrayidx10, align 8, !dbg !13911, !tbaa !782
  %call11 = tail call fastcc i64 @zslGetRank(%struct.zskiplist* noundef %5, double noundef %13, %struct.redisObject* noundef %15) #22, !dbg !13912
  call void @llvm.dbg.value(metadata i64 %call11, metadata !13883, metadata !DIExpression()), !dbg !13885
  %tobool12.not = icmp eq i64 %call11, 0, !dbg !13913
  br i1 %tobool12.not, label %if.else18, label %if.then13, !dbg !13915

if.then13:                                        ; preds = %if.end8
  %tobool14.not = icmp eq i32 %reverse, 0, !dbg !13916
  br i1 %tobool14.not, label %if.else, label %if.then15, !dbg !13919

if.then15:                                        ; preds = %if.then13
  %length = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %5, i64 0, i32 2, !dbg !13920
  %16 = load i64, i64* %length, align 8, !dbg !13920, !tbaa !1187
  %sub = sub i64 %16, %call11, !dbg !13922
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %sub) #22, !dbg !13923
  br label %cleanup, !dbg !13924

if.else:                                          ; preds = %if.then13
  %sub16 = add i64 %call11, -1, !dbg !13925
  tail call void @addReplyLongLong(%struct.redisClient* noundef nonnull %c, i64 noundef %sub16) #22, !dbg !13927
  br label %cleanup

if.else18:                                        ; preds = %if.end8
  %17 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !13928, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %17) #22, !dbg !13930
  br label %cleanup

cleanup:                                          ; preds = %if.else18, %if.else, %if.then15, %entry, %lor.lhs.false, %if.then7
  ret void, !dbg !13931
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @zslGetRank(%struct.zskiplist* nocapture noundef readonly %zsl, double noundef %score, %struct.redisObject* noundef %o) unnamed_addr #0 !dbg !13932 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !13936, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata double %score, metadata !13937, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !13938, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i64 0, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* undef, metadata !13939, metadata !DIExpression()), !dbg !13942
  %level = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 3, !dbg !13943
  %0 = load i32, i32* %level, align 8, !dbg !13943, !tbaa !1133
  call void @llvm.dbg.value(metadata i32 %0, metadata !13941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13942
  call void @llvm.dbg.value(metadata i32 %0, metadata !13941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13942
  call void @llvm.dbg.value(metadata i64 0, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* undef, metadata !13939, metadata !DIExpression()), !dbg !13942
  %cmp70 = icmp sgt i32 %0, 0, !dbg !13945
  br i1 %cmp70, label %while.cond.preheader.preheader, label %cleanup, !dbg !13947

while.cond.preheader.preheader:                   ; preds = %entry
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !13948
  %1 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !13948, !tbaa !1178
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %1, metadata !13939, metadata !DIExpression()), !dbg !13942
  %2 = zext i32 %0 to i64, !dbg !13947
  br label %while.cond.preheader, !dbg !13947

while.cond.preheader:                             ; preds = %while.cond.preheader.preheader, %for.inc
  %indvars.iv = phi i64 [ %2, %while.cond.preheader.preheader ], [ %indvars.iv.next, %for.inc ]
  %rank.072 = phi i64 [ 0, %while.cond.preheader.preheader ], [ %rank.1.lcssa, %for.inc ]
  %x.071 = phi %struct.zskiplistNode* [ %1, %while.cond.preheader.preheader ], [ %x.1.lcssa, %for.inc ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13949
  call void @llvm.dbg.value(metadata i64 %rank.072, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.071, metadata !13939, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i64 %rank.072, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.071, metadata !13939, metadata !DIExpression()), !dbg !13942
  %forward56 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.071, i64 0, i32 0, !dbg !13950
  %3 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward56, align 8, !dbg !13950, !tbaa !1141
  %arrayidx57 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %3, i64 %indvars.iv.next, !dbg !13952
  %4 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx57, align 8, !dbg !13952, !tbaa !782
  %tobool.not58 = icmp eq %struct.zskiplistNode* %4, null, !dbg !13952
  br i1 %tobool.not58, label %while.end, label %land.rhs.lr.ph, !dbg !13953

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %cmp17 = icmp ugt i64 %indvars.iv, 1
  %5 = add nuw i64 %indvars.iv, 4294967294
  %6 = and i64 %5, 4294967295
  br label %land.rhs, !dbg !13953

land.rhs:                                         ; preds = %land.rhs.lr.ph, %cond.end
  %7 = phi %struct.zskiplistNode* [ %4, %land.rhs.lr.ph ], [ %15, %cond.end ]
  %forward63 = phi %struct.zskiplistNode*** [ %forward56, %land.rhs.lr.ph ], [ %forward, %cond.end ]
  %rank.161 = phi i64 [ %rank.072, %land.rhs.lr.ph ], [ %add, %cond.end ]
  %x.159 = phi %struct.zskiplistNode* [ %x.071, %land.rhs.lr.ph ], [ %13, %cond.end ]
  call void @llvm.dbg.value(metadata i64 %rank.161, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.159, metadata !13939, metadata !DIExpression()), !dbg !13942
  %score4 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %7, i64 0, i32 3, !dbg !13954
  %8 = load double, double* %score4, align 8, !dbg !13954, !tbaa !6393
  %cmp5 = fcmp olt double %8, %score, !dbg !13955
  br i1 %cmp5, label %while.body, label %lor.rhs, !dbg !13956

lor.rhs:                                          ; preds = %land.rhs
  %cmp10 = fcmp oeq double %8, %score, !dbg !13957
  br i1 %cmp10, label %land.rhs11, label %while.end, !dbg !13958

land.rhs11:                                       ; preds = %lor.rhs
  %obj = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %7, i64 0, i32 4, !dbg !13959
  %9 = load %struct.redisObject*, %struct.redisObject** %obj, align 8, !dbg !13959, !tbaa !6399
  %call = tail call i32 @compareStringObjects(%struct.redisObject* noundef %9, %struct.redisObject* noundef %o) #22, !dbg !13960
  %cmp15 = icmp slt i32 %call, 1, !dbg !13961
  br i1 %cmp15, label %while.body, label %while.end, !dbg !13962

while.body:                                       ; preds = %land.rhs, %land.rhs11
  br i1 %cmp17, label %cond.true, label %cond.end, !dbg !13963

cond.true:                                        ; preds = %while.body
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.159, i64 0, i32 2, !dbg !13965
  %10 = load i32*, i32** %span, align 8, !dbg !13965, !tbaa !1148
  %arrayidx20 = getelementptr inbounds i32, i32* %10, i64 %6, !dbg !13966
  %11 = load i32, i32* %arrayidx20, align 4, !dbg !13966, !tbaa !926
  br label %cond.end, !dbg !13963

cond.end:                                         ; preds = %while.body, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ 1, %while.body ], !dbg !13963
  %conv = zext i32 %cond to i64, !dbg !13963
  %add = add i64 %rank.161, %conv, !dbg !13967
  call void @llvm.dbg.value(metadata i64 %add, metadata !13940, metadata !DIExpression()), !dbg !13942
  %12 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward63, align 8, !dbg !13968, !tbaa !1141
  %arrayidx23 = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %12, i64 %indvars.iv.next, !dbg !13969
  %13 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx23, align 8, !dbg !13969, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %13, metadata !13939, metadata !DIExpression()), !dbg !13942
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %13, i64 0, i32 0, !dbg !13950
  %14 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !13950, !tbaa !1141
  %arrayidx = getelementptr inbounds %struct.zskiplistNode*, %struct.zskiplistNode** %14, i64 %indvars.iv.next, !dbg !13952
  %15 = load %struct.zskiplistNode*, %struct.zskiplistNode** %arrayidx, align 8, !dbg !13952, !tbaa !782
  %tobool.not = icmp eq %struct.zskiplistNode* %15, null, !dbg !13952
  br i1 %tobool.not, label %while.end, label %land.rhs, !dbg !13953, !llvm.loop !13970

while.end:                                        ; preds = %land.rhs11, %cond.end, %lor.rhs, %while.cond.preheader
  %x.1.lcssa = phi %struct.zskiplistNode* [ %x.071, %while.cond.preheader ], [ %x.159, %lor.rhs ], [ %13, %cond.end ], [ %x.159, %land.rhs11 ], !dbg !13942
  %rank.1.lcssa = phi i64 [ %rank.072, %while.cond.preheader ], [ %rank.161, %lor.rhs ], [ %add, %cond.end ], [ %rank.161, %land.rhs11 ], !dbg !13942
  %obj24 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %x.1.lcssa, i64 0, i32 4, !dbg !13972
  %16 = load %struct.redisObject*, %struct.redisObject** %obj24, align 8, !dbg !13972, !tbaa !6399
  %tobool25.not = icmp eq %struct.redisObject* %16, null, !dbg !13974
  br i1 %tobool25.not, label %for.inc, label %land.lhs.true, !dbg !13975

land.lhs.true:                                    ; preds = %while.end
  %call27 = tail call i32 @equalStringObjects(%struct.redisObject* noundef nonnull %16, %struct.redisObject* noundef %o) #22, !dbg !13976
  %tobool28.not = icmp eq i32 %call27, 0, !dbg !13976
  br i1 %tobool28.not, label %for.inc, label %cleanup, !dbg !13977

for.inc:                                          ; preds = %while.end, %land.lhs.true
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !13941, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13942
  call void @llvm.dbg.value(metadata i64 %rank.1.lcssa, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %x.1.lcssa, metadata !13939, metadata !DIExpression()), !dbg !13942
  %cmp = icmp sgt i64 %indvars.iv, 1, !dbg !13945
  br i1 %cmp, label %while.cond.preheader, label %cleanup, !dbg !13947, !llvm.loop !13978

cleanup:                                          ; preds = %land.lhs.true, %for.inc, %entry
  %retval.0 = phi i64 [ 0, %entry ], [ 0, %for.inc ], [ %rank.1.lcssa, %land.lhs.true ], !dbg !13942
  ret i64 %retval.0, !dbg !13980
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @hashLookupWriteOrCreate(%struct.redisClient* noundef %c, %struct.redisObject* noundef %key) #0 !dbg !13981 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !13985, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !13986, metadata !DIExpression()), !dbg !13988
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !13989
  %0 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !13989, !tbaa !2890
  %call = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %0, %struct.redisObject* noundef %key) #22, !dbg !13990
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !13987, metadata !DIExpression()), !dbg !13988
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !13991
  br i1 %cmp, label %if.then, label %if.else, !dbg !13993

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.redisObject* @createHashObject() #22, !dbg !13994
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !13987, metadata !DIExpression()), !dbg !13988
  %1 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !13996, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 0, i32 0, !dbg !13997
  %2 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !13997, !tbaa !2353
  %3 = bitcast %struct.redisObject* %key to i8*, !dbg !13998
  %4 = bitcast %struct.redisObject* %call1 to i8*, !dbg !13999
  %call3 = tail call i32 @dictAdd(%struct.dict* noundef %2, i8* noundef %3, i8* noundef %4) #23, !dbg !14000
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !14001
  br label %cleanup, !dbg !14002

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 1, !dbg !14003
  %5 = load i8, i8* %type, align 8, !dbg !14003, !tbaa !1526
  %cmp4.not = icmp eq i8 %5, 4, !dbg !14006
  br i1 %cmp4.not, label %cleanup, label %if.then6, !dbg !14007

if.then6:                                         ; preds = %if.else
  %6 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !14008, !tbaa !8791
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %6) #22, !dbg !14010
  br label %cleanup, !dbg !14011

cleanup:                                          ; preds = %if.then, %if.else, %if.then6
  %retval.0 = phi %struct.redisObject* [ null, %if.then6 ], [ %call1, %if.then ], [ %call, %if.else ], !dbg !13988
  ret %struct.redisObject* %retval.0, !dbg !14012
}

; Function Attrs: noinline nounwind uwtable
define internal void @hashTryConversion(%struct.redisObject* nocapture noundef %subject, %struct.redisObject** nocapture noundef readonly %argv, i32 noundef %start, i32 noundef %end) #0 !dbg !14013 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %subject, metadata !14017, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata %struct.redisObject** %argv, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 %start, metadata !14019, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 %end, metadata !14020, metadata !DIExpression()), !dbg !14022
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %subject, i64 0, i32 2, !dbg !14023
  %0 = load i8, i8* %encoding, align 1, !dbg !14023, !tbaa !1529
  %cmp.not = icmp ne i8 %0, 2, !dbg !14025
  %cmp2.not20 = icmp sgt i32 %start, %end
  %or.cond = or i1 %cmp.not, %cmp2.not20, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %start, metadata !14021, metadata !DIExpression()), !dbg !14022
  br i1 %or.cond, label %cleanup, label %for.body.preheader, !dbg !14026

for.body.preheader:                               ; preds = %entry
  %1 = sext i32 %start to i64, !dbg !14027
  %2 = add i32 %end, 1, !dbg !14027
  br label %for.body, !dbg !14027

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ %1, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !14021, metadata !DIExpression()), !dbg !14022
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %argv, i64 %indvars.iv, !dbg !14029
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !14029, !tbaa !782
  %encoding4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 2, !dbg !14033
  %4 = load i8, i8* %encoding4, align 1, !dbg !14033, !tbaa !1529
  %cmp6 = icmp eq i8 %4, 0, !dbg !14034
  br i1 %cmp6, label %land.lhs.true, label %for.inc, !dbg !14035

land.lhs.true:                                    ; preds = %for.body
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !14036
  %5 = load i8*, i8** %ptr, align 8, !dbg !14036, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %5) #23, !dbg !14037
  %6 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62), align 8, !dbg !14038, !tbaa !2254
  %cmp10 = icmp ugt i64 %call, %6, !dbg !14039
  br i1 %cmp10, label %if.then12, label %for.inc, !dbg !14040

if.then12:                                        ; preds = %land.lhs.true
  tail call void @convertToRealHash(%struct.redisObject* noundef %subject) #22, !dbg !14041
  br label %cleanup, !dbg !14043

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !14044
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !14021, metadata !DIExpression()), !dbg !14022
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !14045
  %exitcond.not = icmp eq i32 %2, %lftr.wideiv, !dbg !14045
  br i1 %exitcond.not, label %cleanup, label %for.body, !dbg !14027, !llvm.loop !14046

cleanup:                                          ; preds = %for.inc, %entry, %if.then12
  ret void, !dbg !14048
}

; Function Attrs: noinline nounwind uwtable
define internal void @hashTryObjectEncoding(%struct.redisObject* nocapture noundef readonly %subject, %struct.redisObject** noundef %o1, %struct.redisObject** noundef %o2) #0 !dbg !14049 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %subject, metadata !14053, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata %struct.redisObject** %o1, metadata !14054, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata %struct.redisObject** %o2, metadata !14055, metadata !DIExpression()), !dbg !14056
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %subject, i64 0, i32 2, !dbg !14057
  %0 = load i8, i8* %encoding, align 1, !dbg !14057, !tbaa !1529
  %cmp = icmp eq i8 %0, 3, !dbg !14059
  br i1 %cmp, label %if.then, label %if.end7, !dbg !14060

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq %struct.redisObject** %o1, null, !dbg !14061
  br i1 %tobool.not, label %if.end, label %if.then2, !dbg !14064

if.then2:                                         ; preds = %if.then
  %1 = load %struct.redisObject*, %struct.redisObject** %o1, align 8, !dbg !14065, !tbaa !782
  %call = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %1) #22, !dbg !14066
  store %struct.redisObject* %call, %struct.redisObject** %o1, align 8, !dbg !14067, !tbaa !782
  br label %if.end, !dbg !14068

if.end:                                           ; preds = %if.then2, %if.then
  %tobool3.not = icmp eq %struct.redisObject** %o2, null, !dbg !14069
  br i1 %tobool3.not, label %if.end7, label %if.then4, !dbg !14071

if.then4:                                         ; preds = %if.end
  %2 = load %struct.redisObject*, %struct.redisObject** %o2, align 8, !dbg !14072, !tbaa !782
  %call5 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %2) #22, !dbg !14073
  store %struct.redisObject* %call5, %struct.redisObject** %o2, align 8, !dbg !14074, !tbaa !782
  br label %if.end7, !dbg !14075

if.end7:                                          ; preds = %if.end, %if.then4, %entry
  ret void, !dbg !14076
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @hashSet(%struct.redisObject* nocapture noundef %o, %struct.redisObject* noundef %key, %struct.redisObject* noundef %value) #0 !dbg !14077 {
entry:
  %update = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !14081, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !14082, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata %struct.redisObject* %value, metadata !14083, metadata !DIExpression()), !dbg !14085
  %0 = bitcast i32* %update to i8*, !dbg !14086
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !14086
  call void @llvm.dbg.value(metadata i32 0, metadata !14084, metadata !DIExpression()), !dbg !14085
  store i32 0, i32* %update, align 4, !dbg !14087, !tbaa !926
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !14088
  %1 = load i8, i8* %encoding, align 1, !dbg !14088, !tbaa !1529
  %cmp = icmp eq i8 %1, 2, !dbg !14090
  br i1 %cmp, label %if.then, label %if.else, !dbg !14091

if.then:                                          ; preds = %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %key) #22, !dbg !14092
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14082, metadata !DIExpression()), !dbg !14085
  %call2 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %value) #22, !dbg !14094
  call void @llvm.dbg.value(metadata %struct.redisObject* %call2, metadata !14083, metadata !DIExpression()), !dbg !14085
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !14095
  %2 = load i8*, i8** %ptr, align 8, !dbg !14095, !tbaa !1328
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !14096
  %3 = load i8*, i8** %ptr3, align 8, !dbg !14096, !tbaa !1328
  %call5 = tail call i64 @sdslen(i8* noundef %3) #23, !dbg !14097
  %conv6 = trunc i64 %call5 to i32, !dbg !14097
  %ptr7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call2, i64 0, i32 0, !dbg !14098
  %4 = load i8*, i8** %ptr7, align 8, !dbg !14098, !tbaa !1328
  %call9 = tail call i64 @sdslen(i8* noundef %4) #23, !dbg !14099
  %conv10 = trunc i64 %call9 to i32, !dbg !14099
  call void @llvm.dbg.value(metadata i32* %update, metadata !14084, metadata !DIExpression(DW_OP_deref)), !dbg !14085
  %call11 = call i8* @zipmapSet(i8* noundef %2, i8* noundef %3, i32 noundef %conv6, i8* noundef %4, i32 noundef %conv10, i32* noundef nonnull %update) #23, !dbg !14100
  store i8* %call11, i8** %ptr, align 8, !dbg !14101, !tbaa !1328
  %5 = bitcast %struct.redisObject* %call to i8*, !dbg !14102
  call void @decrRefCount(i8* noundef %5) #22, !dbg !14103
  %6 = bitcast %struct.redisObject* %call2 to i8*, !dbg !14104
  call void @decrRefCount(i8* noundef %6) #22, !dbg !14105
  %7 = load i8*, i8** %ptr, align 8, !dbg !14106, !tbaa !1328
  %call14 = call i32 @zipmapLen(i8* noundef %7) #23, !dbg !14108
  %conv15 = zext i32 %call14 to i64, !dbg !14108
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61), align 8, !dbg !14109, !tbaa !2245
  %cmp16 = icmp ult i64 %8, %conv15, !dbg !14110
  br i1 %cmp16, label %if.then18, label %if.end24, !dbg !14111

if.then18:                                        ; preds = %if.then
  call void @convertToRealHash(%struct.redisObject* noundef nonnull %o) #22, !dbg !14112
  br label %if.end24, !dbg !14112

if.else:                                          ; preds = %entry
  %9 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !14113
  %10 = load %struct.dict*, %struct.dict** %9, align 8, !dbg !14113, !tbaa !1328
  %11 = bitcast %struct.redisObject* %key to i8*, !dbg !14116
  %12 = bitcast %struct.redisObject* %value to i8*, !dbg !14117
  %call20 = tail call i32 @dictReplace(%struct.dict* noundef %10, i8* noundef %11, i8* noundef %12) #23, !dbg !14118
  %tobool.not = icmp eq i32 %call20, 0, !dbg !14118
  br i1 %tobool.not, label %if.else22, label %if.then21, !dbg !14119

if.then21:                                        ; preds = %if.else
  tail call void @incrRefCount(%struct.redisObject* noundef %key) #22, !dbg !14120
  br label %if.end23, !dbg !14122

if.else22:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 1, metadata !14084, metadata !DIExpression()), !dbg !14085
  store i32 1, i32* %update, align 4, !dbg !14123, !tbaa !926
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  tail call void @incrRefCount(%struct.redisObject* noundef %value) #22, !dbg !14125
  br label %if.end24

if.end24:                                         ; preds = %if.then, %if.then18, %if.end23
  %13 = load i32, i32* %update, align 4, !dbg !14126, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %13, metadata !14084, metadata !DIExpression()), !dbg !14085
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !14127
  ret i32 %13, !dbg !14128
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @hashExists(%struct.redisObject* nocapture noundef readonly %o, %struct.redisObject* noundef %key) #0 !dbg !14129 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !14131, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !14132, metadata !DIExpression()), !dbg !14133
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !14134
  %0 = load i8, i8* %encoding, align 1, !dbg !14134, !tbaa !1529
  %cmp = icmp eq i8 %0, 2, !dbg !14136
  br i1 %cmp, label %if.then, label %if.else, !dbg !14137

if.then:                                          ; preds = %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %key) #22, !dbg !14138
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14132, metadata !DIExpression()), !dbg !14133
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !14140
  %1 = load i8*, i8** %ptr, align 8, !dbg !14140, !tbaa !1328
  %ptr2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !14142
  %2 = load i8*, i8** %ptr2, align 8, !dbg !14142, !tbaa !1328
  %call4 = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !14143
  %conv5 = trunc i64 %call4 to i32, !dbg !14143
  %call6 = tail call i32 @zipmapExists(i8* noundef %1, i8* noundef %2, i32 noundef %conv5) #23, !dbg !14144
  %tobool.not = icmp eq i32 %call6, 0, !dbg !14144
  %3 = bitcast %struct.redisObject* %call to i8*, !dbg !14145
  tail call void @decrRefCount(i8* noundef %3) #22, !dbg !14145
  br i1 %tobool.not, label %if.end14, label %return, !dbg !14146

if.else:                                          ; preds = %entry
  %4 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !14147
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !14147, !tbaa !1328
  %6 = bitcast %struct.redisObject* %key to i8*, !dbg !14150
  %call9 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %5, i8* noundef %6) #23, !dbg !14151
  %cmp10.not = icmp eq %struct.dictEntry* %call9, null, !dbg !14152
  br i1 %cmp10.not, label %if.end14, label %return, !dbg !14153

if.end14:                                         ; preds = %if.then, %if.else
  br label %return, !dbg !14154

return:                                           ; preds = %if.then, %if.else, %if.end14
  %retval.0 = phi i32 [ 0, %if.end14 ], [ 1, %if.else ], [ 1, %if.then ], !dbg !14133
  ret i32 %retval.0, !dbg !14155
}

declare !dbg !14156 dso_local i32 @zipmapExists(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @hashGet(%struct.redisObject* nocapture noundef readonly %o, %struct.redisObject* noundef %key) #0 !dbg !14159 {
entry:
  %v = alloca i8*, align 8
  %vlen = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !14163, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !14164, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.redisObject* null, metadata !14165, metadata !DIExpression()), !dbg !14172
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !14173
  %0 = load i8, i8* %encoding, align 1, !dbg !14173, !tbaa !1529
  %cmp = icmp eq i8 %0, 2, !dbg !14174
  br i1 %cmp, label %if.then, label %if.else, !dbg !14175

if.then:                                          ; preds = %entry
  %1 = bitcast i8** %v to i8*, !dbg !14176
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !14176
  %2 = bitcast i32* %vlen to i8*, !dbg !14177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #24, !dbg !14177
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %key) #22, !dbg !14178
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14164, metadata !DIExpression()), !dbg !14172
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !14179
  %3 = load i8*, i8** %ptr, align 8, !dbg !14179, !tbaa !1328
  %ptr2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !14181
  %4 = load i8*, i8** %ptr2, align 8, !dbg !14181, !tbaa !1328
  %call4 = tail call i64 @sdslen(i8* noundef %4) #23, !dbg !14182
  %conv5 = trunc i64 %call4 to i32, !dbg !14182
  call void @llvm.dbg.value(metadata i8** %v, metadata !14166, metadata !DIExpression(DW_OP_deref)), !dbg !14183
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !14169, metadata !DIExpression(DW_OP_deref)), !dbg !14183
  %call6 = call i32 @zipmapGet(i8* noundef %3, i8* noundef %4, i32 noundef %conv5, i8** noundef nonnull %v, i32* noundef nonnull %vlen) #23, !dbg !14184
  %tobool.not = icmp eq i32 %call6, 0, !dbg !14184
  br i1 %tobool.not, label %if.end, label %if.then7, !dbg !14185

if.then7:                                         ; preds = %if.then
  %5 = load i8*, i8** %v, align 8, !dbg !14186, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %5, metadata !14166, metadata !DIExpression()), !dbg !14183
  %6 = load i32, i32* %vlen, align 4, !dbg !14188, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %6, metadata !14169, metadata !DIExpression()), !dbg !14183
  %conv8 = zext i32 %6 to i64, !dbg !14188
  %call9 = call %struct.redisObject* @createStringObject(i8* noundef %5, i64 noundef %conv8) #22, !dbg !14189
  call void @llvm.dbg.value(metadata %struct.redisObject* %call9, metadata !14165, metadata !DIExpression()), !dbg !14172
  br label %if.end, !dbg !14190

if.end:                                           ; preds = %if.then7, %if.then
  %value.0 = phi %struct.redisObject* [ %call9, %if.then7 ], [ null, %if.then ], !dbg !14172
  call void @llvm.dbg.value(metadata %struct.redisObject* %value.0, metadata !14165, metadata !DIExpression()), !dbg !14172
  %7 = bitcast %struct.redisObject* %call to i8*, !dbg !14191
  call void @decrRefCount(i8* noundef %7) #22, !dbg !14192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #24, !dbg !14193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !14193
  br label %if.end16, !dbg !14194

if.else:                                          ; preds = %entry
  %8 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !14195
  %9 = load %struct.dict*, %struct.dict** %8, align 8, !dbg !14195, !tbaa !1328
  %10 = bitcast %struct.redisObject* %key to i8*, !dbg !14196
  %call11 = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %9, i8* noundef %10) #23, !dbg !14197
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call11, metadata !14170, metadata !DIExpression()), !dbg !14198
  %cmp12.not = icmp eq %struct.dictEntry* %call11, null, !dbg !14199
  br i1 %cmp12.not, label %if.end16, label %if.then14, !dbg !14201

if.then14:                                        ; preds = %if.else
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call11, i64 0, i32 1, !dbg !14202
  %11 = bitcast i8** %val to %struct.redisObject**, !dbg !14202
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !14202, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %12, metadata !14165, metadata !DIExpression()), !dbg !14172
  tail call void @incrRefCount(%struct.redisObject* noundef %12) #22, !dbg !14204
  br label %if.end16, !dbg !14205

if.end16:                                         ; preds = %if.else, %if.then14, %if.end
  %value.2 = phi %struct.redisObject* [ %value.0, %if.end ], [ %12, %if.then14 ], [ null, %if.else ], !dbg !14206
  call void @llvm.dbg.value(metadata %struct.redisObject* %value.2, metadata !14165, metadata !DIExpression()), !dbg !14172
  ret %struct.redisObject* %value.2, !dbg !14207
}

declare !dbg !14208 dso_local i32 @zipmapGet(i8* noundef, i8* noundef, i32 noundef, i8** noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @hashDelete(%struct.redisObject* nocapture noundef %o, %struct.redisObject* noundef %key) #0 !dbg !14211 {
entry:
  %deleted = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !14213, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata %struct.redisObject* %key, metadata !14214, metadata !DIExpression()), !dbg !14216
  %0 = bitcast i32* %deleted to i8*, !dbg !14217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !14217
  call void @llvm.dbg.value(metadata i32 0, metadata !14215, metadata !DIExpression()), !dbg !14216
  store i32 0, i32* %deleted, align 4, !dbg !14218, !tbaa !926
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !14219
  %1 = load i8, i8* %encoding, align 1, !dbg !14219, !tbaa !1529
  %cmp = icmp eq i8 %1, 2, !dbg !14221
  br i1 %cmp, label %if.then, label %if.else, !dbg !14222

if.then:                                          ; preds = %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %key) #22, !dbg !14223
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14214, metadata !DIExpression()), !dbg !14216
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !14225
  %2 = load i8*, i8** %ptr, align 8, !dbg !14225, !tbaa !1328
  %ptr2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !14226
  %3 = load i8*, i8** %ptr2, align 8, !dbg !14226, !tbaa !1328
  %call4 = tail call i64 @sdslen(i8* noundef %3) #23, !dbg !14227
  %conv5 = trunc i64 %call4 to i32, !dbg !14227
  call void @llvm.dbg.value(metadata i32* %deleted, metadata !14215, metadata !DIExpression(DW_OP_deref)), !dbg !14216
  %call6 = call i8* @zipmapDel(i8* noundef %2, i8* noundef %3, i32 noundef %conv5, i32* noundef nonnull %deleted) #23, !dbg !14228
  store i8* %call6, i8** %ptr, align 8, !dbg !14229, !tbaa !1328
  %4 = bitcast %struct.redisObject* %call to i8*, !dbg !14230
  call void @decrRefCount(i8* noundef %4) #22, !dbg !14231
  %.pre = load i32, i32* %deleted, align 4, !dbg !14232, !tbaa !926
  br label %if.end18, !dbg !14233

if.else:                                          ; preds = %entry
  %5 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !14234
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !14234, !tbaa !1328
  %7 = bitcast %struct.redisObject* %key to i8*, !dbg !14236
  %call9 = tail call i32 @dictDelete(%struct.dict* noundef %6, i8* noundef %7) #23, !dbg !14237
  %cmp10 = icmp eq i32 %call9, 0, !dbg !14238
  call void @llvm.dbg.value(metadata i1 %cmp10, metadata !14215, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14216
  br i1 %cmp10, label %land.lhs.true, label %if.end18, !dbg !14239

land.lhs.true:                                    ; preds = %if.else
  %8 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !14241, !tbaa !1328
  %call13 = tail call i32 @htNeedsResize(%struct.dict* noundef %8) #22, !dbg !14242
  %tobool14.not = icmp eq i32 %call13, 0, !dbg !14242
  br i1 %tobool14.not, label %if.end18, label %if.then15, !dbg !14243

if.then15:                                        ; preds = %land.lhs.true
  %call17 = tail call i32 @dictResize(%struct.dict* noundef %8) #23, !dbg !14244
  br label %if.end18, !dbg !14244

if.end18:                                         ; preds = %if.else, %land.lhs.true, %if.then15, %if.then
  %9 = phi i32 [ 0, %if.else ], [ 1, %land.lhs.true ], [ 1, %if.then15 ], [ %.pre, %if.then ], !dbg !14232
  call void @llvm.dbg.value(metadata i32 %9, metadata !14215, metadata !DIExpression()), !dbg !14216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !14245
  ret i32 %9, !dbg !14246
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @hashLength(%struct.redisObject* nocapture noundef readonly %o) unnamed_addr #0 !dbg !14247 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !14251, metadata !DIExpression()), !dbg !14252
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !14253
  %0 = load i8, i8* %encoding, align 1, !dbg !14253, !tbaa !1529
  %cmp = icmp eq i8 %0, 2, !dbg !14254
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14255

cond.true:                                        ; preds = %entry
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !14256
  %1 = load i8*, i8** %ptr, align 8, !dbg !14256, !tbaa !1328
  %call = tail call i32 @zipmapLen(i8* noundef %1) #23, !dbg !14257
  %conv2 = zext i32 %call to i64, !dbg !14257
  br label %cond.end, !dbg !14255

cond.false:                                       ; preds = %entry
  %2 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !14258
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !14258, !tbaa !1328
  %used = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 0, i32 3, !dbg !14258
  %4 = load i64, i64* %used, align 8, !dbg !14258, !tbaa !3545
  %used7 = getelementptr inbounds %struct.dict, %struct.dict* %3, i64 0, i32 2, i64 1, i32 3, !dbg !14258
  %5 = load i64, i64* %used7, align 8, !dbg !14258, !tbaa !3545
  %add = add i64 %5, %4, !dbg !14258
  br label %cond.end, !dbg !14255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv2, %cond.true ], [ %add, %cond.false ], !dbg !14255
  ret i64 %cond, !dbg !14259
}

declare !dbg !14260 dso_local i8* @zipmapDel(i8* noundef, i8* noundef, i32 noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @genericHgetallCommand(%struct.redisClient* noundef %c, i32 noundef %flags) #0 !dbg !14263 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !14265, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i32 %flags, metadata !14266, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i64 0, metadata !14270, metadata !DIExpression()), !dbg !14284
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !14285
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14285, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !14287
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !14287, !tbaa !782
  %2 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !14288, !tbaa !9109
  %call = tail call %struct.redisObject* @lookupKeyReadOrReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %1, %struct.redisObject* noundef %2) #22, !dbg !14289
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14267, metadata !DIExpression()), !dbg !14284
  %cmp = icmp eq %struct.redisObject* %call, null, !dbg !14290
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !14291

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @checkType(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef nonnull %call, i32 noundef 4) #22, !dbg !14292
  %tobool.not = icmp eq i32 %call1, 0, !dbg !14292
  br i1 %tobool.not, label %if.end, label %cleanup, !dbg !14293

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !14294
  call void @llvm.dbg.value(metadata %struct.redisObject* %call2, metadata !14268, metadata !DIExpression()), !dbg !14284
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %call2) #22, !dbg !14295
  %3 = bitcast %struct.redisObject* %call2 to i8*, !dbg !14296
  tail call void @decrRefCount(i8* noundef %3) #22, !dbg !14297
  %call3 = tail call %struct.hashIterator* @hashInitIterator(%struct.redisObject* noundef nonnull %call) #22, !dbg !14298
  call void @llvm.dbg.value(metadata %struct.hashIterator* %call3, metadata !14271, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.value(metadata i64 0, metadata !14270, metadata !DIExpression()), !dbg !14284
  %call444 = tail call i32 @hashNext(%struct.hashIterator* noundef %call3) #22, !dbg !14299
  %cmp5.not45 = icmp eq i32 %call444, -1, !dbg !14300
  br i1 %cmp5.not45, label %while.end, label %while.body.lr.ph, !dbg !14301

while.body.lr.ph:                                 ; preds = %if.end
  %and = and i32 %flags, 1
  %tobool6.not = icmp eq i32 %and, 0
  %and10 = and i32 %flags, 2
  %tobool11.not = icmp eq i32 %and10, 0
  br label %while.body, !dbg !14301

while.body:                                       ; preds = %while.body.lr.ph, %if.end15
  %count.046 = phi i64 [ 0, %while.body.lr.ph ], [ %count.2, %if.end15 ]
  call void @llvm.dbg.value(metadata i64 %count.046, metadata !14270, metadata !DIExpression()), !dbg !14284
  br i1 %tobool6.not, label %if.end9, label %if.then7, !dbg !14302

if.then7:                                         ; preds = %while.body
  %call8 = tail call %struct.redisObject* @hashCurrent(%struct.hashIterator* noundef %call3, i32 noundef 1) #22, !dbg !14304
  call void @llvm.dbg.value(metadata %struct.redisObject* %call8, metadata !14269, metadata !DIExpression()), !dbg !14284
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call8) #22, !dbg !14307
  %4 = bitcast %struct.redisObject* %call8 to i8*, !dbg !14308
  tail call void @decrRefCount(i8* noundef %4) #22, !dbg !14309
  %inc = add i64 %count.046, 1, !dbg !14310
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14270, metadata !DIExpression()), !dbg !14284
  br label %if.end9, !dbg !14311

if.end9:                                          ; preds = %if.then7, %while.body
  %count.1 = phi i64 [ %inc, %if.then7 ], [ %count.046, %while.body ], !dbg !14284
  call void @llvm.dbg.value(metadata i64 %count.1, metadata !14270, metadata !DIExpression()), !dbg !14284
  br i1 %tobool11.not, label %if.end15, label %if.then12, !dbg !14312

if.then12:                                        ; preds = %if.end9
  %call13 = tail call %struct.redisObject* @hashCurrent(%struct.hashIterator* noundef %call3, i32 noundef 2) #22, !dbg !14313
  call void @llvm.dbg.value(metadata %struct.redisObject* %call13, metadata !14269, metadata !DIExpression()), !dbg !14284
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call13) #22, !dbg !14316
  %5 = bitcast %struct.redisObject* %call13 to i8*, !dbg !14317
  tail call void @decrRefCount(i8* noundef %5) #22, !dbg !14318
  %inc14 = add i64 %count.1, 1, !dbg !14319
  call void @llvm.dbg.value(metadata i64 %inc14, metadata !14270, metadata !DIExpression()), !dbg !14284
  br label %if.end15, !dbg !14320

if.end15:                                         ; preds = %if.then12, %if.end9
  %count.2 = phi i64 [ %inc14, %if.then12 ], [ %count.1, %if.end9 ], !dbg !14321
  call void @llvm.dbg.value(metadata i64 %count.2, metadata !14270, metadata !DIExpression()), !dbg !14284
  %call4 = tail call i32 @hashNext(%struct.hashIterator* noundef %call3) #22, !dbg !14299
  %cmp5.not = icmp eq i32 %call4, -1, !dbg !14300
  br i1 %cmp5.not, label %while.end, label %while.body, !dbg !14301, !llvm.loop !14322

while.end:                                        ; preds = %if.end15, %if.end
  %count.0.lcssa = phi i64 [ 0, %if.end ], [ %count.2, %if.end15 ], !dbg !14284
  tail call void @hashReleaseIterator(%struct.hashIterator* noundef %call3) #22, !dbg !14324
  %call16 = tail call i8* (...) @sdsempty() #23, !dbg !14325
  %call17 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call16, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i64 0, i64 0), i64 noundef %count.0.lcssa) #23, !dbg !14326
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call2, i64 0, i32 0, !dbg !14327
  store i8* %call17, i8** %ptr, align 8, !dbg !14328, !tbaa !1328
  br label %cleanup, !dbg !14329

cleanup:                                          ; preds = %entry, %lor.lhs.false, %while.end
  ret void, !dbg !14329
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.hashIterator* @hashInitIterator(%struct.redisObject* nocapture noundef readonly %subject) #0 !dbg !14330 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %subject, metadata !14334, metadata !DIExpression()), !dbg !14336
  %call = tail call i8* @zmalloc(i64 noundef 56) #23, !dbg !14337
  call void @llvm.dbg.value(metadata i8* %call, metadata !14335, metadata !DIExpression()), !dbg !14336
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %subject, i64 0, i32 2, !dbg !14338
  %0 = load i8, i8* %encoding, align 1, !dbg !14338, !tbaa !1529
  %conv = zext i8 %0 to i32, !dbg !14339
  %encoding1 = bitcast i8* %call to i32*, !dbg !14340
  store i32 %conv, i32* %encoding1, align 8, !dbg !14341, !tbaa !14342
  switch i8 %0, label %cond.false [
    i8 2, label %if.then
    i8 3, label %if.then8
  ], !dbg !14344

if.then:                                          ; preds = %entry
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %subject, i64 0, i32 0, !dbg !14345
  %1 = load i8*, i8** %ptr, align 8, !dbg !14345, !tbaa !1328
  %call4 = tail call i8* @zipmapRewind(i8* noundef %1) #23, !dbg !14348
  %zi = getelementptr inbounds i8, i8* %call, i64 8, !dbg !14349
  %2 = bitcast i8* %zi to i8**, !dbg !14349
  store i8* %call4, i8** %2, align 8, !dbg !14350, !tbaa !14351
  br label %if.end12, !dbg !14352

if.then8:                                         ; preds = %entry
  %3 = bitcast %struct.redisObject* %subject to %struct.dict**, !dbg !14353
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !14353, !tbaa !1328
  %call10 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %4) #23, !dbg !14356
  %di = getelementptr inbounds i8, i8* %call, i64 40, !dbg !14357
  %5 = bitcast i8* %di to %struct.dictIterator**, !dbg !14357
  store %struct.dictIterator* %call10, %struct.dictIterator** %5, align 8, !dbg !14358, !tbaa !14359
  br label %if.end12

cond.false:                                       ; preds = %entry
  tail call void @_redisAssert(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 6541) #22, !dbg !14360
  tail call void @_exit(i32 noundef 1) #26, !dbg !14360
  unreachable, !dbg !14360

if.end12:                                         ; preds = %if.then8, %if.then
  %6 = bitcast i8* %call to %struct.hashIterator*, !dbg !14337
  call void @llvm.dbg.value(metadata %struct.hashIterator* %6, metadata !14335, metadata !DIExpression()), !dbg !14336
  ret %struct.hashIterator* %6, !dbg !14362
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @hashNext(%struct.hashIterator* noundef %hi) #0 !dbg !14363 {
entry:
  call void @llvm.dbg.value(metadata %struct.hashIterator* %hi, metadata !14367, metadata !DIExpression()), !dbg !14368
  %encoding = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 0, !dbg !14369
  %0 = load i32, i32* %encoding, align 8, !dbg !14369, !tbaa !14342
  %cmp = icmp eq i32 %0, 2, !dbg !14371
  br i1 %cmp, label %if.then, label %if.else, !dbg !14372

if.then:                                          ; preds = %entry
  %zi = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 1, !dbg !14373
  %1 = load i8*, i8** %zi, align 8, !dbg !14373, !tbaa !14351
  %zk = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 2, !dbg !14376
  %zklen = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 4, !dbg !14377
  %zv = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 3, !dbg !14378
  %zvlen = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 5, !dbg !14379
  %call = tail call i8* @zipmapNext(i8* noundef %1, i8** noundef nonnull %zk, i32* noundef nonnull %zklen, i8** noundef nonnull %zv, i32* noundef nonnull %zvlen) #23, !dbg !14380
  store i8* %call, i8** %zi, align 8, !dbg !14381, !tbaa !14351
  %cmp2 = icmp eq i8* %call, null, !dbg !14382
  br i1 %cmp2, label %return, label %if.end8, !dbg !14383

if.else:                                          ; preds = %entry
  %di = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 6, !dbg !14384
  %2 = load %struct.dictIterator*, %struct.dictIterator** %di, align 8, !dbg !14384, !tbaa !14359
  %call4 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %2) #23, !dbg !14387
  %de = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 7, !dbg !14388
  store %struct.dictEntry* %call4, %struct.dictEntry** %de, align 8, !dbg !14389, !tbaa !14390
  %cmp5 = icmp eq %struct.dictEntry* %call4, null, !dbg !14391
  br i1 %cmp5, label %return, label %if.end8, !dbg !14392

if.end8:                                          ; preds = %if.else, %if.then
  br label %return, !dbg !14393

return:                                           ; preds = %if.else, %if.then, %if.end8
  %retval.0 = phi i32 [ 0, %if.end8 ], [ -1, %if.then ], [ -1, %if.else ], !dbg !14368
  ret i32 %retval.0, !dbg !14394
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @hashCurrent(%struct.hashIterator* nocapture noundef readonly %hi, i32 noundef %what) #0 !dbg !14395 {
entry:
  call void @llvm.dbg.value(metadata %struct.hashIterator* %hi, metadata !14399, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 %what, metadata !14400, metadata !DIExpression()), !dbg !14402
  %encoding = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 0, !dbg !14403
  %0 = load i32, i32* %encoding, align 8, !dbg !14403, !tbaa !14342
  %cmp = icmp eq i32 %0, 2, !dbg !14405
  %and = and i32 %what, 1, !dbg !14406
  %tobool.not = icmp eq i32 %and, 0, !dbg !14406
  br i1 %cmp, label %if.then, label %if.else4, !dbg !14407

if.then:                                          ; preds = %entry
  br i1 %tobool.not, label %if.else, label %if.then1, !dbg !14408

if.then1:                                         ; preds = %if.then
  %zk = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 2, !dbg !14410
  %1 = load i8*, i8** %zk, align 8, !dbg !14410, !tbaa !14413
  %zklen = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 4, !dbg !14414
  %2 = load i32, i32* %zklen, align 8, !dbg !14414, !tbaa !14415
  %conv = zext i32 %2 to i64, !dbg !14416
  %call = tail call %struct.redisObject* @createStringObject(i8* noundef %1, i64 noundef %conv) #22, !dbg !14417
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !14401, metadata !DIExpression()), !dbg !14402
  br label %if.end11, !dbg !14418

if.else:                                          ; preds = %if.then
  %zv = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 3, !dbg !14419
  %3 = load i8*, i8** %zv, align 8, !dbg !14419, !tbaa !14421
  %zvlen = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 5, !dbg !14422
  %4 = load i32, i32* %zvlen, align 4, !dbg !14422, !tbaa !14423
  %conv2 = zext i32 %4 to i64, !dbg !14424
  %call3 = tail call %struct.redisObject* @createStringObject(i8* noundef %3, i64 noundef %conv2) #22, !dbg !14425
  call void @llvm.dbg.value(metadata %struct.redisObject* %call3, metadata !14401, metadata !DIExpression()), !dbg !14402
  br label %if.end11

if.else4:                                         ; preds = %entry
  %de9 = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 7, !dbg !14426
  br i1 %tobool.not, label %if.else8, label %if.then7, !dbg !14429

if.then7:                                         ; preds = %if.else4
  %5 = bitcast %struct.dictEntry** %de9 to %struct.redisObject***, !dbg !14430
  %6 = load %struct.redisObject**, %struct.redisObject*** %5, align 8, !dbg !14430, !tbaa !14390
  call void @llvm.dbg.value(metadata %struct.redisObject* undef, metadata !14401, metadata !DIExpression()), !dbg !14402
  br label %if.end10, !dbg !14432

if.else8:                                         ; preds = %if.else4
  %7 = load %struct.dictEntry*, %struct.dictEntry** %de9, align 8, !dbg !14433, !tbaa !14390
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 1, !dbg !14433
  %8 = bitcast i8** %val to %struct.redisObject**, !dbg !14433
  call void @llvm.dbg.value(metadata %struct.redisObject* undef, metadata !14401, metadata !DIExpression()), !dbg !14402
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then7
  %o.0.in = phi %struct.redisObject** [ %6, %if.then7 ], [ %8, %if.else8 ]
  %o.0 = load %struct.redisObject*, %struct.redisObject** %o.0.in, align 8, !dbg !14426, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !14401, metadata !DIExpression()), !dbg !14402
  tail call void @incrRefCount(%struct.redisObject* noundef %o.0) #22, !dbg !14435
  br label %if.end11

if.end11:                                         ; preds = %if.then1, %if.else, %if.end10
  %o.1 = phi %struct.redisObject* [ %call, %if.then1 ], [ %call3, %if.else ], [ %o.0, %if.end10 ], !dbg !14406
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.1, metadata !14401, metadata !DIExpression()), !dbg !14402
  ret %struct.redisObject* %o.1, !dbg !14436
}

; Function Attrs: noinline nounwind uwtable
define internal void @hashReleaseIterator(%struct.hashIterator* noundef %hi) #0 !dbg !14437 {
entry:
  call void @llvm.dbg.value(metadata %struct.hashIterator* %hi, metadata !14441, metadata !DIExpression()), !dbg !14442
  %encoding = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 0, !dbg !14443
  %0 = load i32, i32* %encoding, align 8, !dbg !14443, !tbaa !14342
  %cmp = icmp eq i32 %0, 3, !dbg !14445
  br i1 %cmp, label %if.then, label %if.end, !dbg !14446

if.then:                                          ; preds = %entry
  %di = getelementptr inbounds %struct.hashIterator, %struct.hashIterator* %hi, i64 0, i32 6, !dbg !14447
  %1 = load %struct.dictIterator*, %struct.dictIterator** %di, align 8, !dbg !14447, !tbaa !14359
  tail call void @dictReleaseIterator(%struct.dictIterator* noundef %1) #23, !dbg !14449
  br label %if.end, !dbg !14450

if.end:                                           ; preds = %if.then, %entry
  %2 = bitcast %struct.hashIterator* %hi to i8*, !dbg !14451
  tail call void @zfree(i8* noundef %2) #23, !dbg !14452
  ret void, !dbg !14453
}

; Function Attrs: noinline nounwind uwtable
define internal void @msetGenericCommand(%struct.redisClient* noundef %c, i32 noundef %nx) #0 !dbg !14454 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !14456, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 %nx, metadata !14457, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 0, metadata !14459, metadata !DIExpression()), !dbg !14464
  %argc = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 6, !dbg !14465
  %0 = load i32, i32* %argc, align 8, !dbg !14465, !tbaa !1350
  %1 = and i32 %0, 1, !dbg !14467
  %cmp = icmp eq i32 %1, 0, !dbg !14467
  br i1 %cmp, label %if.then, label %if.end, !dbg !14468

if.then:                                          ; preds = %entry
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.292, i64 0, i64 0)) #23, !dbg !14469
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call) #22, !dbg !14471
  br label %cleanup, !dbg !14472

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i32 %nx, 0, !dbg !14473
  br i1 %tobool.not, label %for.cond12.preheader, label %for.cond.preheader, !dbg !14475

for.cond.preheader:                               ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 1, metadata !14458, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 0, metadata !14459, metadata !DIExpression()), !dbg !14464
  %cmp3110 = icmp sgt i32 %0, 1, !dbg !14476
  br i1 %cmp3110, label %for.body.lr.ph, label %for.end65, !dbg !14480

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  br label %for.body, !dbg !14480

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %busykeys.0111 = phi i32 [ 0, %for.body.lr.ph ], [ %spec.select, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !14458, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32 %busykeys.0111, metadata !14459, metadata !DIExpression()), !dbg !14464
  %2 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !14481, !tbaa !2890
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14484, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 %indvars.iv, !dbg !14485
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !14485, !tbaa !782
  %call4 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* noundef %2, %struct.redisObject* noundef %4) #22, !dbg !14486
  %cmp5.not = icmp ne %struct.redisObject* %call4, null, !dbg !14487
  %inc = zext i1 %cmp5.not to i32, !dbg !14488
  %spec.select = add nuw nsw i32 %busykeys.0111, %inc, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !14459, metadata !DIExpression()), !dbg !14464
  %indvars.iv.next = add nuw i64 %indvars.iv, 2, !dbg !14489
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !14458, metadata !DIExpression()), !dbg !14464
  %5 = load i32, i32* %argc, align 8, !dbg !14490, !tbaa !1350
  %6 = trunc i64 %indvars.iv.next to i32, !dbg !14476
  %cmp3 = icmp sgt i32 %5, %6, !dbg !14476
  br i1 %cmp3, label %for.body, label %if.end8, !dbg !14480, !llvm.loop !14491

if.end8:                                          ; preds = %for.body
  %phi.cmp = icmp eq i32 %spec.select, 0, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14459, metadata !DIExpression()), !dbg !14464
  br i1 %phi.cmp, label %for.cond12.preheader, label %if.then10, !dbg !14495

for.cond12.preheader:                             ; preds = %if.end, %if.end8
  %7 = phi i32 [ %5, %if.end8 ], [ %0, %if.end ]
  call void @llvm.dbg.value(metadata i32 1, metadata !14458, metadata !DIExpression()), !dbg !14464
  %cmp14113 = icmp sgt i32 %7, 1, !dbg !14496
  br i1 %cmp14113, label %for.body15.lr.ph, label %for.end65, !dbg !14497

for.body15.lr.ph:                                 ; preds = %for.cond12.preheader
  %argv16 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4
  %db25 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1
  br label %for.body15, !dbg !14497

if.then10:                                        ; preds = %if.end8
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !14498, !tbaa !4181
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %8) #22, !dbg !14500
  br label %cleanup, !dbg !14501

for.body15:                                       ; preds = %for.body15.lr.ph, %if.end57
  %indvars.iv118 = phi i64 [ 1, %for.body15.lr.ph ], [ %indvars.iv.next119, %if.end57 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !14458, metadata !DIExpression()), !dbg !14464
  %9 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14502, !tbaa !1352
  %10 = add nuw nsw i64 %indvars.iv118, 1, !dbg !14503
  %arrayidx19 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 %10, !dbg !14504
  %11 = load %struct.redisObject*, %struct.redisObject** %arrayidx19, align 8, !dbg !14504, !tbaa !782
  %call20 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* noundef %11) #22, !dbg !14505
  %12 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14506, !tbaa !1352
  %arrayidx24 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 %10, !dbg !14507
  store %struct.redisObject* %call20, %struct.redisObject** %arrayidx24, align 8, !dbg !14508, !tbaa !782
  %13 = load %struct.redisDb*, %struct.redisDb** %db25, align 8, !dbg !14509, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %13, i64 0, i32 0, !dbg !14510
  %14 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !14510, !tbaa !2353
  %15 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14511, !tbaa !1352
  %arrayidx28 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %indvars.iv118, !dbg !14512
  %16 = bitcast %struct.redisObject** %arrayidx28 to i8**, !dbg !14512
  %17 = load i8*, i8** %16, align 8, !dbg !14512, !tbaa !782
  %arrayidx32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %10, !dbg !14513
  %18 = bitcast %struct.redisObject** %arrayidx32 to i8**, !dbg !14513
  %19 = load i8*, i8** %18, align 8, !dbg !14513, !tbaa !782
  %call33 = tail call i32 @dictAdd(%struct.dict* noundef %14, i8* noundef %17, i8* noundef %19) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %call33, metadata !14460, metadata !DIExpression()), !dbg !14515
  %cmp34 = icmp eq i32 %call33, 1, !dbg !14516
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !14518

if.then35:                                        ; preds = %for.body15
  %20 = load %struct.redisDb*, %struct.redisDb** %db25, align 8, !dbg !14519, !tbaa !2890
  %dict37 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %20, i64 0, i32 0, !dbg !14521
  %21 = load %struct.dict*, %struct.dict** %dict37, align 8, !dbg !14521, !tbaa !2353
  %22 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14522, !tbaa !1352
  %arrayidx40 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 %indvars.iv118, !dbg !14523
  %23 = bitcast %struct.redisObject** %arrayidx40 to i8**, !dbg !14523
  %24 = load i8*, i8** %23, align 8, !dbg !14523, !tbaa !782
  %arrayidx44 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 %10, !dbg !14524
  %25 = bitcast %struct.redisObject** %arrayidx44 to i8**, !dbg !14524
  %26 = load i8*, i8** %25, align 8, !dbg !14524, !tbaa !782
  %call45 = tail call i32 @dictReplace(%struct.dict* noundef %21, i8* noundef %24, i8* noundef %26) #23, !dbg !14525
  br label %if.end57, !dbg !14526

if.else:                                          ; preds = %for.body15
  %27 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14527, !tbaa !1352
  %arrayidx52 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 %indvars.iv118, !dbg !14529
  %28 = load %struct.redisObject*, %struct.redisObject** %arrayidx52, align 8, !dbg !14529, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %28) #22, !dbg !14530
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then35
  %29 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14531, !tbaa !1352
  %arrayidx56 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %29, i64 %10, !dbg !14531
  %30 = load %struct.redisObject*, %struct.redisObject** %arrayidx56, align 8, !dbg !14531, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %30) #22, !dbg !14531
  %31 = load %struct.redisDb*, %struct.redisDb** %db25, align 8, !dbg !14532, !tbaa !2890
  %32 = load %struct.redisObject**, %struct.redisObject*** %argv16, align 8, !dbg !14533, !tbaa !1352
  %arrayidx61 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %32, i64 %indvars.iv118, !dbg !14534
  %33 = load %struct.redisObject*, %struct.redisObject** %arrayidx61, align 8, !dbg !14534, !tbaa !782
  %call62 = tail call i32 @removeExpire(%struct.redisDb* noundef %31, %struct.redisObject* noundef %33) #22, !dbg !14535
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 2, !dbg !14536
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next119, metadata !14458, metadata !DIExpression()), !dbg !14464
  %34 = load i32, i32* %argc, align 8, !dbg !14537, !tbaa !1350
  %35 = trunc i64 %indvars.iv.next119 to i32, !dbg !14496
  %cmp14 = icmp sgt i32 %34, %35, !dbg !14496
  br i1 %cmp14, label %for.body15, label %for.end65, !dbg !14497, !llvm.loop !14538

for.end65:                                        ; preds = %if.end57, %for.cond.preheader, %for.cond12.preheader
  %.lcssa = phi i32 [ %7, %for.cond12.preheader ], [ %0, %for.cond.preheader ], [ %34, %if.end57 ], !dbg !14537
  %sub = add nsw i32 %.lcssa, -1, !dbg !14540
  %div = sdiv i32 %sub, 2, !dbg !14541
  %conv = sext i32 %div to i64, !dbg !14542
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !14543, !tbaa !708
  %add67 = add nsw i64 %36, %conv, !dbg !14543
  store i64 %add67, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !14543, !tbaa !708
  %37 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !14544
  %38 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !14544
  %cond = select i1 %tobool.not, %struct.redisObject* %38, %struct.redisObject* %37, !dbg !14544
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond) #22, !dbg !14545
  br label %cleanup, !dbg !14546

cleanup:                                          ; preds = %for.end65, %if.then10, %if.then
  ret void, !dbg !14546
}

; Function Attrs: noinline nounwind uwtable
define internal void @renameGenericCommand(%struct.redisClient* noundef %c, i32 noundef %nx) #0 !dbg !14547 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !14549, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %nx, metadata !14550, metadata !DIExpression()), !dbg !14552
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !14553
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14553, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 1, !dbg !14555
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !14555, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !14556
  %2 = load i8*, i8** %ptr, align 8, !dbg !14556, !tbaa !1328
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !14557
  %3 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !14557, !tbaa !782
  %ptr3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %3, i64 0, i32 0, !dbg !14558
  %4 = load i8*, i8** %ptr3, align 8, !dbg !14558, !tbaa !1328
  %call = tail call i32 @sdscmp(i8* noundef %2, i8* noundef %4) #23, !dbg !14559
  %cmp = icmp eq i32 %call, 0, !dbg !14560
  br i1 %cmp, label %if.then, label %if.end, !dbg !14561

if.then:                                          ; preds = %entry
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !14562, !tbaa !14564
  br label %cleanup.sink.split, !dbg !14565

if.end:                                           ; preds = %entry
  %6 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14566, !tbaa !1352
  %arrayidx5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %6, i64 1, !dbg !14568
  %7 = load %struct.redisObject*, %struct.redisObject** %arrayidx5, align 8, !dbg !14568, !tbaa !782
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !14569, !tbaa !9059
  %call6 = tail call %struct.redisObject* @lookupKeyWriteOrReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %7, %struct.redisObject* noundef %8) #22, !dbg !14570
  call void @llvm.dbg.value(metadata %struct.redisObject* %call6, metadata !14551, metadata !DIExpression()), !dbg !14552
  %cmp7 = icmp eq %struct.redisObject* %call6, null, !dbg !14571
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !14572

if.end9:                                          ; preds = %if.end
  tail call void @incrRefCount(%struct.redisObject* noundef nonnull %call6) #22, !dbg !14573
  %db = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 1, !dbg !14574
  %9 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !14574, !tbaa !2890
  %10 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14575, !tbaa !1352
  %arrayidx11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 2, !dbg !14576
  %11 = load %struct.redisObject*, %struct.redisObject** %arrayidx11, align 8, !dbg !14576, !tbaa !782
  %call12 = tail call i32 @deleteIfVolatile(%struct.redisDb* noundef %9, %struct.redisObject* noundef %11) #22, !dbg !14577
  %12 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !14578, !tbaa !2890
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %12, i64 0, i32 0, !dbg !14580
  %13 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !14580, !tbaa !2353
  %14 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14581, !tbaa !1352
  %arrayidx15 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 2, !dbg !14582
  %15 = bitcast %struct.redisObject** %arrayidx15 to i8**, !dbg !14582
  %16 = load i8*, i8** %15, align 8, !dbg !14582, !tbaa !782
  %17 = bitcast %struct.redisObject* %call6 to i8*, !dbg !14583
  %call16 = tail call i32 @dictAdd(%struct.dict* noundef %13, i8* noundef %16, i8* noundef nonnull %17) #23, !dbg !14584
  %cmp17 = icmp eq i32 %call16, 1, !dbg !14585
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !14586

if.then18:                                        ; preds = %if.end9
  %tobool.not = icmp eq i32 %nx, 0, !dbg !14587
  br i1 %tobool.not, label %if.end20, label %if.then19, !dbg !14590

if.then19:                                        ; preds = %if.then18
  tail call void @decrRefCount(i8* noundef nonnull %17) #22, !dbg !14591
  %18 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !14593, !tbaa !4181
  br label %cleanup.sink.split, !dbg !14594

if.end20:                                         ; preds = %if.then18
  %19 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !14595, !tbaa !2890
  %dict22 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %19, i64 0, i32 0, !dbg !14596
  %20 = load %struct.dict*, %struct.dict** %dict22, align 8, !dbg !14596, !tbaa !2353
  %21 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14597, !tbaa !1352
  %arrayidx24 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %21, i64 2, !dbg !14598
  %22 = bitcast %struct.redisObject** %arrayidx24 to i8**, !dbg !14598
  %23 = load i8*, i8** %22, align 8, !dbg !14598, !tbaa !782
  %call25 = tail call i32 @dictReplace(%struct.dict* noundef %20, i8* noundef %23, i8* noundef nonnull %17) #23, !dbg !14599
  br label %if.end28, !dbg !14600

if.else:                                          ; preds = %if.end9
  %24 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14601, !tbaa !1352
  %arrayidx27 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %24, i64 2, !dbg !14603
  %25 = load %struct.redisObject*, %struct.redisObject** %arrayidx27, align 8, !dbg !14603, !tbaa !782
  tail call void @incrRefCount(%struct.redisObject* noundef %25) #22, !dbg !14604
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end20
  %26 = load %struct.redisDb*, %struct.redisDb** %db, align 8, !dbg !14605, !tbaa !2890
  %27 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !14606, !tbaa !1352
  %arrayidx31 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 1, !dbg !14607
  %28 = load %struct.redisObject*, %struct.redisObject** %arrayidx31, align 8, !dbg !14607, !tbaa !782
  %call32 = tail call i32 @deleteKey(%struct.redisDb* noundef %26, %struct.redisObject* noundef %28) #22, !dbg !14608
  %29 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !14609, !tbaa !708
  %inc = add nsw i64 %29, 1, !dbg !14609
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !14609, !tbaa !708
  %tobool33.not = icmp eq i32 %nx, 0, !dbg !14610
  %30 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !14610
  %31 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !14610
  %cond = select i1 %tobool33.not, %struct.redisObject* %31, %struct.redisObject* %30, !dbg !14610
  br label %cleanup.sink.split, !dbg !14611

cleanup.sink.split:                               ; preds = %if.then, %if.then19, %if.end28
  %cond.sink = phi %struct.redisObject* [ %cond, %if.end28 ], [ %18, %if.then19 ], [ %5, %if.then ]
  tail call void @addReply(%struct.redisClient* noundef nonnull %c, %struct.redisObject* noundef %cond.sink) #22, !dbg !14552
  br label %cleanup, !dbg !14611

cleanup:                                          ; preds = %cleanup.sink.split, %if.end
  ret void, !dbg !14611
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stringmatchlen(i8* nocapture noundef readonly %pattern, i32 noundef %patternLen, i8* nocapture noundef readonly %string, i32 noundef %stringLen, i32 noundef %nocase) #0 !dbg !14612 {
entry:
  call void @llvm.dbg.value(metadata i8* %pattern, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i8* %string, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen, metadata !14619, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %nocase, metadata !14620, metadata !DIExpression()), !dbg !14696
  %tobool142.not = icmp eq i32 %nocase, 0
  br label %while.cond, !dbg !14697

while.cond:                                       ; preds = %sw.epilog, %entry
  %stringLen.addr.0 = phi i32 [ %stringLen, %entry ], [ %stringLen.addr.3, %sw.epilog ]
  %string.addr.0 = phi i8* [ %string, %entry ], [ %string.addr.3, %sw.epilog ]
  %patternLen.addr.0 = phi i32 [ %patternLen, %entry ], [ %dec301, %sw.epilog ]
  %pattern.addr.0 = phi i8* [ %pattern, %entry ], [ %incdec.ptr300, %sw.epilog ]
  call void @llvm.dbg.value(metadata i8* %pattern.addr.0, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.0, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i8* %string.addr.0, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen.addr.0, metadata !14619, metadata !DIExpression()), !dbg !14696
  %tobool.not = icmp eq i32 %patternLen.addr.0, 0, !dbg !14697
  br i1 %tobool.not, label %while.end314, label %while.body, !dbg !14697

while.body:                                       ; preds = %while.cond
  %0 = load i8, i8* %pattern.addr.0, align 1, !dbg !14698, !tbaa !795
  %conv = sext i8 %0 to i32, !dbg !14698
  switch i32 %conv, label %sw.default [
    i32 42, label %while.cond1
    i32 63, label %sw.bb17
    i32 91, label %sw.bb24
    i32 92, label %sw.bb225
  ], !dbg !14699

while.cond1:                                      ; preds = %while.body, %while.cond1
  %patternLen.addr.1 = phi i32 [ %dec, %while.cond1 ], [ %patternLen.addr.0, %while.body ]
  %pattern.addr.1 = phi i8* [ %arrayidx2, %while.cond1 ], [ %pattern.addr.0, %while.body ]
  call void @llvm.dbg.value(metadata i8* %pattern.addr.1, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.1, metadata !14617, metadata !DIExpression()), !dbg !14696
  %arrayidx2 = getelementptr inbounds i8, i8* %pattern.addr.1, i64 1, !dbg !14700
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !14700, !tbaa !795
  %cmp = icmp eq i8 %1, 42, !dbg !14701
  call void @llvm.dbg.value(metadata i8* %arrayidx2, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec = add nsw i32 %patternLen.addr.1, -1, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %dec, metadata !14617, metadata !DIExpression()), !dbg !14696
  br i1 %cmp, label %while.cond1, label %while.end, !dbg !14704, !llvm.loop !14705

while.end:                                        ; preds = %while.cond1
  %cmp6 = icmp eq i32 %patternLen.addr.1, 1, !dbg !14707
  br i1 %cmp6, label %return, label %while.cond8.preheader, !dbg !14709

while.cond8.preheader:                            ; preds = %while.end
  call void @llvm.dbg.value(metadata i8* %string.addr.0, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen.addr.0, metadata !14619, metadata !DIExpression()), !dbg !14696
  %tobool9.not481 = icmp eq i32 %stringLen.addr.0, 0, !dbg !14710
  br i1 %tobool9.not481, label %return, label %while.body10, !dbg !14710

while.body10:                                     ; preds = %while.cond8.preheader, %if.end13
  %string.addr.1483 = phi i8* [ %incdec.ptr14, %if.end13 ], [ %string.addr.0, %while.cond8.preheader ]
  %stringLen.addr.1482 = phi i32 [ %dec15, %if.end13 ], [ %stringLen.addr.0, %while.cond8.preheader ]
  call void @llvm.dbg.value(metadata i8* %string.addr.1483, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen.addr.1482, metadata !14619, metadata !DIExpression()), !dbg !14696
  %call = tail call i32 @stringmatchlen(i8* noundef nonnull %arrayidx2, i32 noundef %dec, i8* noundef %string.addr.1483, i32 noundef %stringLen.addr.1482, i32 noundef %nocase) #22, !dbg !14711
  %tobool11.not = icmp eq i32 %call, 0, !dbg !14711
  br i1 %tobool11.not, label %if.end13, label %return, !dbg !14714

if.end13:                                         ; preds = %while.body10
  %incdec.ptr14 = getelementptr inbounds i8, i8* %string.addr.1483, i64 1, !dbg !14715
  call void @llvm.dbg.value(metadata i8* %incdec.ptr14, metadata !14618, metadata !DIExpression()), !dbg !14696
  %dec15 = add nsw i32 %stringLen.addr.1482, -1, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %dec15, metadata !14619, metadata !DIExpression()), !dbg !14696
  %tobool9.not = icmp eq i32 %dec15, 0, !dbg !14710
  br i1 %tobool9.not, label %return, label %while.body10, !dbg !14710, !llvm.loop !14717

sw.bb17:                                          ; preds = %while.body
  %cmp18 = icmp eq i32 %stringLen.addr.0, 0, !dbg !14719
  br i1 %cmp18, label %return, label %sw.epilog, !dbg !14721

sw.bb24:                                          ; preds = %while.body
  %incdec.ptr25 = getelementptr inbounds i8, i8* %pattern.addr.0, i64 1, !dbg !14722
  call void @llvm.dbg.value(metadata i8* %incdec.ptr25, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.0, metadata !14617, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14696
  %2 = load i8, i8* %incdec.ptr25, align 1, !dbg !14723, !tbaa !795
  %cmp29 = icmp eq i8 %2, 94, !dbg !14724
  call void @llvm.dbg.value(metadata i1 %cmp29, metadata !14621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14725
  %incdec.ptr33 = getelementptr inbounds i8, i8* %pattern.addr.0, i64 2, !dbg !14726
  %patternLen.addr.2.v = select i1 %cmp29, i32 -2, i32 -1, !dbg !14726
  %patternLen.addr.2 = add nsw i32 %patternLen.addr.2.v, %patternLen.addr.0, !dbg !14726
  %pattern.addr.2 = select i1 %cmp29, i8* %incdec.ptr33, i8* %incdec.ptr25, !dbg !14726
  call void @llvm.dbg.value(metadata i8* %pattern.addr.2, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.2, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14625, metadata !DIExpression()), !dbg !14725
  br label %while.cond36, !dbg !14727

while.cond36:                                     ; preds = %if.end211, %sw.bb24
  %match.0 = phi i32 [ 0, %sw.bb24 ], [ %match.2, %if.end211 ], !dbg !14725
  %patternLen.addr.3 = phi i32 [ %patternLen.addr.2, %sw.bb24 ], [ %dec213, %if.end211 ], !dbg !14725
  %pattern.addr.3 = phi i8* [ %pattern.addr.2, %sw.bb24 ], [ %incdec.ptr212, %if.end211 ], !dbg !14725
  call void @llvm.dbg.value(metadata i8* %pattern.addr.3, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.3, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %match.0, metadata !14625, metadata !DIExpression()), !dbg !14725
  %3 = load i8, i8* %pattern.addr.3, align 1, !dbg !14728, !tbaa !795
  %conv39 = sext i8 %3 to i32, !dbg !14728
  switch i8 %3, label %if.else58 [
    i8 92, label %if.then42
    i8 93, label %while.end214
  ], !dbg !14729

if.then42:                                        ; preds = %while.cond36
  %incdec.ptr43 = getelementptr inbounds i8, i8* %pattern.addr.3, i64 1, !dbg !14730
  call void @llvm.dbg.value(metadata i8* %incdec.ptr43, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec44 = add nsw i32 %patternLen.addr.3, -1, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %dec44, metadata !14617, metadata !DIExpression()), !dbg !14696
  %4 = load i8, i8* %incdec.ptr43, align 1, !dbg !14733, !tbaa !795
  %5 = load i8, i8* %string.addr.0, align 1, !dbg !14735, !tbaa !795
  %cmp49 = icmp eq i8 %4, %5, !dbg !14736
  %spec.select = select i1 %cmp49, i32 1, i32 %match.0, !dbg !14737
  br label %if.end211, !dbg !14737

if.else58:                                        ; preds = %while.cond36
  %cmp59 = icmp eq i32 %patternLen.addr.3, 0, !dbg !14738
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !14739

if.then61:                                        ; preds = %if.else58
  %incdec.ptr62 = getelementptr inbounds i8, i8* %pattern.addr.3, i64 -1, !dbg !14740
  call void @llvm.dbg.value(metadata i8* %incdec.ptr62, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 1, metadata !14617, metadata !DIExpression()), !dbg !14696
  br label %while.end214, !dbg !14742

if.else63:                                        ; preds = %if.else58
  %arrayidx64 = getelementptr inbounds i8, i8* %pattern.addr.3, i64 1, !dbg !14743
  %6 = load i8, i8* %arrayidx64, align 1, !dbg !14743, !tbaa !795
  %cmp66 = icmp eq i8 %6, 45, !dbg !14744
  %cmp68 = icmp sgt i32 %patternLen.addr.3, 2
  %or.cond = select i1 %cmp66, i1 %cmp68, i1 false, !dbg !14745
  br i1 %or.cond, label %if.then70, label %if.else141, !dbg !14745

if.then70:                                        ; preds = %if.else63
  call void @llvm.dbg.value(metadata i32 %conv39, metadata !14626, metadata !DIExpression()), !dbg !14746
  %arrayidx73 = getelementptr inbounds i8, i8* %pattern.addr.3, i64 2, !dbg !14747
  %7 = load i8, i8* %arrayidx73, align 1, !dbg !14747, !tbaa !795
  call void @llvm.dbg.value(metadata i8 %7, metadata !14633, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14746
  %8 = load i8, i8* %string.addr.0, align 1, !dbg !14748, !tbaa !795
  %conv76 = sext i8 %8 to i32, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %conv76, metadata !14634, metadata !DIExpression()), !dbg !14746
  %9 = icmp sgt i8 %3, %7, !dbg !14749
  %spec.select456461 = select i1 %9, i8 %3, i8 %7, !dbg !14749
  %10 = sext i8 %spec.select456461 to i32, !dbg !14749
  %11 = icmp slt i8 %3, %7, !dbg !14749
  %spec.select457462 = select i1 %11, i8 %3, i8 %7, !dbg !14749
  %12 = sext i8 %spec.select457462 to i32, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %12, metadata !14626, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata i32 %10, metadata !14633, metadata !DIExpression()), !dbg !14746
  br i1 %tobool142.not, label %if.end131, label %if.else90, !dbg !14750

if.else90:                                        ; preds = %if.then70
  %call91 = tail call i32 @tolower(i32 noundef %12) #23, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %call91, metadata !14638, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 %call91, metadata !14638, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 %call91, metadata !14626, metadata !DIExpression()), !dbg !14746
  %call109 = tail call i32 @tolower(i32 noundef %10) #23, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %call109, metadata !14647, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %call109, metadata !14647, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %call109, metadata !14633, metadata !DIExpression()), !dbg !14746
  %call128 = tail call i32 @tolower(i32 noundef %conv76) #23, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %call128, metadata !14654, metadata !DIExpression()), !dbg !14756
  br label %if.end131

if.end131:                                        ; preds = %if.else90, %if.then70
  %c.0 = phi i32 [ %conv76, %if.then70 ], [ %call128, %if.else90 ], !dbg !14746
  %end.1 = phi i32 [ %10, %if.then70 ], [ %call109, %if.else90 ], !dbg !14746
  %start.1 = phi i32 [ %12, %if.then70 ], [ %call91, %if.else90 ], !dbg !14746
  call void @llvm.dbg.value(metadata i32 %start.1, metadata !14626, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata i32 %end.1, metadata !14633, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata i32 %c.0, metadata !14634, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata i8* %arrayidx73, metadata !14616, metadata !DIExpression()), !dbg !14696
  %sub133 = add nsw i32 %patternLen.addr.3, -2, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %sub133, metadata !14617, metadata !DIExpression()), !dbg !14696
  %cmp134.not = icmp slt i32 %c.0, %start.1, !dbg !14758
  %cmp137.not = icmp sgt i32 %c.0, %end.1
  %or.cond458 = select i1 %cmp134.not, i1 true, i1 %cmp137.not, !dbg !14760
  %match.1 = select i1 %or.cond458, i32 %match.0, i32 1, !dbg !14760
  call void @llvm.dbg.value(metadata i32 %match.1, metadata !14625, metadata !DIExpression()), !dbg !14725
  br label %if.end211, !dbg !14761

if.else141:                                       ; preds = %if.else63
  br i1 %tobool142.not, label %if.then143, label %if.else172, !dbg !14762

if.then143:                                       ; preds = %if.else141
  %13 = load i8, i8* %string.addr.0, align 1, !dbg !14763, !tbaa !795
  %cmp148 = icmp eq i8 %3, %13, !dbg !14766
  %spec.select459 = select i1 %cmp148, i32 1, i32 %match.0, !dbg !14767
  br label %if.end211, !dbg !14767

if.else172:                                       ; preds = %if.else141
  %call175 = tail call i32 @tolower(i32 noundef %conv39) #23, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %call175, metadata !14661, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i32 %call175, metadata !14661, metadata !DIExpression()), !dbg !14769
  %14 = load i8, i8* %string.addr.0, align 1, !dbg !14770, !tbaa !795
  %conv180 = sext i8 %14 to i32, !dbg !14770
  %call200 = tail call i32 @tolower(i32 noundef %conv180) #23, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %call200, metadata !14672, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 %call200, metadata !14672, metadata !DIExpression()), !dbg !14771
  %cmp203 = icmp eq i32 %call175, %call200, !dbg !14772
  %spec.select460 = select i1 %cmp203, i32 1, i32 %match.0, !dbg !14773
  br label %if.end211, !dbg !14773

if.end211:                                        ; preds = %if.else172, %if.then143, %if.then42, %if.end131
  %match.2 = phi i32 [ %match.1, %if.end131 ], [ %spec.select, %if.then42 ], [ %spec.select459, %if.then143 ], [ %spec.select460, %if.else172 ], !dbg !14725
  %patternLen.addr.4 = phi i32 [ %sub133, %if.end131 ], [ %dec44, %if.then42 ], [ %patternLen.addr.3, %if.then143 ], [ %patternLen.addr.3, %if.else172 ], !dbg !14725
  %pattern.addr.4 = phi i8* [ %arrayidx73, %if.end131 ], [ %incdec.ptr43, %if.then42 ], [ %pattern.addr.3, %if.then143 ], [ %pattern.addr.3, %if.else172 ], !dbg !14725
  call void @llvm.dbg.value(metadata i8* %pattern.addr.4, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.4, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %match.2, metadata !14625, metadata !DIExpression()), !dbg !14725
  %incdec.ptr212 = getelementptr inbounds i8, i8* %pattern.addr.4, i64 1, !dbg !14774
  call void @llvm.dbg.value(metadata i8* %incdec.ptr212, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec213 = add nsw i32 %patternLen.addr.4, -1, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %dec213, metadata !14617, metadata !DIExpression()), !dbg !14696
  br label %while.cond36, !dbg !14727, !llvm.loop !14776

while.end214:                                     ; preds = %while.cond36, %if.then61
  %patternLen.addr.5 = phi i32 [ 1, %if.then61 ], [ %patternLen.addr.3, %while.cond36 ], !dbg !14725
  %pattern.addr.5 = phi i8* [ %incdec.ptr62, %if.then61 ], [ %pattern.addr.3, %while.cond36 ], !dbg !14725
  call void @llvm.dbg.value(metadata i8* %pattern.addr.5, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.5, metadata !14617, metadata !DIExpression()), !dbg !14696
  %tobool217.not = icmp eq i32 %match.0, 0, !dbg !14778
  %lnot.ext = zext i1 %tobool217.not to i32, !dbg !14778
  %match.3 = select i1 %cmp29, i32 %lnot.ext, i32 %match.0, !dbg !14778
  call void @llvm.dbg.value(metadata i32 %match.3, metadata !14625, metadata !DIExpression()), !dbg !14725
  %tobool219.not = icmp eq i32 %match.3, 0, !dbg !14779
  call void @llvm.dbg.value(metadata i8* undef, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14619, metadata !DIExpression()), !dbg !14696
  br i1 %tobool219.not, label %return, label %sw.epilog

sw.bb225:                                         ; preds = %while.body
  %cmp226 = icmp sgt i32 %patternLen.addr.0, 1, !dbg !14781
  br i1 %cmp226, label %if.then228, label %sw.default, !dbg !14783

if.then228:                                       ; preds = %sw.bb225
  %incdec.ptr229 = getelementptr inbounds i8, i8* %pattern.addr.0, i64 1, !dbg !14784
  call void @llvm.dbg.value(metadata i8* %incdec.ptr229, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec230 = add nsw i32 %patternLen.addr.0, -1, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %dec230, metadata !14617, metadata !DIExpression()), !dbg !14696
  br label %sw.default, !dbg !14787

sw.default:                                       ; preds = %sw.bb225, %if.then228, %while.body
  %patternLen.addr.6 = phi i32 [ %patternLen.addr.0, %while.body ], [ %dec230, %if.then228 ], [ %patternLen.addr.0, %sw.bb225 ]
  %pattern.addr.6 = phi i8* [ %pattern.addr.0, %while.body ], [ %incdec.ptr229, %if.then228 ], [ %pattern.addr.0, %sw.bb225 ]
  call void @llvm.dbg.value(metadata i8* %pattern.addr.6, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.6, metadata !14617, metadata !DIExpression()), !dbg !14696
  %15 = load i8, i8* %pattern.addr.6, align 1, !dbg !14788, !tbaa !795
  br i1 %tobool142.not, label %if.then233, label %if.else262, !dbg !14789

if.then233:                                       ; preds = %sw.default
  %16 = load i8, i8* %string.addr.0, align 1, !dbg !14790, !tbaa !795
  %cmp238.not = icmp eq i8 %15, %16, !dbg !14793
  br i1 %cmp238.not, label %sw.epilog, label %return, !dbg !14794

if.else262:                                       ; preds = %sw.default
  %conv245 = sext i8 %15 to i32, !dbg !14795
  %call265 = tail call i32 @tolower(i32 noundef %conv245) #23, !dbg !14795
  call void @llvm.dbg.value(metadata i32 %call265, metadata !14679, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.value(metadata i32 %call265, metadata !14679, metadata !DIExpression()), !dbg !14796
  %17 = load i8, i8* %string.addr.0, align 1, !dbg !14797, !tbaa !795
  %conv270 = sext i8 %17 to i32, !dbg !14797
  %call290 = tail call i32 @tolower(i32 noundef %conv270) #23, !dbg !14797
  call void @llvm.dbg.value(metadata i32 %call290, metadata !14689, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i32 %call290, metadata !14689, metadata !DIExpression()), !dbg !14798
  %cmp293.not = icmp eq i32 %call265, %call290, !dbg !14799
  br i1 %cmp293.not, label %sw.epilog, label %return, !dbg !14800

sw.epilog:                                        ; preds = %if.then233, %if.else262, %sw.bb17, %while.end214
  %patternLen.addr.7 = phi i32 [ %patternLen.addr.5, %while.end214 ], [ %patternLen.addr.0, %sw.bb17 ], [ %patternLen.addr.6, %if.else262 ], [ %patternLen.addr.6, %if.then233 ]
  %pattern.addr.7 = phi i8* [ %pattern.addr.5, %while.end214 ], [ %pattern.addr.0, %sw.bb17 ], [ %pattern.addr.6, %if.else262 ], [ %pattern.addr.6, %if.then233 ]
  %string.addr.3 = getelementptr inbounds i8, i8* %string.addr.0, i64 1, !dbg !14801
  %stringLen.addr.3 = add nsw i32 %stringLen.addr.0, -1, !dbg !14801
  call void @llvm.dbg.value(metadata i8* %pattern.addr.7, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.7, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i8* %string.addr.3, metadata !14618, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen.addr.3, metadata !14619, metadata !DIExpression()), !dbg !14696
  %incdec.ptr300 = getelementptr inbounds i8, i8* %pattern.addr.7, i64 1, !dbg !14802
  call void @llvm.dbg.value(metadata i8* %incdec.ptr300, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec301 = add nsw i32 %patternLen.addr.7, -1, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %dec301, metadata !14617, metadata !DIExpression()), !dbg !14696
  %cmp302 = icmp eq i32 %stringLen.addr.3, 0, !dbg !14804
  br i1 %cmp302, label %while.cond305.preheader, label %while.cond, !dbg !14806, !llvm.loop !14807

while.cond305.preheader:                          ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i8* %incdec.ptr300, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %dec301, metadata !14617, metadata !DIExpression()), !dbg !14696
  %18 = load i8, i8* %incdec.ptr300, align 1, !dbg !14809, !tbaa !795
  %cmp307485 = icmp eq i8 %18, 42, !dbg !14811
  br i1 %cmp307485, label %while.body309, label %while.end314, !dbg !14812

while.body309:                                    ; preds = %while.cond305.preheader, %while.body309
  %pattern.addr.8487 = phi i8* [ %incdec.ptr310, %while.body309 ], [ %incdec.ptr300, %while.cond305.preheader ]
  %patternLen.addr.8486 = phi i32 [ %dec311, %while.body309 ], [ %dec301, %while.cond305.preheader ]
  call void @llvm.dbg.value(metadata i8* %pattern.addr.8487, metadata !14616, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.8486, metadata !14617, metadata !DIExpression()), !dbg !14696
  %incdec.ptr310 = getelementptr inbounds i8, i8* %pattern.addr.8487, i64 1, !dbg !14813
  call void @llvm.dbg.value(metadata i8* %incdec.ptr310, metadata !14616, metadata !DIExpression()), !dbg !14696
  %dec311 = add nsw i32 %patternLen.addr.8486, -1, !dbg !14815
  call void @llvm.dbg.value(metadata i32 %dec311, metadata !14617, metadata !DIExpression()), !dbg !14696
  %19 = load i8, i8* %incdec.ptr310, align 1, !dbg !14809, !tbaa !795
  %cmp307 = icmp eq i8 %19, 42, !dbg !14811
  br i1 %cmp307, label %while.body309, label %while.end314, !dbg !14812, !llvm.loop !14816

while.end314:                                     ; preds = %while.cond, %while.body309, %while.cond305.preheader
  %stringLen.addr.4 = phi i32 [ 0, %while.cond305.preheader ], [ 0, %while.body309 ], [ %stringLen.addr.0, %while.cond ]
  %patternLen.addr.9 = phi i32 [ %dec301, %while.cond305.preheader ], [ %dec311, %while.body309 ], [ 0, %while.cond ]
  call void @llvm.dbg.value(metadata i32 %patternLen.addr.9, metadata !14617, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %stringLen.addr.4, metadata !14619, metadata !DIExpression()), !dbg !14696
  %cmp315 = icmp eq i32 %patternLen.addr.9, 0, !dbg !14818
  %cmp318 = icmp eq i32 %stringLen.addr.4, 0
  %or.cond329 = select i1 %cmp315, i1 %cmp318, i1 false, !dbg !14820
  %. = zext i1 %or.cond329 to i32, !dbg !14696
  br label %return, !dbg !14696

return:                                           ; preds = %while.end214, %if.else262, %if.then233, %sw.bb17, %while.body10, %if.end13, %while.cond8.preheader, %while.end314, %while.end
  %retval.3 = phi i32 [ 1, %while.end ], [ %., %while.end314 ], [ 0, %while.cond8.preheader ], [ 1, %while.body10 ], [ 0, %if.end13 ], [ 0, %sw.bb17 ], [ 0, %if.then233 ], [ 0, %if.else262 ], [ 0, %while.end214 ]
  ret i32 %retval.3, !dbg !14821
}

; Function Attrs: noinline nounwind uwtable
declare dso_local i32 @tolower(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind uwtable
define internal i32 @rewriteAppendOnlyFileBackground() #0 !dbg !14822 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !14828, !tbaa !996
  %cmp.not = icmp eq i32 %0, -1, !dbg !14830
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !14831

if.end:                                           ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !14832, !tbaa !1384
  %tobool.not = icmp eq i32 %1, 0, !dbg !14834
  br i1 %tobool.not, label %if.end2, label %if.then1, !dbg !14835

if.then1:                                         ; preds = %if.end
  tail call void @waitEmptyIOJobsQueue() #22, !dbg !14836
  br label %if.end2, !dbg !14836

if.end2:                                          ; preds = %if.then1, %if.end
  %call = tail call i32 @fork() #23, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %call, metadata !14824, metadata !DIExpression()), !dbg !14838
  switch i32 %call, label %if.end20 [
    i32 0, label %if.then4
    i32 -1, label %if.then17
  ], !dbg !14839

if.then4:                                         ; preds = %if.end2
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !14840
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2) #24, !dbg !14840
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !14825, metadata !DIExpression()), !dbg !14841
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !14842, !tbaa !1384
  %tobool5.not = icmp eq i32 %3, 0, !dbg !14844
  br i1 %tobool5.not, label %if.end7, label %if.then6, !dbg !14845

if.then6:                                         ; preds = %if.then4
  tail call void @vmReopenSwapFile() #22, !dbg !14846
  br label %if.end7, !dbg !14846

if.end7:                                          ; preds = %if.then6, %if.then4
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 4, !dbg !14847, !tbaa !2851
  %call8 = tail call i32 @close(i32 noundef %4) #23, !dbg !14848
  %call9 = tail call i32 @getpid() #23, !dbg !14849
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %2, i64 noundef 256, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 noundef %call9) #23, !dbg !14850
  %call12 = call i32 @rewriteAppendOnlyFile(i8* noundef nonnull %2) #22, !dbg !14851
  %cmp13 = icmp eq i32 %call12, 0, !dbg !14853
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !14854

if.then14:                                        ; preds = %if.end7
  call void @_exit(i32 noundef 0) #26, !dbg !14855
  unreachable, !dbg !14855

if.else:                                          ; preds = %if.end7
  call void @_exit(i32 noundef 1) #26, !dbg !14857
  unreachable, !dbg !14857

if.then17:                                        ; preds = %if.end2
  %call18 = tail call i32* @__errno_location() #25, !dbg !14859
  %5 = load i32, i32* %call18, align 4, !dbg !14859, !tbaa !926
  %call19 = tail call i8* @strerror(i32 noundef %5) #23, !dbg !14863
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.299, i64 0, i64 0), i8* noundef %call19) #22, !dbg !14864
  br label %cleanup, !dbg !14865

if.end20:                                         ; preds = %if.end2
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.300, i64 0, i64 0), i32 noundef %call) #22, !dbg !14866
  store i32 %call, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !14867, !tbaa !996
  tail call void @updateDictResizePolicy() #22, !dbg !14868
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !14869, !tbaa !1050
  br label %cleanup, !dbg !14870

cleanup:                                          ; preds = %entry, %if.end20, %if.then17
  %retval.0 = phi i32 [ -1, %if.then17 ], [ 0, %if.end20 ], [ -1, %entry ], !dbg !14838
  ret i32 %retval.0, !dbg !14871
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rewriteAppendOnlyFile(i8* noundef %filename) #0 !dbg !14872 {
entry:
  %tmpfile = alloca [256 x i8], align 16
  %selectcmd = alloca [17 x i8], align 16
  %cmd = alloca [14 x i8], align 1
  %li = alloca %struct.listIter, align 8
  %cmd75 = alloca [16 x i8], align 16
  %cmd116 = alloca [15 x i8], align 1
  %cmd161 = alloca [15 x i8], align 1
  %cmd203 = alloca [15 x i8], align 1
  %field = alloca i8*, align 8
  %val210 = alloca i8*, align 8
  %flen = alloca i32, align 4
  %vlen = alloca i32, align 4
  %cmd304 = alloca [19 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %filename, metadata !14874, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !14875, metadata !DIExpression()), !dbg !14953
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !14954
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #24, !dbg !14954
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !14878, metadata !DIExpression()), !dbg !14955
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !14956
  call void @llvm.dbg.value(metadata i64 %call, metadata !14880, metadata !DIExpression()), !dbg !14953
  %call1 = tail call i32 @getpid() #23, !dbg !14957
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 256, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.301, i64 0, i64 0), i32 noundef %call1) #23, !dbg !14958
  %call4 = call %struct._IO_FILE* @fopen64(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i64 0, i64 0)) #23, !dbg !14959
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call4, metadata !14877, metadata !DIExpression()), !dbg !14953
  %tobool.not = icmp eq %struct._IO_FILE* %call4, null, !dbg !14960
  br i1 %tobool.not, label %if.then, label %for.cond.preheader, !dbg !14962

for.cond.preheader:                               ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.dictIterator* poison, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata i32 0, metadata !14879, metadata !DIExpression()), !dbg !14953
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !14963, !tbaa !2013
  %cmp587 = icmp sgt i32 %1, 0, !dbg !14964
  br i1 %cmp587, label %for.body.lr.ph, label %for.end, !dbg !14965

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %2 = getelementptr inbounds [17 x i8], [17 x i8]* %selectcmd, i64 0, i64 0
  %3 = getelementptr inbounds [15 x i8], [15 x i8]* %cmd203, i64 0, i64 0
  %4 = bitcast i8** %field to i8*
  %5 = bitcast i8** %val210 to i8*
  %6 = bitcast i32* %flen to i8*
  %7 = bitcast i32* %vlen to i8*
  %8 = getelementptr inbounds [15 x i8], [15 x i8]* %cmd161, i64 0, i64 0
  %9 = getelementptr inbounds [15 x i8], [15 x i8]* %cmd116, i64 0, i64 0
  %10 = bitcast %struct.listIter* %li to i8*
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %cmd75, i64 0, i64 0
  %12 = getelementptr inbounds [14 x i8], [14 x i8]* %cmd, i64 0, i64 0
  %13 = getelementptr inbounds [19 x i8], [19 x i8]* %cmd304, i64 0, i64 0
  br label %for.body, !dbg !14965

if.then:                                          ; preds = %entry
  %call5 = tail call i32* @__errno_location() #25, !dbg !14966
  %14 = load i32, i32* %call5, align 4, !dbg !14966, !tbaa !926
  %call6 = call i8* @strerror(i32 noundef %14) #23, !dbg !14968
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.302, i64 0, i64 0), i8* noundef %call6) #22, !dbg !14969
  br label %cleanup366, !dbg !14970

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !14879, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14971
  call void @llvm.dbg.declare(metadata [17 x i8]* %selectcmd, metadata !14881, metadata !DIExpression()), !dbg !14972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(17) %2, i8* noundef nonnull align 16 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const.rewriteAppendOnlyFile.selectcmd, i64 0, i64 0), i64 17, i1 false), !dbg !14972
  %15 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !14973, !tbaa !2351
  %add.ptr = getelementptr inbounds %struct.redisDb, %struct.redisDb* %15, i64 %indvars.iv, !dbg !14974
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr, metadata !14888, metadata !DIExpression()), !dbg !14975
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %add.ptr, i64 0, i32 0, !dbg !14976
  %16 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !14976, !tbaa !2353
  call void @llvm.dbg.value(metadata %struct.dict* %16, metadata !14889, metadata !DIExpression()), !dbg !14975
  %used = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 3, !dbg !14977
  %17 = load i64, i64* %used, align 8, !dbg !14977, !tbaa !3545
  %used9 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 3, !dbg !14977
  %18 = load i64, i64* %used9, align 8, !dbg !14977, !tbaa !3545
  %add = sub i64 0, %18, !dbg !14979
  %cmp10 = icmp eq i64 %17, %add, !dbg !14979
  br i1 %cmp10, label %cleanup339.thread550, label %if.end12, !dbg !14980

if.end12:                                         ; preds = %for.body
  %call13 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %16) #23, !dbg !14981
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call13, metadata !14875, metadata !DIExpression()), !dbg !14953
  %tobool14.not = icmp eq %struct.dictIterator* %call13, null, !dbg !14982
  br i1 %tobool14.not, label %cleanup339.thread554, label %if.end17, !dbg !14984

cleanup339.thread554:                             ; preds = %if.end12
  %call16 = call i32 @fclose(%struct._IO_FILE* noundef %call4) #23, !dbg !14985
  call void @llvm.dbg.value(metadata %struct.dictIterator* undef, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14987
  br label %cleanup366

if.end17:                                         ; preds = %if.end12
  %call19 = call i64 @fwrite(i8* noundef nonnull %2, i64 noundef 16, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !14988
  %cmp20 = icmp eq i64 %call19, 0, !dbg !14990
  br i1 %cmp20, label %cleanup339.thread, label %if.end22, !dbg !14991

if.end22:                                         ; preds = %if.end17
  %call23 = call i32 @fwriteBulkLong(%struct._IO_FILE* noundef %call4, i64 noundef %indvars.iv) #22, !dbg !14992
  %cmp24 = icmp eq i32 %call23, 0, !dbg !14994
  br i1 %cmp24, label %cleanup339.thread, label %while.cond.preheader, !dbg !14995

while.cond.preheader:                             ; preds = %if.end22
  %call28584 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef nonnull %call13) #23, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call28584, metadata !14876, metadata !DIExpression()), !dbg !14953
  %cmp29.not585 = icmp eq %struct.dictEntry* %call28584, null, !dbg !14997
  br i1 %cmp29.not585, label %while.end338, label %while.body, !dbg !14998

while.body:                                       ; preds = %while.cond.preheader, %while.cond.backedge
  %call28586 = phi %struct.dictEntry* [ %call28, %while.cond.backedge ], [ %call28584, %while.cond.preheader ]
  %19 = bitcast %struct.dictEntry* %call28586 to %struct.redisObject**, !dbg !14999
  %20 = load %struct.redisObject*, %struct.redisObject** %19, align 8, !dbg !14999, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %20, metadata !14890, metadata !DIExpression()), !dbg !15000
  %21 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15001, !tbaa !1384
  %tobool32.not = icmp eq i32 %21, 0, !dbg !15003
  br i1 %tobool32.not, label %if.then41, label %lor.lhs.false, !dbg !15004

lor.lhs.false:                                    ; preds = %while.body
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %20, i64 0, i32 3, !dbg !15005
  %22 = load i8, i8* %storage, align 2, !dbg !15005, !tbaa !1547
  switch i8 %22, label %if.else [
    i8 0, label %if.then41
    i8 2, label %if.then41
  ], !dbg !15006

if.then41:                                        ; preds = %lor.lhs.false, %lor.lhs.false, %while.body
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call28586, i64 0, i32 1, !dbg !15007
  %23 = bitcast i8** %val to %struct.redisObject**, !dbg !15007
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !15007, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %24, metadata !14892, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 0, metadata !14894, metadata !DIExpression()), !dbg !15000
  br label %if.end43, !dbg !15009

if.else:                                          ; preds = %lor.lhs.false
  %call42 = call %struct.redisObject* @vmPreviewObject(%struct.redisObject* noundef nonnull %20) #22, !dbg !15010
  call void @llvm.dbg.value(metadata %struct.redisObject* %call42, metadata !14892, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 1, metadata !14894, metadata !DIExpression()), !dbg !15000
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then41
  %tobool329.not = phi i1 [ false, %if.else ], [ true, %if.then41 ], !dbg !15012
  %o.0 = phi %struct.redisObject* [ %call42, %if.else ], [ %24, %if.then41 ], !dbg !15012
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !14892, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14894, metadata !DIExpression()), !dbg !15000
  %call44 = call i64 @getExpire(%struct.redisDb* noundef %add.ptr, %struct.redisObject* noundef %20) #22, !dbg !15013
  call void @llvm.dbg.value(metadata i64 %call44, metadata !14893, metadata !DIExpression()), !dbg !15000
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o.0, i64 0, i32 1, !dbg !15014
  %25 = load i8, i8* %type, align 8, !dbg !15014, !tbaa !1526
  switch i8 %25, label %if.else295 [
    i8 0, label %if.then48
    i8 1, label %if.then70
    i8 2, label %if.then106
    i8 3, label %if.then150
    i8 4, label %if.then202
  ], !dbg !15015

if.then48:                                        ; preds = %if.end43
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %12) #24, !dbg !15016
  call void @llvm.dbg.declare(metadata [14 x i8]* %cmd, metadata !14895, metadata !DIExpression()), !dbg !15017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(14) %12, i8* noundef nonnull align 1 dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @__const.rewriteAppendOnlyFile.cmd, i64 0, i64 0), i64 14, i1 false), !dbg !15017
  %call50 = call i64 @fwrite(i8* noundef nonnull %12, i64 noundef 13, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15018
  %cmp51 = icmp eq i64 %call50, 0, !dbg !15020
  br i1 %cmp51, label %cleanup.thread, label %if.end54, !dbg !15021

if.end54:                                         ; preds = %if.then48
  %call55 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15022
  %cmp56 = icmp eq i32 %call55, 0, !dbg !15024
  br i1 %cmp56, label %cleanup.thread, label %cleanup, !dbg !15025

cleanup.thread:                                   ; preds = %if.then48, %if.end54
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %12) #24, !dbg !15026
  br label %cleanup339.thread

cleanup:                                          ; preds = %if.end54
  %call60 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef nonnull %o.0) #22, !dbg !15027
  %cmp61 = icmp eq i32 %call60, 0, !dbg !15029
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %12) #24, !dbg !15026
  br i1 %cmp61, label %cleanup332, label %if.end300

if.then70:                                        ; preds = %if.end43
  %26 = bitcast %struct.redisObject* %o.0 to %struct.list**, !dbg !15030
  %27 = load %struct.list*, %struct.list** %26, align 8, !dbg !15030, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %27, metadata !14901, metadata !DIExpression()), !dbg !15031
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !15032
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !14905, metadata !DIExpression()), !dbg !15033
  call void @listRewind(%struct.list* noundef %27, %struct.listIter* noundef nonnull %li) #23, !dbg !15034
  br label %while.cond71, !dbg !15035

while.cond71:                                     ; preds = %cleanup92, %if.then70
  %call72 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.listNode* %call72, metadata !14904, metadata !DIExpression()), !dbg !15031
  %tobool73.not = icmp eq %struct.listNode* %call72, null, !dbg !15035
  br i1 %tobool73.not, label %cleanup96.thread, label %while.body74, !dbg !15035

cleanup96.thread:                                 ; preds = %while.cond71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !15037
  br label %if.end300

while.body74:                                     ; preds = %while.cond71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #24, !dbg !15038
  call void @llvm.dbg.declare(metadata [16 x i8]* %cmd75, metadata !14906, metadata !DIExpression()), !dbg !15039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %11, i8* noundef nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.rewriteAppendOnlyFile.cmd.303, i64 0, i64 0), i64 16, i1 false), !dbg !15039
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call72, i64 0, i32 2, !dbg !15040
  %28 = bitcast i8** %value to %struct.redisObject**, !dbg !15040
  %29 = load %struct.redisObject*, %struct.redisObject** %28, align 8, !dbg !15040, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %29, metadata !14909, metadata !DIExpression()), !dbg !15041
  %call77 = call i64 @fwrite(i8* noundef nonnull %11, i64 noundef 15, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15042
  %cmp78 = icmp eq i64 %call77, 0, !dbg !15044
  br i1 %cmp78, label %cleanup96.thread512, label %if.end81, !dbg !15045

if.end81:                                         ; preds = %while.body74
  %call82 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15046
  %cmp83 = icmp eq i32 %call82, 0, !dbg !15048
  br i1 %cmp83, label %cleanup96.thread512, label %cleanup92, !dbg !15049

cleanup96.thread512:                              ; preds = %if.end81, %while.body74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !15050
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !15037
  br label %cleanup339.thread

cleanup92:                                        ; preds = %if.end81
  %call87 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %29) #22, !dbg !15051
  %cmp88 = icmp eq i32 %call87, 0, !dbg !15053
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !15050
  br i1 %cmp88, label %cleanup96, label %while.cond71, !llvm.loop !15054

cleanup96:                                        ; preds = %cleanup92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !15037
  br label %cleanup339.thread607

if.then106:                                       ; preds = %if.end43
  %30 = bitcast %struct.redisObject* %o.0 to %struct.dict**, !dbg !15055
  %31 = load %struct.dict*, %struct.dict** %30, align 8, !dbg !15055, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.dict* %31, metadata !14910, metadata !DIExpression()), !dbg !15056
  %call109 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %31) #23, !dbg !15057
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call109, metadata !14913, metadata !DIExpression()), !dbg !15056
  br label %while.cond111, !dbg !15058

while.cond111:                                    ; preds = %cleanup135, %if.then106
  %call112 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call109) #23, !dbg !15059
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call112, metadata !14914, metadata !DIExpression()), !dbg !15056
  %cmp113.not = icmp eq %struct.dictEntry* %call112, null, !dbg !15060
  br i1 %cmp113.not, label %cleanup140.thread, label %while.body115, !dbg !15058

while.body115:                                    ; preds = %while.cond111
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %9) #24, !dbg !15061
  call void @llvm.dbg.declare(metadata [15 x i8]* %cmd116, metadata !14915, metadata !DIExpression()), !dbg !15062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %9, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.rewriteAppendOnlyFile.cmd.304, i64 0, i64 0), i64 15, i1 false), !dbg !15062
  %32 = bitcast %struct.dictEntry* %call112 to %struct.redisObject**, !dbg !15063
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !15063, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %33, metadata !14920, metadata !DIExpression()), !dbg !15064
  %call120 = call i64 @fwrite(i8* noundef nonnull %9, i64 noundef 14, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15065
  %cmp121 = icmp eq i64 %call120, 0, !dbg !15067
  br i1 %cmp121, label %cleanup140.thread519, label %if.end124, !dbg !15068

if.end124:                                        ; preds = %while.body115
  %call125 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15069
  %cmp126 = icmp eq i32 %call125, 0, !dbg !15071
  br i1 %cmp126, label %cleanup140.thread519, label %cleanup135, !dbg !15072

cleanup140.thread519:                             ; preds = %if.end124, %while.body115
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %9) #24, !dbg !15073
  br label %cleanup339.thread

cleanup135:                                       ; preds = %if.end124
  %call130 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %33) #22, !dbg !15074
  %cmp131 = icmp eq i32 %call130, 0, !dbg !15076
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %9) #24, !dbg !15073
  br i1 %cmp131, label %cleanup339.thread607, label %while.cond111, !llvm.loop !15077

cleanup140.thread:                                ; preds = %while.cond111
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call109) #23, !dbg !15078
  br label %if.end300

if.then150:                                       ; preds = %if.end43
  %34 = bitcast %struct.redisObject* %o.0 to %struct.zset**, !dbg !15079
  %35 = load %struct.zset*, %struct.zset** %34, align 8, !dbg !15079, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %35, metadata !14921, metadata !DIExpression()), !dbg !15080
  %dict153 = getelementptr inbounds %struct.zset, %struct.zset* %35, i64 0, i32 0, !dbg !15081
  %36 = load %struct.dict*, %struct.dict** %dict153, align 8, !dbg !15081, !tbaa !6133
  %call154 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %36) #23, !dbg !15082
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call154, metadata !14924, metadata !DIExpression()), !dbg !15080
  br label %while.cond156, !dbg !15083

while.cond156:                                    ; preds = %cleanup186, %if.then150
  %call157 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call154) #23, !dbg !15084
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call157, metadata !14925, metadata !DIExpression()), !dbg !15080
  %cmp158.not = icmp eq %struct.dictEntry* %call157, null, !dbg !15085
  br i1 %cmp158.not, label %cleanup192.thread, label %while.body160, !dbg !15083

while.body160:                                    ; preds = %while.cond156
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %8) #24, !dbg !15086
  call void @llvm.dbg.declare(metadata [15 x i8]* %cmd161, metadata !14926, metadata !DIExpression()), !dbg !15087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %8, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.rewriteAppendOnlyFile.cmd.305, i64 0, i64 0), i64 15, i1 false), !dbg !15087
  %37 = bitcast %struct.dictEntry* %call157 to %struct.redisObject**, !dbg !15088
  %38 = load %struct.redisObject*, %struct.redisObject** %37, align 8, !dbg !15088, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %38, metadata !14928, metadata !DIExpression()), !dbg !15089
  %val164 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call157, i64 0, i32 1, !dbg !15090
  %39 = bitcast i8** %val164 to double**, !dbg !15090
  %40 = load double*, double** %39, align 8, !dbg !15090, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %40, metadata !14929, metadata !DIExpression()), !dbg !15089
  %call166 = call i64 @fwrite(i8* noundef nonnull %8, i64 noundef 14, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15091
  %cmp167 = icmp eq i64 %call166, 0, !dbg !15093
  br i1 %cmp167, label %cleanup192.thread526, label %if.end170, !dbg !15094

if.end170:                                        ; preds = %while.body160
  %call171 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15095
  %cmp172 = icmp eq i32 %call171, 0, !dbg !15097
  br i1 %cmp172, label %cleanup192.thread526, label %if.end175, !dbg !15098

if.end175:                                        ; preds = %if.end170
  %41 = load double, double* %40, align 8, !dbg !15099, !tbaa !6140
  %call176 = call i32 @fwriteBulkDouble(%struct._IO_FILE* noundef %call4, double noundef %41) #22, !dbg !15101
  %cmp177 = icmp eq i32 %call176, 0, !dbg !15102
  br i1 %cmp177, label %cleanup192.thread526, label %cleanup186, !dbg !15103

cleanup192.thread526:                             ; preds = %if.end175, %if.end170, %while.body160
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %8) #24, !dbg !15104
  br label %cleanup339.thread

cleanup186:                                       ; preds = %if.end175
  %call181 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %38) #22, !dbg !15105
  %cmp182 = icmp eq i32 %call181, 0, !dbg !15107
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %8) #24, !dbg !15104
  br i1 %cmp182, label %cleanup339.thread607, label %while.cond156, !llvm.loop !15108

cleanup192.thread:                                ; preds = %while.cond156
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call154) #23, !dbg !15109
  br label %if.end300

if.then202:                                       ; preds = %if.end43
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %3) #24, !dbg !15110
  call void @llvm.dbg.declare(metadata [15 x i8]* %cmd203, metadata !14930, metadata !DIExpression()), !dbg !15111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %3, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.rewriteAppendOnlyFile.cmd.306, i64 0, i64 0), i64 15, i1 false), !dbg !15111
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o.0, i64 0, i32 2, !dbg !15112
  %42 = load i8, i8* %encoding, align 1, !dbg !15112, !tbaa !1529
  %cmp205 = icmp eq i8 %42, 2, !dbg !15113
  br i1 %cmp205, label %if.then207, label %if.else247, !dbg !15114

if.then207:                                       ; preds = %if.then202
  %ptr208 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o.0, i64 0, i32 0, !dbg !15115
  %43 = load i8*, i8** %ptr208, align 8, !dbg !15115, !tbaa !1328
  %call209 = call i8* @zipmapRewind(i8* noundef %43) #23, !dbg !15116
  call void @llvm.dbg.value(metadata i8* %call209, metadata !14933, metadata !DIExpression()), !dbg !15117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !15118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #24, !dbg !15118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !15119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !15119
  br label %while.cond211, !dbg !15120

while.cond211:                                    ; preds = %if.end232, %if.then207
  %p.0 = phi i8* [ %call209, %if.then207 ], [ %call212, %if.end232 ], !dbg !15117
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !14933, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i8** %field, metadata !14936, metadata !DIExpression(DW_OP_deref)), !dbg !15117
  call void @llvm.dbg.value(metadata i8** %val210, metadata !14937, metadata !DIExpression(DW_OP_deref)), !dbg !15117
  call void @llvm.dbg.value(metadata i32* %flen, metadata !14938, metadata !DIExpression(DW_OP_deref)), !dbg !15117
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !14939, metadata !DIExpression(DW_OP_deref)), !dbg !15117
  %call212 = call i8* @zipmapNext(i8* noundef %p.0, i8** noundef nonnull %field, i32* noundef nonnull %flen, i8** noundef nonnull %val210, i32* noundef nonnull %vlen) #23, !dbg !15121
  call void @llvm.dbg.value(metadata i8* %call212, metadata !14933, metadata !DIExpression()), !dbg !15117
  %cmp213.not = icmp eq i8* %call212, null, !dbg !15122
  br i1 %cmp213.not, label %cleanup240, label %while.body215, !dbg !15120

while.body215:                                    ; preds = %while.cond211
  %call217 = call i64 @fwrite(i8* noundef nonnull %3, i64 noundef 14, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15123
  %cmp218 = icmp eq i64 %call217, 0, !dbg !15126
  br i1 %cmp218, label %cleanup240.thread, label %if.end221, !dbg !15127

if.end221:                                        ; preds = %while.body215
  %call222 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15128
  %cmp223 = icmp eq i32 %call222, 0, !dbg !15130
  br i1 %cmp223, label %cleanup240.thread, label %if.end226, !dbg !15131

if.end226:                                        ; preds = %if.end221
  %44 = load i8*, i8** %field, align 8, !dbg !15132, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %44, metadata !14936, metadata !DIExpression()), !dbg !15117
  %45 = load i32, i32* %flen, align 4, !dbg !15134, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %45, metadata !14938, metadata !DIExpression()), !dbg !15117
  %conv227 = zext i32 %45 to i64, !dbg !15134
  %call228 = call i32 @fwriteBulkString(%struct._IO_FILE* noundef %call4, i8* noundef %44, i64 noundef %conv227) #22, !dbg !15135
  %cmp229 = icmp eq i32 %call228, 0, !dbg !15136
  br i1 %cmp229, label %cleanup240.thread, label %if.end232, !dbg !15137

if.end232:                                        ; preds = %if.end226
  %46 = load i8*, i8** %val210, align 8, !dbg !15138, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %46, metadata !14937, metadata !DIExpression()), !dbg !15117
  %47 = load i32, i32* %vlen, align 4, !dbg !15140, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %47, metadata !14939, metadata !DIExpression()), !dbg !15117
  %conv233 = zext i32 %47 to i64, !dbg !15140
  %call234 = call i32 @fwriteBulkString(%struct._IO_FILE* noundef %call4, i8* noundef %46, i64 noundef %conv233) #22, !dbg !15141
  %cmp235 = icmp eq i32 %call234, 0, !dbg !15142
  br i1 %cmp235, label %cleanup240.thread, label %while.cond211, !dbg !15143, !llvm.loop !15144

cleanup240.thread:                                ; preds = %while.body215, %if.end221, %if.end226, %if.end232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !15146
  br label %cleanup292.thread

cleanup240:                                       ; preds = %while.cond211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24, !dbg !15146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !15146
  br label %cleanup292

if.else247:                                       ; preds = %if.then202
  %48 = bitcast %struct.redisObject* %o.0 to %struct.dict**, !dbg !15147
  %49 = load %struct.dict*, %struct.dict** %48, align 8, !dbg !15147, !tbaa !1328
  %call250 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %49) #23, !dbg !15148
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call250, metadata !14940, metadata !DIExpression()), !dbg !15149
  br label %while.cond252, !dbg !15150

while.cond252:                                    ; preds = %cleanup282, %if.else247
  %call253 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call250) #23, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call253, metadata !14942, metadata !DIExpression()), !dbg !15149
  %cmp254.not = icmp eq %struct.dictEntry* %call253, null, !dbg !15152
  br i1 %cmp254.not, label %cleanup287.thread, label %while.body256, !dbg !15150

while.body256:                                    ; preds = %while.cond252
  %50 = bitcast %struct.dictEntry* %call253 to %struct.redisObject**, !dbg !15153
  %51 = load %struct.redisObject*, %struct.redisObject** %50, align 8, !dbg !15153, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %51, metadata !14943, metadata !DIExpression()), !dbg !15154
  %val260 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call253, i64 0, i32 1, !dbg !15155
  %52 = bitcast i8** %val260 to %struct.redisObject**, !dbg !15155
  %53 = load %struct.redisObject*, %struct.redisObject** %52, align 8, !dbg !15155, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %53, metadata !14945, metadata !DIExpression()), !dbg !15154
  %call262 = call i64 @fwrite(i8* noundef nonnull %3, i64 noundef 14, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15156
  %cmp263 = icmp eq i64 %call262, 0, !dbg !15158
  br i1 %cmp263, label %cleanup292.thread, label %if.end266, !dbg !15159

if.end266:                                        ; preds = %while.body256
  %call267 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15160
  %cmp268 = icmp eq i32 %call267, 0, !dbg !15162
  br i1 %cmp268, label %cleanup292.thread, label %if.end271, !dbg !15163

if.end271:                                        ; preds = %if.end266
  %call272 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %51) #22, !dbg !15164
  %cmp273 = icmp eq i32 %call272, 0, !dbg !15166
  br i1 %cmp273, label %cleanup292.thread, label %cleanup282, !dbg !15167

cleanup282:                                       ; preds = %if.end271
  %call277 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %53) #22, !dbg !15168
  %cmp278 = icmp eq i32 %call277, 0, !dbg !15170
  br i1 %cmp278, label %cleanup292.thread, label %while.cond252, !llvm.loop !15171

cleanup287.thread:                                ; preds = %while.cond252
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call250) #23, !dbg !15173
  br label %cleanup292

cleanup292.thread:                                ; preds = %cleanup282, %if.end271, %if.end266, %while.body256, %cleanup240.thread
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %3) #24, !dbg !15174
  br label %cleanup339.thread607

cleanup292:                                       ; preds = %cleanup240, %cleanup287.thread
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %3) #24, !dbg !15174
  br label %if.end300

if.else295:                                       ; preds = %if.end43
  call void @_redisPanic(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 8679) #22, !dbg !15175
  call void @_exit(i32 noundef 1) #26, !dbg !15175
  unreachable, !dbg !15175

if.end300:                                        ; preds = %cleanup292, %cleanup192.thread, %cleanup140.thread, %cleanup96.thread, %cleanup
  %cmp301.not = icmp eq i64 %call44, -1, !dbg !15177
  br i1 %cmp301.not, label %if.end328, label %if.then303, !dbg !15178

if.then303:                                       ; preds = %if.end300
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %13) #24, !dbg !15179
  call void @llvm.dbg.declare(metadata [19 x i8]* %cmd304, metadata !14946, metadata !DIExpression()), !dbg !15180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(19) %13, i8* noundef nonnull align 16 dereferenceable(19) getelementptr inbounds ([19 x i8], [19 x i8]* @__const.rewriteAppendOnlyFile.cmd.307, i64 0, i64 0), i64 19, i1 false), !dbg !15180
  %cmp305 = icmp slt i64 %call44, %call, !dbg !15181
  br i1 %cmp305, label %cleanup325.thread, label %if.end308, !dbg !15183, !llvm.loop !15184

if.end308:                                        ; preds = %if.then303
  %call310 = call i64 @fwrite(i8* noundef nonnull %13, i64 noundef 18, i64 noundef 1, %struct._IO_FILE* noundef %call4) #23, !dbg !15186
  %cmp311 = icmp eq i64 %call310, 0, !dbg !15188
  br i1 %cmp311, label %cleanup325.thread, label %if.end314, !dbg !15189

if.end314:                                        ; preds = %if.end308
  %call315 = call i32 @fwriteBulkObject(%struct._IO_FILE* noundef %call4, %struct.redisObject* noundef %20) #22, !dbg !15190
  %cmp316 = icmp eq i32 %call315, 0, !dbg !15192
  br i1 %cmp316, label %cleanup325.thread, label %cleanup325, !dbg !15193

cleanup325.thread:                                ; preds = %if.then303, %if.end308, %if.end314
  %cleanup.dest.slot.11.ph = phi i32 [ 5, %if.end314 ], [ 5, %if.end308 ], [ 6, %if.then303 ]
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %13) #24, !dbg !15194
  br label %cleanup332

cleanup325:                                       ; preds = %if.end314
  %call320 = call i32 @fwriteBulkLong(%struct._IO_FILE* noundef %call4, i64 noundef %call44) #22, !dbg !15195
  %cmp321 = icmp eq i32 %call320, 0, !dbg !15197
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %13) #24, !dbg !15194
  %brmerge = or i1 %tobool329.not, %cmp321
  %cleanup.dest.slot.11.mux = select i1 %cmp321, i32 5, i32 0
  br i1 %brmerge, label %cleanup332, label %if.then330

if.end328:                                        ; preds = %if.end300
  br i1 %tobool329.not, label %while.cond.backedge, label %if.then330, !dbg !15198

if.then330:                                       ; preds = %cleanup325, %if.end328
  %54 = bitcast %struct.redisObject* %o.0 to i8*, !dbg !15199
  call void @decrRefCount(i8* noundef %54) #22, !dbg !15201
  br label %while.cond.backedge, !dbg !15201

cleanup339.thread607:                             ; preds = %cleanup186, %cleanup135, %cleanup292.thread, %cleanup96
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call13, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14987
  br label %werr

cleanup332:                                       ; preds = %cleanup325.thread, %cleanup325, %cleanup
  %cleanup.dest.slot.12 = phi i32 [ %cleanup.dest.slot.11.mux, %cleanup325 ], [ 5, %cleanup ], [ %cleanup.dest.slot.11.ph, %cleanup325.thread ]
  switch i32 %cleanup.dest.slot.12, label %cleanup339 [
    i32 0, label %while.cond.backedge
    i32 6, label %while.cond.backedge
  ]

while.cond.backedge:                              ; preds = %if.end328, %if.then330, %cleanup332, %cleanup332
  %call28 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef nonnull %call13) #23, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call28, metadata !14876, metadata !DIExpression()), !dbg !14953
  %cmp29.not = icmp eq %struct.dictEntry* %call28, null, !dbg !14997
  br i1 %cmp29.not, label %while.end338, label %while.body, !dbg !14998, !llvm.loop !15184

while.end338:                                     ; preds = %while.cond.backedge, %while.cond.preheader
  call void @dictReleaseIterator(%struct.dictIterator* noundef nonnull %call13) #23, !dbg !15202
  br label %cleanup339.thread550, !dbg !14987

cleanup339.thread:                                ; preds = %if.end17, %if.end22, %cleanup.thread, %cleanup96.thread512, %cleanup140.thread519, %cleanup192.thread526
  call void @llvm.dbg.value(metadata %struct.dictIterator* undef, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14987
  br label %werr

cleanup339.thread550:                             ; preds = %while.end338, %for.body
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call13, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14987
  br label %for.inc

cleanup339:                                       ; preds = %cleanup332
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call13, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %2) #24, !dbg !14987
  switch i32 %cleanup.dest.slot.12, label %cleanup366 [
    i32 5, label %werr
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup339.thread550, %cleanup339
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.dictIterator* poison, metadata !14875, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !14879, metadata !DIExpression()), !dbg !14953
  %55 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !14963, !tbaa !2013
  %56 = sext i32 %55 to i64, !dbg !14964
  %cmp = icmp slt i64 %indvars.iv.next, %56, !dbg !14964
  br i1 %cmp, label %for.body, label %for.end, !dbg !14965, !llvm.loop !15204

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %call344 = call i32 @fflush(%struct._IO_FILE* noundef %call4) #23, !dbg !15206
  %call345 = call i32 @fileno(%struct._IO_FILE* noundef %call4) #23, !dbg !15207
  %call346 = call i32 @fsync(i32 noundef %call345) #23, !dbg !15208
  %call347 = call i32 @fclose(%struct._IO_FILE* noundef %call4) #23, !dbg !15209
  %call349 = call i32 @rename(i8* noundef nonnull %0, i8* noundef %filename) #23, !dbg !15210
  %cmp350 = icmp eq i32 %call349, -1, !dbg !15212
  br i1 %cmp350, label %if.then352, label %if.end357, !dbg !15213

if.then352:                                       ; preds = %for.end
  %call353 = tail call i32* @__errno_location() #25, !dbg !15214
  %57 = load i32, i32* %call353, align 4, !dbg !15214, !tbaa !926
  %call354 = call i8* @strerror(i32 noundef %57) #23, !dbg !15216
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.308, i64 0, i64 0), i8* noundef %call354) #22, !dbg !15217
  %call356 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !15218
  br label %cleanup366, !dbg !15219

if.end357:                                        ; preds = %for.end
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.309, i64 0, i64 0)) #22, !dbg !15220
  br label %cleanup366, !dbg !15221

werr:                                             ; preds = %cleanup339, %cleanup339.thread607, %cleanup339.thread
  call void @llvm.dbg.label(metadata !14952), !dbg !15222
  %call358 = call i32 @fclose(%struct._IO_FILE* noundef %call4) #23, !dbg !15223
  %call360 = call i32 @unlink(i8* noundef nonnull %0) #23, !dbg !15224
  %call361 = tail call i32* @__errno_location() #25, !dbg !15225
  %58 = load i32, i32* %call361, align 4, !dbg !15225, !tbaa !926
  %call362 = call i8* @strerror(i32 noundef %58) #23, !dbg !15226
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.310, i64 0, i64 0), i8* noundef %call362) #22, !dbg !15227
  call void @dictReleaseIterator(%struct.dictIterator* noundef nonnull %call13) #23, !dbg !15228
  br label %cleanup366, !dbg !15228

cleanup366:                                       ; preds = %cleanup339, %cleanup339.thread554, %werr, %if.end357, %if.then352, %if.then
  %retval.2 = phi i32 [ -1, %if.then352 ], [ 0, %if.end357 ], [ -1, %if.then ], [ -1, %werr ], [ -1, %cleanup339.thread554 ], [ -1, %cleanup339 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #24, !dbg !15230
  ret i32 %retval.2, !dbg !15230
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #18

; Function Attrs: noinline nounwind uwtable
define internal i32 @fwriteBulkLong(%struct._IO_FILE* noundef %fp, i64 noundef %l) #0 !dbg !15231 {
entry:
  %buf = alloca [128 x i8], align 16
  %lbuf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !15235, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i64 %l, metadata !15236, metadata !DIExpression()), !dbg !15239
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15240
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15240
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15237, metadata !DIExpression()), !dbg !15241
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %lbuf, i64 0, i64 0, !dbg !15240
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15240
  call void @llvm.dbg.declare(metadata [128 x i8]* %lbuf, metadata !15238, metadata !DIExpression()), !dbg !15242
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 128, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.311, i64 0, i64 0), i64 noundef %l) #23, !dbg !15243
  %call3 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !15244
  %sub = add i64 %call3, -2, !dbg !15245
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i64 noundef %sub) #23, !dbg !15246
  %call7 = call i64 @strlen(i8* noundef nonnull %0) #27, !dbg !15247
  %call8 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %call7, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15249
  %cmp = icmp eq i64 %call8, 0, !dbg !15250
  br i1 %cmp, label %cleanup, label %if.end, !dbg !15251

if.end:                                           ; preds = %entry
  %call11 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !15252
  %call12 = call i64 @fwrite(i8* noundef nonnull %1, i64 noundef %call11, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15254
  %cmp13 = icmp ne i64 %call12, 0, !dbg !15255
  %. = zext i1 %cmp13 to i32, !dbg !15239
  br label %cleanup, !dbg !15239

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %., %if.end ], !dbg !15239
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15256
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15256
  ret i32 %retval.0, !dbg !15256
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fwriteBulkObject(%struct._IO_FILE* noundef %fp, %struct.redisObject* noundef %obj) #0 !dbg !15257 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !15259, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj, metadata !15260, metadata !DIExpression()), !dbg !15264
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15265
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15265
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15261, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.value(metadata i32 0, metadata !15262, metadata !DIExpression()), !dbg !15264
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj, i64 0, i32 2, !dbg !15267
  %1 = load i8, i8* %encoding, align 1, !dbg !15267, !tbaa !1529
  %cmp.not = icmp eq i8 %1, 0, !dbg !15269
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !15270

if.then:                                          ; preds = %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef nonnull %obj) #22, !dbg !15271
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i32 1, metadata !15262, metadata !DIExpression()), !dbg !15264
  br label %if.end, !dbg !15273

if.end:                                           ; preds = %if.then, %entry
  %obj.addr.0 = phi %struct.redisObject* [ %call, %if.then ], [ %obj, %entry ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.redisObject* %obj.addr.0, metadata !15260, metadata !DIExpression()), !dbg !15264
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %obj.addr.0, i64 0, i32 0, !dbg !15274
  %2 = load i8*, i8** %ptr, align 8, !dbg !15274, !tbaa !1328
  %call2 = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !15275
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i64 0, i64 0), i64 noundef %call2) #23, !dbg !15276
  %call6 = call i64 @strlen(i8* noundef nonnull %0) #27, !dbg !15277
  %call7 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %call6, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15279
  %cmp8 = icmp eq i64 %call7, 0, !dbg !15280
  br i1 %cmp8, label %err, label %if.end11, !dbg !15281

if.end11:                                         ; preds = %if.end
  %3 = load i8*, i8** %ptr, align 8, !dbg !15282, !tbaa !1328
  %call13 = call i64 @sdslen(i8* noundef %3) #23, !dbg !15284
  %tobool.not = icmp eq i64 %call13, 0, !dbg !15284
  br i1 %tobool.not, label %if.end21, label %land.lhs.true, !dbg !15285

land.lhs.true:                                    ; preds = %if.end11
  %4 = load i8*, i8** %ptr, align 8, !dbg !15286, !tbaa !1328
  %call16 = call i64 @sdslen(i8* noundef %4) #23, !dbg !15287
  %call17 = call i64 @fwrite(i8* noundef %4, i64 noundef %call16, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15288
  %cmp18 = icmp eq i64 %call17, 0, !dbg !15289
  br i1 %cmp18, label %err, label %if.end21, !dbg !15290

if.end21:                                         ; preds = %land.lhs.true, %if.end11
  %call22 = call i64 @fwrite(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 noundef 2, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15291
  %cmp23 = icmp eq i64 %call22, 0, !dbg !15293
  br i1 %cmp23, label %err, label %if.end26, !dbg !15294

if.end26:                                         ; preds = %if.end21
  br i1 %cmp.not, label %cleanup, label %cleanup.sink.split, !dbg !15295

err:                                              ; preds = %if.end21, %land.lhs.true, %if.end
  call void @llvm.dbg.label(metadata !15263), !dbg !15296
  br i1 %cmp.not, label %cleanup, label %cleanup.sink.split, !dbg !15297

cleanup.sink.split:                               ; preds = %err, %if.end26
  %retval.0.ph = phi i32 [ 1, %if.end26 ], [ 0, %err ]
  %5 = bitcast %struct.redisObject* %obj.addr.0 to i8*, !dbg !15264
  call void @decrRefCount(i8* noundef %5) #22, !dbg !15264
  br label %cleanup, !dbg !15298

cleanup:                                          ; preds = %cleanup.sink.split, %err, %if.end26
  %retval.0 = phi i32 [ 1, %if.end26 ], [ 0, %err ], [ %retval.0.ph, %cleanup.sink.split ], !dbg !15264
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15298
  ret i32 %retval.0, !dbg !15298
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fwriteBulkDouble(%struct._IO_FILE* noundef %fp, double noundef %d) #0 !dbg !15299 {
entry:
  %buf = alloca [128 x i8], align 16
  %dbuf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !15301, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata double %d, metadata !15302, metadata !DIExpression()), !dbg !15305
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15306
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15306
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15303, metadata !DIExpression()), !dbg !15307
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %dbuf, i64 0, i64 0, !dbg !15306
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15306
  call void @llvm.dbg.declare(metadata [128 x i8]* %dbuf, metadata !15304, metadata !DIExpression()), !dbg !15308
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 128, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.313, i64 0, i64 0), double noundef %d) #23, !dbg !15309
  %call3 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !15310
  %sub = add i64 %call3, -2, !dbg !15311
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i64 noundef %sub) #23, !dbg !15312
  %call7 = call i64 @strlen(i8* noundef nonnull %0) #27, !dbg !15313
  %call8 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %call7, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15315
  %cmp = icmp eq i64 %call8, 0, !dbg !15316
  br i1 %cmp, label %cleanup, label %if.end, !dbg !15317

if.end:                                           ; preds = %entry
  %call11 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !15318
  %call12 = call i64 @fwrite(i8* noundef nonnull %1, i64 noundef %call11, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15320
  %cmp13 = icmp ne i64 %call12, 0, !dbg !15321
  %. = zext i1 %cmp13 to i32, !dbg !15305
  br label %cleanup, !dbg !15305

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %., %if.end ], !dbg !15305
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15322
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15322
  ret i32 %retval.0, !dbg !15322
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fwriteBulkString(%struct._IO_FILE* noundef %fp, i8* noundef %s, i64 noundef %len) #0 !dbg !15323 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !15327, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i8* %s, metadata !15328, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i64 %len, metadata !15329, metadata !DIExpression()), !dbg !15331
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15332
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15332
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15330, metadata !DIExpression()), !dbg !15333
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %0, i64 noundef 128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i64 0, i64 0), i64 noundef %len) #23, !dbg !15334
  %call3 = call i64 @strlen(i8* noundef nonnull %0) #27, !dbg !15335
  %call4 = call i64 @fwrite(i8* noundef nonnull %0, i64 noundef %call3, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15337
  %cmp = icmp eq i64 %call4, 0, !dbg !15338
  br i1 %cmp, label %cleanup, label %if.end, !dbg !15339

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i64 %len, 0, !dbg !15340
  br i1 %tobool.not, label %if.end8, label %land.lhs.true, !dbg !15342

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i64 @fwrite(i8* noundef %s, i64 noundef %len, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15343
  %cmp6 = icmp eq i64 %call5, 0, !dbg !15344
  br i1 %cmp6, label %cleanup, label %if.end8, !dbg !15345

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %call9 = call i64 @fwrite(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 noundef 2, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !15346
  %cmp10 = icmp ne i64 %call9, 0, !dbg !15348
  %. = zext i1 %cmp10 to i32, !dbg !15331
  br label %cleanup, !dbg !15331

cleanup:                                          ; preds = %if.end8, %land.lhs.true, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %land.lhs.true ], [ %., %if.end8 ], !dbg !15331
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !15349
  ret i32 %retval.0, !dbg !15349
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @prepareForShutdown() #0 !dbg !15350 {
entry:
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.315, i64 0, i64 0)) #22, !dbg !15351
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !15352, !tbaa !732
  %cmp.not = icmp eq i32 %0, -1, !dbg !15354
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !15355

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.316, i64 0, i64 0)) #22, !dbg !15356
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !15358, !tbaa !732
  %call = tail call i32 @kill(i32 noundef %1, i32 noundef 9) #23, !dbg !15359
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !15360, !tbaa !732
  tail call void @rdbRemoveTempFile(i32 noundef %2) #22, !dbg !15361
  br label %if.end, !dbg !15362

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !15363, !tbaa !1260
  %tobool.not = icmp eq i32 %3, 0, !dbg !15365
  br i1 %tobool.not, label %if.else, label %if.then1, !dbg !15366

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !15367, !tbaa !1042
  %call2 = tail call i32 @fsync(i32 noundef %4) #23, !dbg !15369
  %5 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15370, !tbaa !1384
  %tobool3.not = icmp eq i32 %5, 0, !dbg !15372
  br i1 %tobool3.not, label %return, label %if.then4, !dbg !15373

if.then4:                                         ; preds = %if.then1
  %6 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !15374, !tbaa !2197
  %call5 = tail call i32 @unlink(i8* noundef %6) #23, !dbg !15375
  br label %return, !dbg !15375

if.else:                                          ; preds = %if.end
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !15376, !tbaa !913
  %call7 = tail call i32 @rdbSave(i8* noundef %7) #22, !dbg !15379
  %cmp8 = icmp eq i32 %call7, 0, !dbg !15380
  br i1 %cmp8, label %if.then9, label %return, !dbg !15381

if.then9:                                         ; preds = %if.else
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !15382, !tbaa !1798
  %tobool10.not = icmp eq i32 %8, 0, !dbg !15385
  br i1 %tobool10.not, label %if.end13, label %if.then11, !dbg !15386

if.then11:                                        ; preds = %if.then9
  %9 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29), align 8, !dbg !15387, !tbaa !2166
  %call12 = tail call i32 @unlink(i8* noundef %9) #23, !dbg !15388
  br label %if.end13, !dbg !15388

if.end13:                                         ; preds = %if.then11, %if.then9
  %call14 = tail call i64 @zmalloc_used_memory() #23, !dbg !15389
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.317, i64 0, i64 0), i64 noundef %call14) #22, !dbg !15390
  br label %return

return:                                           ; preds = %if.end13, %if.then4, %if.then1, %if.else
  %.sink = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.318, i64 0, i64 0), %if.else ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.319, i64 0, i64 0), %if.then1 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.319, i64 0, i64 0), %if.then4 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.319, i64 0, i64 0), %if.end13 ]
  %retval.0 = phi i32 [ -1, %if.else ], [ 0, %if.then1 ], [ 0, %if.then4 ], [ 0, %if.end13 ], !dbg !15391
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef %.sink) #22, !dbg !15391
  ret i32 %retval.0, !dbg !15392
}

; Function Attrs: nounwind
declare !dbg !15393 dso_local i32 @kill(i32 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !15396 dso_local %struct.list* @listDup(%struct.list* noundef) local_unnamed_addr #4

declare !dbg !15399 dso_local void @dictEmpty(%struct.dict* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @emptyDb() unnamed_addr #0 !dbg !15400 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !15405, metadata !DIExpression()), !dbg !15406
  call void @llvm.dbg.value(metadata i32 0, metadata !15404, metadata !DIExpression()), !dbg !15406
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15407, !tbaa !2013
  %cmp22 = icmp sgt i32 %0, 0, !dbg !15410
  br i1 %cmp22, label %for.body, label %for.end, !dbg !15411

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %removed.024 = phi i64 [ %add8, %for.body ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %removed.024, metadata !15405, metadata !DIExpression()), !dbg !15406
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !15404, metadata !DIExpression()), !dbg !15406
  %1 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15412, !tbaa !2351
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 %indvars.iv, i32 0, !dbg !15412
  %2 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !15412, !tbaa !2353
  %used = getelementptr inbounds %struct.dict, %struct.dict* %2, i64 0, i32 2, i64 0, i32 3, !dbg !15412
  %3 = load i64, i64* %used, align 8, !dbg !15412, !tbaa !3545
  %used7 = getelementptr inbounds %struct.dict, %struct.dict* %2, i64 0, i32 2, i64 1, i32 3, !dbg !15412
  %4 = load i64, i64* %used7, align 8, !dbg !15412, !tbaa !3545
  %add = add i64 %3, %removed.024, !dbg !15412
  %add8 = add i64 %add, %4, !dbg !15414
  call void @llvm.dbg.value(metadata i64 %add8, metadata !15405, metadata !DIExpression()), !dbg !15406
  tail call void @dictEmpty(%struct.dict* noundef %2) #23, !dbg !15415
  %5 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15416, !tbaa !2351
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 %indvars.iv, i32 1, !dbg !15417
  %6 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !15417, !tbaa !3635
  tail call void @dictEmpty(%struct.dict* noundef %6) #23, !dbg !15418
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !15419
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !15404, metadata !DIExpression()), !dbg !15406
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15407, !tbaa !2013
  %8 = sext i32 %7 to i64, !dbg !15410
  %cmp = icmp slt i64 %indvars.iv.next, %8, !dbg !15410
  br i1 %cmp, label %for.body, label %for.end, !dbg !15411, !llvm.loop !15420

for.end:                                          ; preds = %for.body, %entry
  %removed.0.lcssa = phi i64 [ 0, %entry ], [ %add8, %for.body ], !dbg !15406
  ret i64 %removed.0.lcssa, !dbg !15422
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._redisSortOperation* @createSortOperation(i32 noundef %type, %struct.redisObject* noundef %pattern) #0 !dbg !15423 {
entry:
  call void @llvm.dbg.value(metadata i32 %type, metadata !15427, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.value(metadata %struct.redisObject* %pattern, metadata !15428, metadata !DIExpression()), !dbg !15430
  %call = tail call i8* @zmalloc(i64 noundef 16) #23, !dbg !15431
  %0 = bitcast i8* %call to %struct._redisSortOperation*, !dbg !15431
  call void @llvm.dbg.value(metadata %struct._redisSortOperation* %0, metadata !15429, metadata !DIExpression()), !dbg !15430
  %type1 = bitcast i8* %call to i32*, !dbg !15432
  store i32 %type, i32* %type1, align 8, !dbg !15433, !tbaa !11306
  %pattern2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !15434
  %1 = bitcast i8* %pattern2 to %struct.redisObject**, !dbg !15434
  store %struct.redisObject* %pattern, %struct.redisObject** %1, align 8, !dbg !15435, !tbaa !11300
  ret %struct._redisSortOperation* %0, !dbg !15436
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisObject* @lookupKeyByPattern(%struct.redisDb* nocapture noundef readonly %db, %struct.redisObject* nocapture noundef readonly %pattern, %struct.redisObject* noundef %subst) #0 !dbg !15437 {
entry:
  %keyobj = alloca %struct.redisObject, align 8
  %fieldobj = alloca %struct.redisObject, align 8
  %keyname = alloca %struct.anon, align 8
  %fieldname = alloca %struct.anon, align 8
  call void @llvm.dbg.value(metadata %struct.redisDb* %db, metadata !15441, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata %struct.redisObject* %pattern, metadata !15442, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata %struct.redisObject* %subst, metadata !15443, metadata !DIExpression()), !dbg !15462
  %0 = bitcast %struct.redisObject* %keyobj to i8*, !dbg !15463
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #24, !dbg !15463
  call void @llvm.dbg.declare(metadata %struct.redisObject* %keyobj, metadata !15448, metadata !DIExpression()), !dbg !15464
  %1 = bitcast %struct.redisObject* %fieldobj to i8*, !dbg !15463
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #24, !dbg !15463
  call void @llvm.dbg.declare(metadata %struct.redisObject* %fieldobj, metadata !15449, metadata !DIExpression()), !dbg !15465
  %2 = bitcast %struct.anon* %keyname to i8*, !dbg !15466
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %2) #24, !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.anon* %keyname, metadata !15455, metadata !DIExpression()), !dbg !15467
  %3 = bitcast %struct.anon* %fieldname to i8*, !dbg !15466
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %3) #24, !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.anon* %fieldname, metadata !15461, metadata !DIExpression()), !dbg !15468
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %pattern, i64 0, i32 0, !dbg !15469
  %4 = load i8*, i8** %ptr, align 8, !dbg !15469, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %4, metadata !15446, metadata !DIExpression()), !dbg !15462
  %5 = load i8, i8* %4, align 1, !dbg !15470, !tbaa !795
  %cmp = icmp eq i8 %5, 35, !dbg !15472
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15473

land.lhs.true:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !15474
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !15474, !tbaa !795
  %cmp4 = icmp eq i8 %6, 0, !dbg !15475
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15476

if.then:                                          ; preds = %land.lhs.true
  tail call void @incrRefCount(%struct.redisObject* noundef %subst) #22, !dbg !15477
  br label %cleanup, !dbg !15479

if.end:                                           ; preds = %land.lhs.true, %entry
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %subst) #22, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !15443, metadata !DIExpression()), !dbg !15462
  %ptr6 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !15481
  %7 = load i8*, i8** %ptr6, align 8, !dbg !15481, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %7, metadata !15447, metadata !DIExpression()), !dbg !15462
  %call7 = tail call i64 @sdslen(i8* noundef nonnull %4) #23, !dbg !15482
  %call8 = tail call i64 @sdslen(i8* noundef %7) #23, !dbg !15484
  %add = add i64 %call7, -1026, !dbg !15485
  %8 = add i64 %add, %call8, !dbg !15486
  %cmp9 = icmp ult i64 %8, -1025, !dbg !15486
  br i1 %cmp9, label %cleanup, label %if.end12, !dbg !15487

if.end12:                                         ; preds = %if.end
  %call13 = tail call i8* @strchr(i8* noundef nonnull %4, i32 noundef 42) #27, !dbg !15488
  call void @llvm.dbg.value(metadata i8* %call13, metadata !15444, metadata !DIExpression()), !dbg !15462
  %tobool.not = icmp eq i8* %call13, null, !dbg !15489
  br i1 %tobool.not, label %if.then14, label %if.end15, !dbg !15491

if.then14:                                        ; preds = %if.end12
  %9 = bitcast %struct.redisObject* %call to i8*, !dbg !15492
  tail call void @decrRefCount(i8* noundef %9) #22, !dbg !15494
  br label %cleanup, !dbg !15495

if.end15:                                         ; preds = %if.end12
  %add.ptr = getelementptr inbounds i8, i8* %call13, i64 1, !dbg !15496
  %call16 = tail call i8* @strstr(i8* noundef nonnull %add.ptr, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.343, i64 0, i64 0)) #27, !dbg !15498
  call void @llvm.dbg.value(metadata i8* %call16, metadata !15445, metadata !DIExpression()), !dbg !15462
  %cmp17.not = icmp eq i8* %call16, null, !dbg !15499
  br i1 %cmp17.not, label %if.end15.if.end29_crit_edge, label %if.then19, !dbg !15500

if.end15.if.end29_crit_edge:                      ; preds = %if.end15
  %.pre = ptrtoint i8* %4 to i64, !dbg !15501
  br label %if.end29, !dbg !15500

if.then19:                                        ; preds = %if.end15
  %call20 = tail call i64 @sdslen(i8* noundef nonnull %4) #23, !dbg !15502
  %sub.ptr.lhs.cast = ptrtoint i8* %call16 to i64, !dbg !15504
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !15504
  %sub.ptr.sub.neg = sub i64 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast, !dbg !15504
  %sub21 = add i64 %call20, %sub.ptr.sub.neg, !dbg !15505
  %conv22 = trunc i64 %sub21 to i32, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %conv22, metadata !15454, metadata !DIExpression()), !dbg !15462
  %arraydecay = getelementptr inbounds %struct.anon, %struct.anon* %fieldname, i64 0, i32 2, i64 0, !dbg !15506
  %add.ptr23 = getelementptr inbounds i8, i8* %call16, i64 2, !dbg !15507
  %sub24 = shl i64 %sub21, 32, !dbg !15508
  %sext174 = add i64 %sub24, -4294967296, !dbg !15508
  %conv25 = ashr exact i64 %sext174, 32, !dbg !15508
  %call26 = call i8* @memcpy(i8* noundef nonnull %arraydecay, i8* noundef nonnull %add.ptr23, i64 noundef %conv25) #23, !dbg !15509
  %sext175 = add i64 %sub24, -8589934592, !dbg !15510
  %conv28 = ashr exact i64 %sext175, 32, !dbg !15510
  %len = getelementptr inbounds %struct.anon, %struct.anon* %fieldname, i64 0, i32 0, !dbg !15511
  store i64 %conv28, i64* %len, align 8, !dbg !15512, !tbaa !15513
  br label %if.end29, !dbg !15515

if.end29:                                         ; preds = %if.end15.if.end29_crit_edge, %if.then19
  %sub.ptr.rhs.cast31.pre-phi = phi i64 [ %.pre, %if.end15.if.end29_crit_edge ], [ %sub.ptr.rhs.cast, %if.then19 ], !dbg !15501
  %fieldlen.0 = phi i32 [ 0, %if.end15.if.end29_crit_edge ], [ %conv22, %if.then19 ], !dbg !15516
  call void @llvm.dbg.value(metadata i32 %fieldlen.0, metadata !15454, metadata !DIExpression()), !dbg !15462
  %sub.ptr.lhs.cast30 = ptrtoint i8* %call13 to i64, !dbg !15501
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31.pre-phi, !dbg !15501
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub32, metadata !15451, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15462
  %call34 = call i64 @sdslen(i8* noundef %7) #23, !dbg !15517
  call void @llvm.dbg.value(metadata i64 %call34, metadata !15452, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15462
  %call36 = call i64 @sdslen(i8* noundef nonnull %4) #23, !dbg !15518
  %conv40170 = zext i32 %fieldlen.0 to i64, !dbg !15519
  %.neg = xor i64 %sub.ptr.sub32, -1, !dbg !15520
  %.neg176 = sub i64 %.neg, %conv40170, !dbg !15521
  %sub41 = add i64 %.neg176, %call36, !dbg !15521
  call void @llvm.dbg.value(metadata i64 %sub41, metadata !15453, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15462
  %arraydecay44 = getelementptr inbounds %struct.anon, %struct.anon* %keyname, i64 0, i32 2, i64 0, !dbg !15522
  %sext = shl i64 %sub.ptr.sub32, 32, !dbg !15523
  %conv45 = ashr exact i64 %sext, 32, !dbg !15523
  %call46 = call i8* @memcpy(i8* noundef nonnull %arraydecay44, i8* noundef nonnull %4, i64 noundef %conv45) #23, !dbg !15524
  %add.ptr49 = getelementptr inbounds %struct.anon, %struct.anon* %keyname, i64 0, i32 2, i64 %conv45, !dbg !15525
  %sext171 = shl i64 %call34, 32, !dbg !15526
  %conv50 = ashr exact i64 %sext171, 32, !dbg !15526
  %call51 = call i8* @memcpy(i8* noundef nonnull %add.ptr49, i8* noundef %7, i64 noundef %conv50) #23, !dbg !15527
  %add.ptr57 = getelementptr inbounds i8, i8* %add.ptr49, i64 %conv50, !dbg !15528
  %sext172 = shl i64 %sub41, 32, !dbg !15529
  %conv59 = ashr exact i64 %sext172, 32, !dbg !15529
  %call60 = call i8* @memcpy(i8* noundef nonnull %add.ptr57, i8* noundef nonnull %add.ptr, i64 noundef %conv59) #23, !dbg !15530
  %add62 = add i64 %call34, %sub.ptr.sub32, !dbg !15531
  %add63 = add i64 %add62, %sub41, !dbg !15532
  %sext173 = shl i64 %add63, 32, !dbg !15533
  %idxprom = ashr exact i64 %sext173, 32, !dbg !15533
  %arrayidx64 = getelementptr inbounds %struct.anon, %struct.anon* %keyname, i64 0, i32 2, i64 %idxprom, !dbg !15533
  store i8 0, i8* %arrayidx64, align 1, !dbg !15534, !tbaa !795
  %len68 = getelementptr inbounds %struct.anon, %struct.anon* %keyname, i64 0, i32 0, !dbg !15535
  store i64 %idxprom, i64* %len68, align 8, !dbg !15536, !tbaa !15513
  %10 = bitcast %struct.redisObject* %call to i8*, !dbg !15537
  call void @decrRefCount(i8* noundef %10) #22, !dbg !15538
  %refcount = getelementptr inbounds %struct.redisObject, %struct.redisObject* %keyobj, i64 0, i32 5, !dbg !15539
  store i32 1, i32* %refcount, align 4, !dbg !15539, !tbaa !1534
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %keyobj, i64 0, i32 1, !dbg !15539
  store i8 0, i8* %type, align 8, !dbg !15539, !tbaa !1526
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %keyobj, i64 0, i32 2, !dbg !15539
  store i8 0, i8* %encoding, align 1, !dbg !15539, !tbaa !1529
  %ptr70 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %keyobj, i64 0, i32 0, !dbg !15539
  store i8* %arraydecay44, i8** %ptr70, align 8, !dbg !15539, !tbaa !1328
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15541, !tbaa !1384
  %tobool71.not = icmp eq i32 %11, 0, !dbg !15541
  br i1 %tobool71.not, label %do.end, label %if.then72, !dbg !15539

if.then72:                                        ; preds = %if.end29
  %storage = getelementptr inbounds %struct.redisObject, %struct.redisObject* %keyobj, i64 0, i32 3, !dbg !15541
  store i8 0, i8* %storage, align 2, !dbg !15541, !tbaa !1547
  br label %do.end, !dbg !15541

do.end:                                           ; preds = %if.then72, %if.end29
  %call74 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %db, %struct.redisObject* noundef nonnull %keyobj) #22, !dbg !15543
  call void @llvm.dbg.value(metadata %struct.redisObject* %call74, metadata !15450, metadata !DIExpression()), !dbg !15462
  %cmp75 = icmp eq %struct.redisObject* %call74, null, !dbg !15544
  br i1 %cmp75, label %cleanup, label %if.end78, !dbg !15546

if.end78:                                         ; preds = %do.end
  %cmp79 = icmp sgt i32 %fieldlen.0, 0, !dbg !15547
  %type82 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call74, i64 0, i32 1, !dbg !15549
  %12 = load i8, i8* %type82, align 8, !dbg !15549, !tbaa !1526
  br i1 %cmp79, label %if.then81, label %if.else104, !dbg !15550

if.then81:                                        ; preds = %if.end78
  %cmp84 = icmp ne i8 %12, 4, !dbg !15551
  %len86 = getelementptr inbounds %struct.anon, %struct.anon* %fieldname, i64 0, i32 0
  %13 = load i64, i64* %len86, align 8
  %cmp87 = icmp slt i64 %13, 1
  %or.cond = select i1 %cmp84, i1 true, i1 %cmp87, !dbg !15554
  br i1 %or.cond, label %cleanup, label %do.body91, !dbg !15554

do.body91:                                        ; preds = %if.then81
  %refcount92 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %fieldobj, i64 0, i32 5, !dbg !15555
  store i32 1, i32* %refcount92, align 4, !dbg !15555, !tbaa !1534
  %type93 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %fieldobj, i64 0, i32 1, !dbg !15555
  store i8 0, i8* %type93, align 8, !dbg !15555, !tbaa !1526
  %encoding94 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %fieldobj, i64 0, i32 2, !dbg !15555
  store i8 0, i8* %encoding94, align 1, !dbg !15555, !tbaa !1529
  %14 = getelementptr inbounds %struct.anon, %struct.anon* %fieldname, i64 0, i32 2, i64 0, !dbg !15555
  %ptr96 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %fieldobj, i64 0, i32 0, !dbg !15555
  store i8* %14, i8** %ptr96, align 8, !dbg !15555, !tbaa !1328
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15557, !tbaa !1384
  %tobool97.not = icmp eq i32 %15, 0, !dbg !15557
  br i1 %tobool97.not, label %do.end102, label %if.then98, !dbg !15555

if.then98:                                        ; preds = %do.body91
  %storage99 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %fieldobj, i64 0, i32 3, !dbg !15557
  store i8 0, i8* %storage99, align 2, !dbg !15557, !tbaa !1547
  br label %do.end102, !dbg !15557

do.end102:                                        ; preds = %if.then98, %do.body91
  %call103 = call %struct.redisObject* @hashGet(%struct.redisObject* noundef nonnull %call74, %struct.redisObject* noundef nonnull %fieldobj) #22, !dbg !15559
  call void @llvm.dbg.value(metadata %struct.redisObject* %call103, metadata !15450, metadata !DIExpression()), !dbg !15462
  br label %cleanup, !dbg !15560

if.else104:                                       ; preds = %if.end78
  %cmp107.not = icmp eq i8 %12, 0, !dbg !15561
  br i1 %cmp107.not, label %if.end110, label %cleanup, !dbg !15564

if.end110:                                        ; preds = %if.else104
  call void @incrRefCount(%struct.redisObject* noundef nonnull %call74) #22, !dbg !15565
  br label %cleanup

cleanup:                                          ; preds = %do.end102, %if.end110, %if.else104, %if.then81, %do.end, %if.end, %if.then14, %if.then
  %retval.0 = phi %struct.redisObject* [ %subst, %if.then ], [ null, %if.then14 ], [ null, %if.end ], [ null, %do.end ], [ null, %if.then81 ], [ null, %if.else104 ], [ %call103, %do.end102 ], [ %call74, %if.end110 ], !dbg !15462
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %3) #24, !dbg !15566
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %2) #24, !dbg !15566
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #24, !dbg !15566
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #24, !dbg !15566
  ret %struct.redisObject* %retval.0, !dbg !15566
}

declare !dbg !15567 dso_local void @pqsort(i8* noundef, i64 noundef, i64 noundef, i32 (i8*, i8*)* noundef, i64 noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @sortCompare(i8* nocapture noundef readonly %s1, i8* nocapture noundef readonly %s2) #0 !dbg !15571 {
entry:
  call void @llvm.dbg.value(metadata i8* %s1, metadata !15573, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i8* %s2, metadata !15574, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i8* %s1, metadata !15575, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i8* %s2, metadata !15578, metadata !DIExpression()), !dbg !15580
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 4, !dbg !15581, !tbaa !11266
  %tobool.not = icmp eq i32 %0, 0, !dbg !15583
  br i1 %tobool.not, label %if.then, label %if.else13, !dbg !15584

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds i8, i8* %s1, i64 8, !dbg !15585
  %score = bitcast i8* %u to double*, !dbg !15588
  %1 = load double, double* %score, align 8, !dbg !15588, !tbaa !795
  %u1 = getelementptr inbounds i8, i8* %s2, i64 8, !dbg !15589
  %score2 = bitcast i8* %u1 to double*, !dbg !15590
  %2 = load double, double* %score2, align 8, !dbg !15590, !tbaa !795
  %cmp3 = fcmp ogt double %1, %2, !dbg !15591
  br i1 %cmp3, label %if.end47, label %if.else, !dbg !15592

if.else:                                          ; preds = %if.then
  %cmp9 = fcmp olt double %1, %2, !dbg !15593
  %. = sext i1 %cmp9 to i32
  br label %if.end47

if.else13:                                        ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !15595, !tbaa !11269
  %tobool14.not = icmp eq i32 %3, 0, !dbg !15598
  br i1 %tobool14.not, label %if.else43, label %if.then15, !dbg !15599

if.then15:                                        ; preds = %if.else13
  %u16 = getelementptr inbounds i8, i8* %s1, i64 8, !dbg !15600
  %cmpobj = bitcast i8* %u16 to %struct.redisObject**, !dbg !15603
  %4 = load %struct.redisObject*, %struct.redisObject** %cmpobj, align 8, !dbg !15603, !tbaa !795
  %tobool17.not = icmp eq %struct.redisObject* %4, null, !dbg !15604
  %u24.phi.trans.insert = getelementptr inbounds i8, i8* %s2, i64 8
  %cmpobj25.phi.trans.insert = bitcast i8* %u24.phi.trans.insert to %struct.redisObject**
  %.pre = load %struct.redisObject*, %struct.redisObject** %cmpobj25.phi.trans.insert, align 8, !dbg !15605, !tbaa !795
  br i1 %tobool17.not, label %if.then21, label %lor.lhs.false, !dbg !15606

lor.lhs.false:                                    ; preds = %if.then15
  %tobool20.not = icmp eq %struct.redisObject* %.pre, null, !dbg !15607
  br i1 %tobool20.not, label %if.then21, label %if.else36, !dbg !15608

if.then21:                                        ; preds = %if.then15, %lor.lhs.false
  %5 = phi %struct.redisObject* [ null, %lor.lhs.false ], [ %.pre, %if.then15 ], !dbg !15609
  %.68 = phi i32 [ 1, %lor.lhs.false ], [ -1, %if.then15 ], !dbg !15612
  %cmp26 = icmp eq %struct.redisObject* %4, %5, !dbg !15613
  %spec.select = select i1 %cmp26, i32 0, i32 %.68, !dbg !15614
  br label %if.end47, !dbg !15614

if.else36:                                        ; preds = %lor.lhs.false
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 0, !dbg !15615
  %6 = load i8*, i8** %ptr, align 8, !dbg !15615, !tbaa !1328
  %ptr41 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %.pre, i64 0, i32 0, !dbg !15617
  %7 = load i8*, i8** %ptr41, align 8, !dbg !15617, !tbaa !1328
  %call = tail call i32 @strcoll(i8* noundef %6, i8* noundef %7) #27, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %call, metadata !15579, metadata !DIExpression()), !dbg !15580
  br label %if.end47

if.else43:                                        ; preds = %if.else13
  %obj = bitcast i8* %s1 to %struct.redisObject**, !dbg !15619
  %8 = load %struct.redisObject*, %struct.redisObject** %obj, align 8, !dbg !15619, !tbaa !11168
  %obj44 = bitcast i8* %s2 to %struct.redisObject**, !dbg !15621
  %9 = load %struct.redisObject*, %struct.redisObject** %obj44, align 8, !dbg !15621, !tbaa !11168
  %call45 = tail call i32 @compareStringObjects(%struct.redisObject* noundef %8, %struct.redisObject* noundef %9) #22, !dbg !15622
  call void @llvm.dbg.value(metadata i32 %call45, metadata !15579, metadata !DIExpression()), !dbg !15580
  br label %if.end47

if.end47:                                         ; preds = %if.then21, %if.else, %if.then, %if.else43, %if.else36
  %cmp.0 = phi i32 [ %call, %if.else36 ], [ %call45, %if.else43 ], [ 1, %if.then ], [ %., %if.else ], [ %spec.select, %if.then21 ], !dbg !15623
  call void @llvm.dbg.value(metadata i32 %cmp.0, metadata !15579, metadata !DIExpression()), !dbg !15580
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !15624, !tbaa !11264
  %tobool48.not = icmp eq i32 %10, 0, !dbg !15625
  %sub = sub nsw i32 0, %cmp.0, !dbg !15625
  %cond = select i1 %tobool48.not, i32 %cmp.0, i32 %sub, !dbg !15625
  ret i32 %cond, !dbg !15626
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !15627 dso_local i8* @strstr(i8* noundef, i8* noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare !dbg !15630 dso_local i32 @strcoll(i8* noundef, i8* noundef) local_unnamed_addr #11

; Function Attrs: noinline nounwind uwtable
define internal i8* @genRedisInfoString() #0 !dbg !15631 {
entry:
  %hmem = alloca [64 x i8], align 16
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !15642
  %0 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 14), align 8, !dbg !15643, !tbaa !11842
  %sub = sub nsw i64 %call, %0, !dbg !15644
  call void @llvm.dbg.value(metadata i64 %sub, metadata !15634, metadata !DIExpression()), !dbg !15645
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %hmem, i64 0, i64 0, !dbg !15646
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #24, !dbg !15646
  call void @llvm.dbg.declare(metadata [64 x i8]* %hmem, metadata !15636, metadata !DIExpression()), !dbg !15647
  %call1 = tail call i64 @zmalloc_used_memory() #23, !dbg !15648
  call void @bytesToHuman(i8* noundef nonnull %1, i64 noundef %call1) #22, !dbg !15649
  %call2 = call i8* (...) @sdsempty() #23, !dbg !15650
  %call3 = call i64 @strtol(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.347, i64 0, i64 0), i8** noundef null, i32 noundef 10) #23, !dbg !15651
  %cmp = icmp sgt i64 %call3, 0, !dbg !15652
  %conv = zext i1 %cmp to i32, !dbg !15652
  %call4 = call i8* @aeGetApiName() #23, !dbg !15653
  %call5 = call i32 @getpid() #23, !dbg !15654
  %conv6 = sext i32 %call5 to i64, !dbg !15655
  %div = sdiv i64 %sub, 86400, !dbg !15656
  %2 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !15657, !tbaa !2657
  %len = getelementptr inbounds %struct.list, %struct.list* %2, i64 0, i32 5, !dbg !15657
  %3 = load i32, i32* %len, align 8, !dbg !15657, !tbaa !1358
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !15658, !tbaa !886
  %len7 = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !15658
  %5 = load i32, i32* %len7, align 8, !dbg !15658, !tbaa !1358
  %sub8 = sub i32 %3, %5, !dbg !15659
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !15660, !tbaa !2921
  %call10 = call i64 @zmalloc_used_memory() #23, !dbg !15661
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !15662, !tbaa !708
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !15663, !tbaa !732
  %cmp12 = icmp ne i32 %8, -1, !dbg !15664
  %conv13 = zext i1 %cmp12 to i32, !dbg !15664
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !15665, !tbaa !722
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !15666, !tbaa !996
  %cmp14 = icmp ne i32 %10, -1, !dbg !15667
  %conv15 = zext i1 %cmp14 to i32, !dbg !15667
  %11 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !15668, !tbaa !15669
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !15670, !tbaa !4027
  %13 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !15671, !tbaa !5124
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61), align 8, !dbg !15672, !tbaa !2245
  %15 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62), align 8, !dbg !15673, !tbaa !2254
  %16 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !15674, !tbaa !4116
  %used = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 0, i32 3, !dbg !15674
  %17 = load i64, i64* %used, align 8, !dbg !15674, !tbaa !3545
  %used18 = getelementptr inbounds %struct.dict, %struct.dict* %16, i64 0, i32 2, i64 1, i32 3, !dbg !15674
  %18 = load i64, i64* %used18, align 8, !dbg !15674, !tbaa !3545
  %add = add i64 %18, %17, !dbg !15674
  %19 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !15675, !tbaa !4390
  %len19 = getelementptr inbounds %struct.list, %struct.list* %19, i64 0, i32 5, !dbg !15675
  %20 = load i32, i32* %len19, align 8, !dbg !15675, !tbaa !1358
  %21 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15676, !tbaa !1384
  %cmp20 = icmp ne i32 %21, 0, !dbg !15677
  %conv21 = zext i1 %cmp20 to i32, !dbg !15677
  %22 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !15678, !tbaa !2049
  %cmp22 = icmp eq i8* %22, null, !dbg !15679
  %cond = select i1 %cmp22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.350, i64 0, i64 0), !dbg !15680
  %call24 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call2, i8* noundef getelementptr inbounds ([560 x i8], [560 x i8]* @.str.344, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.346, i64 0, i64 0), i32 noundef %conv, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.348, i64 0, i64 0), i8* noundef %call4, i64 noundef %conv6, i64 noundef %sub, i64 noundef %div, i32 noundef %sub8, i32 noundef %5, i32 noundef %6, i64 noundef %call10, i8* noundef nonnull %1, i64 noundef %7, i32 noundef %conv13, i64 noundef %9, i32 noundef %conv15, i64 noundef %11, i64 noundef %12, i64 noundef %13, i64 noundef %14, i64 noundef %15, i64 noundef %add, i32 noundef %20, i32 noundef %conv21, i8* noundef %cond) #23, !dbg !15681
  call void @llvm.dbg.value(metadata i8* %call24, metadata !15633, metadata !DIExpression()), !dbg !15645
  %23 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !15682, !tbaa !2049
  %tobool.not = icmp eq i8* %23, null, !dbg !15684
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !15685

if.then:                                          ; preds = %entry
  %24 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !15686, !tbaa !2053
  %25 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !15688, !tbaa !2055
  %cmp25 = icmp eq i32 %25, 2, !dbg !15689
  %cond27 = select i1 %cmp25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.352, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.353, i64 0, i64 0), !dbg !15690
  %26 = load %struct.redisClient*, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !15691, !tbaa !2719
  %tobool28.not = icmp eq %struct.redisClient* %26, null, !dbg !15692
  br i1 %tobool28.not, label %cond.end, label %cond.true, !dbg !15692

cond.true:                                        ; preds = %if.then
  %call29 = call i64 @time(i64* noundef null) #23, !dbg !15693
  %27 = load %struct.redisClient*, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !15694, !tbaa !2719
  %lastinteraction = getelementptr inbounds %struct.redisClient, %struct.redisClient* %27, i64 0, i32 12, !dbg !15695
  %28 = load i64, i64* %lastinteraction, align 8, !dbg !15695, !tbaa !5290
  %sub30 = sub nsw i64 %call29, %28, !dbg !15696
  %conv31 = trunc i64 %sub30 to i32, !dbg !15697
  br label %cond.end, !dbg !15692

cond.end:                                         ; preds = %if.then, %cond.true
  %cond32 = phi i32 [ %conv31, %cond.true ], [ -1, %if.then ], !dbg !15692
  %call33 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call24, i8* noundef getelementptr inbounds ([87 x i8], [87 x i8]* @.str.351, i64 0, i64 0), i8* noundef nonnull %23, i32 noundef %24, i8* noundef %cond27, i32 noundef %cond32) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i8* %call33, metadata !15633, metadata !DIExpression()), !dbg !15645
  br label %if.end, !dbg !15699

if.end:                                           ; preds = %cond.end, %entry
  %info.0 = phi i8* [ %call33, %cond.end ], [ %call24, %entry ], !dbg !15645
  call void @llvm.dbg.value(metadata i8* %info.0, metadata !15633, metadata !DIExpression()), !dbg !15645
  %29 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15700, !tbaa !1384
  %tobool34.not = icmp eq i32 %29, 0, !dbg !15702
  br i1 %tobool34.not, label %if.end45, label %if.then35, !dbg !15703

if.then35:                                        ; preds = %if.end
  call void @lockThreadedIO() #22, !dbg !15704
  %30 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !15706, !tbaa !1379
  %31 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !15707, !tbaa !2218
  %32 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !15708, !tbaa !2227
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !15709, !tbaa !5740
  %34 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !15710, !tbaa !1661
  %35 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !15711, !tbaa !8013
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !15712, !tbaa !15713
  %37 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !15714, !tbaa !5634
  %len36 = getelementptr inbounds %struct.list, %struct.list* %37, i64 0, i32 5, !dbg !15714
  %38 = load i32, i32* %len36, align 8, !dbg !15714, !tbaa !1358
  %conv37 = zext i32 %38 to i64, !dbg !15715
  %39 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !15716, !tbaa !5636
  %len38 = getelementptr inbounds %struct.list, %struct.list* %39, i64 0, i32 5, !dbg !15716
  %40 = load i32, i32* %len38, align 8, !dbg !15716, !tbaa !1358
  %conv39 = zext i32 %40 to i64, !dbg !15717
  %41 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !15718, !tbaa !5638
  %len40 = getelementptr inbounds %struct.list, %struct.list* %41, i64 0, i32 5, !dbg !15718
  %42 = load i32, i32* %len40, align 8, !dbg !15718, !tbaa !1358
  %conv41 = zext i32 %42 to i64, !dbg !15719
  %43 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !15720, !tbaa !5713
  %conv42 = sext i32 %43 to i64, !dbg !15721
  %44 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !15722, !tbaa !2545
  %conv43 = zext i32 %44 to i64, !dbg !15723
  %call44 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %info.0, i8* noundef getelementptr inbounds ([340 x i8], [340 x i8]* @.str.354, i64 0, i64 0), i64 noundef %30, i64 noundef %31, i64 noundef %32, i64 noundef %33, i64 noundef %34, i64 noundef %35, i64 noundef %36, i64 noundef %conv37, i64 noundef %conv39, i64 noundef %conv41, i64 noundef %conv42, i64 noundef %conv43) #23, !dbg !15724
  call void @llvm.dbg.value(metadata i8* %call44, metadata !15633, metadata !DIExpression()), !dbg !15645
  call void @unlockThreadedIO() #22, !dbg !15725
  br label %if.end45, !dbg !15726

if.end45:                                         ; preds = %if.then35, %if.end
  %info.1 = phi i8* [ %call44, %if.then35 ], [ %info.0, %if.end ], !dbg !15645
  call void @llvm.dbg.value(metadata i8* %info.1, metadata !15633, metadata !DIExpression()), !dbg !15645
  call void @llvm.dbg.value(metadata i32 0, metadata !15635, metadata !DIExpression()), !dbg !15645
  %45 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15727, !tbaa !2013
  %cmp4693 = icmp sgt i32 %45, 0, !dbg !15728
  br i1 %cmp4693, label %for.body.preheader, label %for.end, !dbg !15729

for.body.preheader:                               ; preds = %if.end45
  %.pre98 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15730, !tbaa !2351
  br label %for.body, !dbg !15729

for.body:                                         ; preds = %for.body.preheader, %if.end75
  %46 = phi i32 [ %45, %for.body.preheader ], [ %55, %if.end75 ]
  %47 = phi %struct.redisDb* [ %.pre98, %for.body.preheader ], [ %56, %if.end75 ], !dbg !15730
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %if.end75 ]
  %info.296 = phi i8* [ %info.1, %for.body.preheader ], [ %info.3, %if.end75 ]
  call void @llvm.dbg.value(metadata i8* %info.296, metadata !15633, metadata !DIExpression()), !dbg !15645
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !15635, metadata !DIExpression()), !dbg !15645
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %47, i64 %indvars.iv, i32 0, !dbg !15730
  %48 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !15730, !tbaa !2353
  %used51 = getelementptr inbounds %struct.dict, %struct.dict* %48, i64 0, i32 2, i64 0, i32 3, !dbg !15730
  %49 = load i64, i64* %used51, align 8, !dbg !15730, !tbaa !3545
  %used57 = getelementptr inbounds %struct.dict, %struct.dict* %48, i64 0, i32 2, i64 1, i32 3, !dbg !15730
  %50 = load i64, i64* %used57, align 8, !dbg !15730, !tbaa !3545
  %add58 = add i64 %50, %49, !dbg !15730
  call void @llvm.dbg.value(metadata i64 %add58, metadata !15637, metadata !DIExpression()), !dbg !15731
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %47, i64 %indvars.iv, i32 1, !dbg !15732
  %51 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !15732, !tbaa !3635
  %used63 = getelementptr inbounds %struct.dict, %struct.dict* %51, i64 0, i32 2, i64 0, i32 3, !dbg !15732
  %52 = load i64, i64* %used63, align 8, !dbg !15732, !tbaa !3545
  %used69 = getelementptr inbounds %struct.dict, %struct.dict* %51, i64 0, i32 2, i64 1, i32 3, !dbg !15732
  %53 = load i64, i64* %used69, align 8, !dbg !15732, !tbaa !3545
  %add70 = add i64 %53, %52, !dbg !15732
  call void @llvm.dbg.value(metadata i64 %add70, metadata !15641, metadata !DIExpression()), !dbg !15731
  %tobool71 = icmp ne i64 %add58, 0, !dbg !15733
  %tobool72 = icmp ne i64 %add70, 0
  %or.cond = select i1 %tobool71, i1 true, i1 %tobool72, !dbg !15735
  br i1 %or.cond, label %if.then73, label %if.end75, !dbg !15735

if.then73:                                        ; preds = %for.body
  %54 = trunc i64 %indvars.iv to i32, !dbg !15736
  %call74 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %info.296, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.355, i64 0, i64 0), i32 noundef %54, i64 noundef %add58, i64 noundef %add70) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i8* %call74, metadata !15633, metadata !DIExpression()), !dbg !15645
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15730, !tbaa !2351
  %.pre99 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15727, !tbaa !2013
  br label %if.end75, !dbg !15738

if.end75:                                         ; preds = %for.body, %if.then73
  %55 = phi i32 [ %.pre99, %if.then73 ], [ %46, %for.body ], !dbg !15727
  %56 = phi %struct.redisDb* [ %.pre, %if.then73 ], [ %47, %for.body ]
  %info.3 = phi i8* [ %call74, %if.then73 ], [ %info.296, %for.body ], !dbg !15645
  call void @llvm.dbg.value(metadata i8* %info.3, metadata !15633, metadata !DIExpression()), !dbg !15645
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !15739
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !15635, metadata !DIExpression()), !dbg !15645
  %57 = sext i32 %55 to i64, !dbg !15728
  %cmp46 = icmp slt i64 %indvars.iv.next, %57, !dbg !15728
  br i1 %cmp46, label %for.body, label %for.end, !dbg !15729, !llvm.loop !15740

for.end:                                          ; preds = %if.end75, %if.end45
  %info.2.lcssa = phi i8* [ %info.1, %if.end45 ], [ %info.3, %if.end75 ], !dbg !15645
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #24, !dbg !15742
  ret i8* %info.2.lcssa, !dbg !15743
}

; Function Attrs: noinline nounwind uwtable
define internal void @bytesToHuman(i8* noundef %s, i64 noundef %n) #0 !dbg !15744 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !15748, metadata !DIExpression()), !dbg !15751
  call void @llvm.dbg.value(metadata i64 %n, metadata !15749, metadata !DIExpression()), !dbg !15751
  %cmp = icmp ult i64 %n, 1024, !dbg !15752
  br i1 %cmp, label %if.then, label %if.else, !dbg !15754

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %s, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.356, i64 0, i64 0), i64 noundef %n) #23, !dbg !15755
  br label %cleanup, !dbg !15757

if.else:                                          ; preds = %entry
  %cmp1 = icmp ult i64 %n, 1048576, !dbg !15758
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !15760

if.then2:                                         ; preds = %if.else
  %conv = uitofp i64 %n to double, !dbg !15761
  %div = fmul double %conv, 0x3F50000000000000, !dbg !15763
  call void @llvm.dbg.value(metadata double %div, metadata !15750, metadata !DIExpression()), !dbg !15751
  %call3 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %s, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.357, i64 0, i64 0), double noundef %div) #23, !dbg !15764
  br label %cleanup, !dbg !15765

if.else4:                                         ; preds = %if.else
  %cmp5 = icmp ult i64 %n, 1073741824, !dbg !15766
  br i1 %cmp5, label %if.then7, label %if.else11, !dbg !15768

if.then7:                                         ; preds = %if.else4
  %conv8 = uitofp i64 %n to double, !dbg !15769
  %div9 = fmul double %conv8, 0x3EB0000000000000, !dbg !15771
  call void @llvm.dbg.value(metadata double %div9, metadata !15750, metadata !DIExpression()), !dbg !15751
  %call10 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %s, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.358, i64 0, i64 0), double noundef %div9) #23, !dbg !15772
  br label %cleanup, !dbg !15773

if.else11:                                        ; preds = %if.else4
  %cmp12 = icmp ult i64 %n, 1099511627776, !dbg !15774
  br i1 %cmp12, label %if.then14, label %cleanup, !dbg !15776

if.then14:                                        ; preds = %if.else11
  %conv15 = uitofp i64 %n to double, !dbg !15777
  %div16 = fmul double %conv15, 0x3E10000000000000, !dbg !15779
  call void @llvm.dbg.value(metadata double %div16, metadata !15750, metadata !DIExpression()), !dbg !15751
  %call17 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %s, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.359, i64 0, i64 0), double noundef %div16) #23, !dbg !15780
  br label %cleanup, !dbg !15781

cleanup:                                          ; preds = %if.then7, %if.then14, %if.else11, %if.then2, %if.then
  ret void, !dbg !15782
}

declare !dbg !15783 dso_local i8* @aeGetApiName() local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !15786 dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #3

declare !dbg !15789 dso_local i8* @sdsdup(i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @computeDatasetDigest(i8* noundef %final) #0 !dbg !15792 {
entry:
  %digest = alloca [20 x i8], align 16
  %buf = alloca [128 x i8], align 16
  %aux = alloca i32, align 4
  %li = alloca %struct.listIter, align 8
  %eledigest = alloca [20 x i8], align 16
  %eledigest101 = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %final, metadata !15796, metadata !DIExpression()), !dbg !15842
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i64 0, i64 0, !dbg !15843
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #24, !dbg !15843
  call void @llvm.dbg.declare(metadata [20 x i8]* %digest, metadata !15797, metadata !DIExpression()), !dbg !15844
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15845
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15845
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15798, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.value(metadata %struct.dictIterator* null, metadata !15799, metadata !DIExpression()), !dbg !15842
  %2 = bitcast i32* %aux to i8*, !dbg !15847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #24, !dbg !15847
  %call = tail call i8* @memset(i8* noundef %final, i32 noundef 0, i64 noundef 20) #23, !dbg !15848
  call void @llvm.dbg.value(metadata i32 0, metadata !15801, metadata !DIExpression()), !dbg !15842
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15849, !tbaa !2013
  %cmp194 = icmp sgt i32 %3, 0, !dbg !15850
  br i1 %cmp194, label %for.body.lr.ph, label %for.end, !dbg !15851

for.body.lr.ph:                                   ; preds = %entry
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %eledigest101, i64 0, i64 0
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %eledigest, i64 0, i64 0
  %6 = bitcast %struct.listIter* %li to i8*
  %.pre197 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15852, !tbaa !2351
  br label %for.body, !dbg !15851

for.body:                                         ; preds = %for.body.lr.ph, %cleanup
  %7 = phi i32 [ %3, %for.body.lr.ph ], [ %39, %cleanup ]
  %8 = phi %struct.redisDb* [ %.pre197, %for.body.lr.ph ], [ %40, %cleanup ], !dbg !15852
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %cleanup ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !15801, metadata !DIExpression()), !dbg !15842
  %add.ptr = getelementptr inbounds %struct.redisDb, %struct.redisDb* %8, i64 %indvars.iv, !dbg !15853
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr, metadata !15803, metadata !DIExpression()), !dbg !15854
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %add.ptr, i64 0, i32 0, !dbg !15855
  %9 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !15855, !tbaa !2353
  %used = getelementptr inbounds %struct.dict, %struct.dict* %9, i64 0, i32 2, i64 0, i32 3, !dbg !15855
  %10 = load i64, i64* %used, align 8, !dbg !15855, !tbaa !3545
  %used4 = getelementptr inbounds %struct.dict, %struct.dict* %9, i64 0, i32 2, i64 1, i32 3, !dbg !15855
  %11 = load i64, i64* %used4, align 8, !dbg !15855, !tbaa !3545
  %add = sub i64 0, %11, !dbg !15857
  %cmp5 = icmp eq i64 %10, %add, !dbg !15857
  br i1 %cmp5, label %cleanup, label %if.end, !dbg !15858

if.end:                                           ; preds = %for.body
  %call7 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef nonnull %9) #23, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call7, metadata !15799, metadata !DIExpression()), !dbg !15842
  %12 = trunc i64 %indvars.iv to i32, !dbg !15860
  %call8 = call fastcc i32 @__bswap_32(i32 noundef %12) #22, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %call8, metadata !15802, metadata !DIExpression()), !dbg !15842
  store i32 %call8, i32* %aux, align 4, !dbg !15861, !tbaa !926
  call void @llvm.dbg.value(metadata i32* %aux, metadata !15802, metadata !DIExpression(DW_OP_deref)), !dbg !15842
  call void @mixDigest(i8* noundef %final, i8* noundef nonnull %2, i64 noundef 4) #22, !dbg !15862
  %call9191 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call7) #23, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call9191, metadata !15800, metadata !DIExpression()), !dbg !15842
  %cmp10.not192 = icmp eq %struct.dictEntry* %call9191, null, !dbg !15864
  br i1 %cmp10.not192, label %while.end123, label %while.body, !dbg !15865

while.body:                                       ; preds = %if.end, %if.end121
  %call9193 = phi %struct.dictEntry* [ %call9, %if.end121 ], [ %call9191, %if.end ]
  %call11 = call i8* @memset(i8* noundef nonnull %0, i32 noundef 0, i64 noundef 20) #23, !dbg !15866
  %13 = bitcast %struct.dictEntry* %call9193 to %struct.redisObject**, !dbg !15867
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !15867, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %14, metadata !15807, metadata !DIExpression()), !dbg !15868
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !15869, !tbaa !1384
  %tobool.not = icmp eq i32 %15, 0, !dbg !15871
  br i1 %tobool.not, label %if.then13, label %if.else, !dbg !15872

if.then13:                                        ; preds = %while.body
  call void @mixObjectDigest(i8* noundef nonnull %0, %struct.redisObject* noundef %14) #22, !dbg !15873
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call9193, i64 0, i32 1, !dbg !15875
  %16 = bitcast i8** %val to %struct.redisObject**, !dbg !15875
  %17 = load %struct.redisObject*, %struct.redisObject** %16, align 8, !dbg !15875, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.redisObject* %17, metadata !15809, metadata !DIExpression()), !dbg !15868
  br label %if.end18, !dbg !15876

if.else:                                          ; preds = %while.body
  %call15 = call %struct.redisObject* @dupStringObject(%struct.redisObject* noundef %14) #22, !dbg !15877
  call void @llvm.dbg.value(metadata %struct.redisObject* %call15, metadata !15810, metadata !DIExpression()), !dbg !15868
  call void @mixObjectDigest(i8* noundef nonnull %0, %struct.redisObject* noundef %call15) #22, !dbg !15879
  %call17 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* noundef %add.ptr, %struct.redisObject* noundef %call15) #22, !dbg !15880
  call void @llvm.dbg.value(metadata %struct.redisObject* %call17, metadata !15809, metadata !DIExpression()), !dbg !15868
  %18 = bitcast %struct.redisObject* %call15 to i8*, !dbg !15881
  call void @decrRefCount(i8* noundef %18) #22, !dbg !15882
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then13
  %o.0 = phi %struct.redisObject* [ %call17, %if.else ], [ %17, %if.then13 ], !dbg !15883
  call void @llvm.dbg.value(metadata %struct.redisObject* %o.0, metadata !15809, metadata !DIExpression()), !dbg !15868
  %type = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o.0, i64 0, i32 1, !dbg !15884
  %19 = load i8, i8* %type, align 8, !dbg !15884, !tbaa !1526
  %conv = zext i8 %19 to i32, !dbg !15884
  %call19 = call fastcc i32 @__bswap_32(i32 noundef %conv) #22, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %call19, metadata !15802, metadata !DIExpression()), !dbg !15842
  store i32 %call19, i32* %aux, align 4, !dbg !15885, !tbaa !926
  call void @llvm.dbg.value(metadata i32* %aux, metadata !15802, metadata !DIExpression(DW_OP_deref)), !dbg !15842
  call void @mixDigest(i8* noundef nonnull %0, i8* noundef nonnull %2, i64 noundef 4) #22, !dbg !15886
  %call21 = call i64 @getExpire(%struct.redisDb* noundef %add.ptr, %struct.redisObject* noundef %14) #22, !dbg !15887
  call void @llvm.dbg.value(metadata i64 %call21, metadata !15811, metadata !DIExpression()), !dbg !15868
  %20 = load i8, i8* %type, align 8, !dbg !15888, !tbaa !1526
  switch i8 %20, label %if.else111 [
    i8 0, label %if.then26
    i8 1, label %if.then33
    i8 2, label %if.then44
    i8 3, label %if.then63
    i8 4, label %if.then94
  ], !dbg !15889

if.then26:                                        ; preds = %if.end18
  call void @mixObjectDigest(i8* noundef nonnull %0, %struct.redisObject* noundef nonnull %o.0) #22, !dbg !15890
  br label %if.end116, !dbg !15892

if.then33:                                        ; preds = %if.end18
  %21 = bitcast %struct.redisObject* %o.0 to %struct.list**, !dbg !15893
  %22 = load %struct.list*, %struct.list** %21, align 8, !dbg !15893, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.list* %22, metadata !15812, metadata !DIExpression()), !dbg !15894
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #24, !dbg !15895
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !15817, metadata !DIExpression()), !dbg !15896
  call void @listRewind(%struct.list* noundef %22, %struct.listIter* noundef nonnull %li) #23, !dbg !15897
  %call35188 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !15898
  call void @llvm.dbg.value(metadata %struct.listNode* %call35188, metadata !15816, metadata !DIExpression()), !dbg !15894
  %tobool36.not189 = icmp eq %struct.listNode* %call35188, null, !dbg !15899
  br i1 %tobool36.not189, label %while.end, label %while.body37, !dbg !15899

while.body37:                                     ; preds = %if.then33, %while.body37
  %call35190 = phi %struct.listNode* [ %call35, %while.body37 ], [ %call35188, %if.then33 ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call35190, i64 0, i32 2, !dbg !15900
  %23 = bitcast i8** %value to %struct.redisObject**, !dbg !15900
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !15900, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisObject* %24, metadata !15818, metadata !DIExpression()), !dbg !15901
  call void @mixObjectDigest(i8* noundef nonnull %0, %struct.redisObject* noundef %24) #22, !dbg !15902
  %call35 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !15898
  call void @llvm.dbg.value(metadata %struct.listNode* %call35, metadata !15816, metadata !DIExpression()), !dbg !15894
  %tobool36.not = icmp eq %struct.listNode* %call35, null, !dbg !15899
  br i1 %tobool36.not, label %while.end, label %while.body37, !dbg !15899, !llvm.loop !15903

while.end:                                        ; preds = %while.body37, %if.then33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #24, !dbg !15905
  br label %if.end116, !dbg !15906

if.then44:                                        ; preds = %if.end18
  %25 = bitcast %struct.redisObject* %o.0 to %struct.dict**, !dbg !15907
  %26 = load %struct.dict*, %struct.dict** %25, align 8, !dbg !15907, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.dict* %26, metadata !15820, metadata !DIExpression()), !dbg !15908
  %call47 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %26) #23, !dbg !15909
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call47, metadata !15823, metadata !DIExpression()), !dbg !15908
  %call50185 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call47) #23, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call50185, metadata !15824, metadata !DIExpression()), !dbg !15908
  %cmp51.not186 = icmp eq %struct.dictEntry* %call50185, null, !dbg !15911
  br i1 %cmp51.not186, label %while.end57, label %while.body53, !dbg !15912

while.body53:                                     ; preds = %if.then44, %while.body53
  %call50187 = phi %struct.dictEntry* [ %call50, %while.body53 ], [ %call50185, %if.then44 ]
  %27 = bitcast %struct.dictEntry* %call50187 to %struct.redisObject**, !dbg !15913
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !15913, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %28, metadata !15825, metadata !DIExpression()), !dbg !15914
  call void @xorObjectDigest(i8* noundef nonnull %0, %struct.redisObject* noundef %28) #22, !dbg !15915
  %call50 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call47) #23, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call50, metadata !15824, metadata !DIExpression()), !dbg !15908
  %cmp51.not = icmp eq %struct.dictEntry* %call50, null, !dbg !15911
  br i1 %cmp51.not, label %while.end57, label %while.body53, !dbg !15912, !llvm.loop !15916

while.end57:                                      ; preds = %while.body53, %if.then44
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call47) #23, !dbg !15918
  br label %if.end116, !dbg !15919

if.then63:                                        ; preds = %if.end18
  %29 = bitcast %struct.redisObject* %o.0 to %struct.zset**, !dbg !15920
  %30 = load %struct.zset*, %struct.zset** %29, align 8, !dbg !15920, !tbaa !1328
  call void @llvm.dbg.value(metadata %struct.zset* %30, metadata !15827, metadata !DIExpression()), !dbg !15921
  %dict66 = getelementptr inbounds %struct.zset, %struct.zset* %30, i64 0, i32 0, !dbg !15922
  %31 = load %struct.dict*, %struct.dict** %dict66, align 8, !dbg !15922, !tbaa !6133
  %call67 = call %struct.dictIterator* @dictGetIterator(%struct.dict* noundef %31) #23, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.dictIterator* %call67, metadata !15830, metadata !DIExpression()), !dbg !15921
  %call70182 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call67) #23, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call70182, metadata !15831, metadata !DIExpression()), !dbg !15921
  %cmp71.not183 = icmp eq %struct.dictEntry* %call70182, null, !dbg !15925
  br i1 %cmp71.not183, label %while.end88, label %while.body73, !dbg !15926

while.body73:                                     ; preds = %if.then63, %while.body73
  %call70184 = phi %struct.dictEntry* [ %call70, %while.body73 ], [ %call70182, %if.then63 ]
  %32 = bitcast %struct.dictEntry* %call70184 to %struct.redisObject**, !dbg !15927
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !15927, !tbaa !2455
  call void @llvm.dbg.value(metadata %struct.redisObject* %33, metadata !15832, metadata !DIExpression()), !dbg !15928
  %val76 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call70184, i64 0, i32 1, !dbg !15929
  %34 = bitcast i8** %val76 to double**, !dbg !15929
  %35 = load double*, double** %34, align 8, !dbg !15929, !tbaa !2458
  call void @llvm.dbg.value(metadata double* %35, metadata !15834, metadata !DIExpression()), !dbg !15928
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #24, !dbg !15930
  call void @llvm.dbg.declare(metadata [20 x i8]* %eledigest, metadata !15835, metadata !DIExpression()), !dbg !15931
  %36 = load double, double* %35, align 8, !dbg !15932, !tbaa !6140
  %call78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 128, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), double noundef %36) #23, !dbg !15933
  %call80 = call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i64 noundef 20) #23, !dbg !15934
  call void @mixObjectDigest(i8* noundef nonnull %5, %struct.redisObject* noundef %33) #22, !dbg !15935
  %call85 = call i64 @strlen(i8* noundef nonnull %1) #27, !dbg !15936
  call void @mixDigest(i8* noundef nonnull %5, i8* noundef nonnull %1, i64 noundef %call85) #22, !dbg !15937
  call void @xorDigest(i8* noundef nonnull %0, i8* noundef nonnull %5, i64 noundef 20) #22, !dbg !15938
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #24, !dbg !15939
  %call70 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call67) #23, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call70, metadata !15831, metadata !DIExpression()), !dbg !15921
  %cmp71.not = icmp eq %struct.dictEntry* %call70, null, !dbg !15925
  br i1 %cmp71.not, label %while.end88, label %while.body73, !dbg !15926, !llvm.loop !15940

while.end88:                                      ; preds = %while.body73, %if.then63
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call67) #23, !dbg !15941
  br label %if.end116, !dbg !15942

if.then94:                                        ; preds = %if.end18
  %call95 = call %struct.hashIterator* @hashInitIterator(%struct.redisObject* noundef nonnull %o.0) #22, !dbg !15943
  call void @llvm.dbg.value(metadata %struct.hashIterator* %call95, metadata !15836, metadata !DIExpression()), !dbg !15944
  %call97180 = call i32 @hashNext(%struct.hashIterator* noundef %call95) #22, !dbg !15945
  %cmp98.not181 = icmp eq i32 %call97180, -1, !dbg !15946
  br i1 %cmp98.not181, label %while.end110, label %while.body100, !dbg !15947

while.body100:                                    ; preds = %if.then94, %while.body100
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #24, !dbg !15948
  call void @llvm.dbg.declare(metadata [20 x i8]* %eledigest101, metadata !15840, metadata !DIExpression()), !dbg !15949
  %call103 = call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i64 noundef 20) #23, !dbg !15950
  %call104 = call %struct.redisObject* @hashCurrent(%struct.hashIterator* noundef %call95, i32 noundef 1) #22, !dbg !15951
  call void @llvm.dbg.value(metadata %struct.redisObject* %call104, metadata !15839, metadata !DIExpression()), !dbg !15944
  call void @mixObjectDigest(i8* noundef nonnull %4, %struct.redisObject* noundef %call104) #22, !dbg !15952
  %37 = bitcast %struct.redisObject* %call104 to i8*, !dbg !15953
  call void @decrRefCount(i8* noundef %37) #22, !dbg !15954
  %call106 = call %struct.redisObject* @hashCurrent(%struct.hashIterator* noundef %call95, i32 noundef 2) #22, !dbg !15955
  call void @llvm.dbg.value(metadata %struct.redisObject* %call106, metadata !15839, metadata !DIExpression()), !dbg !15944
  call void @mixObjectDigest(i8* noundef nonnull %4, %struct.redisObject* noundef %call106) #22, !dbg !15956
  %38 = bitcast %struct.redisObject* %call106 to i8*, !dbg !15957
  call void @decrRefCount(i8* noundef %38) #22, !dbg !15958
  call void @xorDigest(i8* noundef nonnull %0, i8* noundef nonnull %4, i64 noundef 20) #22, !dbg !15959
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #24, !dbg !15960
  %call97 = call i32 @hashNext(%struct.hashIterator* noundef %call95) #22, !dbg !15945
  %cmp98.not = icmp eq i32 %call97, -1, !dbg !15946
  br i1 %cmp98.not, label %while.end110, label %while.body100, !dbg !15947, !llvm.loop !15961

while.end110:                                     ; preds = %while.body100, %if.then94
  call void @hashReleaseIterator(%struct.hashIterator* noundef %call95) #22, !dbg !15962
  br label %if.end116

if.else111:                                       ; preds = %if.end18
  call void @_redisPanic(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 10609) #22, !dbg !15963
  call void @_exit(i32 noundef 1) #26, !dbg !15963
  unreachable, !dbg !15963

if.end116:                                        ; preds = %while.end, %while.end88, %while.end110, %while.end57, %if.then26
  %cmp117.not = icmp eq i64 %call21, -1, !dbg !15965
  br i1 %cmp117.not, label %if.end121, label %if.then119, !dbg !15967

if.then119:                                       ; preds = %if.end116
  call void @xorDigest(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.387, i64 0, i64 0), i64 noundef 10) #22, !dbg !15968
  br label %if.end121, !dbg !15968

if.end121:                                        ; preds = %if.then119, %if.end116
  call void @xorDigest(i8* noundef %final, i8* noundef nonnull %0, i64 noundef 20) #22, !dbg !15969
  %call9 = call %struct.dictEntry* @dictNext(%struct.dictIterator* noundef %call7) #23, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call9, metadata !15800, metadata !DIExpression()), !dbg !15842
  %cmp10.not = icmp eq %struct.dictEntry* %call9, null, !dbg !15864
  br i1 %cmp10.not, label %while.end123, label %while.body, !dbg !15865, !llvm.loop !15970

while.end123:                                     ; preds = %if.end121, %if.end
  call void @dictReleaseIterator(%struct.dictIterator* noundef %call7) #23, !dbg !15972
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !15852, !tbaa !2351
  %.pre198 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !15849, !tbaa !2013
  br label %cleanup, !dbg !15973

cleanup:                                          ; preds = %for.body, %while.end123
  %39 = phi i32 [ %7, %for.body ], [ %.pre198, %while.end123 ], !dbg !15849
  %40 = phi %struct.redisDb* [ %8, %for.body ], [ %.pre, %while.end123 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !15974
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !15801, metadata !DIExpression()), !dbg !15842
  %41 = sext i32 %39 to i64, !dbg !15850
  %cmp = icmp slt i64 %indvars.iv.next, %41, !dbg !15850
  br i1 %cmp, label %for.body, label %for.end, !dbg !15851, !llvm.loop !15975

for.end:                                          ; preds = %cleanup, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #24, !dbg !15977
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !15977
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #24, !dbg !15977
  ret void, !dbg !15977
}

; Function Attrs: nounwind
declare !dbg !15978 dso_local i8* @memset(i8* noundef, i32 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @mixDigest(i8* noundef %digest, i8* noundef %ptr, i64 noundef %len) #0 !dbg !15981 {
entry:
  %ctx = alloca %struct.SHA1_CTX, align 4
  call void @llvm.dbg.value(metadata i8* %digest, metadata !15985, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !15986, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i64 %len, metadata !15987, metadata !DIExpression()), !dbg !16001
  %0 = bitcast %struct.SHA1_CTX* %ctx to i8*, !dbg !16002
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %0) #24, !dbg !16002
  call void @llvm.dbg.declare(metadata %struct.SHA1_CTX* %ctx, metadata !15988, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !16000, metadata !DIExpression()), !dbg !16001
  tail call void @xorDigest(i8* noundef %digest, i8* noundef %ptr, i64 noundef %len) #22, !dbg !16004
  call void @SHA1Init(%struct.SHA1_CTX* noundef nonnull %ctx) #23, !dbg !16005
  call void @SHA1Update(%struct.SHA1_CTX* noundef nonnull %ctx, i8* noundef %digest, i32 noundef 20) #23, !dbg !16006
  call void @SHA1Final(i8* noundef %digest, %struct.SHA1_CTX* noundef nonnull %ctx) #23, !dbg !16007
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %0) #24, !dbg !16008
  ret void, !dbg !16008
}

; Function Attrs: noinline nounwind uwtable
define internal void @mixObjectDigest(i8* noundef %digest, %struct.redisObject* noundef %o) #0 !dbg !16009 {
entry:
  call void @llvm.dbg.value(metadata i8* %digest, metadata !16013, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16014, metadata !DIExpression()), !dbg !16015
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %o) #22, !dbg !16016
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !16014, metadata !DIExpression()), !dbg !16015
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16017
  %0 = load i8*, i8** %ptr, align 8, !dbg !16017, !tbaa !1328
  %call2 = tail call i64 @sdslen(i8* noundef %0) #23, !dbg !16018
  tail call void @mixDigest(i8* noundef %digest, i8* noundef %0, i64 noundef %call2) #22, !dbg !16019
  %1 = bitcast %struct.redisObject* %call to i8*, !dbg !16020
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !16021
  ret void, !dbg !16022
}

; Function Attrs: noinline nounwind uwtable
define internal void @xorObjectDigest(i8* nocapture noundef %digest, %struct.redisObject* noundef %o) #0 !dbg !16023 {
entry:
  call void @llvm.dbg.value(metadata i8* %digest, metadata !16025, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16026, metadata !DIExpression()), !dbg !16027
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %o) #22, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !16026, metadata !DIExpression()), !dbg !16027
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16029
  %0 = load i8*, i8** %ptr, align 8, !dbg !16029, !tbaa !1328
  %call2 = tail call i64 @sdslen(i8* noundef %0) #23, !dbg !16030
  tail call void @xorDigest(i8* noundef %digest, i8* noundef %0, i64 noundef %call2) #22, !dbg !16031
  %1 = bitcast %struct.redisObject* %call to i8*, !dbg !16032
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !16033
  ret void, !dbg !16034
}

; Function Attrs: noinline nounwind uwtable
define internal void @xorDigest(i8* nocapture noundef %digest, i8* noundef %ptr, i64 noundef %len) #0 !dbg !16035 {
entry:
  %ctx = alloca %struct.SHA1_CTX, align 4
  %hash = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %digest, metadata !16037, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !16038, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 %len, metadata !16039, metadata !DIExpression()), !dbg !16044
  %0 = bitcast %struct.SHA1_CTX* %ctx to i8*, !dbg !16045
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %0) #24, !dbg !16045
  call void @llvm.dbg.declare(metadata %struct.SHA1_CTX* %ctx, metadata !16040, metadata !DIExpression()), !dbg !16046
  %1 = getelementptr inbounds [20 x i8], [20 x i8]* %hash, i64 0, i64 0, !dbg !16047
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1) #24, !dbg !16047
  call void @llvm.dbg.declare(metadata [20 x i8]* %hash, metadata !16041, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !16042, metadata !DIExpression()), !dbg !16044
  call void @SHA1Init(%struct.SHA1_CTX* noundef nonnull %ctx) #23, !dbg !16049
  %conv = trunc i64 %len to i32, !dbg !16050
  call void @SHA1Update(%struct.SHA1_CTX* noundef nonnull %ctx, i8* noundef %ptr, i32 noundef %conv) #23, !dbg !16051
  call void @SHA1Final(i8* noundef nonnull %1, %struct.SHA1_CTX* noundef nonnull %ctx) #23, !dbg !16052
  call void @llvm.dbg.value(metadata i32 0, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 0, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 1, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 1, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 2, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 2, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 3, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 3, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 4, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 4, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 5, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 5, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 6, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 6, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 7, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 7, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 8, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 8, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 9, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 9, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 10, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 10, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 11, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 11, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 12, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 12, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 13, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 13, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 14, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 14, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 15, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 15, metadata !16043, metadata !DIExpression()), !dbg !16044
  %2 = bitcast [20 x i8]* %hash to <16 x i8>*, !dbg !16053
  %3 = load <16 x i8>, <16 x i8>* %2, align 16, !dbg !16053, !tbaa !795
  %4 = bitcast i8* %digest to <16 x i8>*, !dbg !16056
  %5 = load <16 x i8>, <16 x i8>* %4, align 1, !dbg !16056, !tbaa !795
  %6 = xor <16 x i8> %5, %3, !dbg !16056
  %7 = bitcast i8* %digest to <16 x i8>*, !dbg !16056
  store <16 x i8> %6, <16 x i8>* %7, align 1, !dbg !16056, !tbaa !795
  call void @llvm.dbg.value(metadata i64 16, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 16, metadata !16043, metadata !DIExpression()), !dbg !16044
  %arrayidx.16 = getelementptr inbounds [20 x i8], [20 x i8]* %hash, i64 0, i64 16, !dbg !16053
  %8 = load i8, i8* %arrayidx.16, align 16, !dbg !16053, !tbaa !795
  %arrayidx4.16 = getelementptr inbounds i8, i8* %digest, i64 16, !dbg !16057
  %9 = load i8, i8* %arrayidx4.16, align 1, !dbg !16056, !tbaa !795
  %xor12.16 = xor i8 %9, %8, !dbg !16056
  store i8 %xor12.16, i8* %arrayidx4.16, align 1, !dbg !16056, !tbaa !795
  call void @llvm.dbg.value(metadata i64 17, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 17, metadata !16043, metadata !DIExpression()), !dbg !16044
  %arrayidx.17 = getelementptr inbounds [20 x i8], [20 x i8]* %hash, i64 0, i64 17, !dbg !16053
  %10 = load i8, i8* %arrayidx.17, align 1, !dbg !16053, !tbaa !795
  %arrayidx4.17 = getelementptr inbounds i8, i8* %digest, i64 17, !dbg !16057
  %11 = load i8, i8* %arrayidx4.17, align 1, !dbg !16056, !tbaa !795
  %xor12.17 = xor i8 %11, %10, !dbg !16056
  store i8 %xor12.17, i8* %arrayidx4.17, align 1, !dbg !16056, !tbaa !795
  call void @llvm.dbg.value(metadata i64 18, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 18, metadata !16043, metadata !DIExpression()), !dbg !16044
  %arrayidx.18 = getelementptr inbounds [20 x i8], [20 x i8]* %hash, i64 0, i64 18, !dbg !16053
  %12 = load i8, i8* %arrayidx.18, align 2, !dbg !16053, !tbaa !795
  %arrayidx4.18 = getelementptr inbounds i8, i8* %digest, i64 18, !dbg !16057
  %13 = load i8, i8* %arrayidx4.18, align 1, !dbg !16056, !tbaa !795
  %xor12.18 = xor i8 %13, %12, !dbg !16056
  store i8 %xor12.18, i8* %arrayidx4.18, align 1, !dbg !16056, !tbaa !795
  call void @llvm.dbg.value(metadata i64 19, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i64 19, metadata !16043, metadata !DIExpression()), !dbg !16044
  %arrayidx.19 = getelementptr inbounds [20 x i8], [20 x i8]* %hash, i64 0, i64 19, !dbg !16053
  %14 = load i8, i8* %arrayidx.19, align 1, !dbg !16053, !tbaa !795
  %arrayidx4.19 = getelementptr inbounds i8, i8* %digest, i64 19, !dbg !16057
  %15 = load i8, i8* %arrayidx4.19, align 1, !dbg !16056, !tbaa !795
  %xor12.19 = xor i8 %15, %14, !dbg !16056
  store i8 %xor12.19, i8* %arrayidx4.19, align 1, !dbg !16056, !tbaa !795
  call void @llvm.dbg.value(metadata i64 20, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1) #24, !dbg !16058
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %0) #24, !dbg !16058
  ret void, !dbg !16058
}

declare !dbg !16059 dso_local void @SHA1Init(%struct.SHA1_CTX* noundef) local_unnamed_addr #4

declare !dbg !16063 dso_local void @SHA1Update(%struct.SHA1_CTX* noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !16066 dso_local void @SHA1Final(i8* noundef, %struct.SHA1_CTX* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @configSetCommand(%struct.redisClient* noundef %c) #0 !dbg !16069 {
entry:
  %ll = alloca i64, align 8
  %vlen = alloca i32, align 4
  %eptr = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !16071, metadata !DIExpression()), !dbg !16100
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !16101
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !16101, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 3, !dbg !16102
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !16102, !tbaa !782
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %1) #22, !dbg !16103
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !16072, metadata !DIExpression()), !dbg !16100
  %2 = bitcast i64* %ll to i8*, !dbg !16104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16104
  %3 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !16105, !tbaa !1352
  %arrayidx2 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 2, !dbg !16106
  %4 = load %struct.redisObject*, %struct.redisObject** %arrayidx2, align 8, !dbg !16106, !tbaa !782
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %4, i64 0, i32 0, !dbg !16107
  %5 = load i8*, i8** %ptr, align 8, !dbg !16107, !tbaa !1328
  %call3 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i64 0, i64 0)) #27, !dbg !16108
  %tobool.not = icmp eq i32 %call3, 0, !dbg !16108
  br i1 %tobool.not, label %if.then, label %if.else, !dbg !16109

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !16110, !tbaa !913
  tail call void @zfree(i8* noundef %6) #23, !dbg !16112
  %ptr4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16113
  %7 = load i8*, i8** %ptr4, align 8, !dbg !16113, !tbaa !1328
  %call5 = tail call i8* @zstrdup(i8* noundef %7) #23, !dbg !16114
  store i8* %call5, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !16115, !tbaa !913
  br label %if.end177, !dbg !16116

if.else:                                          ; preds = %entry
  %call9 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i64 0, i64 0)) #27, !dbg !16117
  %tobool10.not = icmp eq i32 %call9, 0, !dbg !16117
  br i1 %tobool10.not, label %if.then11, label %if.else14, !dbg !16118

if.then11:                                        ; preds = %if.else
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !16119, !tbaa !2159
  tail call void @zfree(i8* noundef %8) #23, !dbg !16121
  %ptr12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16122
  %9 = load i8*, i8** %ptr12, align 8, !dbg !16122, !tbaa !1328
  %call13 = tail call i8* @zstrdup(i8* noundef %9) #23, !dbg !16123
  store i8* %call13, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !16124, !tbaa !2159
  br label %if.end177, !dbg !16125

if.else14:                                        ; preds = %if.else
  %call18 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.393, i64 0, i64 0)) #27, !dbg !16126
  %tobool19.not = icmp eq i32 %call18, 0, !dbg !16126
  br i1 %tobool19.not, label %if.then20, label %if.else23, !dbg !16127

if.then20:                                        ; preds = %if.else14
  %10 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !16128, !tbaa !2064
  tail call void @zfree(i8* noundef %10) #23, !dbg !16130
  %ptr21 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16131
  %11 = load i8*, i8** %ptr21, align 8, !dbg !16131, !tbaa !1328
  %call22 = tail call i8* @zstrdup(i8* noundef %11) #23, !dbg !16132
  store i8* %call22, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !16133, !tbaa !2064
  br label %if.end177, !dbg !16134

if.else23:                                        ; preds = %if.else14
  %call27 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.394, i64 0, i64 0)) #27, !dbg !16135
  %tobool28.not = icmp eq i32 %call27, 0, !dbg !16135
  br i1 %tobool28.not, label %if.then29, label %if.else33, !dbg !16136

if.then29:                                        ; preds = %if.else23
  call void @llvm.dbg.value(metadata i64* %ll, metadata !16073, metadata !DIExpression(DW_OP_deref)), !dbg !16100
  %call30 = call i32 @getLongLongFromObject(%struct.redisObject* noundef %call, i64* noundef nonnull %ll) #22, !dbg !16137
  %cmp = icmp eq i32 %call30, -1, !dbg !16140
  %12 = load i64, i64* %ll, align 8
  call void @llvm.dbg.value(metadata i64 %12, metadata !16073, metadata !DIExpression()), !dbg !16100
  %cmp31 = icmp slt i64 %12, 0
  %or.cond = select i1 %cmp, i1 true, i1 %cmp31, !dbg !16141
  br i1 %or.cond, label %badfmt, label %if.end, !dbg !16141

if.end:                                           ; preds = %if.then29
  store i64 %12, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !16142, !tbaa !2040
  br label %if.end177, !dbg !16143

if.else33:                                        ; preds = %if.else23
  %call37 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.395, i64 0, i64 0)) #27, !dbg !16144
  %tobool38.not = icmp eq i32 %call37, 0, !dbg !16144
  br i1 %tobool38.not, label %if.then39, label %if.else48, !dbg !16145

if.then39:                                        ; preds = %if.else33
  call void @llvm.dbg.value(metadata i64* %ll, metadata !16073, metadata !DIExpression(DW_OP_deref)), !dbg !16100
  %call40 = call i32 @getLongLongFromObject(%struct.redisObject* noundef %call, i64* noundef nonnull %ll) #22, !dbg !16146
  %cmp41 = icmp eq i32 %call40, -1, !dbg !16149
  %13 = load i64, i64* %ll, align 8
  call void @llvm.dbg.value(metadata i64 %13, metadata !16073, metadata !DIExpression()), !dbg !16100
  %cmp43 = icmp slt i64 %13, 0
  %or.cond188 = select i1 %cmp41, i1 true, i1 %cmp43, !dbg !16150
  br i1 %or.cond188, label %badfmt, label %if.end47, !dbg !16150

if.end47:                                         ; preds = %if.then39
  %conv = trunc i64 %13 to i32, !dbg !16151
  store i32 %conv, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !16152, !tbaa !1910
  br label %if.end177, !dbg !16153

if.else48:                                        ; preds = %if.else33
  %call52 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.396, i64 0, i64 0)) #27, !dbg !16154
  %tobool53.not = icmp eq i32 %call52, 0, !dbg !16154
  br i1 %tobool53.not, label %if.then54, label %if.else73, !dbg !16155

if.then54:                                        ; preds = %if.else48
  %ptr55 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16156
  %14 = load i8*, i8** %ptr55, align 8, !dbg !16156, !tbaa !1328
  %call56 = tail call i32 @strcasecmp(i8* noundef %14, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0)) #27, !dbg !16159
  %tobool57.not = icmp eq i32 %call56, 0, !dbg !16159
  br i1 %tobool57.not, label %if.then58, label %if.else59, !dbg !16160

if.then58:                                        ; preds = %if.then54
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16161, !tbaa !2139
  br label %if.end177, !dbg !16163

if.else59:                                        ; preds = %if.then54
  %call61 = tail call i32 @strcasecmp(i8* noundef %14, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0)) #27, !dbg !16164
  %tobool62.not = icmp eq i32 %call61, 0, !dbg !16164
  br i1 %tobool62.not, label %if.then63, label %if.else64, !dbg !16166

if.then63:                                        ; preds = %if.else59
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16167, !tbaa !2139
  br label %if.end177, !dbg !16169

if.else64:                                        ; preds = %if.else59
  %call66 = tail call i32 @strcasecmp(i8* noundef %14, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.398, i64 0, i64 0)) #27, !dbg !16170
  %tobool67.not = icmp eq i32 %call66, 0, !dbg !16170
  br i1 %tobool67.not, label %if.then68, label %badfmt, !dbg !16172

if.then68:                                        ; preds = %if.else64
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16173, !tbaa !2139
  br label %if.end177

if.else73:                                        ; preds = %if.else48
  %call77 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.399, i64 0, i64 0)) #27, !dbg !16175
  %tobool78.not = icmp eq i32 %call77, 0, !dbg !16175
  br i1 %tobool78.not, label %if.then79, label %if.else103, !dbg !16176

if.then79:                                        ; preds = %if.else73
  call void @llvm.dbg.value(metadata i32 undef, metadata !16074, metadata !DIExpression()), !dbg !16177
  %ptr80 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16178
  %15 = load i8*, i8** %ptr80, align 8, !dbg !16178, !tbaa !1328
  %call81 = tail call i32 @yesnotoi(i8* noundef %15) #22, !dbg !16179
  call void @llvm.dbg.value(metadata i32 %call81, metadata !16083, metadata !DIExpression()), !dbg !16177
  %cmp82 = icmp eq i32 %call81, -1, !dbg !16180
  br i1 %cmp82, label %badfmt, label %if.end85, !dbg !16182

if.end85:                                         ; preds = %if.then79
  %16 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16183, !tbaa !1260
  call void @llvm.dbg.value(metadata i32 %16, metadata !16074, metadata !DIExpression()), !dbg !16177
  %cmp86.not = icmp eq i32 %16, %call81, !dbg !16184
  br i1 %cmp86.not, label %if.end177, label %if.then88, !dbg !16186

if.then88:                                        ; preds = %if.end85
  %cmp89 = icmp eq i32 %call81, 0, !dbg !16187
  br i1 %cmp89, label %if.then91, label %if.else92, !dbg !16190

if.then91:                                        ; preds = %if.then88
  tail call void @stopAppendOnly() #22, !dbg !16191
  br label %if.end177, !dbg !16193

if.else92:                                        ; preds = %if.then88
  %call93 = tail call i32 @startAppendOnly() #22, !dbg !16194
  %cmp94 = icmp eq i32 %call93, -1, !dbg !16197
  br i1 %cmp94, label %cleanup.thread250, label %if.end177, !dbg !16198

cleanup.thread250:                                ; preds = %if.else92
  %call97 = tail call i8* (...) @sdsempty() #23, !dbg !16199
  %call98 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call97, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.400, i64 0, i64 0)) #23, !dbg !16201
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call98) #22, !dbg !16202
  %17 = bitcast %struct.redisObject* %call to i8*, !dbg !16203
  tail call void @decrRefCount(i8* noundef %17) #22, !dbg !16204
  br label %cleanup184

if.else103:                                       ; preds = %if.else73
  %call107 = tail call i32 @strcasecmp(i8* noundef %5, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0)) #27, !dbg !16205
  %tobool108.not = icmp eq i32 %call107, 0, !dbg !16205
  br i1 %tobool108.not, label %if.then109, label %if.else164, !dbg !16206

if.then109:                                       ; preds = %if.else103
  %18 = bitcast i32* %vlen to i8*, !dbg !16207
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #24, !dbg !16207
  %ptr110 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16208
  %19 = load i8*, i8** %ptr110, align 8, !dbg !16208, !tbaa !1328
  %call112 = tail call i64 @sdslen(i8* noundef %19) #23, !dbg !16209
  %conv113 = trunc i64 %call112 to i32, !dbg !16209
  call void @llvm.dbg.value(metadata i32* %vlen, metadata !16084, metadata !DIExpression(DW_OP_deref)), !dbg !16210
  %call114 = call i8** @sdssplitlen(i8* noundef %19, i32 noundef %conv113, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0), i32 noundef 1, i32* noundef nonnull %vlen) #23, !dbg !16211
  call void @llvm.dbg.value(metadata i8** %call114, metadata !16088, metadata !DIExpression()), !dbg !16210
  %20 = load i32, i32* %vlen, align 4, !dbg !16212, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %20, metadata !16084, metadata !DIExpression()), !dbg !16210
  %and = and i32 %20, 1, !dbg !16214
  %tobool115.not = icmp eq i32 %and, 0, !dbg !16214
  br i1 %tobool115.not, label %for.cond.preheader, label %if.then116, !dbg !16215

for.cond.preheader:                               ; preds = %if.then109
  call void @llvm.dbg.value(metadata i32 0, metadata !16087, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 %20, metadata !16084, metadata !DIExpression()), !dbg !16210
  %cmp118256 = icmp sgt i32 %20, 0, !dbg !16216
  br i1 %cmp118256, label %for.body.lr.ph, label %for.end, !dbg !16217

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %21 = bitcast i8** %eptr to i8*
  br label %for.body, !dbg !16217

if.then116:                                       ; preds = %if.then109
  call void @sdsfreesplitres(i8** noundef %call114, i32 noundef %20) #23, !dbg !16218
  br label %cleanup159.thread, !dbg !16220

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !16087, metadata !DIExpression()), !dbg !16210
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #24, !dbg !16221
  %arrayidx120 = getelementptr inbounds i8*, i8** %call114, i64 %indvars.iv, !dbg !16222
  %22 = load i8*, i8** %arrayidx120, align 8, !dbg !16222, !tbaa !782
  call void @llvm.dbg.value(metadata i8** %eptr, metadata !16089, metadata !DIExpression(DW_OP_deref)), !dbg !16223
  %call121 = call i64 @strtoll(i8* noundef %22, i8** noundef nonnull %eptr, i32 noundef 10) #23, !dbg !16224
  call void @llvm.dbg.value(metadata i64 %call121, metadata !16093, metadata !DIExpression()), !dbg !16223
  %23 = load i8*, i8** %eptr, align 8, !dbg !16225, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %23, metadata !16089, metadata !DIExpression()), !dbg !16223
  %24 = load i8, i8* %23, align 1, !dbg !16225, !tbaa !795
  %cmp124.not = icmp eq i8 %24, 0, !dbg !16227
  br i1 %cmp124.not, label %lor.lhs.false126, label %cleanup141, !dbg !16228

lor.lhs.false126:                                 ; preds = %for.body
  %25 = trunc i64 %indvars.iv to i32, !dbg !16229
  %and127 = and i32 %25, 1, !dbg !16229
  %cmp128 = icmp eq i32 %and127, 0, !dbg !16230
  %cmp130 = icmp slt i64 %call121, 1
  %or.cond190 = select i1 %cmp128, i1 %cmp130, i1 false, !dbg !16231
  br i1 %or.cond190, label %cleanup141, label %lor.lhs.false132, !dbg !16231

lor.lhs.false132:                                 ; preds = %lor.lhs.false126
  %cmp134 = icmp ne i32 %and127, 0, !dbg !16232
  %cmp137 = icmp slt i64 %call121, 0
  %or.cond191 = select i1 %cmp134, i1 %cmp137, i1 false, !dbg !16233
  br i1 %or.cond191, label %cleanup141, label %for.inc, !dbg !16233

cleanup141:                                       ; preds = %for.body, %lor.lhs.false126, %lor.lhs.false132
  %26 = load i32, i32* %vlen, align 4, !dbg !16234, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %26, metadata !16084, metadata !DIExpression()), !dbg !16210
  call void @sdsfreesplitres(i8** noundef nonnull %call114, i32 noundef %26) #23, !dbg !16236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #24, !dbg !16237
  br label %cleanup159.thread

for.inc:                                          ; preds = %lor.lhs.false132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #24, !dbg !16237
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !16238
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !16087, metadata !DIExpression()), !dbg !16210
  %27 = load i32, i32* %vlen, align 4, !dbg !16239, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %27, metadata !16084, metadata !DIExpression()), !dbg !16210
  %28 = sext i32 %27 to i64, !dbg !16216
  %cmp118 = icmp slt i64 %indvars.iv.next, %28, !dbg !16216
  br i1 %cmp118, label %for.body, label %for.end, !dbg !16217, !llvm.loop !16240

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  call void @resetServerSaveParams() #22, !dbg !16242
  call void @llvm.dbg.value(metadata i32 0, metadata !16087, metadata !DIExpression()), !dbg !16210
  %29 = load i32, i32* %vlen, align 4, !dbg !16243, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %29, metadata !16084, metadata !DIExpression()), !dbg !16210
  %cmp146258 = icmp sgt i32 %29, 0, !dbg !16244
  br i1 %cmp146258, label %for.body148, label %cleanup159, !dbg !16245

for.body148:                                      ; preds = %for.end, %for.body148
  %indvars.iv262 = phi i64 [ %indvars.iv.next263, %for.body148 ], [ 0, %for.end ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv262, metadata !16087, metadata !DIExpression()), !dbg !16210
  %arrayidx150 = getelementptr inbounds i8*, i8** %call114, i64 %indvars.iv262, !dbg !16246
  %30 = load i8*, i8** %arrayidx150, align 8, !dbg !16246, !tbaa !782
  %call151 = call i64 @strtoll(i8* noundef %30, i8** noundef null, i32 noundef 10) #23, !dbg !16247
  call void @llvm.dbg.value(metadata i64 %call151, metadata !16094, metadata !DIExpression()), !dbg !16248
  %31 = or i64 %indvars.iv262, 1, !dbg !16249
  %arrayidx153 = getelementptr inbounds i8*, i8** %call114, i64 %31, !dbg !16250
  %32 = load i8*, i8** %arrayidx153, align 8, !dbg !16250, !tbaa !782
  %call154 = call i64 @strtoll(i8* noundef %32, i8** noundef null, i32 noundef 10) #23, !dbg !16251
  %conv155 = trunc i64 %call154 to i32, !dbg !16251
  call void @llvm.dbg.value(metadata i32 %conv155, metadata !16098, metadata !DIExpression()), !dbg !16248
  call void @appendServerSaveParams(i64 noundef %call151, i32 noundef %conv155) #22, !dbg !16252
  %indvars.iv.next263 = add nuw i64 %indvars.iv262, 2, !dbg !16253
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next263, metadata !16087, metadata !DIExpression()), !dbg !16210
  %33 = load i32, i32* %vlen, align 4, !dbg !16243, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %33, metadata !16084, metadata !DIExpression()), !dbg !16210
  %34 = trunc i64 %indvars.iv.next263 to i32, !dbg !16244
  %cmp146 = icmp sgt i32 %33, %34, !dbg !16244
  br i1 %cmp146, label %for.body148, label %cleanup159, !dbg !16245, !llvm.loop !16254

cleanup159.thread:                                ; preds = %if.then116, %cleanup141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #24, !dbg !16256
  br label %badfmt

cleanup159:                                       ; preds = %for.body148, %for.end
  %.lcssa = phi i32 [ %29, %for.end ], [ %33, %for.body148 ], !dbg !16243
  call void @sdsfreesplitres(i8** noundef %call114, i32 noundef %.lcssa) #23, !dbg !16257
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #24, !dbg !16256
  br label %if.end177

if.else164:                                       ; preds = %if.else103
  %call165 = tail call i8* (...) @sdsempty() #23, !dbg !16258
  %35 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !16260, !tbaa !1352
  %arrayidx167 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %35, i64 2, !dbg !16261
  %36 = load %struct.redisObject*, %struct.redisObject** %arrayidx167, align 8, !dbg !16261, !tbaa !782
  %ptr168 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %36, i64 0, i32 0, !dbg !16262
  %37 = load i8*, i8** %ptr168, align 8, !dbg !16262, !tbaa !1328
  %call169 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call165, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.401, i64 0, i64 0), i8* noundef %37) #23, !dbg !16263
  tail call void @addReplySds(%struct.redisClient* noundef nonnull %c, i8* noundef %call169) #22, !dbg !16264
  %38 = bitcast %struct.redisObject* %call to i8*, !dbg !16265
  tail call void @decrRefCount(i8* noundef %38) #22, !dbg !16266
  br label %cleanup184, !dbg !16267

if.end177:                                        ; preds = %if.end85, %if.else92, %if.then91, %cleanup159, %if.then11, %if.end, %if.then63, %if.then68, %if.then58, %if.end47, %if.then20, %if.then
  %39 = bitcast %struct.redisObject* %call to i8*, !dbg !16268
  call void @decrRefCount(i8* noundef %39) #22, !dbg !16269
  %40 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !16270, !tbaa !3712
  call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %40) #22, !dbg !16271
  br label %cleanup184, !dbg !16272

badfmt:                                           ; preds = %cleanup159.thread, %if.then79, %if.else64, %if.then39, %if.then29
  call void @llvm.dbg.label(metadata !16099), !dbg !16273
  %call178 = call i8* (...) @sdsempty() #23, !dbg !16274
  %ptr179 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16275
  %41 = load i8*, i8** %ptr179, align 8, !dbg !16275, !tbaa !1328
  %42 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !16276, !tbaa !1352
  %arrayidx181 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %42, i64 2, !dbg !16277
  %43 = load %struct.redisObject*, %struct.redisObject** %arrayidx181, align 8, !dbg !16277, !tbaa !782
  %ptr182 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %43, i64 0, i32 0, !dbg !16278
  %44 = load i8*, i8** %ptr182, align 8, !dbg !16278, !tbaa !1328
  %call183 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call178, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.402, i64 0, i64 0), i8* noundef %41, i8* noundef %44) #23, !dbg !16279
  call void @addReplySds(%struct.redisClient* noundef %c, i8* noundef %call183) #22, !dbg !16280
  %45 = bitcast %struct.redisObject* %call to i8*, !dbg !16281
  call void @decrRefCount(i8* noundef %45) #22, !dbg !16282
  br label %cleanup184, !dbg !16283

cleanup184:                                       ; preds = %cleanup.thread250, %badfmt, %if.end177, %if.else164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16283
  ret void, !dbg !16283
}

; Function Attrs: noinline nounwind uwtable
define internal void @configGetCommand(%struct.redisClient* noundef %c) #0 !dbg !16284 {
entry:
  %buf = alloca [128 x i8], align 16
  %buf23 = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !16286, metadata !DIExpression()), !dbg !16304
  %argv = getelementptr inbounds %struct.redisClient, %struct.redisClient* %c, i64 0, i32 4, !dbg !16305
  %0 = load %struct.redisObject**, %struct.redisObject*** %argv, align 8, !dbg !16305, !tbaa !1352
  %arrayidx = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %0, i64 2, !dbg !16306
  %1 = load %struct.redisObject*, %struct.redisObject** %arrayidx, align 8, !dbg !16306, !tbaa !782
  %call = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %1) #22, !dbg !16307
  call void @llvm.dbg.value(metadata %struct.redisObject* %call, metadata !16287, metadata !DIExpression()), !dbg !16304
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef null) #22, !dbg !16308
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !16288, metadata !DIExpression()), !dbg !16304
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call, i64 0, i32 0, !dbg !16309
  %2 = load i8*, i8** %ptr, align 8, !dbg !16309, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %2, metadata !16289, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 0, metadata !16290, metadata !DIExpression()), !dbg !16304
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call1) #22, !dbg !16310
  %3 = bitcast %struct.redisObject* %call1 to i8*, !dbg !16311
  tail call void @decrRefCount(i8* noundef %3) #22, !dbg !16312
  %call2 = tail call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i64 0, i64 0), i32 noundef 0) #22, !dbg !16313
  %tobool.not = icmp eq i32 %call2, 0, !dbg !16313
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !16315

if.then:                                          ; preds = %entry
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i64 0, i64 0)) #22, !dbg !16316
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !16318, !tbaa !913
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef %4) #22, !dbg !16319
  call void @llvm.dbg.value(metadata i32 1, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end, !dbg !16320

if.end:                                           ; preds = %if.then, %entry
  %matches.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.0, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call3 = tail call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i64 0, i64 0), i32 noundef 0) #22, !dbg !16321
  %tobool4.not = icmp eq i32 %call3, 0, !dbg !16321
  br i1 %tobool4.not, label %if.end7, label %if.then5, !dbg !16323

if.then5:                                         ; preds = %if.end
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i64 0, i64 0)) #22, !dbg !16324
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !16326, !tbaa !2159
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef %5) #22, !dbg !16327
  %inc6 = add nuw nsw i32 %matches.0, 1, !dbg !16328
  call void @llvm.dbg.value(metadata i32 %inc6, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end7, !dbg !16329

if.end7:                                          ; preds = %if.then5, %if.end
  %matches.1 = phi i32 [ %inc6, %if.then5 ], [ %matches.0, %if.end ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.1, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call8 = tail call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.393, i64 0, i64 0), i32 noundef 0) #22, !dbg !16330
  %tobool9.not = icmp eq i32 %call8, 0, !dbg !16330
  br i1 %tobool9.not, label %if.end12, label %if.then10, !dbg !16332

if.then10:                                        ; preds = %if.end7
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.393, i64 0, i64 0)) #22, !dbg !16333
  %6 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !16335, !tbaa !2064
  tail call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef %6) #22, !dbg !16336
  %inc11 = add nuw nsw i32 %matches.1, 1, !dbg !16337
  call void @llvm.dbg.value(metadata i32 %inc11, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end12, !dbg !16338

if.end12:                                         ; preds = %if.then10, %if.end7
  %matches.2 = phi i32 [ %inc11, %if.then10 ], [ %matches.1, %if.end7 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.2, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call13 = tail call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.394, i64 0, i64 0), i32 noundef 0) #22, !dbg !16339
  %tobool14.not = icmp eq i32 %call13, 0, !dbg !16339
  br i1 %tobool14.not, label %if.end19, label %if.then15, !dbg !16340

if.then15:                                        ; preds = %if.end12
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !16341
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #24, !dbg !16341
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !16291, metadata !DIExpression()), !dbg !16342
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !16343, !tbaa !2040
  %call16 = call i32 @ll2string(i8* noundef nonnull %7, i64 noundef 128, i64 noundef %8) #22, !dbg !16344
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.394, i64 0, i64 0)) #22, !dbg !16345
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef nonnull %7) #22, !dbg !16346
  %inc18 = add nuw nsw i32 %matches.2, 1, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %inc18, metadata !16290, metadata !DIExpression()), !dbg !16304
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #24, !dbg !16348
  br label %if.end19, !dbg !16349

if.end19:                                         ; preds = %if.then15, %if.end12
  %matches.3 = phi i32 [ %inc18, %if.then15 ], [ %matches.2, %if.end12 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.3, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call20 = call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.395, i64 0, i64 0), i32 noundef 0) #22, !dbg !16350
  %tobool21.not = icmp eq i32 %call20, 0, !dbg !16350
  br i1 %tobool21.not, label %if.end28, label %if.then22, !dbg !16351

if.then22:                                        ; preds = %if.end19
  %9 = getelementptr inbounds [128 x i8], [128 x i8]* %buf23, i64 0, i64 0, !dbg !16352
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #24, !dbg !16352
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf23, metadata !16294, metadata !DIExpression()), !dbg !16353
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !16354, !tbaa !1910
  %conv = sext i32 %10 to i64, !dbg !16355
  %call25 = call i32 @ll2string(i8* noundef nonnull %9, i64 noundef 128, i64 noundef %conv) #22, !dbg !16356
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.395, i64 0, i64 0)) #22, !dbg !16357
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef nonnull %9) #22, !dbg !16358
  %inc27 = add nuw nsw i32 %matches.3, 1, !dbg !16359
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !16290, metadata !DIExpression()), !dbg !16304
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #24, !dbg !16360
  br label %if.end28, !dbg !16361

if.end28:                                         ; preds = %if.then22, %if.end19
  %matches.4 = phi i32 [ %inc27, %if.then22 ], [ %matches.3, %if.end19 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.4, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call29 = call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.399, i64 0, i64 0), i32 noundef 0) #22, !dbg !16362
  %tobool30.not = icmp eq i32 %call29, 0, !dbg !16362
  br i1 %tobool30.not, label %if.end34, label %if.then31, !dbg !16364

if.then31:                                        ; preds = %if.end28
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.399, i64 0, i64 0)) #22, !dbg !16365
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16367, !tbaa !1260
  %tobool32.not = icmp eq i32 %11, 0, !dbg !16368
  %cond = select i1 %tobool32.not, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.403, i64 0, i64 0), !dbg !16368
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef %cond) #22, !dbg !16369
  %inc33 = add nuw nsw i32 %matches.4, 1, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %inc33, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end34, !dbg !16371

if.end34:                                         ; preds = %if.then31, %if.end28
  %matches.5 = phi i32 [ %inc33, %if.then31 ], [ %matches.4, %if.end28 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.5, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call35 = call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.396, i64 0, i64 0), i32 noundef 0) #22, !dbg !16372
  %tobool36.not = icmp eq i32 %call35, 0, !dbg !16372
  br i1 %tobool36.not, label %if.end41, label %if.then37, !dbg !16373

if.then37:                                        ; preds = %if.end34
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16374, !tbaa !2139
  %13 = icmp ult i32 %12, 3, !dbg !16375
  br i1 %13, label %switch.lookup, label %sw.epilog, !dbg !16375

switch.lookup:                                    ; preds = %if.then37
  %14 = sext i32 %12 to i64, !dbg !16375
  %switch.gep = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.configGetCommand, i64 0, i64 %14, !dbg !16375
  %switch.load = load i8*, i8** %switch.gep, align 8, !dbg !16375
  br label %sw.epilog, !dbg !16375

sw.epilog:                                        ; preds = %if.then37, %switch.lookup
  %policy.0 = phi i8* [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.408, i64 0, i64 0), %if.then37 ], !dbg !16376
  call void @llvm.dbg.value(metadata i8* %policy.0, metadata !16297, metadata !DIExpression()), !dbg !16378
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.396, i64 0, i64 0)) #22, !dbg !16379
  call void @addReplyBulkCString(%struct.redisClient* noundef nonnull %c, i8* noundef nonnull %policy.0) #22, !dbg !16380
  %inc40 = add nuw nsw i32 %matches.5, 1, !dbg !16381
  call void @llvm.dbg.value(metadata i32 %inc40, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end41, !dbg !16382

if.end41:                                         ; preds = %sw.epilog, %if.end34
  %matches.6 = phi i32 [ %inc40, %sw.epilog ], [ %matches.5, %if.end34 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.6, metadata !16290, metadata !DIExpression()), !dbg !16304
  %call42 = call i32 @stringmatch(i8* noundef %2, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0), i32 noundef 0) #22, !dbg !16383
  %tobool43.not = icmp eq i32 %call42, 0, !dbg !16383
  br i1 %tobool43.not, label %if.end59, label %if.then44, !dbg !16384

if.then44:                                        ; preds = %if.end41
  %call46 = call i8* (...) @sdsempty() #23, !dbg !16385
  call void @llvm.dbg.value(metadata i8* %call46, metadata !16300, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i32 0, metadata !16303, metadata !DIExpression()), !dbg !16386
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16387, !tbaa !16390
  %cmp112 = icmp sgt i32 %15, 0, !dbg !16391
  br i1 %cmp112, label %for.body, label %for.end, !dbg !16392

for.body:                                         ; preds = %if.then44, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then44 ]
  %buf45.0113 = phi i8* [ %buf45.1, %for.inc ], [ %call46, %if.then44 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !16303, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i8* %buf45.0113, metadata !16300, metadata !DIExpression()), !dbg !16386
  %16 = load %struct.saveparam*, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 8, !dbg !16393, !tbaa !16395
  %seconds = getelementptr inbounds %struct.saveparam, %struct.saveparam* %16, i64 %indvars.iv, i32 0, !dbg !16396
  %17 = load i64, i64* %seconds, align 8, !dbg !16396, !tbaa !16397
  %changes = getelementptr inbounds %struct.saveparam, %struct.saveparam* %16, i64 %indvars.iv, i32 1, !dbg !16399
  %18 = load i32, i32* %changes, align 8, !dbg !16399, !tbaa !16400
  %call51 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %buf45.0113, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.409, i64 0, i64 0), i64 noundef %17, i32 noundef %18) #23, !dbg !16401
  call void @llvm.dbg.value(metadata i8* %call51, metadata !16300, metadata !DIExpression()), !dbg !16386
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16402, !tbaa !16390
  %sub = add nsw i32 %19, -1, !dbg !16404
  %20 = zext i32 %sub to i64, !dbg !16405
  %cmp52.not = icmp eq i64 %indvars.iv, %20, !dbg !16405
  br i1 %cmp52.not, label %for.inc, label %if.then54, !dbg !16406

if.then54:                                        ; preds = %for.body
  %call55 = call i8* @sdscatlen(i8* noundef %call51, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0), i64 noundef 1) #23, !dbg !16407
  call void @llvm.dbg.value(metadata i8* %call55, metadata !16300, metadata !DIExpression()), !dbg !16386
  %.pre = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16387, !tbaa !16390
  br label %for.inc, !dbg !16408

for.inc:                                          ; preds = %for.body, %if.then54
  %21 = phi i32 [ %.pre, %if.then54 ], [ %19, %for.body ], !dbg !16387
  %buf45.1 = phi i8* [ %call55, %if.then54 ], [ %call51, %for.body ], !dbg !16409
  call void @llvm.dbg.value(metadata i8* %buf45.1, metadata !16300, metadata !DIExpression()), !dbg !16386
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !16410
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !16303, metadata !DIExpression()), !dbg !16386
  %22 = sext i32 %21 to i64, !dbg !16391
  %cmp = icmp slt i64 %indvars.iv.next, %22, !dbg !16391
  br i1 %cmp, label %for.body, label %for.end, !dbg !16392, !llvm.loop !16411

for.end:                                          ; preds = %for.inc, %if.then44
  %buf45.0.lcssa = phi i8* [ %call46, %if.then44 ], [ %buf45.1, %for.inc ], !dbg !16386
  call void @addReplyBulkCString(%struct.redisClient* noundef %c, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0)) #22, !dbg !16413
  call void @addReplyBulkCString(%struct.redisClient* noundef %c, i8* noundef %buf45.0.lcssa) #22, !dbg !16414
  call void @sdsfree(i8* noundef %buf45.0.lcssa) #23, !dbg !16415
  %inc58 = add nsw i32 %matches.6, 1, !dbg !16416
  call void @llvm.dbg.value(metadata i32 %inc58, metadata !16290, metadata !DIExpression()), !dbg !16304
  br label %if.end59, !dbg !16417

if.end59:                                         ; preds = %for.end, %if.end41
  %matches.7 = phi i32 [ %inc58, %for.end ], [ %matches.6, %if.end41 ], !dbg !16304
  call void @llvm.dbg.value(metadata i32 %matches.7, metadata !16290, metadata !DIExpression()), !dbg !16304
  %23 = bitcast %struct.redisObject* %call to i8*, !dbg !16418
  call void @decrRefCount(i8* noundef %23) #22, !dbg !16419
  %call60 = call i8* (...) @sdsempty() #23, !dbg !16420
  %mul = shl nsw i32 %matches.7, 1, !dbg !16421
  %call61 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* noundef %call60, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 noundef %mul) #23, !dbg !16422
  %ptr62 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call1, i64 0, i32 0, !dbg !16423
  store i8* %call61, i8** %ptr62, align 8, !dbg !16424, !tbaa !1328
  ret void, !dbg !16425
}

declare !dbg !16426 dso_local i8* @zstrdup(i8* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline nounwind readonly uwtable willreturn
define internal i32 @yesnotoi(i8* noundef readonly %s) #9 !dbg !16429 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !16431, metadata !DIExpression()), !dbg !16432
  %call = tail call i32 @strcasecmp(i8* noundef %s, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.403, i64 0, i64 0)) #27, !dbg !16433
  %tobool.not = icmp eq i32 %call, 0, !dbg !16433
  br i1 %tobool.not, label %return, label %if.else, !dbg !16435

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @strcasecmp(i8* noundef %s, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0)) #27, !dbg !16436
  %tobool2.not = icmp ne i32 %call1, 0, !dbg !16436
  %. = sext i1 %tobool2.not to i32, !dbg !16438
  br label %return, !dbg !16438

return:                                           ; preds = %if.else, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ %., %if.else ], !dbg !16439
  ret i32 %retval.0, !dbg !16440
}

; Function Attrs: noinline nounwind uwtable
define internal void @stopAppendOnly() #0 !dbg !16441 {
entry:
  %statloc = alloca i32, align 4
  tail call void @flushAppendOnlyFile() #22, !dbg !16446
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16447, !tbaa !1042
  %call = tail call i32 @fsync(i32 noundef %0) #23, !dbg !16448
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16449, !tbaa !1042
  %call1 = tail call i32 @close(i32 noundef %1) #23, !dbg !16450
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16451, !tbaa !1042
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !16452, !tbaa !1050
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16453, !tbaa !1260
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !16454, !tbaa !732
  %cmp.not = icmp eq i32 %2, -1, !dbg !16455
  br i1 %cmp.not, label %if.end7, label %if.then, !dbg !16456

if.then:                                          ; preds = %entry
  %3 = bitcast i32* %statloc to i8*, !dbg !16457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !16457
  %call2 = tail call i32 @kill(i32 noundef %2, i32 noundef 9) #23, !dbg !16458
  %cmp3.not = icmp eq i32 %call2, -1, !dbg !16460
  br i1 %cmp3.not, label %if.end, label %if.then4, !dbg !16461

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata i32* %statloc, metadata !16443, metadata !DIExpression(DW_OP_deref)), !dbg !16462
  %call5 = call i32 @wait3(i32* noundef nonnull %statloc, i32 noundef 0, %struct.rusage* noundef null) #23, !dbg !16463
  br label %if.end, !dbg !16463

if.end:                                           ; preds = %if.then4, %if.then
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !16464, !tbaa !1010
  call void @sdsfree(i8* noundef %4) #23, !dbg !16465
  %call6 = call i8* (...) @sdsempty() #23, !dbg !16466
  store i8* %call6, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !16467, !tbaa !1010
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !16468, !tbaa !732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !16469
  br label %if.end7, !dbg !16470

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !16471
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @startAppendOnly() #0 !dbg !16472 {
entry:
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16473, !tbaa !1260
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !16474
  store i64 %call, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26), align 8, !dbg !16475, !tbaa !16476
  %0 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !16477, !tbaa !1029
  %call1 = tail call i32 (i8*, i32, ...) @open64(i8* noundef %0, i32 noundef 1089, i32 noundef 420) #23, !dbg !16478
  store i32 %call1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16479, !tbaa !1042
  %cmp = icmp eq i32 %call1, -1, !dbg !16480
  br i1 %cmp, label %return.sink.split, label %if.end, !dbg !16482

if.end:                                           ; preds = %entry
  %call4 = tail call i32 @rewriteAppendOnlyFileBackground() #22, !dbg !16483
  %cmp5 = icmp eq i32 %call4, -1, !dbg !16485
  br i1 %cmp5, label %if.then6, label %return, !dbg !16486

if.then6:                                         ; preds = %if.end
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16487, !tbaa !1260
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16489, !tbaa !1042
  %call7 = tail call i32 @close(i32 noundef %1) #23, !dbg !16490
  br label %return.sink.split, !dbg !16491

return.sink.split:                                ; preds = %entry, %if.then6
  %.sink = phi i8* [ getelementptr inbounds ([144 x i8], [144 x i8]* @.str.407, i64 0, i64 0), %if.then6 ], [ getelementptr inbounds ([74 x i8], [74 x i8]* @.str.406, i64 0, i64 0), %entry ]
  %call8 = tail call i32* @__errno_location() #25, !dbg !16492
  %2 = load i32, i32* %call8, align 4, !dbg !16492, !tbaa !926
  %call9 = tail call i8* @strerror(i32 noundef %2) #23, !dbg !16492
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef %.sink, i8* noundef %call9) #22, !dbg !16492
  br label %return, !dbg !16493

return:                                           ; preds = %return.sink.split, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %return.sink.split ], !dbg !16492
  ret i32 %retval.0, !dbg !16493
}

declare !dbg !16494 dso_local void @sdsfreesplitres(i8** noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @appendServerSaveParams(i64 noundef %seconds, i32 noundef %changes) #0 !dbg !16497 {
entry:
  call void @llvm.dbg.value(metadata i64 %seconds, metadata !16501, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata i32 %changes, metadata !16502, metadata !DIExpression()), !dbg !16503
  %0 = load i8*, i8** bitcast (%struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34) to i8**), align 8, !dbg !16504, !tbaa !16395
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16505, !tbaa !16390
  %add = add nsw i32 %1, 1, !dbg !16506
  %conv = sext i32 %add to i64, !dbg !16507
  %mul = shl nsw i64 %conv, 4, !dbg !16508
  %call = tail call i8* @zrealloc(i8* noundef %0, i64 noundef %mul) #23, !dbg !16509
  %2 = bitcast i8* %call to %struct.saveparam*, !dbg !16509
  store i8* %call, i8** bitcast (%struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34) to i8**), align 8, !dbg !16510, !tbaa !16395
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16511, !tbaa !16390
  %idxprom = sext i32 %3 to i64, !dbg !16512
  %seconds1 = getelementptr inbounds %struct.saveparam, %struct.saveparam* %2, i64 %idxprom, i32 0, !dbg !16513
  store i64 %seconds, i64* %seconds1, align 8, !dbg !16514, !tbaa !16397
  %changes4 = getelementptr inbounds %struct.saveparam, %struct.saveparam* %2, i64 %idxprom, i32 1, !dbg !16515
  store i32 %changes, i32* %changes4, align 8, !dbg !16516, !tbaa !16400
  %inc = add nsw i32 %3, 1, !dbg !16517
  store i32 %inc, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16517, !tbaa !16390
  ret void, !dbg !16518
}

; Function Attrs: noinline nounwind uwtable
define internal void @flushAppendOnlyFile() #0 !dbg !16519 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !16523, !tbaa !4591
  %call = tail call i64 @sdslen(i8* noundef %0) #23, !dbg !16525
  %cmp = icmp eq i64 %call, 0, !dbg !16526
  br i1 %cmp, label %cleanup, label %if.end, !dbg !16527

if.end:                                           ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16528, !tbaa !1042
  %2 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !16529, !tbaa !4591
  %call1 = tail call i64 @sdslen(i8* noundef %2) #23, !dbg !16530
  %call2 = tail call i64 @write(i32 noundef %1, i8* noundef %2, i64 noundef %call1) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i64 %call2, metadata !16522, metadata !DIExpression()), !dbg !16532
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !16533, !tbaa !4591
  %call3 = tail call i64 @sdslen(i8* noundef %3) #23, !dbg !16535
  %sext = shl i64 %call3, 32, !dbg !16536
  %conv4 = ashr exact i64 %sext, 32, !dbg !16536
  %cmp5.not = icmp eq i64 %call2, %conv4, !dbg !16537
  br i1 %cmp5.not, label %if.end16, label %if.then7, !dbg !16538

if.then7:                                         ; preds = %if.end
  %cmp8 = icmp eq i64 %call2, -1, !dbg !16539
  %call11 = tail call i32* @__errno_location() #25, !dbg !16542
  %4 = load i32, i32* %call11, align 4, !dbg !16542, !tbaa !926
  %call12 = tail call i8* @strerror(i32 noundef %4) #23, !dbg !16542
  %. = select i1 %cmp8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.404, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.405, i64 0, i64 0)
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef %., i8* noundef %call12) #22, !dbg !16542
  tail call void @exit(i32 noundef 1) #26, !dbg !16543
  unreachable, !dbg !16543

if.end16:                                         ; preds = %if.end
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !16544, !tbaa !4591
  tail call void @sdsfree(i8* noundef %5) #23, !dbg !16545
  %call17 = tail call i8* (...) @sdsempty() #23, !dbg !16546
  store i8* %call17, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !16547, !tbaa !4591
  %call18 = tail call i64 @time(i64* noundef null) #23, !dbg !16548
  call void @llvm.dbg.value(metadata i64 %call18, metadata !16521, metadata !DIExpression()), !dbg !16532
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16549, !tbaa !2139
  switch i32 %6, label %cleanup [
    i32 1, label %if.then25
    i32 2, label %land.lhs.true
  ], !dbg !16551

land.lhs.true:                                    ; preds = %if.end16
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26), align 8, !dbg !16552, !tbaa !16476
  %sub = sub nsw i64 %call18, %7, !dbg !16553
  %cmp23 = icmp sgt i64 %sub, 1, !dbg !16554
  br i1 %cmp23, label %if.then25, label %cleanup, !dbg !16555

if.then25:                                        ; preds = %if.end16, %land.lhs.true
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16556, !tbaa !1042
  %call26 = tail call i32 @fdatasync(i32 noundef %8) #23, !dbg !16558
  store i64 %call18, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26), align 8, !dbg !16559, !tbaa !16476
  br label %cleanup, !dbg !16560

cleanup:                                          ; preds = %land.lhs.true, %if.then25, %if.end16, %entry
  ret void, !dbg !16561
}

; Function Attrs: nounwind
declare !dbg !16562 dso_local i32 @wait3(i32* noundef, i32 noundef, %struct.rusage* noundef) local_unnamed_addr #3

declare !dbg !16642 dso_local i32 @fdatasync(i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @stringmatch(i8* noundef %pattern, i8* noundef %string, i32 noundef %nocase) #0 !dbg !16643 {
entry:
  call void @llvm.dbg.value(metadata i8* %pattern, metadata !16647, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i8* %string, metadata !16648, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 %nocase, metadata !16649, metadata !DIExpression()), !dbg !16650
  %call = tail call i64 @strlen(i8* noundef %pattern) #27, !dbg !16651
  %conv = trunc i64 %call to i32, !dbg !16651
  %call1 = tail call i64 @strlen(i8* noundef %string) #27, !dbg !16652
  %conv2 = trunc i64 %call1 to i32, !dbg !16652
  %call3 = tail call i32 @stringmatchlen(i8* noundef %pattern, i32 noundef %conv, i8* noundef %string, i32 noundef %conv2, i32 noundef %nocase) #22, !dbg !16653
  ret i32 %call3, !dbg !16654
}

; Function Attrs: noinline nounwind uwtable
define internal void @addReplyBulkCString(%struct.redisClient* noundef %c, i8* noundef %s) #0 !dbg !16655 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisClient* %c, metadata !16659, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i8* %s, metadata !16660, metadata !DIExpression()), !dbg !16664
  %cmp = icmp eq i8* %s, null, !dbg !16665
  br i1 %cmp, label %if.then, label %if.else, !dbg !16666

if.then:                                          ; preds = %entry
  %0 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !16667, !tbaa !8818
  tail call void @addReply(%struct.redisClient* noundef %c, %struct.redisObject* noundef %0) #22, !dbg !16669
  br label %if.end, !dbg !16670

if.else:                                          ; preds = %entry
  %call = tail call i64 @strlen(i8* noundef nonnull %s) #27, !dbg !16671
  %call1 = tail call %struct.redisObject* @createStringObject(i8* noundef nonnull %s, i64 noundef %call) #22, !dbg !16672
  call void @llvm.dbg.value(metadata %struct.redisObject* %call1, metadata !16661, metadata !DIExpression()), !dbg !16673
  tail call void @addReplyBulk(%struct.redisClient* noundef %c, %struct.redisObject* noundef %call1) #22, !dbg !16674
  %1 = bitcast %struct.redisObject* %call1 to i8*, !dbg !16675
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !16676
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16677
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pubsubPublishMessage(%struct.redisObject* noundef %channel, %struct.redisObject* noundef %message) #0 !dbg !16678 {
entry:
  %li = alloca %struct.listIter, align 8
  %li2 = alloca %struct.listIter, align 8
  call void @llvm.dbg.value(metadata %struct.redisObject* %channel, metadata !16680, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct.redisObject* %message, metadata !16681, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16682, metadata !DIExpression()), !dbg !16697
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !16698
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !16698
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !16685, metadata !DIExpression()), !dbg !16699
  %1 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !16700, !tbaa !4116
  %2 = bitcast %struct.redisObject* %channel to i8*, !dbg !16701
  %call = tail call %struct.dictEntry* @dictFind(%struct.dict* noundef %1, i8* noundef %2) #23, !dbg !16702
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call, metadata !16683, metadata !DIExpression()), !dbg !16697
  %tobool.not = icmp eq %struct.dictEntry* %call, null, !dbg !16703
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !16704

if.then:                                          ; preds = %entry
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call, i64 0, i32 1, !dbg !16705
  %3 = bitcast i8** %val to %struct.list**, !dbg !16705
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !16705, !tbaa !2458
  call void @llvm.dbg.value(metadata %struct.list* %4, metadata !16686, metadata !DIExpression()), !dbg !16706
  %5 = bitcast %struct.listIter* %li2 to i8*, !dbg !16707
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #24, !dbg !16707
  call void @llvm.dbg.declare(metadata %struct.listIter* %li2, metadata !16690, metadata !DIExpression()), !dbg !16708
  call void @listRewind(%struct.list* noundef %4, %struct.listIter* noundef nonnull %li2) #23, !dbg !16709
  call void @llvm.dbg.value(metadata i32 0, metadata !16682, metadata !DIExpression()), !dbg !16697
  %call358 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li2) #23, !dbg !16710
  call void @llvm.dbg.value(metadata %struct.listNode* %call358, metadata !16689, metadata !DIExpression()), !dbg !16706
  %cmp.not59 = icmp eq %struct.listNode* %call358, null, !dbg !16711
  br i1 %cmp.not59, label %while.end, label %while.body, !dbg !16712

while.body:                                       ; preds = %if.then, %while.body
  %call361 = phi %struct.listNode* [ %call3, %while.body ], [ %call358, %if.then ]
  %receivers.060 = phi i32 [ %inc, %while.body ], [ 0, %if.then ]
  call void @llvm.dbg.value(metadata i32 %receivers.060, metadata !16682, metadata !DIExpression()), !dbg !16697
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call361, i64 0, i32 2, !dbg !16713
  %6 = bitcast i8** %value to %struct.redisClient**, !dbg !16713
  %7 = load %struct.redisClient*, %struct.redisClient** %6, align 8, !dbg !16713, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %7, metadata !16691, metadata !DIExpression()), !dbg !16714
  %8 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !16715, !tbaa !4135
  call void @addReply(%struct.redisClient* noundef %7, %struct.redisObject* noundef %8) #22, !dbg !16716
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 29), align 8, !dbg !16717, !tbaa !16718
  call void @addReply(%struct.redisClient* noundef %7, %struct.redisObject* noundef %9) #22, !dbg !16719
  call void @addReplyBulk(%struct.redisClient* noundef %7, %struct.redisObject* noundef %channel) #22, !dbg !16720
  call void @addReplyBulk(%struct.redisClient* noundef %7, %struct.redisObject* noundef %message) #22, !dbg !16721
  %inc = add nuw nsw i32 %receivers.060, 1, !dbg !16722
  call void @llvm.dbg.value(metadata i32 %inc, metadata !16682, metadata !DIExpression()), !dbg !16697
  %call3 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li2) #23, !dbg !16710
  call void @llvm.dbg.value(metadata %struct.listNode* %call3, metadata !16689, metadata !DIExpression()), !dbg !16706
  %cmp.not = icmp eq %struct.listNode* %call3, null, !dbg !16711
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !16712, !llvm.loop !16723

while.end:                                        ; preds = %while.body, %if.then
  %receivers.0.lcssa = phi i32 [ 0, %if.then ], [ %inc, %while.body ], !dbg !16697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #24, !dbg !16725
  br label %if.end, !dbg !16726

if.end:                                           ; preds = %while.end, %entry
  %receivers.1 = phi i32 [ %receivers.0.lcssa, %while.end ], [ 0, %entry ], !dbg !16727
  call void @llvm.dbg.value(metadata i32 %receivers.1, metadata !16682, metadata !DIExpression()), !dbg !16697
  %10 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !16728, !tbaa !4390
  %len = getelementptr inbounds %struct.list, %struct.list* %10, i64 0, i32 5, !dbg !16728
  %11 = load i32, i32* %len, align 8, !dbg !16728, !tbaa !1358
  %tobool4.not = icmp eq i32 %11, 0, !dbg !16728
  br i1 %tobool4.not, label %if.end30, label %if.then5, !dbg !16729

if.then5:                                         ; preds = %if.end
  call void @listRewind(%struct.list* noundef nonnull %10, %struct.listIter* noundef nonnull %li) #23, !dbg !16730
  %call6 = call %struct.redisObject* @getDecodedObject(%struct.redisObject* noundef %channel) #22, !dbg !16731
  call void @llvm.dbg.value(metadata %struct.redisObject* %call6, metadata !16680, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %receivers.1, metadata !16682, metadata !DIExpression()), !dbg !16697
  %call862 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.listNode* %call862, metadata !16684, metadata !DIExpression()), !dbg !16697
  %cmp9.not63 = icmp eq %struct.listNode* %call862, null, !dbg !16733
  br i1 %cmp9.not63, label %while.end29, label %while.body10.lr.ph, !dbg !16734

while.body10.lr.ph:                               ; preds = %if.then5
  %ptr15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call6, i64 0, i32 0
  br label %while.body10, !dbg !16734

while.body10:                                     ; preds = %while.body10.lr.ph, %if.end28
  %call865 = phi %struct.listNode* [ %call862, %while.body10.lr.ph ], [ %call8, %if.end28 ]
  %receivers.264 = phi i32 [ %receivers.1, %while.body10.lr.ph ], [ %receivers.3, %if.end28 ]
  call void @llvm.dbg.value(metadata i32 %receivers.264, metadata !16682, metadata !DIExpression()), !dbg !16697
  %value11 = getelementptr inbounds %struct.listNode, %struct.listNode* %call865, i64 0, i32 2, !dbg !16735
  %12 = bitcast i8** %value11 to %struct.pubsubPattern**, !dbg !16735
  %13 = load %struct.pubsubPattern*, %struct.pubsubPattern** %12, align 8, !dbg !16735, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.pubsubPattern* %13, metadata !16693, metadata !DIExpression()), !dbg !16736
  %pattern = getelementptr inbounds %struct.pubsubPattern, %struct.pubsubPattern* %13, i64 0, i32 1, !dbg !16737
  %14 = load %struct.redisObject*, %struct.redisObject** %pattern, align 8, !dbg !16737, !tbaa !4384
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %14, i64 0, i32 0, !dbg !16739
  %15 = load i8*, i8** %ptr, align 8, !dbg !16739, !tbaa !1328
  %call14 = call i64 @sdslen(i8* noundef %15) #23, !dbg !16740
  %conv = trunc i64 %call14 to i32, !dbg !16740
  %16 = load i8*, i8** %ptr15, align 8, !dbg !16741, !tbaa !1328
  %call17 = call i64 @sdslen(i8* noundef %16) #23, !dbg !16742
  %conv18 = trunc i64 %call17 to i32, !dbg !16742
  %call19 = call i32 @stringmatchlen(i8* noundef %15, i32 noundef %conv, i8* noundef %16, i32 noundef %conv18, i32 noundef 0) #22, !dbg !16743
  %tobool20.not = icmp eq i32 %call19, 0, !dbg !16743
  br i1 %tobool20.not, label %if.end28, label %if.then21, !dbg !16744

if.then21:                                        ; preds = %while.body10
  %client = getelementptr inbounds %struct.pubsubPattern, %struct.pubsubPattern* %13, i64 0, i32 0, !dbg !16745
  %17 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !16745, !tbaa !4388
  %18 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 34), align 8, !dbg !16747, !tbaa !16748
  call void @addReply(%struct.redisClient* noundef %17, %struct.redisObject* noundef %18) #22, !dbg !16749
  %19 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !16750, !tbaa !4388
  %20 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 30), align 8, !dbg !16751, !tbaa !16752
  call void @addReply(%struct.redisClient* noundef %19, %struct.redisObject* noundef %20) #22, !dbg !16753
  %21 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !16754, !tbaa !4388
  %22 = load %struct.redisObject*, %struct.redisObject** %pattern, align 8, !dbg !16755, !tbaa !4384
  call void @addReplyBulk(%struct.redisClient* noundef %21, %struct.redisObject* noundef %22) #22, !dbg !16756
  %23 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !16757, !tbaa !4388
  call void @addReplyBulk(%struct.redisClient* noundef %23, %struct.redisObject* noundef nonnull %call6) #22, !dbg !16758
  %24 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !16759, !tbaa !4388
  call void @addReplyBulk(%struct.redisClient* noundef %24, %struct.redisObject* noundef %message) #22, !dbg !16760
  %inc27 = add nsw i32 %receivers.264, 1, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !16682, metadata !DIExpression()), !dbg !16697
  br label %if.end28, !dbg !16762

if.end28:                                         ; preds = %if.then21, %while.body10
  %receivers.3 = phi i32 [ %inc27, %if.then21 ], [ %receivers.264, %while.body10 ], !dbg !16697
  call void @llvm.dbg.value(metadata i32 %receivers.3, metadata !16682, metadata !DIExpression()), !dbg !16697
  %call8 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.listNode* %call8, metadata !16684, metadata !DIExpression()), !dbg !16697
  %cmp9.not = icmp eq %struct.listNode* %call8, null, !dbg !16733
  br i1 %cmp9.not, label %while.end29, label %while.body10, !dbg !16734, !llvm.loop !16763

while.end29:                                      ; preds = %if.end28, %if.then5
  %receivers.2.lcssa = phi i32 [ %receivers.1, %if.then5 ], [ %receivers.3, %if.end28 ], !dbg !16697
  %25 = bitcast %struct.redisObject* %call6 to i8*, !dbg !16765
  call void @decrRefCount(i8* noundef %25) #22, !dbg !16766
  br label %if.end30, !dbg !16767

if.end30:                                         ; preds = %while.end29, %if.end
  %receivers.4 = phi i32 [ %receivers.2.lcssa, %while.end29 ], [ %receivers.1, %if.end ], !dbg !16727
  call void @llvm.dbg.value(metadata i32 %receivers.4, metadata !16682, metadata !DIExpression()), !dbg !16697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !16768
  ret i32 %receivers.4, !dbg !16769
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @isStringRepresentableAsLong(i8* noundef %s, i64* noundef writeonly %longval) #0 !dbg !16770 {
entry:
  %buf = alloca [32 x i8], align 16
  %endptr = alloca i8*, align 8
  call void @llvm.dbg.value(metadata i8* %s, metadata !16774, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata i64* %longval, metadata !16775, metadata !DIExpression()), !dbg !16780
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !16781
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #24, !dbg !16781
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !16776, metadata !DIExpression()), !dbg !16782
  %1 = bitcast i8** %endptr to i8*, !dbg !16781
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !16781
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !16777, metadata !DIExpression(DW_OP_deref)), !dbg !16780
  %call = call i64 @strtol(i8* noundef %s, i8** noundef nonnull %endptr, i32 noundef 10) #23, !dbg !16783
  call void @llvm.dbg.value(metadata i64 %call, metadata !16778, metadata !DIExpression()), !dbg !16780
  %2 = load i8*, i8** %endptr, align 8, !dbg !16784, !tbaa !782
  call void @llvm.dbg.value(metadata i8* %2, metadata !16777, metadata !DIExpression()), !dbg !16780
  %3 = load i8, i8* %2, align 1, !dbg !16784, !tbaa !795
  %cmp.not = icmp eq i8 %3, 0, !dbg !16786
  br i1 %cmp.not, label %if.end, label %cleanup, !dbg !16787

if.end:                                           ; preds = %entry
  %call2 = call i32 @ll2string(i8* noundef nonnull %0, i64 noundef 32, i64 noundef %call) #22, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %call2, metadata !16779, metadata !DIExpression()), !dbg !16780
  %call3 = call i64 @sdslen(i8* noundef %s) #23, !dbg !16789
  %conv4 = zext i32 %call2 to i64, !dbg !16791
  %cmp5.not = icmp eq i64 %call3, %conv4, !dbg !16792
  br i1 %cmp5.not, label %lor.lhs.false, label %cleanup, !dbg !16793

lor.lhs.false:                                    ; preds = %if.end
  %conv8 = sext i32 %call2 to i64, !dbg !16794
  %call9 = call i32 @memcmp(i8* noundef nonnull %0, i8* noundef %s, i64 noundef %conv8) #27, !dbg !16795
  %tobool.not = icmp eq i32 %call9, 0, !dbg !16795
  br i1 %tobool.not, label %if.end11, label %cleanup, !dbg !16796

if.end11:                                         ; preds = %lor.lhs.false
  %tobool12.not = icmp eq i64* %longval, null, !dbg !16797
  br i1 %tobool12.not, label %cleanup, label %if.then13, !dbg !16799

if.then13:                                        ; preds = %if.end11
  store i64 %call, i64* %longval, align 8, !dbg !16800, !tbaa !790
  br label %cleanup, !dbg !16801

cleanup:                                          ; preds = %if.end11, %if.then13, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ -1, %lor.lhs.false ], [ -1, %if.end ], [ 0, %if.then13 ], [ 0, %if.end11 ], !dbg !16780
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !16802
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #24, !dbg !16802
  ret i32 %retval.0, !dbg !16802
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeStringObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !16803 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16805, metadata !DIExpression()), !dbg !16806
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !16807
  %0 = load i8, i8* %encoding, align 1, !dbg !16807, !tbaa !1529
  %cmp = icmp eq i8 %0, 0, !dbg !16809
  br i1 %cmp, label %if.then, label %if.end, !dbg !16810

if.then:                                          ; preds = %entry
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !16811
  %1 = load i8*, i8** %ptr, align 8, !dbg !16811, !tbaa !1328
  tail call void @sdsfree(i8* noundef %1) #23, !dbg !16813
  br label %if.end, !dbg !16814

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16815
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeListObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !16816 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16818, metadata !DIExpression()), !dbg !16819
  %0 = bitcast %struct.redisObject* %o to %struct.list**, !dbg !16820
  %1 = load %struct.list*, %struct.list** %0, align 8, !dbg !16820, !tbaa !1328
  tail call void @listRelease(%struct.list* noundef %1) #23, !dbg !16821
  ret void, !dbg !16822
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeSetObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !16823 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16825, metadata !DIExpression()), !dbg !16826
  %0 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !16827
  %1 = load %struct.dict*, %struct.dict** %0, align 8, !dbg !16827, !tbaa !1328
  tail call void @dictRelease(%struct.dict* noundef %1) #23, !dbg !16828
  ret void, !dbg !16829
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeZsetObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !16830 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16832, metadata !DIExpression()), !dbg !16834
  %ptr = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !16835
  %0 = load i8*, i8** %ptr, align 8, !dbg !16835, !tbaa !1328
  call void @llvm.dbg.value(metadata i8* %0, metadata !16833, metadata !DIExpression()), !dbg !16834
  %dict = bitcast i8* %0 to %struct.dict**, !dbg !16836
  %1 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !16836, !tbaa !6133
  tail call void @dictRelease(%struct.dict* noundef %1) #23, !dbg !16837
  %zsl = getelementptr inbounds i8, i8* %0, i64 8, !dbg !16838
  %2 = bitcast i8* %zsl to %struct.zskiplist**, !dbg !16838
  %3 = load %struct.zskiplist*, %struct.zskiplist** %2, align 8, !dbg !16838, !tbaa !6138
  tail call void @zslFree(%struct.zskiplist* noundef %3) #22, !dbg !16839
  tail call void @zfree(i8* noundef %0) #23, !dbg !16840
  ret void, !dbg !16841
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeHashObject(%struct.redisObject* nocapture noundef readonly %o) #0 !dbg !16842 {
entry:
  call void @llvm.dbg.value(metadata %struct.redisObject* %o, metadata !16844, metadata !DIExpression()), !dbg !16845
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 2, !dbg !16846
  %0 = load i8, i8* %encoding, align 1, !dbg !16846, !tbaa !1529
  switch i8 %0, label %sw.default [
    i8 3, label %sw.bb
    i8 2, label %sw.bb1
  ], !dbg !16847

sw.bb:                                            ; preds = %entry
  %1 = bitcast %struct.redisObject* %o to %struct.dict**, !dbg !16848
  %2 = load %struct.dict*, %struct.dict** %1, align 8, !dbg !16848, !tbaa !1328
  tail call void @dictRelease(%struct.dict* noundef %2) #23, !dbg !16850
  br label %sw.epilog, !dbg !16851

sw.bb1:                                           ; preds = %entry
  %ptr2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %o, i64 0, i32 0, !dbg !16852
  %3 = load i8*, i8** %ptr2, align 8, !dbg !16852, !tbaa !1328
  tail call void @zfree(i8* noundef %3) #23, !dbg !16853
  br label %sw.epilog, !dbg !16854

sw.default:                                       ; preds = %entry
  tail call void @_redisPanic(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.411, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 3017) #22, !dbg !16855
  tail call void @_exit(i32 noundef 1) #26, !dbg !16855
  unreachable, !dbg !16855

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  ret void, !dbg !16856
}

; Function Attrs: noinline nounwind uwtable
define internal void @zslFree(%struct.zskiplist* noundef %zsl) #0 !dbg !16857 {
entry:
  call void @llvm.dbg.value(metadata %struct.zskiplist* %zsl, metadata !16861, metadata !DIExpression()), !dbg !16864
  %header = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %zsl, i64 0, i32 0, !dbg !16865
  %0 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !16865, !tbaa !1178
  %forward = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %0, i64 0, i32 0, !dbg !16866
  %1 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward, align 8, !dbg !16866, !tbaa !1141
  %2 = load %struct.zskiplistNode*, %struct.zskiplistNode** %1, align 8, !dbg !16867, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %2, metadata !16862, metadata !DIExpression()), !dbg !16864
  %3 = bitcast %struct.zskiplistNode** %1 to i8*, !dbg !16868
  tail call void @zfree(i8* noundef nonnull %3) #23, !dbg !16869
  %4 = load %struct.zskiplistNode*, %struct.zskiplistNode** %header, align 8, !dbg !16870, !tbaa !1178
  %span = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %4, i64 0, i32 2, !dbg !16871
  %5 = bitcast i32** %span to i8**, !dbg !16871
  %6 = load i8*, i8** %5, align 8, !dbg !16871, !tbaa !1148
  tail call void @zfree(i8* noundef %6) #23, !dbg !16872
  %7 = bitcast %struct.zskiplist* %zsl to i8**, !dbg !16873
  %8 = load i8*, i8** %7, align 8, !dbg !16873, !tbaa !1178
  tail call void @zfree(i8* noundef %8) #23, !dbg !16874
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %2, metadata !16862, metadata !DIExpression()), !dbg !16864
  %tobool.not15 = icmp eq %struct.zskiplistNode* %2, null, !dbg !16875
  br i1 %tobool.not15, label %while.end, label %while.body, !dbg !16875

while.body:                                       ; preds = %entry, %while.body
  %node.016 = phi %struct.zskiplistNode* [ %10, %while.body ], [ %2, %entry ]
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %node.016, metadata !16862, metadata !DIExpression()), !dbg !16864
  %forward5 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %node.016, i64 0, i32 0, !dbg !16876
  %9 = load %struct.zskiplistNode**, %struct.zskiplistNode*** %forward5, align 8, !dbg !16876, !tbaa !1141
  %10 = load %struct.zskiplistNode*, %struct.zskiplistNode** %9, align 8, !dbg !16878, !tbaa !782
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %10, metadata !16863, metadata !DIExpression()), !dbg !16864
  tail call void @zslFreeNode(%struct.zskiplistNode* noundef nonnull %node.016) #22, !dbg !16879
  call void @llvm.dbg.value(metadata %struct.zskiplistNode* %10, metadata !16862, metadata !DIExpression()), !dbg !16864
  %tobool.not = icmp eq %struct.zskiplistNode* %10, null, !dbg !16875
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !16875, !llvm.loop !16880

while.end:                                        ; preds = %while.body, %entry
  %11 = bitcast %struct.zskiplist* %zsl to i8*, !dbg !16882
  tail call void @zfree(i8* noundef %11) #23, !dbg !16883
  ret void, !dbg !16884
}

; Function Attrs: noinline nounwind uwtable
define internal void @initServerConfig() #0 !dbg !16885 {
entry:
  store i32 16, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !16886, !tbaa !2013
  store i32 6379, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !16887, !tbaa !1824
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 8, !dbg !16888, !tbaa !774
  store i32 300, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !16889, !tbaa !1910
  store %struct.saveparam* null, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 8, !dbg !16890, !tbaa !16395
  store <2 x i8*> zeroinitializer, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36) to <2 x i8*>*), align 8, !dbg !16891, !tbaa !782
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19), align 4, !dbg !16892, !tbaa !2074
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !16893, !tbaa !1798
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !16894, !tbaa !1260
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !16895, !tbaa !2139
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !16896
  store i64 %call, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26), align 8, !dbg !16897, !tbaa !16476
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !16898, !tbaa !1042
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !16899, !tbaa !1050
  %call1 = tail call i8* @zstrdup(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.412, i64 0, i64 0)) #23, !dbg !16900
  store i8* %call1, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29), align 8, !dbg !16901, !tbaa !2166
  %call2 = tail call i8* @zstrdup(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.413, i64 0, i64 0)) #23, !dbg !16902
  store i8* %call2, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !16903, !tbaa !913
  %call3 = tail call i8* @zstrdup(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.414, i64 0, i64 0)) #23, !dbg !16904
  store i8* %call3, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !16905, !tbaa !1029
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !16906, !tbaa !2159
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !16907, !tbaa !2085
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 4, !dbg !16908, !tbaa !2096
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 49), align 4, !dbg !16909, !tbaa !2031
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !16910, !tbaa !2921
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !16911, !tbaa !2040
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !16912, !tbaa !1384
  %call4 = tail call i8* @zstrdup(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.415, i64 0, i64 0)) #23, !dbg !16913
  store i8* %call4, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !16914, !tbaa !2197
  store <2 x i64> <i64 256, i64 104857600>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58) to <2 x i64>*), align 8, !dbg !16915, !tbaa !790
  store i64 1073741824, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !16916, !tbaa !1379
  store i32 4, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !16917, !tbaa !2236
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 4, !dbg !16918, !tbaa !2545
  store <2 x i64> <i64 64, i64 512>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61) to <2 x i64>*), align 8, !dbg !16919, !tbaa !790
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 4, !dbg !16920, !tbaa !16921
  tail call void @resetServerSaveParams() #22, !dbg !16922
  tail call void @appendServerSaveParams(i64 noundef 3600, i32 noundef 1) #22, !dbg !16923
  tail call void @appendServerSaveParams(i64 noundef 300, i32 noundef 100) #22, !dbg !16924
  tail call void @appendServerSaveParams(i64 noundef 60, i32 noundef 10000) #22, !dbg !16925
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 43), align 8, !dbg !16926, !tbaa !16927
  store <2 x i8*> zeroinitializer, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44) to <2 x i8*>*), align 8, !dbg !16928, !tbaa !782
  store i32 6379, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !16929, !tbaa !2053
  store %struct.redisClient* null, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !16930, !tbaa !2719
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !16931, !tbaa !2055
  store double 0x7FF0000000000000, double* @R_PosInf, align 8, !dbg !16932, !tbaa !6140
  store double 0xFFF0000000000000, double* @R_NegInf, align 8, !dbg !16933, !tbaa !6140
  store double 0x7FF8000000000000, double* @R_Nan, align 8, !dbg !16934, !tbaa !6140
  ret void, !dbg !16935
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @version() #19 !dbg !16936 {
entry:
  %call = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.416, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0)) #23, !dbg !16937
  tail call void @exit(i32 noundef 0) #26, !dbg !16938
  unreachable, !dbg !16938
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @usage() #19 !dbg !16939 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16940, !tbaa !782
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %0, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.417, i64 0, i64 0)) #23, !dbg !16941
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16942, !tbaa !782
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.418, i64 0, i64 0)) #23, !dbg !16943
  tail call void @exit(i32 noundef 1) #26, !dbg !16944
  unreachable, !dbg !16944
}

; Function Attrs: noinline nounwind uwtable
define internal void @resetServerSaveParams() #0 !dbg !16945 {
entry:
  %0 = load i8*, i8** bitcast (%struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34) to i8**), align 8, !dbg !16946, !tbaa !16395
  tail call void @zfree(i8* noundef %0) #23, !dbg !16947
  store %struct.saveparam* null, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 8, !dbg !16948, !tbaa !16395
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !16949, !tbaa !16390
  ret void, !dbg !16950
}

declare !dbg !16951 dso_local i8* @sdstrim(i8* noundef, i8* noundef) local_unnamed_addr #4

declare !dbg !16954 dso_local void @sdstolower(i8* noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !16955 dso_local i32 @chdir(i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i64 @memtoll(i8* noundef %p) unnamed_addr #0 !dbg !16956 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %p, metadata !16960, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32* null, metadata !16961, metadata !DIExpression()), !dbg !16967
  %0 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !16968
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #24, !dbg !16968
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !16963, metadata !DIExpression()), !dbg !16969
  call void @llvm.dbg.value(metadata i8* %p, metadata !16962, metadata !DIExpression()), !dbg !16967
  %1 = load i8, i8* %p, align 1, !dbg !16970, !tbaa !795
  %cmp = icmp eq i8 %1, 45, !dbg !16972
  %u.0.idx = zext i1 %cmp to i64, !dbg !16973
  %u.0 = getelementptr i8, i8* %p, i64 %u.0.idx, !dbg !16973
  call void @llvm.dbg.value(metadata i8* %u.0, metadata !16962, metadata !DIExpression()), !dbg !16967
  %2 = load i8, i8* %u.0, align 1, !dbg !16974, !tbaa !795
  %tobool5.not3 = icmp eq i8 %2, 0, !dbg !16974
  br i1 %tobool5.not3, label %if.end49, label %land.rhs.lr.ph, !dbg !16975

land.rhs.lr.ph:                                   ; preds = %entry
  %call = tail call i16** @__ctype_b_loc() #25, !dbg !16967
  %3 = load i16*, i16** %call, align 8, !tbaa !782
  br label %land.rhs, !dbg !16975

land.rhs:                                         ; preds = %land.rhs.lr.ph, %while.body
  %4 = phi i8 [ %2, %land.rhs.lr.ph ], [ %7, %while.body ]
  %u.14 = phi i8* [ %u.0, %land.rhs.lr.ph ], [ %incdec.ptr9, %while.body ]
  call void @llvm.dbg.value(metadata i8* %u.14, metadata !16962, metadata !DIExpression()), !dbg !16967
  %idxprom = sext i8 %4 to i64, !dbg !16976
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !16976
  %5 = load i16, i16* %arrayidx, align 2, !dbg !16976, !tbaa !7661
  %6 = and i16 %5, 2048, !dbg !16976
  %tobool8.not = icmp eq i16 %6, 0, !dbg !16975
  br i1 %tobool8.not, label %lor.lhs.false, label %while.body, !dbg !16977

while.body:                                       ; preds = %land.rhs
  %incdec.ptr9 = getelementptr inbounds i8, i8* %u.14, i64 1, !dbg !16978
  call void @llvm.dbg.value(metadata i8* %incdec.ptr9, metadata !16962, metadata !DIExpression()), !dbg !16967
  %7 = load i8, i8* %incdec.ptr9, align 1, !dbg !16974, !tbaa !795
  %tobool5.not = icmp eq i8 %7, 0, !dbg !16974
  br i1 %tobool5.not, label %if.end49, label %land.rhs, !dbg !16975, !llvm.loop !16979

lor.lhs.false:                                    ; preds = %land.rhs
  %call13 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.461, i64 0, i64 0)) #27, !dbg !16980
  %tobool14.not = icmp eq i32 %call13, 0, !dbg !16980
  br i1 %tobool14.not, label %if.end49, label %if.else, !dbg !16982

if.else:                                          ; preds = %lor.lhs.false
  %call16 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.462, i64 0, i64 0)) #27, !dbg !16983
  %tobool17.not = icmp eq i32 %call16, 0, !dbg !16983
  br i1 %tobool17.not, label %if.end49, label %if.else19, !dbg !16985

if.else19:                                        ; preds = %if.else
  %call20 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.463, i64 0, i64 0)) #27, !dbg !16986
  %tobool21.not = icmp eq i32 %call20, 0, !dbg !16986
  br i1 %tobool21.not, label %if.end49, label %if.else23, !dbg !16988

if.else23:                                        ; preds = %if.else19
  %call24 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.464, i64 0, i64 0)) #27, !dbg !16989
  %tobool25.not = icmp eq i32 %call24, 0, !dbg !16989
  br i1 %tobool25.not, label %if.end49, label %if.else27, !dbg !16991

if.else27:                                        ; preds = %if.else23
  %call28 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.465, i64 0, i64 0)) #27, !dbg !16992
  %tobool29.not = icmp eq i32 %call28, 0, !dbg !16992
  br i1 %tobool29.not, label %if.end49, label %if.else31, !dbg !16994

if.else31:                                        ; preds = %if.else27
  %call32 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.466, i64 0, i64 0)) #27, !dbg !16995
  %tobool33.not = icmp eq i32 %call32, 0, !dbg !16995
  br i1 %tobool33.not, label %if.end49, label %if.else35, !dbg !16997

if.else35:                                        ; preds = %if.else31
  %call36 = tail call i32 @strcasecmp(i8* noundef nonnull %u.14, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.467, i64 0, i64 0)) #27, !dbg !16998
  %tobool37.not = icmp eq i32 %call36, 0, !dbg !16998
  %spec.select = select i1 %tobool37.not, i64 1073741824, i64 1, !dbg !17000
  br label %if.end49, !dbg !17000

if.end49:                                         ; preds = %while.body, %entry, %if.else35, %if.else31, %if.else27, %if.else23, %if.else19, %if.else, %lor.lhs.false
  %u.12 = phi i8* [ %u.14, %lor.lhs.false ], [ %u.14, %if.else ], [ %u.14, %if.else19 ], [ %u.14, %if.else23 ], [ %u.14, %if.else27 ], [ %u.14, %if.else31 ], [ %u.14, %if.else35 ], [ %u.0, %entry ], [ %incdec.ptr9, %while.body ]
  %mul.0 = phi i64 [ 1, %lor.lhs.false ], [ 1000, %if.else ], [ 1024, %if.else19 ], [ 1000000, %if.else23 ], [ 1048576, %if.else27 ], [ 1000000000, %if.else31 ], [ %spec.select, %if.else35 ], [ 1, %entry ], [ 1, %while.body ], !dbg !17001
  call void @llvm.dbg.value(metadata i64 %mul.0, metadata !16964, metadata !DIExpression()), !dbg !16967
  %sub.ptr.lhs.cast = ptrtoint i8* %u.12 to i64, !dbg !17002
  %sub.ptr.rhs.cast = ptrtoint i8* %p to i64, !dbg !17002
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17002
  %conv51 = and i64 %sub.ptr.sub, 4294967295, !dbg !17003
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub, metadata !16966, metadata !DIExpression()), !dbg !16967
  %cmp52 = icmp ugt i64 %conv51, 127, !dbg !17005
  br i1 %cmp52, label %cleanup, label %if.end58, !dbg !17006

if.end58:                                         ; preds = %if.end49
  %call60 = call i8* @memcpy(i8* noundef nonnull %0, i8* noundef nonnull %p, i64 noundef %conv51) #23, !dbg !17007
  %arrayidx62 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 %conv51, !dbg !17008
  store i8 0, i8* %arrayidx62, align 1, !dbg !17009, !tbaa !795
  %call64 = call i64 @strtoll(i8* noundef nonnull %0, i8** noundef null, i32 noundef 10) #23, !dbg !17010
  call void @llvm.dbg.value(metadata i64 %call64, metadata !16965, metadata !DIExpression()), !dbg !16967
  %mul65 = mul nsw i64 %call64, %mul.0, !dbg !17011
  br label %cleanup, !dbg !17012

cleanup:                                          ; preds = %if.end49, %if.end58
  %retval.0 = phi i64 [ %mul65, %if.end58 ], [ 9223372036854775807, %if.end49 ], !dbg !16967
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #24, !dbg !17013
  ret i64 %retval.0, !dbg !17013
}

; Function Attrs: nounwind
declare !dbg !17014 dso_local i32 @setsid() local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !17015 dso_local i32 @dup2(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @initServer() #0 !dbg !17018 {
entry:
  %call = tail call void (i32)* @signal(i32 noundef 1, void (i32)* noundef nonnull inttoptr (i64 1 to void (i32)*)) #23, !dbg !17021
  %call1 = tail call void (i32)* @signal(i32 noundef 13, void (i32)* noundef nonnull inttoptr (i64 1 to void (i32)*)) #23, !dbg !17022
  tail call void @setupSigSegvAction() #22, !dbg !17023
  %call2 = tail call i64 @pthread_self() #25, !dbg !17024
  store i64 %call2, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 0), align 8, !dbg !17025, !tbaa !1599
  %call3 = tail call %struct._IO_FILE* @fopen64(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i64 0, i64 0)) #23, !dbg !17026
  store %struct._IO_FILE* %call3, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 87), align 8, !dbg !17027, !tbaa !17028
  %cmp = icmp eq %struct._IO_FILE* %call3, null, !dbg !17029
  br i1 %cmp, label %if.then, label %if.end, !dbg !17031

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.469, i64 0, i64 0), i8* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9, i64 0)) #22, !dbg !17032
  tail call void @exit(i32 noundef 1) #26, !dbg !17034
  unreachable, !dbg !17034

if.end:                                           ; preds = %entry
  %call4 = tail call %struct.list* @listCreate() #23, !dbg !17035
  store %struct.list* %call4, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !17036, !tbaa !2657
  %call5 = tail call %struct.list* @listCreate() #23, !dbg !17037
  store %struct.list* %call5, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !17038, !tbaa !886
  %call6 = tail call %struct.list* @listCreate() #23, !dbg !17039
  store %struct.list* %call6, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !17040, !tbaa !4019
  %call7 = tail call %struct.list* @listCreate() #23, !dbg !17041
  store %struct.list* %call7, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 8, !dbg !17042, !tbaa !1501
  tail call void @createSharedObjects() #22, !dbg !17043
  %call8 = tail call %struct.aeEventLoop* @aeCreateEventLoop() #23, !dbg !17044
  store %struct.aeEventLoop* %call8, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !17045, !tbaa !941
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17046, !tbaa !2013
  %conv = sext i32 %0 to i64, !dbg !17047
  %mul = mul nsw i64 %conv, 40, !dbg !17048
  %call9 = tail call i8* @zmalloc(i64 noundef %mul) #23, !dbg !17049
  store i8* %call9, i8** bitcast (%struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3) to i8**), align 8, !dbg !17050, !tbaa !2351
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !17051, !tbaa !1824
  %2 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 8, !dbg !17052, !tbaa !1928
  %call10 = tail call i32 @anetTcpServer(i8* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9, i64 0), i32 noundef %1, i8* noundef %2) #23, !dbg !17053
  store i32 %call10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 4, !dbg !17054, !tbaa !2851
  %cmp11 = icmp eq i32 %call10, -1, !dbg !17055
  br i1 %cmp11, label %if.then13, label %for.cond.preheader, !dbg !17057

for.cond.preheader:                               ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !17020, metadata !DIExpression()), !dbg !17058
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17059, !tbaa !2013
  %cmp1565 = icmp sgt i32 %3, 0, !dbg !17062
  br i1 %cmp1565, label %for.body, label %for.end, !dbg !17063

if.then13:                                        ; preds = %if.end
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.470, i64 0, i64 0), i8* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9, i64 0)) #22, !dbg !17064
  tail call void @exit(i32 noundef 1) #26, !dbg !17066
  unreachable, !dbg !17066

for.body:                                         ; preds = %for.cond.preheader, %if.end28
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end28 ], [ 0, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !17020, metadata !DIExpression()), !dbg !17058
  %call17 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @dbDictType, i8* noundef null) #23, !dbg !17067
  %4 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17069, !tbaa !2351
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 %indvars.iv, i32 0, !dbg !17070
  store %struct.dict* %call17, %struct.dict** %dict, align 8, !dbg !17071, !tbaa !2353
  %call18 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @keyptrDictType, i8* noundef null) #23, !dbg !17072
  %5 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17073, !tbaa !2351
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 %indvars.iv, i32 1, !dbg !17074
  store %struct.dict* %call18, %struct.dict** %expires, align 8, !dbg !17075, !tbaa !3635
  %call21 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @keylistDictType, i8* noundef null) #23, !dbg !17076
  %6 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17077, !tbaa !2351
  %blockingkeys = getelementptr inbounds %struct.redisDb, %struct.redisDb* %6, i64 %indvars.iv, i32 2, !dbg !17078
  store %struct.dict* %call21, %struct.dict** %blockingkeys, align 8, !dbg !17079, !tbaa !2892
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !17080, !tbaa !1384
  %tobool.not = icmp eq i32 %7, 0, !dbg !17082
  br i1 %tobool.not, label %if.end28, label %if.then24, !dbg !17083

if.then24:                                        ; preds = %for.body
  %call25 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @keylistDictType, i8* noundef null) #23, !dbg !17084
  %8 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17085, !tbaa !2351
  %io_keys = getelementptr inbounds %struct.redisDb, %struct.redisDb* %8, i64 %indvars.iv, i32 3, !dbg !17086
  store %struct.dict* %call25, %struct.dict** %io_keys, align 8, !dbg !17087, !tbaa !3075
  br label %if.end28, !dbg !17088

if.end28:                                         ; preds = %if.then24, %for.body
  %9 = phi %struct.redisDb* [ %8, %if.then24 ], [ %6, %for.body ], !dbg !17089
  %id = getelementptr inbounds %struct.redisDb, %struct.redisDb* %9, i64 %indvars.iv, i32 4, !dbg !17090
  %10 = trunc i64 %indvars.iv to i32, !dbg !17091
  store i32 %10, i32* %id, align 8, !dbg !17091, !tbaa !4001
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17092
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17020, metadata !DIExpression()), !dbg !17058
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17059, !tbaa !2013
  %12 = sext i32 %11 to i64, !dbg !17062
  %cmp15 = icmp slt i64 %indvars.iv.next, %12, !dbg !17062
  br i1 %cmp15, label %for.body, label %for.end, !dbg !17063, !llvm.loop !17093

for.end:                                          ; preds = %if.end28, %for.cond.preheader
  %call31 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @keylistDictType, i8* noundef null) #23, !dbg !17095
  store %struct.dict* %call31, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !17096, !tbaa !4116
  %call32 = tail call %struct.list* @listCreate() #23, !dbg !17097
  store %struct.list* %call32, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !17098, !tbaa !4390
  %free = getelementptr inbounds %struct.list, %struct.list* %call32, i64 0, i32 3, !dbg !17099
  store void (i8*)* @freePubsubPattern, void (i8*)** %free, align 8, !dbg !17099, !tbaa !1459
  %match = getelementptr inbounds %struct.list, %struct.list* %call32, i64 0, i32 4, !dbg !17100
  store i32 (i8*, i8*)* @listMatchPubsubPattern, i32 (i8*, i8*)** %match, align 8, !dbg !17100, !tbaa !17101
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11), align 8, !dbg !17102, !tbaa !17103
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !17104, !tbaa !732
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4, !dbg !17105, !tbaa !996
  %call33 = tail call i8* (...) @sdsempty() #23, !dbg !17106
  store i8* %call33, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !17107, !tbaa !1010
  %call34 = tail call i8* (...) @sdsempty() #23, !dbg !17108
  store i8* %call34, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33), align 8, !dbg !17109, !tbaa !4591
  %call35 = tail call i64 @time(i64* noundef null) #23, !dbg !17110
  store i64 %call35, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !17111, !tbaa !722
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !17112, !tbaa !708
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15) to <2 x i64>*), align 8, !dbg !17113, !tbaa !4936
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !17114, !tbaa !5124
  %call36 = tail call i64 @time(i64* noundef null) #23, !dbg !17115
  store i64 %call36, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 14), align 8, !dbg !17116, !tbaa !11842
  %call37 = tail call i64 @time(i64* noundef null) #23, !dbg !17117
  store i64 %call37, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !17118, !tbaa !1541
  %13 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !17119, !tbaa !941
  %call38 = tail call i64 @aeCreateTimeEvent(%struct.aeEventLoop* noundef %13, i64 noundef 1, i32 (%struct.aeEventLoop*, i64, i8*)* noundef nonnull @serverCron, i8* noundef null, void (%struct.aeEventLoop*, i8*)* noundef null) #23, !dbg !17120
  %14 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !17121, !tbaa !941
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 4, !dbg !17123, !tbaa !2851
  %call39 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %14, i32 noundef %15, i32 noundef 1, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @acceptHandler, i8* noundef null) #23, !dbg !17124
  %cmp40 = icmp eq i32 %call39, -1, !dbg !17125
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !17126

if.then42:                                        ; preds = %for.end
  tail call void @oom(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.471, i64 0, i64 0)) #22, !dbg !17127
  unreachable, !dbg !17127

if.end43:                                         ; preds = %for.end
  %16 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !17128, !tbaa !1260
  %tobool44.not = icmp eq i32 %16, 0, !dbg !17130
  br i1 %tobool44.not, label %if.end53, label %if.then45, !dbg !17131

if.then45:                                        ; preds = %if.end43
  %17 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !17132, !tbaa !1029
  %call46 = tail call i32 (i8*, i32, ...) @open64(i8* noundef %17, i32 noundef 1089, i32 noundef 420) #23, !dbg !17134
  store i32 %call46, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !17135, !tbaa !1042
  %cmp47 = icmp eq i32 %call46, -1, !dbg !17136
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !17138

if.then49:                                        ; preds = %if.then45
  %call50 = tail call i32* @__errno_location() #25, !dbg !17139
  %18 = load i32, i32* %call50, align 4, !dbg !17139, !tbaa !926
  %call51 = tail call i8* @strerror(i32 noundef %18) #23, !dbg !17141
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.472, i64 0, i64 0), i8* noundef %call51) #22, !dbg !17142
  tail call void @exit(i32 noundef 1) #26, !dbg !17143
  unreachable, !dbg !17143

if.end53:                                         ; preds = %if.then45, %if.end43
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4, !dbg !17144, !tbaa !1384
  %tobool54.not = icmp eq i32 %19, 0, !dbg !17146
  br i1 %tobool54.not, label %if.end56, label %if.then55, !dbg !17147

if.then55:                                        ; preds = %if.end53
  tail call void @vmInit() #22, !dbg !17148
  br label %if.end56, !dbg !17148

if.end56:                                         ; preds = %if.then55, %if.end53
  ret void, !dbg !17149
}

; Function Attrs: nounwind
declare !dbg !17150 dso_local void (i32)* @signal(i32 noundef, void (i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @setupSigSegvAction() #0 !dbg !17153 {
entry:
  %act = alloca %struct.sigaction, align 8
  %0 = bitcast %struct.sigaction* %act to i8*, !dbg !17244
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %0) #24, !dbg !17244
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !17155, metadata !DIExpression()), !dbg !17245
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i64 0, i32 1, !dbg !17246
  %call = call i32 @sigemptyset(%struct.__sigset_t* noundef nonnull %sa_mask) #23, !dbg !17247
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i64 0, i32 2, !dbg !17248
  store i32 -939524092, i32* %sa_flags, align 8, !dbg !17249, !tbaa !17250
  %sa_sigaction = bitcast %struct.sigaction* %act to void (i32, %struct.siginfo_t*, i8*)**, !dbg !17253
  store void (i32, %struct.siginfo_t*, i8*)* @segvHandler, void (i32, %struct.siginfo_t*, i8*)** %sa_sigaction, align 8, !dbg !17254, !tbaa !795
  %call1 = call i32 @sigaction(i32 noundef 11, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17255
  %call2 = call i32 @sigaction(i32 noundef 7, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17256
  %call3 = call i32 @sigaction(i32 noundef 8, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17257
  %call4 = call i32 @sigaction(i32 noundef 4, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17258
  %call5 = call i32 @sigaction(i32 noundef 7, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17259
  store i32 -939524096, i32* %sa_flags, align 8, !dbg !17260, !tbaa !17250
  %sa_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i64 0, i32 0, i32 0, !dbg !17261
  store void (i32)* @sigtermHandler, void (i32)** %sa_handler, align 8, !dbg !17262, !tbaa !795
  %call8 = call i32 @sigaction(i32 noundef 15, %struct.sigaction* noundef nonnull %act, %struct.sigaction* noundef null) #23, !dbg !17263
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %0) #24, !dbg !17264
  ret void, !dbg !17264
}

; Function Attrs: noinline nounwind uwtable
define internal void @createSharedObjects() #0 !dbg !17265 {
entry:
  %call = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0)) #23, !dbg !17268
  %call1 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call) #22, !dbg !17269
  store %struct.redisObject* %call1, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !17270, !tbaa !4163
  %call2 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.853, i64 0, i64 0)) #23, !dbg !17271
  %call3 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call2) #22, !dbg !17272
  store %struct.redisObject* %call3, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !17273, !tbaa !3712
  %call4 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.854, i64 0, i64 0)) #23, !dbg !17274
  %call5 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call4) #22, !dbg !17275
  store %struct.redisObject* %call5, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !17276, !tbaa !10712
  %call6 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.855, i64 0, i64 0)) #23, !dbg !17277
  %call7 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call6) #22, !dbg !17278
  store %struct.redisObject* %call7, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 3), align 8, !dbg !17279, !tbaa !17280
  %call8 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.856, i64 0, i64 0)) #23, !dbg !17281
  %call9 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call8) #22, !dbg !17282
  store %struct.redisObject* %call9, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !17283, !tbaa !4181
  %call10 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.857, i64 0, i64 0)) #23, !dbg !17284
  %call11 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call10) #22, !dbg !17285
  store %struct.redisObject* %call11, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !17286, !tbaa !4187
  %call12 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.858, i64 0, i64 0)) #23, !dbg !17287
  %call13 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call12) #22, !dbg !17288
  store %struct.redisObject* %call13, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !17289, !tbaa !8818
  %call14 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.859, i64 0, i64 0)) #23, !dbg !17290
  %call15 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call14) #22, !dbg !17291
  store %struct.redisObject* %call15, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !17292, !tbaa !12346
  %call16 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.860, i64 0, i64 0)) #23, !dbg !17293
  %call17 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call16) #22, !dbg !17294
  store %struct.redisObject* %call17, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !17295, !tbaa !9109
  %call18 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.861, i64 0, i64 0)) #23, !dbg !17296
  %call19 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call18) #22, !dbg !17297
  store %struct.redisObject* %call19, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 6), align 8, !dbg !17298, !tbaa !10678
  %call20 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.862, i64 0, i64 0)) #23, !dbg !17299
  %call21 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call20) #22, !dbg !17300
  store %struct.redisObject* %call21, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 11), align 8, !dbg !17301, !tbaa !3570
  %call22 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.863, i64 0, i64 0)) #23, !dbg !17302
  %call23 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call22) #22, !dbg !17303
  store %struct.redisObject* %call23, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !17304, !tbaa !8791
  %call24 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.864, i64 0, i64 0)) #23, !dbg !17305
  %call25 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call24) #22, !dbg !17306
  store %struct.redisObject* %call25, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !17307, !tbaa !9059
  %call26 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.865, i64 0, i64 0)) #23, !dbg !17308
  %call27 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call26) #22, !dbg !17309
  store %struct.redisObject* %call27, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !17310, !tbaa !11130
  %call28 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.866, i64 0, i64 0)) #23, !dbg !17311
  %call29 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call28) #22, !dbg !17312
  store %struct.redisObject* %call29, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !17313, !tbaa !14564
  %call30 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.867, i64 0, i64 0)) #23, !dbg !17314
  %call31 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call30) #22, !dbg !17315
  store %struct.redisObject* %call31, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 17), align 8, !dbg !17316, !tbaa !9071
  %call32 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #23, !dbg !17317
  %call33 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call32) #22, !dbg !17318
  store %struct.redisObject* %call33, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 7), align 8, !dbg !17319, !tbaa !17320
  %call34 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.868, i64 0, i64 0)) #23, !dbg !17321
  %call35 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call34) #22, !dbg !17322
  store %struct.redisObject* %call35, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 8), align 8, !dbg !17323, !tbaa !12079
  %call36 = tail call i8* @sdsnew(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i64 0, i64 0)) #23, !dbg !17324
  %call37 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %call36) #22, !dbg !17325
  store %struct.redisObject* %call37, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 18), align 8, !dbg !17326, !tbaa !17327
  %call38 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.869, i64 0, i64 0), i64 noundef 10) #22, !dbg !17328
  store %struct.redisObject* %call38, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 19), align 8, !dbg !17329, !tbaa !4706
  %call39 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.870, i64 0, i64 0), i64 noundef 10) #22, !dbg !17330
  store %struct.redisObject* %call39, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 20), align 8, !dbg !17331, !tbaa !4710
  %call40 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.871, i64 0, i64 0), i64 noundef 10) #22, !dbg !17332
  store %struct.redisObject* %call40, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 21), align 8, !dbg !17333, !tbaa !4713
  %call41 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.872, i64 0, i64 0), i64 noundef 10) #22, !dbg !17334
  store %struct.redisObject* %call41, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 22), align 8, !dbg !17335, !tbaa !4716
  %call42 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.873, i64 0, i64 0), i64 noundef 10) #22, !dbg !17336
  store %struct.redisObject* %call42, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 23), align 8, !dbg !17337, !tbaa !4719
  %call43 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.874, i64 0, i64 0), i64 noundef 10) #22, !dbg !17338
  store %struct.redisObject* %call43, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 24), align 8, !dbg !17339, !tbaa !4722
  %call44 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.875, i64 0, i64 0), i64 noundef 10) #22, !dbg !17340
  store %struct.redisObject* %call44, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 25), align 8, !dbg !17341, !tbaa !4725
  %call45 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.876, i64 0, i64 0), i64 noundef 10) #22, !dbg !17342
  store %struct.redisObject* %call45, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 26), align 8, !dbg !17343, !tbaa !4728
  %call46 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.877, i64 0, i64 0), i64 noundef 10) #22, !dbg !17344
  store %struct.redisObject* %call46, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 27), align 8, !dbg !17345, !tbaa !4731
  %call47 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.878, i64 0, i64 0), i64 noundef 10) #22, !dbg !17346
  store %struct.redisObject* %call47, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 28), align 8, !dbg !17347, !tbaa !4734
  %call48 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.879, i64 0, i64 0), i64 noundef 13) #22, !dbg !17348
  store %struct.redisObject* %call48, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 29), align 8, !dbg !17349, !tbaa !16718
  %call49 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.880, i64 0, i64 0), i64 noundef 14) #22, !dbg !17350
  store %struct.redisObject* %call49, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 30), align 8, !dbg !17351, !tbaa !16752
  %call50 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.881, i64 0, i64 0), i64 noundef 15) #22, !dbg !17352
  store %struct.redisObject* %call50, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 31), align 8, !dbg !17353, !tbaa !4138
  %call51 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.882, i64 0, i64 0), i64 noundef 18) #22, !dbg !17354
  store %struct.redisObject* %call51, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 32), align 8, !dbg !17355, !tbaa !4346
  %call52 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.883, i64 0, i64 0), i64 noundef 17) #22, !dbg !17356
  store %struct.redisObject* %call52, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 35), align 8, !dbg !17357, !tbaa !4396
  %call53 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.884, i64 0, i64 0), i64 noundef 19) #22, !dbg !17358
  store %struct.redisObject* %call53, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 36), align 8, !dbg !17359, !tbaa !4484
  %call54 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.885, i64 0, i64 0), i64 noundef 4) #22, !dbg !17360
  store %struct.redisObject* %call54, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !17361, !tbaa !4135
  %call55 = tail call %struct.redisObject* @createStringObject(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.886, i64 0, i64 0), i64 noundef 4) #22, !dbg !17362
  store %struct.redisObject* %call55, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 34), align 8, !dbg !17363, !tbaa !16748
  call void @llvm.dbg.value(metadata i32 0, metadata !17267, metadata !DIExpression()), !dbg !17364
  br label %for.body, !dbg !17365

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !17267, metadata !DIExpression()), !dbg !17364
  %0 = inttoptr i64 %indvars.iv to i8*, !dbg !17367
  %call56 = tail call %struct.redisObject* @createObject(i32 noundef 0, i8* noundef %0) #22, !dbg !17370
  %arrayidx = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 37, i64 %indvars.iv, !dbg !17371
  store %struct.redisObject* %call56, %struct.redisObject** %arrayidx, align 8, !dbg !17372, !tbaa !782
  %encoding = getelementptr inbounds %struct.redisObject, %struct.redisObject* %call56, i64 0, i32 2, !dbg !17373
  store i8 1, i8* %encoding, align 1, !dbg !17374, !tbaa !1529
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17375
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17267, metadata !DIExpression()), !dbg !17364
  %exitcond.not = icmp eq i64 %indvars.iv.next, 10000, !dbg !17376
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !17365, !llvm.loop !17377

for.end:                                          ; preds = %for.body
  ret void, !dbg !17379
}

declare !dbg !17380 dso_local %struct.aeEventLoop* @aeCreateEventLoop() local_unnamed_addr #4

declare !dbg !17383 dso_local i32 @anetTcpServer(i8* noundef, i32 noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal void @freePubsubPattern(i8* noundef %p) #0 !dbg !17387 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !17389, metadata !DIExpression()), !dbg !17391
  call void @llvm.dbg.value(metadata i8* %p, metadata !17390, metadata !DIExpression()), !dbg !17391
  %pattern = getelementptr inbounds i8, i8* %p, i64 8, !dbg !17392
  %0 = bitcast i8* %pattern to i8**, !dbg !17392
  %1 = load i8*, i8** %0, align 8, !dbg !17392, !tbaa !4384
  tail call void @decrRefCount(i8* noundef %1) #22, !dbg !17393
  tail call void @zfree(i8* noundef %p) #23, !dbg !17394
  ret void, !dbg !17395
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @listMatchPubsubPattern(i8* nocapture noundef readonly %a, i8* nocapture noundef readonly %b) #0 !dbg !17396 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !17398, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i8* %b, metadata !17399, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i8* %a, metadata !17400, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i8* %b, metadata !17401, metadata !DIExpression()), !dbg !17402
  %client = bitcast i8* %a to %struct.redisClient**, !dbg !17403
  %0 = load %struct.redisClient*, %struct.redisClient** %client, align 8, !dbg !17403, !tbaa !4388
  %client1 = bitcast i8* %b to %struct.redisClient**, !dbg !17404
  %1 = load %struct.redisClient*, %struct.redisClient** %client1, align 8, !dbg !17404, !tbaa !4388
  %cmp = icmp eq %struct.redisClient* %0, %1, !dbg !17405
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17406

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %b, metadata !17401, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i8* %a, metadata !17400, metadata !DIExpression()), !dbg !17402
  %pattern = getelementptr inbounds i8, i8* %a, i64 8, !dbg !17407
  %2 = bitcast i8* %pattern to %struct.redisObject**, !dbg !17407
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !17407, !tbaa !4384
  %pattern2 = getelementptr inbounds i8, i8* %b, i64 8, !dbg !17408
  %4 = bitcast i8* %pattern2 to %struct.redisObject**, !dbg !17408
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !17408, !tbaa !4384
  %call = tail call i32 @equalStringObjects(%struct.redisObject* noundef %3, %struct.redisObject* noundef %5) #22, !dbg !17409
  %tobool = icmp ne i32 %call, 0, !dbg !17406
  %phi.cast = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phi.cast, %land.rhs ]
  ret i32 %6, !dbg !17410
}

declare !dbg !17411 dso_local i64 @aeCreateTimeEvent(%struct.aeEventLoop* noundef, i64 noundef, i32 (%struct.aeEventLoop*, i64, i8*)* noundef, i8* noundef, void (%struct.aeEventLoop*, i8*)* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @serverCron(%struct.aeEventLoop* nocapture noundef readnone %eventLoop, i64 noundef %id, i8* nocapture noundef readnone %clientData) #0 !dbg !17414 {
entry:
  %statloc = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %eventLoop, metadata !17416, metadata !DIExpression()), !dbg !17452
  call void @llvm.dbg.value(metadata i64 %id, metadata !17417, metadata !DIExpression()), !dbg !17452
  call void @llvm.dbg.value(metadata i8* %clientData, metadata !17418, metadata !DIExpression()), !dbg !17452
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11), align 8, !dbg !17453, !tbaa !17103
  %inc = add nsw i32 %0, 1, !dbg !17453
  store i32 %inc, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11), align 8, !dbg !17453, !tbaa !17103
  call void @llvm.dbg.value(metadata i32 %0, metadata !17420, metadata !DIExpression()), !dbg !17452
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !17454
  store i64 %call, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68), align 8, !dbg !17455, !tbaa !1541
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 4, !dbg !17456, !tbaa !16921
  %tobool.not = icmp eq i32 %1, 0, !dbg !17458
  br i1 %tobool.not, label %if.end3, label %if.then, !dbg !17459

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @prepareForShutdown() #22, !dbg !17460
  %cmp = icmp eq i32 %call1, 0, !dbg !17463
  br i1 %cmp, label %if.then2, label %if.end, !dbg !17464

if.then2:                                         ; preds = %if.then
  tail call void @exit(i32 noundef 0) #26, !dbg !17465
  unreachable, !dbg !17465

if.end:                                           ; preds = %if.then
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([96 x i8], [96 x i8]* @.str.887, i64 0, i64 0)) #22, !dbg !17466
  br label %if.end3, !dbg !17467

if.end3:                                          ; preds = %if.end, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17452
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17468, !tbaa !2013
  %cmp4274 = icmp sgt i32 %2, 0, !dbg !17469
  br i1 %cmp4274, label %for.body.lr.ph, label %for.end, !dbg !17470

for.body.lr.ph:                                   ; preds = %if.end3
  %rem = srem i32 %0, 50
  %tobool38.not = icmp eq i32 %rem, 0
  %.pre294 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17471, !tbaa !2351
  br label %for.body, !dbg !17470

for.body:                                         ; preds = %for.body.lr.ph, %if.end42
  %3 = phi i32 [ %2, %for.body.lr.ph ], [ %14, %if.end42 ]
  %4 = phi %struct.redisDb* [ %.pre294, %for.body.lr.ph ], [ %15, %if.end42 ], !dbg !17471
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end42 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !17419, metadata !DIExpression()), !dbg !17452
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 %indvars.iv, i32 0, !dbg !17471
  %5 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !17471, !tbaa !2353
  %size6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 1, !dbg !17471
  %6 = load i64, i64* %size6, align 8, !dbg !17471, !tbaa !8445
  %size12 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 1, !dbg !17471
  %7 = load i64, i64* %size12, align 8, !dbg !17471, !tbaa !8445
  %add = add i64 %7, %6, !dbg !17471
  call void @llvm.dbg.value(metadata i64 %add, metadata !17421, metadata !DIExpression()), !dbg !17472
  %used18 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 3, !dbg !17473
  %8 = load i64, i64* %used18, align 8, !dbg !17473, !tbaa !3545
  %used24 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 3, !dbg !17473
  %9 = load i64, i64* %used24, align 8, !dbg !17473, !tbaa !3545
  %add25 = add i64 %9, %8, !dbg !17473
  call void @llvm.dbg.value(metadata i64 %add25, metadata !17425, metadata !DIExpression()), !dbg !17472
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %4, i64 %indvars.iv, i32 1, !dbg !17474
  %10 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !17474, !tbaa !3635
  %used30 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 0, i32 3, !dbg !17474
  %11 = load i64, i64* %used30, align 8, !dbg !17474, !tbaa !3545
  %used36 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, i64 1, i32 3, !dbg !17474
  %12 = load i64, i64* %used36, align 8, !dbg !17474, !tbaa !3545
  %add37 = add i64 %12, %11, !dbg !17474
  call void @llvm.dbg.value(metadata i64 %add37, metadata !17426, metadata !DIExpression()), !dbg !17472
  br i1 %tobool38.not, label %land.lhs.true, label %if.end42, !dbg !17475

land.lhs.true:                                    ; preds = %for.body
  %tobool39 = icmp ne i64 %add25, 0, !dbg !17477
  %tobool40 = icmp ne i64 %add37, 0
  %or.cond = select i1 %tobool39, i1 true, i1 %tobool40, !dbg !17478
  br i1 %or.cond, label %if.then41, label %if.end42, !dbg !17478

if.then41:                                        ; preds = %land.lhs.true
  %13 = trunc i64 %indvars.iv to i32, !dbg !17479
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.888, i64 0, i64 0), i32 noundef %13, i64 noundef %add25, i64 noundef %add37, i64 noundef %add) #22, !dbg !17479
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17471, !tbaa !2351
  %.pre295 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17468, !tbaa !2013
  br label %if.end42, !dbg !17481

if.end42:                                         ; preds = %land.lhs.true, %if.then41, %for.body
  %14 = phi i32 [ %3, %land.lhs.true ], [ %.pre295, %if.then41 ], [ %3, %for.body ], !dbg !17468
  %15 = phi %struct.redisDb* [ %4, %land.lhs.true ], [ %.pre, %if.then41 ], [ %4, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17482
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17419, metadata !DIExpression()), !dbg !17452
  %16 = sext i32 %14 to i64, !dbg !17469
  %cmp4 = icmp slt i64 %indvars.iv.next, %16, !dbg !17469
  br i1 %cmp4, label %for.body, label %for.end, !dbg !17470, !llvm.loop !17483

for.end:                                          ; preds = %if.end42, %if.end3
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !17485, !tbaa !732
  %cmp44 = icmp eq i32 %17, -1, !dbg !17487
  %18 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4
  %cmp46 = icmp eq i32 %18, -1
  %or.cond207 = select i1 %cmp44, i1 %cmp46, i1 false, !dbg !17488
  br i1 %or.cond207, label %if.then47, label %if.end55, !dbg !17488

if.then47:                                        ; preds = %for.end
  %rem48 = srem i32 %0, 10, !dbg !17489
  %tobool49.not = icmp eq i32 %rem48, 0, !dbg !17489
  br i1 %tobool49.not, label %if.then50, label %if.end51, !dbg !17492

if.then50:                                        ; preds = %if.then47
  tail call void @tryResizeHashTables() #22, !dbg !17493
  br label %if.end51, !dbg !17493

if.end51:                                         ; preds = %if.then50, %if.then47
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 4, !dbg !17494, !tbaa !2096
  %tobool52.not = icmp eq i32 %19, 0, !dbg !17496
  br i1 %tobool52.not, label %if.end55, label %if.then53, !dbg !17497

if.then53:                                        ; preds = %if.end51
  tail call void @incrementallyRehash() #22, !dbg !17498
  br label %if.end55, !dbg !17498

if.end55:                                         ; preds = %if.end51, %if.then53, %for.end
  %rem56 = srem i32 %0, 50, !dbg !17499
  %tobool57.not = icmp eq i32 %rem56, 0, !dbg !17499
  br i1 %tobool57.not, label %if.then58, label %if.end62, !dbg !17501

if.then58:                                        ; preds = %if.end55
  %20 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !17502, !tbaa !2657
  %len = getelementptr inbounds %struct.list, %struct.list* %20, i64 0, i32 5, !dbg !17502
  %21 = load i32, i32* %len, align 8, !dbg !17502, !tbaa !1358
  %22 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !17504, !tbaa !886
  %len59 = getelementptr inbounds %struct.list, %struct.list* %22, i64 0, i32 5, !dbg !17504
  %23 = load i32, i32* %len59, align 8, !dbg !17504, !tbaa !1358
  %sub = sub i32 %21, %23, !dbg !17505
  %call61 = tail call i64 @zmalloc_used_memory() #23, !dbg !17506
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.889, i64 0, i64 0), i32 noundef %sub, i32 noundef %23, i64 noundef %call61) #22, !dbg !17507
  br label %if.end62, !dbg !17508

if.end62:                                         ; preds = %if.then58, %if.end55
  %24 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !17509, !tbaa !1910
  %tobool63.not = icmp eq i32 %24, 0, !dbg !17511
  br i1 %tobool63.not, label %lor.lhs.false67, label %land.lhs.true64, !dbg !17512

land.lhs.true64:                                  ; preds = %if.end62
  %rem65 = srem i32 %0, 100, !dbg !17513
  %tobool66 = icmp eq i32 %rem65, 0, !dbg !17513
  %25 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8
  %tobool68 = icmp ne i32 %25, 0
  %or.cond208 = select i1 %tobool66, i1 true, i1 %tobool68, !dbg !17514
  br i1 %or.cond208, label %if.then69, label %if.end70, !dbg !17514

lor.lhs.false67:                                  ; preds = %if.end62
  %.old = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 8, !dbg !17515, !tbaa !2921
  %tobool68.old.not = icmp eq i32 %.old, 0, !dbg !17516
  br i1 %tobool68.old.not, label %if.end70, label %if.then69, !dbg !17517

if.then69:                                        ; preds = %lor.lhs.false67, %land.lhs.true64
  tail call void @closeTimedoutClients() #22, !dbg !17518
  br label %if.end70, !dbg !17518

if.end70:                                         ; preds = %land.lhs.true64, %if.then69, %lor.lhs.false67
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !17519, !tbaa !732
  %cmp71 = icmp ne i32 %26, -1, !dbg !17520
  %27 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 4
  %cmp73 = icmp ne i32 %27, -1
  %or.cond210 = select i1 %cmp71, i1 true, i1 %cmp73, !dbg !17521
  br i1 %or.cond210, label %if.then74, label %if.else82, !dbg !17521

if.then74:                                        ; preds = %if.end70
  %28 = bitcast i32* %statloc to i8*, !dbg !17522
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #24, !dbg !17522
  call void @llvm.dbg.value(metadata i32* %statloc, metadata !17427, metadata !DIExpression(DW_OP_deref)), !dbg !17523
  %call75 = call i32 @wait3(i32* noundef nonnull %statloc, i32 noundef 1, %struct.rusage* noundef null) #23, !dbg !17524
  call void @llvm.dbg.value(metadata i32 %call75, metadata !17430, metadata !DIExpression()), !dbg !17523
  %cmp76.not = icmp eq i32 %call75, 0, !dbg !17526
  br i1 %cmp76.not, label %if.end81, label %if.then77, !dbg !17527

if.then77:                                        ; preds = %if.then74
  %29 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !17528, !tbaa !732
  %cmp78 = icmp eq i32 %call75, %29, !dbg !17531
  %30 = load i32, i32* %statloc, align 4, !dbg !17532, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %30, metadata !17427, metadata !DIExpression()), !dbg !17523
  call void @llvm.dbg.value(metadata i32 %30, metadata !17427, metadata !DIExpression()), !dbg !17523
  br i1 %cmp78, label %if.then79, label %if.else, !dbg !17533

if.then79:                                        ; preds = %if.then77
  call void @backgroundSaveDoneHandler(i32 noundef %30) #22, !dbg !17534
  br label %if.end80, !dbg !17536

if.else:                                          ; preds = %if.then77
  call void @backgroundRewriteDoneHandler(i32 noundef %30) #22, !dbg !17537
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then79
  call void @updateDictResizePolicy() #22, !dbg !17539
  br label %if.end81, !dbg !17540

if.end81:                                         ; preds = %if.end80, %if.then74
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #24, !dbg !17541
  br label %if.end101, !dbg !17542

if.else82:                                        ; preds = %if.end70
  %call83 = tail call i64 @time(i64* noundef null) #23, !dbg !17543
  call void @llvm.dbg.value(metadata i64 %call83, metadata !17431, metadata !DIExpression()), !dbg !17544
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17452
  %31 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !tbaa !16390
  %cmp85276 = icmp sgt i32 %31, 0, !dbg !17545
  br i1 %cmp85276, label %for.body86.lr.ph, label %if.end101, !dbg !17546

for.body86.lr.ph:                                 ; preds = %if.else82
  %32 = load %struct.saveparam*, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 8, !tbaa !16395
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !tbaa !708
  %34 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8
  %sub90 = sub nsw i64 %call83, %34
  %wide.trip.count = zext i32 %31 to i64, !dbg !17545
  br label %for.body86, !dbg !17546

for.body86:                                       ; preds = %for.body86.lr.ph, %for.inc98
  %indvars.iv288 = phi i64 [ 0, %for.body86.lr.ph ], [ %indvars.iv.next289, %for.inc98 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv288, metadata !17419, metadata !DIExpression()), !dbg !17452
  call void @llvm.dbg.value(metadata !DIArgList(%struct.saveparam* %32, i64 %indvars.iv288), metadata !17433, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 16, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !17547
  %changes = getelementptr inbounds %struct.saveparam, %struct.saveparam* %32, i64 %indvars.iv288, i32 1, !dbg !17548
  %35 = load i32, i32* %changes, align 8, !dbg !17548, !tbaa !16400
  %conv = sext i32 %35 to i64, !dbg !17550
  %cmp87.not = icmp slt i64 %33, %conv, !dbg !17551
  br i1 %cmp87.not, label %for.inc98, label %land.lhs.true89, !dbg !17552

land.lhs.true89:                                  ; preds = %for.body86
  call void @llvm.dbg.value(metadata !DIArgList(%struct.saveparam* %32, i64 %indvars.iv288), metadata !17433, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 16, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !17547
  %seconds = getelementptr inbounds %struct.saveparam, %struct.saveparam* %32, i64 %indvars.iv288, i32 0, !dbg !17553
  %36 = load i64, i64* %seconds, align 8, !dbg !17553, !tbaa !16397
  %cmp91 = icmp sgt i64 %sub90, %36, !dbg !17554
  br i1 %cmp91, label %cleanup, label %for.inc98, !dbg !17555

cleanup:                                          ; preds = %land.lhs.true89
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.890, i64 0, i64 0), i32 noundef %35, i64 noundef %36) #22, !dbg !17556
  %37 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !17558, !tbaa !913
  %call96 = tail call i32 @rdbSaveBackground(i8* noundef %37) #22, !dbg !17559
  br label %if.end101

for.inc98:                                        ; preds = %land.lhs.true89, %for.body86
  %indvars.iv.next289 = add nuw nsw i64 %indvars.iv288, 1, !dbg !17560
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next289, metadata !17419, metadata !DIExpression()), !dbg !17452
  %exitcond.not = icmp eq i64 %indvars.iv.next289, %wide.trip.count, !dbg !17545
  br i1 %exitcond.not, label %if.end101, label %for.body86, !dbg !17546, !llvm.loop !17561

if.end101:                                        ; preds = %for.inc98, %if.else82, %cleanup, %if.end81
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17452
  %38 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17563, !tbaa !2013
  %cmp103283 = icmp sgt i32 %38, 0, !dbg !17564
  br i1 %cmp103283, label %for.body105, label %for.end145, !dbg !17565

for.body105:                                      ; preds = %if.end101, %do.end
  %indvars.iv291 = phi i64 [ %indvars.iv.next292, %do.end ], [ 0, %if.end101 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv291, metadata !17419, metadata !DIExpression()), !dbg !17452
  %39 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !17566, !tbaa !2351
  %add.ptr107 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %39, i64 %indvars.iv291, !dbg !17567
  call void @llvm.dbg.value(metadata %struct.redisDb* %add.ptr107, metadata !17441, metadata !DIExpression()), !dbg !17568
  %expires108 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %39, i64 %indvars.iv291, i32 1
  br label %do.body, !dbg !17569

do.body:                                          ; preds = %while.end, %for.body105
  %40 = load %struct.dict*, %struct.dict** %expires108, align 8, !dbg !17570, !tbaa !3635
  %used111 = getelementptr inbounds %struct.dict, %struct.dict* %40, i64 0, i32 2, i64 0, i32 3, !dbg !17570
  %41 = load i64, i64* %used111, align 8, !dbg !17570, !tbaa !3545
  %used115 = getelementptr inbounds %struct.dict, %struct.dict* %40, i64 0, i32 2, i64 1, i32 3, !dbg !17570
  %42 = load i64, i64* %used115, align 8, !dbg !17570, !tbaa !3545
  %add116 = add i64 %42, %41, !dbg !17570
  call void @llvm.dbg.value(metadata i64 %add116, metadata !17442, metadata !DIExpression()), !dbg !17571
  %call118 = call i64 @time(i64* noundef null) #23, !dbg !17572
  call void @llvm.dbg.value(metadata i64 %call118, metadata !17444, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 0, metadata !17437, metadata !DIExpression()), !dbg !17568
  %43 = icmp slt i64 %add116, 10, !dbg !17573
  call void @llvm.dbg.value(metadata i64 undef, metadata !17442, metadata !DIExpression()), !dbg !17571
  %spec.select = select i1 %43, i64 %add116, i64 10, !dbg !17571
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !17442, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !17571
  %tobool123.not279 = icmp eq i64 %spec.select, 0, !dbg !17574
  br i1 %tobool123.not279, label %do.end, label %while.body, !dbg !17574

while.body:                                       ; preds = %do.body, %cleanup137
  %dec281.in = phi i64 [ %dec281, %cleanup137 ], [ %spec.select, %do.body ]
  %expired.0280 = phi i32 [ %expired.2, %cleanup137 ], [ 0, %do.body ]
  %dec281 = add nsw i64 %dec281.in, -1, !dbg !17575
  call void @llvm.dbg.value(metadata i32 %expired.0280, metadata !17437, metadata !DIExpression()), !dbg !17568
  %44 = load %struct.dict*, %struct.dict** %expires108, align 8, !dbg !17576, !tbaa !3635
  %call125 = call %struct.dictEntry* @dictGetRandomKey(%struct.dict* noundef %44) #23, !dbg !17578
  call void @llvm.dbg.value(metadata %struct.dictEntry* %call125, metadata !17445, metadata !DIExpression()), !dbg !17579
  %cmp126 = icmp eq %struct.dictEntry* %call125, null, !dbg !17580
  br i1 %cmp126, label %while.end, label %if.end129, !dbg !17581

if.end129:                                        ; preds = %while.body
  %val = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %call125, i64 0, i32 1, !dbg !17582
  %45 = load i8*, i8** %val, align 8, !dbg !17582, !tbaa !2458
  %46 = ptrtoint i8* %45 to i64, !dbg !17583
  call void @llvm.dbg.value(metadata i64 %46, metadata !17447, metadata !DIExpression()), !dbg !17579
  %cmp130 = icmp sgt i64 %call118, %46, !dbg !17584
  br i1 %cmp130, label %if.then132, label %cleanup137, !dbg !17586

if.then132:                                       ; preds = %if.end129
  %47 = bitcast %struct.dictEntry* %call125 to %struct.redisObject**, !dbg !17587
  %48 = load %struct.redisObject*, %struct.redisObject** %47, align 8, !dbg !17587, !tbaa !2455
  %call133 = call i32 @deleteKey(%struct.redisDb* noundef nonnull %add.ptr107, %struct.redisObject* noundef %48) #22, !dbg !17589
  %inc134 = add nsw i32 %expired.0280, 1, !dbg !17590
  call void @llvm.dbg.value(metadata i32 %inc134, metadata !17437, metadata !DIExpression()), !dbg !17568
  %49 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !17591, !tbaa !5124
  %inc135 = add nsw i64 %49, 1, !dbg !17591
  store i64 %inc135, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !17591, !tbaa !5124
  br label %cleanup137, !dbg !17592

cleanup137:                                       ; preds = %if.end129, %if.then132
  %expired.2 = phi i32 [ %inc134, %if.then132 ], [ %expired.0280, %if.end129 ], !dbg !17571
  call void @llvm.dbg.value(metadata i32 %expired.2, metadata !17437, metadata !DIExpression()), !dbg !17568
  call void @llvm.dbg.value(metadata i64 %dec281, metadata !17442, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !17571
  %tobool123.not = icmp eq i64 %dec281, 0, !dbg !17574
  br i1 %tobool123.not, label %while.end, label %while.body, !dbg !17574

while.end:                                        ; preds = %cleanup137, %while.body
  %expired.0.lcssa = phi i32 [ %expired.2, %cleanup137 ], [ %expired.0280, %while.body ], !dbg !17593
  call void @llvm.dbg.value(metadata i32 %expired.0.lcssa, metadata !17437, metadata !DIExpression()), !dbg !17568
  %cmp141 = icmp sgt i32 %expired.0.lcssa, 2, !dbg !17594
  br i1 %cmp141, label %do.body, label %do.end, !dbg !17595, !llvm.loop !17596

do.end:                                           ; preds = %do.body, %while.end
  %indvars.iv.next292 = add nuw nsw i64 %indvars.iv291, 1, !dbg !17598
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next292, metadata !17419, metadata !DIExpression()), !dbg !17452
  %50 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !17563, !tbaa !2013
  %51 = sext i32 %50 to i64, !dbg !17564
  %cmp103 = icmp slt i64 %indvars.iv.next292, %51, !dbg !17564
  br i1 %cmp103, label %for.body105, label %for.end145, !dbg !17565, !llvm.loop !17599

for.end145:                                       ; preds = %do.end, %if.end101
  %call146 = call i32 @vmCanSwapOut() #22, !dbg !17601
  %tobool147 = icmp ne i32 %call146, 0, !dbg !17601
  %52 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4
  %tobool150 = icmp ne i32 %52, 0
  %or.cond214 = select i1 %tobool147, i1 %tobool150, i1 false, !dbg !17602
  br i1 %or.cond214, label %land.rhs.preheader, label %if.end188, !dbg !17602

land.rhs.preheader:                               ; preds = %for.end145
  %rem168 = srem i32 %0, 300
  %tobool169.not = icmp eq i32 %rem168, 0
  br label %land.rhs, !dbg !17603

land.rhs:                                         ; preds = %land.rhs.preheader, %cleanup184
  %call151 = call i64 @zmalloc_used_memory() #23, !dbg !17604
  %53 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !17605, !tbaa !1379
  %cmp152 = icmp ugt i64 %call151, %53, !dbg !17606
  br i1 %cmp152, label %while.body154, label %if.end188, !dbg !17603

while.body154:                                    ; preds = %land.rhs
  %call156 = call i32 @tryFreeOneObjectFromFreelist() #22, !dbg !17607
  %cmp157 = icmp eq i32 %call156, 0, !dbg !17609
  br i1 %cmp157, label %cleanup184, label %if.end160, !dbg !17610, !llvm.loop !17611

if.end160:                                        ; preds = %while.body154
  %54 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !17613, !tbaa !2236
  %cmp161 = icmp eq i32 %54, 0, !dbg !17614
  br i1 %cmp161, label %cond.true, label %cond.false, !dbg !17615

cond.true:                                        ; preds = %if.end160
  %call163 = call i32 @vmSwapOneObjectBlocking() #22, !dbg !17616
  br label %cond.end, !dbg !17615

cond.false:                                       ; preds = %if.end160
  %call164 = call i32 @vmSwapOneObjectThreaded() #22, !dbg !17617
  br label %cond.end, !dbg !17615

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call163, %cond.true ], [ %call164, %cond.false ], !dbg !17615
  call void @llvm.dbg.value(metadata i32 %cond, metadata !17448, metadata !DIExpression()), !dbg !17618
  %cmp165 = icmp eq i32 %cond, -1, !dbg !17619
  %or.cond264 = select i1 %cmp165, i1 %tobool169.not, i1 false, !dbg !17621
  br i1 %or.cond264, label %land.lhs.true170, label %if.end176, !dbg !17621

land.lhs.true170:                                 ; preds = %cond.end
  %call171 = call i64 @zmalloc_used_memory() #23, !dbg !17622
  %55 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60), align 8, !dbg !17623, !tbaa !1379
  %div = udiv i64 %55, 10, !dbg !17624
  %add172 = add i64 %div, %55, !dbg !17625
  %cmp173 = icmp ugt i64 %call171, %add172, !dbg !17626
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !17627

if.then175:                                       ; preds = %land.lhs.true170
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.891, i64 0, i64 0)) #22, !dbg !17628
  br label %if.end176, !dbg !17630

if.end176:                                        ; preds = %if.then175, %land.lhs.true170, %cond.end
  %56 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4
  %cmp180 = icmp sgt i32 %56, 0
  %or.cond212 = select i1 %cmp165, i1 true, i1 %cmp180, !dbg !17631
  %. = select i1 %or.cond212, i32 16, i32 0, !dbg !17633
  br label %cleanup184, !dbg !17633

cleanup184:                                       ; preds = %if.end176, %while.body154
  %cleanup.dest.slot.2 = phi i32 [ 15, %while.body154 ], [ %., %if.end176 ]
  %switch265 = icmp eq i32 %cleanup.dest.slot.2, 16
  %.old213 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56), align 4
  %tobool150.old.not = icmp eq i32 %.old213, 0
  %or.cond267 = select i1 %switch265, i1 true, i1 %tobool150.old.not
  br i1 %or.cond267, label %if.end188, label %land.rhs

if.end188:                                        ; preds = %cleanup184, %land.rhs, %for.end145
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !17634, !tbaa !2055
  %cmp189 = icmp eq i32 %57, 1, !dbg !17636
  %rem192 = srem i32 %0, 10
  %tobool193.not = icmp eq i32 %rem192, 0
  %or.cond266 = select i1 %cmp189, i1 %tobool193.not, i1 false, !dbg !17637
  br i1 %or.cond266, label %if.then194, label %if.end204, !dbg !17637

if.then194:                                       ; preds = %if.end188
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.892, i64 0, i64 0)) #22, !dbg !17638
  %call195 = call i32 @syncWithMaster() #22, !dbg !17640
  %cmp196 = icmp eq i32 %call195, 0, !dbg !17642
  br i1 %cmp196, label %if.then198, label %if.end204, !dbg !17643

if.then198:                                       ; preds = %if.then194
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.893, i64 0, i64 0)) #22, !dbg !17644
  %58 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 4, !dbg !17646, !tbaa !1260
  %tobool199.not = icmp eq i32 %58, 0, !dbg !17648
  br i1 %tobool199.not, label %if.end204, label %if.then200, !dbg !17649

if.then200:                                       ; preds = %if.then198
  %call201 = call i32 @rewriteAppendOnlyFileBackground() #22, !dbg !17650
  br label %if.end204, !dbg !17650

if.end204:                                        ; preds = %if.then194, %if.then200, %if.then198, %if.end188
  ret i32 100, !dbg !17651
}

; Function Attrs: noinline nounwind uwtable
define internal void @acceptHandler(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* nocapture noundef readnone %privdata, i32 noundef %mask) #0 !dbg !17652 {
entry:
  %cport = alloca i32, align 4
  %cip = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !17654, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i32 %fd, metadata !17655, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !17656, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i32 %mask, metadata !17657, metadata !DIExpression()), !dbg !17665
  %0 = bitcast i32* %cport to i8*, !dbg !17666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !17666
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %cip, i64 0, i64 0, !dbg !17667
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #24, !dbg !17667
  call void @llvm.dbg.declare(metadata [128 x i8]* %cip, metadata !17660, metadata !DIExpression()), !dbg !17668
  call void @llvm.dbg.value(metadata i32* %cport, metadata !17658, metadata !DIExpression(DW_OP_deref)), !dbg !17665
  %call = call i32 @anetAccept(i8* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9, i64 0), i32 noundef %fd, i8* noundef nonnull %1, i32* noundef nonnull %cport) #23, !dbg !17669
  call void @llvm.dbg.value(metadata i32 %call, metadata !17659, metadata !DIExpression()), !dbg !17665
  %cmp = icmp eq i32 %call, -1, !dbg !17670
  br i1 %cmp, label %if.then, label %if.end, !dbg !17672

if.then:                                          ; preds = %entry
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.894, i64 0, i64 0), i8* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9, i64 0)) #22, !dbg !17673
  br label %cleanup, !dbg !17675

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %cport, align 4, !dbg !17676, !tbaa !926
  call void @llvm.dbg.value(metadata i32 %2, metadata !17658, metadata !DIExpression()), !dbg !17665
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.895, i64 0, i64 0), i8* noundef nonnull %1, i32 noundef %2) #22, !dbg !17677
  %call2 = call %struct.redisClient* @createClient(i32 noundef %call) #22, !dbg !17678
  call void @llvm.dbg.value(metadata %struct.redisClient* %call2, metadata !17661, metadata !DIExpression()), !dbg !17665
  %cmp3 = icmp eq %struct.redisClient* %call2, null, !dbg !17680
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !17681

if.then4:                                         ; preds = %if.end
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.896, i64 0, i64 0)) #22, !dbg !17682
  %call5 = call i32 @close(i32 noundef %call) #23, !dbg !17684
  br label %cleanup, !dbg !17685

if.end6:                                          ; preds = %if.end
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 49), align 4, !dbg !17686, !tbaa !2031
  %tobool.not = icmp eq i32 %3, 0, !dbg !17687
  br i1 %tobool.not, label %if.end15, label %land.lhs.true, !dbg !17688

land.lhs.true:                                    ; preds = %if.end6
  %4 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !17689, !tbaa !2657
  %len = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !17689
  %5 = load i32, i32* %len, align 8, !dbg !17689, !tbaa !1358
  %cmp7 = icmp ugt i32 %5, %3, !dbg !17690
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !17691

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.897, i64 0, i64 0), metadata !17662, metadata !DIExpression()), !dbg !17692
  %fd9 = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call2, i64 0, i32 0, !dbg !17693
  %6 = load i32, i32* %fd9, align 8, !dbg !17693, !tbaa !943
  %call10 = call i64 @strlen(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.897, i64 0, i64 0)) #27, !dbg !17695
  %call11 = call i64 @write(i32 noundef %6, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.897, i64 0, i64 0), i64 noundef %call10) #23, !dbg !17696
  call void @freeClient(%struct.redisClient* noundef nonnull %call2) #22, !dbg !17697
  br label %cleanup

if.end15:                                         ; preds = %land.lhs.true, %if.end6
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !17698, !tbaa !15669
  %inc = add nsw i64 %7, 1, !dbg !17698
  store i64 %inc, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !17698, !tbaa !15669
  br label %cleanup, !dbg !17699

cleanup:                                          ; preds = %if.end15, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #24, !dbg !17699
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !17699
  ret void, !dbg !17699
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @oom(i8* noundef %msg) #19 !dbg !17700 {
entry:
  call void @llvm.dbg.value(metadata i8* %msg, metadata !17704, metadata !DIExpression()), !dbg !17705
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.898, i64 0, i64 0), i8* noundef %msg) #22, !dbg !17706
  %call = tail call i32 @sleep(i32 noundef 1) #23, !dbg !17707
  tail call void @abort() #26, !dbg !17708
  unreachable, !dbg !17708
}

; Function Attrs: noinline nounwind uwtable
define internal void @vmInit() #0 !dbg !17709 {
entry:
  %pipefds = alloca [2 x i32], align 4
  %stacksize = alloca i64, align 8
  %fl = alloca %struct.flock, align 8
  %0 = bitcast [2 x i32]* %pipefds to i8*, !dbg !17724
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24, !dbg !17724
  call void @llvm.dbg.declare(metadata [2 x i32]* %pipefds, metadata !17712, metadata !DIExpression()), !dbg !17725
  %1 = bitcast i64* %stacksize to i8*, !dbg !17726
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !17726
  %2 = bitcast %struct.flock* %fl to i8*, !dbg !17727
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #24, !dbg !17727
  call void @llvm.dbg.declare(metadata %struct.flock* %fl, metadata !17715, metadata !DIExpression()), !dbg !17728
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 4, !dbg !17729, !tbaa !2236
  %cmp.not = icmp eq i32 %3, 0, !dbg !17731
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !17732

if.then:                                          ; preds = %entry
  tail call void @zmalloc_enable_thread_safeness() #23, !dbg !17733
  br label %if.end, !dbg !17733

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !17734, !tbaa !2197
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.899, i64 0, i64 0), i8* noundef %4) #22, !dbg !17735
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !17736, !tbaa !2197
  %call = tail call %struct._IO_FILE* @fopen64(i8* noundef %5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i64 0, i64 0)) #23, !dbg !17738
  store %struct._IO_FILE* %call, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !17739, !tbaa !5949
  %cmp1 = icmp eq %struct._IO_FILE* %call, null, !dbg !17740
  br i1 %cmp1, label %if.end4, label %if.end9, !dbg !17741

if.end4:                                          ; preds = %if.end
  %6 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !17742, !tbaa !2197
  %call3 = tail call %struct._IO_FILE* @fopen64(i8* noundef %6, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.900, i64 0, i64 0)) #23, !dbg !17744
  store %struct._IO_FILE* %call3, %struct._IO_FILE** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63), align 8, !dbg !17745, !tbaa !5949
  %cmp5 = icmp eq %struct._IO_FILE* %call3, null, !dbg !17746
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !17748

if.then6:                                         ; preds = %if.end4
  %call7 = tail call i32* @__errno_location() #25, !dbg !17749
  %7 = load i32, i32* %call7, align 4, !dbg !17749, !tbaa !926
  %call8 = tail call i8* @strerror(i32 noundef %7) #23, !dbg !17751
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.901, i64 0, i64 0), i8* noundef %call8) #22, !dbg !17752
  tail call void @exit(i32 noundef 1) #26, !dbg !17753
  unreachable, !dbg !17753

if.end9:                                          ; preds = %if.end, %if.end4
  %8 = phi %struct._IO_FILE* [ %call3, %if.end4 ], [ %call, %if.end ]
  %call10 = tail call i32 @fileno(%struct._IO_FILE* noundef nonnull %8) #23, !dbg !17754
  store i32 %call10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !17755, !tbaa !7745
  %l_type = getelementptr inbounds %struct.flock, %struct.flock* %fl, i64 0, i32 0, !dbg !17756
  store i16 1, i16* %l_type, align 8, !dbg !17757, !tbaa !17758
  %l_whence = getelementptr inbounds %struct.flock, %struct.flock* %fl, i64 0, i32 1, !dbg !17760
  store i16 0, i16* %l_whence, align 2, !dbg !17761, !tbaa !17762
  %l_start = getelementptr inbounds %struct.flock, %struct.flock* %fl, i64 0, i32 2, !dbg !17763
  %9 = bitcast i64* %l_start to <2 x i64>*, !dbg !17764
  store <2 x i64> zeroinitializer, <2 x i64>* %9, align 8, !dbg !17764, !tbaa !790
  %call11 = call i32 (i32, i32, ...) @fcntl64(i32 noundef %call10, i32 noundef 6, %struct.flock* noundef nonnull %fl) #23, !dbg !17765
  %cmp12 = icmp eq i32 %call11, -1, !dbg !17767
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !17768

if.then13:                                        ; preds = %if.end9
  %10 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57), align 8, !dbg !17769, !tbaa !2197
  %call14 = tail call i32* @__errno_location() #25, !dbg !17771
  %11 = load i32, i32* %call14, align 4, !dbg !17771, !tbaa !926
  %call15 = call i8* @strerror(i32 noundef %11) #23, !dbg !17772
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.902, i64 0, i64 0), i8* noundef %10, i8* noundef %call15) #22, !dbg !17773
  call void @exit(i32 noundef 1) #26, !dbg !17774
  unreachable, !dbg !17774

if.end16:                                         ; preds = %if.end9
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 65) to <2 x i64>*), align 8, !dbg !17775, !tbaa !790
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81) to <2 x i64>*), align 8, !dbg !17776, !tbaa !4936
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83) to <2 x i64>*), align 8, !dbg !17777, !tbaa !4936
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !17778, !tbaa !2227
  %13 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58), align 8, !dbg !17779, !tbaa !2218
  %mul = mul nsw i64 %13, %12, !dbg !17780
  call void @llvm.dbg.value(metadata i64 %mul, metadata !17711, metadata !DIExpression()), !dbg !17781
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.903, i64 0, i64 0), i64 noundef %mul) #22, !dbg !17782
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !17783, !tbaa !7745
  %call17 = call i32 @ftruncate64(i32 noundef %14, i64 noundef %mul) #23, !dbg !17785
  %cmp18 = icmp eq i32 %call17, -1, !dbg !17786
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !17787

if.then19:                                        ; preds = %if.end16
  %call20 = tail call i32* @__errno_location() #25, !dbg !17788
  %15 = load i32, i32* %call20, align 4, !dbg !17788, !tbaa !926
  %call21 = call i8* @strerror(i32 noundef %15) #23, !dbg !17790
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.904, i64 0, i64 0), i8* noundef %call21) #22, !dbg !17791
  call void @exit(i32 noundef 1) #26, !dbg !17792
  unreachable, !dbg !17792

if.else:                                          ; preds = %if.end16
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.905, i64 0, i64 0)) #22, !dbg !17793
  %16 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !17795, !tbaa !2227
  %add = add nsw i64 %16, 7, !dbg !17796
  %div = sdiv i64 %add, 8, !dbg !17797
  %call23 = call i8* @zmalloc(i64 noundef %div) #23, !dbg !17798
  store i8* %call23, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67), align 8, !dbg !17799, !tbaa !5776
  %17 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !17800, !tbaa !2227
  %add24 = add nsw i64 %17, 7, !dbg !17801
  %div25 = sdiv i64 %add24, 8, !dbg !17802
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.906, i64 0, i64 0), i64 noundef %div25, i64 noundef %17) #22, !dbg !17803
  %18 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67), align 8, !dbg !17804, !tbaa !5776
  %19 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59), align 8, !dbg !17805, !tbaa !2227
  %add26 = add nsw i64 %19, 7, !dbg !17806
  %div27 = sdiv i64 %add26, 8, !dbg !17807
  %call28 = call i8* @memset(i8* noundef %18, i32 noundef 0, i64 noundef %div27) #23, !dbg !17808
  %call29 = call %struct.list* @listCreate() #23, !dbg !17809
  store %struct.list* %call29, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !17810, !tbaa !5634
  %call30 = call %struct.list* @listCreate() #23, !dbg !17811
  store %struct.list* %call30, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !17812, !tbaa !5636
  %call31 = call %struct.list* @listCreate() #23, !dbg !17813
  store %struct.list* %call31, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !17814, !tbaa !5638
  %call32 = call %struct.list* @listCreate() #23, !dbg !17815
  store %struct.list* %call32, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !17816, !tbaa !2529
  %call33 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 73), %union.pthread_mutexattr_t* noundef null) #23, !dbg !17817
  %call34 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74), %union.pthread_mutexattr_t* noundef null) #23, !dbg !17818
  %call35 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75), %union.pthread_mutexattr_t* noundef null) #23, !dbg !17819
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !17820, !tbaa !5713
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !17821
  %call36 = call i32 @pipe(i32* noundef nonnull %arraydecay) #23, !dbg !17823
  %cmp37 = icmp eq i32 %call36, -1, !dbg !17824
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !17825

if.then38:                                        ; preds = %if.else
  %call39 = tail call i32* @__errno_location() #25, !dbg !17826
  %20 = load i32, i32* %call39, align 4, !dbg !17826, !tbaa !926
  %call40 = call i8* @strerror(i32 noundef %20) #23, !dbg !17828
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.907, i64 0, i64 0), i8* noundef %call40) #22, !dbg !17829
  call void @exit(i32 noundef 1) #26, !dbg !17830
  unreachable, !dbg !17830

if.end41:                                         ; preds = %if.else
  %21 = load i32, i32* %arraydecay, align 4, !dbg !17831, !tbaa !926
  store i32 %21, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 79), align 8, !dbg !17832, !tbaa !7724
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !17833
  %22 = load i32, i32* %arrayidx42, align 4, !dbg !17833, !tbaa !926
  store i32 %22, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 80), align 4, !dbg !17834, !tbaa !5925
  %call43 = call i32 @anetNonBlock(i8* noundef null, i32 noundef %21) #23, !dbg !17835
  %cmp44.not = icmp eq i32 %call43, -1, !dbg !17835
  br i1 %cmp44.not, label %cond.false, label %cond.end, !dbg !17835

cond.false:                                       ; preds = %if.end41
  call void @_redisAssert(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.908, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i32 noundef 8922) #22, !dbg !17835
  call void @_exit(i32 noundef 1) #26, !dbg !17835
  unreachable, !dbg !17835

cond.end:                                         ; preds = %if.end41
  %call45 = call i32 @pthread_attr_init(%union.pthread_attr_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76)) #23, !dbg !17836
  call void @llvm.dbg.value(metadata i64* %stacksize, metadata !17714, metadata !DIExpression(DW_OP_deref)), !dbg !17781
  %call46 = call i32 @pthread_attr_getstacksize(%union.pthread_attr_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76), i64* noundef nonnull %stacksize) #23, !dbg !17837
  %23 = load i64, i64* %stacksize, align 8, !dbg !17838, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %23, metadata !17714, metadata !DIExpression()), !dbg !17781
  %tobool.not = icmp eq i64 %23, 0, !dbg !17838
  br i1 %tobool.not, label %while.body.preheader, label %if.end48, !dbg !17840

if.end48:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata i64 %23, metadata !17714, metadata !DIExpression()), !dbg !17781
  %cmp4960 = icmp ult i64 %23, 4194304, !dbg !17841
  br i1 %cmp4960, label %while.body.preheader, label %while.end, !dbg !17842

while.body.preheader:                             ; preds = %cond.end, %if.end48
  %.ph = phi i64 [ 1, %cond.end ], [ %23, %if.end48 ]
  br label %while.body, !dbg !17842

while.body:                                       ; preds = %while.body.preheader, %while.body
  %24 = phi i64 [ %mul50, %while.body ], [ %.ph, %while.body.preheader ]
  call void @llvm.dbg.value(metadata i64 %24, metadata !17714, metadata !DIExpression()), !dbg !17781
  %mul50 = shl nuw nsw i64 %24, 1, !dbg !17843
  call void @llvm.dbg.value(metadata i64 %mul50, metadata !17714, metadata !DIExpression()), !dbg !17781
  %cmp49 = icmp ult i64 %24, 2097152, !dbg !17841
  br i1 %cmp49, label %while.body, label %while.cond.while.end_crit_edge, !dbg !17842, !llvm.loop !17844

while.cond.while.end_crit_edge:                   ; preds = %while.body
  store i64 %mul50, i64* %stacksize, align 8, !dbg !17843, !tbaa !790
  br label %while.end, !dbg !17842

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %if.end48
  %.lcssa = phi i64 [ %mul50, %while.cond.while.end_crit_edge ], [ %23, %if.end48 ], !dbg !17846
  %call51 = call i32 @pthread_attr_setstacksize(%union.pthread_attr_t* noundef getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76), i64 noundef %.lcssa) #23, !dbg !17847
  %25 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !17848, !tbaa !941
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 79), align 8, !dbg !17850, !tbaa !7724
  %call52 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %25, i32 noundef %26, i32 noundef 1, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @vmThreadedIOCompletedJob, i8* noundef null) #23, !dbg !17851
  %cmp53 = icmp eq i32 %call52, -1, !dbg !17852
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !17853

if.then54:                                        ; preds = %while.end
  call void @oom(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.471, i64 0, i64 0)) #22, !dbg !17854
  unreachable, !dbg !17854

if.end55:                                         ; preds = %while.end
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #24, !dbg !17855
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #24, !dbg !17855
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24, !dbg !17855
  ret void, !dbg !17855
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @segvHandler(i32 noundef %sig, %struct.siginfo_t* nocapture noundef readnone %info, i8* nocapture noundef readonly %secret) #19 !dbg !17856 {
entry:
  %trace = alloca [100 x i8*], align 16
  %offset = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %sig, metadata !17858, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata %struct.siginfo_t* %info, metadata !17859, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata i8* %secret, metadata !17860, metadata !DIExpression()), !dbg !17876
  %0 = bitcast [100 x i8*]* %trace to i8*, !dbg !17877
  call void @llvm.lifetime.start.p0i8(i64 800, i8* nonnull %0) #24, !dbg !17877
  call void @llvm.dbg.declare(metadata [100 x i8*]* %trace, metadata !17861, metadata !DIExpression()), !dbg !17878
  call void @llvm.dbg.value(metadata i8** null, metadata !17865, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata i32 0, metadata !17867, metadata !DIExpression()), !dbg !17876
  %1 = bitcast i64* %offset to i8*, !dbg !17879
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #24, !dbg !17879
  call void @llvm.dbg.value(metadata i64 0, metadata !17868, metadata !DIExpression()), !dbg !17876
  store i64 0, i64* %offset, align 8, !dbg !17880, !tbaa !790
  %2 = bitcast i8* %secret to %struct.ucontext_t*, !dbg !17881
  call void @llvm.dbg.value(metadata %struct.ucontext_t* %2, metadata !17869, metadata !DIExpression()), !dbg !17876
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.473, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), i32 noundef %sig) #22, !dbg !17882
  %call = tail call i8* @genRedisInfoString() #22, !dbg !17883
  call void @llvm.dbg.value(metadata i8* %call, metadata !17870, metadata !DIExpression()), !dbg !17876
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.474, i64 0, i64 0), i8* noundef %call) #22, !dbg !17884
  %arraydecay = getelementptr inbounds [100 x i8*], [100 x i8*]* %trace, i64 0, i64 0, !dbg !17885
  %call1 = call i32 @backtrace(i8** noundef nonnull %arraydecay, i32 noundef 100) #23, !dbg !17886
  call void @llvm.dbg.value(metadata i32 %call1, metadata !17867, metadata !DIExpression()), !dbg !17876
  %call2 = call i8* @getMcontextEip(%struct.ucontext_t* noundef %2) #22, !dbg !17887
  %cmp.not = icmp eq i8* %call2, null, !dbg !17889
  br i1 %cmp.not, label %if.end, label %if.then, !dbg !17890

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [100 x i8*], [100 x i8*]* %trace, i64 0, i64 1, !dbg !17891
  store i8* %call2, i8** %arrayidx, align 8, !dbg !17893, !tbaa !782
  br label %if.end, !dbg !17894

if.end:                                           ; preds = %if.then, %entry
  %call5 = call i8** @backtrace_symbols(i8** noundef nonnull %arraydecay, i32 noundef %call1) #23, !dbg !17895
  call void @llvm.dbg.value(metadata i8** %call5, metadata !17865, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata i32 1, metadata !17866, metadata !DIExpression()), !dbg !17876
  %cmp634 = icmp sgt i32 %call1, 1, !dbg !17896
  br i1 %cmp634, label %for.body.preheader, label %for.end, !dbg !17897

for.body.preheader:                               ; preds = %if.end
  %wide.trip.count = zext i32 %call1 to i64, !dbg !17896
  br label %for.body, !dbg !17897

for.body:                                         ; preds = %for.body.preheader, %if.end20
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %if.end20 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !17866, metadata !DIExpression()), !dbg !17876
  %arrayidx7 = getelementptr inbounds [100 x i8*], [100 x i8*]* %trace, i64 0, i64 %indvars.iv, !dbg !17898
  %3 = load i8*, i8** %arrayidx7, align 8, !dbg !17898, !tbaa !782
  call void @llvm.dbg.value(metadata i64* %offset, metadata !17868, metadata !DIExpression(DW_OP_deref)), !dbg !17876
  %call8 = call i8* @findFuncName(i8* noundef %3, i64* noundef nonnull %offset) #22, !dbg !17899
  call void @llvm.dbg.value(metadata i8* %call8, metadata !17871, metadata !DIExpression()), !dbg !17900
  %arrayidx10 = getelementptr inbounds i8*, i8** %call5, i64 %indvars.iv, !dbg !17901
  %4 = load i8*, i8** %arrayidx10, align 8, !dbg !17901, !tbaa !782
  %call11 = call i8* @strchr(i8* noundef %4, i32 noundef 43) #27, !dbg !17902
  call void @llvm.dbg.value(metadata i8* %call11, metadata !17875, metadata !DIExpression()), !dbg !17900
  %tobool.not = icmp eq i8* %call8, null, !dbg !17903
  br i1 %tobool.not, label %if.then15, label %lor.lhs.false, !dbg !17905

lor.lhs.false:                                    ; preds = %for.body
  %tobool12.not = icmp eq i8* %call11, null, !dbg !17906
  br i1 %tobool12.not, label %lor.lhs.false.if.else_crit_edge, label %land.lhs.true, !dbg !17907

lor.lhs.false.if.else_crit_edge:                  ; preds = %lor.lhs.false
  %.pre = load i64, i64* %offset, align 8, !dbg !17908, !tbaa !790
  br label %if.else, !dbg !17907

land.lhs.true:                                    ; preds = %lor.lhs.false
  %add.ptr = getelementptr inbounds i8, i8* %call11, i64 1, !dbg !17910
  %call13 = call i64 @strtol(i8* noundef nonnull %add.ptr, i8** noundef null, i32 noundef 10) #23, !dbg !17911
  %5 = load i64, i64* %offset, align 8, !dbg !17912, !tbaa !790
  call void @llvm.dbg.value(metadata i64 %5, metadata !17868, metadata !DIExpression()), !dbg !17876
  %cmp14 = icmp ult i64 %call13, %5, !dbg !17913
  br i1 %cmp14, label %land.lhs.true.if.then15_crit_edge, label %if.else, !dbg !17914

land.lhs.true.if.then15_crit_edge:                ; preds = %land.lhs.true
  %.pre39 = load i8*, i8** %arrayidx10, align 8, !dbg !17915, !tbaa !782
  br label %if.then15, !dbg !17914

if.then15:                                        ; preds = %land.lhs.true.if.then15_crit_edge, %for.body
  %6 = phi i8* [ %.pre39, %land.lhs.true.if.then15_crit_edge ], [ %4, %for.body ], !dbg !17915
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.474, i64 0, i64 0), i8* noundef %6) #22, !dbg !17917
  br label %if.end20, !dbg !17918

if.else:                                          ; preds = %lor.lhs.false.if.else_crit_edge, %land.lhs.true
  %7 = phi i64 [ %.pre, %lor.lhs.false.if.else_crit_edge ], [ %5, %land.lhs.true ], !dbg !17908
  %8 = load i8*, i8** %arrayidx7, align 8, !dbg !17919, !tbaa !782
  call void @llvm.dbg.value(metadata i64 %7, metadata !17868, metadata !DIExpression()), !dbg !17876
  %conv = trunc i64 %7 to i32, !dbg !17920
  %9 = trunc i64 %indvars.iv to i32, !dbg !17921
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.475, i64 0, i64 0), i32 noundef %9, i8* noundef %8, i8* noundef nonnull %call8, i32 noundef %conv) #22, !dbg !17921
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17922
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17866, metadata !DIExpression()), !dbg !17876
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !17896
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !17897, !llvm.loop !17923

for.end:                                          ; preds = %if.end20, %if.end
  call void @_exit(i32 noundef 0) #26, !dbg !17925
  unreachable, !dbg !17925
}

; Function Attrs: nounwind
declare !dbg !17926 dso_local i32 @sigaction(i32 noundef, %struct.sigaction* noundef, %struct.sigaction* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @sigtermHandler(i32 noundef %sig) #0 !dbg !17934 {
entry:
  call void @llvm.dbg.value(metadata i32 %sig, metadata !17936, metadata !DIExpression()), !dbg !17937
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.852, i64 0, i64 0)) #22, !dbg !17938
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 4, !dbg !17939, !tbaa !16921
  ret void, !dbg !17940
}

declare !dbg !17941 dso_local i32 @backtrace(i8** noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal i8* @getMcontextEip(%struct.ucontext_t* nocapture noundef readonly %uc) #16 !dbg !17946 {
entry:
  call void @llvm.dbg.value(metadata %struct.ucontext_t* %uc, metadata !17950, metadata !DIExpression()), !dbg !17951
  %arrayidx = getelementptr inbounds %struct.ucontext_t, %struct.ucontext_t* %uc, i64 0, i32 3, i32 0, i64 14, !dbg !17952
  %0 = load i64, i64* %arrayidx, align 8, !dbg !17952, !tbaa !4936
  %1 = inttoptr i64 %0 to i8*, !dbg !17953
  ret i8* %1, !dbg !17954
}

; Function Attrs: nounwind
declare !dbg !17955 dso_local i8** @backtrace_symbols(i8** noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable writeonly
define internal i8* @findFuncName(i8* noundef %pointer, i64* nocapture noundef writeonly %offset) #20 !dbg !17960 {
entry:
  call void @llvm.dbg.value(metadata i8* %pointer, metadata !17965, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64* %offset, metadata !17966, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 -1, metadata !17968, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64 0, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 0, metadata !17967, metadata !DIExpression()), !dbg !17975
  %0 = ptrtoint i8* %pointer to i64
  %cmp.not = icmp eq i8* %pointer, inttoptr (i64 -1 to i8*)
  call void @llvm.dbg.value(metadata i64 0, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 0, metadata !17967, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 -1, metadata !17968, metadata !DIExpression()), !dbg !17975
  br label %for.body, !dbg !17976

for.body:                                         ; preds = %if.end12.1, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %if.end12.1 ]
  %1 = phi i64 [ ptrtoint (i8* (i8*)* @IOThreadEntryPoint to i64), %entry ], [ %5, %if.end12.1 ]
  %minoff.042 = phi i64 [ 0, %entry ], [ %minoff.1.1, %if.end12.1 ]
  %ret.039 = phi i32 [ -1, %entry ], [ %ret.1.1, %if.end12.1 ]
  call void @llvm.dbg.value(metadata i64 %minoff.042, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !17967, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 %ret.039, metadata !17968, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64 %0, metadata !17971, metadata !DIExpression()), !dbg !17977
  %cmp5.not = icmp ugt i64 %1, %0
  %or.cond = select i1 %cmp.not, i1 true, i1 %cmp5.not, !dbg !17978
  br i1 %or.cond, label %if.end12, label %if.then, !dbg !17978

if.then:                                          ; preds = %for.body
  %sub = sub i64 %0, %1, !dbg !17980
  call void @llvm.dbg.value(metadata i64 %sub, metadata !17969, metadata !DIExpression()), !dbg !17975
  %cmp9 = icmp slt i32 %ret.039, 0, !dbg !17982
  %cmp10 = icmp ult i64 %sub, %minoff.042
  %or.cond37 = select i1 %cmp9, i1 true, i1 %cmp10, !dbg !17984
  %2 = trunc i64 %indvars.iv to i32, !dbg !17984
  %spec.select = select i1 %or.cond37, i32 %2, i32 %ret.039, !dbg !17984
  %spec.select38 = select i1 %or.cond37, i64 %sub, i64 %minoff.042, !dbg !17984
  br label %if.end12, !dbg !17984

if.end12:                                         ; preds = %if.then, %for.body
  %ret.1 = phi i32 [ %ret.039, %for.body ], [ %spec.select, %if.then ], !dbg !17975
  %minoff.1 = phi i64 [ %minoff.042, %for.body ], [ %spec.select38, %if.then ], !dbg !17975
  call void @llvm.dbg.value(metadata i64 %minoff.1, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !17968, metadata !DIExpression()), !dbg !17975
  %indvars.iv.next = or i64 %indvars.iv, 1, !dbg !17985
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17967, metadata !DIExpression()), !dbg !17975
  %pointer1 = getelementptr inbounds [358 x %struct.redisFunctionSym], [358 x %struct.redisFunctionSym]* @symsTable, i64 0, i64 %indvars.iv.next, i32 1, !dbg !17986
  %3 = load i64, i64* %pointer1, align 8, !dbg !17986, !tbaa !17987
  %tobool.not = icmp eq i64 %indvars.iv.next, 357, !dbg !17976
  br i1 %tobool.not, label %for.end, label %for.body.1, !dbg !17976, !llvm.loop !17989

for.body.1:                                       ; preds = %if.end12
  call void @llvm.dbg.value(metadata i64 %minoff.1, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !17967, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !17968, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i64 %0, metadata !17971, metadata !DIExpression()), !dbg !17977
  %cmp5.not.1 = icmp ugt i64 %3, %0
  %or.cond.1 = select i1 %cmp.not, i1 true, i1 %cmp5.not.1, !dbg !17978
  br i1 %or.cond.1, label %if.end12.1, label %if.then.1, !dbg !17978

if.then.1:                                        ; preds = %for.body.1
  %sub.1 = sub i64 %0, %3, !dbg !17980
  call void @llvm.dbg.value(metadata i64 %sub.1, metadata !17969, metadata !DIExpression()), !dbg !17975
  %cmp9.1 = icmp slt i32 %ret.1, 0, !dbg !17982
  %cmp10.1 = icmp ult i64 %sub.1, %minoff.1
  %or.cond37.1 = select i1 %cmp9.1, i1 true, i1 %cmp10.1, !dbg !17984
  %4 = trunc i64 %indvars.iv.next to i32, !dbg !17984
  %spec.select.1 = select i1 %or.cond37.1, i32 %4, i32 %ret.1, !dbg !17984
  %spec.select38.1 = select i1 %or.cond37.1, i64 %sub.1, i64 %minoff.1, !dbg !17984
  br label %if.end12.1, !dbg !17984

if.end12.1:                                       ; preds = %if.then.1, %for.body.1
  %ret.1.1 = phi i32 [ %ret.1, %for.body.1 ], [ %spec.select.1, %if.then.1 ], !dbg !17975
  %minoff.1.1 = phi i64 [ %minoff.1, %for.body.1 ], [ %spec.select38.1, %if.then.1 ], !dbg !17975
  call void @llvm.dbg.value(metadata i64 %minoff.1.1, metadata !17970, metadata !DIExpression()), !dbg !17975
  call void @llvm.dbg.value(metadata i32 %ret.1.1, metadata !17968, metadata !DIExpression()), !dbg !17975
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2, !dbg !17985
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.1, metadata !17967, metadata !DIExpression()), !dbg !17975
  %pointer1.1 = getelementptr inbounds [358 x %struct.redisFunctionSym], [358 x %struct.redisFunctionSym]* @symsTable, i64 0, i64 %indvars.iv.next.1, i32 1, !dbg !17986
  %5 = load i64, i64* %pointer1.1, align 8, !dbg !17986, !tbaa !17987
  br label %for.body

for.end:                                          ; preds = %if.end12
  %cmp13 = icmp eq i32 %ret.1, -1, !dbg !17991
  br i1 %cmp13, label %cleanup, label %if.end15, !dbg !17993

if.end15:                                         ; preds = %for.end
  store i64 %minoff.1, i64* %offset, align 8, !dbg !17994, !tbaa !790
  %idxprom16 = sext i32 %ret.1 to i64, !dbg !17995
  %name = getelementptr inbounds [358 x %struct.redisFunctionSym], [358 x %struct.redisFunctionSym]* @symsTable, i64 0, i64 %idxprom16, i32 0, !dbg !17996
  %6 = load i8*, i8** %name, align 16, !dbg !17996, !tbaa !17997
  br label %cleanup, !dbg !17998

cleanup:                                          ; preds = %for.end, %if.end15
  %retval.0 = phi i8* [ %6, %if.end15 ], [ null, %for.end ], !dbg !17975
  ret i8* %retval.0, !dbg !17999
}

; Function Attrs: noinline nounwind uwtable
define internal void @closeTimedoutClients() #0 !dbg !18000 {
entry:
  %li = alloca %struct.listIter, align 8
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !18006
  call void @llvm.dbg.value(metadata i64 %call, metadata !18004, metadata !DIExpression()), !dbg !18007
  %0 = bitcast %struct.listIter* %li to i8*, !dbg !18008
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #24, !dbg !18008
  call void @llvm.dbg.declare(metadata %struct.listIter* %li, metadata !18005, metadata !DIExpression()), !dbg !18009
  %1 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !18010, !tbaa !2657
  call void @listRewind(%struct.list* noundef %1, %struct.listIter* noundef nonnull %li) #23, !dbg !18011
  %call148 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !18012
  call void @llvm.dbg.value(metadata %struct.listNode* %call148, metadata !18003, metadata !DIExpression()), !dbg !18007
  %cmp.not49 = icmp eq %struct.listNode* %call148, null, !dbg !18013
  br i1 %cmp.not49, label %while.end, label %while.body, !dbg !18014

while.body:                                       ; preds = %entry, %if.end30
  %call150 = phi %struct.listNode* [ %call1, %if.end30 ], [ %call148, %entry ]
  %value = getelementptr inbounds %struct.listNode, %struct.listNode* %call150, i64 0, i32 2, !dbg !18015
  %2 = bitcast i8** %value to %struct.redisClient**, !dbg !18015
  %3 = load %struct.redisClient*, %struct.redisClient** %2, align 8, !dbg !18015, !tbaa !891
  call void @llvm.dbg.value(metadata %struct.redisClient* %3, metadata !18002, metadata !DIExpression()), !dbg !18007
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 8, !dbg !18017, !tbaa !1910
  %tobool.not = icmp ne i32 %4, 0, !dbg !18019
  %flags18.phi.trans.insert = getelementptr inbounds %struct.redisClient, %struct.redisClient* %3, i64 0, i32 13
  %.pre = load i32, i32* %flags18.phi.trans.insert, align 8, !dbg !18020, !tbaa !1402
  %5 = and i32 %.pre, 3
  %6 = icmp eq i32 %5, 0
  %or.cond = select i1 %tobool.not, i1 %6, i1 false, !dbg !18021
  br i1 %or.cond, label %land.lhs.true7, label %if.else, !dbg !18021

land.lhs.true7:                                   ; preds = %while.body
  %pubsub_channels = getelementptr inbounds %struct.redisClient, %struct.redisClient* %3, i64 0, i32 25, !dbg !18022
  %7 = load %struct.dict*, %struct.dict** %pubsub_channels, align 8, !dbg !18022, !tbaa !2640
  %used = getelementptr inbounds %struct.dict, %struct.dict* %7, i64 0, i32 2, i64 0, i32 3, !dbg !18022
  %8 = load i64, i64* %used, align 8, !dbg !18022, !tbaa !3545
  %used11 = getelementptr inbounds %struct.dict, %struct.dict* %7, i64 0, i32 2, i64 1, i32 3, !dbg !18022
  %9 = load i64, i64* %used11, align 8, !dbg !18022, !tbaa !3545
  %add = sub i64 0, %9, !dbg !18023
  %cmp12 = icmp eq i64 %8, %add, !dbg !18023
  br i1 %cmp12, label %land.lhs.true13, label %if.else, !dbg !18024

land.lhs.true13:                                  ; preds = %land.lhs.true7
  %pubsub_patterns = getelementptr inbounds %struct.redisClient, %struct.redisClient* %3, i64 0, i32 26, !dbg !18025
  %10 = load %struct.list*, %struct.list** %pubsub_patterns, align 8, !dbg !18025, !tbaa !2643
  %len = getelementptr inbounds %struct.list, %struct.list* %10, i64 0, i32 5, !dbg !18025
  %11 = load i32, i32* %len, align 8, !dbg !18025, !tbaa !1358
  %cmp14 = icmp eq i32 %11, 0, !dbg !18026
  br i1 %cmp14, label %land.lhs.true15, label %if.else, !dbg !18027

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %lastinteraction = getelementptr inbounds %struct.redisClient, %struct.redisClient* %3, i64 0, i32 12, !dbg !18028
  %12 = load i64, i64* %lastinteraction, align 8, !dbg !18028, !tbaa !5290
  %sub = sub nsw i64 %call, %12, !dbg !18029
  %conv = sext i32 %4 to i64, !dbg !18030
  %cmp16 = icmp sgt i64 %sub, %conv, !dbg !18031
  br i1 %cmp16, label %if.then, label %if.else, !dbg !18032

if.then:                                          ; preds = %land.lhs.true15
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.832, i64 0, i64 0)) #22, !dbg !18033
  call void @freeClient(%struct.redisClient* noundef nonnull %3) #22, !dbg !18035
  br label %if.end30, !dbg !18036

if.else:                                          ; preds = %while.body, %land.lhs.true15, %land.lhs.true13, %land.lhs.true7
  %and19 = and i32 %.pre, 16, !dbg !18037
  %tobool20.not = icmp eq i32 %and19, 0, !dbg !18037
  br i1 %tobool20.not, label %if.end30, label %if.then21, !dbg !18039

if.then21:                                        ; preds = %if.else
  %blockingto = getelementptr inbounds %struct.redisClient, %struct.redisClient* %3, i64 0, i32 23, !dbg !18040
  %13 = load i64, i64* %blockingto, align 8, !dbg !18040, !tbaa !12388
  %cmp22.not = icmp ne i64 %13, 0, !dbg !18043
  %cmp26 = icmp slt i64 %13, %call
  %or.cond47 = select i1 %cmp22.not, i1 %cmp26, i1 false, !dbg !18044
  br i1 %or.cond47, label %if.then28, label %if.end30, !dbg !18044

if.then28:                                        ; preds = %if.then21
  %14 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !18045, !tbaa !12346
  call void @addReply(%struct.redisClient* noundef nonnull %3, %struct.redisObject* noundef %14) #22, !dbg !18047
  call void @unblockClientWaitingData(%struct.redisClient* noundef nonnull %3) #22, !dbg !18048
  br label %if.end30, !dbg !18049

if.end30:                                         ; preds = %if.else, %if.then28, %if.then21, %if.then
  %call1 = call %struct.listNode* @listNext(%struct.listIter* noundef nonnull %li) #23, !dbg !18012
  call void @llvm.dbg.value(metadata %struct.listNode* %call1, metadata !18003, metadata !DIExpression()), !dbg !18007
  %cmp.not = icmp eq %struct.listNode* %call1, null, !dbg !18013
  br i1 %cmp.not, label %while.end, label %while.body, !dbg !18014, !llvm.loop !18050

while.end:                                        ; preds = %if.end30, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #24, !dbg !18052
  ret void, !dbg !18052
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.redisClient* @createClient(i32 noundef %fd) #0 !dbg !18053 {
entry:
  call void @llvm.dbg.value(metadata i32 %fd, metadata !18057, metadata !DIExpression()), !dbg !18059
  %call = tail call i8* @zmalloc(i64 noundef 192) #23, !dbg !18060
  %0 = bitcast i8* %call to %struct.redisClient*, !dbg !18060
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !18058, metadata !DIExpression()), !dbg !18059
  %call1 = tail call i32 @anetNonBlock(i8* noundef null, i32 noundef %fd) #23, !dbg !18061
  %call2 = tail call i32 @anetTcpNoDelay(i8* noundef null, i32 noundef %fd) #23, !dbg !18062
  %tobool.not = icmp eq i8* %call, null, !dbg !18063
  br i1 %tobool.not, label %cleanup, label %if.end, !dbg !18065

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @selectDb(%struct.redisClient* noundef nonnull %0, i32 noundef 0) #22, !dbg !18066
  %fd4 = bitcast i8* %call to i32*, !dbg !18067
  store i32 %fd, i32* %fd4, align 8, !dbg !18068, !tbaa !943
  %call5 = tail call i8* (...) @sdsempty() #23, !dbg !18069
  %querybuf = getelementptr inbounds i8, i8* %call, i64 24, !dbg !18070
  %1 = bitcast i8* %querybuf to i8**, !dbg !18070
  store i8* %call5, i8** %1, align 8, !dbg !18071, !tbaa !1446
  %argc = getelementptr inbounds i8, i8* %call, i64 48, !dbg !18072
  %argv = getelementptr inbounds i8, i8* %call, i64 32, !dbg !18073
  %2 = bitcast i8* %argc to <4 x i32>*, !dbg !18074
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, <4 x i32>* %2, align 8, !dbg !18074, !tbaa !926
  %3 = bitcast i8* %argv to <2 x %struct.redisObject**>*, !dbg !18075
  store <2 x %struct.redisObject**> zeroinitializer, <2 x %struct.redisObject**>* %3, align 8, !dbg !18075, !tbaa !782
  %sentlen = getelementptr inbounds i8, i8* %call, i64 72, !dbg !18076
  %4 = bitcast i8* %sentlen to i32*, !dbg !18076
  store i32 0, i32* %4, align 8, !dbg !18077, !tbaa !5243
  %flags = getelementptr inbounds i8, i8* %call, i64 88, !dbg !18078
  %5 = bitcast i8* %flags to i32*, !dbg !18078
  store i32 0, i32* %5, align 8, !dbg !18079, !tbaa !1402
  %call6 = tail call i64 @time(i64* noundef null) #23, !dbg !18080
  %lastinteraction = getelementptr inbounds i8, i8* %call, i64 80, !dbg !18081
  %6 = bitcast i8* %lastinteraction to i64*, !dbg !18081
  store i64 %call6, i64* %6, align 8, !dbg !18082, !tbaa !5290
  %authenticated = getelementptr inbounds i8, i8* %call, i64 96, !dbg !18083
  %7 = bitcast i8* %authenticated to i32*, !dbg !18083
  store i32 0, i32* %7, align 8, !dbg !18084, !tbaa !3516
  %replstate = getelementptr inbounds i8, i8* %call, i64 100, !dbg !18085
  %8 = bitcast i8* %replstate to i32*, !dbg !18085
  store i32 0, i32* %8, align 4, !dbg !18086, !tbaa !896
  %call7 = tail call %struct.list* @listCreate() #23, !dbg !18087
  %reply = getelementptr inbounds i8, i8* %call, i64 64, !dbg !18088
  %9 = bitcast i8* %reply to %struct.list**, !dbg !18088
  store %struct.list* %call7, %struct.list** %9, align 8, !dbg !18089, !tbaa !1357
  %free = getelementptr inbounds %struct.list, %struct.list* %call7, i64 0, i32 3, !dbg !18090
  store void (i8*)* @decrRefCount, void (i8*)** %free, align 8, !dbg !18090, !tbaa !1459
  %dup = getelementptr inbounds %struct.list, %struct.list* %call7, i64 0, i32 2, !dbg !18091
  store i8* (i8*)* @dupClientReplyValue, i8* (i8*)** %dup, align 8, !dbg !18091, !tbaa !1461
  %blockingkeys = getelementptr inbounds i8, i8* %call, i64 144, !dbg !18092
  %10 = bitcast i8* %blockingkeys to %struct.redisObject***, !dbg !18092
  store %struct.redisObject** null, %struct.redisObject*** %10, align 8, !dbg !18093, !tbaa !2881
  %blockingkeysnum = getelementptr inbounds i8, i8* %call, i64 152, !dbg !18094
  %11 = bitcast i8* %blockingkeysnum to i32*, !dbg !18094
  store i32 0, i32* %11, align 8, !dbg !18095, !tbaa !2885
  %call10 = tail call %struct.list* @listCreate() #23, !dbg !18096
  %io_keys = getelementptr inbounds i8, i8* %call, i64 168, !dbg !18097
  %12 = bitcast i8* %io_keys to %struct.list**, !dbg !18097
  store %struct.list* %call10, %struct.list** %12, align 8, !dbg !18098, !tbaa !2671
  %free12 = getelementptr inbounds %struct.list, %struct.list* %call10, i64 0, i32 3, !dbg !18099
  store void (i8*)* @decrRefCount, void (i8*)** %free12, align 8, !dbg !18099, !tbaa !1459
  %call13 = tail call %struct.dict* @dictCreate(%struct.dictType* noundef nonnull @setDictType, i8* noundef null) #23, !dbg !18100
  %pubsub_channels = getelementptr inbounds i8, i8* %call, i64 176, !dbg !18101
  %13 = bitcast i8* %pubsub_channels to %struct.dict**, !dbg !18101
  store %struct.dict* %call13, %struct.dict** %13, align 8, !dbg !18102, !tbaa !2640
  %call14 = tail call %struct.list* @listCreate() #23, !dbg !18103
  %pubsub_patterns = getelementptr inbounds i8, i8* %call, i64 184, !dbg !18104
  %14 = bitcast i8* %pubsub_patterns to %struct.list**, !dbg !18104
  store %struct.list* %call14, %struct.list** %14, align 8, !dbg !18105, !tbaa !2643
  %free16 = getelementptr inbounds %struct.list, %struct.list* %call14, i64 0, i32 3, !dbg !18106
  store void (i8*)* @decrRefCount, void (i8*)** %free16, align 8, !dbg !18106, !tbaa !1459
  %match = getelementptr inbounds %struct.list, %struct.list* %call14, i64 0, i32 4, !dbg !18107
  store i32 (i8*, i8*)* @listMatchObjects, i32 (i8*, i8*)** %match, align 8, !dbg !18107, !tbaa !17101
  %15 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !18108, !tbaa !941
  %16 = load i32, i32* %fd4, align 8, !dbg !18110, !tbaa !943
  %call19 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* noundef %15, i32 noundef %16, i32 noundef 1, void (%struct.aeEventLoop*, i32, i8*, i32)* noundef nonnull @readQueryFromClient, i8* noundef nonnull %call) #23, !dbg !18111
  %cmp = icmp eq i32 %call19, -1, !dbg !18112
  br i1 %cmp, label %if.then20, label %if.end21, !dbg !18113

if.then20:                                        ; preds = %if.end
  tail call void @freeClient(%struct.redisClient* noundef nonnull %0) #22, !dbg !18114
  br label %cleanup, !dbg !18116

if.end21:                                         ; preds = %if.end
  %17 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !18117, !tbaa !2657
  %call22 = tail call %struct.list* @listAddNodeTail(%struct.list* noundef %17, i8* noundef nonnull %call) #23, !dbg !18118
  tail call void @initClientMultiState(%struct.redisClient* noundef nonnull %0) #22, !dbg !18119
  br label %cleanup, !dbg !18120

cleanup:                                          ; preds = %entry, %if.end21, %if.then20
  %retval.0 = phi %struct.redisClient* [ null, %if.then20 ], [ %0, %if.end21 ], [ null, %entry ], !dbg !18059
  ret %struct.redisClient* %retval.0, !dbg !18121
}

; Function Attrs: noinline nounwind uwtable
define internal void @dictListDestructor(i8* nocapture noundef readnone %privdata, i8* noundef %val) #0 !dbg !18122 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !18124, metadata !DIExpression()), !dbg !18126
  call void @llvm.dbg.value(metadata i8* %val, metadata !18125, metadata !DIExpression()), !dbg !18126
  %0 = bitcast i8* %val to %struct.list*, !dbg !18127
  tail call void @listRelease(%struct.list* noundef %0) #23, !dbg !18128
  ret void, !dbg !18129
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dictObjKeyCompare(i8* nocapture noundef readnone %privdata, i8* nocapture noundef readonly %key1, i8* nocapture noundef readonly %key2) #0 !dbg !18130 {
entry:
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !18132, metadata !DIExpression()), !dbg !18139
  call void @llvm.dbg.value(metadata i8* %key1, metadata !18133, metadata !DIExpression()), !dbg !18139
  call void @llvm.dbg.value(metadata i8* %key2, metadata !18134, metadata !DIExpression()), !dbg !18139
  call void @llvm.dbg.value(metadata i8* %key1, metadata !18135, metadata !DIExpression()), !dbg !18139
  call void @llvm.dbg.value(metadata i8* %key2, metadata !18138, metadata !DIExpression()), !dbg !18139
  %ptr = bitcast i8* %key1 to i8**, !dbg !18140
  %0 = load i8*, i8** %ptr, align 8, !dbg !18140, !tbaa !1328
  %ptr1 = bitcast i8* %key2 to i8**, !dbg !18141
  %1 = load i8*, i8** %ptr1, align 8, !dbg !18141, !tbaa !1328
  %call = tail call i32 @sdsDictKeyCompare(i8* noundef %privdata, i8* noundef %0, i8* noundef %1) #22, !dbg !18142
  ret i32 %call, !dbg !18143
}

; Function Attrs: noinline nounwind uwtable
define internal void @incrementallyRehash() #0 !dbg !18144 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !18146, metadata !DIExpression()), !dbg !18147
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !tbaa !2013
  call void @llvm.dbg.value(metadata i32 0, metadata !18146, metadata !DIExpression()), !dbg !18147
  %cmp9 = icmp sgt i32 %0, 0, !dbg !18148
  br i1 %cmp9, label %for.body.lr.ph, label %for.end, !dbg !18151

for.body.lr.ph:                                   ; preds = %entry
  %1 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !tbaa !2351
  %wide.trip.count = zext i32 %0 to i64, !dbg !18148
  br label %for.body, !dbg !18151

for.cond:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !18146, metadata !DIExpression()), !dbg !18147
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !18148
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !18151, !llvm.loop !18152

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !18146, metadata !DIExpression()), !dbg !18147
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 %indvars.iv, i32 0, !dbg !18154
  %2 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !18154, !tbaa !2353
  %rehashidx = getelementptr inbounds %struct.dict, %struct.dict* %2, i64 0, i32 3, !dbg !18154
  %3 = load i32, i32* %rehashidx, align 8, !dbg !18154, !tbaa !18157
  %cmp1.not = icmp eq i32 %3, -1, !dbg !18154
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !18159
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !18146, metadata !DIExpression()), !dbg !18147
  br i1 %cmp1.not, label %for.cond, label %if.then, !dbg !18160

if.then:                                          ; preds = %for.body
  %call = tail call i32 @dictRehashMilliseconds(%struct.dict* noundef nonnull %2, i32 noundef 1) #23, !dbg !18161
  br label %for.end, !dbg !18163

for.end:                                          ; preds = %for.cond, %entry, %if.then
  ret void, !dbg !18164
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @listMatchObjects(i8* noundef %a, i8* noundef %b) #0 !dbg !18165 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !18167, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.value(metadata i8* %b, metadata !18168, metadata !DIExpression()), !dbg !18169
  %0 = bitcast i8* %a to %struct.redisObject*, !dbg !18170
  %1 = bitcast i8* %b to %struct.redisObject*, !dbg !18171
  %call = tail call i32 @equalStringObjects(%struct.redisObject* noundef %0, %struct.redisObject* noundef %1) #22, !dbg !18172
  ret i32 %call, !dbg !18173
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @rdbLoadTime(%struct._IO_FILE* noundef %fp) #0 !dbg !18174 {
entry:
  %t32 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !18178, metadata !DIExpression()), !dbg !18180
  %0 = bitcast i32* %t32 to i8*, !dbg !18181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24, !dbg !18181
  call void @llvm.dbg.value(metadata i32* %t32, metadata !18179, metadata !DIExpression(DW_OP_deref)), !dbg !18180
  %call = call i64 @fread(i8* noundef nonnull %0, i64 noundef 4, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !18182
  %cmp = icmp eq i64 %call, 0, !dbg !18184
  %1 = load i32, i32* %t32, align 4, !dbg !18185
  %conv = sext i32 %1 to i64, !dbg !18185
  %retval.0 = select i1 %cmp, i64 -1, i64 %conv, !dbg !18185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24, !dbg !18186
  ret i64 %retval.0, !dbg !18186
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rdbLoadType(%struct._IO_FILE* noundef %fp) #0 !dbg !18187 {
entry:
  %type = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, metadata !18189, metadata !DIExpression()), !dbg !18191
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %type) #24, !dbg !18192
  call void @llvm.dbg.value(metadata i8* %type, metadata !18190, metadata !DIExpression(DW_OP_deref)), !dbg !18191
  %call = call i64 @fread(i8* noundef nonnull %type, i64 noundef 1, i64 noundef 1, %struct._IO_FILE* noundef %fp) #23, !dbg !18193
  %cmp = icmp eq i64 %call, 0, !dbg !18195
  %0 = load i8, i8* %type, align 1, !dbg !18196
  %conv = zext i8 %0 to i32, !dbg !18196
  %retval.0 = select i1 %cmp, i32 -1, i32 %conv, !dbg !18196
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %type) #24, !dbg !18197
  ret i32 %retval.0, !dbg !18197
}

; Function Attrs: noinline nounwind uwtable
define internal void @readQueryFromClient(%struct.aeEventLoop* nocapture noundef readnone %el, i32 noundef %fd, i8* noundef %privdata, i32 noundef %mask) #0 !dbg !18198 {
entry:
  %buf = alloca [1024 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.aeEventLoop* %el, metadata !18200, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i32 %fd, metadata !18201, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i8* %privdata, metadata !18202, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i32 %mask, metadata !18203, metadata !DIExpression()), !dbg !18207
  %0 = bitcast i8* %privdata to %struct.redisClient*, !dbg !18208
  call void @llvm.dbg.value(metadata %struct.redisClient* %0, metadata !18204, metadata !DIExpression()), !dbg !18207
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !18209
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #24, !dbg !18209
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !18205, metadata !DIExpression()), !dbg !18210
  %call = call i64 @read(i32 noundef %fd, i8* noundef nonnull %1, i64 noundef 1024) #23, !dbg !18211
  %conv = trunc i64 %call to i32, !dbg !18211
  call void @llvm.dbg.value(metadata i32 %conv, metadata !18206, metadata !DIExpression()), !dbg !18207
  switch i32 %conv, label %if.then14 [
    i32 -1, label %if.then
    i32 0, label %if.then11
  ], !dbg !18212

if.then:                                          ; preds = %entry
  %call2 = tail call i32* @__errno_location() #25, !dbg !18213
  %2 = load i32, i32* %call2, align 4, !dbg !18213, !tbaa !926
  %cmp3 = icmp eq i32 %2, 11, !dbg !18217
  br i1 %cmp3, label %cleanup, label %if.else, !dbg !18218

if.else:                                          ; preds = %if.then
  %call7 = call i8* @strerror(i32 noundef %2) #23, !dbg !18219
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.833, i64 0, i64 0), i8* noundef %call7) #22, !dbg !18221
  call void @freeClient(%struct.redisClient* noundef %0) #22, !dbg !18222
  br label %cleanup, !dbg !18223

if.then11:                                        ; preds = %entry
  call void (i32, i8*, ...) @redisLog(i32 noundef 1, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.834, i64 0, i64 0)) #22, !dbg !18224
  call void @freeClient(%struct.redisClient* noundef %0) #22, !dbg !18227
  br label %cleanup, !dbg !18228

if.then14:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %conv, metadata !18206, metadata !DIExpression()), !dbg !18207
  %querybuf = getelementptr inbounds i8, i8* %privdata, i64 24, !dbg !18229
  %3 = bitcast i8* %querybuf to i8**, !dbg !18229
  %4 = load i8*, i8** %3, align 8, !dbg !18229, !tbaa !1446
  %sext = shl i64 %call, 32, !dbg !18232
  %conv16 = ashr exact i64 %sext, 32, !dbg !18232
  %call17 = call i8* @sdscatlen(i8* noundef %4, i8* noundef nonnull %1, i64 noundef %conv16) #23, !dbg !18233
  store i8* %call17, i8** %3, align 8, !dbg !18234, !tbaa !1446
  %call19 = call i64 @time(i64* noundef null) #23, !dbg !18235
  %lastinteraction = getelementptr inbounds i8, i8* %privdata, i64 80, !dbg !18236
  %5 = bitcast i8* %lastinteraction to i64*, !dbg !18236
  store i64 %call19, i64* %5, align 8, !dbg !18237, !tbaa !5290
  call void @processInputBuffer(%struct.redisClient* noundef %0) #22, !dbg !18238
  br label %cleanup, !dbg !18239

cleanup:                                          ; preds = %if.then, %if.then14, %if.then11, %if.else
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #24, !dbg !18239
  ret void, !dbg !18239
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @syncRead(i32 noundef %fd, i8* noundef %ptr, i64 noundef %size, i32 noundef %timeout) #0 !dbg !18240 {
entry:
  call void @llvm.dbg.value(metadata i32 %fd, metadata !18244, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !18245, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i64 %size, metadata !18246, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i32 %timeout, metadata !18247, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i64 0, metadata !18249, metadata !DIExpression()), !dbg !18251
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !18252
  call void @llvm.dbg.value(metadata i64 %call, metadata !18250, metadata !DIExpression()), !dbg !18251
  %inc = add nsw i32 %timeout, 1, !dbg !18253
  call void @llvm.dbg.value(metadata i32 %inc, metadata !18247, metadata !DIExpression()), !dbg !18251
  %conv = sext i32 %inc to i64
  br label %while.cond, !dbg !18254

while.cond:                                       ; preds = %if.end5, %entry
  %size.addr.0 = phi i64 [ %size, %entry ], [ %size.addr.1, %if.end5 ]
  %ptr.addr.0 = phi i8* [ %ptr, %entry ], [ %ptr.addr.1, %if.end5 ]
  %totread.0 = phi i64 [ 0, %entry ], [ %totread.1, %if.end5 ], !dbg !18251
  call void @llvm.dbg.value(metadata i64 %totread.0, metadata !18249, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i8* %ptr.addr.0, metadata !18245, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i64 %size.addr.0, metadata !18246, metadata !DIExpression()), !dbg !18251
  %tobool.not = icmp eq i64 %size.addr.0, 0, !dbg !18254
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !18254

while.body:                                       ; preds = %while.cond
  %call1 = tail call i32 @aeWait(i32 noundef %fd, i32 noundef 1, i64 noundef 1000) #23, !dbg !18255
  %and = and i32 %call1, 1, !dbg !18258
  %tobool2.not = icmp eq i32 %and, 0, !dbg !18258
  br i1 %tobool2.not, label %if.end5, label %if.then, !dbg !18259

if.then:                                          ; preds = %while.body
  %call3 = tail call i64 @read(i32 noundef %fd, i8* noundef %ptr.addr.0, i64 noundef %size.addr.0) #23, !dbg !18260
  call void @llvm.dbg.value(metadata i64 %call3, metadata !18248, metadata !DIExpression()), !dbg !18251
  %cmp = icmp slt i64 %call3, 1, !dbg !18262
  br i1 %cmp, label %cleanup, label %if.end, !dbg !18264

if.end:                                           ; preds = %if.then
  %add.ptr = getelementptr inbounds i8, i8* %ptr.addr.0, i64 %call3, !dbg !18265
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !18245, metadata !DIExpression()), !dbg !18251
  %sub = sub nsw i64 %size.addr.0, %call3, !dbg !18266
  call void @llvm.dbg.value(metadata i64 %sub, metadata !18246, metadata !DIExpression()), !dbg !18251
  %add = add nsw i64 %call3, %totread.0, !dbg !18267
  call void @llvm.dbg.value(metadata i64 %add, metadata !18249, metadata !DIExpression()), !dbg !18251
  br label %if.end5, !dbg !18268

if.end5:                                          ; preds = %if.end, %while.body
  %size.addr.1 = phi i64 [ %sub, %if.end ], [ %size.addr.0, %while.body ]
  %ptr.addr.1 = phi i8* [ %add.ptr, %if.end ], [ %ptr.addr.0, %while.body ]
  %totread.1 = phi i64 [ %add, %if.end ], [ %totread.0, %while.body ], !dbg !18251
  call void @llvm.dbg.value(metadata i64 %totread.1, metadata !18249, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i8* %ptr.addr.1, metadata !18245, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i64 %size.addr.1, metadata !18246, metadata !DIExpression()), !dbg !18251
  %call6 = tail call i64 @time(i64* noundef null) #23, !dbg !18269
  %sub7 = sub nsw i64 %call6, %call, !dbg !18271
  %cmp8 = icmp sgt i64 %sub7, %conv, !dbg !18272
  br i1 %cmp8, label %if.then10, label %while.cond, !dbg !18273, !llvm.loop !18274

if.then10:                                        ; preds = %if.end5
  %call11 = tail call i32* @__errno_location() #25, !dbg !18276
  store i32 110, i32* %call11, align 4, !dbg !18278, !tbaa !926
  br label %cleanup, !dbg !18279

while.end:                                        ; preds = %while.cond
  %conv13 = trunc i64 %totread.0 to i32, !dbg !18280
  br label %cleanup, !dbg !18281

cleanup:                                          ; preds = %if.then, %while.end, %if.then10
  %retval.0 = phi i32 [ -1, %if.then10 ], [ %conv13, %while.end ], [ -1, %if.then ], !dbg !18251
  ret i32 %retval.0, !dbg !18282
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @syncReadLine(i32 noundef %fd, i8* nocapture noundef %ptr, i64 noundef %size, i32 noundef %timeout) #0 !dbg !18283 {
entry:
  %c = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %fd, metadata !18285, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !18286, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i64 %size, metadata !18287, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i32 %timeout, metadata !18288, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i64 0, metadata !18289, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i64 %size, metadata !18287, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !18292
  %tobool.not = icmp eq i64 %size, 1
  call void @llvm.dbg.value(metadata i64 0, metadata !18289, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !18286, metadata !DIExpression()), !dbg !18292
  br i1 %tobool.not, label %cleanup14, label %while.body.preheader, !dbg !18293

while.body.preheader:                             ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !18289, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !18286, metadata !DIExpression()), !dbg !18292
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #24, !dbg !18294
  call void @llvm.dbg.value(metadata i8* %c, metadata !18290, metadata !DIExpression(DW_OP_deref)), !dbg !18295
  %call42 = call i32 @syncRead(i32 noundef %fd, i8* noundef nonnull %c, i64 noundef 1, i32 noundef %timeout) #22, !dbg !18296
  %cmp43 = icmp eq i32 %call42, -1, !dbg !18298
  br i1 %cmp43, label %cleanup.thread, label %if.end, !dbg !18299

if.end:                                           ; preds = %while.body.preheader, %cleanup
  %ptr.addr.03245 = phi i8* [ %incdec.ptr, %cleanup ], [ %ptr, %while.body.preheader ]
  %nread.03344 = phi i64 [ %inc, %cleanup ], [ 0, %while.body.preheader ]
  call void @llvm.dbg.value(metadata i8* %ptr.addr.03245, metadata !18286, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i64 %nread.03344, metadata !18289, metadata !DIExpression()), !dbg !18292
  %0 = load i8, i8* %c, align 1, !dbg !18300, !tbaa !795
  call void @llvm.dbg.value(metadata i8 %0, metadata !18290, metadata !DIExpression()), !dbg !18295
  %cmp1 = icmp eq i8 %0, 10, !dbg !18302
  br i1 %cmp1, label %if.then3, label %cleanup, !dbg !18303

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %ptr.addr.03245, align 1, !dbg !18304, !tbaa !795
  %tobool4.not = icmp eq i64 %nread.03344, 0, !dbg !18306
  br i1 %tobool4.not, label %if.end10, label %land.lhs.true, !dbg !18308

land.lhs.true:                                    ; preds = %if.then3
  %add.ptr = getelementptr inbounds i8, i8* %ptr.addr.03245, i64 -1, !dbg !18309
  %1 = load i8, i8* %add.ptr, align 1, !dbg !18310, !tbaa !795
  %cmp6 = icmp eq i8 %1, 13, !dbg !18311
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !18312

if.then8:                                         ; preds = %land.lhs.true
  store i8 0, i8* %add.ptr, align 1, !dbg !18313, !tbaa !795
  br label %if.end10, !dbg !18314

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %if.then3
  %conv11 = trunc i64 %nread.03344 to i32, !dbg !18315
  br label %cleanup.thread, !dbg !18316

cleanup.thread:                                   ; preds = %cleanup, %while.body.preheader, %if.end10
  %retval.1.ph = phi i32 [ %conv11, %if.end10 ], [ -1, %while.body.preheader ], [ -1, %cleanup ]
  call void @llvm.dbg.value(metadata i64 undef, metadata !18289, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !18286, metadata !DIExpression()), !dbg !18292
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #24, !dbg !18317
  br label %cleanup14

cleanup:                                          ; preds = %if.end
  %incdec.ptr = getelementptr inbounds i8, i8* %ptr.addr.03245, i64 1, !dbg !18318
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !18286, metadata !DIExpression()), !dbg !18292
  store i8 %0, i8* %ptr.addr.03245, align 1, !dbg !18320, !tbaa !795
  store i8 0, i8* %incdec.ptr, align 1, !dbg !18321, !tbaa !795
  %inc = add nuw nsw i64 %nread.03344, 1, !dbg !18322
  call void @llvm.dbg.value(metadata i64 %inc, metadata !18289, metadata !DIExpression()), !dbg !18292
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #24, !dbg !18317
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #24, !dbg !18294
  call void @llvm.dbg.value(metadata i8* %c, metadata !18290, metadata !DIExpression(DW_OP_deref)), !dbg !18295
  %call = call i32 @syncRead(i32 noundef %fd, i8* noundef nonnull %c, i64 noundef 1, i32 noundef %timeout) #22, !dbg !18296
  %cmp = icmp eq i32 %call, -1, !dbg !18298
  br i1 %cmp, label %cleanup.thread, label %if.end, !dbg !18299, !llvm.loop !18323

cleanup14:                                        ; preds = %entry, %cleanup.thread
  %retval.2 = phi i32 [ %retval.1.ph, %cleanup.thread ], [ 0, %entry ], !dbg !18292
  ret i32 %retval.2, !dbg !18324
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @syncWithMaster() #0 !dbg !18325 {
entry:
  %buf = alloca [1024 x i8], align 16
  %tmpfile = alloca [256 x i8], align 16
  %authcmd = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !18337
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %0) #24, !dbg !18337
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !18327, metadata !DIExpression()), !dbg !18338
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpfile, i64 0, i64 0, !dbg !18337
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1) #24, !dbg !18337
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpfile, metadata !18328, metadata !DIExpression()), !dbg !18339
  %2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %authcmd, i64 0, i64 0, !dbg !18337
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %2) #24, !dbg !18337
  call void @llvm.dbg.declare(metadata [1024 x i8]* %authcmd, metadata !18329, metadata !DIExpression()), !dbg !18340
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !18341, !tbaa !2049
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !18342, !tbaa !2053
  %call = tail call i32 @anetTcpConnect(i8* noundef null, i8* noundef %3, i32 noundef %4) #23, !dbg !18343
  call void @llvm.dbg.value(metadata i32 %call, metadata !18331, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 5, metadata !18333, metadata !DIExpression()), !dbg !18344
  %cmp = icmp eq i32 %call, -1, !dbg !18345
  br i1 %cmp, label %if.then, label %if.end, !dbg !18347

if.then:                                          ; preds = %entry
  %call1 = tail call i32* @__errno_location() #25, !dbg !18348
  %5 = load i32, i32* %call1, align 4, !dbg !18348, !tbaa !926
  %call2 = tail call i8* @strerror(i32 noundef %5) #23, !dbg !18350
  tail call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.835, i64 0, i64 0), i8* noundef %call2) #22, !dbg !18351
  br label %cleanup132, !dbg !18352

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !18353, !tbaa !2064
  %tobool.not = icmp eq i8* %6, null, !dbg !18355
  br i1 %tobool.not, label %if.end27, label %if.then3, !dbg !18356

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %2, i64 noundef 1024, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.836, i64 0, i64 0), i8* noundef nonnull %6) #23, !dbg !18357
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !18359, !tbaa !2064
  %call6 = call i64 @strlen(i8* noundef %7) #27, !dbg !18361
  %add = add i64 %call6, 7, !dbg !18362
  %call7 = call i32 @syncWrite(i32 noundef %call, i8* noundef nonnull %2, i64 noundef %add, i32 noundef 5) #22, !dbg !18363
  %cmp8 = icmp eq i32 %call7, -1, !dbg !18364
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !18365

if.then9:                                         ; preds = %if.then3
  %call10 = call i32 @close(i32 noundef %call) #23, !dbg !18366
  %call11 = tail call i32* @__errno_location() #25, !dbg !18368
  %8 = load i32, i32* %call11, align 4, !dbg !18368, !tbaa !926
  %call12 = call i8* @strerror(i32 noundef %8) #23, !dbg !18369
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.837, i64 0, i64 0), i8* noundef %call12) #22, !dbg !18370
  br label %cleanup132, !dbg !18371

if.end13:                                         ; preds = %if.then3
  %call15 = call i32 @syncReadLine(i32 noundef %call, i8* noundef nonnull %0, i64 noundef 1024, i32 noundef 3600) #22, !dbg !18372
  %cmp16 = icmp eq i32 %call15, -1, !dbg !18374
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !18375

if.then17:                                        ; preds = %if.end13
  %call18 = call i32 @close(i32 noundef %call) #23, !dbg !18376
  %call19 = tail call i32* @__errno_location() #25, !dbg !18378
  %9 = load i32, i32* %call19, align 4, !dbg !18378, !tbaa !926
  %call20 = call i8* @strerror(i32 noundef %9) #23, !dbg !18379
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.838, i64 0, i64 0), i8* noundef %call20) #22, !dbg !18380
  br label %cleanup132, !dbg !18381

if.end21:                                         ; preds = %if.end13
  %10 = load i8, i8* %0, align 16, !dbg !18382, !tbaa !795
  %cmp22.not = icmp eq i8 %10, 43, !dbg !18384
  br i1 %cmp22.not, label %if.end27, label %if.then24, !dbg !18385

if.then24:                                        ; preds = %if.end21
  %call25 = call i32 @close(i32 noundef %call) #23, !dbg !18386
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.839, i64 0, i64 0)) #22, !dbg !18388
  br label %cleanup132, !dbg !18389

if.end27:                                         ; preds = %if.end21, %if.end
  %call28 = call i32 @syncWrite(i32 noundef %call, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.840, i64 0, i64 0), i64 noundef 7, i32 noundef 5) #22, !dbg !18390
  %cmp29 = icmp eq i32 %call28, -1, !dbg !18392
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !18393

if.then31:                                        ; preds = %if.end27
  %call32 = call i32 @close(i32 noundef %call) #23, !dbg !18394
  %call33 = tail call i32* @__errno_location() #25, !dbg !18396
  %11 = load i32, i32* %call33, align 4, !dbg !18396, !tbaa !926
  %call34 = call i8* @strerror(i32 noundef %11) #23, !dbg !18397
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.841, i64 0, i64 0), i8* noundef %call34) #22, !dbg !18398
  br label %cleanup132, !dbg !18399

if.end35:                                         ; preds = %if.end27
  %call37 = call i32 @syncReadLine(i32 noundef %call, i8* noundef nonnull %0, i64 noundef 1024, i32 noundef 3600) #22, !dbg !18400
  %cmp38 = icmp eq i32 %call37, -1, !dbg !18402
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !18403

if.then40:                                        ; preds = %if.end35
  %call41 = call i32 @close(i32 noundef %call) #23, !dbg !18404
  %call42 = tail call i32* @__errno_location() #25, !dbg !18406
  %12 = load i32, i32* %call42, align 4, !dbg !18406, !tbaa !926
  %call43 = call i8* @strerror(i32 noundef %12) #23, !dbg !18407
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.842, i64 0, i64 0), i8* noundef %call43) #22, !dbg !18408
  br label %cleanup132, !dbg !18409

if.end44:                                         ; preds = %if.end35
  %13 = load i8, i8* %0, align 16, !dbg !18410, !tbaa !795
  %cmp47.not = icmp eq i8 %13, 36, !dbg !18412
  br i1 %cmp47.not, label %if.end51, label %if.then49, !dbg !18413

if.then49:                                        ; preds = %if.end44
  %call50 = call i32 @close(i32 noundef %call) #23, !dbg !18414
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.843, i64 0, i64 0)) #22, !dbg !18416
  br label %cleanup132, !dbg !18417

if.end51:                                         ; preds = %if.end44
  %add.ptr = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 1, !dbg !18418
  %call53 = call i64 @strtol(i8* noundef nonnull %add.ptr, i8** noundef null, i32 noundef 10) #23, !dbg !18419
  call void @llvm.dbg.value(metadata i64 %call53, metadata !18330, metadata !DIExpression()), !dbg !18344
  call void (i32, i8*, ...) @redisLog(i32 noundef 2, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.844, i64 0, i64 0), i64 noundef %call53) #22, !dbg !18420
  call void @llvm.dbg.value(metadata i32 5, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 4, metadata !18333, metadata !DIExpression()), !dbg !18344
  %call56 = call i64 @time(i64* noundef null) #23, !dbg !18421
  %conv57 = trunc i64 %call56 to i32, !dbg !18423
  %call58 = call i32 @getpid() #23, !dbg !18424
  %conv59 = sext i32 %call58 to i64, !dbg !18425
  %call60 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.845, i64 0, i64 0), i32 noundef %conv57, i64 noundef %conv59) #23, !dbg !18426
  %call62 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 193, i32 noundef 420) #23, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %call62, metadata !18332, metadata !DIExpression()), !dbg !18344
  %cmp63.not = icmp eq i32 %call62, -1, !dbg !18428
  br i1 %cmp63.not, label %if.end66, label %while.cond75.preheader, !dbg !18430

while.cond75.preheader:                           ; preds = %if.end66.3, %if.end66.2, %if.end66.1, %if.end66, %if.end51
  %call62.lcssa = phi i32 [ %call62, %if.end51 ], [ %call62.1, %if.end66 ], [ %call62.2, %if.end66.1 ], [ %call62.3, %if.end66.2 ], [ %call62.4, %if.end66.3 ], !dbg !18427
  call void @llvm.dbg.value(metadata i64 %call53, metadata !18330, metadata !DIExpression()), !dbg !18344
  %tobool76.not181 = icmp eq i64 %call53, 0, !dbg !18431
  br i1 %tobool76.not181, label %while.end111, label %while.body77, !dbg !18431

if.end66:                                         ; preds = %if.end51
  %call67 = call i32 @sleep(i32 noundef 1) #23, !dbg !18432
  call void @llvm.dbg.value(metadata i32 4, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 3, metadata !18333, metadata !DIExpression()), !dbg !18344
  %call56.1 = call i64 @time(i64* noundef null) #23, !dbg !18421
  %conv57.1 = trunc i64 %call56.1 to i32, !dbg !18423
  %call58.1 = call i32 @getpid() #23, !dbg !18424
  %conv59.1 = sext i32 %call58.1 to i64, !dbg !18425
  %call60.1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.845, i64 0, i64 0), i32 noundef %conv57.1, i64 noundef %conv59.1) #23, !dbg !18426
  %call62.1 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 193, i32 noundef 420) #23, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %call62.1, metadata !18332, metadata !DIExpression()), !dbg !18344
  %cmp63.not.1 = icmp eq i32 %call62.1, -1, !dbg !18428
  br i1 %cmp63.not.1, label %if.end66.1, label %while.cond75.preheader, !dbg !18430

if.end66.1:                                       ; preds = %if.end66
  %call67.1 = call i32 @sleep(i32 noundef 1) #23, !dbg !18432
  call void @llvm.dbg.value(metadata i32 3, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 2, metadata !18333, metadata !DIExpression()), !dbg !18344
  %call56.2 = call i64 @time(i64* noundef null) #23, !dbg !18421
  %conv57.2 = trunc i64 %call56.2 to i32, !dbg !18423
  %call58.2 = call i32 @getpid() #23, !dbg !18424
  %conv59.2 = sext i32 %call58.2 to i64, !dbg !18425
  %call60.2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.845, i64 0, i64 0), i32 noundef %conv57.2, i64 noundef %conv59.2) #23, !dbg !18426
  %call62.2 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 193, i32 noundef 420) #23, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %call62.2, metadata !18332, metadata !DIExpression()), !dbg !18344
  %cmp63.not.2 = icmp eq i32 %call62.2, -1, !dbg !18428
  br i1 %cmp63.not.2, label %if.end66.2, label %while.cond75.preheader, !dbg !18430

if.end66.2:                                       ; preds = %if.end66.1
  %call67.2 = call i32 @sleep(i32 noundef 1) #23, !dbg !18432
  call void @llvm.dbg.value(metadata i32 2, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 1, metadata !18333, metadata !DIExpression()), !dbg !18344
  %call56.3 = call i64 @time(i64* noundef null) #23, !dbg !18421
  %conv57.3 = trunc i64 %call56.3 to i32, !dbg !18423
  %call58.3 = call i32 @getpid() #23, !dbg !18424
  %conv59.3 = sext i32 %call58.3 to i64, !dbg !18425
  %call60.3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.845, i64 0, i64 0), i32 noundef %conv57.3, i64 noundef %conv59.3) #23, !dbg !18426
  %call62.3 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 193, i32 noundef 420) #23, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %call62.3, metadata !18332, metadata !DIExpression()), !dbg !18344
  %cmp63.not.3 = icmp eq i32 %call62.3, -1, !dbg !18428
  br i1 %cmp63.not.3, label %if.end66.3, label %while.cond75.preheader, !dbg !18430

if.end66.3:                                       ; preds = %if.end66.2
  %call67.3 = call i32 @sleep(i32 noundef 1) #23, !dbg !18432
  call void @llvm.dbg.value(metadata i32 1, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 0, metadata !18333, metadata !DIExpression()), !dbg !18344
  %call56.4 = call i64 @time(i64* noundef null) #23, !dbg !18421
  %conv57.4 = trunc i64 %call56.4 to i32, !dbg !18423
  %call58.4 = call i32 @getpid() #23, !dbg !18424
  %conv59.4 = sext i32 %call58.4 to i64, !dbg !18425
  %call60.4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %1, i64 noundef 256, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.845, i64 0, i64 0), i32 noundef %conv57.4, i64 noundef %conv59.4) #23, !dbg !18426
  %call62.4 = call i32 (i8*, i32, ...) @open64(i8* noundef nonnull %1, i32 noundef 193, i32 noundef 420) #23, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %call62.4, metadata !18332, metadata !DIExpression()), !dbg !18344
  %cmp63.not.4 = icmp eq i32 %call62.4, -1, !dbg !18428
  br i1 %cmp63.not.4, label %if.end66.4, label %while.cond75.preheader, !dbg !18430

if.end66.4:                                       ; preds = %if.end66.3
  %call67.4 = call i32 @sleep(i32 noundef 1) #23, !dbg !18432
  call void @llvm.dbg.value(metadata i32 0, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18332, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 -1, metadata !18333, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i32 undef, metadata !18332, metadata !DIExpression()), !dbg !18344
  %call71 = call i32 @close(i32 noundef %call) #23, !dbg !18433
  %call72 = tail call i32* @__errno_location() #25, !dbg !18436
  %14 = load i32, i32* %call72, align 4, !dbg !18436, !tbaa !926
  %call73 = call i8* @strerror(i32 noundef %14) #23, !dbg !18437
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.846, i64 0, i64 0), i8* noundef %call73) #22, !dbg !18438
  br label %cleanup132, !dbg !18439

while.cond75:                                     ; preds = %if.end96
  call void @llvm.dbg.value(metadata i64 %sub, metadata !18330, metadata !DIExpression()), !dbg !18344
  %tobool76.not = icmp eq i64 %sub, 0, !dbg !18431
  br i1 %tobool76.not, label %while.end111, label %while.body77, !dbg !18431, !llvm.loop !18440

while.body77:                                     ; preds = %while.cond75.preheader, %while.cond75
  %dumpsize.0182 = phi i64 [ %sub, %while.cond75 ], [ %call53, %while.cond75.preheader ]
  call void @llvm.dbg.value(metadata i64 %dumpsize.0182, metadata !18330, metadata !DIExpression()), !dbg !18344
  %cmp79 = icmp slt i64 %dumpsize.0182, 1024, !dbg !18442
  %cond = select i1 %cmp79, i64 %dumpsize.0182, i64 1024, !dbg !18443
  %call81 = call i64 @read(i32 noundef %call, i8* noundef nonnull %0, i64 noundef %cond) #23, !dbg !18444
  %conv82 = trunc i64 %call81 to i32, !dbg !18444
  call void @llvm.dbg.value(metadata i32 %conv82, metadata !18334, metadata !DIExpression()), !dbg !18445
  %cmp83 = icmp slt i32 %conv82, 1, !dbg !18446
  br i1 %cmp83, label %if.then85, label %if.end96, !dbg !18448

if.then85:                                        ; preds = %while.body77
  %conv82.le = trunc i64 %call81 to i32, !dbg !18444
  %cmp86 = icmp eq i32 %conv82.le, -1, !dbg !18449
  br i1 %cmp86, label %cond.true88, label %cond.end92, !dbg !18451

cond.true88:                                      ; preds = %if.then85
  %call89 = tail call i32* @__errno_location() #25, !dbg !18452
  %15 = load i32, i32* %call89, align 4, !dbg !18452, !tbaa !926
  %call90 = call i8* @strerror(i32 noundef %15) #23, !dbg !18453
  br label %cond.end92, !dbg !18451

cond.end92:                                       ; preds = %if.then85, %cond.true88
  %cond93 = phi i8* [ %call90, %cond.true88 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.848, i64 0, i64 0), %if.then85 ], !dbg !18451
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.847, i64 0, i64 0), i8* noundef %cond93) #22, !dbg !18454
  %call94 = call i32 @close(i32 noundef %call) #23, !dbg !18455
  %call95 = call i32 @close(i32 noundef %call62.lcssa) #23, !dbg !18456
  br label %cleanup132, !dbg !18457

if.end96:                                         ; preds = %while.body77
  %sext = shl i64 %call81, 32, !dbg !18458
  %conv98 = ashr exact i64 %sext, 32, !dbg !18458
  %call99 = call i64 @write(i32 noundef %call62.lcssa, i8* noundef nonnull %0, i64 noundef %conv98) #23, !dbg !18459
  %conv100 = trunc i64 %call99 to i32, !dbg !18459
  call void @llvm.dbg.value(metadata i32 %conv100, metadata !18336, metadata !DIExpression()), !dbg !18445
  %cmp101 = icmp eq i32 %conv100, -1, !dbg !18460
  %sub = sub nsw i64 %dumpsize.0182, %conv98, !dbg !18462
  call void @llvm.dbg.value(metadata i64 %sub, metadata !18330, metadata !DIExpression()), !dbg !18344
  br i1 %cmp101, label %if.then103, label %while.cond75, !dbg !18463

if.then103:                                       ; preds = %if.end96
  %call104 = tail call i32* @__errno_location() #25, !dbg !18464
  %16 = load i32, i32* %call104, align 4, !dbg !18464, !tbaa !926
  %call105 = call i8* @strerror(i32 noundef %16) #23, !dbg !18466
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([89 x i8], [89 x i8]* @.str.849, i64 0, i64 0), i8* noundef %call105) #22, !dbg !18467
  %call106 = call i32 @close(i32 noundef %call) #23, !dbg !18468
  %call107 = call i32 @close(i32 noundef %call62.lcssa) #23, !dbg !18469
  br label %cleanup132, !dbg !18470

while.end111:                                     ; preds = %while.cond75, %while.cond75.preheader
  %call112 = call i32 @close(i32 noundef %call62.lcssa) #23, !dbg !18471
  %17 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !18472, !tbaa !913
  %call114 = call i32 @rename(i8* noundef nonnull %1, i8* noundef %17) #23, !dbg !18474
  %cmp115 = icmp eq i32 %call114, -1, !dbg !18475
  br i1 %cmp115, label %if.then117, label %if.end123, !dbg !18476

if.then117:                                       ; preds = %while.end111
  %call118 = tail call i32* @__errno_location() #25, !dbg !18477
  %18 = load i32, i32* %call118, align 4, !dbg !18477, !tbaa !926
  %call119 = call i8* @strerror(i32 noundef %18) #23, !dbg !18479
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.850, i64 0, i64 0), i8* noundef %call119) #22, !dbg !18480
  %call121 = call i32 @unlink(i8* noundef nonnull %1) #23, !dbg !18481
  %call122 = call i32 @close(i32 noundef %call) #23, !dbg !18482
  br label %cleanup132, !dbg !18483

if.end123:                                        ; preds = %while.end111
  %call124 = call fastcc i64 @emptyDb() #22, !dbg !18484
  %19 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !18485, !tbaa !913
  %call125 = call i32 @rdbLoad(i8* noundef %19) #22, !dbg !18487
  %cmp126.not = icmp eq i32 %call125, 0, !dbg !18488
  br i1 %cmp126.not, label %if.end130, label %if.then128, !dbg !18489

if.then128:                                       ; preds = %if.end123
  call void (i32, i8*, ...) @redisLog(i32 noundef 3, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.851, i64 0, i64 0)) #22, !dbg !18490
  %call129 = call i32 @close(i32 noundef %call) #23, !dbg !18492
  br label %cleanup132, !dbg !18493

if.end130:                                        ; preds = %if.end123
  %call131 = call %struct.redisClient* @createClient(i32 noundef %call) #22, !dbg !18494
  store %struct.redisClient* %call131, %struct.redisClient** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47), align 8, !dbg !18495, !tbaa !2719
  %flags = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call131, i64 0, i32 13, !dbg !18496
  %20 = load i32, i32* %flags, align 8, !dbg !18497, !tbaa !1402
  %or = or i32 %20, 2, !dbg !18497
  store i32 %or, i32* %flags, align 8, !dbg !18497, !tbaa !1402
  %authenticated = getelementptr inbounds %struct.redisClient, %struct.redisClient* %call131, i64 0, i32 15, !dbg !18498
  store i32 1, i32* %authenticated, align 8, !dbg !18499, !tbaa !3516
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !18500, !tbaa !2055
  br label %cleanup132, !dbg !18501

cleanup132:                                       ; preds = %cond.end92, %if.then103, %if.end130, %if.then128, %if.then117, %if.end66.4, %if.then49, %if.then40, %if.then31, %if.then24, %if.then17, %if.then9, %if.then
  %retval.2 = phi i32 [ -1, %if.then ], [ -1, %if.then9 ], [ -1, %if.then17 ], [ -1, %if.then24 ], [ -1, %if.then31 ], [ -1, %if.then40 ], [ -1, %if.then49 ], [ -1, %if.end66.4 ], [ -1, %if.then117 ], [ -1, %if.then128 ], [ 0, %if.end130 ], [ -1, %if.then103 ], [ -1, %cond.end92 ], !dbg !18344
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %2) #24, !dbg !18502
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1) #24, !dbg !18502
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %0) #24, !dbg !18502
  ret i32 %retval.2, !dbg !18502
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @syncWrite(i32 noundef %fd, i8* noundef %ptr, i64 noundef %size, i32 noundef %timeout) #0 !dbg !18503 {
entry:
  call void @llvm.dbg.value(metadata i32 %fd, metadata !18505, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !18506, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i64 %size, metadata !18507, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i32 %timeout, metadata !18508, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i64 %size, metadata !18510, metadata !DIExpression()), !dbg !18512
  %call = tail call i64 @time(i64* noundef null) #23, !dbg !18513
  call void @llvm.dbg.value(metadata i64 %call, metadata !18511, metadata !DIExpression()), !dbg !18512
  %inc = add nsw i32 %timeout, 1, !dbg !18514
  call void @llvm.dbg.value(metadata i32 %inc, metadata !18508, metadata !DIExpression()), !dbg !18512
  %conv = sext i32 %inc to i64
  br label %while.cond, !dbg !18515

while.cond:                                       ; preds = %if.end5, %entry
  %size.addr.0 = phi i64 [ %size, %entry ], [ %size.addr.1, %if.end5 ]
  %ptr.addr.0 = phi i8* [ %ptr, %entry ], [ %ptr.addr.1, %if.end5 ]
  call void @llvm.dbg.value(metadata i8* %ptr.addr.0, metadata !18506, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i64 %size.addr.0, metadata !18507, metadata !DIExpression()), !dbg !18512
  %tobool.not = icmp eq i64 %size.addr.0, 0, !dbg !18515
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !18515

while.body:                                       ; preds = %while.cond
  %call1 = tail call i32 @aeWait(i32 noundef %fd, i32 noundef 2, i64 noundef 1000) #23, !dbg !18516
  %and = and i32 %call1, 2, !dbg !18519
  %tobool2.not = icmp eq i32 %and, 0, !dbg !18519
  br i1 %tobool2.not, label %if.end5, label %if.then, !dbg !18520

if.then:                                          ; preds = %while.body
  %call3 = tail call i64 @write(i32 noundef %fd, i8* noundef %ptr.addr.0, i64 noundef %size.addr.0) #23, !dbg !18521
  call void @llvm.dbg.value(metadata i64 %call3, metadata !18509, metadata !DIExpression()), !dbg !18512
  %cmp = icmp eq i64 %call3, -1, !dbg !18523
  br i1 %cmp, label %cleanup, label %if.end, !dbg !18525

if.end:                                           ; preds = %if.then
  %add.ptr = getelementptr inbounds i8, i8* %ptr.addr.0, i64 %call3, !dbg !18526
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !18506, metadata !DIExpression()), !dbg !18512
  %sub = sub nsw i64 %size.addr.0, %call3, !dbg !18527
  call void @llvm.dbg.value(metadata i64 %sub, metadata !18507, metadata !DIExpression()), !dbg !18512
  br label %if.end5, !dbg !18528

if.end5:                                          ; preds = %if.end, %while.body
  %size.addr.1 = phi i64 [ %sub, %if.end ], [ %size.addr.0, %while.body ]
  %ptr.addr.1 = phi i8* [ %add.ptr, %if.end ], [ %ptr.addr.0, %while.body ]
  call void @llvm.dbg.value(metadata i8* %ptr.addr.1, metadata !18506, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i64 %size.addr.1, metadata !18507, metadata !DIExpression()), !dbg !18512
  %call6 = tail call i64 @time(i64* noundef null) #23, !dbg !18529
  %sub7 = sub nsw i64 %call6, %call, !dbg !18531
  %cmp8 = icmp sgt i64 %sub7, %conv, !dbg !18532
  br i1 %cmp8, label %if.then10, label %while.cond, !dbg !18533, !llvm.loop !18534

if.then10:                                        ; preds = %if.end5
  %call11 = tail call i32* @__errno_location() #25, !dbg !18536
  store i32 110, i32* %call11, align 4, !dbg !18538, !tbaa !926
  br label %cleanup, !dbg !18539

while.end:                                        ; preds = %while.cond
  %conv13 = trunc i64 %size to i32, !dbg !18540
  br label %cleanup, !dbg !18541

cleanup:                                          ; preds = %if.then, %while.end, %if.then10
  %retval.0 = phi i32 [ -1, %if.then10 ], [ %conv13, %while.end ], [ -1, %if.then ], !dbg !18512
  ret i32 %retval.0, !dbg !18542
}

; Function Attrs: noinline nounwind uwtable
define internal void @tryResizeHashTables() #0 !dbg !18543 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !18545, metadata !DIExpression()), !dbg !18546
  %0 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !18547, !tbaa !2013
  %cmp21 = icmp sgt i32 %0, 0, !dbg !18550
  br i1 %cmp21, label %for.body.preheader, label %for.end, !dbg !18551

for.body.preheader:                               ; preds = %entry
  %.pre24 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !18552, !tbaa !2351
  br label %for.body, !dbg !18551

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %1 = phi %struct.redisDb* [ %.pre24, %for.body.preheader ], [ %5, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !18545, metadata !DIExpression()), !dbg !18546
  %dict = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1, i64 %indvars.iv, i32 0, !dbg !18555
  %2 = load %struct.dict*, %struct.dict** %dict, align 8, !dbg !18555, !tbaa !2353
  %call = tail call i32 @htNeedsResize(%struct.dict* noundef %2) #22, !dbg !18556
  %tobool.not = icmp eq i32 %call, 0, !dbg !18556
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !18557

if.then:                                          ; preds = %for.body
  %call4 = tail call i32 @dictResize(%struct.dict* noundef %2) #23, !dbg !18558
  %.pre25 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !18559, !tbaa !2351
  br label %if.end, !dbg !18558

if.end:                                           ; preds = %if.then, %for.body
  %3 = phi %struct.redisDb* [ %.pre25, %if.then ], [ %1, %for.body ], !dbg !18559
  %expires = getelementptr inbounds %struct.redisDb, %struct.redisDb* %3, i64 %indvars.iv, i32 1, !dbg !18561
  %4 = load %struct.dict*, %struct.dict** %expires, align 8, !dbg !18561, !tbaa !3635
  %call7 = tail call i32 @htNeedsResize(%struct.dict* noundef %4) #22, !dbg !18562
  %tobool8.not = icmp eq i32 %call7, 0, !dbg !18562
  br i1 %tobool8.not, label %for.inc, label %if.then9, !dbg !18563

if.then9:                                         ; preds = %if.end
  %call13 = tail call i32 @dictResize(%struct.dict* noundef %4) #23, !dbg !18564
  %.pre = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !18552, !tbaa !2351
  br label %for.inc, !dbg !18564

for.inc:                                          ; preds = %if.end, %if.then9
  %5 = phi %struct.redisDb* [ %3, %if.end ], [ %.pre, %if.then9 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !18565
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !18545, metadata !DIExpression()), !dbg !18546
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 4, !dbg !18547, !tbaa !2013
  %7 = sext i32 %6 to i64, !dbg !18550
  %cmp = icmp slt i64 %indvars.iv.next, %7, !dbg !18550
  br i1 %cmp, label %for.body, label %for.end, !dbg !18551, !llvm.loop !18566

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !18568
}

declare !dbg !18569 dso_local i32 @anetNonBlock(i8* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !18572 dso_local i32 @anetTcpNoDelay(i8* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !18573 dso_local i32 @dictRehashMilliseconds(%struct.dict* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !18576 dso_local i32 @aeWait(i32 noundef, i32 noundef, i64 noundef) local_unnamed_addr #4

declare !dbg !18579 dso_local i32 @anetTcpConnect(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !18582 dso_local i32 @sleep(i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @dictObjHash(i8* nocapture noundef readonly %key) #0 !dbg !18585 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !18587, metadata !DIExpression()), !dbg !18589
  call void @llvm.dbg.value(metadata i8* %key, metadata !18588, metadata !DIExpression()), !dbg !18589
  %ptr = bitcast i8* %key to i8**, !dbg !18590
  %0 = load i8*, i8** %ptr, align 8, !dbg !18590, !tbaa !1328
  %call = tail call i64 @sdslen(i8* noundef %0) #23, !dbg !18591
  %conv = trunc i64 %call to i32, !dbg !18591
  %call2 = tail call i32 @dictGenHashFunction(i8* noundef %0, i32 noundef %conv) #23, !dbg !18592
  ret i32 %call2, !dbg !18593
}

declare !dbg !18594 dso_local i32 @anetAccept(i8* noundef, i32 noundef, i8* noundef, i32* noundef) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare !dbg !18597 dso_local void @abort() local_unnamed_addr #8

declare !dbg !18598 dso_local void @zmalloc_enable_thread_safeness() local_unnamed_addr #4

declare !dbg !18599 dso_local i32 @fcntl64(i32 noundef, i32 noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare !dbg !18602 dso_local i32 @ftruncate64(i32 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !18605 dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t* noundef, %union.pthread_mutexattr_t* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !18616 dso_local i32 @pipe(i32* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !18619 dso_local i32 @pthread_attr_init(%union.pthread_attr_t* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !18623 dso_local i32 @pthread_attr_getstacksize(%union.pthread_attr_t* noundef, i64* noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !18628 dso_local i32 @pthread_attr_setstacksize(%union.pthread_attr_t* noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #21

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #21

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #21

attributes #0 = { noinline nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { nounwind "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nosync nounwind readnone willreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nofree noinline norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree noinline norecurse nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn nounwind "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree noinline nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree noinline nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree nosync nounwind willreturn }
attributes #13 = { noreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree noinline nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #19 = { noinline noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree noinline norecurse nosync nounwind uwtable writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #22 = { nobuiltin "no-builtins" }
attributes #23 = { nobuiltin nounwind "no-builtins" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind "no-builtins" }
attributes #27 = { nobuiltin nounwind readonly willreturn "no-builtins" }
attributes #28 = { readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!690, !691, !692, !693}
!llvm.ident = !{!694}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "server", scope: !2, file: !3, line: 748, type: !445, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 14.0.0", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !43, globals: !359, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "redis.c", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "81c528792f7fa50efc6105e13dd380f7")
!4 = !{!5, !21}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "36575f934ef4fe7e9d50a3cb17bd5c66")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!9 = !DIEnumerator(name: "_ISupper", value: 256)
!10 = !DIEnumerator(name: "_ISlower", value: 512)
!11 = !DIEnumerator(name: "_ISalpha", value: 1024)
!12 = !DIEnumerator(name: "_ISdigit", value: 2048)
!13 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!14 = !DIEnumerator(name: "_ISspace", value: 8192)
!15 = !DIEnumerator(name: "_ISprint", value: 16384)
!16 = !DIEnumerator(name: "_ISgraph", value: 32768)
!17 = !DIEnumerator(name: "_ISblank", value: 1)
!18 = !DIEnumerator(name: "_IScntrl", value: 2)
!19 = !DIEnumerator(name: "_ISpunct", value: 4)
!20 = !DIEnumerator(name: "_ISalnum", value: 8)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !22, line: 33, baseType: !7, size: 32, elements: !23)
!22 = !DIFile(filename: "./redis.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "702621b06500076a0b5a8040f5d5642a")
!23 = !{!24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!24 = !DIEnumerator(name: "REG_GS", value: 0)
!25 = !DIEnumerator(name: "REG_FS", value: 1)
!26 = !DIEnumerator(name: "REG_ES", value: 2)
!27 = !DIEnumerator(name: "REG_DS", value: 3)
!28 = !DIEnumerator(name: "REG_EDI", value: 4)
!29 = !DIEnumerator(name: "REG_ESI", value: 5)
!30 = !DIEnumerator(name: "REG_EBP", value: 6)
!31 = !DIEnumerator(name: "REG_ESP", value: 7)
!32 = !DIEnumerator(name: "REG_EBX", value: 8)
!33 = !DIEnumerator(name: "REG_EDX", value: 9)
!34 = !DIEnumerator(name: "REG_ECX", value: 10)
!35 = !DIEnumerator(name: "REG_EAX", value: 11)
!36 = !DIEnumerator(name: "REG_TRAPNO", value: 12)
!37 = !DIEnumerator(name: "REG_ERR", value: 13)
!38 = !DIEnumerator(name: "REG_EIP", value: 14)
!39 = !DIEnumerator(name: "REG_CS", value: 15)
!40 = !DIEnumerator(name: "REG_EFL", value: 16)
!41 = !DIEnumerator(name: "REG_UESP", value: 17)
!42 = !DIEnumerator(name: "REG_SS", value: 18)
!43 = !{!44, !45, !46, !47, !49, !53, !54, !55, !56, !58, !86, !139, !143, !145, !165, !167, !168, !169, !151, !170, !7, !171, !195, !196, !198, !199, !204, !287}
!44 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!45 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !50, line: 7, baseType: !51)
!50 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "49b4e16ef1215de5afdbb283400ab90c")
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !52, line: 160, baseType: !53)
!52 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "f6304b1a6dcfc6bee76e9a51043b5090")
!53 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!54 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!55 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !57, line: 27, baseType: !55)
!57 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "2d764266ce95ab26d4a4767c2ec78176")
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !60, line: 54, baseType: !61)
!60 = !DIFile(filename: "./adlist.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "0461b55abfa9065d70cc6ca884308362")
!61 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !60, line: 47, size: 384, elements: !62)
!62 = !{!63, !72, !73, !77, !81, !85}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !61, file: !60, line: 48, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !60, line: 40, baseType: !66)
!66 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !60, line: 36, size: 192, elements: !67)
!67 = !{!68, !70, !71}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !66, file: !60, line: 37, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !66, file: !60, line: 38, baseType: !69, size: 64, offset: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !66, file: !60, line: 39, baseType: !46, size: 64, offset: 128)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !61, file: !60, line: 49, baseType: !64, size: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !61, file: !60, line: 50, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!75 = !DISubroutineType(types: !76)
!76 = !{!46, !46}
!77 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !61, file: !60, line: 51, baseType: !78, size: 64, offset: 192)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !46}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !61, file: !60, line: 52, baseType: !82, size: 64, offset: 256)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DISubroutineType(types: !84)
!84 = !{!45, !46, !46}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !61, file: !60, line: 53, baseType: !7, size: 32, offset: 320)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !88, line: 75, baseType: !89)
!88 = !DIFile(filename: "./dict.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "b8b7e1319e2afa32704af21432f9ee20")
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !88, line: 69, size: 704, elements: !90)
!90 = !{!91, !116, !117, !137, !138}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !89, file: !88, line: 70, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !88, line: 58, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !88, line: 51, size: 384, elements: !95)
!95 = !{!96, !102, !106, !107, !111, !115}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !94, file: !88, line: 52, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DISubroutineType(types: !99)
!99 = !{!7, !100}
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !94, file: !88, line: 53, baseType: !103, size: 64, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DISubroutineType(types: !105)
!105 = !{!46, !46, !100}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !94, file: !88, line: 54, baseType: !103, size: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !94, file: !88, line: 55, baseType: !108, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DISubroutineType(types: !110)
!110 = !{!45, !46, !100, !100}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !94, file: !88, line: 56, baseType: !112, size: 64, offset: 256)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DISubroutineType(types: !114)
!114 = !{null, !46, !46}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !94, file: !88, line: 57, baseType: !112, size: 64, offset: 320)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !89, file: !88, line: 71, baseType: !46, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !89, file: !88, line: 72, baseType: !118, size: 512, offset: 128)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 512, elements: !135)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !88, line: 67, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !88, line: 62, size: 256, elements: !121)
!121 = !{!122, !132, !133, !134}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !120, file: !88, line: 63, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !88, line: 49, baseType: !126)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !88, line: 45, size: 192, elements: !127)
!127 = !{!128, !129, !130}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !126, file: !88, line: 46, baseType: !46, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !126, file: !88, line: 47, baseType: !46, size: 64, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !126, file: !88, line: 48, baseType: !131, size: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !120, file: !88, line: 64, baseType: !55, size: 64, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !120, file: !88, line: 65, baseType: !55, size: 64, offset: 128)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !120, file: !88, line: 66, baseType: !55, size: 64, offset: 192)
!135 = !{!136}
!136 = !DISubrange(count: 2)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !89, file: !88, line: 73, baseType: !45, size: 32, offset: 640)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !89, file: !88, line: 74, baseType: !45, size: 32, offset: 672)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !140, line: 25, baseType: !141)
!140 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "081edea97425b3437dded4a7fe223193")
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !52, line: 39, baseType: !142)
!142 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !140, line: 26, baseType: !144)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !52, line: 41, baseType: !45)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !3, line: 271, baseType: !147)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !3, line: 257, size: 320, elements: !148)
!148 = !{!149, !150, !152, !153, !154, !155, !156}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !147, file: !3, line: 258, baseType: !46, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !147, file: !3, line: 259, baseType: !151, size: 8, offset: 64)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !147, file: !3, line: 260, baseType: !151, size: 8, offset: 72)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !147, file: !3, line: 261, baseType: !151, size: 8, offset: 80)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "vtype", scope: !147, file: !3, line: 263, baseType: !151, size: 8, offset: 88)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !147, file: !3, line: 265, baseType: !45, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !147, file: !3, line: 270, baseType: !157, size: 192, offset: 128)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObjectVM", file: !3, line: 250, size: 192, elements: !158)
!158 = !{!159, !163, !164}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !157, file: !3, line: 251, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !161, line: 65, baseType: !162)
!161 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "5b917eded35ce2507d1e294bf8cb74d7")
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !52, line: 153, baseType: !53)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "usedpages", scope: !157, file: !3, line: 252, baseType: !160, size: 64, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !157, file: !3, line: 253, baseType: !49, size: 64, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !166, line: 36, baseType: !47)
!166 = !DIFile(filename: "./sds.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "be5f4c5599eae55b8730033246030f20")
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!168 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "zset", file: !3, line: 512, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zset", file: !3, line: 509, size: 128, elements: !174)
!174 = !{!175, !176}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !173, file: !3, line: 510, baseType: !86, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "zsl", scope: !173, file: !3, line: 511, baseType: !177, size: 64, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplist", file: !3, line: 507, baseType: !179)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplist", file: !3, line: 503, size: 256, elements: !180)
!180 = !{!181, !192, !193, !194}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !179, file: !3, line: 504, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistNode", file: !3, line: 495, size: 320, elements: !184)
!184 = !{!185, !187, !188, !190, !191}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !183, file: !3, line: 496, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "backward", scope: !183, file: !3, line: 497, baseType: !182, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !183, file: !3, line: 498, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !183, file: !3, line: 499, baseType: !168, size: 64, offset: 192)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !183, file: !3, line: 500, baseType: !145, size: 64, offset: 256)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !179, file: !3, line: 504, baseType: !182, size: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !179, file: !3, line: 505, baseType: !55, size: 64, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !179, file: !3, line: 506, baseType: !45, size: 32, offset: 192)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !197, line: 46, baseType: !55)
!197 = !DIFile(filename: "VeriFrame/LLVMUtils/llvm/lib/clang/14.0.0/include/stddef.h", directory: "/home/xuheng", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !200, line: 72, baseType: !201)
!200 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "f0ccc98b488c777571beae1a47763d91")
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DISubroutineType(types: !203)
!203 = !{null, !45}
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ucontext_t", file: !206, line: 151, baseType: !207)
!206 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/ucontext.h", directory: "", checksumkind: CSK_MD5, checksum: "55884736823fd156ff88bfe3fd100caf")
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucontext_t", file: !206, line: 142, size: 7744, elements: !208)
!208 = !{!209, !210, !212, !220, !275, !284, !285}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "uc_flags", scope: !207, file: !206, line: 144, baseType: !55, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "uc_link", scope: !207, file: !206, line: 145, baseType: !211, size: 64, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "uc_stack", scope: !207, file: !206, line: 146, baseType: !213, size: 192, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !214, line: 31, baseType: !215)
!214 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/stack_t.h", directory: "", checksumkind: CSK_MD5, checksum: "893fc96118d5328f1c1d31b635387971")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 26, size: 192, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ss_sp", scope: !215, file: !214, line: 28, baseType: !46, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ss_flags", scope: !215, file: !214, line: 29, baseType: !45, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ss_size", scope: !215, file: !214, line: 30, baseType: !196, size: 64, offset: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "uc_mcontext", scope: !207, file: !206, line: 147, baseType: !221, size: 2048, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "mcontext_t", file: !206, line: 139, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !206, line: 133, size: 2048, elements: !223)
!223 = !{!224, !230, !273}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "gregs", scope: !222, file: !206, line: 135, baseType: !225, size: 1472)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gregset_t", file: !206, line: 46, baseType: !226)
!226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 1472, elements: !228)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "greg_t", file: !206, line: 37, baseType: !54)
!228 = !{!229}
!229 = !DISubrange(count: 23)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "fpregs", scope: !222, file: !206, line: 137, baseType: !231, size: 64, offset: 1472)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpregset_t", file: !206, line: 130, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_libc_fpstate", file: !206, line: 113, size: 4096, elements: !234)
!234 = !{!235, !237, !238, !239, !240, !242, !243, !245, !246, !261, !269}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !233, file: !206, line: 116, baseType: !236, size: 16)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !52, line: 40, baseType: !169)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !233, file: !206, line: 117, baseType: !236, size: 16, offset: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !233, file: !206, line: 118, baseType: !236, size: 16, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !233, file: !206, line: 119, baseType: !236, size: 16, offset: 48)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !233, file: !206, line: 120, baseType: !241, size: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !52, line: 45, baseType: !55)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !233, file: !206, line: 121, baseType: !241, size: 64, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !233, file: !206, line: 122, baseType: !244, size: 32, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !52, line: 42, baseType: !7)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "mxcr_mask", scope: !233, file: !206, line: 123, baseType: !244, size: 32, offset: 224)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "_st", scope: !233, file: !206, line: 124, baseType: !247, size: 1024, offset: 256)
!247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 1024, elements: !259)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_libc_fpxreg", file: !206, line: 101, size: 128, elements: !249)
!249 = !{!250, !254, !255}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "significand", scope: !248, file: !206, line: 103, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 64, elements: !252)
!252 = !{!253}
!253 = !DISubrange(count: 4)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !248, file: !206, line: 104, baseType: !169, size: 16, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved1", scope: !248, file: !206, line: 105, baseType: !256, size: 48, offset: 80)
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 48, elements: !257)
!257 = !{!258}
!258 = !DISubrange(count: 3)
!259 = !{!260}
!260 = !DISubrange(count: 8)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "_xmm", scope: !233, file: !206, line: 125, baseType: !262, size: 2048, offset: 1280)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 2048, elements: !267)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_libc_xmmreg", file: !206, line: 108, size: 128, elements: !264)
!264 = !{!265}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !263, file: !206, line: 110, baseType: !266, size: 128)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 128, elements: !252)
!267 = !{!268}
!268 = !DISubrange(count: 16)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved1", scope: !233, file: !206, line: 126, baseType: !270, size: 768, offset: 3328)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 768, elements: !271)
!271 = !{!272}
!272 = !DISubrange(count: 24)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved1", scope: !222, file: !206, line: 138, baseType: !274, size: 512, offset: 1536)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 512, elements: !259)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "uc_sigmask", scope: !207, file: !206, line: 148, baseType: !276, size: 1024, offset: 2368)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !277, line: 7, baseType: !278)
!277 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "", checksumkind: CSK_MD5, checksum: "c2b978aaf49d5c0e2b1e9c2e1b7f7848")
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !279, line: 8, baseType: !280)
!279 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "", checksumkind: CSK_MD5, checksum: "acc6b14c0967857fec362a8d433e1cf2")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 5, size: 1024, elements: !281)
!281 = !{!282}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !280, file: !279, line: 7, baseType: !283, size: 1024)
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 1024, elements: !267)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "__fpregs_mem", scope: !207, file: !206, line: 149, baseType: !233, size: 4096, offset: 3392)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "__ssp", scope: !207, file: !206, line: 150, baseType: !286, size: 256, offset: 7488)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 256, elements: !252)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisClient", file: !3, line: 336, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisClient", file: !3, line: 307, size: 1536, elements: !290)
!290 = !{!291, !292, !302, !303, !304, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !353, !354, !355, !356, !357, !358}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !289, file: !3, line: 308, baseType: !45, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !289, file: !3, line: 309, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !3, line: 291, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !3, line: 285, size: 320, elements: !296)
!296 = !{!297, !298, !299, !300, !301}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !295, file: !3, line: 286, baseType: !86, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !295, file: !3, line: 287, baseType: !86, size: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "blockingkeys", scope: !295, file: !3, line: 288, baseType: !86, size: 64, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "io_keys", scope: !295, file: !3, line: 289, baseType: !86, size: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !295, file: !3, line: 290, baseType: !45, size: 32, offset: 256)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "dictid", scope: !289, file: !3, line: 310, baseType: !45, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !289, file: !3, line: 311, baseType: !165, size: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !289, file: !3, line: 312, baseType: !305, size: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "mbargv", scope: !289, file: !3, line: 312, baseType: !305, size: 64, offset: 320)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !289, file: !3, line: 313, baseType: !45, size: 32, offset: 384)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "mbargc", scope: !289, file: !3, line: 313, baseType: !45, size: 32, offset: 416)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !289, file: !3, line: 314, baseType: !45, size: 32, offset: 448)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "multibulk", scope: !289, file: !3, line: 315, baseType: !45, size: 32, offset: 480)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !289, file: !3, line: 316, baseType: !58, size: 64, offset: 512)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !289, file: !3, line: 317, baseType: !45, size: 32, offset: 576)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !289, file: !3, line: 318, baseType: !49, size: 64, offset: 640)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !3, line: 319, baseType: !45, size: 32, offset: 704)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "slaveseldb", scope: !289, file: !3, line: 320, baseType: !45, size: 32, offset: 736)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !289, file: !3, line: 321, baseType: !45, size: 32, offset: 768)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !289, file: !3, line: 322, baseType: !45, size: 32, offset: 800)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !289, file: !3, line: 323, baseType: !45, size: 32, offset: 832)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !289, file: !3, line: 324, baseType: !53, size: 64, offset: 896)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !289, file: !3, line: 325, baseType: !160, size: 64, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !289, file: !3, line: 326, baseType: !322, size: 128, offset: 1024)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !3, line: 303, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !3, line: 300, size: 128, elements: !324)
!324 = !{!325, !352}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !323, file: !3, line: 301, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !3, line: 298, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !3, line: 294, size: 192, elements: !329)
!329 = !{!330, !331, !332}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !328, file: !3, line: 295, baseType: !305, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !328, file: !3, line: 296, baseType: !45, size: 32, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !328, file: !3, line: 297, baseType: !333, size: 64, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !3, line: 460, size: 384, elements: !335)
!335 = !{!336, !337, !342, !343, !344, !349, !350, !351}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !334, file: !3, line: 461, baseType: !47, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !334, file: !3, line: 462, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !3, line: 458, baseType: !340)
!340 = !DISubroutineType(types: !341)
!341 = !{null, !287}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !334, file: !3, line: 463, baseType: !45, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !334, file: !3, line: 464, baseType: !45, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "vm_preload_proc", scope: !334, file: !3, line: 468, baseType: !345, size: 64, offset: 192)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisVmPreloadProc", file: !3, line: 459, baseType: !347)
!347 = !DISubroutineType(types: !348)
!348 = !{null, !287, !333, !45, !305}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "vm_firstkey", scope: !334, file: !3, line: 470, baseType: !45, size: 32, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "vm_lastkey", scope: !334, file: !3, line: 471, baseType: !45, size: 32, offset: 288)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "vm_keystep", scope: !334, file: !3, line: 472, baseType: !45, size: 32, offset: 320)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !323, file: !3, line: 302, baseType: !45, size: 32, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "blockingkeys", scope: !289, file: !3, line: 327, baseType: !305, size: 64, offset: 1152)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "blockingkeysnum", scope: !289, file: !3, line: 329, baseType: !45, size: 32, offset: 1216)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "blockingto", scope: !289, file: !3, line: 330, baseType: !49, size: 64, offset: 1280)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "io_keys", scope: !289, file: !3, line: 332, baseType: !58, size: 64, offset: 1344)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !289, file: !3, line: 334, baseType: !86, size: 64, offset: 1408)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !289, file: !3, line: 335, baseType: !58, size: 64, offset: 1472)
!359 = !{!360, !362, !0, !407, !409, !411, !413, !415, !417, !419, !424, !427, !429, !439, !441, !443}
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "vm", scope: !2, file: !3, line: 254, type: !157, isLocal: false, isDefinition: true)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "shared", scope: !2, file: !3, line: 527, type: !364, isLocal: false, isDefinition: true)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sharedObjectsStruct", file: !3, line: 517, size: 642368, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "crlf", scope: !364, file: !3, line: 518, baseType: !145, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "emptybulk", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "czero", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 256)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "cone", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 320)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pong", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 384)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !364, file: !3, line: 518, baseType: !145, size: 64, offset: 448)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "colon", scope: !364, file: !3, line: 519, baseType: !145, size: 64, offset: 512)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "nullbulk", scope: !364, file: !3, line: 519, baseType: !145, size: 64, offset: 576)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "nullmultibulk", scope: !364, file: !3, line: 519, baseType: !145, size: 64, offset: 640)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !364, file: !3, line: 519, baseType: !145, size: 64, offset: 704)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "emptymultibulk", scope: !364, file: !3, line: 520, baseType: !145, size: 64, offset: 768)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "wrongtypeerr", scope: !364, file: !3, line: 520, baseType: !145, size: 64, offset: 832)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "nokeyerr", scope: !364, file: !3, line: 520, baseType: !145, size: 64, offset: 896)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxerr", scope: !364, file: !3, line: 520, baseType: !145, size: 64, offset: 960)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "sameobjecterr", scope: !364, file: !3, line: 520, baseType: !145, size: 64, offset: 1024)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "outofrangeerr", scope: !364, file: !3, line: 521, baseType: !145, size: 64, offset: 1088)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "plus", scope: !364, file: !3, line: 521, baseType: !145, size: 64, offset: 1152)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "select0", scope: !364, file: !3, line: 522, baseType: !145, size: 64, offset: 1216)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "select1", scope: !364, file: !3, line: 522, baseType: !145, size: 64, offset: 1280)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "select2", scope: !364, file: !3, line: 522, baseType: !145, size: 64, offset: 1344)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "select3", scope: !364, file: !3, line: 522, baseType: !145, size: 64, offset: 1408)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "select4", scope: !364, file: !3, line: 522, baseType: !145, size: 64, offset: 1472)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "select5", scope: !364, file: !3, line: 523, baseType: !145, size: 64, offset: 1536)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "select6", scope: !364, file: !3, line: 523, baseType: !145, size: 64, offset: 1600)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "select7", scope: !364, file: !3, line: 523, baseType: !145, size: 64, offset: 1664)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "select8", scope: !364, file: !3, line: 523, baseType: !145, size: 64, offset: 1728)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "select9", scope: !364, file: !3, line: 523, baseType: !145, size: 64, offset: 1792)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "messagebulk", scope: !364, file: !3, line: 524, baseType: !145, size: 64, offset: 1856)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "pmessagebulk", scope: !364, file: !3, line: 524, baseType: !145, size: 64, offset: 1920)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "subscribebulk", scope: !364, file: !3, line: 524, baseType: !145, size: 64, offset: 1984)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "unsubscribebulk", scope: !364, file: !3, line: 524, baseType: !145, size: 64, offset: 2048)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "mbulk3", scope: !364, file: !3, line: 524, baseType: !145, size: 64, offset: 2112)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "mbulk4", scope: !364, file: !3, line: 525, baseType: !145, size: 64, offset: 2176)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "psubscribebulk", scope: !364, file: !3, line: 525, baseType: !145, size: 64, offset: 2240)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "punsubscribebulk", scope: !364, file: !3, line: 525, baseType: !145, size: 64, offset: 2304)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "integers", scope: !364, file: !3, line: 526, baseType: !404, size: 640000, offset: 2368)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 640000, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 10000)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "setDictType", scope: !2, file: !3, line: 1175, type: !93, isLocal: true, isDefinition: true)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "zsetDictType", scope: !2, file: !3, line: 1185, type: !93, isLocal: true, isDefinition: true)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "R_NegInf", scope: !2, file: !3, line: 533, type: !168, isLocal: true, isDefinition: true)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "R_PosInf", scope: !2, file: !3, line: 533, type: !168, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "R_Nan", scope: !2, file: !3, line: 533, type: !168, isLocal: true, isDefinition: true)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "hashDictType", scope: !2, file: !3, line: 1215, type: !93, isLocal: true, isDefinition: true)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "cmdTable", scope: !2, file: !3, line: 749, type: !421, isLocal: true, isDefinition: true)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 41088, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 107)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "strencoding", scope: !2, file: !3, line: 132, type: !426, isLocal: true, isDefinition: true)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 256, elements: !252)
!427 = !DIGlobalVariableExpression(var: !428, expr: !DIExpression())
!428 = distinct !DIGlobalVariable(name: "R_Zero", scope: !2, file: !3, line: 533, type: !168, isLocal: true, isDefinition: true)
!429 = !DIGlobalVariableExpression(var: !430, expr: !DIExpression())
!430 = distinct !DIGlobalVariable(name: "symsTable", scope: !2, file: !431, line: 1, type: !432, isLocal: true, isDefinition: true)
!431 = !DIFile(filename: "./staticsymbols.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "70d107934b1e769d0d9cd9246489e390")
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 45824, elements: !437)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisFunctionSym", file: !3, line: 475, size: 128, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !433, file: !3, line: 476, baseType: !47, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !433, file: !3, line: 477, baseType: !55, size: 64, offset: 64)
!437 = !{!438}
!438 = !DISubrange(count: 358)
!439 = !DIGlobalVariableExpression(var: !440, expr: !DIExpression())
!440 = distinct !DIGlobalVariable(name: "dbDictType", scope: !2, file: !3, line: 1195, type: !93, isLocal: true, isDefinition: true)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "keyptrDictType", scope: !2, file: !3, line: 1205, type: !93, isLocal: true, isDefinition: true)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "keylistDictType", scope: !2, file: !3, line: 1227, type: !93, isLocal: true, isDefinition: true)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisServer", file: !3, line: 344, size: 7872, elements: !446)
!446 = !{!447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !460, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !542, !543, !544, !545, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !668, !669, !670, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "mainthread", scope: !445, file: !3, line: 345, baseType: !56, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !445, file: !3, line: 346, baseType: !45, size: 32, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !445, file: !3, line: 347, baseType: !45, size: 32, offset: 96)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !445, file: !3, line: 348, baseType: !293, size: 64, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !445, file: !3, line: 349, baseType: !54, size: 64, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_before_bgsave", scope: !445, file: !3, line: 350, baseType: !54, size: 64, offset: 256)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "clients", scope: !445, file: !3, line: 351, baseType: !58, size: 64, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !445, file: !3, line: 352, baseType: !58, size: 64, offset: 384)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !445, file: !3, line: 352, baseType: !58, size: 64, offset: 448)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "neterr", scope: !445, file: !3, line: 353, baseType: !457, size: 2048, offset: 512)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 2048, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 256)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "el", scope: !445, file: !3, line: 354, baseType: !461, size: 64, offset: 2560)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !463, line: 98, baseType: !464)
!463 = !DIFile(filename: "./ae.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "51650c7e83e254786f74107a47ea513a")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !463, line: 89, size: 3277184, elements: !465)
!465 = !{!466, !467, !468, !484, !491, !512, !513, !514}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !464, file: !463, line: 90, baseType: !45, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !464, file: !463, line: 91, baseType: !54, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !464, file: !463, line: 92, baseType: !469, size: 2621440, offset: 128)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 2621440, elements: !482)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !463, line: 69, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !463, line: 64, size: 256, elements: !472)
!472 = !{!473, !474, !480, !481}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !471, file: !463, line: 65, baseType: !45, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !471, file: !463, line: 66, baseType: !475, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !463, line: 58, baseType: !477)
!477 = !DISubroutineType(types: !478)
!478 = !{null, !479, !45, !46, !45}
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !471, file: !463, line: 67, baseType: !475, size: 64, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !471, file: !463, line: 68, baseType: !46, size: 64, offset: 192)
!482 = !{!483}
!483 = !DISubrange(count: 10240)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !464, file: !463, line: 93, baseType: !485, size: 655360, offset: 2621568)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 655360, elements: !482)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !463, line: 86, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !463, line: 83, size: 64, elements: !488)
!488 = !{!489, !490}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !487, file: !463, line: 84, baseType: !45, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !487, file: !463, line: 85, baseType: !45, size: 32, offset: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !464, file: !463, line: 94, baseType: !492, size: 64, offset: 3276928)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !463, line: 80, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !463, line: 72, size: 448, elements: !495)
!495 = !{!496, !497, !498, !499, !504, !509, !510}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !494, file: !463, line: 73, baseType: !54, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !494, file: !463, line: 74, baseType: !53, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !494, file: !463, line: 75, baseType: !53, size: 64, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !494, file: !463, line: 76, baseType: !500, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !463, line: 59, baseType: !502)
!502 = !DISubroutineType(types: !503)
!503 = !{!45, !479, !54, !46}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !494, file: !463, line: 77, baseType: !505, size: 64, offset: 256)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !463, line: 60, baseType: !507)
!507 = !DISubroutineType(types: !508)
!508 = !{null, !479, !46}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !494, file: !463, line: 78, baseType: !46, size: 64, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !494, file: !463, line: 79, baseType: !511, size: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !464, file: !463, line: 95, baseType: !45, size: 32, offset: 3276992)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !464, file: !463, line: 96, baseType: !46, size: 64, offset: 3277056)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !464, file: !463, line: 97, baseType: !515, size: 64, offset: 3277120)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !463, line: 61, baseType: !517)
!517 = !DISubroutineType(types: !518)
!518 = !{null, !479}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "cronloops", scope: !445, file: !3, line: 355, baseType: !45, size: 32, offset: 2624)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "objfreelist", scope: !445, file: !3, line: 356, baseType: !58, size: 64, offset: 2688)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "lastsave", scope: !445, file: !3, line: 357, baseType: !49, size: 64, offset: 2752)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "stat_starttime", scope: !445, file: !3, line: 359, baseType: !49, size: 64, offset: 2816)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "stat_numcommands", scope: !445, file: !3, line: 360, baseType: !54, size: 64, offset: 2880)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "stat_numconnections", scope: !445, file: !3, line: 361, baseType: !54, size: 64, offset: 2944)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "stat_expiredkeys", scope: !445, file: !3, line: 362, baseType: !54, size: 64, offset: 3008)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !445, file: !3, line: 364, baseType: !45, size: 32, offset: 3072)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "glueoutputbuf", scope: !445, file: !3, line: 365, baseType: !45, size: 32, offset: 3104)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "maxidletime", scope: !445, file: !3, line: 366, baseType: !45, size: 32, offset: 3136)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dbnum", scope: !445, file: !3, line: 367, baseType: !45, size: 32, offset: 3168)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "daemonize", scope: !445, file: !3, line: 368, baseType: !45, size: 32, offset: 3200)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "appendonly", scope: !445, file: !3, line: 369, baseType: !45, size: 32, offset: 3232)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "appendfsync", scope: !445, file: !3, line: 370, baseType: !45, size: 32, offset: 3264)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_asap", scope: !445, file: !3, line: 371, baseType: !45, size: 32, offset: 3296)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "lastfsync", scope: !445, file: !3, line: 372, baseType: !49, size: 64, offset: 3328)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "appendfd", scope: !445, file: !3, line: 373, baseType: !45, size: 32, offset: 3392)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "appendseldb", scope: !445, file: !3, line: 374, baseType: !45, size: 32, offset: 3424)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "pidfile", scope: !445, file: !3, line: 375, baseType: !47, size: 64, offset: 3456)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "bgsavechildpid", scope: !445, file: !3, line: 376, baseType: !539, size: 32, offset: 3520)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !540, line: 97, baseType: !541)
!540 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "20e2108af45064f5c7b77fc9416f0cce")
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !52, line: 154, baseType: !45)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "bgrewritechildpid", scope: !445, file: !3, line: 377, baseType: !539, size: 32, offset: 3552)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "bgrewritebuf", scope: !445, file: !3, line: 378, baseType: !165, size: 64, offset: 3584)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "aofbuf", scope: !445, file: !3, line: 379, baseType: !165, size: 64, offset: 3648)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "saveparams", scope: !445, file: !3, line: 380, baseType: !546, size: 64, offset: 3712)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saveparam", file: !3, line: 338, size: 128, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !547, file: !3, line: 339, baseType: !49, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "changes", scope: !547, file: !3, line: 340, baseType: !45, size: 32, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "saveparamslen", scope: !445, file: !3, line: 381, baseType: !45, size: 32, offset: 3776)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "logfile", scope: !445, file: !3, line: 382, baseType: !47, size: 64, offset: 3840)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "bindaddr", scope: !445, file: !3, line: 383, baseType: !47, size: 64, offset: 3904)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "dbfilename", scope: !445, file: !3, line: 384, baseType: !47, size: 64, offset: 3968)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "appendfilename", scope: !445, file: !3, line: 385, baseType: !47, size: 64, offset: 4032)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "requirepass", scope: !445, file: !3, line: 386, baseType: !47, size: 64, offset: 4096)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rdbcompression", scope: !445, file: !3, line: 387, baseType: !45, size: 32, offset: 4160)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "activerehashing", scope: !445, file: !3, line: 388, baseType: !45, size: 32, offset: 4192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "isslave", scope: !445, file: !3, line: 390, baseType: !45, size: 32, offset: 4224)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "masterauth", scope: !445, file: !3, line: 391, baseType: !47, size: 64, offset: 4288)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "masterhost", scope: !445, file: !3, line: 392, baseType: !47, size: 64, offset: 4352)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "masterport", scope: !445, file: !3, line: 393, baseType: !45, size: 32, offset: 4416)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !445, file: !3, line: 394, baseType: !287, size: 64, offset: 4480)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !445, file: !3, line: 395, baseType: !45, size: 32, offset: 4544)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "maxclients", scope: !445, file: !3, line: 396, baseType: !7, size: 32, offset: 4576)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "maxmemory", scope: !445, file: !3, line: 397, baseType: !170, size: 64, offset: 4608)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "blpop_blocked_clients", scope: !445, file: !3, line: 398, baseType: !7, size: 32, offset: 4672)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "vm_blocked_clients", scope: !445, file: !3, line: 399, baseType: !7, size: 32, offset: 4704)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "sort_desc", scope: !445, file: !3, line: 402, baseType: !45, size: 32, offset: 4736)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "sort_alpha", scope: !445, file: !3, line: 403, baseType: !45, size: 32, offset: 4768)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "sort_bypattern", scope: !445, file: !3, line: 404, baseType: !45, size: 32, offset: 4800)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "vm_enabled", scope: !445, file: !3, line: 406, baseType: !45, size: 32, offset: 4832)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "vm_swap_file", scope: !445, file: !3, line: 407, baseType: !47, size: 64, offset: 4864)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_size", scope: !445, file: !3, line: 408, baseType: !160, size: 64, offset: 4928)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pages", scope: !445, file: !3, line: 409, baseType: !160, size: 64, offset: 4992)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vm_max_memory", scope: !445, file: !3, line: 410, baseType: !170, size: 64, offset: 5056)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "hash_max_zipmap_entries", scope: !445, file: !3, line: 412, baseType: !196, size: 64, offset: 5120)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "hash_max_zipmap_value", scope: !445, file: !3, line: 413, baseType: !196, size: 64, offset: 5184)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "vm_fp", scope: !445, file: !3, line: 415, baseType: !580, size: 64, offset: 5248)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !582, line: 7, baseType: !583)
!582 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !584, line: 49, size: 1728, elements: !585)
!584 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "f3c970561f3408448ce03a9676ead8f4")
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !601, !603, !604, !605, !607, !608, !609, !613, !616, !617, !620, !623, !624, !625, !626, !627}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !583, file: !584, line: 51, baseType: !45, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !583, file: !584, line: 54, baseType: !47, size: 64, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !583, file: !584, line: 55, baseType: !47, size: 64, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !583, file: !584, line: 56, baseType: !47, size: 64, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !583, file: !584, line: 57, baseType: !47, size: 64, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !583, file: !584, line: 58, baseType: !47, size: 64, offset: 320)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !583, file: !584, line: 59, baseType: !47, size: 64, offset: 384)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !583, file: !584, line: 60, baseType: !47, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !583, file: !584, line: 61, baseType: !47, size: 64, offset: 512)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !583, file: !584, line: 64, baseType: !47, size: 64, offset: 576)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !583, file: !584, line: 65, baseType: !47, size: 64, offset: 640)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !583, file: !584, line: 66, baseType: !47, size: 64, offset: 704)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !583, file: !584, line: 68, baseType: !599, size: 64, offset: 768)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !584, line: 36, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !583, file: !584, line: 70, baseType: !602, size: 64, offset: 832)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !583, file: !584, line: 72, baseType: !45, size: 32, offset: 896)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !583, file: !584, line: 73, baseType: !45, size: 32, offset: 928)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !583, file: !584, line: 74, baseType: !606, size: 64, offset: 960)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !52, line: 152, baseType: !53)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !583, file: !584, line: 77, baseType: !169, size: 16, offset: 1024)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !583, file: !584, line: 78, baseType: !44, size: 8, offset: 1040)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !583, file: !584, line: 79, baseType: !610, size: 8, offset: 1048)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 8, elements: !611)
!611 = !{!612}
!612 = !DISubrange(count: 1)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !583, file: !584, line: 81, baseType: !614, size: 64, offset: 1088)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !584, line: 43, baseType: null)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !583, file: !584, line: 89, baseType: !162, size: 64, offset: 1152)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !583, file: !584, line: 91, baseType: !618, size: 64, offset: 1216)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !584, line: 37, flags: DIFlagFwdDecl)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !583, file: !584, line: 92, baseType: !621, size: 64, offset: 1280)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !584, line: 38, flags: DIFlagFwdDecl)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !583, file: !584, line: 93, baseType: !602, size: 64, offset: 1344)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !583, file: !584, line: 94, baseType: !46, size: 64, offset: 1408)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !583, file: !584, line: 95, baseType: !196, size: 64, offset: 1472)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !583, file: !584, line: 96, baseType: !45, size: 32, offset: 1536)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !583, file: !584, line: 98, baseType: !628, size: 160, offset: 1568)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 160, elements: !629)
!629 = !{!630}
!630 = !DISubrange(count: 20)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "vm_fd", scope: !445, file: !3, line: 416, baseType: !45, size: 32, offset: 5312)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next_page", scope: !445, file: !3, line: 417, baseType: !160, size: 64, offset: 5376)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "vm_near_pages", scope: !445, file: !3, line: 418, baseType: !160, size: 64, offset: 5440)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "vm_bitmap", scope: !445, file: !3, line: 419, baseType: !167, size: 64, offset: 5504)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "unixtime", scope: !445, file: !3, line: 420, baseType: !49, size: 64, offset: 5568)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "io_newjobs", scope: !445, file: !3, line: 425, baseType: !58, size: 64, offset: 5632)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "io_processing", scope: !445, file: !3, line: 426, baseType: !58, size: 64, offset: 5696)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "io_processed", scope: !445, file: !3, line: 427, baseType: !58, size: 64, offset: 5760)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "io_ready_clients", scope: !445, file: !3, line: 428, baseType: !58, size: 64, offset: 5824)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "io_mutex", scope: !445, file: !3, line: 429, baseType: !641, size: 320, offset: 5888)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !57, line: 72, baseType: !642)
!642 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !57, line: 67, size: 320, elements: !643)
!643 = !{!644, !663, !667}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !642, file: !57, line: 69, baseType: !645, size: 320)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !646, line: 22, size: 320, elements: !647)
!646 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "3a896f588055d599ccb9e3fe6eaee3e3")
!647 = !{!648, !649, !650, !651, !652, !653, !654, !655}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !645, file: !646, line: 24, baseType: !45, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !645, file: !646, line: 25, baseType: !7, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !645, file: !646, line: 26, baseType: !45, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !645, file: !646, line: 28, baseType: !7, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !645, file: !646, line: 32, baseType: !45, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !645, file: !646, line: 34, baseType: !142, size: 16, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !645, file: !646, line: 35, baseType: !142, size: 16, offset: 176)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !645, file: !646, line: 36, baseType: !656, size: 128, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !657, line: 53, baseType: !658)
!657 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "4b8899127613e00869e96fcefd314d61")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !657, line: 49, size: 128, elements: !659)
!659 = !{!660, !662}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !658, file: !657, line: 51, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !658, file: !657, line: 52, baseType: !661, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !642, file: !57, line: 70, baseType: !664, size: 320)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 320, elements: !665)
!665 = !{!666}
!666 = !DISubrange(count: 40)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !642, file: !57, line: 71, baseType: !53, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "obj_freelist_mutex", scope: !445, file: !3, line: 430, baseType: !641, size: 320, offset: 6208)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "io_swapfile_mutex", scope: !445, file: !3, line: 431, baseType: !641, size: 320, offset: 6528)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "io_threads_attr", scope: !445, file: !3, line: 432, baseType: !671, size: 448, offset: 6848)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_attr_t", file: !57, line: 62, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pthread_attr_t", file: !57, line: 56, size: 448, elements: !673)
!673 = !{!674, !678}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !672, file: !57, line: 58, baseType: !675, size: 448)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 448, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 56)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !672, file: !57, line: 59, baseType: !53, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "io_active_threads", scope: !445, file: !3, line: 433, baseType: !45, size: 32, offset: 7296)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vm_max_threads", scope: !445, file: !3, line: 434, baseType: !45, size: 32, offset: 7328)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "io_ready_pipe_read", scope: !445, file: !3, line: 439, baseType: !45, size: 32, offset: 7360)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "io_ready_pipe_write", scope: !445, file: !3, line: 440, baseType: !45, size: 32, offset: 7392)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "vm_stats_used_pages", scope: !445, file: !3, line: 442, baseType: !170, size: 64, offset: 7424)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "vm_stats_swapped_objects", scope: !445, file: !3, line: 443, baseType: !170, size: 64, offset: 7488)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "vm_stats_swapouts", scope: !445, file: !3, line: 444, baseType: !170, size: 64, offset: 7552)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "vm_stats_swapins", scope: !445, file: !3, line: 445, baseType: !170, size: 64, offset: 7616)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !445, file: !3, line: 447, baseType: !86, size: 64, offset: 7680)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !445, file: !3, line: 448, baseType: !58, size: 64, offset: 7744)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "devnull", scope: !445, file: !3, line: 450, baseType: !580, size: 64, offset: 7808)
!690 = !{i32 7, !"Dwarf Version", i32 5}
!691 = !{i32 2, !"Debug Info Version", i32 3}
!692 = !{i32 1, !"wchar_size", i32 4}
!693 = !{i32 7, !"uwtable", i32 1}
!694 = !{!"clang version 14.0.0"}
!695 = distinct !DISubprogram(name: "backgroundSaveDoneHandler", scope: !3, file: !3, line: 1317, type: !202, scopeLine: 1317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !696)
!696 = !{!697, !698, !699}
!697 = !DILocalVariable(name: "statloc", arg: 1, scope: !695, file: !3, line: 1317, type: !45)
!698 = !DILocalVariable(name: "exitcode", scope: !695, file: !3, line: 1318, type: !45)
!699 = !DILocalVariable(name: "bysignal", scope: !695, file: !3, line: 1319, type: !45)
!700 = !DILocation(line: 0, scope: !695)
!701 = !DILocation(line: 1318, column: 20, scope: !695)
!702 = !DILocation(line: 1319, column: 20, scope: !695)
!703 = !DILocation(line: 1321, column: 19, scope: !704)
!704 = distinct !DILexicalBlock(scope: !695, file: !3, line: 1321, column: 9)
!705 = !DILocation(line: 1322, column: 9, scope: !706)
!706 = distinct !DILexicalBlock(scope: !704, file: !3, line: 1321, column: 37)
!707 = !DILocation(line: 1324, column: 31, scope: !706)
!708 = !{!709, !715, i64 24}
!709 = !{!"redisServer", !710, i64 0, !713, i64 8, !713, i64 12, !714, i64 16, !715, i64 24, !715, i64 32, !714, i64 40, !714, i64 48, !714, i64 56, !711, i64 64, !714, i64 320, !713, i64 328, !714, i64 336, !710, i64 344, !710, i64 352, !715, i64 360, !715, i64 368, !715, i64 376, !713, i64 384, !713, i64 388, !713, i64 392, !713, i64 396, !713, i64 400, !713, i64 404, !713, i64 408, !713, i64 412, !710, i64 416, !713, i64 424, !713, i64 428, !714, i64 432, !713, i64 440, !713, i64 444, !714, i64 448, !714, i64 456, !714, i64 464, !713, i64 472, !714, i64 480, !714, i64 488, !714, i64 496, !714, i64 504, !714, i64 512, !713, i64 520, !713, i64 524, !713, i64 528, !714, i64 536, !714, i64 544, !713, i64 552, !714, i64 560, !713, i64 568, !713, i64 572, !715, i64 576, !713, i64 584, !713, i64 588, !713, i64 592, !713, i64 596, !713, i64 600, !713, i64 604, !714, i64 608, !710, i64 616, !710, i64 624, !715, i64 632, !710, i64 640, !710, i64 648, !714, i64 656, !713, i64 664, !710, i64 672, !710, i64 680, !714, i64 688, !710, i64 696, !714, i64 704, !714, i64 712, !714, i64 720, !714, i64 728, !711, i64 736, !711, i64 776, !711, i64 816, !711, i64 856, !713, i64 912, !713, i64 916, !713, i64 920, !713, i64 924, !715, i64 928, !715, i64 936, !715, i64 944, !715, i64 952, !714, i64 960, !714, i64 968, !714, i64 976}
!710 = !{!"long", !711, i64 0}
!711 = !{!"omnipotent char", !712, i64 0}
!712 = !{!"Simple C/C++ TBAA"}
!713 = !{!"int", !711, i64 0}
!714 = !{!"any pointer", !711, i64 0}
!715 = !{!"long long", !711, i64 0}
!716 = !DILocation(line: 1324, column: 46, scope: !706)
!717 = !{!709, !715, i64 32}
!718 = !DILocation(line: 1324, column: 37, scope: !706)
!719 = !DILocation(line: 1324, column: 22, scope: !706)
!720 = !DILocation(line: 1325, column: 27, scope: !706)
!721 = !DILocation(line: 1325, column: 25, scope: !706)
!722 = !{!709, !710, i64 344}
!723 = !DILocation(line: 1326, column: 5, scope: !706)
!724 = !DILocation(line: 1326, column: 26, scope: !725)
!725 = distinct !DILexicalBlock(scope: !704, file: !3, line: 1326, column: 16)
!726 = !DILocation(line: 1327, column: 9, scope: !727)
!727 = distinct !DILexicalBlock(scope: !725, file: !3, line: 1326, column: 44)
!728 = !DILocation(line: 1328, column: 5, scope: !727)
!729 = !DILocation(line: 1329, column: 9, scope: !730)
!730 = distinct !DILexicalBlock(scope: !725, file: !3, line: 1328, column: 12)
!731 = !DILocation(line: 1331, column: 34, scope: !730)
!732 = !{!709, !713, i64 440}
!733 = !DILocation(line: 1331, column: 9, scope: !730)
!734 = !DILocation(line: 1333, column: 27, scope: !695)
!735 = !DILocation(line: 1336, column: 31, scope: !695)
!736 = !DILocation(line: 1336, column: 5, scope: !695)
!737 = !DILocation(line: 1337, column: 1, scope: !695)
!738 = distinct !DISubprogram(name: "redisLog", scope: !3, file: !3, line: 1059, type: !739, scopeLine: 1059, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !743)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !45, !741, null}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!743 = !{!744, !745, !746, !759, !760, !761, !765}
!744 = !DILocalVariable(name: "level", arg: 1, scope: !738, file: !3, line: 1059, type: !45)
!745 = !DILocalVariable(name: "fmt", arg: 2, scope: !738, file: !3, line: 1059, type: !741)
!746 = !DILocalVariable(name: "ap", scope: !738, file: !3, line: 1060, type: !747)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !161, line: 52, baseType: !748)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !749, line: 32, baseType: !750)
!749 = !DIFile(filename: "VeriFrame/LLVMUtils/llvm/lib/clang/14.0.0/include/stdarg.h", directory: "/home/xuheng", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !751, baseType: !752)
!751 = !DIFile(filename: "redis.c", directory: "/home/xuheng/blackbox/llvm-test/redis")
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 192, elements: !611)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !754)
!754 = !{!755, !756, !757, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !753, file: !751, line: 1060, baseType: !7, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !753, file: !751, line: 1060, baseType: !7, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !753, file: !751, line: 1060, baseType: !46, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !753, file: !751, line: 1060, baseType: !46, size: 64, offset: 128)
!759 = !DILocalVariable(name: "fp", scope: !738, file: !3, line: 1061, type: !580)
!760 = !DILocalVariable(name: "c", scope: !738, file: !3, line: 1062, type: !47)
!761 = !DILocalVariable(name: "buf", scope: !738, file: !3, line: 1063, type: !762)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 512, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 64)
!765 = !DILocalVariable(name: "now", scope: !738, file: !3, line: 1064, type: !49)
!766 = !DILocation(line: 0, scope: !738)
!767 = !DILocation(line: 1060, column: 5, scope: !738)
!768 = !DILocation(line: 1060, column: 13, scope: !738)
!769 = !DILocation(line: 1063, column: 5, scope: !738)
!770 = !DILocation(line: 1063, column: 10, scope: !738)
!771 = !DILocation(line: 1064, column: 5, scope: !738)
!772 = !DILocation(line: 1066, column: 24, scope: !773)
!773 = distinct !DILexicalBlock(scope: !738, file: !3, line: 1066, column: 9)
!774 = !{!709, !713, i64 384}
!775 = !DILocation(line: 1066, column: 15, scope: !773)
!776 = !DILocation(line: 1066, column: 9, scope: !738)
!777 = !DILocation(line: 1068, column: 18, scope: !738)
!778 = !{!709, !714, i64 480}
!779 = !DILocation(line: 1068, column: 26, scope: !738)
!780 = !DILocation(line: 1068, column: 10, scope: !738)
!781 = !DILocation(line: 1068, column: 37, scope: !738)
!782 = !{!714, !714, i64 0}
!783 = !DILocation(line: 1068, column: 46, scope: !738)
!784 = !DILocation(line: 1069, column: 10, scope: !785)
!785 = distinct !DILexicalBlock(scope: !738, file: !3, line: 1069, column: 9)
!786 = !DILocation(line: 1069, column: 9, scope: !738)
!787 = !DILocation(line: 1071, column: 5, scope: !738)
!788 = !DILocation(line: 1072, column: 11, scope: !738)
!789 = !DILocation(line: 1072, column: 9, scope: !738)
!790 = !{!710, !710, i64 0}
!791 = !DILocation(line: 1073, column: 38, scope: !738)
!792 = !DILocation(line: 1073, column: 5, scope: !738)
!793 = !DILocation(line: 1074, column: 35, scope: !738)
!794 = !DILocation(line: 1074, column: 48, scope: !738)
!795 = !{!711, !711, i64 0}
!796 = !DILocation(line: 1074, column: 5, scope: !738)
!797 = !DILocation(line: 1075, column: 5, scope: !738)
!798 = !DILocation(line: 1076, column: 5, scope: !738)
!799 = !DILocation(line: 1077, column: 5, scope: !738)
!800 = !DILocation(line: 1078, column: 5, scope: !738)
!801 = !DILocation(line: 1080, column: 16, scope: !802)
!802 = distinct !DILexicalBlock(scope: !738, file: !3, line: 1080, column: 9)
!803 = !DILocation(line: 1080, column: 9, scope: !802)
!804 = !DILocation(line: 1080, column: 9, scope: !738)
!805 = !DILocation(line: 1080, column: 25, scope: !802)
!806 = !DILocation(line: 1081, column: 1, scope: !738)
!807 = !DISubprogram(name: "time", scope: !808, file: !808, line: 75, type: !809, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!808 = !DIFile(filename: "/usr/include/time.h", directory: "", checksumkind: CSK_MD5, checksum: "2dc9fb937b28c900f98919b5c35320c2")
!809 = !DISubroutineType(types: !810)
!810 = !{!49, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!812 = !{}
!813 = distinct !DISubprogram(name: "rdbRemoveTempFile", scope: !3, file: !3, line: 3819, type: !814, scopeLine: 3819, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !816)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !539}
!816 = !{!817, !818}
!817 = !DILocalVariable(name: "childpid", arg: 1, scope: !813, file: !3, line: 3819, type: !539)
!818 = !DILocalVariable(name: "tmpfile", scope: !813, file: !3, line: 3820, type: !457)
!819 = !DILocation(line: 0, scope: !813)
!820 = !DILocation(line: 3820, column: 5, scope: !813)
!821 = !DILocation(line: 3820, column: 10, scope: !813)
!822 = !DILocation(line: 3822, column: 5, scope: !813)
!823 = !DILocation(line: 3823, column: 5, scope: !813)
!824 = !DILocation(line: 3824, column: 1, scope: !813)
!825 = distinct !DISubprogram(name: "updateSlavesWaitingBgsave", scope: !3, file: !3, line: 7973, type: !202, scopeLine: 7973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !826)
!826 = !{!827, !828, !829, !830, !836, !838, !875, !880}
!827 = !DILocalVariable(name: "bgsaveerr", arg: 1, scope: !825, file: !3, line: 7973, type: !45)
!828 = !DILocalVariable(name: "ln", scope: !825, file: !3, line: 7974, type: !64)
!829 = !DILocalVariable(name: "startbgsave", scope: !825, file: !3, line: 7975, type: !45)
!830 = !DILocalVariable(name: "li", scope: !825, file: !3, line: 7976, type: !831)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !60, line: 45, baseType: !832)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !60, line: 42, size: 128, elements: !833)
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !832, file: !60, line: 43, baseType: !64, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !832, file: !60, line: 44, baseType: !45, size: 32, offset: 64)
!836 = !DILocalVariable(name: "slave", scope: !837, file: !3, line: 7980, type: !287)
!837 = distinct !DILexicalBlock(scope: !825, file: !3, line: 7979, column: 33)
!838 = !DILocalVariable(name: "buf", scope: !839, file: !3, line: 7986, type: !842)
!839 = distinct !DILexicalBlock(scope: !840, file: !3, line: 7985, column: 68)
!840 = distinct !DILexicalBlock(scope: !841, file: !3, line: 7985, column: 20)
!841 = distinct !DILexicalBlock(scope: !837, file: !3, line: 7982, column: 13)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !843, line: 46, size: 1152, elements: !844)
!843 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "", checksumkind: CSK_MD5, checksum: "f8d5b541c4f89219f8e8ff8c3e2940d9")
!844 = !{!845, !847, !849, !851, !853, !855, !857, !858, !859, !860, !862, !864, !871, !872, !873}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !842, file: !843, line: 48, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !52, line: 145, baseType: !55)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !842, file: !843, line: 53, baseType: !848, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !52, line: 148, baseType: !55)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !842, file: !843, line: 61, baseType: !850, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !52, line: 151, baseType: !55)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !842, file: !843, line: 62, baseType: !852, size: 32, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !52, line: 150, baseType: !7)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !842, file: !843, line: 64, baseType: !854, size: 32, offset: 224)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !52, line: 146, baseType: !7)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !842, file: !843, line: 65, baseType: !856, size: 32, offset: 256)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !52, line: 147, baseType: !7)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !842, file: !843, line: 67, baseType: !45, size: 32, offset: 288)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !842, file: !843, line: 69, baseType: !846, size: 64, offset: 320)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !842, file: !843, line: 74, baseType: !606, size: 64, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !842, file: !843, line: 78, baseType: !861, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !52, line: 174, baseType: !53)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !842, file: !843, line: 80, baseType: !863, size: 64, offset: 512)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !52, line: 179, baseType: !53)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !842, file: !843, line: 91, baseType: !865, size: 128, offset: 576)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !866, line: 10, size: 128, elements: !867)
!866 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "33f28095c70788baa6982a79b13f774b")
!867 = !{!868, !869}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !865, file: !866, line: 12, baseType: !51, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !865, file: !866, line: 16, baseType: !870, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !52, line: 196, baseType: !53)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !842, file: !843, line: 92, baseType: !865, size: 128, offset: 704)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !842, file: !843, line: 93, baseType: !865, size: 128, offset: 832)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !842, file: !843, line: 106, baseType: !874, size: 192, offset: 960)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 192, elements: !257)
!875 = !DILocalVariable(name: "li", scope: !876, file: !3, line: 8011, type: !831)
!876 = distinct !DILexicalBlock(scope: !877, file: !3, line: 8010, column: 63)
!877 = distinct !DILexicalBlock(scope: !878, file: !3, line: 8010, column: 13)
!878 = distinct !DILexicalBlock(scope: !879, file: !3, line: 8009, column: 22)
!879 = distinct !DILexicalBlock(scope: !825, file: !3, line: 8009, column: 9)
!880 = !DILocalVariable(name: "slave", scope: !881, file: !3, line: 8016, type: !287)
!881 = distinct !DILexicalBlock(scope: !876, file: !3, line: 8015, column: 41)
!882 = !DILocation(line: 0, scope: !825)
!883 = !DILocation(line: 7976, column: 5, scope: !825)
!884 = !DILocation(line: 7976, column: 14, scope: !825)
!885 = !DILocation(line: 7978, column: 23, scope: !825)
!886 = !{!709, !714, i64 48}
!887 = !DILocation(line: 7978, column: 5, scope: !825)
!888 = !DILocation(line: 7979, column: 17, scope: !825)
!889 = !DILocation(line: 7979, column: 5, scope: !825)
!890 = !DILocation(line: 7980, column: 34, scope: !837)
!891 = !{!892, !714, i64 16}
!892 = !{!"listNode", !714, i64 0, !714, i64 8, !714, i64 16}
!893 = !DILocation(line: 7980, column: 30, scope: !837)
!894 = !DILocation(line: 0, scope: !837)
!895 = !DILocation(line: 7982, column: 20, scope: !841)
!896 = !{!897, !713, i64 100}
!897 = !{!"redisClient", !713, i64 0, !714, i64 8, !713, i64 16, !714, i64 24, !714, i64 32, !714, i64 40, !713, i64 48, !713, i64 52, !713, i64 56, !713, i64 60, !714, i64 64, !713, i64 72, !710, i64 80, !713, i64 88, !713, i64 92, !713, i64 96, !713, i64 100, !713, i64 104, !710, i64 112, !710, i64 120, !898, i64 128, !714, i64 144, !713, i64 152, !710, i64 160, !714, i64 168, !714, i64 176, !714, i64 184}
!898 = !{!"multiState", !714, i64 0, !713, i64 8}
!899 = !DILocation(line: 7982, column: 13, scope: !837)
!900 = !DILocation(line: 7984, column: 30, scope: !901)
!901 = distinct !DILexicalBlock(scope: !841, file: !3, line: 7982, column: 63)
!902 = !DILocation(line: 7985, column: 9, scope: !901)
!903 = !DILocation(line: 7986, column: 13, scope: !839)
!904 = !DILocation(line: 7986, column: 31, scope: !839)
!905 = !DILocation(line: 7988, column: 17, scope: !839)
!906 = !DILocation(line: 7989, column: 17, scope: !907)
!907 = distinct !DILexicalBlock(scope: !908, file: !3, line: 7988, column: 40)
!908 = distinct !DILexicalBlock(scope: !839, file: !3, line: 7988, column: 17)
!909 = !DILocation(line: 7990, column: 17, scope: !907)
!910 = !DILocation(line: 8007, column: 9, scope: !840)
!911 = !DILocation(line: 7993, column: 48, scope: !912)
!912 = distinct !DILexicalBlock(scope: !839, file: !3, line: 7993, column: 17)
!913 = !{!709, !714, i64 496}
!914 = !DILocation(line: 7993, column: 36, scope: !912)
!915 = !DILocation(line: 7993, column: 25, scope: !912)
!916 = !DILocation(line: 7993, column: 34, scope: !912)
!917 = !{!897, !713, i64 104}
!918 = !DILocation(line: 7993, column: 70, scope: !912)
!919 = !DILocation(line: 7993, column: 76, scope: !912)
!920 = !DILocation(line: 7994, column: 17, scope: !912)
!921 = !DILocation(line: 7994, column: 51, scope: !912)
!922 = !DILocation(line: 7993, column: 17, scope: !839)
!923 = !DILocation(line: 7995, column: 17, scope: !924)
!924 = distinct !DILexicalBlock(scope: !912, file: !3, line: 7994, column: 58)
!925 = !DILocation(line: 7996, column: 101, scope: !924)
!926 = !{!713, !713, i64 0}
!927 = !DILocation(line: 7996, column: 92, scope: !924)
!928 = !DILocation(line: 7996, column: 17, scope: !924)
!929 = !DILocation(line: 7999, column: 20, scope: !839)
!930 = !DILocation(line: 7999, column: 30, scope: !839)
!931 = !{!897, !710, i64 112}
!932 = !DILocation(line: 8000, column: 37, scope: !839)
!933 = !{!934, !710, i64 48}
!934 = !{!"stat", !710, i64 0, !710, i64 8, !710, i64 16, !713, i64 24, !713, i64 28, !713, i64 32, !713, i64 36, !710, i64 40, !710, i64 48, !710, i64 56, !710, i64 64, !935, i64 72, !935, i64 88, !935, i64 104, !711, i64 120}
!935 = !{!"timespec", !710, i64 0, !710, i64 8}
!936 = !DILocation(line: 8000, column: 20, scope: !839)
!937 = !DILocation(line: 8000, column: 31, scope: !839)
!938 = !{!897, !710, i64 120}
!939 = !DILocation(line: 8001, column: 30, scope: !839)
!940 = !DILocation(line: 8002, column: 38, scope: !839)
!941 = !{!709, !714, i64 320}
!942 = !DILocation(line: 8002, column: 48, scope: !839)
!943 = !{!897, !713, i64 0}
!944 = !DILocation(line: 8002, column: 13, scope: !839)
!945 = !DILocation(line: 8003, column: 42, scope: !946)
!946 = distinct !DILexicalBlock(scope: !839, file: !3, line: 8003, column: 17)
!947 = !DILocation(line: 8003, column: 53, scope: !946)
!948 = !DILocation(line: 8003, column: 17, scope: !946)
!949 = !DILocation(line: 8003, column: 94, scope: !946)
!950 = !DILocation(line: 8003, column: 17, scope: !839)
!951 = !DILocation(line: 8004, column: 17, scope: !952)
!952 = distinct !DILexicalBlock(scope: !946, file: !3, line: 8003, column: 105)
!953 = !DILocation(line: 8009, column: 9, scope: !879)
!954 = !DILocation(line: 8009, column: 9, scope: !825)
!955 = !DILocation(line: 8010, column: 38, scope: !877)
!956 = !DILocation(line: 8010, column: 13, scope: !877)
!957 = !DILocation(line: 8010, column: 50, scope: !877)
!958 = !DILocation(line: 8010, column: 13, scope: !878)
!959 = !DILocation(line: 8011, column: 13, scope: !876)
!960 = !DILocation(line: 8011, column: 22, scope: !876)
!961 = !DILocation(line: 8013, column: 31, scope: !876)
!962 = !DILocation(line: 8013, column: 13, scope: !876)
!963 = !DILocation(line: 8014, column: 13, scope: !876)
!964 = !DILocation(line: 8015, column: 25, scope: !876)
!965 = !DILocation(line: 8015, column: 13, scope: !876)
!966 = !DILocation(line: 8016, column: 42, scope: !881)
!967 = !DILocation(line: 0, scope: !881)
!968 = !DILocation(line: 8018, column: 28, scope: !969)
!969 = distinct !DILexicalBlock(scope: !881, file: !3, line: 8018, column: 21)
!970 = !DILocation(line: 8018, column: 38, scope: !969)
!971 = !DILocation(line: 8018, column: 21, scope: !881)
!972 = !DILocation(line: 8019, column: 21, scope: !969)
!973 = distinct !{!973, !965, !974}
!974 = !DILocation(line: 8020, column: 13, scope: !876)
!975 = !DILocation(line: 8021, column: 9, scope: !877)
!976 = !DILocation(line: 8021, column: 9, scope: !876)
!977 = !DILocation(line: 8023, column: 1, scope: !825)
!978 = distinct !DISubprogram(name: "backgroundRewriteDoneHandler", scope: !3, file: !3, line: 1341, type: !202, scopeLine: 1341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !979)
!979 = !{!980, !981, !982, !983, !986, !987}
!980 = !DILocalVariable(name: "statloc", arg: 1, scope: !978, file: !3, line: 1341, type: !45)
!981 = !DILocalVariable(name: "exitcode", scope: !978, file: !3, line: 1342, type: !45)
!982 = !DILocalVariable(name: "bysignal", scope: !978, file: !3, line: 1343, type: !45)
!983 = !DILocalVariable(name: "fd", scope: !984, file: !3, line: 1346, type: !45)
!984 = distinct !DILexicalBlock(scope: !985, file: !3, line: 1345, column: 37)
!985 = distinct !DILexicalBlock(scope: !978, file: !3, line: 1345, column: 9)
!986 = !DILocalVariable(name: "tmpfile", scope: !984, file: !3, line: 1347, type: !457)
!987 = !DILabel(scope: !978, name: "cleanup", file: !3, line: 1394)
!988 = !DILocation(line: 0, scope: !978)
!989 = !DILocation(line: 1342, column: 20, scope: !978)
!990 = !DILocation(line: 1343, column: 20, scope: !978)
!991 = !DILocation(line: 1345, column: 19, scope: !985)
!992 = !DILocation(line: 1347, column: 9, scope: !984)
!993 = !DILocation(line: 1347, column: 14, scope: !984)
!994 = !DILocation(line: 1349, column: 9, scope: !984)
!995 = !DILocation(line: 1352, column: 72, scope: !984)
!996 = !{!709, !713, i64 444}
!997 = !DILocation(line: 1352, column: 9, scope: !984)
!998 = !DILocation(line: 1353, column: 14, scope: !984)
!999 = !DILocation(line: 0, scope: !984)
!1000 = !DILocation(line: 1354, column: 16, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !984, file: !3, line: 1354, column: 13)
!1002 = !DILocation(line: 1354, column: 13, scope: !984)
!1003 = !DILocation(line: 1355, column: 118, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !1001, file: !3, line: 1354, column: 23)
!1005 = !DILocation(line: 1355, column: 109, scope: !1004)
!1006 = !DILocation(line: 1355, column: 13, scope: !1004)
!1007 = !DILocation(line: 1356, column: 13, scope: !1004)
!1008 = !DILocation(line: 1359, column: 29, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !984, file: !3, line: 1359, column: 13)
!1010 = !{!709, !714, i64 448}
!1011 = !DILocation(line: 1359, column: 42, scope: !1009)
!1012 = !DILocation(line: 1359, column: 13, scope: !1009)
!1013 = !DILocation(line: 1360, column: 40, scope: !1009)
!1014 = !DILocation(line: 1360, column: 26, scope: !1009)
!1015 = !DILocation(line: 1360, column: 17, scope: !1009)
!1016 = !DILocation(line: 1359, column: 71, scope: !1009)
!1017 = !DILocation(line: 1359, column: 13, scope: !984)
!1018 = !DILocation(line: 1361, column: 152, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !1009, file: !3, line: 1360, column: 55)
!1020 = !DILocation(line: 1361, column: 143, scope: !1019)
!1021 = !DILocation(line: 1361, column: 13, scope: !1019)
!1022 = !DILocation(line: 1362, column: 13, scope: !1019)
!1023 = !DILocation(line: 1363, column: 13, scope: !1019)
!1024 = !DILocation(line: 1365, column: 121, scope: !984)
!1025 = !DILocation(line: 1365, column: 107, scope: !984)
!1026 = !DILocation(line: 1365, column: 9, scope: !984)
!1027 = !DILocation(line: 1368, column: 35, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !984, file: !3, line: 1368, column: 13)
!1029 = !{!709, !714, i64 504}
!1030 = !DILocation(line: 1368, column: 13, scope: !1028)
!1031 = !DILocation(line: 1368, column: 51, scope: !1028)
!1032 = !DILocation(line: 1368, column: 13, scope: !984)
!1033 = !DILocation(line: 1369, column: 111, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 1368, column: 58)
!1035 = !DILocation(line: 1369, column: 102, scope: !1034)
!1036 = !DILocation(line: 1369, column: 13, scope: !1034)
!1037 = !DILocation(line: 1370, column: 13, scope: !1034)
!1038 = !DILocation(line: 1371, column: 13, scope: !1034)
!1039 = !DILocation(line: 1374, column: 9, scope: !984)
!1040 = !DILocation(line: 1375, column: 20, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !984, file: !3, line: 1375, column: 13)
!1042 = !{!709, !713, i64 424}
!1043 = !DILocation(line: 1375, column: 29, scope: !1041)
!1044 = !DILocation(line: 1375, column: 13, scope: !984)
!1045 = !DILocation(line: 1377, column: 13, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1041, file: !3, line: 1375, column: 36)
!1047 = !DILocation(line: 1378, column: 29, scope: !1046)
!1048 = !DILocation(line: 1379, column: 13, scope: !1046)
!1049 = !DILocation(line: 1380, column: 32, scope: !1046)
!1050 = !{!709, !713, i64 428}
!1051 = !DILocation(line: 1381, column: 13, scope: !1046)
!1052 = !DILocation(line: 1382, column: 9, scope: !1046)
!1053 = !DILocation(line: 1385, column: 13, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1041, file: !3, line: 1382, column: 16)
!1055 = !DILocation(line: 1387, column: 5, scope: !985)
!1056 = !DILocation(line: 1387, column: 26, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !985, file: !3, line: 1387, column: 16)
!1058 = !DILocation(line: 1388, column: 9, scope: !1059)
!1059 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 1387, column: 44)
!1060 = !DILocation(line: 1389, column: 5, scope: !1059)
!1061 = !DILocation(line: 1390, column: 9, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 1389, column: 12)
!1063 = !DILocation(line: 1394, column: 1, scope: !978)
!1064 = !DILocation(line: 1395, column: 20, scope: !978)
!1065 = !DILocation(line: 1395, column: 5, scope: !978)
!1066 = !DILocation(line: 1396, column: 27, scope: !978)
!1067 = !DILocation(line: 1396, column: 25, scope: !978)
!1068 = !DILocation(line: 1397, column: 30, scope: !978)
!1069 = !DILocation(line: 1397, column: 5, scope: !978)
!1070 = !DILocation(line: 1398, column: 30, scope: !978)
!1071 = !DILocation(line: 1399, column: 1, scope: !978)
!1072 = !DISubprogram(name: "snprintf", scope: !161, file: !161, line: 354, type: !1073, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!45, !1075, !196, !1076, null}
!1075 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !47)
!1076 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !741)
!1077 = !DISubprogram(name: "open", linkageName: "open64", scope: !1078, file: !1078, line: 171, type: !1079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1078 = !DIFile(filename: "/usr/include/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "270596b098606fab5166d0114edf8288")
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!45, !741, !45, null}
!1081 = !DISubprogram(name: "strerror", scope: !1082, file: !1082, line: 397, type: !1083, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1082 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "61f60112cf5c0a45c54ea1f595add24c")
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!47, !45}
!1085 = !DISubprogram(name: "write", scope: !1086, file: !1086, line: 366, type: !1087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1086 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "29bea3f2d65ec3bb874f389bfdfa2266")
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !45, !100, !196}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !161, line: 77, baseType: !1090)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !52, line: 193, baseType: !53)
!1091 = !DISubprogram(name: "sdslen", scope: !166, file: !166, line: 47, type: !1092, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!196, !1094}
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!1095 = !DISubprogram(name: "close", scope: !1086, file: !1086, line: 353, type: !1096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!45, !45}
!1098 = !DISubprogram(name: "rename", scope: !161, file: !161, line: 148, type: !1099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!45, !741, !741}
!1101 = !DISubprogram(name: "fsync", scope: !1086, file: !1086, line: 954, type: !1096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1102 = !DISubprogram(name: "sdsfree", scope: !166, file: !166, line: 49, type: !1103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !165}
!1105 = !DISubprogram(name: "sdsempty", scope: !166, file: !166, line: 46, type: !1106, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!165}
!1108 = distinct !DISubprogram(name: "aofRemoveTempFile", scope: !3, file: !3, line: 8782, type: !814, scopeLine: 8782, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1109)
!1109 = !{!1110, !1111}
!1110 = !DILocalVariable(name: "childpid", arg: 1, scope: !1108, file: !3, line: 8782, type: !539)
!1111 = !DILocalVariable(name: "tmpfile", scope: !1108, file: !3, line: 8783, type: !457)
!1112 = !DILocation(line: 0, scope: !1108)
!1113 = !DILocation(line: 8783, column: 5, scope: !1108)
!1114 = !DILocation(line: 8783, column: 10, scope: !1108)
!1115 = !DILocation(line: 8785, column: 5, scope: !1108)
!1116 = !DILocation(line: 8786, column: 5, scope: !1108)
!1117 = !DILocation(line: 8787, column: 1, scope: !1108)
!1118 = distinct !DISubprogram(name: "zslDeleteNode", scope: !3, file: !3, line: 5560, type: !1119, scopeLine: 5560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1124)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !177, !1121, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplistNode", file: !3, line: 501, baseType: !183)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1124 = !{!1125, !1126, !1127, !1128}
!1125 = !DILocalVariable(name: "zsl", arg: 1, scope: !1118, file: !3, line: 5560, type: !177)
!1126 = !DILocalVariable(name: "x", arg: 2, scope: !1118, file: !3, line: 5560, type: !1121)
!1127 = !DILocalVariable(name: "update", arg: 3, scope: !1118, file: !3, line: 5560, type: !1123)
!1128 = !DILocalVariable(name: "i", scope: !1118, file: !3, line: 5561, type: !45)
!1129 = !DILocation(line: 0, scope: !1118)
!1130 = !DILocation(line: 5562, column: 26, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 5562, column: 5)
!1132 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 5562, column: 5)
!1133 = !{!1134, !713, i64 24}
!1134 = !{!"zskiplist", !714, i64 0, !714, i64 8, !710, i64 16, !713, i64 24}
!1135 = !DILocation(line: 5562, column: 19, scope: !1131)
!1136 = !DILocation(line: 5562, column: 5, scope: !1132)
!1137 = !DILocation(line: 5563, column: 13, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1139, file: !3, line: 5563, column: 13)
!1139 = distinct !DILexicalBlock(scope: !1131, file: !3, line: 5562, column: 38)
!1140 = !DILocation(line: 5563, column: 24, scope: !1138)
!1141 = !{!1142, !714, i64 0}
!1142 = !{!"zskiplistNode", !714, i64 0, !714, i64 8, !714, i64 16, !1143, i64 24, !714, i64 32}
!1143 = !{!"double", !711, i64 0}
!1144 = !DILocation(line: 5563, column: 35, scope: !1138)
!1145 = !DILocation(line: 5563, column: 13, scope: !1139)
!1146 = !DILocation(line: 5571, column: 24, scope: !1147)
!1147 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 5568, column: 16)
!1148 = !{!1142, !714, i64 16}
!1149 = !DILocation(line: 5571, column: 13, scope: !1147)
!1150 = !DILocation(line: 5571, column: 34, scope: !1147)
!1151 = !DILocation(line: 5567, column: 40, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 5563, column: 41)
!1153 = !DILocation(line: 5567, column: 37, scope: !1152)
!1154 = !DILocation(line: 5567, column: 35, scope: !1152)
!1155 = !DILocation(line: 5568, column: 9, scope: !1152)
!1156 = !DILocation(line: 5565, column: 44, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !3, line: 5564, column: 24)
!1158 = distinct !DILexicalBlock(scope: !1152, file: !3, line: 5564, column: 17)
!1159 = !DILocation(line: 5565, column: 41, scope: !1157)
!1160 = !DILocation(line: 5565, column: 54, scope: !1157)
!1161 = !DILocation(line: 5565, column: 28, scope: !1157)
!1162 = !DILocation(line: 5565, column: 17, scope: !1157)
!1163 = !DILocation(line: 5565, column: 38, scope: !1157)
!1164 = !DILocation(line: 5571, column: 30, scope: !1147)
!1165 = !DILocation(line: 5562, column: 34, scope: !1131)
!1166 = distinct !{!1166, !1136, !1167, !1168}
!1167 = !DILocation(line: 5573, column: 5, scope: !1132)
!1168 = !{!"llvm.loop.peeled.count", i32 1}
!1169 = !DILocation(line: 5574, column: 12, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 5574, column: 9)
!1171 = !DILocation(line: 5574, column: 9, scope: !1170)
!1172 = !DILocation(line: 0, scope: !1170)
!1173 = !{!1142, !714, i64 8}
!1174 = !DILocation(line: 5574, column: 9, scope: !1118)
!1175 = !DILocation(line: 5579, column: 22, scope: !1118)
!1176 = !DILocation(line: 5579, column: 26, scope: !1118)
!1177 = !DILocation(line: 5579, column: 34, scope: !1118)
!1178 = !{!1134, !714, i64 0}
!1179 = !DILocation(line: 5579, column: 60, scope: !1118)
!1180 = !DILocation(line: 5579, column: 29, scope: !1118)
!1181 = !DILocation(line: 5579, column: 64, scope: !1118)
!1182 = !DILocation(line: 5579, column: 5, scope: !1118)
!1183 = !DILocation(line: 5580, column: 19, scope: !1118)
!1184 = distinct !{!1184, !1182, !1183}
!1185 = !DILocation(line: 5581, column: 10, scope: !1118)
!1186 = !DILocation(line: 5581, column: 16, scope: !1118)
!1187 = !{!1134, !710, i64 16}
!1188 = !DILocation(line: 5582, column: 1, scope: !1118)
!1189 = distinct !DISubprogram(name: "zslGetElementByRank", scope: !3, file: !3, line: 5714, type: !1190, scopeLine: 5714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1192)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!1121, !177, !55}
!1192 = !{!1193, !1194, !1195, !1196, !1197}
!1193 = !DILocalVariable(name: "zsl", arg: 1, scope: !1189, file: !3, line: 5714, type: !177)
!1194 = !DILocalVariable(name: "rank", arg: 2, scope: !1189, file: !3, line: 5714, type: !55)
!1195 = !DILocalVariable(name: "x", scope: !1189, file: !3, line: 5715, type: !1121)
!1196 = !DILocalVariable(name: "traversed", scope: !1189, file: !3, line: 5716, type: !55)
!1197 = !DILocalVariable(name: "i", scope: !1189, file: !3, line: 5717, type: !45)
!1198 = !DILocation(line: 0, scope: !1189)
!1199 = !DILocation(line: 5719, column: 14, scope: !1189)
!1200 = !DILocation(line: 5720, column: 19, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 5720, column: 5)
!1202 = !DILocation(line: 5720, column: 10, scope: !1201)
!1203 = !DILocation(line: 5719, column: 7, scope: !1189)
!1204 = !DILocation(line: 5716, column: 19, scope: !1189)
!1205 = !DILocation(line: 0, scope: !1201)
!1206 = !DILocation(line: 5720, column: 30, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1201, file: !3, line: 5720, column: 5)
!1208 = !DILocation(line: 5720, column: 5, scope: !1201)
!1209 = !DILocation(line: 5721, column: 19, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1207, file: !3, line: 5720, column: 41)
!1211 = !DILocation(line: 5721, column: 16, scope: !1210)
!1212 = !DILocation(line: 5721, column: 30, scope: !1210)
!1213 = !DILocation(line: 5721, column: 47, scope: !1210)
!1214 = !DILocation(line: 5721, column: 56, scope: !1210)
!1215 = !DILocation(line: 5721, column: 53, scope: !1210)
!1216 = !DILocation(line: 5721, column: 46, scope: !1210)
!1217 = !DILocation(line: 5721, column: 44, scope: !1210)
!1218 = !DILocation(line: 5721, column: 72, scope: !1210)
!1219 = !DILocation(line: 5721, column: 9, scope: !1210)
!1220 = !DILocation(line: 5723, column: 26, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 5722, column: 9)
!1222 = !DILocation(line: 5723, column: 23, scope: !1221)
!1223 = distinct !{!1223, !1219, !1224}
!1224 = !DILocation(line: 5725, column: 9, scope: !1210)
!1225 = !DILocation(line: 5726, column: 23, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1210, file: !3, line: 5726, column: 13)
!1227 = !DILocation(line: 5726, column: 13, scope: !1210)
!1228 = distinct !{!1228, !1208, !1229}
!1229 = !DILocation(line: 5729, column: 5, scope: !1201)
!1230 = !DILocation(line: 5731, column: 1, scope: !1189)
!1231 = distinct !DISubprogram(name: "loadAppendOnlyFile", scope: !3, file: !3, line: 8378, type: !1232, scopeLine: 8378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1234)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!45, !47}
!1234 = !{!1235, !1236, !1238, !1239, !1240, !1241, !1243, !1244, !1245, !1246, !1250, !1251, !1252, !1253, !1254}
!1235 = !DILocalVariable(name: "filename", arg: 1, scope: !1231, file: !3, line: 8378, type: !47)
!1236 = !DILocalVariable(name: "fakeClient", scope: !1231, file: !3, line: 8379, type: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!1238 = !DILocalVariable(name: "fp", scope: !1231, file: !3, line: 8380, type: !580)
!1239 = !DILocalVariable(name: "sb", scope: !1231, file: !3, line: 8381, type: !842)
!1240 = !DILocalVariable(name: "appendonly", scope: !1231, file: !3, line: 8382, type: !45)
!1241 = !DILocalVariable(name: "argc", scope: !1242, file: !3, line: 8398, type: !45)
!1242 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 8397, column: 14)
!1243 = !DILocalVariable(name: "j", scope: !1242, file: !3, line: 8398, type: !45)
!1244 = !DILocalVariable(name: "len", scope: !1242, file: !3, line: 8399, type: !55)
!1245 = !DILocalVariable(name: "argv", scope: !1242, file: !3, line: 8400, type: !305)
!1246 = !DILocalVariable(name: "buf", scope: !1242, file: !3, line: 8401, type: !1247)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 1024, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 128)
!1250 = !DILocalVariable(name: "argsds", scope: !1242, file: !3, line: 8402, type: !165)
!1251 = !DILocalVariable(name: "cmd", scope: !1242, file: !3, line: 8403, type: !333)
!1252 = !DILocalVariable(name: "force_swapout", scope: !1242, file: !3, line: 8404, type: !45)
!1253 = !DILabel(scope: !1231, name: "readerr", file: !3, line: 8465)
!1254 = !DILabel(scope: !1231, name: "fmterr", file: !3, line: 8472)
!1255 = !DILocation(line: 0, scope: !1231)
!1256 = !DILocation(line: 8380, column: 16, scope: !1231)
!1257 = !DILocation(line: 8381, column: 5, scope: !1231)
!1258 = !DILocation(line: 8381, column: 23, scope: !1231)
!1259 = !DILocation(line: 8382, column: 29, scope: !1231)
!1260 = !{!709, !713, i64 404}
!1261 = !DILocation(line: 8384, column: 21, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 8384, column: 9)
!1263 = !DILocation(line: 8384, column: 9, scope: !1262)
!1264 = !DILocation(line: 8384, column: 37, scope: !1262)
!1265 = !DILocation(line: 8384, column: 43, scope: !1262)
!1266 = !DILocation(line: 8387, column: 12, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 8387, column: 9)
!1268 = !DILocation(line: 8387, column: 9, scope: !1231)
!1269 = !DILocation(line: 8388, column: 103, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1267, file: !3, line: 8387, column: 21)
!1271 = !DILocation(line: 8388, column: 94, scope: !1270)
!1272 = !DILocation(line: 8388, column: 9, scope: !1270)
!1273 = !DILocation(line: 8389, column: 9, scope: !1270)
!1274 = !DILocation(line: 8394, column: 23, scope: !1231)
!1275 = !DILocation(line: 8396, column: 18, scope: !1231)
!1276 = !DILocation(line: 8401, column: 9, scope: !1242)
!1277 = !DILocation(line: 8401, column: 14, scope: !1242)
!1278 = !DILocation(line: 8406, column: 13, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8406, column: 13)
!1280 = !DILocation(line: 8406, column: 39, scope: !1279)
!1281 = !DILocation(line: 8406, column: 13, scope: !1242)
!1282 = !DILocation(line: 8407, column: 17, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1284, file: !3, line: 8407, column: 17)
!1284 = distinct !DILexicalBlock(scope: !1279, file: !3, line: 8406, column: 48)
!1285 = !DILocation(line: 0, scope: !1283)
!1286 = !DILocation(line: 8412, column: 13, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8412, column: 13)
!1288 = !DILocation(line: 8412, column: 20, scope: !1287)
!1289 = !DILocation(line: 8412, column: 13, scope: !1242)
!1290 = !DILocation(line: 8413, column: 16, scope: !1242)
!1291 = !DILocation(line: 0, scope: !1242)
!1292 = !DILocation(line: 8414, column: 38, scope: !1242)
!1293 = !DILocation(line: 8414, column: 37, scope: !1242)
!1294 = !DILocation(line: 8414, column: 16, scope: !1242)
!1295 = !DILocation(line: 8415, column: 23, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !3, line: 8415, column: 9)
!1297 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8415, column: 9)
!1298 = !DILocation(line: 8415, column: 9, scope: !1297)
!1299 = distinct !{!1299, !1298, !1300}
!1300 = !DILocation(line: 8423, column: 9, scope: !1297)
!1301 = !DILocation(line: 8416, column: 17, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 8416, column: 17)
!1303 = distinct !DILexicalBlock(scope: !1296, file: !3, line: 8415, column: 36)
!1304 = !DILocation(line: 8416, column: 43, scope: !1302)
!1305 = !DILocation(line: 8416, column: 17, scope: !1303)
!1306 = !DILocation(line: 8417, column: 17, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 8417, column: 17)
!1308 = !DILocation(line: 8417, column: 24, scope: !1307)
!1309 = !DILocation(line: 8417, column: 17, scope: !1303)
!1310 = !DILocation(line: 8418, column: 19, scope: !1303)
!1311 = !DILocation(line: 8419, column: 22, scope: !1303)
!1312 = !DILocation(line: 8420, column: 17, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 8420, column: 17)
!1314 = !DILocation(line: 8420, column: 21, scope: !1313)
!1315 = !DILocation(line: 8420, column: 24, scope: !1313)
!1316 = !DILocation(line: 8420, column: 47, scope: !1313)
!1317 = !DILocation(line: 8420, column: 17, scope: !1303)
!1318 = !DILocation(line: 8421, column: 23, scope: !1303)
!1319 = !DILocation(line: 8421, column: 13, scope: !1303)
!1320 = !DILocation(line: 8421, column: 21, scope: !1303)
!1321 = !DILocation(line: 8422, column: 17, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 8422, column: 17)
!1323 = !DILocation(line: 8422, column: 35, scope: !1322)
!1324 = !DILocation(line: 8415, column: 32, scope: !1296)
!1325 = !DILocation(line: 8422, column: 17, scope: !1303)
!1326 = !DILocation(line: 8426, column: 29, scope: !1242)
!1327 = !DILocation(line: 8426, column: 38, scope: !1242)
!1328 = !{!1329, !714, i64 0}
!1329 = !{!"redisObject", !714, i64 0, !711, i64 8, !711, i64 9, !711, i64 10, !711, i64 11, !713, i64 12, !1330, i64 16}
!1330 = !{!"redisObjectVM", !710, i64 0, !710, i64 8, !710, i64 16}
!1331 = !DILocation(line: 8426, column: 15, scope: !1242)
!1332 = !DILocation(line: 8427, column: 14, scope: !1333)
!1333 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8427, column: 13)
!1334 = !DILocation(line: 8427, column: 13, scope: !1242)
!1335 = !DILocation(line: 8428, column: 13, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1333, file: !3, line: 8427, column: 19)
!1337 = !DILocation(line: 8429, column: 13, scope: !1336)
!1338 = !DILocation(line: 8432, column: 18, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8432, column: 13)
!1340 = !{!1341, !713, i64 20}
!1341 = !{!"redisCommand", !714, i64 0, !714, i64 8, !713, i64 16, !713, i64 20, !714, i64 24, !713, i64 32, !713, i64 36, !713, i64 40}
!1342 = !DILocation(line: 8432, column: 24, scope: !1339)
!1343 = !DILocation(line: 8432, column: 13, scope: !1242)
!1344 = !DILocation(line: 8433, column: 55, scope: !1339)
!1345 = !DILocation(line: 8433, column: 46, scope: !1339)
!1346 = !DILocation(line: 8433, column: 28, scope: !1339)
!1347 = !DILocation(line: 8433, column: 26, scope: !1339)
!1348 = !DILocation(line: 8433, column: 13, scope: !1339)
!1349 = !DILocation(line: 8435, column: 26, scope: !1242)
!1350 = !{!897, !713, i64 48}
!1351 = !DILocation(line: 8436, column: 26, scope: !1242)
!1352 = !{!897, !714, i64 32}
!1353 = !DILocation(line: 8437, column: 14, scope: !1242)
!1354 = !{!1341, !714, i64 8}
!1355 = !DILocation(line: 8437, column: 9, scope: !1242)
!1356 = !DILocation(line: 8439, column: 15, scope: !1242)
!1357 = !{!897, !714, i64 64}
!1358 = !{!1359, !713, i64 40}
!1359 = !{!"list", !714, i64 0, !714, i64 8, !714, i64 16, !714, i64 24, !714, i64 32, !713, i64 40}
!1360 = !DILocation(line: 8439, column: 9, scope: !1242)
!1361 = !DILocation(line: 8442, column: 9, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8442, column: 9)
!1363 = !DILocation(line: 8442, column: 23, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1362, file: !3, line: 8442, column: 9)
!1365 = !DILocation(line: 8440, column: 43, scope: !1242)
!1366 = !{!1359, !714, i64 0}
!1367 = !DILocation(line: 8440, column: 13, scope: !1242)
!1368 = distinct !{!1368, !1360, !1369}
!1369 = !DILocation(line: 8440, column: 71, scope: !1242)
!1370 = !DILocation(line: 8442, column: 49, scope: !1364)
!1371 = !DILocation(line: 8442, column: 36, scope: !1364)
!1372 = !DILocation(line: 8442, column: 32, scope: !1364)
!1373 = distinct !{!1373, !1361, !1374}
!1374 = !DILocation(line: 8442, column: 56, scope: !1362)
!1375 = !DILocation(line: 8443, column: 9, scope: !1242)
!1376 = !DILocation(line: 8446, column: 14, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8446, column: 13)
!1378 = !DILocation(line: 8446, column: 45, scope: !1377)
!1379 = !{!709, !715, i64 632}
!1380 = !DILocation(line: 8446, column: 36, scope: !1377)
!1381 = !DILocation(line: 8446, column: 60, scope: !1377)
!1382 = !DILocation(line: 8449, column: 20, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 8449, column: 13)
!1384 = !{!709, !713, i64 604}
!1385 = !DILocation(line: 8449, column: 13, scope: !1383)
!1386 = !DILocation(line: 8449, column: 31, scope: !1383)
!1387 = !DILocation(line: 8450, column: 20, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 8449, column: 49)
!1389 = !DILocation(line: 8450, column: 51, scope: !1388)
!1390 = !DILocation(line: 8450, column: 42, scope: !1388)
!1391 = !DILocation(line: 8450, column: 13, scope: !1388)
!1392 = !DILocation(line: 8451, column: 21, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !3, line: 8451, column: 21)
!1394 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 8450, column: 66)
!1395 = !DILocation(line: 8451, column: 47, scope: !1393)
!1396 = !DILocation(line: 8451, column: 21, scope: !1394)
!1397 = distinct !{!1397, !1391, !1398}
!1398 = !DILocation(line: 8452, column: 13, scope: !1388)
!1399 = !DILocation(line: 8454, column: 5, scope: !1231)
!1400 = !DILocation(line: 8458, column: 21, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 8458, column: 9)
!1402 = !{!897, !713, i64 88}
!1403 = !DILocation(line: 8458, column: 27, scope: !1401)
!1404 = !DILocation(line: 8458, column: 9, scope: !1231)
!1405 = !DILocation(line: 8460, column: 5, scope: !1231)
!1406 = !DILocation(line: 8461, column: 5, scope: !1231)
!1407 = !DILocation(line: 8462, column: 23, scope: !1231)
!1408 = !DILocation(line: 8463, column: 5, scope: !1231)
!1409 = !DILocation(line: 8465, column: 1, scope: !1231)
!1410 = !DILocation(line: 8466, column: 9, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1231, file: !3, line: 8466, column: 9)
!1412 = !DILocation(line: 8466, column: 9, scope: !1231)
!1413 = !DILocation(line: 8467, column: 9, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 8466, column: 19)
!1415 = !DILocation(line: 8468, column: 5, scope: !1414)
!1416 = !DILocation(line: 8469, column: 97, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 8468, column: 12)
!1418 = !DILocation(line: 8469, column: 88, scope: !1417)
!1419 = !DILocation(line: 8469, column: 9, scope: !1417)
!1420 = !DILocation(line: 8471, column: 5, scope: !1231)
!1421 = !DILocation(line: 8472, column: 1, scope: !1231)
!1422 = !DILocation(line: 8473, column: 5, scope: !1231)
!1423 = !DILocation(line: 8474, column: 5, scope: !1231)
!1424 = !DILocation(line: 8475, column: 1, scope: !1231)
!1425 = !DISubprogram(name: "fopen", linkageName: "fopen64", scope: !161, file: !161, line: 257, type: !1426, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!580, !1076, !1076}
!1428 = !DISubprogram(name: "fileno", scope: !161, file: !161, line: 786, type: !1429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!45, !580}
!1431 = !DISubprogram(name: "exit", scope: !1432, file: !1432, line: 617, type: !202, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1432 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "f0db66726d35051e5af2525f5b33bd81")
!1433 = distinct !DISubprogram(name: "createFakeClient", scope: !3, file: !3, line: 8349, type: !1434, scopeLine: 8349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1436)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!1237}
!1436 = !{!1437}
!1437 = !DILocalVariable(name: "c", scope: !1433, file: !3, line: 8350, type: !1237)
!1438 = !DILocation(line: 8350, column: 29, scope: !1433)
!1439 = !DILocation(line: 0, scope: !1433)
!1440 = !DILocation(line: 8352, column: 5, scope: !1433)
!1441 = !DILocation(line: 8353, column: 8, scope: !1433)
!1442 = !DILocation(line: 8353, column: 11, scope: !1433)
!1443 = !DILocation(line: 8354, column: 19, scope: !1433)
!1444 = !DILocation(line: 8354, column: 8, scope: !1433)
!1445 = !DILocation(line: 8354, column: 17, scope: !1433)
!1446 = !{!897, !714, i64 24}
!1447 = !DILocation(line: 8355, column: 8, scope: !1433)
!1448 = !DILocation(line: 8355, column: 13, scope: !1433)
!1449 = !DILocation(line: 8356, column: 8, scope: !1433)
!1450 = !DILocation(line: 8356, column: 13, scope: !1433)
!1451 = !DILocation(line: 8357, column: 8, scope: !1433)
!1452 = !DILocation(line: 8357, column: 14, scope: !1433)
!1453 = !DILocation(line: 8360, column: 8, scope: !1433)
!1454 = !DILocation(line: 8360, column: 18, scope: !1433)
!1455 = !DILocation(line: 8361, column: 16, scope: !1433)
!1456 = !DILocation(line: 8361, column: 8, scope: !1433)
!1457 = !DILocation(line: 8361, column: 14, scope: !1433)
!1458 = !DILocation(line: 8362, column: 5, scope: !1433)
!1459 = !{!1359, !714, i64 24}
!1460 = !DILocation(line: 8363, column: 5, scope: !1433)
!1461 = !{!1359, !714, i64 16}
!1462 = !DILocation(line: 8364, column: 5, scope: !1433)
!1463 = !DILocation(line: 8365, column: 5, scope: !1433)
!1464 = !DISubprogram(name: "fgets", scope: !161, file: !161, line: 564, type: !1465, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!47, !1075, !45, !1467}
!1467 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !580)
!1468 = !DISubprogram(name: "feof", scope: !161, file: !161, line: 759, type: !1429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1469 = !DISubprogram(name: "zmalloc", scope: !1470, file: !1470, line: 34, type: !1471, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1470 = !DIFile(filename: "./zmalloc.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "8c6e7e80b58457b2728e51e83fedc2bb")
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!46, !196}
!1473 = !DISubprogram(name: "strtol", scope: !1432, file: !1432, line: 176, type: !1474, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!53, !1076, !1476, !45}
!1476 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !195)
!1477 = !DISubprogram(name: "sdsnewlen", scope: !166, file: !166, line: 44, type: !1478, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!165, !100, !196}
!1480 = !DISubprogram(name: "fread", scope: !161, file: !161, line: 646, type: !1481, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!196, !1483, !196, !196, !1467}
!1483 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !46)
!1484 = distinct !DISubprogram(name: "createObject", scope: !3, file: !3, line: 2897, type: !1485, scopeLine: 2897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1487)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!145, !45, !46}
!1487 = !{!1488, !1489, !1490, !1491}
!1488 = !DILocalVariable(name: "type", arg: 1, scope: !1484, file: !3, line: 2897, type: !45)
!1489 = !DILocalVariable(name: "ptr", arg: 2, scope: !1484, file: !3, line: 2897, type: !46)
!1490 = !DILocalVariable(name: "o", scope: !1484, file: !3, line: 2898, type: !145)
!1491 = !DILocalVariable(name: "head", scope: !1492, file: !3, line: 2902, type: !64)
!1492 = distinct !DILexicalBlock(scope: !1493, file: !3, line: 2901, column: 41)
!1493 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 2901, column: 9)
!1494 = !DILocation(line: 0, scope: !1484)
!1495 = !DILocation(line: 2900, column: 16, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 2900, column: 9)
!1497 = !DILocation(line: 2900, column: 9, scope: !1496)
!1498 = !DILocation(line: 2900, column: 9, scope: !1484)
!1499 = !DILocation(line: 2900, column: 28, scope: !1496)
!1500 = !DILocation(line: 2901, column: 9, scope: !1493)
!1501 = !{!709, !714, i64 336}
!1502 = !DILocation(line: 2901, column: 9, scope: !1484)
!1503 = !DILocation(line: 2902, column: 26, scope: !1492)
!1504 = !DILocation(line: 0, scope: !1492)
!1505 = !DILocation(line: 2903, column: 13, scope: !1492)
!1506 = !DILocation(line: 2904, column: 9, scope: !1492)
!1507 = !DILocation(line: 2905, column: 20, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1492, file: !3, line: 2905, column: 13)
!1509 = !DILocation(line: 2905, column: 13, scope: !1508)
!1510 = !DILocation(line: 2905, column: 13, scope: !1492)
!1511 = !DILocation(line: 2905, column: 32, scope: !1508)
!1512 = !DILocation(line: 2907, column: 20, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 2907, column: 13)
!1514 = distinct !DILexicalBlock(scope: !1493, file: !3, line: 2906, column: 12)
!1515 = !DILocation(line: 2907, column: 13, scope: !1513)
!1516 = !DILocation(line: 2907, column: 13, scope: !1514)
!1517 = !DILocation(line: 2908, column: 13, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1513, file: !3, line: 2907, column: 32)
!1519 = !DILocation(line: 2909, column: 17, scope: !1518)
!1520 = !DILocation(line: 2910, column: 9, scope: !1518)
!1521 = !DILocation(line: 2911, column: 17, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1513, file: !3, line: 2910, column: 16)
!1523 = !DILocation(line: 2914, column: 15, scope: !1484)
!1524 = !DILocation(line: 2914, column: 8, scope: !1484)
!1525 = !DILocation(line: 2914, column: 13, scope: !1484)
!1526 = !{!1329, !711, i64 8}
!1527 = !DILocation(line: 2915, column: 8, scope: !1484)
!1528 = !DILocation(line: 2915, column: 17, scope: !1484)
!1529 = !{!1329, !711, i64 9}
!1530 = !DILocation(line: 2916, column: 8, scope: !1484)
!1531 = !DILocation(line: 2916, column: 12, scope: !1484)
!1532 = !DILocation(line: 2917, column: 8, scope: !1484)
!1533 = !DILocation(line: 2917, column: 17, scope: !1484)
!1534 = !{!1329, !713, i64 12}
!1535 = !DILocation(line: 2918, column: 16, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 2918, column: 9)
!1537 = !DILocation(line: 2918, column: 9, scope: !1536)
!1538 = !DILocation(line: 2918, column: 9, scope: !1484)
!1539 = !DILocation(line: 2923, column: 30, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1536, file: !3, line: 2918, column: 28)
!1541 = !{!709, !710, i64 696}
!1542 = !DILocation(line: 2923, column: 15, scope: !1540)
!1543 = !DILocation(line: 2923, column: 21, scope: !1540)
!1544 = !{!1329, !710, i64 32}
!1545 = !DILocation(line: 2924, column: 12, scope: !1540)
!1546 = !DILocation(line: 2924, column: 20, scope: !1540)
!1547 = !{!1329, !711, i64 10}
!1548 = !DILocation(line: 2925, column: 5, scope: !1540)
!1549 = !DILocation(line: 0, scope: !1493)
!1550 = !DILocation(line: 2926, column: 5, scope: !1484)
!1551 = distinct !DISubprogram(name: "lookupCommand", scope: !3, file: !3, line: 2243, type: !1552, scopeLine: 2243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1554)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!333, !47}
!1554 = !{!1555, !1556}
!1555 = !DILocalVariable(name: "name", arg: 1, scope: !1551, file: !3, line: 2243, type: !47)
!1556 = !DILocalVariable(name: "j", scope: !1551, file: !3, line: 2244, type: !45)
!1557 = !DILocation(line: 0, scope: !1551)
!1558 = !DILocation(line: 2245, column: 23, scope: !1551)
!1559 = !{!1341, !714, i64 0}
!1560 = !DILocation(line: 2245, column: 28, scope: !1551)
!1561 = !DILocation(line: 2245, column: 5, scope: !1551)
!1562 = !DILocation(line: 2246, column: 14, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 2246, column: 13)
!1564 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 2245, column: 37)
!1565 = !DILocation(line: 2246, column: 13, scope: !1564)
!1566 = !DILocation(line: 2245, column: 11, scope: !1551)
!1567 = distinct !{!1567, !1561, !1568}
!1568 = !DILocation(line: 2248, column: 5, scope: !1551)
!1569 = !DILocation(line: 2247, column: 10, scope: !1564)
!1570 = !DILocation(line: 2250, column: 1, scope: !1551)
!1571 = distinct !DISubprogram(name: "tryObjectEncoding", scope: !3, file: !3, line: 3170, type: !1572, scopeLine: 3170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1574)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!145, !145}
!1574 = !{!1575, !1576, !1577}
!1575 = !DILocalVariable(name: "o", arg: 1, scope: !1571, file: !3, line: 3170, type: !145)
!1576 = !DILocalVariable(name: "value", scope: !1571, file: !3, line: 3171, type: !53)
!1577 = !DILocalVariable(name: "s", scope: !1571, file: !3, line: 3172, type: !165)
!1578 = !DILocation(line: 0, scope: !1571)
!1579 = !DILocation(line: 3171, column: 5, scope: !1571)
!1580 = !DILocation(line: 3172, column: 16, scope: !1571)
!1581 = !DILocation(line: 3174, column: 12, scope: !1582)
!1582 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 3174, column: 9)
!1583 = !DILocation(line: 3174, column: 21, scope: !1582)
!1584 = !DILocation(line: 3174, column: 9, scope: !1571)
!1585 = !DILocation(line: 3180, column: 13, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 3180, column: 10)
!1587 = !DILocation(line: 3180, column: 22, scope: !1586)
!1588 = !DILocation(line: 3180, column: 10, scope: !1571)
!1589 = !DILocation(line: 3183, column: 5, scope: !1571)
!1590 = !DILocation(line: 3186, column: 9, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 3186, column: 9)
!1592 = !DILocation(line: 3186, column: 47, scope: !1591)
!1593 = !DILocation(line: 3186, column: 9, scope: !1571)
!1594 = !DILocation(line: 3195, column: 9, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 3195, column: 9)
!1596 = !DILocation(line: 3195, column: 20, scope: !1595)
!1597 = !DILocation(line: 3196, column: 23, scope: !1595)
!1598 = !DILocation(line: 3196, column: 45, scope: !1595)
!1599 = !{!709, !710, i64 0}
!1600 = !DILocation(line: 3196, column: 9, scope: !1595)
!1601 = !DILocation(line: 3195, column: 9, scope: !1571)
!1602 = !DILocation(line: 3197, column: 22, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 3196, column: 58)
!1604 = !DILocation(line: 3197, column: 9, scope: !1603)
!1605 = !DILocation(line: 3198, column: 38, scope: !1603)
!1606 = !DILocation(line: 3198, column: 22, scope: !1603)
!1607 = !DILocation(line: 3198, column: 9, scope: !1603)
!1608 = !DILocation(line: 3199, column: 32, scope: !1603)
!1609 = !DILocation(line: 3199, column: 16, scope: !1603)
!1610 = !DILocation(line: 3199, column: 9, scope: !1603)
!1611 = !DILocation(line: 3201, column: 21, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 3200, column: 12)
!1613 = !DILocation(line: 3202, column: 20, scope: !1612)
!1614 = !DILocation(line: 3202, column: 9, scope: !1612)
!1615 = !DILocation(line: 3203, column: 26, scope: !1612)
!1616 = !DILocation(line: 3203, column: 18, scope: !1612)
!1617 = !DILocation(line: 3203, column: 16, scope: !1612)
!1618 = !DILocation(line: 3204, column: 9, scope: !1612)
!1619 = !DILocation(line: 3206, column: 1, scope: !1571)
!1620 = !DISubprogram(name: "listDelNode", scope: !60, file: !60, line: 77, type: !1621, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !58, !64}
!1623 = distinct !DISubprogram(name: "decrRefCount", scope: !3, file: !3, line: 3026, type: !79, scopeLine: 3026, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1624)
!1624 = !{!1625, !1626}
!1625 = !DILocalVariable(name: "obj", arg: 1, scope: !1623, file: !3, line: 3026, type: !46)
!1626 = !DILocalVariable(name: "o", scope: !1623, file: !3, line: 3027, type: !145)
!1627 = !DILocation(line: 0, scope: !1623)
!1628 = !DILocation(line: 3027, column: 15, scope: !1623)
!1629 = !DILocation(line: 3029, column: 12, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 3029, column: 9)
!1631 = !DILocation(line: 3029, column: 21, scope: !1630)
!1632 = !DILocation(line: 3029, column: 9, scope: !1623)
!1633 = !DILocation(line: 3029, column: 27, scope: !1630)
!1634 = !DILocation(line: 3032, column: 16, scope: !1635)
!1635 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 3032, column: 9)
!1636 = !DILocation(line: 3032, column: 9, scope: !1635)
!1637 = !DILocation(line: 3032, column: 27, scope: !1635)
!1638 = !DILocation(line: 3033, column: 13, scope: !1635)
!1639 = !DILocation(line: 3033, column: 41, scope: !1635)
!1640 = !DILocation(line: 3035, column: 45, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1642, file: !3, line: 3035, column: 13)
!1642 = distinct !DILexicalBlock(scope: !1635, file: !3, line: 3034, column: 5)
!1643 = !DILocation(line: 3036, column: 9, scope: !1642)
!1644 = !DILocation(line: 3037, column: 9, scope: !1642)
!1645 = !DILocation(line: 3038, column: 28, scope: !1642)
!1646 = !DILocation(line: 3038, column: 31, scope: !1642)
!1647 = !{!1329, !710, i64 16}
!1648 = !DILocation(line: 3038, column: 42, scope: !1642)
!1649 = !{!1329, !710, i64 24}
!1650 = !DILocation(line: 3038, column: 9, scope: !1642)
!1651 = !DILocation(line: 3039, column: 9, scope: !1642)
!1652 = !DILocation(line: 3040, column: 13, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1642, file: !3, line: 3040, column: 13)
!1654 = !DILocation(line: 3040, column: 44, scope: !1653)
!1655 = !DILocation(line: 3040, column: 68, scope: !1653)
!1656 = !DILocation(line: 3041, column: 14, scope: !1653)
!1657 = !DILocation(line: 3040, column: 13, scope: !1642)
!1658 = !DILocation(line: 3042, column: 13, scope: !1653)
!1659 = !DILocation(line: 3043, column: 9, scope: !1642)
!1660 = !DILocation(line: 3044, column: 40, scope: !1642)
!1661 = !{!709, !715, i64 936}
!1662 = !DILocation(line: 3045, column: 9, scope: !1642)
!1663 = !DILocation(line: 3048, column: 9, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 3048, column: 9)
!1665 = !DILocation(line: 3048, column: 25, scope: !1664)
!1666 = !DILocation(line: 3048, column: 9, scope: !1623)
!1667 = !DILocation(line: 3049, column: 45, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 3049, column: 13)
!1669 = distinct !DILexicalBlock(scope: !1664, file: !3, line: 3048, column: 31)
!1670 = !DILocation(line: 3049, column: 13, scope: !1669)
!1671 = !DILocation(line: 3050, column: 13, scope: !1668)
!1672 = !DILocation(line: 3051, column: 19, scope: !1669)
!1673 = !DILocation(line: 3051, column: 9, scope: !1669)
!1674 = !DILocation(line: 3052, column: 28, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 3051, column: 25)
!1676 = !DILocation(line: 3052, column: 49, scope: !1675)
!1677 = !DILocation(line: 3053, column: 26, scope: !1675)
!1678 = !DILocation(line: 3053, column: 45, scope: !1675)
!1679 = !DILocation(line: 3054, column: 25, scope: !1675)
!1680 = !DILocation(line: 3054, column: 43, scope: !1675)
!1681 = !DILocation(line: 3055, column: 26, scope: !1675)
!1682 = !DILocation(line: 3055, column: 45, scope: !1675)
!1683 = !DILocation(line: 3056, column: 26, scope: !1675)
!1684 = !DILocation(line: 3056, column: 45, scope: !1675)
!1685 = !DILocation(line: 3057, column: 18, scope: !1675)
!1686 = !DILocation(line: 3059, column: 20, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 3059, column: 13)
!1688 = !DILocation(line: 3059, column: 13, scope: !1687)
!1689 = !DILocation(line: 3059, column: 13, scope: !1669)
!1690 = !DILocation(line: 3059, column: 32, scope: !1687)
!1691 = !DILocation(line: 3060, column: 13, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 3060, column: 13)
!1693 = !DILocation(line: 3060, column: 44, scope: !1692)
!1694 = !DILocation(line: 3060, column: 68, scope: !1692)
!1695 = !DILocation(line: 3061, column: 14, scope: !1692)
!1696 = !DILocation(line: 3060, column: 13, scope: !1669)
!1697 = !DILocation(line: 3062, column: 13, scope: !1692)
!1698 = !DILocation(line: 3063, column: 20, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 3063, column: 13)
!1700 = !DILocation(line: 3063, column: 13, scope: !1699)
!1701 = !DILocation(line: 3063, column: 13, scope: !1669)
!1702 = !DILocation(line: 3063, column: 32, scope: !1699)
!1703 = !DILocation(line: 3065, column: 1, scope: !1623)
!1704 = !DISubprogram(name: "zfree", scope: !1470, file: !1470, line: 36, type: !79, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1705 = !DISubprogram(name: "zmalloc_used_memory", scope: !1470, file: !1470, line: 38, type: !1706, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!196}
!1708 = distinct !DISubprogram(name: "vmSwapOneObjectBlocking", scope: !3, file: !3, line: 9335, type: !1709, scopeLine: 9335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!45}
!1711 = !DILocation(line: 9336, column: 12, scope: !1708)
!1712 = !DILocation(line: 9336, column: 5, scope: !1708)
!1713 = !DISubprogram(name: "fclose", scope: !161, file: !161, line: 213, type: !1429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1714 = distinct !DISubprogram(name: "freeFakeClient", scope: !3, file: !3, line: 8368, type: !1715, scopeLine: 8368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{null, !1237}
!1717 = !{!1718}
!1718 = !DILocalVariable(name: "c", arg: 1, scope: !1714, file: !3, line: 8368, type: !1237)
!1719 = !DILocation(line: 0, scope: !1714)
!1720 = !DILocation(line: 8369, column: 16, scope: !1714)
!1721 = !DILocation(line: 8369, column: 5, scope: !1714)
!1722 = !DILocation(line: 8370, column: 20, scope: !1714)
!1723 = !DILocation(line: 8370, column: 5, scope: !1714)
!1724 = !DILocation(line: 8371, column: 5, scope: !1714)
!1725 = !DILocation(line: 8372, column: 11, scope: !1714)
!1726 = !DILocation(line: 8372, column: 5, scope: !1714)
!1727 = !DILocation(line: 8373, column: 1, scope: !1714)
!1728 = distinct !DISubprogram(name: "linuxOvercommitMemoryValue", scope: !3, file: !3, line: 10765, type: !1709, scopeLine: 10765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1729)
!1729 = !{!1730, !1731}
!1730 = !DILocalVariable(name: "fp", scope: !1728, file: !3, line: 10766, type: !580)
!1731 = !DILocalVariable(name: "buf", scope: !1728, file: !3, line: 10767, type: !762)
!1732 = !DILocation(line: 10766, column: 16, scope: !1728)
!1733 = !DILocation(line: 0, scope: !1728)
!1734 = !DILocation(line: 10767, column: 5, scope: !1728)
!1735 = !DILocation(line: 10767, column: 10, scope: !1728)
!1736 = !DILocation(line: 10769, column: 10, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1728, file: !3, line: 10769, column: 9)
!1738 = !DILocation(line: 10769, column: 9, scope: !1728)
!1739 = !DILocation(line: 10770, column: 9, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1728, file: !3, line: 10770, column: 9)
!1741 = !DILocation(line: 10770, column: 26, scope: !1740)
!1742 = !DILocation(line: 10770, column: 9, scope: !1728)
!1743 = !DILocation(line: 10776, column: 12, scope: !1728)
!1744 = !DILocation(line: 10776, column: 5, scope: !1728)
!1745 = !DILocation(line: 10777, column: 1, scope: !1728)
!1746 = distinct !DISubprogram(name: "linuxOvercommitMemoryWarning", scope: !3, file: !3, line: 10779, type: !1747, scopeLine: 10779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{null}
!1749 = !DILocation(line: 10780, column: 9, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1746, file: !3, line: 10780, column: 9)
!1751 = !DILocation(line: 10780, column: 38, scope: !1750)
!1752 = !DILocation(line: 10780, column: 9, scope: !1746)
!1753 = !DILocation(line: 10781, column: 9, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1750, file: !3, line: 10780, column: 44)
!1755 = !DILocation(line: 10782, column: 5, scope: !1754)
!1756 = !DILocation(line: 10783, column: 1, scope: !1746)
!1757 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 10821, type: !1758, scopeLine: 10821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1760)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!45, !45, !195}
!1760 = !{!1761, !1762, !1763}
!1761 = !DILocalVariable(name: "argc", arg: 1, scope: !1757, file: !3, line: 10821, type: !45)
!1762 = !DILocalVariable(name: "argv", arg: 2, scope: !1757, file: !3, line: 10821, type: !195)
!1763 = !DILocalVariable(name: "start", scope: !1757, file: !3, line: 10822, type: !49)
!1764 = !DILocation(line: 0, scope: !1757)
!1765 = !DILocation(line: 10824, column: 5, scope: !1757)
!1766 = !DILocation(line: 10825, column: 14, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1757, file: !3, line: 10825, column: 9)
!1768 = !DILocation(line: 10825, column: 9, scope: !1757)
!1769 = !DILocation(line: 10826, column: 20, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 10826, column: 13)
!1771 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 10825, column: 20)
!1772 = !DILocation(line: 10826, column: 13, scope: !1770)
!1773 = !DILocation(line: 10826, column: 35, scope: !1770)
!1774 = !DILocation(line: 10826, column: 40, scope: !1770)
!1775 = !DILocation(line: 10827, column: 13, scope: !1770)
!1776 = !DILocation(line: 10827, column: 42, scope: !1770)
!1777 = !DILocation(line: 10826, column: 13, scope: !1771)
!1778 = !DILocation(line: 10827, column: 48, scope: !1770)
!1779 = !DILocation(line: 10828, column: 13, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 10828, column: 13)
!1781 = !DILocation(line: 10828, column: 39, scope: !1780)
!1782 = !DILocation(line: 10828, column: 13, scope: !1771)
!1783 = !DILocation(line: 10828, column: 45, scope: !1780)
!1784 = !DILocation(line: 10829, column: 9, scope: !1771)
!1785 = !DILocation(line: 10830, column: 26, scope: !1771)
!1786 = !DILocation(line: 10830, column: 9, scope: !1771)
!1787 = !DILocation(line: 10831, column: 5, scope: !1771)
!1788 = !DILocation(line: 10831, column: 22, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 10831, column: 16)
!1790 = !DILocation(line: 10831, column: 16, scope: !1767)
!1791 = !DILocation(line: 10832, column: 9, scope: !1792)
!1792 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 10831, column: 28)
!1793 = !DILocation(line: 10833, column: 5, scope: !1792)
!1794 = !DILocation(line: 10834, column: 9, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 10833, column: 12)
!1796 = !DILocation(line: 10836, column: 16, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1757, file: !3, line: 10836, column: 9)
!1798 = !{!709, !713, i64 400}
!1799 = !DILocation(line: 10836, column: 9, scope: !1797)
!1800 = !DILocation(line: 10836, column: 9, scope: !1757)
!1801 = !DILocation(line: 10836, column: 27, scope: !1797)
!1802 = !DILocation(line: 10837, column: 5, scope: !1757)
!1803 = !DILocation(line: 10838, column: 5, scope: !1757)
!1804 = !DILocation(line: 10840, column: 5, scope: !1757)
!1805 = !DILocation(line: 10842, column: 13, scope: !1757)
!1806 = !DILocation(line: 10843, column: 16, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1757, file: !3, line: 10843, column: 9)
!1808 = !DILocation(line: 10843, column: 9, scope: !1807)
!1809 = !DILocation(line: 10843, column: 9, scope: !1757)
!1810 = !DILocation(line: 10844, column: 39, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 10844, column: 13)
!1812 = distinct !DILexicalBlock(scope: !1807, file: !3, line: 10843, column: 28)
!1813 = !DILocation(line: 10844, column: 13, scope: !1811)
!1814 = !DILocation(line: 10844, column: 55, scope: !1811)
!1815 = !DILocation(line: 10844, column: 13, scope: !1812)
!1816 = !DILocation(line: 10847, column: 28, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1818, file: !3, line: 10847, column: 13)
!1818 = distinct !DILexicalBlock(scope: !1807, file: !3, line: 10846, column: 12)
!1819 = !DILocation(line: 10847, column: 13, scope: !1817)
!1820 = !DILocation(line: 10847, column: 40, scope: !1817)
!1821 = !DILocation(line: 10847, column: 13, scope: !1818)
!1822 = !DILocation(line: 0, scope: !1807)
!1823 = !DILocation(line: 10850, column: 94, scope: !1757)
!1824 = !{!709, !713, i64 8}
!1825 = !DILocation(line: 10850, column: 5, scope: !1757)
!1826 = !DILocation(line: 10851, column: 33, scope: !1757)
!1827 = !DILocation(line: 10851, column: 5, scope: !1757)
!1828 = !DILocation(line: 10852, column: 19, scope: !1757)
!1829 = !DILocation(line: 10852, column: 5, scope: !1757)
!1830 = !DILocation(line: 10853, column: 30, scope: !1757)
!1831 = !DILocation(line: 10853, column: 5, scope: !1757)
!1832 = !DILocation(line: 10854, column: 5, scope: !1757)
!1833 = !DISubprogram(name: "strcmp", scope: !1082, file: !1082, line: 137, type: !1099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!1834 = distinct !DISubprogram(name: "loadServerConfig", scope: !3, file: !3, line: 1808, type: !1835, scopeLine: 1808, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1837)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !47}
!1837 = !{!1838, !1839, !1840, !1844, !1845, !1846, !1847, !1850, !1851, !1852, !1858, !1859, !1864}
!1838 = !DILocalVariable(name: "filename", arg: 1, scope: !1834, file: !3, line: 1808, type: !47)
!1839 = !DILocalVariable(name: "fp", scope: !1834, file: !3, line: 1809, type: !580)
!1840 = !DILocalVariable(name: "buf", scope: !1834, file: !3, line: 1810, type: !1841)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 8200, elements: !1842)
!1842 = !{!1843}
!1843 = !DISubrange(count: 1025)
!1844 = !DILocalVariable(name: "err", scope: !1834, file: !3, line: 1810, type: !47)
!1845 = !DILocalVariable(name: "linenum", scope: !1834, file: !3, line: 1811, type: !45)
!1846 = !DILocalVariable(name: "line", scope: !1834, file: !3, line: 1812, type: !165)
!1847 = !DILocalVariable(name: "argv", scope: !1848, file: !3, line: 1824, type: !1849)
!1848 = distinct !DILexicalBlock(scope: !1834, file: !3, line: 1823, column: 57)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!1850 = !DILocalVariable(name: "argc", scope: !1848, file: !3, line: 1825, type: !45)
!1851 = !DILocalVariable(name: "j", scope: !1848, file: !3, line: 1825, type: !45)
!1852 = !DILocalVariable(name: "seconds", scope: !1853, file: !3, line: 1855, type: !45)
!1853 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 1854, column: 62)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 1854, column: 20)
!1855 = distinct !DILexicalBlock(scope: !1856, file: !3, line: 1852, column: 20)
!1856 = distinct !DILexicalBlock(scope: !1857, file: !3, line: 1847, column: 20)
!1857 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1842, column: 13)
!1858 = !DILocalVariable(name: "changes", scope: !1853, file: !3, line: 1856, type: !45)
!1859 = !DILocalVariable(name: "logfp", scope: !1860, file: !3, line: 1877, type: !580)
!1860 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 1876, column: 65)
!1861 = distinct !DILexicalBlock(scope: !1862, file: !3, line: 1876, column: 20)
!1862 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1867, column: 20)
!1863 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 1861, column: 20)
!1864 = !DILabel(scope: !1834, name: "loaderr", file: !3, line: 1984)
!1865 = !DILocation(line: 0, scope: !1834)
!1866 = !DILocation(line: 1810, column: 5, scope: !1834)
!1867 = !DILocation(line: 1810, column: 10, scope: !1834)
!1868 = !DILocation(line: 1814, column: 9, scope: !1869)
!1869 = distinct !DILexicalBlock(scope: !1834, file: !3, line: 1814, column: 9)
!1870 = !DILocation(line: 1814, column: 21, scope: !1869)
!1871 = !DILocation(line: 1814, column: 28, scope: !1869)
!1872 = !DILocation(line: 1814, column: 31, scope: !1869)
!1873 = !DILocation(line: 1814, column: 43, scope: !1869)
!1874 = !DILocation(line: 1814, column: 9, scope: !1834)
!1875 = !DILocation(line: 1815, column: 14, scope: !1869)
!1876 = !DILocation(line: 1815, column: 9, scope: !1869)
!1877 = !DILocation(line: 1817, column: 19, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1879, file: !3, line: 1817, column: 13)
!1879 = distinct !DILexicalBlock(scope: !1869, file: !3, line: 1816, column: 10)
!1880 = !DILocation(line: 1817, column: 40, scope: !1878)
!1881 = !DILocation(line: 1817, column: 13, scope: !1879)
!1882 = !DILocation(line: 1818, column: 13, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1878, file: !3, line: 1817, column: 49)
!1884 = !DILocation(line: 1819, column: 13, scope: !1883)
!1885 = !DILocation(line: 0, scope: !1869)
!1886 = !DILocation(line: 1823, column: 11, scope: !1834)
!1887 = !DILocation(line: 1823, column: 48, scope: !1834)
!1888 = !DILocation(line: 1823, column: 5, scope: !1834)
!1889 = !DILocation(line: 1825, column: 9, scope: !1848)
!1890 = !DILocation(line: 1827, column: 16, scope: !1848)
!1891 = !DILocation(line: 1828, column: 16, scope: !1848)
!1892 = !DILocation(line: 1829, column: 16, scope: !1848)
!1893 = !DILocation(line: 1832, column: 13, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1832, column: 13)
!1895 = !DILocation(line: 1832, column: 28, scope: !1894)
!1896 = distinct !{!1896, !1888, !1897}
!1897 = !DILocation(line: 1980, column: 5, scope: !1834)
!1898 = !DILocation(line: 1838, column: 33, scope: !1848)
!1899 = !DILocation(line: 0, scope: !1848)
!1900 = !DILocation(line: 1838, column: 16, scope: !1848)
!1901 = !DILocation(line: 1839, column: 20, scope: !1848)
!1902 = !DILocation(line: 1839, column: 9, scope: !1848)
!1903 = !DILocation(line: 1842, column: 25, scope: !1857)
!1904 = !DILocation(line: 1842, column: 14, scope: !1857)
!1905 = !DILocation(line: 1842, column: 44, scope: !1857)
!1906 = !DILocation(line: 1843, column: 39, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1857, file: !3, line: 1842, column: 58)
!1908 = !DILocation(line: 1843, column: 34, scope: !1907)
!1909 = !DILocation(line: 1843, column: 32, scope: !1907)
!1910 = !{!709, !713, i64 392}
!1911 = !DILocation(line: 1844, column: 36, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1907, file: !3, line: 1844, column: 17)
!1913 = !DILocation(line: 1844, column: 17, scope: !1907)
!1914 = !DILocation(line: 1847, column: 21, scope: !1856)
!1915 = !DILocation(line: 1847, column: 48, scope: !1856)
!1916 = !DILocation(line: 1848, column: 32, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1856, file: !3, line: 1847, column: 62)
!1918 = !DILocation(line: 1848, column: 27, scope: !1917)
!1919 = !DILocation(line: 1848, column: 25, scope: !1917)
!1920 = !DILocation(line: 1849, column: 33, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1917, file: !3, line: 1849, column: 17)
!1922 = !DILocation(line: 1852, column: 21, scope: !1855)
!1923 = !DILocation(line: 1852, column: 48, scope: !1855)
!1924 = !DILocation(line: 1853, column: 39, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 1852, column: 62)
!1926 = !DILocation(line: 1853, column: 31, scope: !1925)
!1927 = !DILocation(line: 1853, column: 29, scope: !1925)
!1928 = !{!709, !714, i64 488}
!1929 = !DILocation(line: 1854, column: 9, scope: !1925)
!1930 = !DILocation(line: 1854, column: 21, scope: !1854)
!1931 = !DILocation(line: 1854, column: 48, scope: !1854)
!1932 = !DILocation(line: 1855, column: 32, scope: !1853)
!1933 = !DILocation(line: 1855, column: 27, scope: !1853)
!1934 = !DILocation(line: 0, scope: !1853)
!1935 = !DILocation(line: 1856, column: 32, scope: !1853)
!1936 = !DILocation(line: 1856, column: 27, scope: !1853)
!1937 = !DILocation(line: 1857, column: 25, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1853, file: !3, line: 1857, column: 17)
!1939 = !DILocation(line: 1857, column: 29, scope: !1938)
!1940 = !DILocation(line: 1860, column: 36, scope: !1853)
!1941 = !DILocation(line: 1860, column: 13, scope: !1853)
!1942 = !DILocation(line: 1861, column: 21, scope: !1863)
!1943 = !DILocation(line: 1861, column: 47, scope: !1863)
!1944 = !DILocation(line: 1862, column: 23, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1946, file: !3, line: 1862, column: 17)
!1946 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1861, column: 61)
!1947 = !DILocation(line: 1862, column: 17, scope: !1945)
!1948 = !DILocation(line: 1862, column: 32, scope: !1945)
!1949 = !DILocation(line: 1862, column: 17, scope: !1946)
!1950 = !DILocation(line: 1864, column: 21, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 1862, column: 39)
!1952 = !DILocation(line: 1864, column: 39, scope: !1951)
!1953 = !DILocation(line: 1864, column: 30, scope: !1951)
!1954 = !DILocation(line: 1863, column: 17, scope: !1951)
!1955 = !DILocation(line: 1865, column: 17, scope: !1951)
!1956 = !DILocation(line: 1867, column: 21, scope: !1862)
!1957 = !DILocation(line: 1867, column: 52, scope: !1862)
!1958 = !DILocation(line: 1868, column: 29, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 1868, column: 17)
!1960 = distinct !DILexicalBlock(scope: !1862, file: !3, line: 1867, column: 66)
!1961 = !DILocation(line: 1868, column: 18, scope: !1959)
!1962 = !DILocation(line: 1868, column: 17, scope: !1960)
!1963 = !DILocation(line: 1868, column: 64, scope: !1959)
!1964 = !DILocation(line: 1868, column: 47, scope: !1959)
!1965 = !DILocation(line: 1869, column: 23, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1959, file: !3, line: 1869, column: 22)
!1967 = !DILocation(line: 1869, column: 22, scope: !1959)
!1968 = !DILocation(line: 1869, column: 71, scope: !1966)
!1969 = !DILocation(line: 1869, column: 54, scope: !1966)
!1970 = !DILocation(line: 1870, column: 23, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 1870, column: 22)
!1972 = !DILocation(line: 1870, column: 22, scope: !1966)
!1973 = !DILocation(line: 1870, column: 70, scope: !1971)
!1974 = !DILocation(line: 1870, column: 53, scope: !1971)
!1975 = !DILocation(line: 1871, column: 23, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1971, file: !3, line: 1871, column: 22)
!1977 = !DILocation(line: 1871, column: 22, scope: !1971)
!1978 = !DILocation(line: 1871, column: 71, scope: !1976)
!1979 = !DILocation(line: 1876, column: 21, scope: !1861)
!1980 = !DILocation(line: 1876, column: 51, scope: !1861)
!1981 = !DILocation(line: 1879, column: 38, scope: !1860)
!1982 = !DILocation(line: 1879, column: 30, scope: !1860)
!1983 = !DILocation(line: 1879, column: 28, scope: !1860)
!1984 = !DILocation(line: 1880, column: 18, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 1880, column: 17)
!1986 = !DILocation(line: 1880, column: 17, scope: !1860)
!1987 = !DILocation(line: 1881, column: 17, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1985, file: !3, line: 1880, column: 55)
!1989 = !DILocation(line: 1882, column: 32, scope: !1988)
!1990 = !DILocation(line: 1884, column: 17, scope: !1860)
!1991 = !DILocation(line: 1884, column: 17, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 1884, column: 17)
!1993 = !DILocation(line: 1887, column: 25, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1992, file: !3, line: 1884, column: 33)
!1995 = !DILocation(line: 0, scope: !1860)
!1996 = !DILocation(line: 1888, column: 27, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1994, file: !3, line: 1888, column: 21)
!1998 = !DILocation(line: 1888, column: 21, scope: !1994)
!1999 = !DILocation(line: 1893, column: 17, scope: !1994)
!2000 = !DILocation(line: 1894, column: 13, scope: !1994)
!2001 = !DILocation(line: 1889, column: 40, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 1888, column: 36)
!2003 = !DILocation(line: 1890, column: 65, scope: !2002)
!2004 = !DILocation(line: 1890, column: 56, scope: !2002)
!2005 = !DILocation(line: 1889, column: 27, scope: !2002)
!2006 = !DILocation(line: 1895, column: 21, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 1895, column: 20)
!2008 = !DILocation(line: 1895, column: 53, scope: !2007)
!2009 = !DILocation(line: 1896, column: 33, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 1895, column: 67)
!2011 = !DILocation(line: 1896, column: 28, scope: !2010)
!2012 = !DILocation(line: 1896, column: 26, scope: !2010)
!2013 = !{!709, !713, i64 396}
!2014 = !DILocation(line: 1897, column: 30, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2010, file: !3, line: 1897, column: 17)
!2016 = !DILocation(line: 1897, column: 17, scope: !2010)
!2017 = !DILocation(line: 1900, column: 21, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 1900, column: 20)
!2019 = !DILocation(line: 1900, column: 51, scope: !2018)
!2020 = !DILocation(line: 1901, column: 30, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 1900, column: 65)
!2022 = !DILocation(line: 1901, column: 13, scope: !2021)
!2023 = !DILocation(line: 1902, column: 9, scope: !2021)
!2024 = !DILocation(line: 1902, column: 21, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 1902, column: 20)
!2026 = !DILocation(line: 1902, column: 54, scope: !2025)
!2027 = !DILocation(line: 1903, column: 38, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 1902, column: 68)
!2029 = !DILocation(line: 1903, column: 33, scope: !2028)
!2030 = !DILocation(line: 1903, column: 31, scope: !2028)
!2031 = !{!709, !713, i64 572}
!2032 = !DILocation(line: 1904, column: 9, scope: !2028)
!2033 = !DILocation(line: 1904, column: 21, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 1904, column: 20)
!2035 = !DILocation(line: 1904, column: 53, scope: !2034)
!2036 = !DILocation(line: 1905, column: 40, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1904, column: 67)
!2038 = !DILocation(line: 1905, column: 32, scope: !2037)
!2039 = !DILocation(line: 1905, column: 30, scope: !2037)
!2040 = !{!709, !715, i64 576}
!2041 = !DILocation(line: 1906, column: 9, scope: !2037)
!2042 = !DILocation(line: 1906, column: 21, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1906, column: 20)
!2044 = !DILocation(line: 1906, column: 51, scope: !2043)
!2045 = !DILocation(line: 1907, column: 40, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2043, file: !3, line: 1906, column: 65)
!2047 = !DILocation(line: 1907, column: 33, scope: !2046)
!2048 = !DILocation(line: 1907, column: 31, scope: !2046)
!2049 = !{!709, !714, i64 544}
!2050 = !DILocation(line: 1908, column: 38, scope: !2046)
!2051 = !DILocation(line: 1908, column: 33, scope: !2046)
!2052 = !DILocation(line: 1908, column: 31, scope: !2046)
!2053 = !{!709, !713, i64 552}
!2054 = !DILocation(line: 1909, column: 30, scope: !2046)
!2055 = !{!709, !713, i64 568}
!2056 = !DILocation(line: 1910, column: 9, scope: !2046)
!2057 = !DILocation(line: 1910, column: 21, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2043, file: !3, line: 1910, column: 20)
!2059 = !DILocation(line: 1910, column: 54, scope: !2058)
!2060 = !DILocation(line: 1911, column: 38, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1910, column: 68)
!2062 = !DILocation(line: 1911, column: 30, scope: !2061)
!2063 = !DILocation(line: 1911, column: 28, scope: !2061)
!2064 = !{!709, !714, i64 536}
!2065 = !DILocation(line: 1912, column: 9, scope: !2061)
!2066 = !DILocation(line: 1912, column: 21, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1912, column: 20)
!2068 = !DILocation(line: 1912, column: 57, scope: !2067)
!2069 = !DILocation(line: 1913, column: 50, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2071, file: !3, line: 1913, column: 17)
!2071 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 1912, column: 71)
!2072 = !DILocation(line: 1913, column: 41, scope: !2070)
!2073 = !DILocation(line: 1913, column: 39, scope: !2070)
!2074 = !{!709, !713, i64 388}
!2075 = !DILocation(line: 1913, column: 60, scope: !2070)
!2076 = !DILocation(line: 1913, column: 17, scope: !2071)
!2077 = !DILocation(line: 1916, column: 21, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 1916, column: 20)
!2079 = !DILocation(line: 1916, column: 58, scope: !2078)
!2080 = !DILocation(line: 1917, column: 51, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2082, file: !3, line: 1917, column: 17)
!2082 = distinct !DILexicalBlock(scope: !2078, file: !3, line: 1916, column: 72)
!2083 = !DILocation(line: 1917, column: 42, scope: !2081)
!2084 = !DILocation(line: 1917, column: 40, scope: !2081)
!2085 = !{!709, !713, i64 520}
!2086 = !DILocation(line: 1917, column: 61, scope: !2081)
!2087 = !DILocation(line: 1917, column: 17, scope: !2082)
!2088 = !DILocation(line: 1920, column: 21, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2078, file: !3, line: 1920, column: 20)
!2090 = !DILocation(line: 1920, column: 59, scope: !2089)
!2091 = !DILocation(line: 1921, column: 52, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !3, line: 1921, column: 17)
!2093 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 1920, column: 73)
!2094 = !DILocation(line: 1921, column: 43, scope: !2092)
!2095 = !DILocation(line: 1921, column: 41, scope: !2092)
!2096 = !{!709, !713, i64 524}
!2097 = !DILocation(line: 1921, column: 62, scope: !2092)
!2098 = !DILocation(line: 1921, column: 17, scope: !2093)
!2099 = !DILocation(line: 1924, column: 21, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 1924, column: 20)
!2101 = !DILocation(line: 1924, column: 53, scope: !2100)
!2102 = !DILocation(line: 1925, column: 46, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 1925, column: 17)
!2104 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 1924, column: 67)
!2105 = !DILocation(line: 1925, column: 37, scope: !2103)
!2106 = !DILocation(line: 1925, column: 35, scope: !2103)
!2107 = !DILocation(line: 1925, column: 56, scope: !2103)
!2108 = !DILocation(line: 1925, column: 17, scope: !2104)
!2109 = !DILocation(line: 1928, column: 21, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 1928, column: 20)
!2111 = !DILocation(line: 1928, column: 54, scope: !2110)
!2112 = !DILocation(line: 1929, column: 47, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2114, file: !3, line: 1929, column: 17)
!2114 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 1928, column: 68)
!2115 = !DILocation(line: 1929, column: 38, scope: !2113)
!2116 = !DILocation(line: 1929, column: 36, scope: !2113)
!2117 = !DILocation(line: 1929, column: 57, scope: !2113)
!2118 = !DILocation(line: 1929, column: 17, scope: !2114)
!2119 = !DILocation(line: 1932, column: 21, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 1932, column: 20)
!2121 = !DILocation(line: 1932, column: 58, scope: !2120)
!2122 = !DILocation(line: 1933, column: 26, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 1932, column: 72)
!2124 = !DILocation(line: 1933, column: 13, scope: !2123)
!2125 = !DILocation(line: 1934, column: 45, scope: !2123)
!2126 = !DILocation(line: 1934, column: 37, scope: !2123)
!2127 = !DILocation(line: 1934, column: 35, scope: !2123)
!2128 = !DILocation(line: 1935, column: 9, scope: !2123)
!2129 = !DILocation(line: 1935, column: 21, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 1935, column: 20)
!2131 = !DILocation(line: 1935, column: 55, scope: !2130)
!2132 = !DILocation(line: 1936, column: 29, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2134, file: !3, line: 1936, column: 17)
!2134 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 1935, column: 69)
!2135 = !DILocation(line: 1936, column: 18, scope: !2133)
!2136 = !DILocation(line: 1936, column: 17, scope: !2134)
!2137 = !DILocation(line: 1937, column: 36, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 1936, column: 44)
!2139 = !{!709, !713, i64 408}
!2140 = !DILocation(line: 1938, column: 13, scope: !2138)
!2141 = !DILocation(line: 1938, column: 25, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 1938, column: 24)
!2143 = !DILocation(line: 1938, column: 24, scope: !2133)
!2144 = !DILocation(line: 1939, column: 36, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 1938, column: 55)
!2146 = !DILocation(line: 1940, column: 13, scope: !2145)
!2147 = !DILocation(line: 1940, column: 25, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 1940, column: 24)
!2149 = !DILocation(line: 1940, column: 24, scope: !2142)
!2150 = !DILocation(line: 1941, column: 36, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 1940, column: 57)
!2152 = !DILocation(line: 1946, column: 21, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 1946, column: 20)
!2154 = !DILocation(line: 1946, column: 55, scope: !2153)
!2155 = !DILocation(line: 1947, column: 42, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2153, file: !3, line: 1946, column: 69)
!2157 = !DILocation(line: 1947, column: 34, scope: !2156)
!2158 = !DILocation(line: 1947, column: 32, scope: !2156)
!2159 = !{!709, !714, i64 512}
!2160 = !DILocation(line: 1948, column: 9, scope: !2156)
!2161 = !DILocation(line: 1948, column: 21, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2153, file: !3, line: 1948, column: 20)
!2163 = !DILocation(line: 1948, column: 51, scope: !2162)
!2164 = !DILocation(line: 1949, column: 26, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 1948, column: 65)
!2166 = !{!709, !714, i64 432}
!2167 = !DILocation(line: 1949, column: 13, scope: !2165)
!2168 = !DILocation(line: 1950, column: 38, scope: !2165)
!2169 = !DILocation(line: 1950, column: 30, scope: !2165)
!2170 = !DILocation(line: 1950, column: 28, scope: !2165)
!2171 = !DILocation(line: 1951, column: 9, scope: !2165)
!2172 = !DILocation(line: 1951, column: 21, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2162, file: !3, line: 1951, column: 20)
!2174 = !DILocation(line: 1951, column: 54, scope: !2173)
!2175 = !DILocation(line: 1952, column: 26, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 1951, column: 68)
!2177 = !DILocation(line: 1952, column: 13, scope: !2176)
!2178 = !DILocation(line: 1953, column: 41, scope: !2176)
!2179 = !DILocation(line: 1953, column: 33, scope: !2176)
!2180 = !DILocation(line: 1953, column: 31, scope: !2176)
!2181 = !DILocation(line: 1954, column: 9, scope: !2176)
!2182 = !DILocation(line: 1954, column: 21, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 1954, column: 20)
!2184 = !DILocation(line: 1954, column: 54, scope: !2183)
!2185 = !DILocation(line: 1955, column: 47, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 1955, column: 17)
!2187 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 1954, column: 68)
!2188 = !DILocation(line: 1955, column: 38, scope: !2186)
!2189 = !DILocation(line: 1955, column: 36, scope: !2186)
!2190 = !DILocation(line: 1955, column: 57, scope: !2186)
!2191 = !DILocation(line: 1955, column: 17, scope: !2187)
!2192 = !DILocation(line: 1958, column: 21, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 1958, column: 20)
!2194 = !DILocation(line: 1958, column: 56, scope: !2193)
!2195 = !DILocation(line: 1959, column: 26, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 1958, column: 70)
!2197 = !{!709, !714, i64 608}
!2198 = !DILocation(line: 1959, column: 13, scope: !2196)
!2199 = !DILocation(line: 1960, column: 43, scope: !2196)
!2200 = !DILocation(line: 1960, column: 35, scope: !2196)
!2201 = !DILocation(line: 1960, column: 33, scope: !2196)
!2202 = !DILocation(line: 1961, column: 9, scope: !2196)
!2203 = !DILocation(line: 1961, column: 21, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 1961, column: 20)
!2205 = !DILocation(line: 1961, column: 57, scope: !2204)
!2206 = !DILocation(line: 1962, column: 44, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 1961, column: 71)
!2208 = !DILocation(line: 1962, column: 36, scope: !2207)
!2209 = !DILocation(line: 1962, column: 34, scope: !2207)
!2210 = !DILocation(line: 1963, column: 9, scope: !2207)
!2211 = !DILocation(line: 1963, column: 21, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 1963, column: 20)
!2213 = !DILocation(line: 1963, column: 56, scope: !2212)
!2214 = !DILocation(line: 1964, column: 43, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1963, column: 70)
!2216 = !DILocation(line: 1964, column: 35, scope: !2215)
!2217 = !DILocation(line: 1964, column: 33, scope: !2215)
!2218 = !{!709, !710, i64 616}
!2219 = !DILocation(line: 1965, column: 9, scope: !2215)
!2220 = !DILocation(line: 1965, column: 21, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1965, column: 20)
!2222 = !DILocation(line: 1965, column: 52, scope: !2221)
!2223 = !DILocation(line: 1966, column: 39, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1965, column: 66)
!2225 = !DILocation(line: 1966, column: 31, scope: !2224)
!2226 = !DILocation(line: 1966, column: 29, scope: !2224)
!2227 = !{!709, !710, i64 624}
!2228 = !DILocation(line: 1967, column: 9, scope: !2224)
!2229 = !DILocation(line: 1967, column: 21, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1967, column: 20)
!2231 = !DILocation(line: 1967, column: 58, scope: !2230)
!2232 = !DILocation(line: 1968, column: 45, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 1967, column: 72)
!2234 = !DILocation(line: 1968, column: 37, scope: !2233)
!2235 = !DILocation(line: 1968, column: 35, scope: !2233)
!2236 = !{!709, !713, i64 916}
!2237 = !DILocation(line: 1969, column: 9, scope: !2233)
!2238 = !DILocation(line: 1969, column: 21, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 1969, column: 20)
!2240 = !DILocation(line: 1969, column: 67, scope: !2239)
!2241 = !DILocation(line: 1970, column: 54, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1969, column: 80)
!2243 = !DILocation(line: 1970, column: 46, scope: !2242)
!2244 = !DILocation(line: 1970, column: 44, scope: !2242)
!2245 = !{!709, !710, i64 640}
!2246 = !DILocation(line: 1971, column: 9, scope: !2242)
!2247 = !DILocation(line: 1971, column: 21, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1971, column: 20)
!2249 = !DILocation(line: 1971, column: 65, scope: !2248)
!2250 = !DILocation(line: 1972, column: 52, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 1971, column: 78)
!2252 = !DILocation(line: 1972, column: 44, scope: !2251)
!2253 = !DILocation(line: 1972, column: 42, scope: !2251)
!2254 = !{!709, !710, i64 648}
!2255 = !DILocation(line: 1976, column: 25, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 1976, column: 9)
!2257 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1976, column: 9)
!2258 = !DILocation(line: 1976, column: 23, scope: !2256)
!2259 = !DILocation(line: 1976, column: 9, scope: !2257)
!2260 = !DILocation(line: 1977, column: 21, scope: !2256)
!2261 = !DILocation(line: 1977, column: 13, scope: !2256)
!2262 = !DILocation(line: 1976, column: 32, scope: !2256)
!2263 = distinct !{!2263, !2259, !2264}
!2264 = !DILocation(line: 1977, column: 28, scope: !2257)
!2265 = !DILocation(line: 1978, column: 15, scope: !1848)
!2266 = !DILocation(line: 1978, column: 9, scope: !1848)
!2267 = !DILocation(line: 1981, column: 15, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !1834, file: !3, line: 1981, column: 9)
!2269 = !DILocation(line: 1981, column: 12, scope: !2268)
!2270 = !DILocation(line: 1981, column: 9, scope: !1834)
!2271 = !DILocation(line: 1981, column: 22, scope: !2268)
!2272 = !DILocation(line: 1984, column: 1, scope: !1834)
!2273 = !DILocation(line: 1985, column: 13, scope: !1834)
!2274 = !DILocation(line: 1985, column: 5, scope: !1834)
!2275 = !DILocation(line: 1986, column: 13, scope: !1834)
!2276 = !DILocation(line: 1986, column: 5, scope: !1834)
!2277 = !DILocation(line: 1987, column: 13, scope: !1834)
!2278 = !DILocation(line: 1987, column: 5, scope: !1834)
!2279 = !DILocation(line: 1988, column: 13, scope: !1834)
!2280 = !DILocation(line: 1988, column: 5, scope: !1834)
!2281 = !DILocation(line: 1989, column: 5, scope: !1834)
!2282 = !DILocation(line: 1990, column: 1, scope: !1834)
!2283 = distinct !DISubprogram(name: "daemonize", scope: !3, file: !3, line: 10786, type: !1747, scopeLine: 10786, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2284)
!2284 = !{!2285, !2286}
!2285 = !DILocalVariable(name: "fd", scope: !2283, file: !3, line: 10787, type: !45)
!2286 = !DILocalVariable(name: "fp", scope: !2283, file: !3, line: 10788, type: !580)
!2287 = !DILocation(line: 10790, column: 9, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 10790, column: 9)
!2289 = !DILocation(line: 10790, column: 16, scope: !2288)
!2290 = !DILocation(line: 10790, column: 9, scope: !2283)
!2291 = !DILocation(line: 10790, column: 22, scope: !2288)
!2292 = !DILocation(line: 10791, column: 5, scope: !2283)
!2293 = !DILocation(line: 10796, column: 15, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 10796, column: 9)
!2295 = !DILocation(line: 0, scope: !2283)
!2296 = !DILocation(line: 10796, column: 45, scope: !2294)
!2297 = !DILocation(line: 10796, column: 9, scope: !2283)
!2298 = !DILocation(line: 10797, column: 9, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2294, file: !3, line: 10796, column: 52)
!2300 = !DILocation(line: 10798, column: 9, scope: !2299)
!2301 = !DILocation(line: 10799, column: 9, scope: !2299)
!2302 = !DILocation(line: 10800, column: 16, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 10800, column: 13)
!2304 = !DILocation(line: 10800, column: 13, scope: !2299)
!2305 = !DILocation(line: 10800, column: 33, scope: !2303)
!2306 = !DILocation(line: 10803, column: 23, scope: !2283)
!2307 = !DILocation(line: 10803, column: 10, scope: !2283)
!2308 = !DILocation(line: 10804, column: 9, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 10804, column: 9)
!2310 = !DILocation(line: 10804, column: 9, scope: !2283)
!2311 = !DILocation(line: 10805, column: 27, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2309, file: !3, line: 10804, column: 13)
!2313 = !DILocation(line: 10805, column: 9, scope: !2312)
!2314 = !DILocation(line: 10806, column: 9, scope: !2312)
!2315 = !DILocation(line: 10807, column: 5, scope: !2312)
!2316 = !DILocation(line: 10808, column: 1, scope: !2283)
!2317 = distinct !DISubprogram(name: "rdbLoad", scope: !3, file: !3, line: 4069, type: !1232, scopeLine: 4069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2318)
!2318 = !{!2319, !2320, !2321, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2334, !2335, !2336, !2338, !2339, !2340, !2343, !2348}
!2319 = !DILocalVariable(name: "filename", arg: 1, scope: !2317, file: !3, line: 4069, type: !47)
!2320 = !DILocalVariable(name: "fp", scope: !2317, file: !3, line: 4070, type: !580)
!2321 = !DILocalVariable(name: "dbid", scope: !2317, file: !3, line: 4071, type: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2323, line: 26, baseType: !244)
!2323 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "d3ea318a915682aaf6645ec16ac9f991")
!2324 = !DILocalVariable(name: "type", scope: !2317, file: !3, line: 4072, type: !45)
!2325 = !DILocalVariable(name: "retval", scope: !2317, file: !3, line: 4072, type: !45)
!2326 = !DILocalVariable(name: "rdbver", scope: !2317, file: !3, line: 4072, type: !45)
!2327 = !DILocalVariable(name: "swap_all_values", scope: !2317, file: !3, line: 4073, type: !45)
!2328 = !DILocalVariable(name: "d", scope: !2317, file: !3, line: 4074, type: !86)
!2329 = !DILocalVariable(name: "db", scope: !2317, file: !3, line: 4075, type: !293)
!2330 = !DILocalVariable(name: "buf", scope: !2317, file: !3, line: 4076, type: !2331)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 8192, elements: !2332)
!2332 = !{!2333}
!2333 = !DISubrange(count: 1024)
!2334 = !DILocalVariable(name: "expiretime", scope: !2317, file: !3, line: 4077, type: !49)
!2335 = !DILocalVariable(name: "now", scope: !2317, file: !3, line: 4077, type: !49)
!2336 = !DILocalVariable(name: "key", scope: !2337, file: !3, line: 4095, type: !145)
!2337 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 4094, column: 14)
!2338 = !DILocalVariable(name: "val", scope: !2337, file: !3, line: 4095, type: !145)
!2339 = !DILocalVariable(name: "force_swapout", scope: !2337, file: !3, line: 4096, type: !45)
!2340 = !DILocalVariable(name: "de", scope: !2341, file: !3, line: 4146, type: !124)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !3, line: 4145, column: 30)
!2342 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4145, column: 13)
!2343 = !DILocalVariable(name: "newkey", scope: !2344, file: !3, line: 4157, type: !145)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 4156, column: 41)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 4156, column: 21)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 4149, column: 21)
!2347 = distinct !DILexicalBlock(scope: !2341, file: !3, line: 4149, column: 17)
!2348 = !DILabel(scope: !2317, name: "eoferr", file: !3, line: 4186)
!2349 = !DILocation(line: 0, scope: !2317)
!2350 = !DILocation(line: 4074, column: 22, scope: !2317)
!2351 = !{!709, !714, i64 16}
!2352 = !DILocation(line: 4074, column: 28, scope: !2317)
!2353 = !{!2354, !714, i64 0}
!2354 = !{!"redisDb", !714, i64 0, !714, i64 8, !714, i64 16, !714, i64 24, !713, i64 32}
!2355 = !DILocation(line: 4076, column: 5, scope: !2317)
!2356 = !DILocation(line: 4076, column: 10, scope: !2317)
!2357 = !DILocation(line: 4077, column: 30, scope: !2317)
!2358 = !DILocation(line: 4079, column: 10, scope: !2317)
!2359 = !DILocation(line: 4080, column: 10, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 4080, column: 9)
!2361 = !DILocation(line: 4080, column: 9, scope: !2317)
!2362 = !DILocation(line: 4081, column: 9, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 4081, column: 9)
!2364 = !DILocation(line: 4081, column: 27, scope: !2363)
!2365 = !DILocation(line: 4081, column: 9, scope: !2317)
!2366 = !DILocation(line: 4082, column: 5, scope: !2317)
!2367 = !DILocation(line: 4082, column: 12, scope: !2317)
!2368 = !DILocation(line: 4083, column: 9, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 4083, column: 9)
!2370 = !DILocation(line: 4083, column: 31, scope: !2369)
!2371 = !DILocation(line: 4083, column: 9, scope: !2317)
!2372 = !DILocation(line: 4084, column: 9, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 4083, column: 37)
!2374 = !DILocation(line: 4085, column: 9, scope: !2373)
!2375 = !DILocation(line: 4086, column: 9, scope: !2373)
!2376 = !DILocation(line: 4088, column: 22, scope: !2317)
!2377 = !DILocation(line: 4088, column: 14, scope: !2317)
!2378 = !DILocation(line: 4089, column: 16, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 4089, column: 9)
!2380 = !DILocation(line: 4089, column: 9, scope: !2317)
!2381 = !DILocation(line: 4090, column: 9, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 4089, column: 22)
!2383 = !DILocation(line: 4091, column: 9, scope: !2382)
!2384 = !DILocation(line: 4092, column: 9, scope: !2382)
!2385 = !DILocation(line: 4074, column: 11, scope: !2317)
!2386 = !DILocation(line: 4075, column: 14, scope: !2317)
!2387 = !DILocation(line: 4073, column: 9, scope: !2317)
!2388 = !DILocation(line: 4100, column: 21, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4100, column: 13)
!2390 = !DILocation(line: 4100, column: 13, scope: !2337)
!2391 = !DILocation(line: 4102, column: 31, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 4102, column: 17)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 4101, column: 39)
!2394 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4101, column: 13)
!2395 = !DILocation(line: 4102, column: 48, scope: !2392)
!2396 = !DILocation(line: 4102, column: 17, scope: !2393)
!2397 = !DILocation(line: 4104, column: 25, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 4104, column: 17)
!2399 = !DILocation(line: 4104, column: 42, scope: !2398)
!2400 = !DILocation(line: 4104, column: 17, scope: !2393)
!2401 = !DILocation(line: 0, scope: !2337)
!2402 = !DILocation(line: 4106, column: 13, scope: !2337)
!2403 = !DILocation(line: 4109, column: 25, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 4109, column: 17)
!2405 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 4108, column: 37)
!2406 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4108, column: 13)
!2407 = !DILocation(line: 4109, column: 46, scope: !2404)
!2408 = !DILocation(line: 4109, column: 17, scope: !2405)
!2409 = !DILocation(line: 4111, column: 42, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 4111, column: 17)
!2411 = !DILocation(line: 4111, column: 22, scope: !2410)
!2412 = !DILocation(line: 4111, column: 17, scope: !2405)
!2413 = !DILocation(line: 4112, column: 17, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 4111, column: 49)
!2415 = !DILocation(line: 4113, column: 17, scope: !2414)
!2416 = !DILocation(line: 4115, column: 25, scope: !2405)
!2417 = !DILocation(line: 4115, column: 27, scope: !2405)
!2418 = !DILocation(line: 4116, column: 21, scope: !2405)
!2419 = !DILocation(line: 4117, column: 13, scope: !2405)
!2420 = !DILocation(line: 4120, column: 20, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4120, column: 13)
!2422 = !DILocation(line: 4120, column: 45, scope: !2421)
!2423 = !DILocation(line: 4120, column: 13, scope: !2337)
!2424 = !DILocation(line: 4122, column: 20, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4122, column: 13)
!2426 = !DILocation(line: 4122, column: 44, scope: !2425)
!2427 = !DILocation(line: 4122, column: 13, scope: !2337)
!2428 = !DILocation(line: 4124, column: 24, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4124, column: 13)
!2430 = !DILocation(line: 4124, column: 30, scope: !2429)
!2431 = !DILocation(line: 4125, column: 13, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 4124, column: 51)
!2433 = !DILocation(line: 4126, column: 26, scope: !2432)
!2434 = !DILocation(line: 4126, column: 13, scope: !2432)
!2435 = !DILocation(line: 4127, column: 13, scope: !2432)
!2436 = !DILocation(line: 4130, column: 32, scope: !2337)
!2437 = !DILocation(line: 4130, column: 18, scope: !2337)
!2438 = !DILocation(line: 4131, column: 20, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4131, column: 13)
!2440 = !DILocation(line: 4131, column: 13, scope: !2337)
!2441 = !DILocation(line: 4132, column: 117, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2439, file: !3, line: 4131, column: 33)
!2443 = !DILocation(line: 4132, column: 13, scope: !2442)
!2444 = !DILocation(line: 4133, column: 13, scope: !2442)
!2445 = !DILocation(line: 4136, column: 13, scope: !2337)
!2446 = !DILocation(line: 4136, column: 31, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4136, column: 13)
!2448 = !DILocation(line: 4145, column: 13, scope: !2342)
!2449 = !DILocation(line: 4145, column: 13, scope: !2337)
!2450 = !DILocation(line: 4146, column: 29, scope: !2341)
!2451 = !DILocation(line: 0, scope: !2341)
!2452 = !DILocation(line: 4149, column: 17, scope: !2347)
!2453 = !DILocation(line: 4149, column: 17, scope: !2341)
!2454 = !DILocation(line: 4150, column: 23, scope: !2346)
!2455 = !{!2456, !714, i64 0}
!2456 = !{!"dictEntry", !714, i64 0, !714, i64 8, !714, i64 16}
!2457 = !DILocation(line: 4151, column: 23, scope: !2346)
!2458 = !{!2456, !714, i64 8}
!2459 = !DILocation(line: 4153, column: 26, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 4153, column: 21)
!2461 = !DILocation(line: 4153, column: 35, scope: !2460)
!2462 = !DILocation(line: 4153, column: 21, scope: !2346)
!2463 = !DILocation(line: 4156, column: 26, scope: !2345)
!2464 = !DILocation(line: 4156, column: 35, scope: !2345)
!2465 = !DILocation(line: 4156, column: 21, scope: !2346)
!2466 = !DILocation(line: 4157, column: 36, scope: !2344)
!2467 = !DILocation(line: 0, scope: !2344)
!2468 = !DILocation(line: 4158, column: 21, scope: !2344)
!2469 = !DILocation(line: 4159, column: 47, scope: !2344)
!2470 = !DILocation(line: 4160, column: 17, scope: !2344)
!2471 = !DILocation(line: 0, scope: !2346)
!2472 = !DILocation(line: 4162, column: 21, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 4162, column: 21)
!2474 = !DILocation(line: 4162, column: 51, scope: !2473)
!2475 = !DILocation(line: 4162, column: 21, scope: !2346)
!2476 = !DILocation(line: 4163, column: 41, scope: !2473)
!2477 = !DILocation(line: 4163, column: 21, scope: !2473)
!2478 = !DILocation(line: 4170, column: 14, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4170, column: 13)
!2480 = !DILocation(line: 4170, column: 45, scope: !2479)
!2481 = !DILocation(line: 4170, column: 36, scope: !2479)
!2482 = !DILocation(line: 4170, column: 60, scope: !2479)
!2483 = !DILocation(line: 4175, column: 30, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 4175, column: 13)
!2485 = !DILocation(line: 4176, column: 20, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2484, file: !3, line: 4175, column: 69)
!2487 = !DILocation(line: 4176, column: 51, scope: !2486)
!2488 = !DILocation(line: 4176, column: 42, scope: !2486)
!2489 = !DILocation(line: 4176, column: 13, scope: !2486)
!2490 = !DILocation(line: 4177, column: 21, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 4177, column: 21)
!2492 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 4176, column: 66)
!2493 = !DILocation(line: 4177, column: 47, scope: !2491)
!2494 = !DILocation(line: 4177, column: 21, scope: !2492)
!2495 = distinct !{!2495, !2489, !2496}
!2496 = !DILocation(line: 4178, column: 13, scope: !2486)
!2497 = !DILocation(line: 4179, column: 17, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 4179, column: 17)
!2499 = !DILocation(line: 4179, column: 48, scope: !2498)
!2500 = !DILocation(line: 4179, column: 39, scope: !2498)
!2501 = !DILocation(line: 4179, column: 17, scope: !2486)
!2502 = distinct !{!2502, !2503, !2504}
!2503 = !DILocation(line: 4094, column: 5, scope: !2317)
!2504 = !DILocation(line: 4182, column: 5, scope: !2317)
!2505 = !DILocation(line: 4183, column: 5, scope: !2317)
!2506 = !DILocation(line: 4184, column: 5, scope: !2317)
!2507 = !DILocation(line: 4186, column: 1, scope: !2317)
!2508 = !DILocation(line: 4187, column: 5, scope: !2317)
!2509 = !DILocation(line: 4188, column: 5, scope: !2317)
!2510 = !DILocation(line: 4190, column: 1, scope: !2317)
!2511 = !DISubprogram(name: "aeSetBeforeSleepProc", scope: !463, file: !463, line: 115, type: !2512, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !461, !515}
!2514 = distinct !DISubprogram(name: "beforeSleep", scope: !3, file: !3, line: 1571, type: !517, scopeLine: 1571, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2515)
!2515 = !{!2516, !2517, !2520, !2521, !2523}
!2516 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !2514, file: !3, line: 1571, type: !479)
!2517 = !DILocalVariable(name: "li", scope: !2518, file: !3, line: 1576, type: !831)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !3, line: 1575, column: 67)
!2519 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 1575, column: 9)
!2520 = !DILocalVariable(name: "ln", scope: !2518, file: !3, line: 1577, type: !64)
!2521 = !DILocalVariable(name: "c", scope: !2522, file: !3, line: 1581, type: !287)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 1580, column: 37)
!2523 = !DILocalVariable(name: "cmd", scope: !2522, file: !3, line: 1582, type: !333)
!2524 = !DILocation(line: 0, scope: !2514)
!2525 = !DILocation(line: 1575, column: 16, scope: !2519)
!2526 = !DILocation(line: 1575, column: 9, scope: !2519)
!2527 = !DILocation(line: 1575, column: 27, scope: !2519)
!2528 = !DILocation(line: 1575, column: 30, scope: !2519)
!2529 = !{!709, !714, i64 728}
!2530 = !DILocation(line: 1575, column: 9, scope: !2514)
!2531 = !DILocation(line: 1576, column: 9, scope: !2518)
!2532 = !DILocation(line: 1576, column: 18, scope: !2518)
!2533 = !DILocation(line: 1579, column: 9, scope: !2518)
!2534 = !DILocation(line: 1580, column: 21, scope: !2518)
!2535 = !DILocation(line: 0, scope: !2518)
!2536 = !DILocation(line: 1580, column: 9, scope: !2518)
!2537 = !DILocation(line: 1581, column: 34, scope: !2522)
!2538 = !DILocation(line: 1581, column: 30, scope: !2522)
!2539 = !DILocation(line: 0, scope: !2522)
!2540 = !DILocation(line: 1585, column: 32, scope: !2522)
!2541 = !DILocation(line: 1585, column: 13, scope: !2522)
!2542 = !DILocation(line: 1586, column: 16, scope: !2522)
!2543 = !DILocation(line: 1586, column: 22, scope: !2522)
!2544 = !DILocation(line: 1587, column: 38, scope: !2522)
!2545 = !{!709, !713, i64 588}
!2546 = !DILocation(line: 1588, column: 38, scope: !2522)
!2547 = !DILocation(line: 1588, column: 45, scope: !2522)
!2548 = !DILocation(line: 1588, column: 13, scope: !2522)
!2549 = !DILocation(line: 1590, column: 36, scope: !2522)
!2550 = !DILocation(line: 1590, column: 33, scope: !2522)
!2551 = !DILocation(line: 1590, column: 45, scope: !2522)
!2552 = !DILocation(line: 1590, column: 19, scope: !2522)
!2553 = !DILocation(line: 1591, column: 13, scope: !2522)
!2554 = !DILocation(line: 1592, column: 13, scope: !2522)
!2555 = !DILocation(line: 1593, column: 13, scope: !2522)
!2556 = !DILocation(line: 1595, column: 20, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1595, column: 17)
!2558 = !DILocation(line: 1595, column: 17, scope: !2557)
!2559 = !DILocation(line: 1595, column: 29, scope: !2557)
!2560 = !DILocation(line: 1595, column: 32, scope: !2557)
!2561 = !DILocation(line: 1595, column: 52, scope: !2557)
!2562 = !DILocation(line: 1595, column: 17, scope: !2522)
!2563 = !DILocation(line: 1596, column: 17, scope: !2557)
!2564 = distinct !{!2564, !2536, !2565}
!2565 = !DILocation(line: 1597, column: 9, scope: !2518)
!2566 = !DILocation(line: 1598, column: 5, scope: !2519)
!2567 = !DILocation(line: 1598, column: 5, scope: !2518)
!2568 = !DILocation(line: 1600, column: 5, scope: !2514)
!2569 = !DILocation(line: 1601, column: 1, scope: !2514)
!2570 = !DISubprogram(name: "aeMain", scope: !463, file: !463, line: 113, type: !2571, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{null, !461}
!2573 = !DISubprogram(name: "aeDeleteEventLoop", scope: !463, file: !463, line: 102, type: !2571, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2574 = !DISubprogram(name: "strftime", scope: !808, file: !808, line: 88, type: !2575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!196, !1075, !196, !1076, !2577}
!2577 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2578)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !2581, line: 7, size: 448, elements: !2582)
!2581 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "", checksumkind: CSK_MD5, checksum: "9e5545b565ef031c4cd0faf90b69386f")
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2580, file: !2581, line: 9, baseType: !45, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2580, file: !2581, line: 10, baseType: !45, size: 32, offset: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2580, file: !2581, line: 11, baseType: !45, size: 32, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2580, file: !2581, line: 12, baseType: !45, size: 32, offset: 96)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2580, file: !2581, line: 13, baseType: !45, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2580, file: !2581, line: 14, baseType: !45, size: 32, offset: 160)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2580, file: !2581, line: 15, baseType: !45, size: 32, offset: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2580, file: !2581, line: 16, baseType: !45, size: 32, offset: 224)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2580, file: !2581, line: 17, baseType: !45, size: 32, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2580, file: !2581, line: 20, baseType: !53, size: 64, offset: 320)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2580, file: !2581, line: 21, baseType: !741, size: 64, offset: 384)
!2594 = !DISubprogram(name: "localtime", scope: !808, file: !808, line: 123, type: !2595, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !49)
!2600 = !DISubprogram(name: "fprintf", scope: !161, file: !161, line: 326, type: !2601, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!45, !1467, !1076, null}
!2603 = !DISubprogram(name: "getpid", scope: !1086, file: !1086, line: 628, type: !2604, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!541}
!2606 = !DISubprogram(name: "vfprintf", scope: !161, file: !161, line: 341, type: !2607, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!45, !1467, !1076, !2609}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!2610 = !DISubprogram(name: "fflush", scope: !161, file: !161, line: 218, type: !1429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2611 = !DISubprogram(name: "unlink", scope: !1086, file: !1086, line: 825, type: !2612, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!45, !741}
!2614 = !DISubprogram(name: "listRewind", scope: !60, file: !60, line: 84, type: !2615, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{null, !58, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!2618 = !DISubprogram(name: "listNext", scope: !60, file: !60, line: 79, type: !2619, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!64, !2617}
!2621 = distinct !DISubprogram(name: "freeClient", scope: !3, file: !3, line: 2003, type: !340, scopeLine: 2003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2622 = !{!2623, !2624, !2625}
!2623 = !DILocalVariable(name: "c", arg: 1, scope: !2621, file: !3, line: 2003, type: !287)
!2624 = !DILocalVariable(name: "ln", scope: !2621, file: !3, line: 2004, type: !64)
!2625 = !DILocalVariable(name: "l", scope: !2626, file: !3, line: 2055, type: !58)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 2052, column: 33)
!2627 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 2052, column: 9)
!2628 = !DILocation(line: 0, scope: !2621)
!2629 = !DILocation(line: 2011, column: 16, scope: !2621)
!2630 = !DILocation(line: 2011, column: 5, scope: !2621)
!2631 = !DILocation(line: 2012, column: 17, scope: !2621)
!2632 = !DILocation(line: 2013, column: 12, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 2013, column: 9)
!2634 = !DILocation(line: 2013, column: 18, scope: !2633)
!2635 = !DILocation(line: 2013, column: 9, scope: !2621)
!2636 = !DILocation(line: 2014, column: 9, scope: !2633)
!2637 = !DILocation(line: 2017, column: 5, scope: !2621)
!2638 = !DILocation(line: 2018, column: 5, scope: !2621)
!2639 = !DILocation(line: 2019, column: 20, scope: !2621)
!2640 = !{!897, !714, i64 176}
!2641 = !DILocation(line: 2019, column: 5, scope: !2621)
!2642 = !DILocation(line: 2020, column: 20, scope: !2621)
!2643 = !{!897, !714, i64 184}
!2644 = !DILocation(line: 2020, column: 5, scope: !2621)
!2645 = !DILocation(line: 2022, column: 30, scope: !2621)
!2646 = !DILocation(line: 2022, column: 36, scope: !2621)
!2647 = !DILocation(line: 2022, column: 5, scope: !2621)
!2648 = !DILocation(line: 2023, column: 30, scope: !2621)
!2649 = !DILocation(line: 2023, column: 36, scope: !2621)
!2650 = !DILocation(line: 2023, column: 5, scope: !2621)
!2651 = !DILocation(line: 2024, column: 20, scope: !2621)
!2652 = !DILocation(line: 2024, column: 5, scope: !2621)
!2653 = !DILocation(line: 2025, column: 5, scope: !2621)
!2654 = !DILocation(line: 2026, column: 14, scope: !2621)
!2655 = !DILocation(line: 2026, column: 5, scope: !2621)
!2656 = !DILocation(line: 2028, column: 31, scope: !2621)
!2657 = !{!709, !714, i64 40}
!2658 = !DILocation(line: 2028, column: 39, scope: !2621)
!2659 = !DILocation(line: 2028, column: 10, scope: !2621)
!2660 = !DILocation(line: 2029, column: 5, scope: !2621)
!2661 = !DILocation(line: 2030, column: 24, scope: !2621)
!2662 = !DILocation(line: 2030, column: 5, scope: !2621)
!2663 = !DILocation(line: 2033, column: 12, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 2033, column: 9)
!2665 = !DILocation(line: 2033, column: 18, scope: !2664)
!2666 = !DILocation(line: 2033, column: 9, scope: !2621)
!2667 = !DILocation(line: 2034, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 2033, column: 35)
!2669 = !DILocation(line: 2035, column: 13, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 2035, column: 13)
!2671 = !{!897, !714, i64 168}
!2672 = !DILocation(line: 2035, column: 36, scope: !2670)
!2673 = !DILocation(line: 2035, column: 13, scope: !2668)
!2674 = !DILocation(line: 2036, column: 39, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 2035, column: 42)
!2676 = !DILocation(line: 2036, column: 18, scope: !2675)
!2677 = !DILocation(line: 2040, column: 13, scope: !2675)
!2678 = !DILocation(line: 2041, column: 32, scope: !2675)
!2679 = !DILocation(line: 2041, column: 13, scope: !2675)
!2680 = !DILocation(line: 2042, column: 9, scope: !2675)
!2681 = !DILocation(line: 2044, column: 22, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 2043, column: 44)
!2683 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 2042, column: 16)
!2684 = !DILocation(line: 2045, column: 45, scope: !2682)
!2685 = !DILocation(line: 2045, column: 17, scope: !2682)
!2686 = !DILocation(line: 2043, column: 20, scope: !2683)
!2687 = !DILocation(line: 2043, column: 13, scope: !2683)
!2688 = distinct !{!2688, !2687, !2689}
!2689 = !DILocation(line: 2046, column: 13, scope: !2683)
!2690 = !DILocation(line: 2048, column: 34, scope: !2668)
!2691 = !DILocation(line: 2049, column: 5, scope: !2668)
!2692 = !DILocation(line: 2050, column: 20, scope: !2621)
!2693 = !DILocation(line: 2050, column: 5, scope: !2621)
!2694 = !DILocation(line: 2052, column: 12, scope: !2627)
!2695 = !DILocation(line: 2052, column: 18, scope: !2627)
!2696 = !DILocation(line: 2052, column: 9, scope: !2621)
!2697 = !DILocation(line: 2053, column: 16, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 2053, column: 13)
!2699 = !DILocation(line: 2053, column: 26, scope: !2698)
!2700 = !DILocation(line: 2053, column: 50, scope: !2698)
!2701 = !DILocation(line: 2053, column: 56, scope: !2698)
!2702 = !DILocation(line: 2053, column: 65, scope: !2698)
!2703 = !DILocation(line: 2053, column: 13, scope: !2626)
!2704 = !DILocation(line: 2054, column: 13, scope: !2698)
!2705 = !DILocation(line: 2055, column: 23, scope: !2626)
!2706 = !DILocation(line: 2055, column: 29, scope: !2626)
!2707 = !DILocation(line: 2055, column: 19, scope: !2626)
!2708 = !DILocation(line: 0, scope: !2626)
!2709 = !DILocation(line: 2056, column: 14, scope: !2626)
!2710 = !DILocation(line: 2057, column: 9, scope: !2626)
!2711 = !DILocation(line: 2058, column: 9, scope: !2626)
!2712 = !DILocation(line: 2060, column: 12, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 2060, column: 9)
!2714 = !DILocation(line: 2059, column: 5, scope: !2626)
!2715 = !DILocation(line: 2060, column: 18, scope: !2713)
!2716 = !DILocation(line: 2060, column: 9, scope: !2621)
!2717 = !DILocation(line: 2061, column: 23, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2060, column: 34)
!2719 = !{!709, !714, i64 560}
!2720 = !DILocation(line: 2062, column: 26, scope: !2718)
!2721 = !DILocation(line: 2063, column: 5, scope: !2718)
!2722 = !DILocation(line: 2065, column: 14, scope: !2621)
!2723 = !DILocation(line: 2065, column: 5, scope: !2621)
!2724 = !DILocation(line: 2066, column: 14, scope: !2621)
!2725 = !{!897, !714, i64 40}
!2726 = !DILocation(line: 2066, column: 5, scope: !2621)
!2727 = !DILocation(line: 2067, column: 5, scope: !2621)
!2728 = !DILocation(line: 2068, column: 5, scope: !2621)
!2729 = !DILocation(line: 2069, column: 1, scope: !2621)
!2730 = !DISubprogram(name: "aeDeleteFileEvent", scope: !463, file: !463, line: 106, type: !2731, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{null, !461, !45, !45}
!2733 = !DISubprogram(name: "aeCreateFileEvent", scope: !463, file: !463, line: 104, type: !2734, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!45, !461, !45, !45, !475, !46}
!2736 = distinct !DISubprogram(name: "sendBulkToSlave", scope: !3, file: !3, line: 7913, type: !2737, scopeLine: 7913, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{null, !461, !45, !46, !45}
!2739 = !{!2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2740 = !DILocalVariable(name: "el", arg: 1, scope: !2736, file: !3, line: 7913, type: !461)
!2741 = !DILocalVariable(name: "fd", arg: 2, scope: !2736, file: !3, line: 7913, type: !45)
!2742 = !DILocalVariable(name: "privdata", arg: 3, scope: !2736, file: !3, line: 7913, type: !46)
!2743 = !DILocalVariable(name: "mask", arg: 4, scope: !2736, file: !3, line: 7913, type: !45)
!2744 = !DILocalVariable(name: "slave", scope: !2736, file: !3, line: 7914, type: !287)
!2745 = !DILocalVariable(name: "buf", scope: !2736, file: !3, line: 7917, type: !2331)
!2746 = !DILocalVariable(name: "nwritten", scope: !2736, file: !3, line: 7918, type: !1089)
!2747 = !DILocalVariable(name: "buflen", scope: !2736, file: !3, line: 7918, type: !1089)
!2748 = !DILocalVariable(name: "bulkcount", scope: !2749, file: !3, line: 7925, type: !165)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 7920, column: 32)
!2750 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 7920, column: 9)
!2751 = !DILocation(line: 0, scope: !2736)
!2752 = !DILocation(line: 7914, column: 26, scope: !2736)
!2753 = !DILocation(line: 7917, column: 5, scope: !2736)
!2754 = !DILocation(line: 7917, column: 10, scope: !2736)
!2755 = !DILocation(line: 7920, column: 16, scope: !2750)
!2756 = !DILocation(line: 7920, column: 26, scope: !2750)
!2757 = !DILocation(line: 7920, column: 9, scope: !2736)
!2758 = !DILocation(line: 7927, column: 34, scope: !2749)
!2759 = !DILocation(line: 7928, column: 20, scope: !2749)
!2760 = !DILocation(line: 7927, column: 21, scope: !2749)
!2761 = !DILocation(line: 0, scope: !2749)
!2762 = !DILocation(line: 7929, column: 32, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 7929, column: 13)
!2764 = !DILocation(line: 7929, column: 13, scope: !2763)
!2765 = !DILocation(line: 7929, column: 62, scope: !2763)
!2766 = !DILocation(line: 7929, column: 54, scope: !2763)
!2767 = !DILocation(line: 7929, column: 51, scope: !2763)
!2768 = !DILocation(line: 7929, column: 13, scope: !2749)
!2769 = !DILocation(line: 7937, column: 34, scope: !2736)
!2770 = !DILocation(line: 7932, column: 13, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 7930, column: 9)
!2772 = !DILocation(line: 7937, column: 18, scope: !2736)
!2773 = !DILocation(line: 7937, column: 5, scope: !2736)
!2774 = !DILocation(line: 7938, column: 26, scope: !2736)
!2775 = !DILocation(line: 7938, column: 14, scope: !2736)
!2776 = !DILocation(line: 7939, column: 16, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 7939, column: 9)
!2778 = !DILocation(line: 7939, column: 9, scope: !2736)
!2779 = !DILocation(line: 7941, column: 21, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 7939, column: 22)
!2781 = !DILocation(line: 7941, column: 13, scope: !2780)
!2782 = !DILocation(line: 7941, column: 56, scope: !2780)
!2783 = !DILocation(line: 7941, column: 47, scope: !2780)
!2784 = !DILocation(line: 7940, column: 9, scope: !2780)
!2785 = !DILocation(line: 7942, column: 9, scope: !2780)
!2786 = !DILocation(line: 7943, column: 9, scope: !2780)
!2787 = !DILocation(line: 7945, column: 21, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 7945, column: 9)
!2789 = !DILocation(line: 7945, column: 43, scope: !2788)
!2790 = !DILocation(line: 7945, column: 9, scope: !2736)
!2791 = !DILocation(line: 7947, column: 22, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 7945, column: 50)
!2793 = !DILocation(line: 7947, column: 13, scope: !2792)
!2794 = !DILocation(line: 7946, column: 9, scope: !2792)
!2795 = !DILocation(line: 7948, column: 9, scope: !2792)
!2796 = !DILocation(line: 7949, column: 9, scope: !2792)
!2797 = !DILocation(line: 7951, column: 22, scope: !2736)
!2798 = !DILocation(line: 7952, column: 36, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 7952, column: 9)
!2800 = !DILocation(line: 7952, column: 26, scope: !2799)
!2801 = !DILocation(line: 7952, column: 9, scope: !2736)
!2802 = !DILocation(line: 7953, column: 22, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 7952, column: 48)
!2804 = !DILocation(line: 7953, column: 9, scope: !2803)
!2805 = !DILocation(line: 7954, column: 25, scope: !2803)
!2806 = !DILocation(line: 7955, column: 34, scope: !2803)
!2807 = !DILocation(line: 7955, column: 44, scope: !2803)
!2808 = !DILocation(line: 7955, column: 9, scope: !2803)
!2809 = !DILocation(line: 7956, column: 16, scope: !2803)
!2810 = !DILocation(line: 7956, column: 26, scope: !2803)
!2811 = !DILocation(line: 7957, column: 38, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 7957, column: 13)
!2813 = !DILocation(line: 7957, column: 49, scope: !2812)
!2814 = !DILocation(line: 7957, column: 13, scope: !2812)
!2815 = !DILocation(line: 7958, column: 39, scope: !2812)
!2816 = !DILocation(line: 7957, column: 13, scope: !2803)
!2817 = !DILocation(line: 7959, column: 13, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 7958, column: 50)
!2819 = !DILocation(line: 7960, column: 13, scope: !2818)
!2820 = !DILocation(line: 7962, column: 27, scope: !2803)
!2821 = !DILocation(line: 7962, column: 9, scope: !2803)
!2822 = !DILocation(line: 7963, column: 9, scope: !2803)
!2823 = !DILocation(line: 7964, column: 5, scope: !2803)
!2824 = !DILocation(line: 7965, column: 1, scope: !2736)
!2825 = distinct !DISubprogram(name: "rdbSaveBackground", scope: !3, file: !3, line: 3789, type: !1232, scopeLine: 3789, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2826 = !{!2827, !2828}
!2827 = !DILocalVariable(name: "filename", arg: 1, scope: !2825, file: !3, line: 3789, type: !47)
!2828 = !DILocalVariable(name: "childpid", scope: !2825, file: !3, line: 3790, type: !539)
!2829 = !DILocation(line: 0, scope: !2825)
!2830 = !DILocation(line: 3792, column: 16, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 3792, column: 9)
!2832 = !DILocation(line: 3792, column: 31, scope: !2831)
!2833 = !DILocation(line: 3792, column: 9, scope: !2825)
!2834 = !DILocation(line: 3793, column: 16, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 3793, column: 9)
!2836 = !DILocation(line: 3793, column: 9, scope: !2835)
!2837 = !DILocation(line: 3793, column: 9, scope: !2825)
!2838 = !DILocation(line: 3793, column: 28, scope: !2835)
!2839 = !DILocation(line: 3794, column: 41, scope: !2825)
!2840 = !DILocation(line: 3794, column: 32, scope: !2825)
!2841 = !DILocation(line: 3795, column: 21, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 3795, column: 9)
!2843 = !DILocation(line: 3795, column: 9, scope: !2825)
!2844 = !DILocation(line: 3797, column: 20, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 3797, column: 13)
!2846 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 3795, column: 35)
!2847 = !DILocation(line: 3797, column: 13, scope: !2845)
!2848 = !DILocation(line: 3797, column: 13, scope: !2846)
!2849 = !DILocation(line: 3797, column: 32, scope: !2845)
!2850 = !DILocation(line: 3798, column: 22, scope: !2846)
!2851 = !{!709, !713, i64 12}
!2852 = !DILocation(line: 3798, column: 9, scope: !2846)
!2853 = !DILocation(line: 3799, column: 13, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 3799, column: 13)
!2855 = !DILocation(line: 3799, column: 31, scope: !2854)
!2856 = !DILocation(line: 3799, column: 13, scope: !2846)
!2857 = !DILocation(line: 3800, column: 13, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 3799, column: 44)
!2859 = !DILocation(line: 3802, column: 13, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 3801, column: 16)
!2861 = !DILocation(line: 3808, column: 26, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 3806, column: 29)
!2863 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 3806, column: 13)
!2864 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 3804, column: 12)
!2865 = !DILocation(line: 3808, column: 17, scope: !2862)
!2866 = !DILocation(line: 3807, column: 13, scope: !2862)
!2867 = !DILocation(line: 3809, column: 13, scope: !2862)
!2868 = !DILocation(line: 3811, column: 9, scope: !2864)
!2869 = !DILocation(line: 3812, column: 31, scope: !2864)
!2870 = !DILocation(line: 3813, column: 9, scope: !2864)
!2871 = !DILocation(line: 3814, column: 9, scope: !2864)
!2872 = !DILocation(line: 3817, column: 1, scope: !2825)
!2873 = distinct !DISubprogram(name: "unblockClientWaitingData", scope: !3, file: !3, line: 7651, type: !340, scopeLine: 7651, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2874)
!2874 = !{!2875, !2876, !2877, !2878}
!2875 = !DILocalVariable(name: "c", arg: 1, scope: !2873, file: !3, line: 7651, type: !287)
!2876 = !DILocalVariable(name: "de", scope: !2873, file: !3, line: 7652, type: !124)
!2877 = !DILocalVariable(name: "l", scope: !2873, file: !3, line: 7653, type: !58)
!2878 = !DILocalVariable(name: "j", scope: !2873, file: !3, line: 7654, type: !45)
!2879 = !DILocation(line: 0, scope: !2873)
!2880 = !DILocation(line: 7656, column: 5, scope: !2873)
!2881 = !{!897, !714, i64 144}
!2882 = !DILocation(line: 7658, column: 24, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 7658, column: 5)
!2884 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 7658, column: 5)
!2885 = !{!897, !713, i64 152}
!2886 = !DILocation(line: 7658, column: 19, scope: !2883)
!2887 = !DILocation(line: 7658, column: 5, scope: !2884)
!2888 = !DILocation(line: 7660, column: 26, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 7658, column: 46)
!2890 = !{!897, !714, i64 8}
!2891 = !DILocation(line: 7660, column: 30, scope: !2889)
!2892 = !{!2354, !714, i64 16}
!2893 = !DILocation(line: 7660, column: 43, scope: !2889)
!2894 = !DILocation(line: 7660, column: 14, scope: !2889)
!2895 = !DILocation(line: 7661, column: 9, scope: !2889)
!2896 = !DILocation(line: 7662, column: 13, scope: !2889)
!2897 = !DILocation(line: 7663, column: 23, scope: !2889)
!2898 = !DILocation(line: 7663, column: 9, scope: !2889)
!2899 = !DILocation(line: 7665, column: 13, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 7665, column: 13)
!2901 = !DILocation(line: 7665, column: 27, scope: !2900)
!2902 = !DILocation(line: 7665, column: 13, scope: !2889)
!2903 = !DILocation(line: 7666, column: 27, scope: !2900)
!2904 = !DILocation(line: 7666, column: 31, scope: !2900)
!2905 = !DILocation(line: 7666, column: 47, scope: !2900)
!2906 = !DILocation(line: 7666, column: 44, scope: !2900)
!2907 = !DILocation(line: 7666, column: 13, scope: !2900)
!2908 = !DILocation(line: 7667, column: 25, scope: !2889)
!2909 = !DILocation(line: 7667, column: 22, scope: !2889)
!2910 = !DILocation(line: 7667, column: 9, scope: !2889)
!2911 = !DILocation(line: 7658, column: 42, scope: !2883)
!2912 = distinct !{!2912, !2887, !2913}
!2913 = !DILocation(line: 7668, column: 5, scope: !2884)
!2914 = !DILocation(line: 7660, column: 46, scope: !2889)
!2915 = !DILocation(line: 7670, column: 14, scope: !2873)
!2916 = !DILocation(line: 7670, column: 5, scope: !2873)
!2917 = !DILocation(line: 7671, column: 21, scope: !2873)
!2918 = !DILocation(line: 7672, column: 8, scope: !2873)
!2919 = !DILocation(line: 7672, column: 14, scope: !2873)
!2920 = !DILocation(line: 7673, column: 33, scope: !2873)
!2921 = !{!709, !713, i64 584}
!2922 = !DILocation(line: 7679, column: 12, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 7679, column: 9)
!2924 = !DILocation(line: 7679, column: 9, scope: !2923)
!2925 = !DILocation(line: 7679, column: 21, scope: !2923)
!2926 = !DILocation(line: 7679, column: 24, scope: !2923)
!2927 = !DILocation(line: 7679, column: 44, scope: !2923)
!2928 = !DILocation(line: 7679, column: 9, scope: !2873)
!2929 = !DILocation(line: 7679, column: 49, scope: !2923)
!2930 = !DILocation(line: 7680, column: 1, scope: !2873)
!2931 = distinct !DISubprogram(name: "pubsubUnsubscribeAllChannels", scope: !3, file: !3, line: 10318, type: !2932, scopeLine: 10318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2934)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!45, !287, !45}
!2934 = !{!2935, !2936, !2937, !2947, !2948, !2949}
!2935 = !DILocalVariable(name: "c", arg: 1, scope: !2931, file: !3, line: 10318, type: !287)
!2936 = !DILocalVariable(name: "notify", arg: 2, scope: !2931, file: !3, line: 10318, type: !45)
!2937 = !DILocalVariable(name: "di", scope: !2931, file: !3, line: 10319, type: !2938)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !88, line: 82, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !88, line: 77, size: 256, elements: !2941)
!2941 = !{!2942, !2943, !2944, !2945, !2946}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2940, file: !88, line: 78, baseType: !86, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2940, file: !88, line: 79, baseType: !45, size: 32, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2940, file: !88, line: 80, baseType: !45, size: 32, offset: 96)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2940, file: !88, line: 81, baseType: !124, size: 64, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !2940, file: !88, line: 81, baseType: !124, size: 64, offset: 192)
!2947 = !DILocalVariable(name: "de", scope: !2931, file: !3, line: 10320, type: !124)
!2948 = !DILocalVariable(name: "count", scope: !2931, file: !3, line: 10321, type: !45)
!2949 = !DILocalVariable(name: "channel", scope: !2950, file: !3, line: 10324, type: !145)
!2950 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 10323, column: 40)
!2951 = !DILocation(line: 0, scope: !2931)
!2952 = !DILocation(line: 10319, column: 43, scope: !2931)
!2953 = !DILocation(line: 10319, column: 24, scope: !2931)
!2954 = !DILocation(line: 10323, column: 17, scope: !2931)
!2955 = !DILocation(line: 10323, column: 31, scope: !2931)
!2956 = !DILocation(line: 10323, column: 5, scope: !2931)
!2957 = !DILocation(line: 10324, column: 25, scope: !2950)
!2958 = !DILocation(line: 0, scope: !2950)
!2959 = !DILocation(line: 10326, column: 18, scope: !2950)
!2960 = !DILocation(line: 10326, column: 15, scope: !2950)
!2961 = distinct !{!2961, !2956, !2962}
!2962 = !DILocation(line: 10327, column: 5, scope: !2931)
!2963 = !DILocation(line: 10328, column: 5, scope: !2931)
!2964 = !DILocation(line: 10329, column: 5, scope: !2931)
!2965 = distinct !DISubprogram(name: "pubsubUnsubscribeAllPatterns", scope: !3, file: !3, line: 10334, type: !2932, scopeLine: 10334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2966)
!2966 = !{!2967, !2968, !2969, !2970, !2971, !2972}
!2967 = !DILocalVariable(name: "c", arg: 1, scope: !2965, file: !3, line: 10334, type: !287)
!2968 = !DILocalVariable(name: "notify", arg: 2, scope: !2965, file: !3, line: 10334, type: !45)
!2969 = !DILocalVariable(name: "ln", scope: !2965, file: !3, line: 10335, type: !64)
!2970 = !DILocalVariable(name: "li", scope: !2965, file: !3, line: 10336, type: !831)
!2971 = !DILocalVariable(name: "count", scope: !2965, file: !3, line: 10337, type: !45)
!2972 = !DILocalVariable(name: "pattern", scope: !2973, file: !3, line: 10341, type: !145)
!2973 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 10340, column: 42)
!2974 = !DILocation(line: 0, scope: !2965)
!2975 = !DILocation(line: 10336, column: 5, scope: !2965)
!2976 = !DILocation(line: 10336, column: 14, scope: !2965)
!2977 = !DILocation(line: 10339, column: 19, scope: !2965)
!2978 = !DILocation(line: 10339, column: 5, scope: !2965)
!2979 = !DILocation(line: 10340, column: 18, scope: !2965)
!2980 = !DILocation(line: 10340, column: 33, scope: !2965)
!2981 = !DILocation(line: 10340, column: 5, scope: !2965)
!2982 = !DILocation(line: 10341, column: 29, scope: !2973)
!2983 = !DILocation(line: 0, scope: !2973)
!2984 = !DILocation(line: 10343, column: 18, scope: !2973)
!2985 = !DILocation(line: 10343, column: 15, scope: !2973)
!2986 = distinct !{!2986, !2981, !2987}
!2987 = !DILocation(line: 10344, column: 5, scope: !2965)
!2988 = !DILocation(line: 10346, column: 1, scope: !2965)
!2989 = !DILocation(line: 10345, column: 5, scope: !2965)
!2990 = !DISubprogram(name: "dictRelease", scope: !88, file: !88, line: 130, type: !2991, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{null, !86}
!2993 = !DISubprogram(name: "listRelease", scope: !60, file: !60, line: 74, type: !2994, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{null, !58}
!2996 = distinct !DISubprogram(name: "freeClientArgv", scope: !3, file: !3, line: 1992, type: !340, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2997)
!2997 = !{!2998, !2999}
!2998 = !DILocalVariable(name: "c", arg: 1, scope: !2996, file: !3, line: 1992, type: !287)
!2999 = !DILocalVariable(name: "j", scope: !2996, file: !3, line: 1993, type: !45)
!3000 = !DILocation(line: 0, scope: !2996)
!3001 = !DILocation(line: 1995, column: 24, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 1995, column: 5)
!3003 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1995, column: 5)
!3004 = !DILocation(line: 1995, column: 19, scope: !3002)
!3005 = !DILocation(line: 1995, column: 5, scope: !3003)
!3006 = !DILocation(line: 1997, column: 24, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 1997, column: 5)
!3008 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1997, column: 5)
!3009 = !{!897, !713, i64 52}
!3010 = !DILocation(line: 1997, column: 19, scope: !3007)
!3011 = !DILocation(line: 1997, column: 5, scope: !3008)
!3012 = !DILocation(line: 1996, column: 25, scope: !3002)
!3013 = !DILocation(line: 1996, column: 22, scope: !3002)
!3014 = !DILocation(line: 1996, column: 9, scope: !3002)
!3015 = !DILocation(line: 1995, column: 31, scope: !3002)
!3016 = distinct !{!3016, !3005, !3017}
!3017 = !DILocation(line: 1996, column: 32, scope: !3003)
!3018 = !DILocation(line: 1998, column: 25, scope: !3007)
!3019 = !DILocation(line: 1998, column: 22, scope: !3007)
!3020 = !DILocation(line: 1998, column: 9, scope: !3007)
!3021 = !DILocation(line: 1997, column: 33, scope: !3007)
!3022 = distinct !{!3022, !3011, !3023}
!3023 = !DILocation(line: 1998, column: 34, scope: !3008)
!3024 = !DILocation(line: 1999, column: 13, scope: !2996)
!3025 = !DILocation(line: 2000, column: 15, scope: !2996)
!3026 = !DILocation(line: 2001, column: 1, scope: !2996)
!3027 = !DISubprogram(name: "listSearchKey", scope: !60, file: !60, line: 82, type: !3028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!64, !58, !46}
!3030 = distinct !DISubprogram(name: "_redisAssert", scope: !3, file: !3, line: 10744, type: !3031, scopeLine: 10744, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3033)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{null, !47, !47, !45}
!3033 = !{!3034, !3035, !3036}
!3034 = !DILocalVariable(name: "estr", arg: 1, scope: !3030, file: !3, line: 10744, type: !47)
!3035 = !DILocalVariable(name: "file", arg: 2, scope: !3030, file: !3, line: 10744, type: !47)
!3036 = !DILocalVariable(name: "line", arg: 3, scope: !3030, file: !3, line: 10744, type: !45)
!3037 = !DILocation(line: 0, scope: !3030)
!3038 = !DILocation(line: 10745, column: 5, scope: !3030)
!3039 = !DILocation(line: 10746, column: 5, scope: !3030)
!3040 = !DILocation(line: 10748, column: 5, scope: !3030)
!3041 = !DILocation(line: 10749, column: 18, scope: !3030)
!3042 = !DILocation(line: 10751, column: 1, scope: !3030)
!3043 = distinct !DISubprogram(name: "dontWaitForSwappedKey", scope: !3, file: !3, line: 9913, type: !3044, scopeLine: 9913, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3046)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!45, !287, !145}
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052}
!3047 = !DILocalVariable(name: "c", arg: 1, scope: !3043, file: !3, line: 9913, type: !287)
!3048 = !DILocalVariable(name: "key", arg: 2, scope: !3043, file: !3, line: 9913, type: !145)
!3049 = !DILocalVariable(name: "l", scope: !3043, file: !3, line: 9914, type: !58)
!3050 = !DILocalVariable(name: "ln", scope: !3043, file: !3, line: 9915, type: !64)
!3051 = !DILocalVariable(name: "li", scope: !3043, file: !3, line: 9916, type: !831)
!3052 = !DILocalVariable(name: "de", scope: !3043, file: !3, line: 9917, type: !131)
!3053 = !DILocation(line: 0, scope: !3043)
!3054 = !DILocation(line: 9916, column: 5, scope: !3043)
!3055 = !DILocation(line: 9916, column: 14, scope: !3043)
!3056 = !DILocation(line: 9922, column: 5, scope: !3043)
!3057 = !DILocation(line: 9925, column: 19, scope: !3043)
!3058 = !DILocation(line: 9925, column: 5, scope: !3043)
!3059 = !DILocation(line: 9926, column: 5, scope: !3043)
!3060 = !DILocation(line: 9926, column: 18, scope: !3043)
!3061 = !DILocation(line: 9926, column: 33, scope: !3043)
!3062 = !DILocation(line: 9927, column: 36, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 9927, column: 13)
!3064 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 9926, column: 42)
!3065 = !DILocation(line: 9927, column: 13, scope: !3063)
!3066 = !DILocation(line: 9927, column: 13, scope: !3064)
!3067 = distinct !{!3067, !3059, !3068}
!3068 = !DILocation(line: 9931, column: 5, scope: !3043)
!3069 = !DILocation(line: 9932, column: 5, scope: !3043)
!3070 = !DILocation(line: 9928, column: 28, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 9927, column: 48)
!3072 = !DILocation(line: 9928, column: 13, scope: !3071)
!3073 = !DILocation(line: 9935, column: 22, scope: !3043)
!3074 = !DILocation(line: 9935, column: 26, scope: !3043)
!3075 = !{!2354, !714, i64 24}
!3076 = !DILocation(line: 9935, column: 34, scope: !3043)
!3077 = !DILocation(line: 9935, column: 10, scope: !3043)
!3078 = !DILocation(line: 9936, column: 5, scope: !3043)
!3079 = !DILocation(line: 9937, column: 9, scope: !3043)
!3080 = !DILocation(line: 9938, column: 26, scope: !3043)
!3081 = !DILocation(line: 9938, column: 10, scope: !3043)
!3082 = !DILocation(line: 9939, column: 5, scope: !3043)
!3083 = !DILocation(line: 9940, column: 5, scope: !3043)
!3084 = !DILocation(line: 9941, column: 9, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 9941, column: 9)
!3086 = !DILocation(line: 9941, column: 23, scope: !3085)
!3087 = !DILocation(line: 9941, column: 9, scope: !3043)
!3088 = !DILocation(line: 9942, column: 23, scope: !3085)
!3089 = !DILocation(line: 9942, column: 27, scope: !3085)
!3090 = !DILocation(line: 9942, column: 9, scope: !3085)
!3091 = !DILocation(line: 9944, column: 5, scope: !3043)
!3092 = !DILocation(line: 9945, column: 12, scope: !3043)
!3093 = !DILocation(line: 9945, column: 35, scope: !3043)
!3094 = !DILocation(line: 9946, column: 1, scope: !3043)
!3095 = !DILocation(line: 9945, column: 5, scope: !3043)
!3096 = distinct !DISubprogram(name: "freeClientMultiState", scope: !3, file: !3, line: 7486, type: !340, scopeLine: 7486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3097)
!3097 = !{!3098, !3099, !3100, !3104}
!3098 = !DILocalVariable(name: "c", arg: 1, scope: !3096, file: !3, line: 7486, type: !287)
!3099 = !DILocalVariable(name: "j", scope: !3096, file: !3, line: 7487, type: !45)
!3100 = !DILocalVariable(name: "i", scope: !3101, file: !3, line: 7490, type: !45)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 7489, column: 43)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !3, line: 7489, column: 5)
!3103 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 7489, column: 5)
!3104 = !DILocalVariable(name: "mc", scope: !3101, file: !3, line: 7491, type: !326)
!3105 = !DILocation(line: 0, scope: !3096)
!3106 = !DILocation(line: 7489, column: 31, scope: !3102)
!3107 = !{!897, !713, i64 136}
!3108 = !DILocation(line: 7489, column: 19, scope: !3102)
!3109 = !DILocation(line: 7489, column: 5, scope: !3103)
!3110 = !DILocation(line: 7491, column: 34, scope: !3101)
!3111 = !{!897, !714, i64 128}
!3112 = !DILocation(line: 7491, column: 42, scope: !3101)
!3113 = !DILocation(line: 0, scope: !3101)
!3114 = !DILocation(line: 7493, column: 29, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 7493, column: 9)
!3116 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 7493, column: 9)
!3117 = !{!3118, !713, i64 8}
!3118 = !{!"multiCmd", !714, i64 0, !713, i64 8, !714, i64 16}
!3119 = !DILocation(line: 7493, column: 23, scope: !3115)
!3120 = !DILocation(line: 7493, column: 9, scope: !3116)
!3121 = !DILocation(line: 7494, column: 30, scope: !3115)
!3122 = !{!3118, !714, i64 0}
!3123 = !DILocation(line: 7494, column: 26, scope: !3115)
!3124 = !DILocation(line: 7494, column: 13, scope: !3115)
!3125 = !DILocation(line: 7493, column: 36, scope: !3115)
!3126 = distinct !{!3126, !3120, !3127}
!3127 = !DILocation(line: 7494, column: 37, scope: !3116)
!3128 = !DILocation(line: 7495, column: 19, scope: !3101)
!3129 = !DILocation(line: 7495, column: 9, scope: !3101)
!3130 = !DILocation(line: 7489, column: 39, scope: !3102)
!3131 = distinct !{!3131, !3109, !3132}
!3132 = !DILocation(line: 7496, column: 5, scope: !3103)
!3133 = !DILocation(line: 7497, column: 21, scope: !3096)
!3134 = !DILocation(line: 7497, column: 5, scope: !3096)
!3135 = !DILocation(line: 7498, column: 1, scope: !3096)
!3136 = !DISubprogram(name: "dictFind", scope: !88, file: !88, line: 131, type: !3137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!124, !86, !100}
!3139 = !DISubprogram(name: "dictDelete", scope: !88, file: !88, line: 128, type: !3140, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!45, !86, !100}
!3142 = distinct !DISubprogram(name: "processInputBuffer", scope: !3, file: !3, line: 2586, type: !340, scopeLine: 2586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3143)
!3143 = !{!3144, !3145, !3148, !3149, !3152, !3153, !3154, !3155, !3157}
!3144 = !DILocalVariable(name: "c", arg: 1, scope: !3142, file: !3, line: 2586, type: !287)
!3145 = !DILocalVariable(name: "p", scope: !3146, file: !3, line: 2597, type: !47)
!3146 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 2595, column: 27)
!3147 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 2595, column: 9)
!3148 = !DILocalVariable(name: "querylen", scope: !3146, file: !3, line: 2598, type: !196)
!3149 = !DILocalVariable(name: "query", scope: !3150, file: !3, line: 2601, type: !165)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 2600, column: 16)
!3151 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 2600, column: 13)
!3152 = !DILocalVariable(name: "argv", scope: !3150, file: !3, line: 2601, type: !1849)
!3153 = !DILocalVariable(name: "argc", scope: !3150, file: !3, line: 2602, type: !45)
!3154 = !DILocalVariable(name: "j", scope: !3150, file: !3, line: 2602, type: !45)
!3155 = !DILocalVariable(name: "qbl", scope: !3156, file: !3, line: 2652, type: !45)
!3156 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 2647, column: 12)
!3157 = !DILabel(scope: !3142, name: "again", file: !3, line: 2587)
!3158 = !DILocation(line: 0, scope: !3142)
!3159 = !DILocation(line: 2587, column: 1, scope: !3142)
!3160 = !DILocation(line: 2594, column: 12, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 2594, column: 9)
!3162 = !DILocation(line: 2594, column: 34, scope: !3161)
!3163 = !DILocation(line: 2595, column: 12, scope: !3147)
!3164 = !{!897, !713, i64 56}
!3165 = !DILocation(line: 2595, column: 20, scope: !3147)
!3166 = !DILocation(line: 0, scope: !3147)
!3167 = !DILocation(line: 2595, column: 9, scope: !3142)
!3168 = !DILocation(line: 2597, column: 19, scope: !3146)
!3169 = !DILocation(line: 0, scope: !3146)
!3170 = !DILocation(line: 2600, column: 13, scope: !3151)
!3171 = !DILocation(line: 2600, column: 13, scope: !3146)
!3172 = !DILocation(line: 2602, column: 13, scope: !3150)
!3173 = !DILocation(line: 0, scope: !3150)
!3174 = !DILocation(line: 2605, column: 27, scope: !3150)
!3175 = !DILocation(line: 2605, column: 25, scope: !3150)
!3176 = !DILocation(line: 2606, column: 28, scope: !3150)
!3177 = !DILocation(line: 2606, column: 25, scope: !3150)
!3178 = !DILocation(line: 2607, column: 17, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2607, column: 17)
!3180 = !DILocation(line: 2607, column: 31, scope: !3179)
!3181 = !DILocation(line: 2607, column: 17, scope: !3150)
!3182 = !DILocation(line: 2609, column: 44, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 2607, column: 43)
!3184 = !DILocation(line: 2609, column: 58, scope: !3183)
!3185 = !DILocation(line: 2609, column: 68, scope: !3183)
!3186 = !DILocation(line: 2609, column: 81, scope: !3183)
!3187 = !DILocation(line: 2609, column: 31, scope: !3183)
!3188 = !DILocation(line: 2609, column: 29, scope: !3183)
!3189 = !DILocation(line: 2610, column: 13, scope: !3183)
!3190 = !DILocation(line: 2611, column: 16, scope: !3150)
!3191 = !DILocation(line: 2612, column: 20, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2612, column: 17)
!3193 = !DILocation(line: 2612, column: 17, scope: !3192)
!3194 = !DILocation(line: 2612, column: 24, scope: !3192)
!3195 = !DILocation(line: 2612, column: 17, scope: !3150)
!3196 = !DILocation(line: 2612, column: 40, scope: !3192)
!3197 = !DILocation(line: 2612, column: 33, scope: !3192)
!3198 = !DILocation(line: 2613, column: 13, scope: !3150)
!3199 = !DILocation(line: 2616, column: 38, scope: !3150)
!3200 = !DILocation(line: 2616, column: 20, scope: !3150)
!3201 = !DILocation(line: 2617, column: 13, scope: !3150)
!3202 = !DILocation(line: 2619, column: 20, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2619, column: 17)
!3204 = !DILocation(line: 2619, column: 17, scope: !3203)
!3205 = !DILocation(line: 2619, column: 17, scope: !3150)
!3206 = !DILocation(line: 2619, column: 32, scope: !3203)
!3207 = !DILocation(line: 2619, column: 26, scope: !3203)
!3208 = !DILocation(line: 2620, column: 45, scope: !3150)
!3209 = !DILocation(line: 2620, column: 44, scope: !3150)
!3210 = !DILocation(line: 2620, column: 23, scope: !3150)
!3211 = !DILocation(line: 2620, column: 21, scope: !3150)
!3212 = !DILocation(line: 2622, column: 29, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 2622, column: 13)
!3214 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2622, column: 13)
!3215 = !DILocation(line: 2622, column: 27, scope: !3213)
!3216 = !DILocation(line: 2622, column: 13, scope: !3214)
!3217 = !DILocation(line: 2623, column: 28, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 2623, column: 21)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 2622, column: 40)
!3220 = !DILocation(line: 2623, column: 21, scope: !3218)
!3221 = !DILocation(line: 0, scope: !3218)
!3222 = !DILocation(line: 2623, column: 21, scope: !3219)
!3223 = !DILocation(line: 2624, column: 40, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 2623, column: 38)
!3225 = !DILocation(line: 2624, column: 24, scope: !3224)
!3226 = !DILocation(line: 2624, column: 32, scope: !3224)
!3227 = !DILocation(line: 2624, column: 21, scope: !3224)
!3228 = !DILocation(line: 2624, column: 38, scope: !3224)
!3229 = !DILocation(line: 2625, column: 28, scope: !3224)
!3230 = !DILocation(line: 2626, column: 17, scope: !3224)
!3231 = !DILocation(line: 2627, column: 21, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 2626, column: 24)
!3233 = !DILocation(line: 2622, column: 36, scope: !3213)
!3234 = distinct !{!3234, !3216, !3235}
!3235 = !DILocation(line: 2629, column: 13, scope: !3214)
!3236 = !DILocation(line: 2630, column: 19, scope: !3150)
!3237 = !DILocation(line: 2630, column: 13, scope: !3150)
!3238 = !DILocation(line: 2631, column: 20, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 2631, column: 17)
!3240 = !DILocation(line: 2631, column: 17, scope: !3239)
!3241 = !DILocation(line: 2631, column: 17, scope: !3150)
!3242 = !DILocation(line: 2635, column: 21, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 2635, column: 21)
!3244 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2631, column: 26)
!3245 = !DILocation(line: 2635, column: 39, scope: !3243)
!3246 = !DILocation(line: 2635, column: 52, scope: !3243)
!3247 = !DILocation(line: 2635, column: 42, scope: !3243)
!3248 = !DILocation(line: 2635, column: 21, scope: !3244)
!3249 = !DILocation(line: 2639, column: 31, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 2639, column: 21)
!3251 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2636, column: 20)
!3252 = !DILocation(line: 2639, column: 21, scope: !3250)
!3253 = !DILocation(line: 2639, column: 21, scope: !3251)
!3254 = !DILocation(line: 2642, column: 9, scope: !3151)
!3255 = !DILocation(line: 2642, column: 20, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 2642, column: 20)
!3257 = !DILocation(line: 2642, column: 40, scope: !3256)
!3258 = !DILocation(line: 2642, column: 20, scope: !3151)
!3259 = !DILocation(line: 2643, column: 13, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 2642, column: 67)
!3261 = !DILocation(line: 2644, column: 13, scope: !3260)
!3262 = !DILocation(line: 2645, column: 13, scope: !3260)
!3263 = !DILocation(line: 2652, column: 19, scope: !3156)
!3264 = !DILocation(line: 0, scope: !3156)
!3265 = !DILocation(line: 2654, column: 16, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2654, column: 13)
!3267 = !DILocation(line: 2654, column: 24, scope: !3266)
!3268 = !DILocation(line: 2654, column: 13, scope: !3156)
!3269 = !DILocation(line: 2656, column: 54, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 2654, column: 32)
!3271 = !DILocation(line: 2656, column: 73, scope: !3270)
!3272 = !DILocation(line: 2656, column: 63, scope: !3270)
!3273 = !DILocation(line: 2656, column: 32, scope: !3270)
!3274 = !DILocation(line: 2656, column: 16, scope: !3270)
!3275 = !DILocation(line: 2656, column: 24, scope: !3270)
!3276 = !DILocation(line: 2656, column: 13, scope: !3270)
!3277 = !DILocation(line: 2656, column: 30, scope: !3270)
!3278 = !DILocation(line: 2657, column: 20, scope: !3270)
!3279 = !DILocation(line: 2658, column: 39, scope: !3270)
!3280 = !DILocation(line: 2658, column: 51, scope: !3270)
!3281 = !DILocation(line: 2658, column: 48, scope: !3270)
!3282 = !DILocation(line: 2658, column: 27, scope: !3270)
!3283 = !DILocation(line: 2658, column: 25, scope: !3270)
!3284 = !DILocation(line: 2662, column: 17, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 2662, column: 17)
!3286 = !DILocation(line: 2662, column: 35, scope: !3285)
!3287 = !DILocation(line: 2662, column: 48, scope: !3285)
!3288 = !DILocation(line: 2662, column: 38, scope: !3285)
!3289 = !DILocation(line: 2662, column: 17, scope: !3270)
!3290 = !DILocation(line: 2666, column: 1, scope: !3142)
!3291 = !DISubprogram(name: "strchr", scope: !1082, file: !1082, line: 226, type: !3292, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!47, !741, !45}
!3294 = !DISubprogram(name: "sdscatlen", scope: !166, file: !166, line: 51, type: !3295, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!165, !165, !46, !196}
!3297 = !DISubprogram(name: "sdsupdatelen", scope: !166, file: !166, line: 65, type: !1103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3298 = !DISubprogram(name: "sdssplitlen", scope: !166, file: !166, line: 67, type: !3299, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!1849, !47, !45, !47, !45, !3301}
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!3302 = distinct !DISubprogram(name: "processCommand", scope: !3, file: !3, line: 2285, type: !3303, scopeLine: 2285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3305)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!45, !287}
!3305 = !{!3306, !3307, !3308, !3316, !3320, !3321}
!3306 = !DILocalVariable(name: "c", arg: 1, scope: !3302, file: !3, line: 2285, type: !287)
!3307 = !DILocalVariable(name: "cmd", scope: !3302, file: !3, line: 2286, type: !333)
!3308 = !DILocalVariable(name: "bulklen", scope: !3309, file: !3, line: 2313, type: !45)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 2312, column: 20)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 2308, column: 17)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 2307, column: 31)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 2307, column: 13)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 2306, column: 30)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 2306, column: 16)
!3315 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2296, column: 9)
!3316 = !DILocalVariable(name: "auxargv", scope: !3317, file: !3, line: 2332, type: !305)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2331, column: 36)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 2331, column: 17)
!3319 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 2325, column: 16)
!3320 = !DILocalVariable(name: "auxargc", scope: !3317, file: !3, line: 2333, type: !45)
!3321 = !DILocalVariable(name: "bulklen", scope: !3322, file: !3, line: 2385, type: !45)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 2383, column: 65)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 2383, column: 16)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 2375, column: 16)
!3325 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2369, column: 9)
!3326 = !DILocation(line: 0, scope: !3302)
!3327 = !DILocation(line: 2289, column: 16, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2289, column: 9)
!3329 = !DILocation(line: 2289, column: 9, scope: !3328)
!3330 = !DILocation(line: 2289, column: 9, scope: !3302)
!3331 = !DILocation(line: 2289, column: 27, scope: !3328)
!3332 = !DILocation(line: 2296, column: 12, scope: !3315)
!3333 = !{!897, !713, i64 60}
!3334 = !DILocation(line: 2296, column: 22, scope: !3315)
!3335 = !DILocation(line: 2296, column: 27, scope: !3315)
!3336 = !DILocation(line: 2296, column: 33, scope: !3315)
!3337 = !DILocation(line: 2296, column: 38, scope: !3315)
!3338 = !DILocation(line: 2296, column: 43, scope: !3315)
!3339 = !DILocation(line: 2296, column: 55, scope: !3315)
!3340 = !DILocation(line: 2296, column: 67, scope: !3315)
!3341 = !DILocation(line: 2296, column: 46, scope: !3315)
!3342 = !DILocation(line: 2296, column: 76, scope: !3315)
!3343 = !DILocation(line: 2296, column: 9, scope: !3302)
!3344 = !DILocation(line: 2297, column: 53, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 2296, column: 84)
!3346 = !DILocation(line: 2297, column: 24, scope: !3345)
!3347 = !DILocation(line: 2297, column: 22, scope: !3345)
!3348 = !DILocation(line: 2298, column: 26, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 2298, column: 13)
!3350 = !DILocation(line: 2298, column: 13, scope: !3345)
!3351 = !DILocation(line: 2299, column: 13, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 2298, column: 32)
!3353 = !DILocation(line: 2300, column: 13, scope: !3352)
!3354 = !DILocation(line: 2302, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 2301, column: 16)
!3356 = !DILocation(line: 2303, column: 20, scope: !3355)
!3357 = !DILocation(line: 2304, column: 13, scope: !3355)
!3358 = !DILocation(line: 2307, column: 16, scope: !3312)
!3359 = !DILocation(line: 2307, column: 24, scope: !3312)
!3360 = !DILocation(line: 2307, column: 13, scope: !3313)
!3361 = !DILocation(line: 2308, column: 28, scope: !3310)
!3362 = !DILocation(line: 2308, column: 25, scope: !3310)
!3363 = !DILocation(line: 2308, column: 37, scope: !3310)
!3364 = !DILocation(line: 2308, column: 17, scope: !3310)
!3365 = !DILocation(line: 2308, column: 45, scope: !3310)
!3366 = !DILocation(line: 2308, column: 17, scope: !3311)
!3367 = !DILocation(line: 2309, column: 31, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 2308, column: 53)
!3369 = !DILocation(line: 2309, column: 17, scope: !3368)
!3370 = !DILocation(line: 2310, column: 17, scope: !3368)
!3371 = !DILocation(line: 2311, column: 17, scope: !3368)
!3372 = !DILocation(line: 2313, column: 60, scope: !3309)
!3373 = !DILocation(line: 2313, column: 31, scope: !3309)
!3374 = !DILocation(line: 0, scope: !3309)
!3375 = !DILocation(line: 2314, column: 30, scope: !3309)
!3376 = !DILocation(line: 2314, column: 17, scope: !3309)
!3377 = !DILocation(line: 2315, column: 33, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 2315, column: 21)
!3379 = !DILocation(line: 2317, column: 35, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 2315, column: 62)
!3381 = !DILocation(line: 2317, column: 21, scope: !3380)
!3382 = !DILocation(line: 2318, column: 21, scope: !3380)
!3383 = !DILocation(line: 2319, column: 21, scope: !3380)
!3384 = !DILocation(line: 2322, column: 37, scope: !3309)
!3385 = !DILocation(line: 2322, column: 28, scope: !3309)
!3386 = !DILocation(line: 2323, column: 17, scope: !3309)
!3387 = !DILocation(line: 2326, column: 37, scope: !3319)
!3388 = !DILocation(line: 2326, column: 64, scope: !3319)
!3389 = !DILocation(line: 2326, column: 70, scope: !3319)
!3390 = !DILocation(line: 2326, column: 60, scope: !3319)
!3391 = !DILocation(line: 2326, column: 59, scope: !3319)
!3392 = !DILocation(line: 2326, column: 25, scope: !3319)
!3393 = !DILocation(line: 2326, column: 23, scope: !3319)
!3394 = !DILocation(line: 2327, column: 39, scope: !3319)
!3395 = !DILocation(line: 2327, column: 36, scope: !3319)
!3396 = !DILocation(line: 2327, column: 26, scope: !3319)
!3397 = !DILocation(line: 2327, column: 13, scope: !3319)
!3398 = !DILocation(line: 2327, column: 34, scope: !3319)
!3399 = !DILocation(line: 2328, column: 22, scope: !3319)
!3400 = !DILocation(line: 2329, column: 16, scope: !3319)
!3401 = !DILocation(line: 2329, column: 20, scope: !3319)
!3402 = !DILocation(line: 2330, column: 25, scope: !3319)
!3403 = !DILocation(line: 2331, column: 30, scope: !3318)
!3404 = !DILocation(line: 2331, column: 17, scope: !3319)
!3405 = !DILocation(line: 2337, column: 30, scope: !3317)
!3406 = !DILocation(line: 0, scope: !3317)
!3407 = !DILocation(line: 2338, column: 30, scope: !3317)
!3408 = !DILocation(line: 2338, column: 25, scope: !3317)
!3409 = !DILocation(line: 2339, column: 27, scope: !3317)
!3410 = !DILocation(line: 2342, column: 25, scope: !3317)
!3411 = !DILocation(line: 2343, column: 27, scope: !3317)
!3412 = !DILocation(line: 2349, column: 28, scope: !3317)
!3413 = !DILocation(line: 2356, column: 5, scope: !3313)
!3414 = !DILocation(line: 2352, column: 28, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2351, column: 20)
!3416 = !DILocation(line: 2353, column: 17, scope: !3415)
!3417 = !DILocation(line: 2361, column: 24, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2361, column: 9)
!3419 = !DILocation(line: 2361, column: 21, scope: !3418)
!3420 = !DILocation(line: 2361, column: 33, scope: !3418)
!3421 = !DILocation(line: 2361, column: 10, scope: !3418)
!3422 = !DILocation(line: 2361, column: 9, scope: !3302)
!3423 = !DILocation(line: 2362, column: 9, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 2361, column: 46)
!3425 = !DILocation(line: 2363, column: 9, scope: !3424)
!3426 = !DILocation(line: 2368, column: 11, scope: !3302)
!3427 = !DILocation(line: 2369, column: 10, scope: !3325)
!3428 = !DILocation(line: 2369, column: 9, scope: !3302)
!3429 = !DILocation(line: 2371, column: 26, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 2369, column: 15)
!3431 = !DILocation(line: 2372, column: 27, scope: !3430)
!3432 = !DILocation(line: 2372, column: 24, scope: !3430)
!3433 = !DILocation(line: 2372, column: 36, scope: !3430)
!3434 = !DILocation(line: 2371, column: 13, scope: !3430)
!3435 = !DILocation(line: 2370, column: 9, scope: !3430)
!3436 = !DILocation(line: 2373, column: 9, scope: !3430)
!3437 = !DILocation(line: 2374, column: 9, scope: !3430)
!3438 = !DILocation(line: 2375, column: 22, scope: !3324)
!3439 = !{!1341, !713, i64 16}
!3440 = !DILocation(line: 2375, column: 28, scope: !3324)
!3441 = !DILocation(line: 2375, column: 32, scope: !3324)
!3442 = !DILocation(line: 2376, column: 20, scope: !3324)
!3443 = !DILocation(line: 2376, column: 27, scope: !3324)
!3444 = !DILocation(line: 2376, column: 25, scope: !3324)
!3445 = !DILocation(line: 2375, column: 16, scope: !3325)
!3446 = !DILocation(line: 2378, column: 26, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 2376, column: 41)
!3448 = !DILocation(line: 2380, column: 22, scope: !3447)
!3449 = !DILocation(line: 2378, column: 13, scope: !3447)
!3450 = !DILocation(line: 2377, column: 9, scope: !3447)
!3451 = !DILocation(line: 2381, column: 9, scope: !3447)
!3452 = !DILocation(line: 2382, column: 9, scope: !3447)
!3453 = !DILocation(line: 2383, column: 21, scope: !3323)
!3454 = !DILocation(line: 2383, column: 27, scope: !3323)
!3455 = !DILocation(line: 2383, column: 44, scope: !3323)
!3456 = !DILocation(line: 2383, column: 50, scope: !3323)
!3457 = !DILocation(line: 2383, column: 58, scope: !3323)
!3458 = !DILocation(line: 2383, column: 16, scope: !3324)
!3459 = !DILocation(line: 2385, column: 43, scope: !3322)
!3460 = !DILocation(line: 2385, column: 28, scope: !3322)
!3461 = !DILocation(line: 2385, column: 48, scope: !3322)
!3462 = !DILocation(line: 2385, column: 23, scope: !3322)
!3463 = !DILocation(line: 0, scope: !3322)
!3464 = !DILocation(line: 2387, column: 22, scope: !3322)
!3465 = !DILocation(line: 2387, column: 9, scope: !3322)
!3466 = !DILocation(line: 2388, column: 25, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 2388, column: 13)
!3468 = !DILocation(line: 2390, column: 27, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 2388, column: 54)
!3470 = !DILocation(line: 2390, column: 13, scope: !3469)
!3471 = !DILocation(line: 2391, column: 13, scope: !3469)
!3472 = !DILocation(line: 2392, column: 13, scope: !3469)
!3473 = !DILocation(line: 2395, column: 29, scope: !3322)
!3474 = !DILocation(line: 2395, column: 20, scope: !3322)
!3475 = !DILocation(line: 2401, column: 31, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 2401, column: 13)
!3477 = !DILocation(line: 2401, column: 21, scope: !3476)
!3478 = !DILocation(line: 2401, column: 13, scope: !3476)
!3479 = !DILocation(line: 2401, column: 47, scope: !3476)
!3480 = !DILocation(line: 2401, column: 41, scope: !3476)
!3481 = !DILocation(line: 2401, column: 13, scope: !3322)
!3482 = !DILocation(line: 2402, column: 54, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 2401, column: 56)
!3484 = !DILocation(line: 2402, column: 73, scope: !3483)
!3485 = !DILocation(line: 2402, column: 63, scope: !3483)
!3486 = !DILocation(line: 2402, column: 32, scope: !3483)
!3487 = !DILocation(line: 2402, column: 16, scope: !3483)
!3488 = !DILocation(line: 2402, column: 24, scope: !3483)
!3489 = !DILocation(line: 2402, column: 13, scope: !3483)
!3490 = !DILocation(line: 2402, column: 30, scope: !3483)
!3491 = !DILocation(line: 2403, column: 20, scope: !3483)
!3492 = !DILocation(line: 2404, column: 39, scope: !3483)
!3493 = !DILocation(line: 2404, column: 51, scope: !3483)
!3494 = !DILocation(line: 2404, column: 48, scope: !3483)
!3495 = !DILocation(line: 2404, column: 27, scope: !3483)
!3496 = !DILocation(line: 2404, column: 25, scope: !3483)
!3497 = !DILocation(line: 2412, column: 14, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2412, column: 9)
!3499 = !DILocation(line: 2412, column: 20, scope: !3498)
!3500 = !DILocation(line: 2412, column: 9, scope: !3302)
!3501 = !DILocation(line: 2413, column: 51, scope: !3498)
!3502 = !DILocation(line: 2413, column: 59, scope: !3498)
!3503 = !DILocation(line: 2413, column: 63, scope: !3498)
!3504 = !DILocation(line: 2413, column: 48, scope: !3498)
!3505 = !DILocation(line: 2413, column: 30, scope: !3498)
!3506 = !DILocation(line: 2413, column: 12, scope: !3498)
!3507 = !DILocation(line: 2413, column: 20, scope: !3498)
!3508 = !DILocation(line: 2413, column: 24, scope: !3498)
!3509 = !DILocation(line: 2413, column: 9, scope: !3498)
!3510 = !DILocation(line: 2413, column: 28, scope: !3498)
!3511 = !DILocation(line: 2416, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2416, column: 9)
!3513 = !DILocation(line: 2416, column: 9, scope: !3512)
!3514 = !DILocation(line: 2416, column: 28, scope: !3512)
!3515 = !DILocation(line: 2416, column: 35, scope: !3512)
!3516 = !{!897, !713, i64 96}
!3517 = !DILocation(line: 2416, column: 32, scope: !3512)
!3518 = !DILocation(line: 2416, column: 49, scope: !3512)
!3519 = !DILocation(line: 2416, column: 57, scope: !3512)
!3520 = !DILocation(line: 2416, column: 62, scope: !3512)
!3521 = !DILocation(line: 2416, column: 9, scope: !3302)
!3522 = !DILocation(line: 2417, column: 23, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2416, column: 78)
!3524 = !DILocation(line: 2417, column: 9, scope: !3523)
!3525 = !DILocation(line: 2418, column: 9, scope: !3523)
!3526 = !DILocation(line: 2419, column: 9, scope: !3523)
!3527 = !DILocation(line: 2423, column: 16, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2423, column: 9)
!3529 = !DILocation(line: 2423, column: 9, scope: !3528)
!3530 = !DILocation(line: 2423, column: 26, scope: !3528)
!3531 = !DILocation(line: 2423, column: 35, scope: !3528)
!3532 = !DILocation(line: 2423, column: 41, scope: !3528)
!3533 = !DILocation(line: 2423, column: 62, scope: !3528)
!3534 = !DILocation(line: 2424, column: 9, scope: !3528)
!3535 = !DILocation(line: 2424, column: 40, scope: !3528)
!3536 = !DILocation(line: 2424, column: 31, scope: !3528)
!3537 = !DILocation(line: 2423, column: 9, scope: !3302)
!3538 = !DILocation(line: 2426, column: 23, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 2425, column: 5)
!3540 = !DILocation(line: 2426, column: 9, scope: !3539)
!3541 = !DILocation(line: 2427, column: 9, scope: !3539)
!3542 = !DILocation(line: 2428, column: 9, scope: !3539)
!3543 = !DILocation(line: 2432, column: 10, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2432, column: 9)
!3545 = !{!3546, !710, i64 24}
!3546 = !{!"dictht", !714, i64 0, !710, i64 8, !710, i64 16, !710, i64 24}
!3547 = !DILocation(line: 2432, column: 39, scope: !3544)
!3548 = !DILocation(line: 2432, column: 43, scope: !3544)
!3549 = !DILocation(line: 2432, column: 46, scope: !3544)
!3550 = !DILocation(line: 2432, column: 77, scope: !3544)
!3551 = !DILocation(line: 2433, column: 9, scope: !3544)
!3552 = !DILocation(line: 2434, column: 14, scope: !3544)
!3553 = !DILocation(line: 2434, column: 19, scope: !3544)
!3554 = !DILocation(line: 2434, column: 39, scope: !3544)
!3555 = !DILocation(line: 2436, column: 23, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 2435, column: 77)
!3557 = !DILocation(line: 2436, column: 9, scope: !3556)
!3558 = !DILocation(line: 2437, column: 9, scope: !3556)
!3559 = !DILocation(line: 2438, column: 9, scope: !3556)
!3560 = !DILocation(line: 2442, column: 12, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2442, column: 9)
!3562 = !DILocation(line: 2442, column: 18, scope: !3561)
!3563 = !DILocation(line: 2442, column: 32, scope: !3561)
!3564 = !DILocation(line: 2442, column: 40, scope: !3561)
!3565 = !DILocation(line: 2442, column: 45, scope: !3561)
!3566 = !DILocation(line: 2442, column: 60, scope: !3561)
!3567 = !DILocation(line: 2443, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2442, column: 92)
!3569 = !DILocation(line: 2444, column: 27, scope: !3568)
!3570 = !{!3571, !714, i64 88}
!3571 = !{!"sharedObjectsStruct", !714, i64 0, !714, i64 8, !714, i64 16, !714, i64 24, !714, i64 32, !714, i64 40, !714, i64 48, !714, i64 56, !714, i64 64, !714, i64 72, !714, i64 80, !714, i64 88, !714, i64 96, !714, i64 104, !714, i64 112, !714, i64 120, !714, i64 128, !714, i64 136, !714, i64 144, !714, i64 152, !714, i64 160, !714, i64 168, !714, i64 176, !714, i64 184, !714, i64 192, !714, i64 200, !714, i64 208, !714, i64 216, !714, i64 224, !714, i64 232, !714, i64 240, !714, i64 248, !714, i64 256, !714, i64 264, !714, i64 272, !714, i64 280, !714, i64 288, !711, i64 296}
!3572 = !DILocation(line: 2444, column: 9, scope: !3568)
!3573 = !DILocation(line: 2445, column: 5, scope: !3568)
!3574 = !DILocation(line: 2446, column: 20, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 2446, column: 13)
!3576 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2445, column: 12)
!3577 = !DILocation(line: 2446, column: 13, scope: !3575)
!3578 = !DILocation(line: 2446, column: 31, scope: !3575)
!3579 = !DILocation(line: 2447, column: 13, scope: !3575)
!3580 = !DILocation(line: 2446, column: 13, scope: !3576)
!3581 = !DILocation(line: 2448, column: 9, scope: !3576)
!3582 = !DILocation(line: 2452, column: 5, scope: !3302)
!3583 = !DILocation(line: 2453, column: 5, scope: !3302)
!3584 = !DILocation(line: 2454, column: 1, scope: !3302)
!3585 = distinct !DISubprogram(name: "createStringObject", scope: !3, file: !3, line: 2929, type: !3586, scopeLine: 2929, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!145, !47, !196}
!3588 = !{!3589, !3590}
!3589 = !DILocalVariable(name: "ptr", arg: 1, scope: !3585, file: !3, line: 2929, type: !47)
!3590 = !DILocalVariable(name: "len", arg: 2, scope: !3585, file: !3, line: 2929, type: !196)
!3591 = !DILocation(line: 0, scope: !3585)
!3592 = !DILocation(line: 2930, column: 38, scope: !3585)
!3593 = !DILocation(line: 2930, column: 12, scope: !3585)
!3594 = !DILocation(line: 2930, column: 5, scope: !3585)
!3595 = !DISubprogram(name: "sdsrange", scope: !166, file: !166, line: 64, type: !3596, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!165, !165, !53, !53}
!3598 = distinct !DISubprogram(name: "freeMemoryIfNeeded", scope: !3, file: !3, line: 8190, type: !1747, scopeLine: 8190, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3599)
!3599 = !{!3600, !3602, !3603, !3604, !3608, !3609, !3610}
!3600 = !DILocalVariable(name: "j", scope: !3601, file: !3, line: 8192, type: !45)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 8191, column: 74)
!3602 = !DILocalVariable(name: "k", scope: !3601, file: !3, line: 8192, type: !45)
!3603 = !DILocalVariable(name: "freed", scope: !3601, file: !3, line: 8192, type: !45)
!3604 = !DILocalVariable(name: "minttl", scope: !3605, file: !3, line: 8196, type: !45)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 8195, column: 44)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 8195, column: 9)
!3607 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 8195, column: 9)
!3608 = !DILocalVariable(name: "minkey", scope: !3605, file: !3, line: 8197, type: !145)
!3609 = !DILocalVariable(name: "de", scope: !3605, file: !3, line: 8198, type: !131)
!3610 = !DILocalVariable(name: "t", scope: !3611, file: !3, line: 8205, type: !49)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 8204, column: 41)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 8204, column: 17)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 8204, column: 17)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 8200, column: 49)
!3615 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 8200, column: 17)
!3616 = !DILocation(line: 8191, column: 19, scope: !3598)
!3617 = !DILocation(line: 8191, column: 12, scope: !3598)
!3618 = !DILocation(line: 8191, column: 29, scope: !3598)
!3619 = !DILocation(line: 8191, column: 32, scope: !3598)
!3620 = !DILocation(line: 8191, column: 63, scope: !3598)
!3621 = !DILocation(line: 8191, column: 54, scope: !3598)
!3622 = !DILocation(line: 8191, column: 5, scope: !3598)
!3623 = !DILocation(line: 0, scope: !3601)
!3624 = !DILocation(line: 8194, column: 13, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 8194, column: 13)
!3626 = !DILocation(line: 8194, column: 44, scope: !3625)
!3627 = !DILocation(line: 8194, column: 13, scope: !3601)
!3628 = distinct !{!3628, !3622, !3629}
!3629 = !DILocation(line: 8218, column: 5, scope: !3598)
!3630 = !DILocation(line: 8195, column: 32, scope: !3606)
!3631 = !DILocation(line: 8195, column: 23, scope: !3606)
!3632 = !DILocation(line: 8195, column: 9, scope: !3607)
!3633 = !DILocation(line: 8200, column: 17, scope: !3615)
!3634 = !DILocation(line: 0, scope: !3605)
!3635 = !{!2354, !714, i64 8}
!3636 = !DILocation(line: 8200, column: 17, scope: !3605)
!3637 = !DILocation(line: 8207, column: 26, scope: !3611)
!3638 = !DILocation(line: 0, scope: !3611)
!3639 = !DILocation(line: 8208, column: 34, scope: !3611)
!3640 = !DILocation(line: 8208, column: 25, scope: !3611)
!3641 = !DILocation(line: 8210, column: 34, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 8209, column: 53)
!3643 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 8209, column: 25)
!3644 = !DILocation(line: 8211, column: 34, scope: !3642)
!3645 = !DILocation(line: 8207, column: 50, scope: !3611)
!3646 = !DILocation(line: 8207, column: 56, scope: !3611)
!3647 = !DILocation(line: 8209, column: 32, scope: !3643)
!3648 = !DILocation(line: 8209, column: 38, scope: !3643)
!3649 = !DILocation(line: 8212, column: 21, scope: !3642)
!3650 = !DILocation(line: 8214, column: 34, scope: !3614)
!3651 = !DILocation(line: 8214, column: 36, scope: !3614)
!3652 = !DILocation(line: 8214, column: 17, scope: !3614)
!3653 = !DILocation(line: 8215, column: 13, scope: !3614)
!3654 = !DILocation(line: 8195, column: 40, scope: !3606)
!3655 = distinct !{!3655, !3632, !3656}
!3656 = !DILocation(line: 8216, column: 9, scope: !3607)
!3657 = !DILocation(line: 8217, column: 14, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 8217, column: 13)
!3659 = !DILocation(line: 0, scope: !3598)
!3660 = !DILocation(line: 8219, column: 1, scope: !3598)
!3661 = distinct !DISubprogram(name: "resetClient", scope: !3, file: !3, line: 2253, type: !340, scopeLine: 2253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3662)
!3662 = !{!3663}
!3663 = !DILocalVariable(name: "c", arg: 1, scope: !3661, file: !3, line: 2253, type: !287)
!3664 = !DILocation(line: 0, scope: !3661)
!3665 = !DILocation(line: 2254, column: 5, scope: !3661)
!3666 = !DILocation(line: 2255, column: 8, scope: !3661)
!3667 = !DILocation(line: 2255, column: 16, scope: !3661)
!3668 = !DILocation(line: 2256, column: 8, scope: !3661)
!3669 = !DILocation(line: 2256, column: 18, scope: !3661)
!3670 = !DILocation(line: 2257, column: 1, scope: !3661)
!3671 = distinct !DISubprogram(name: "addReplySds", scope: !3, file: !3, line: 2769, type: !3672, scopeLine: 2769, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{null, !287, !165}
!3674 = !{!3675, !3676, !3677}
!3675 = !DILocalVariable(name: "c", arg: 1, scope: !3671, file: !3, line: 2769, type: !287)
!3676 = !DILocalVariable(name: "s", arg: 2, scope: !3671, file: !3, line: 2769, type: !165)
!3677 = !DILocalVariable(name: "o", scope: !3671, file: !3, line: 2770, type: !145)
!3678 = !DILocation(line: 0, scope: !3671)
!3679 = !DILocation(line: 2770, column: 15, scope: !3671)
!3680 = !DILocation(line: 2771, column: 5, scope: !3671)
!3681 = !DILocation(line: 2772, column: 18, scope: !3671)
!3682 = !DILocation(line: 2772, column: 5, scope: !3671)
!3683 = !DILocation(line: 2773, column: 1, scope: !3671)
!3684 = !DISubprogram(name: "sdsnew", scope: !166, file: !166, line: 45, type: !3685, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!165, !741}
!3687 = !DISubprogram(name: "zrealloc", scope: !1470, file: !1470, line: 35, type: !3688, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!46, !46, !196}
!3690 = !DISubprogram(name: "strcasecmp", scope: !3691, file: !3691, line: 116, type: !1099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3691 = !DIFile(filename: "/usr/include/strings.h", directory: "", checksumkind: CSK_MD5, checksum: "bd81fc6b401eca7e7fe9248ee68afe69")
!3692 = !DISubprogram(name: "sdscatprintf", scope: !166, file: !166, line: 57, type: !3693, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!165, !165, !741, null}
!3695 = distinct !DISubprogram(name: "authCommand", scope: !3, file: !3, line: 4229, type: !340, scopeLine: 4229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "c", arg: 1, scope: !3695, file: !3, line: 4229, type: !287)
!3698 = !DILocation(line: 0, scope: !3695)
!3699 = !DILocation(line: 4230, column: 17, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 4230, column: 9)
!3701 = !DILocation(line: 4230, column: 10, scope: !3700)
!3702 = !DILocation(line: 4230, column: 29, scope: !3700)
!3703 = !DILocation(line: 4230, column: 43, scope: !3700)
!3704 = !DILocation(line: 4230, column: 40, scope: !3700)
!3705 = !DILocation(line: 4230, column: 52, scope: !3700)
!3706 = !DILocation(line: 4230, column: 33, scope: !3700)
!3707 = !DILocation(line: 4230, column: 9, scope: !3695)
!3708 = !DILocation(line: 4231, column: 10, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 4230, column: 78)
!3710 = !DILocation(line: 4231, column: 24, scope: !3709)
!3711 = !DILocation(line: 4232, column: 25, scope: !3709)
!3712 = !{!3571, !714, i64 8}
!3713 = !DILocation(line: 4232, column: 7, scope: !3709)
!3714 = !DILocation(line: 4233, column: 5, scope: !3709)
!3715 = !DILocation(line: 4234, column: 10, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 4233, column: 12)
!3717 = !DILocation(line: 4234, column: 24, scope: !3716)
!3718 = !DILocation(line: 4235, column: 34, scope: !3716)
!3719 = !DILocation(line: 4235, column: 21, scope: !3716)
!3720 = !DILocation(line: 4235, column: 7, scope: !3716)
!3721 = !DILocation(line: 4237, column: 1, scope: !3695)
!3722 = distinct !DISubprogram(name: "subscribeCommand", scope: !3, file: !3, line: 10397, type: !340, scopeLine: 10397, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3723)
!3723 = !{!3724, !3725}
!3724 = !DILocalVariable(name: "c", arg: 1, scope: !3722, file: !3, line: 10397, type: !287)
!3725 = !DILocalVariable(name: "j", scope: !3722, file: !3, line: 10398, type: !45)
!3726 = !DILocation(line: 0, scope: !3722)
!3727 = !DILocation(line: 10400, column: 24, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 10400, column: 5)
!3729 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 10400, column: 5)
!3730 = !DILocation(line: 10400, column: 19, scope: !3728)
!3731 = !DILocation(line: 10400, column: 5, scope: !3729)
!3732 = !DILocation(line: 10401, column: 37, scope: !3728)
!3733 = !DILocation(line: 10401, column: 34, scope: !3728)
!3734 = !DILocation(line: 10401, column: 9, scope: !3728)
!3735 = !DILocation(line: 10400, column: 31, scope: !3728)
!3736 = distinct !{!3736, !3731, !3737}
!3737 = !DILocation(line: 10401, column: 44, scope: !3729)
!3738 = !DILocation(line: 10402, column: 1, scope: !3722)
!3739 = distinct !DISubprogram(name: "unsubscribeCommand", scope: !3, file: !3, line: 10404, type: !340, scopeLine: 10404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3740)
!3740 = !{!3741, !3742}
!3741 = !DILocalVariable(name: "c", arg: 1, scope: !3739, file: !3, line: 10404, type: !287)
!3742 = !DILocalVariable(name: "j", scope: !3743, file: !3, line: 10409, type: !45)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 10408, column: 12)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 10405, column: 9)
!3745 = !DILocation(line: 0, scope: !3739)
!3746 = !DILocation(line: 10405, column: 12, scope: !3744)
!3747 = !DILocation(line: 10405, column: 17, scope: !3744)
!3748 = !DILocation(line: 10405, column: 9, scope: !3739)
!3749 = !DILocation(line: 0, scope: !3743)
!3750 = !DILocation(line: 10411, column: 23, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 10411, column: 9)
!3752 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 10411, column: 9)
!3753 = !DILocation(line: 10411, column: 9, scope: !3752)
!3754 = !DILocation(line: 10406, column: 9, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 10405, column: 23)
!3756 = !DILocation(line: 10407, column: 9, scope: !3755)
!3757 = !DILocation(line: 10412, column: 43, scope: !3751)
!3758 = !DILocation(line: 10412, column: 40, scope: !3751)
!3759 = !DILocation(line: 10412, column: 13, scope: !3751)
!3760 = !DILocation(line: 10411, column: 35, scope: !3751)
!3761 = !DILocation(line: 10411, column: 28, scope: !3751)
!3762 = distinct !{!3762, !3753, !3763}
!3763 = !DILocation(line: 10412, column: 52, scope: !3752)
!3764 = !DILocation(line: 10414, column: 1, scope: !3739)
!3765 = distinct !DISubprogram(name: "psubscribeCommand", scope: !3, file: !3, line: 10416, type: !340, scopeLine: 10416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3766)
!3766 = !{!3767, !3768}
!3767 = !DILocalVariable(name: "c", arg: 1, scope: !3765, file: !3, line: 10416, type: !287)
!3768 = !DILocalVariable(name: "j", scope: !3765, file: !3, line: 10417, type: !45)
!3769 = !DILocation(line: 0, scope: !3765)
!3770 = !DILocation(line: 10419, column: 24, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 10419, column: 5)
!3772 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 10419, column: 5)
!3773 = !DILocation(line: 10419, column: 19, scope: !3771)
!3774 = !DILocation(line: 10419, column: 5, scope: !3772)
!3775 = !DILocation(line: 10420, column: 37, scope: !3771)
!3776 = !DILocation(line: 10420, column: 34, scope: !3771)
!3777 = !DILocation(line: 10420, column: 9, scope: !3771)
!3778 = !DILocation(line: 10419, column: 31, scope: !3771)
!3779 = distinct !{!3779, !3774, !3780}
!3780 = !DILocation(line: 10420, column: 44, scope: !3772)
!3781 = !DILocation(line: 10421, column: 1, scope: !3765)
!3782 = distinct !DISubprogram(name: "punsubscribeCommand", scope: !3, file: !3, line: 10423, type: !340, scopeLine: 10423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3783)
!3783 = !{!3784, !3785}
!3784 = !DILocalVariable(name: "c", arg: 1, scope: !3782, file: !3, line: 10423, type: !287)
!3785 = !DILocalVariable(name: "j", scope: !3786, file: !3, line: 10428, type: !45)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 10427, column: 12)
!3787 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 10424, column: 9)
!3788 = !DILocation(line: 0, scope: !3782)
!3789 = !DILocation(line: 10424, column: 12, scope: !3787)
!3790 = !DILocation(line: 10424, column: 17, scope: !3787)
!3791 = !DILocation(line: 10424, column: 9, scope: !3782)
!3792 = !DILocation(line: 0, scope: !3786)
!3793 = !DILocation(line: 10430, column: 23, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 10430, column: 9)
!3795 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 10430, column: 9)
!3796 = !DILocation(line: 10430, column: 9, scope: !3795)
!3797 = !DILocation(line: 10425, column: 9, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 10424, column: 23)
!3799 = !DILocation(line: 10426, column: 9, scope: !3798)
!3800 = !DILocation(line: 10431, column: 43, scope: !3794)
!3801 = !DILocation(line: 10431, column: 40, scope: !3794)
!3802 = !DILocation(line: 10431, column: 13, scope: !3794)
!3803 = !DILocation(line: 10430, column: 35, scope: !3794)
!3804 = !DILocation(line: 10430, column: 28, scope: !3794)
!3805 = distinct !{!3805, !3796, !3806}
!3806 = !DILocation(line: 10431, column: 52, scope: !3795)
!3807 = !DILocation(line: 10433, column: 1, scope: !3782)
!3808 = distinct !DISubprogram(name: "execCommand", scope: !3, file: !3, line: 7548, type: !340, scopeLine: 7548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3809)
!3809 = !{!3810, !3811, !3812, !3813}
!3810 = !DILocalVariable(name: "c", arg: 1, scope: !3808, file: !3, line: 7548, type: !287)
!3811 = !DILocalVariable(name: "j", scope: !3808, file: !3, line: 7549, type: !45)
!3812 = !DILocalVariable(name: "orig_argv", scope: !3808, file: !3, line: 7550, type: !305)
!3813 = !DILocalVariable(name: "orig_argc", scope: !3808, file: !3, line: 7551, type: !45)
!3814 = !DILocation(line: 0, scope: !3808)
!3815 = !DILocation(line: 7553, column: 14, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 7553, column: 9)
!3817 = !DILocation(line: 7553, column: 20, scope: !3816)
!3818 = !DILocation(line: 7553, column: 9, scope: !3808)
!3819 = !DILocation(line: 7554, column: 23, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 7553, column: 36)
!3821 = !DILocation(line: 7554, column: 9, scope: !3820)
!3822 = !DILocation(line: 7555, column: 9, scope: !3820)
!3823 = !DILocation(line: 7562, column: 5, scope: !3808)
!3824 = !DILocation(line: 7565, column: 20, scope: !3808)
!3825 = !DILocation(line: 7566, column: 20, scope: !3808)
!3826 = !DILocation(line: 7567, column: 32, scope: !3808)
!3827 = !DILocation(line: 7567, column: 63, scope: !3808)
!3828 = !DILocation(line: 7567, column: 19, scope: !3808)
!3829 = !DILocation(line: 7567, column: 5, scope: !3808)
!3830 = !DILocation(line: 7568, column: 31, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 7568, column: 5)
!3832 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 7568, column: 5)
!3833 = !DILocation(line: 7568, column: 19, scope: !3831)
!3834 = !DILocation(line: 7568, column: 5, scope: !3832)
!3835 = !DILocation(line: 7569, column: 29, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 7568, column: 43)
!3837 = !DILocation(line: 7569, column: 41, scope: !3836)
!3838 = !DILocation(line: 7569, column: 17, scope: !3836)
!3839 = !DILocation(line: 7570, column: 41, scope: !3836)
!3840 = !DILocation(line: 7570, column: 17, scope: !3836)
!3841 = !DILocation(line: 7571, column: 38, scope: !3836)
!3842 = !{!3118, !714, i64 16}
!3843 = !DILocation(line: 7571, column: 9, scope: !3836)
!3844 = !DILocation(line: 7568, column: 39, scope: !3831)
!3845 = distinct !{!3845, !3834, !3846}
!3846 = !DILocation(line: 7572, column: 5, scope: !3832)
!3847 = !DILocation(line: 7573, column: 13, scope: !3808)
!3848 = !DILocation(line: 7574, column: 13, scope: !3808)
!3849 = !DILocation(line: 7575, column: 5, scope: !3808)
!3850 = !DILocation(line: 7576, column: 5, scope: !3808)
!3851 = !DILocation(line: 7577, column: 14, scope: !3808)
!3852 = !DILocation(line: 7581, column: 17, scope: !3808)
!3853 = !DILocation(line: 7582, column: 1, scope: !3808)
!3854 = distinct !DISubprogram(name: "discardCommand", scope: !3, file: !3, line: 7522, type: !340, scopeLine: 7522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3855)
!3855 = !{!3856}
!3856 = !DILocalVariable(name: "c", arg: 1, scope: !3854, file: !3, line: 7522, type: !287)
!3857 = !DILocation(line: 0, scope: !3854)
!3858 = !DILocation(line: 7523, column: 14, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 7523, column: 9)
!3860 = !DILocation(line: 7523, column: 20, scope: !3859)
!3861 = !DILocation(line: 7523, column: 9, scope: !3854)
!3862 = !DILocation(line: 7524, column: 23, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 7523, column: 36)
!3864 = !DILocation(line: 7524, column: 9, scope: !3863)
!3865 = !DILocation(line: 7525, column: 9, scope: !3863)
!3866 = !DILocation(line: 7528, column: 5, scope: !3854)
!3867 = !DILocation(line: 7529, column: 5, scope: !3854)
!3868 = !DILocation(line: 7530, column: 14, scope: !3854)
!3869 = !DILocation(line: 7531, column: 23, scope: !3854)
!3870 = !DILocation(line: 7531, column: 5, scope: !3854)
!3871 = !DILocation(line: 7532, column: 1, scope: !3854)
!3872 = distinct !DISubprogram(name: "queueMultiCommand", scope: !3, file: !3, line: 7501, type: !3873, scopeLine: 7501, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3875)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{null, !287, !333}
!3875 = !{!3876, !3877, !3878, !3879}
!3876 = !DILocalVariable(name: "c", arg: 1, scope: !3872, file: !3, line: 7501, type: !287)
!3877 = !DILocalVariable(name: "cmd", arg: 2, scope: !3872, file: !3, line: 7501, type: !333)
!3878 = !DILocalVariable(name: "mc", scope: !3872, file: !3, line: 7502, type: !326)
!3879 = !DILocalVariable(name: "j", scope: !3872, file: !3, line: 7503, type: !45)
!3880 = !DILocation(line: 0, scope: !3872)
!3881 = !DILocation(line: 7505, column: 38, scope: !3872)
!3882 = !DILocation(line: 7505, column: 45, scope: !3872)
!3883 = !DILocation(line: 7506, column: 41, scope: !3872)
!3884 = !DILocation(line: 7506, column: 46, scope: !3872)
!3885 = !DILocation(line: 7506, column: 30, scope: !3872)
!3886 = !DILocation(line: 7506, column: 29, scope: !3872)
!3887 = !DILocation(line: 7505, column: 26, scope: !3872)
!3888 = !DILocation(line: 7505, column: 24, scope: !3872)
!3889 = !DILocation(line: 7507, column: 39, scope: !3872)
!3890 = !DILocation(line: 7507, column: 28, scope: !3872)
!3891 = !DILocation(line: 7508, column: 9, scope: !3872)
!3892 = !DILocation(line: 7508, column: 13, scope: !3872)
!3893 = !DILocation(line: 7509, column: 19, scope: !3872)
!3894 = !DILocation(line: 7509, column: 9, scope: !3872)
!3895 = !DILocation(line: 7509, column: 14, scope: !3872)
!3896 = !DILocation(line: 7510, column: 38, scope: !3872)
!3897 = !DILocation(line: 7510, column: 37, scope: !3872)
!3898 = !DILocation(line: 7510, column: 16, scope: !3872)
!3899 = !DILocation(line: 7510, column: 9, scope: !3872)
!3900 = !DILocation(line: 7510, column: 14, scope: !3872)
!3901 = !DILocation(line: 7511, column: 24, scope: !3872)
!3902 = !DILocation(line: 7511, column: 46, scope: !3872)
!3903 = !DILocation(line: 7511, column: 43, scope: !3872)
!3904 = !DILocation(line: 7511, column: 42, scope: !3872)
!3905 = !DILocation(line: 7511, column: 5, scope: !3872)
!3906 = !DILocation(line: 7512, column: 24, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 7512, column: 5)
!3908 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 7512, column: 5)
!3909 = !DILocation(line: 7512, column: 19, scope: !3907)
!3910 = !DILocation(line: 7512, column: 5, scope: !3908)
!3911 = !DILocation(line: 7513, column: 26, scope: !3907)
!3912 = !DILocation(line: 7513, column: 22, scope: !3907)
!3913 = !DILocation(line: 7513, column: 9, scope: !3907)
!3914 = !DILocation(line: 7512, column: 31, scope: !3907)
!3915 = distinct !{!3915, !3910, !3916}
!3916 = !DILocation(line: 7513, column: 33, scope: !3908)
!3917 = !DILocation(line: 7514, column: 20, scope: !3872)
!3918 = !DILocation(line: 7515, column: 1, scope: !3872)
!3919 = distinct !DISubprogram(name: "addReply", scope: !3, file: !3, line: 2755, type: !3920, scopeLine: 2755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3922)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{null, !287, !145}
!3922 = !{!3923, !3924}
!3923 = !DILocalVariable(name: "c", arg: 1, scope: !3919, file: !3, line: 2755, type: !287)
!3924 = !DILocalVariable(name: "obj", arg: 2, scope: !3919, file: !3, line: 2755, type: !145)
!3925 = !DILocation(line: 0, scope: !3919)
!3926 = !DILocation(line: 2756, column: 9, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 2756, column: 9)
!3928 = !DILocation(line: 2756, column: 30, scope: !3927)
!3929 = !DILocation(line: 2756, column: 35, scope: !3927)
!3930 = !DILocation(line: 2757, column: 13, scope: !3927)
!3931 = !DILocation(line: 2757, column: 42, scope: !3927)
!3932 = !DILocation(line: 2759, column: 34, scope: !3927)
!3933 = !DILocation(line: 2759, column: 41, scope: !3927)
!3934 = !DILocation(line: 2760, column: 28, scope: !3927)
!3935 = !DILocation(line: 2759, column: 9, scope: !3927)
!3936 = !DILocation(line: 2760, column: 31, scope: !3927)
!3937 = !DILocation(line: 2756, column: 9, scope: !3919)
!3938 = !DILocation(line: 2762, column: 16, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 2762, column: 9)
!3940 = !DILocation(line: 2762, column: 9, scope: !3939)
!3941 = !DILocation(line: 2762, column: 27, scope: !3939)
!3942 = !DILocation(line: 2762, column: 35, scope: !3939)
!3943 = !DILocation(line: 2762, column: 43, scope: !3939)
!3944 = !DILocation(line: 2762, column: 9, scope: !3919)
!3945 = !DILocation(line: 2763, column: 15, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2762, column: 63)
!3947 = !DILocation(line: 2764, column: 14, scope: !3946)
!3948 = !DILocation(line: 2764, column: 23, scope: !3946)
!3949 = !DILocation(line: 2765, column: 5, scope: !3946)
!3950 = !DILocation(line: 2766, column: 24, scope: !3919)
!3951 = !DILocation(line: 2766, column: 30, scope: !3919)
!3952 = !DILocation(line: 2766, column: 5, scope: !3919)
!3953 = !DILocation(line: 2767, column: 1, scope: !3919)
!3954 = distinct !DISubprogram(name: "blockClientOnSwappedKeys", scope: !3, file: !3, line: 9891, type: !3955, scopeLine: 9891, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3957)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!45, !287, !333}
!3957 = !{!3958, !3959}
!3958 = !DILocalVariable(name: "c", arg: 1, scope: !3954, file: !3, line: 9891, type: !287)
!3959 = !DILocalVariable(name: "cmd", arg: 2, scope: !3954, file: !3, line: 9891, type: !333)
!3960 = !DILocation(line: 0, scope: !3954)
!3961 = !DILocation(line: 9892, column: 14, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 9892, column: 9)
!3963 = !{!1341, !714, i64 24}
!3964 = !DILocation(line: 9892, column: 30, scope: !3962)
!3965 = !DILocation(line: 0, scope: !3962)
!3966 = !DILocation(line: 9892, column: 9, scope: !3954)
!3967 = !DILocation(line: 9893, column: 9, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 9892, column: 39)
!3969 = !DILocation(line: 9894, column: 5, scope: !3968)
!3970 = !DILocation(line: 9895, column: 9, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 9894, column: 12)
!3972 = !DILocation(line: 9899, column: 9, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 9899, column: 9)
!3974 = !DILocation(line: 9899, column: 9, scope: !3954)
!3975 = !DILocation(line: 9900, column: 12, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 9899, column: 33)
!3977 = !DILocation(line: 9900, column: 18, scope: !3976)
!3978 = !DILocation(line: 9901, column: 34, scope: !3976)
!3979 = !DILocation(line: 9901, column: 40, scope: !3976)
!3980 = !DILocation(line: 9901, column: 9, scope: !3976)
!3981 = !DILocation(line: 9902, column: 34, scope: !3976)
!3982 = !DILocation(line: 9903, column: 9, scope: !3976)
!3983 = !DILocation(line: 0, scope: !3973)
!3984 = !DILocation(line: 9907, column: 1, scope: !3954)
!3985 = distinct !DISubprogram(name: "call", scope: !3, file: !3, line: 2260, type: !3873, scopeLine: 2260, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3986)
!3986 = !{!3987, !3988, !3989}
!3987 = !DILocalVariable(name: "c", arg: 1, scope: !3985, file: !3, line: 2260, type: !287)
!3988 = !DILocalVariable(name: "cmd", arg: 2, scope: !3985, file: !3, line: 2260, type: !333)
!3989 = !DILocalVariable(name: "dirty", scope: !3985, file: !3, line: 2261, type: !54)
!3990 = !DILocation(line: 0, scope: !3985)
!3991 = !DILocation(line: 2263, column: 20, scope: !3985)
!3992 = !DILocation(line: 2264, column: 10, scope: !3985)
!3993 = !DILocation(line: 2264, column: 5, scope: !3985)
!3994 = !DILocation(line: 2265, column: 20, scope: !3985)
!3995 = !DILocation(line: 2267, column: 16, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 2267, column: 9)
!3997 = !DILocation(line: 2267, column: 9, scope: !3996)
!3998 = !DILocation(line: 2267, column: 27, scope: !3996)
!3999 = !DILocation(line: 2268, column: 35, scope: !3996)
!4000 = !DILocation(line: 2268, column: 39, scope: !3996)
!4001 = !{!2354, !713, i64 32}
!4002 = !DILocation(line: 2268, column: 45, scope: !3996)
!4003 = !DILocation(line: 2268, column: 53, scope: !3996)
!4004 = !DILocation(line: 2268, column: 9, scope: !3996)
!4005 = !DILocation(line: 2269, column: 16, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 2269, column: 9)
!4007 = !DILocation(line: 2269, column: 24, scope: !4006)
!4008 = !DILocation(line: 2269, column: 30, scope: !4006)
!4009 = !DILocation(line: 2269, column: 61, scope: !4006)
!4010 = !DILocation(line: 2270, column: 9, scope: !4006)
!4011 = !DILocation(line: 2269, column: 9, scope: !3985)
!4012 = !DILocation(line: 2271, column: 48, scope: !4006)
!4013 = !DILocation(line: 2271, column: 52, scope: !4006)
!4014 = !DILocation(line: 2271, column: 58, scope: !4006)
!4015 = !DILocation(line: 2271, column: 66, scope: !4006)
!4016 = !DILocation(line: 2271, column: 9, scope: !4006)
!4017 = !DILocation(line: 2272, column: 9, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 2272, column: 9)
!4019 = !{!709, !714, i64 56}
!4020 = !DILocation(line: 2272, column: 9, scope: !3985)
!4021 = !DILocation(line: 2273, column: 52, scope: !4018)
!4022 = !DILocation(line: 2273, column: 56, scope: !4018)
!4023 = !DILocation(line: 2273, column: 62, scope: !4018)
!4024 = !DILocation(line: 2273, column: 70, scope: !4018)
!4025 = !DILocation(line: 2273, column: 9, scope: !4018)
!4026 = !DILocation(line: 2274, column: 28, scope: !3985)
!4027 = !{!709, !715, i64 360}
!4028 = !DILocation(line: 2275, column: 1, scope: !3985)
!4029 = distinct !DISubprogram(name: "tryFreeOneObjectFromFreelist", scope: !3, file: !3, line: 8162, type: !1709, scopeLine: 8162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4030)
!4030 = !{!4031, !4032}
!4031 = !DILocalVariable(name: "o", scope: !4029, file: !3, line: 8163, type: !145)
!4032 = !DILocalVariable(name: "head", scope: !4033, file: !3, line: 8167, type: !64)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 8166, column: 41)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 8166, column: 9)
!4035 = !DILocation(line: 8165, column: 16, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 8165, column: 9)
!4037 = !DILocation(line: 8165, column: 9, scope: !4036)
!4038 = !DILocation(line: 8165, column: 9, scope: !4029)
!4039 = !DILocation(line: 8165, column: 28, scope: !4036)
!4040 = !DILocation(line: 8166, column: 9, scope: !4034)
!4041 = !DILocation(line: 8166, column: 9, scope: !4029)
!4042 = !DILocation(line: 8167, column: 26, scope: !4033)
!4043 = !DILocation(line: 0, scope: !4033)
!4044 = !DILocation(line: 8168, column: 13, scope: !4033)
!4045 = !DILocation(line: 0, scope: !4029)
!4046 = !DILocation(line: 8169, column: 9, scope: !4033)
!4047 = !DILocation(line: 8170, column: 20, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 8170, column: 13)
!4049 = !DILocation(line: 8170, column: 13, scope: !4048)
!4050 = !DILocation(line: 8170, column: 13, scope: !4033)
!4051 = !DILocation(line: 8170, column: 32, scope: !4048)
!4052 = !DILocation(line: 8171, column: 9, scope: !4033)
!4053 = !DILocation(line: 8174, column: 20, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 8174, column: 13)
!4055 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 8173, column: 12)
!4056 = !DILocation(line: 8174, column: 13, scope: !4054)
!4057 = !DILocation(line: 8174, column: 13, scope: !4055)
!4058 = !DILocation(line: 8174, column: 32, scope: !4054)
!4059 = !DILocation(line: 0, scope: !4034)
!4060 = !DILocation(line: 8177, column: 1, scope: !4029)
!4061 = !DISubprogram(name: "dictGetRandomKey", scope: !88, file: !88, line: 137, type: !4062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!124, !86}
!4064 = distinct !DISubprogram(name: "deleteKey", scope: !3, file: !3, line: 3132, type: !4065, scopeLine: 3132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4067)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!45, !293, !145}
!4067 = !{!4068, !4069, !4070}
!4068 = !DILocalVariable(name: "db", arg: 1, scope: !4064, file: !3, line: 3132, type: !293)
!4069 = !DILocalVariable(name: "key", arg: 2, scope: !4064, file: !3, line: 3132, type: !145)
!4070 = !DILocalVariable(name: "retval", scope: !4064, file: !3, line: 3133, type: !45)
!4071 = !DILocation(line: 0, scope: !4064)
!4072 = !DILocation(line: 3139, column: 5, scope: !4064)
!4073 = !DILocation(line: 3140, column: 9, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 3140, column: 9)
!4075 = !DILocation(line: 3140, column: 9, scope: !4064)
!4076 = !DILocation(line: 3140, column: 55, scope: !4074)
!4077 = !DILocation(line: 3140, column: 32, scope: !4074)
!4078 = !DILocation(line: 3141, column: 34, scope: !4064)
!4079 = !DILocation(line: 3141, column: 29, scope: !4064)
!4080 = !DILocation(line: 3141, column: 14, scope: !4064)
!4081 = !DILocation(line: 3142, column: 5, scope: !4064)
!4082 = !DILocation(line: 3144, column: 19, scope: !4064)
!4083 = !DILocation(line: 3144, column: 5, scope: !4064)
!4084 = !DISubprogram(name: "pthread_mutex_lock", scope: !4085, file: !4085, line: 738, type: !4086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4085 = !DIFile(filename: "/usr/include/pthread.h", directory: "", checksumkind: CSK_MD5, checksum: "0e55f33d4e6889d38be50c852b7d6130")
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!45, !4088}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!4089 = !DISubprogram(name: "pthread_mutex_unlock", scope: !4085, file: !4085, line: 756, type: !4086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4090 = distinct !DISubprogram(name: "incrRefCount", scope: !3, file: !3, line: 3022, type: !4091, scopeLine: 3022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4093)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{null, !145}
!4093 = !{!4094}
!4094 = !DILocalVariable(name: "o", arg: 1, scope: !4090, file: !3, line: 3022, type: !145)
!4095 = !DILocation(line: 0, scope: !4090)
!4096 = !DILocation(line: 3023, column: 8, scope: !4090)
!4097 = !DILocation(line: 3023, column: 16, scope: !4090)
!4098 = !DILocation(line: 3024, column: 1, scope: !4090)
!4099 = distinct !DISubprogram(name: "pubsubSubscribeChannel", scope: !3, file: !3, line: 10198, type: !3044, scopeLine: 10198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4100)
!4100 = !{!4101, !4102, !4103, !4104, !4105}
!4101 = !DILocalVariable(name: "c", arg: 1, scope: !4099, file: !3, line: 10198, type: !287)
!4102 = !DILocalVariable(name: "channel", arg: 2, scope: !4099, file: !3, line: 10198, type: !145)
!4103 = !DILocalVariable(name: "de", scope: !4099, file: !3, line: 10199, type: !131)
!4104 = !DILocalVariable(name: "clients", scope: !4099, file: !3, line: 10200, type: !58)
!4105 = !DILocalVariable(name: "retval", scope: !4099, file: !3, line: 10201, type: !45)
!4106 = !DILocation(line: 0, scope: !4099)
!4107 = !DILocation(line: 10204, column: 20, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 10204, column: 9)
!4109 = !DILocation(line: 10204, column: 36, scope: !4108)
!4110 = !DILocation(line: 10204, column: 9, scope: !4108)
!4111 = !DILocation(line: 10204, column: 50, scope: !4108)
!4112 = !DILocation(line: 10204, column: 9, scope: !4099)
!4113 = !DILocation(line: 10206, column: 9, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 10204, column: 62)
!4115 = !DILocation(line: 10208, column: 30, scope: !4114)
!4116 = !{!709, !714, i64 960}
!4117 = !DILocation(line: 10208, column: 14, scope: !4114)
!4118 = !DILocation(line: 10209, column: 16, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 10209, column: 13)
!4120 = !DILocation(line: 10209, column: 13, scope: !4114)
!4121 = !DILocation(line: 10210, column: 23, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 10209, column: 25)
!4123 = !DILocation(line: 10211, column: 28, scope: !4122)
!4124 = !DILocation(line: 10211, column: 52, scope: !4122)
!4125 = !DILocation(line: 10211, column: 13, scope: !4122)
!4126 = !DILocation(line: 10212, column: 13, scope: !4122)
!4127 = !DILocation(line: 10213, column: 9, scope: !4122)
!4128 = !DILocation(line: 10214, column: 23, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 10213, column: 16)
!4130 = !DILocation(line: 0, scope: !4119)
!4131 = !DILocation(line: 10216, column: 33, scope: !4114)
!4132 = !DILocation(line: 10216, column: 9, scope: !4114)
!4133 = !DILocation(line: 10217, column: 5, scope: !4114)
!4134 = !DILocation(line: 10219, column: 23, scope: !4099)
!4135 = !{!3571, !714, i64 264}
!4136 = !DILocation(line: 10219, column: 5, scope: !4099)
!4137 = !DILocation(line: 10220, column: 23, scope: !4099)
!4138 = !{!3571, !714, i64 248}
!4139 = !DILocation(line: 10220, column: 5, scope: !4099)
!4140 = !DILocation(line: 10221, column: 5, scope: !4099)
!4141 = !DILocation(line: 10222, column: 24, scope: !4099)
!4142 = !DILocation(line: 10222, column: 53, scope: !4099)
!4143 = !DILocation(line: 10222, column: 52, scope: !4099)
!4144 = !DILocation(line: 10222, column: 5, scope: !4099)
!4145 = !DILocation(line: 10223, column: 5, scope: !4099)
!4146 = !DISubprogram(name: "dictAdd", scope: !88, file: !88, line: 126, type: !4147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!45, !86, !46, !46}
!4149 = !DISubprogram(name: "listCreate", scope: !60, file: !60, line: 73, type: !4150, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!58}
!4152 = !DISubprogram(name: "listAddNodeTail", scope: !60, file: !60, line: 76, type: !4153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!58, !58, !46}
!4155 = distinct !DISubprogram(name: "addReplyBulk", scope: !3, file: !3, line: 2842, type: !3920, scopeLine: 2842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4156)
!4156 = !{!4157, !4158}
!4157 = !DILocalVariable(name: "c", arg: 1, scope: !4155, file: !3, line: 2842, type: !287)
!4158 = !DILocalVariable(name: "obj", arg: 2, scope: !4155, file: !3, line: 2842, type: !145)
!4159 = !DILocation(line: 0, scope: !4155)
!4160 = !DILocation(line: 2843, column: 5, scope: !4155)
!4161 = !DILocation(line: 2844, column: 5, scope: !4155)
!4162 = !DILocation(line: 2845, column: 23, scope: !4155)
!4163 = !{!3571, !714, i64 0}
!4164 = !DILocation(line: 2845, column: 5, scope: !4155)
!4165 = !DILocation(line: 2846, column: 1, scope: !4155)
!4166 = distinct !DISubprogram(name: "addReplyLongLong", scope: !3, file: !3, line: 2783, type: !4167, scopeLine: 2783, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4169)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{null, !287, !54}
!4169 = !{!4170, !4171, !4172, !4173}
!4170 = !DILocalVariable(name: "c", arg: 1, scope: !4166, file: !3, line: 2783, type: !287)
!4171 = !DILocalVariable(name: "ll", arg: 2, scope: !4166, file: !3, line: 2783, type: !54)
!4172 = !DILocalVariable(name: "buf", scope: !4166, file: !3, line: 2784, type: !1247)
!4173 = !DILocalVariable(name: "len", scope: !4166, file: !3, line: 2785, type: !196)
!4174 = !DILocation(line: 0, scope: !4166)
!4175 = !DILocation(line: 2784, column: 5, scope: !4166)
!4176 = !DILocation(line: 2784, column: 10, scope: !4166)
!4177 = !DILocation(line: 2787, column: 9, scope: !4166)
!4178 = !DILocation(line: 2788, column: 27, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 2787, column: 18)
!4180 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 2787, column: 9)
!4181 = !{!3571, !714, i64 32}
!4182 = !DILocation(line: 2788, column: 9, scope: !4179)
!4183 = !DILocation(line: 2789, column: 9, scope: !4179)
!4184 = !DILocation(line: 2791, column: 27, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 2790, column: 25)
!4186 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 2790, column: 16)
!4187 = !{!3571, !714, i64 40}
!4188 = !DILocation(line: 2791, column: 9, scope: !4185)
!4189 = !DILocation(line: 2792, column: 9, scope: !4185)
!4190 = !DILocation(line: 2794, column: 12, scope: !4166)
!4191 = !DILocation(line: 2795, column: 24, scope: !4166)
!4192 = !DILocation(line: 2795, column: 11, scope: !4166)
!4193 = !DILocation(line: 2796, column: 12, scope: !4166)
!4194 = !DILocation(line: 2796, column: 5, scope: !4166)
!4195 = !DILocation(line: 2796, column: 16, scope: !4166)
!4196 = !DILocation(line: 2797, column: 12, scope: !4166)
!4197 = !DILocation(line: 2797, column: 5, scope: !4166)
!4198 = !DILocation(line: 2797, column: 16, scope: !4166)
!4199 = !DILocation(line: 2798, column: 36, scope: !4166)
!4200 = !DILocation(line: 2798, column: 19, scope: !4166)
!4201 = !DILocation(line: 2798, column: 5, scope: !4166)
!4202 = !DILocation(line: 2799, column: 1, scope: !4166)
!4203 = distinct !DISubprogram(name: "addReplyBulkLen", scope: !3, file: !3, line: 2816, type: !3920, scopeLine: 2816, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4204)
!4204 = !{!4205, !4206, !4207, !4208, !4209, !4210}
!4205 = !DILocalVariable(name: "c", arg: 1, scope: !4203, file: !3, line: 2816, type: !287)
!4206 = !DILocalVariable(name: "obj", arg: 2, scope: !4203, file: !3, line: 2816, type: !145)
!4207 = !DILocalVariable(name: "len", scope: !4203, file: !3, line: 2817, type: !196)
!4208 = !DILocalVariable(name: "intlen", scope: !4203, file: !3, line: 2817, type: !196)
!4209 = !DILocalVariable(name: "buf", scope: !4203, file: !3, line: 2818, type: !1247)
!4210 = !DILocalVariable(name: "n", scope: !4211, file: !3, line: 2823, type: !53)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 2822, column: 12)
!4212 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 2820, column: 9)
!4213 = !DILocation(line: 0, scope: !4203)
!4214 = !DILocation(line: 2818, column: 5, scope: !4203)
!4215 = !DILocation(line: 2818, column: 10, scope: !4203)
!4216 = !DILocation(line: 2820, column: 14, scope: !4212)
!4217 = !DILocation(line: 2820, column: 23, scope: !4212)
!4218 = !DILocation(line: 0, scope: !4212)
!4219 = !DILocation(line: 2820, column: 9, scope: !4203)
!4220 = !DILocation(line: 2821, column: 15, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 2820, column: 46)
!4222 = !DILocation(line: 2822, column: 5, scope: !4221)
!4223 = !DILocation(line: 2823, column: 18, scope: !4211)
!4224 = !DILocation(line: 0, scope: !4211)
!4225 = !DILocation(line: 2827, column: 15, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 2827, column: 13)
!4227 = !DILocation(line: 2827, column: 13, scope: !4211)
!4228 = !DILocation(line: 2831, column: 26, scope: !4211)
!4229 = !DILocation(line: 2831, column: 9, scope: !4211)
!4230 = !DILocation(line: 2831, column: 21, scope: !4211)
!4231 = !DILocation(line: 2832, column: 16, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 2831, column: 32)
!4233 = distinct !{!4233, !4229, !4234}
!4234 = !DILocation(line: 2833, column: 9, scope: !4211)
!4235 = !DILocation(line: 2835, column: 12, scope: !4203)
!4236 = !DILocation(line: 2836, column: 27, scope: !4203)
!4237 = !DILocation(line: 2836, column: 14, scope: !4203)
!4238 = !DILocation(line: 2837, column: 15, scope: !4203)
!4239 = !DILocation(line: 2837, column: 5, scope: !4203)
!4240 = !DILocation(line: 2837, column: 19, scope: !4203)
!4241 = !DILocation(line: 2838, column: 15, scope: !4203)
!4242 = !DILocation(line: 2838, column: 5, scope: !4203)
!4243 = !DILocation(line: 2838, column: 19, scope: !4203)
!4244 = !DILocation(line: 2839, column: 39, scope: !4203)
!4245 = !DILocation(line: 2839, column: 19, scope: !4203)
!4246 = !DILocation(line: 2839, column: 5, scope: !4203)
!4247 = !DILocation(line: 2840, column: 1, scope: !4203)
!4248 = distinct !DISubprogram(name: "ll2string", scope: !3, file: !3, line: 1038, type: !4249, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4251)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!45, !47, !196, !54}
!4251 = !{!4252, !4253, !4254, !4255, !4259, !4260, !4261}
!4252 = !DILocalVariable(name: "s", arg: 1, scope: !4248, file: !3, line: 1038, type: !47)
!4253 = !DILocalVariable(name: "len", arg: 2, scope: !4248, file: !3, line: 1038, type: !196)
!4254 = !DILocalVariable(name: "value", arg: 3, scope: !4248, file: !3, line: 1038, type: !54)
!4255 = !DILocalVariable(name: "buf", scope: !4248, file: !3, line: 1039, type: !4256)
!4256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 256, elements: !4257)
!4257 = !{!4258}
!4258 = !DISubrange(count: 32)
!4259 = !DILocalVariable(name: "p", scope: !4248, file: !3, line: 1039, type: !47)
!4260 = !DILocalVariable(name: "v", scope: !4248, file: !3, line: 1040, type: !170)
!4261 = !DILocalVariable(name: "l", scope: !4248, file: !3, line: 1041, type: !196)
!4262 = !DILocation(line: 0, scope: !4248)
!4263 = !DILocation(line: 1039, column: 5, scope: !4248)
!4264 = !DILocation(line: 1039, column: 10, scope: !4248)
!4265 = !DILocation(line: 1043, column: 13, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1043, column: 9)
!4267 = !DILocation(line: 1043, column: 9, scope: !4248)
!4268 = !DILocation(line: 1044, column: 16, scope: !4248)
!4269 = !DILocation(line: 1044, column: 9, scope: !4248)
!4270 = !DILocation(line: 1045, column: 12, scope: !4248)
!4271 = !DILocation(line: 1046, column: 5, scope: !4248)
!4272 = !DILocation(line: 1047, column: 22, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1046, column: 8)
!4274 = !DILocation(line: 1047, column: 16, scope: !4273)
!4275 = !DILocation(line: 1047, column: 11, scope: !4273)
!4276 = !DILocation(line: 1047, column: 14, scope: !4273)
!4277 = !DILocation(line: 1048, column: 11, scope: !4273)
!4278 = !DILocation(line: 1049, column: 5, scope: !4273)
!4279 = distinct !{!4279, !4271, !4280}
!4280 = !DILocation(line: 1049, column: 14, scope: !4248)
!4281 = !DILocation(line: 1050, column: 9, scope: !4248)
!4282 = !DILocation(line: 1050, column: 25, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1050, column: 9)
!4284 = !DILocation(line: 1050, column: 20, scope: !4283)
!4285 = !DILocation(line: 1050, column: 22, scope: !4283)
!4286 = !DILocation(line: 1051, column: 6, scope: !4248)
!4287 = !DILocation(line: 1052, column: 14, scope: !4248)
!4288 = !DILocation(line: 1052, column: 11, scope: !4248)
!4289 = !DILocation(line: 1053, column: 10, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1053, column: 9)
!4291 = !DILocation(line: 1053, column: 13, scope: !4290)
!4292 = !DILocation(line: 1053, column: 9, scope: !4248)
!4293 = !DILocation(line: 1054, column: 5, scope: !4248)
!4294 = !DILocation(line: 1055, column: 5, scope: !4248)
!4295 = !DILocation(line: 1055, column: 10, scope: !4248)
!4296 = !DILocation(line: 1056, column: 12, scope: !4248)
!4297 = !DILocation(line: 1056, column: 5, scope: !4248)
!4298 = !DILocation(line: 1057, column: 1, scope: !4248)
!4299 = !DISubprogram(name: "memcpy", scope: !1082, file: !1082, line: 43, type: !4300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!46, !1483, !4302, !196}
!4302 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !100)
!4303 = distinct !DISubprogram(name: "pubsubUnsubscribeChannel", scope: !3, file: !3, line: 10228, type: !4304, scopeLine: 10228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4306)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!45, !287, !145, !45}
!4306 = !{!4307, !4308, !4309, !4310, !4311, !4312, !4313}
!4307 = !DILocalVariable(name: "c", arg: 1, scope: !4303, file: !3, line: 10228, type: !287)
!4308 = !DILocalVariable(name: "channel", arg: 2, scope: !4303, file: !3, line: 10228, type: !145)
!4309 = !DILocalVariable(name: "notify", arg: 3, scope: !4303, file: !3, line: 10228, type: !45)
!4310 = !DILocalVariable(name: "de", scope: !4303, file: !3, line: 10229, type: !131)
!4311 = !DILocalVariable(name: "clients", scope: !4303, file: !3, line: 10230, type: !58)
!4312 = !DILocalVariable(name: "ln", scope: !4303, file: !3, line: 10231, type: !64)
!4313 = !DILocalVariable(name: "retval", scope: !4303, file: !3, line: 10232, type: !45)
!4314 = !DILocation(line: 0, scope: !4303)
!4315 = !DILocation(line: 10235, column: 5, scope: !4303)
!4316 = !DILocation(line: 10237, column: 23, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 10237, column: 9)
!4318 = !DILocation(line: 10237, column: 39, scope: !4317)
!4319 = !DILocation(line: 10237, column: 9, scope: !4317)
!4320 = !DILocation(line: 10237, column: 48, scope: !4317)
!4321 = !DILocation(line: 10237, column: 9, scope: !4303)
!4322 = !DILocation(line: 10240, column: 30, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 10237, column: 60)
!4324 = !DILocation(line: 10240, column: 14, scope: !4323)
!4325 = !DILocation(line: 10241, column: 9, scope: !4323)
!4326 = !DILocation(line: 10242, column: 19, scope: !4323)
!4327 = !DILocation(line: 10243, column: 36, scope: !4323)
!4328 = !DILocation(line: 10243, column: 14, scope: !4323)
!4329 = !DILocation(line: 10244, column: 9, scope: !4323)
!4330 = !DILocation(line: 10245, column: 9, scope: !4323)
!4331 = !DILocation(line: 10246, column: 13, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 10246, column: 13)
!4333 = !DILocation(line: 10246, column: 33, scope: !4332)
!4334 = !DILocation(line: 10246, column: 13, scope: !4323)
!4335 = !DILocation(line: 10250, column: 31, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 10246, column: 39)
!4337 = !DILocation(line: 10250, column: 13, scope: !4336)
!4338 = !DILocation(line: 10251, column: 9, scope: !4336)
!4339 = !DILocation(line: 10254, column: 9, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 10254, column: 9)
!4341 = !DILocation(line: 10254, column: 9, scope: !4303)
!4342 = !DILocation(line: 10255, column: 27, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 10254, column: 17)
!4344 = !DILocation(line: 10255, column: 9, scope: !4343)
!4345 = !DILocation(line: 10256, column: 27, scope: !4343)
!4346 = !{!3571, !714, i64 256}
!4347 = !DILocation(line: 10256, column: 9, scope: !4343)
!4348 = !DILocation(line: 10257, column: 9, scope: !4343)
!4349 = !DILocation(line: 10258, column: 28, scope: !4343)
!4350 = !DILocation(line: 10259, column: 24, scope: !4343)
!4351 = !DILocation(line: 10258, column: 56, scope: !4343)
!4352 = !DILocation(line: 10258, column: 9, scope: !4343)
!4353 = !DILocation(line: 10261, column: 5, scope: !4343)
!4354 = !DILocation(line: 10262, column: 5, scope: !4303)
!4355 = !DILocation(line: 10263, column: 5, scope: !4303)
!4356 = distinct !DISubprogram(name: "pubsubSubscribePattern", scope: !3, file: !3, line: 10267, type: !3044, scopeLine: 10267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4357)
!4357 = !{!4358, !4359, !4360, !4361}
!4358 = !DILocalVariable(name: "c", arg: 1, scope: !4356, file: !3, line: 10267, type: !287)
!4359 = !DILocalVariable(name: "pattern", arg: 2, scope: !4356, file: !3, line: 10267, type: !145)
!4360 = !DILocalVariable(name: "retval", scope: !4356, file: !3, line: 10268, type: !45)
!4361 = !DILocalVariable(name: "pat", scope: !4362, file: !3, line: 10272, type: !4364)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 10270, column: 60)
!4363 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 10270, column: 9)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_typedef, name: "pubsubPattern", file: !3, line: 456, baseType: !4366)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pubsubPattern", file: !3, line: 453, size: 128, elements: !4367)
!4367 = !{!4368, !4369}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !4366, file: !3, line: 454, baseType: !287, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !4366, file: !3, line: 455, baseType: !145, size: 64, offset: 64)
!4370 = !DILocation(line: 0, scope: !4356)
!4371 = !DILocation(line: 10270, column: 26, scope: !4363)
!4372 = !DILocation(line: 10270, column: 42, scope: !4363)
!4373 = !DILocation(line: 10270, column: 9, scope: !4363)
!4374 = !DILocation(line: 10270, column: 51, scope: !4363)
!4375 = !DILocation(line: 10270, column: 9, scope: !4356)
!4376 = !DILocation(line: 10273, column: 28, scope: !4362)
!4377 = !DILocation(line: 10273, column: 9, scope: !4362)
!4378 = !DILocation(line: 10274, column: 9, scope: !4362)
!4379 = !DILocation(line: 10275, column: 15, scope: !4362)
!4380 = !DILocation(line: 0, scope: !4362)
!4381 = !DILocation(line: 10276, column: 24, scope: !4362)
!4382 = !DILocation(line: 10276, column: 14, scope: !4362)
!4383 = !DILocation(line: 10276, column: 22, scope: !4362)
!4384 = !{!4385, !714, i64 8}
!4385 = !{!"pubsubPattern", !714, i64 0, !714, i64 8}
!4386 = !DILocation(line: 10277, column: 14, scope: !4362)
!4387 = !DILocation(line: 10277, column: 21, scope: !4362)
!4388 = !{!4385, !714, i64 0}
!4389 = !DILocation(line: 10278, column: 32, scope: !4362)
!4390 = !{!709, !714, i64 968}
!4391 = !DILocation(line: 10278, column: 9, scope: !4362)
!4392 = !DILocation(line: 10279, column: 5, scope: !4362)
!4393 = !DILocation(line: 10281, column: 23, scope: !4356)
!4394 = !DILocation(line: 10281, column: 5, scope: !4356)
!4395 = !DILocation(line: 10282, column: 23, scope: !4356)
!4396 = !{!3571, !714, i64 280}
!4397 = !DILocation(line: 10282, column: 5, scope: !4356)
!4398 = !DILocation(line: 10283, column: 5, scope: !4356)
!4399 = !DILocation(line: 10284, column: 24, scope: !4356)
!4400 = !DILocation(line: 10284, column: 53, scope: !4356)
!4401 = !DILocation(line: 10284, column: 52, scope: !4356)
!4402 = !DILocation(line: 10284, column: 5, scope: !4356)
!4403 = !DILocation(line: 10285, column: 5, scope: !4356)
!4404 = distinct !DISubprogram(name: "getDecodedObject", scope: !3, file: !3, line: 3210, type: !1572, scopeLine: 3210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4405)
!4405 = !{!4406, !4407, !4408}
!4406 = !DILocalVariable(name: "o", arg: 1, scope: !4404, file: !3, line: 3210, type: !145)
!4407 = !DILocalVariable(name: "dec", scope: !4404, file: !3, line: 3211, type: !145)
!4408 = !DILocalVariable(name: "buf", scope: !4409, file: !3, line: 3218, type: !4256)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 3217, column: 71)
!4410 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 3217, column: 9)
!4411 = !DILocation(line: 0, scope: !4404)
!4412 = !DILocation(line: 3213, column: 12, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 3213, column: 9)
!4414 = !DILocation(line: 3213, column: 21, scope: !4413)
!4415 = !DILocation(line: 3213, column: 9, scope: !4404)
!4416 = !DILocation(line: 3214, column: 9, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 3213, column: 44)
!4418 = !DILocation(line: 3215, column: 9, scope: !4417)
!4419 = !DILocation(line: 3217, column: 12, scope: !4410)
!4420 = !DILocation(line: 3217, column: 17, scope: !4410)
!4421 = !DILocation(line: 3217, column: 33, scope: !4410)
!4422 = !DILocation(line: 3218, column: 9, scope: !4409)
!4423 = !DILocation(line: 3218, column: 14, scope: !4409)
!4424 = !DILocation(line: 3220, column: 35, scope: !4409)
!4425 = !DILocation(line: 3220, column: 26, scope: !4409)
!4426 = !DILocation(line: 3220, column: 9, scope: !4409)
!4427 = !DILocation(line: 3221, column: 38, scope: !4409)
!4428 = !DILocation(line: 3221, column: 15, scope: !4409)
!4429 = !DILocation(line: 3223, column: 5, scope: !4410)
!4430 = !DILocation(line: 3224, column: 9, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 3223, column: 12)
!4432 = !DILocation(line: 3226, column: 1, scope: !4404)
!4433 = !DISubprogram(name: "strlen", scope: !1082, file: !1082, line: 385, type: !4434, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!196, !741}
!4436 = distinct !DISubprogram(name: "_redisPanic", scope: !3, file: !3, line: 10753, type: !3031, scopeLine: 10753, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4437)
!4437 = !{!4438, !4439, !4440}
!4438 = !DILocalVariable(name: "msg", arg: 1, scope: !4436, file: !3, line: 10753, type: !47)
!4439 = !DILocalVariable(name: "file", arg: 2, scope: !4436, file: !3, line: 10753, type: !47)
!4440 = !DILocalVariable(name: "line", arg: 3, scope: !4436, file: !3, line: 10753, type: !45)
!4441 = !DILocation(line: 0, scope: !4436)
!4442 = !DILocation(line: 10754, column: 5, scope: !4436)
!4443 = !DILocation(line: 10755, column: 5, scope: !4436)
!4444 = !DILocation(line: 10757, column: 5, scope: !4436)
!4445 = !DILocation(line: 10758, column: 18, scope: !4436)
!4446 = !DILocation(line: 10760, column: 1, scope: !4436)
!4447 = distinct !DISubprogram(name: "pubsubUnsubscribePattern", scope: !3, file: !3, line: 10290, type: !4304, scopeLine: 10290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4448)
!4448 = !{!4449, !4450, !4451, !4452, !4453, !4454}
!4449 = !DILocalVariable(name: "c", arg: 1, scope: !4447, file: !3, line: 10290, type: !287)
!4450 = !DILocalVariable(name: "pattern", arg: 2, scope: !4447, file: !3, line: 10290, type: !145)
!4451 = !DILocalVariable(name: "notify", arg: 3, scope: !4447, file: !3, line: 10290, type: !45)
!4452 = !DILocalVariable(name: "ln", scope: !4447, file: !3, line: 10291, type: !64)
!4453 = !DILocalVariable(name: "pat", scope: !4447, file: !3, line: 10292, type: !4365)
!4454 = !DILocalVariable(name: "retval", scope: !4447, file: !3, line: 10293, type: !45)
!4455 = !DILocation(line: 0, scope: !4447)
!4456 = !DILocation(line: 10292, column: 5, scope: !4447)
!4457 = !DILocation(line: 10292, column: 19, scope: !4447)
!4458 = !DILocation(line: 10295, column: 5, scope: !4447)
!4459 = !DILocation(line: 10296, column: 32, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 10296, column: 9)
!4461 = !DILocation(line: 10296, column: 48, scope: !4460)
!4462 = !DILocation(line: 10296, column: 15, scope: !4460)
!4463 = !DILocation(line: 10296, column: 58, scope: !4460)
!4464 = !DILocation(line: 10296, column: 9, scope: !4447)
!4465 = !DILocation(line: 10298, column: 24, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 10296, column: 67)
!4467 = !DILocation(line: 10298, column: 9, scope: !4466)
!4468 = !DILocation(line: 10299, column: 13, scope: !4466)
!4469 = !DILocation(line: 10299, column: 20, scope: !4466)
!4470 = !DILocation(line: 10300, column: 13, scope: !4466)
!4471 = !DILocation(line: 10300, column: 21, scope: !4466)
!4472 = !DILocation(line: 10301, column: 35, scope: !4466)
!4473 = !DILocation(line: 10301, column: 14, scope: !4466)
!4474 = !DILocation(line: 10302, column: 28, scope: !4466)
!4475 = !DILocation(line: 10302, column: 9, scope: !4466)
!4476 = !DILocation(line: 10303, column: 5, scope: !4466)
!4477 = !DILocation(line: 10305, column: 9, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 10305, column: 9)
!4479 = !DILocation(line: 10305, column: 9, scope: !4447)
!4480 = !DILocation(line: 10306, column: 27, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 10305, column: 17)
!4482 = !DILocation(line: 10306, column: 9, scope: !4481)
!4483 = !DILocation(line: 10307, column: 27, scope: !4481)
!4484 = !{!3571, !714, i64 288}
!4485 = !DILocation(line: 10307, column: 9, scope: !4481)
!4486 = !DILocation(line: 10308, column: 9, scope: !4481)
!4487 = !DILocation(line: 10309, column: 28, scope: !4481)
!4488 = !DILocation(line: 10310, column: 24, scope: !4481)
!4489 = !DILocation(line: 10309, column: 56, scope: !4481)
!4490 = !DILocation(line: 10309, column: 9, scope: !4481)
!4491 = !DILocation(line: 10311, column: 5, scope: !4481)
!4492 = !DILocation(line: 10312, column: 5, scope: !4447)
!4493 = !DILocation(line: 10314, column: 1, scope: !4447)
!4494 = !DILocation(line: 10313, column: 5, scope: !4447)
!4495 = distinct !DISubprogram(name: "execCommandReplicateMulti", scope: !3, file: !3, line: 7536, type: !340, scopeLine: 7536, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4496)
!4496 = !{!4497, !4498, !4499}
!4497 = !DILocalVariable(name: "c", arg: 1, scope: !4495, file: !3, line: 7536, type: !287)
!4498 = !DILocalVariable(name: "cmd", scope: !4495, file: !3, line: 7537, type: !333)
!4499 = !DILocalVariable(name: "multistring", scope: !4495, file: !3, line: 7538, type: !145)
!4500 = !DILocation(line: 0, scope: !4495)
!4501 = !DILocation(line: 7538, column: 5, scope: !4495)
!4502 = !DILocation(line: 7538, column: 25, scope: !4495)
!4503 = !DILocation(line: 7538, column: 11, scope: !4495)
!4504 = !DILocation(line: 7540, column: 11, scope: !4495)
!4505 = !DILocation(line: 7541, column: 16, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 7541, column: 9)
!4507 = !DILocation(line: 7541, column: 9, scope: !4506)
!4508 = !DILocation(line: 7541, column: 9, scope: !4495)
!4509 = !DILocation(line: 7542, column: 35, scope: !4506)
!4510 = !DILocation(line: 7542, column: 39, scope: !4506)
!4511 = !DILocation(line: 7542, column: 9, scope: !4506)
!4512 = !DILocation(line: 7543, column: 9, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 7543, column: 9)
!4514 = !DILocation(line: 7543, column: 9, scope: !4495)
!4515 = !DILocation(line: 7544, column: 48, scope: !4513)
!4516 = !DILocation(line: 7544, column: 52, scope: !4513)
!4517 = !DILocation(line: 7544, column: 9, scope: !4513)
!4518 = !DILocation(line: 7545, column: 5, scope: !4495)
!4519 = !DILocation(line: 7546, column: 1, scope: !4495)
!4520 = distinct !DISubprogram(name: "initClientMultiState", scope: !3, file: !3, line: 7480, type: !340, scopeLine: 7480, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4521)
!4521 = !{!4522}
!4522 = !DILocalVariable(name: "c", arg: 1, scope: !4520, file: !3, line: 7480, type: !287)
!4523 = !DILocation(line: 0, scope: !4520)
!4524 = !DILocation(line: 7481, column: 15, scope: !4520)
!4525 = !DILocation(line: 7481, column: 24, scope: !4520)
!4526 = !DILocation(line: 7482, column: 15, scope: !4520)
!4527 = !DILocation(line: 7482, column: 21, scope: !4520)
!4528 = !DILocation(line: 7483, column: 1, scope: !4520)
!4529 = distinct !DISubprogram(name: "feedAppendOnlyFile", scope: !3, file: !3, line: 8302, type: !4530, scopeLine: 8302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4532)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{null, !333, !45, !305, !45}
!4532 = !{!4533, !4534, !4535, !4536, !4537, !4538, !4540}
!4533 = !DILocalVariable(name: "cmd", arg: 1, scope: !4529, file: !3, line: 8302, type: !333)
!4534 = !DILocalVariable(name: "dictid", arg: 2, scope: !4529, file: !3, line: 8302, type: !45)
!4535 = !DILocalVariable(name: "argv", arg: 3, scope: !4529, file: !3, line: 8302, type: !305)
!4536 = !DILocalVariable(name: "argc", arg: 4, scope: !4529, file: !3, line: 8302, type: !45)
!4537 = !DILocalVariable(name: "buf", scope: !4529, file: !3, line: 8303, type: !165)
!4538 = !DILocalVariable(name: "tmpargv", scope: !4529, file: !3, line: 8304, type: !4539)
!4539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 192, elements: !257)
!4540 = !DILocalVariable(name: "seldb", scope: !4541, file: !3, line: 8309, type: !762)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 8308, column: 39)
!4542 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 8308, column: 9)
!4543 = !DILocation(line: 0, scope: !4529)
!4544 = !DILocation(line: 8303, column: 15, scope: !4529)
!4545 = !DILocation(line: 8304, column: 5, scope: !4529)
!4546 = !DILocation(line: 8304, column: 11, scope: !4529)
!4547 = !DILocation(line: 8308, column: 26, scope: !4542)
!4548 = !DILocation(line: 8308, column: 16, scope: !4542)
!4549 = !DILocation(line: 8308, column: 9, scope: !4529)
!4550 = !DILocation(line: 8309, column: 9, scope: !4541)
!4551 = !DILocation(line: 8309, column: 14, scope: !4541)
!4552 = !DILocation(line: 8311, column: 9, scope: !4541)
!4553 = !DILocation(line: 8313, column: 28, scope: !4541)
!4554 = !DILocation(line: 8312, column: 15, scope: !4541)
!4555 = !DILocation(line: 8314, column: 28, scope: !4541)
!4556 = !DILocation(line: 8315, column: 5, scope: !4542)
!4557 = !DILocation(line: 8315, column: 5, scope: !4541)
!4558 = !DILocation(line: 8317, column: 14, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 8317, column: 9)
!4560 = !DILocation(line: 8317, column: 19, scope: !4559)
!4561 = !DILocation(line: 8317, column: 9, scope: !4529)
!4562 = !DILocation(line: 8319, column: 48, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 8317, column: 37)
!4564 = !DILocation(line: 8319, column: 56, scope: !4563)
!4565 = !DILocation(line: 8319, column: 15, scope: !4563)
!4566 = !DILocation(line: 8320, column: 5, scope: !4563)
!4567 = !DILocation(line: 8320, column: 26, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 8320, column: 16)
!4569 = !DILocation(line: 8320, column: 16, scope: !4559)
!4570 = !DILocation(line: 8322, column: 22, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 8320, column: 43)
!4572 = !DILocation(line: 8322, column: 9, scope: !4571)
!4573 = !DILocation(line: 8322, column: 20, scope: !4571)
!4574 = !DILocation(line: 8323, column: 22, scope: !4571)
!4575 = !DILocation(line: 8323, column: 9, scope: !4571)
!4576 = !DILocation(line: 8323, column: 20, scope: !4571)
!4577 = !DILocation(line: 8324, column: 22, scope: !4571)
!4578 = !DILocation(line: 8324, column: 9, scope: !4571)
!4579 = !DILocation(line: 8324, column: 20, scope: !4571)
!4580 = !DILocation(line: 8325, column: 15, scope: !4571)
!4581 = !DILocation(line: 8326, column: 22, scope: !4571)
!4582 = !DILocation(line: 8326, column: 9, scope: !4571)
!4583 = !DILocation(line: 8327, column: 48, scope: !4571)
!4584 = !DILocation(line: 8327, column: 56, scope: !4571)
!4585 = !DILocation(line: 8327, column: 15, scope: !4571)
!4586 = !DILocation(line: 8328, column: 5, scope: !4571)
!4587 = !DILocation(line: 8329, column: 15, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 8328, column: 12)
!4589 = !DILocation(line: 0, scope: !4559)
!4590 = !DILocation(line: 8335, column: 38, scope: !4529)
!4591 = !{!709, !714, i64 456}
!4592 = !DILocation(line: 8335, column: 49, scope: !4529)
!4593 = !DILocation(line: 8335, column: 21, scope: !4529)
!4594 = !DILocation(line: 8335, column: 19, scope: !4529)
!4595 = !DILocation(line: 8341, column: 16, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 8341, column: 9)
!4597 = !DILocation(line: 8341, column: 34, scope: !4596)
!4598 = !DILocation(line: 8341, column: 9, scope: !4529)
!4599 = !DILocation(line: 8342, column: 48, scope: !4596)
!4600 = !DILocation(line: 8342, column: 65, scope: !4596)
!4601 = !DILocation(line: 8342, column: 31, scope: !4596)
!4602 = !DILocation(line: 8342, column: 29, scope: !4596)
!4603 = !DILocation(line: 8342, column: 9, scope: !4596)
!4604 = !DILocation(line: 8344, column: 5, scope: !4529)
!4605 = !DILocation(line: 8345, column: 1, scope: !4529)
!4606 = distinct !DISubprogram(name: "replicationFeedSlaves", scope: !3, file: !3, line: 2456, type: !4607, scopeLine: 2456, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4609)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{null, !58, !45, !305, !45}
!4609 = !{!4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4623, !4624, !4626}
!4610 = !DILocalVariable(name: "slaves", arg: 1, scope: !4606, file: !3, line: 2456, type: !58)
!4611 = !DILocalVariable(name: "dictid", arg: 2, scope: !4606, file: !3, line: 2456, type: !45)
!4612 = !DILocalVariable(name: "argv", arg: 3, scope: !4606, file: !3, line: 2456, type: !305)
!4613 = !DILocalVariable(name: "argc", arg: 4, scope: !4606, file: !3, line: 2456, type: !45)
!4614 = !DILocalVariable(name: "ln", scope: !4606, file: !3, line: 2457, type: !64)
!4615 = !DILocalVariable(name: "li", scope: !4606, file: !3, line: 2458, type: !831)
!4616 = !DILocalVariable(name: "outc", scope: !4606, file: !3, line: 2459, type: !45)
!4617 = !DILocalVariable(name: "j", scope: !4606, file: !3, line: 2459, type: !45)
!4618 = !DILocalVariable(name: "outv", scope: !4606, file: !3, line: 2460, type: !305)
!4619 = !DILocalVariable(name: "static_outv", scope: !4606, file: !3, line: 2464, type: !4620)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 1600, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 25)
!4623 = !DILocalVariable(name: "lenobj", scope: !4606, file: !3, line: 2465, type: !145)
!4624 = !DILocalVariable(name: "slave", scope: !4625, file: !3, line: 2493, type: !287)
!4625 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2492, column: 33)
!4626 = !DILocalVariable(name: "selectcmd", scope: !4627, file: !3, line: 2500, type: !145)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 2499, column: 42)
!4628 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2499, column: 13)
!4629 = !DILocation(line: 0, scope: !4606)
!4630 = !DILocation(line: 2458, column: 5, scope: !4606)
!4631 = !DILocation(line: 2458, column: 14, scope: !4606)
!4632 = !DILocation(line: 2464, column: 5, scope: !4606)
!4633 = !DILocation(line: 2464, column: 11, scope: !4606)
!4634 = !DILocation(line: 2467, column: 14, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2467, column: 9)
!4636 = !DILocation(line: 2467, column: 9, scope: !4606)
!4637 = !DILocation(line: 2468, column: 16, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2467, column: 36)
!4639 = !DILocation(line: 2469, column: 5, scope: !4638)
!4640 = !DILocation(line: 2470, column: 43, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2469, column: 12)
!4642 = !DILocation(line: 2470, column: 45, scope: !4641)
!4643 = !DILocation(line: 2470, column: 38, scope: !4641)
!4644 = !DILocation(line: 2470, column: 37, scope: !4641)
!4645 = !DILocation(line: 2470, column: 16, scope: !4641)
!4646 = !DILocation(line: 0, scope: !4635)
!4647 = !DILocation(line: 2474, column: 26, scope: !4606)
!4648 = !DILocation(line: 2474, column: 13, scope: !4606)
!4649 = !DILocation(line: 2473, column: 14, scope: !4606)
!4650 = !DILocation(line: 2475, column: 13, scope: !4606)
!4651 = !DILocation(line: 2475, column: 22, scope: !4606)
!4652 = !DILocation(line: 2476, column: 18, scope: !4606)
!4653 = !DILocation(line: 2477, column: 19, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 2477, column: 5)
!4655 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2477, column: 5)
!4656 = !DILocation(line: 2477, column: 5, scope: !4655)
!4657 = !DILocation(line: 2490, column: 5, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2490, column: 5)
!4659 = !DILocation(line: 2490, column: 19, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2490, column: 5)
!4661 = !DILocation(line: 2479, column: 26, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 2477, column: 32)
!4663 = !DILocation(line: 2480, column: 49, scope: !4662)
!4664 = !DILocation(line: 2480, column: 33, scope: !4662)
!4665 = !DILocation(line: 2479, column: 13, scope: !4662)
!4666 = !DILocation(line: 2478, column: 18, scope: !4662)
!4667 = !DILocation(line: 2481, column: 17, scope: !4662)
!4668 = !DILocation(line: 2481, column: 26, scope: !4662)
!4669 = !DILocation(line: 2482, column: 18, scope: !4662)
!4670 = !DILocation(line: 2482, column: 9, scope: !4662)
!4671 = !DILocation(line: 2482, column: 22, scope: !4662)
!4672 = !DILocation(line: 2483, column: 24, scope: !4662)
!4673 = !DILocation(line: 2483, column: 18, scope: !4662)
!4674 = !DILocation(line: 2483, column: 9, scope: !4662)
!4675 = !DILocation(line: 2483, column: 22, scope: !4662)
!4676 = !DILocation(line: 2484, column: 31, scope: !4662)
!4677 = !DILocation(line: 2484, column: 18, scope: !4662)
!4678 = !DILocation(line: 2484, column: 9, scope: !4662)
!4679 = !DILocation(line: 2484, column: 22, scope: !4662)
!4680 = !DILocation(line: 2477, column: 28, scope: !4654)
!4681 = distinct !{!4681, !4656, !4682}
!4682 = !DILocation(line: 2485, column: 5, scope: !4655)
!4683 = !DILocation(line: 2490, column: 45, scope: !4660)
!4684 = !DILocation(line: 2490, column: 32, scope: !4660)
!4685 = !DILocation(line: 2490, column: 28, scope: !4660)
!4686 = distinct !{!4686, !4657, !4687}
!4687 = !DILocation(line: 2490, column: 52, scope: !4658)
!4688 = !DILocation(line: 2491, column: 5, scope: !4606)
!4689 = !DILocation(line: 2492, column: 17, scope: !4606)
!4690 = !DILocation(line: 2492, column: 5, scope: !4606)
!4691 = !DILocation(line: 2493, column: 34, scope: !4625)
!4692 = !DILocation(line: 0, scope: !4625)
!4693 = !DILocation(line: 2496, column: 20, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2496, column: 13)
!4695 = !DILocation(line: 2496, column: 30, scope: !4694)
!4696 = !DILocation(line: 2496, column: 13, scope: !4625)
!4697 = distinct !{!4697, !4690, !4698}
!4698 = !DILocation(line: 2523, column: 5, scope: !4606)
!4699 = !DILocation(line: 2499, column: 20, scope: !4628)
!4700 = !{!897, !713, i64 92}
!4701 = !DILocation(line: 2499, column: 31, scope: !4628)
!4702 = !DILocation(line: 2499, column: 13, scope: !4625)
!4703 = !DILocation(line: 2502, column: 13, scope: !4627)
!4704 = !DILocation(line: 2503, column: 40, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 2502, column: 28)
!4706 = !{!3571, !714, i64 152}
!4707 = !DILocation(line: 0, scope: !4627)
!4708 = !DILocation(line: 2503, column: 49, scope: !4705)
!4709 = !DILocation(line: 2504, column: 40, scope: !4705)
!4710 = !{!3571, !714, i64 160}
!4711 = !DILocation(line: 2504, column: 49, scope: !4705)
!4712 = !DILocation(line: 2505, column: 40, scope: !4705)
!4713 = !{!3571, !714, i64 168}
!4714 = !DILocation(line: 2505, column: 49, scope: !4705)
!4715 = !DILocation(line: 2506, column: 40, scope: !4705)
!4716 = !{!3571, !714, i64 176}
!4717 = !DILocation(line: 2506, column: 49, scope: !4705)
!4718 = !DILocation(line: 2507, column: 40, scope: !4705)
!4719 = !{!3571, !714, i64 184}
!4720 = !DILocation(line: 2507, column: 49, scope: !4705)
!4721 = !DILocation(line: 2508, column: 40, scope: !4705)
!4722 = !{!3571, !714, i64 192}
!4723 = !DILocation(line: 2508, column: 49, scope: !4705)
!4724 = !DILocation(line: 2509, column: 40, scope: !4705)
!4725 = !{!3571, !714, i64 200}
!4726 = !DILocation(line: 2509, column: 49, scope: !4705)
!4727 = !DILocation(line: 2510, column: 40, scope: !4705)
!4728 = !{!3571, !714, i64 208}
!4729 = !DILocation(line: 2510, column: 49, scope: !4705)
!4730 = !DILocation(line: 2511, column: 40, scope: !4705)
!4731 = !{!3571, !714, i64 216}
!4732 = !DILocation(line: 2511, column: 49, scope: !4705)
!4733 = !DILocation(line: 2512, column: 40, scope: !4705)
!4734 = !{!3571, !714, i64 224}
!4735 = !DILocation(line: 2512, column: 49, scope: !4705)
!4736 = !DILocation(line: 2515, column: 34, scope: !4705)
!4737 = !DILocation(line: 2515, column: 21, scope: !4705)
!4738 = !DILocation(line: 2514, column: 29, scope: !4705)
!4739 = !DILocation(line: 2516, column: 28, scope: !4705)
!4740 = !DILocation(line: 2516, column: 37, scope: !4705)
!4741 = !DILocation(line: 2517, column: 17, scope: !4705)
!4742 = !DILocation(line: 0, scope: !4705)
!4743 = !DILocation(line: 2519, column: 13, scope: !4627)
!4744 = !DILocation(line: 2520, column: 31, scope: !4627)
!4745 = !DILocation(line: 2521, column: 9, scope: !4627)
!4746 = !DILocation(line: 2522, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2522, column: 9)
!4748 = !DILocation(line: 2522, column: 51, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 2522, column: 9)
!4750 = !DILocation(line: 2522, column: 36, scope: !4749)
!4751 = !DILocation(line: 2522, column: 32, scope: !4749)
!4752 = !DILocation(line: 2522, column: 23, scope: !4749)
!4753 = distinct !{!4753, !4746, !4754}
!4754 = !DILocation(line: 2522, column: 58, scope: !4747)
!4755 = !DILocation(line: 2524, column: 5, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2524, column: 5)
!4757 = !DILocation(line: 2524, column: 45, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2524, column: 5)
!4759 = !DILocation(line: 2524, column: 32, scope: !4758)
!4760 = !DILocation(line: 2524, column: 28, scope: !4758)
!4761 = !DILocation(line: 2524, column: 19, scope: !4758)
!4762 = distinct !{!4762, !4755, !4763}
!4763 = !DILocation(line: 2524, column: 52, scope: !4756)
!4764 = !DILocation(line: 2525, column: 17, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2525, column: 9)
!4766 = !DILocation(line: 2525, column: 14, scope: !4765)
!4767 = !DILocation(line: 2525, column: 9, scope: !4606)
!4768 = !DILocation(line: 2525, column: 36, scope: !4765)
!4769 = !DILocation(line: 2525, column: 30, scope: !4765)
!4770 = !DILocation(line: 2526, column: 1, scope: !4606)
!4771 = distinct !DISubprogram(name: "expireCommand", scope: !3, file: !3, line: 7457, type: !340, scopeLine: 7457, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4772)
!4772 = !{!4773}
!4773 = !DILocalVariable(name: "c", arg: 1, scope: !4771, file: !3, line: 7457, type: !287)
!4774 = !DILocation(line: 0, scope: !4771)
!4775 = !DILocation(line: 7458, column: 31, scope: !4771)
!4776 = !DILocation(line: 7458, column: 28, scope: !4771)
!4777 = !DILocation(line: 7458, column: 39, scope: !4771)
!4778 = !DILocation(line: 7458, column: 5, scope: !4771)
!4779 = !DILocation(line: 7459, column: 1, scope: !4771)
!4780 = distinct !DISubprogram(name: "catAppendOnlyExpireAtCommand", scope: !3, file: !3, line: 8282, type: !4781, scopeLine: 8282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4783)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!165, !165, !145, !145}
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789}
!4784 = !DILocalVariable(name: "buf", arg: 1, scope: !4780, file: !3, line: 8282, type: !165)
!4785 = !DILocalVariable(name: "key", arg: 2, scope: !4780, file: !3, line: 8282, type: !145)
!4786 = !DILocalVariable(name: "seconds", arg: 3, scope: !4780, file: !3, line: 8282, type: !145)
!4787 = !DILocalVariable(name: "argc", scope: !4780, file: !3, line: 8283, type: !45)
!4788 = !DILocalVariable(name: "when", scope: !4780, file: !3, line: 8284, type: !53)
!4789 = !DILocalVariable(name: "argv", scope: !4780, file: !3, line: 8285, type: !4539)
!4790 = !DILocation(line: 0, scope: !4780)
!4791 = !DILocation(line: 8285, column: 5, scope: !4780)
!4792 = !DILocation(line: 8285, column: 11, scope: !4780)
!4793 = !DILocation(line: 8288, column: 15, scope: !4780)
!4794 = !DILocation(line: 8289, column: 12, scope: !4780)
!4795 = !DILocation(line: 8289, column: 39, scope: !4780)
!4796 = !DILocation(line: 8289, column: 23, scope: !4780)
!4797 = !DILocation(line: 8289, column: 22, scope: !4780)
!4798 = !DILocation(line: 8290, column: 18, scope: !4780)
!4799 = !DILocation(line: 8290, column: 5, scope: !4780)
!4800 = !DILocation(line: 8292, column: 15, scope: !4780)
!4801 = !DILocation(line: 8292, column: 5, scope: !4780)
!4802 = !DILocation(line: 8292, column: 13, scope: !4780)
!4803 = !DILocation(line: 8293, column: 5, scope: !4780)
!4804 = !DILocation(line: 8293, column: 13, scope: !4780)
!4805 = !DILocation(line: 8295, column: 22, scope: !4780)
!4806 = !DILocation(line: 8295, column: 9, scope: !4780)
!4807 = !DILocation(line: 8294, column: 15, scope: !4780)
!4808 = !DILocation(line: 8294, column: 5, scope: !4780)
!4809 = !DILocation(line: 8294, column: 13, scope: !4780)
!4810 = !DILocation(line: 8296, column: 11, scope: !4780)
!4811 = !DILocation(line: 8297, column: 18, scope: !4780)
!4812 = !DILocation(line: 8297, column: 5, scope: !4780)
!4813 = !DILocation(line: 8298, column: 18, scope: !4780)
!4814 = !DILocation(line: 8298, column: 5, scope: !4780)
!4815 = !DILocation(line: 8300, column: 1, scope: !4780)
!4816 = !DILocation(line: 8299, column: 5, scope: !4780)
!4817 = distinct !DISubprogram(name: "setexCommand", scope: !3, file: !3, line: 4296, type: !340, scopeLine: 4296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4818)
!4818 = !{!4819}
!4819 = !DILocalVariable(name: "c", arg: 1, scope: !4817, file: !3, line: 4296, type: !287)
!4820 = !DILocation(line: 0, scope: !4817)
!4821 = !DILocation(line: 4297, column: 30, scope: !4817)
!4822 = !DILocation(line: 4297, column: 27, scope: !4817)
!4823 = !DILocation(line: 4297, column: 38, scope: !4817)
!4824 = !DILocation(line: 4297, column: 49, scope: !4817)
!4825 = !DILocation(line: 4297, column: 5, scope: !4817)
!4826 = !DILocation(line: 4298, column: 1, scope: !4817)
!4827 = distinct !DISubprogram(name: "catAppendOnlyGenericCommand", scope: !3, file: !3, line: 8269, type: !4828, scopeLine: 8269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4830)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!165, !165, !45, !305}
!4830 = !{!4831, !4832, !4833, !4834, !4835}
!4831 = !DILocalVariable(name: "buf", arg: 1, scope: !4827, file: !3, line: 8269, type: !165)
!4832 = !DILocalVariable(name: "argc", arg: 2, scope: !4827, file: !3, line: 8269, type: !45)
!4833 = !DILocalVariable(name: "argv", arg: 3, scope: !4827, file: !3, line: 8269, type: !305)
!4834 = !DILocalVariable(name: "j", scope: !4827, file: !3, line: 8270, type: !45)
!4835 = !DILocalVariable(name: "o", scope: !4836, file: !3, line: 8273, type: !145)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 8272, column: 32)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 8272, column: 5)
!4838 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 8272, column: 5)
!4839 = !DILocation(line: 0, scope: !4827)
!4840 = !DILocation(line: 8271, column: 11, scope: !4827)
!4841 = !DILocation(line: 8272, column: 19, scope: !4837)
!4842 = !DILocation(line: 8272, column: 5, scope: !4838)
!4843 = !DILocation(line: 8273, column: 36, scope: !4836)
!4844 = !DILocation(line: 8273, column: 19, scope: !4836)
!4845 = !DILocation(line: 0, scope: !4836)
!4846 = !DILocation(line: 8274, column: 68, scope: !4836)
!4847 = !DILocation(line: 8274, column: 58, scope: !4836)
!4848 = !DILocation(line: 8274, column: 15, scope: !4836)
!4849 = !DILocation(line: 8275, column: 32, scope: !4836)
!4850 = !DILocation(line: 8275, column: 36, scope: !4836)
!4851 = !DILocation(line: 8275, column: 15, scope: !4836)
!4852 = !DILocation(line: 8276, column: 15, scope: !4836)
!4853 = !DILocation(line: 8277, column: 22, scope: !4836)
!4854 = !DILocation(line: 8277, column: 9, scope: !4836)
!4855 = !DILocation(line: 8272, column: 28, scope: !4837)
!4856 = distinct !{!4856, !4842, !4857}
!4857 = !DILocation(line: 8278, column: 5, scope: !4838)
!4858 = !DILocation(line: 8279, column: 5, scope: !4827)
!4859 = distinct !DISubprogram(name: "expireGenericCommand", scope: !3, file: !3, line: 7428, type: !4860, scopeLine: 7428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4862)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{null, !287, !145, !145, !53}
!4862 = !{!4863, !4864, !4865, !4866, !4867, !4868, !4869}
!4863 = !DILocalVariable(name: "c", arg: 1, scope: !4859, file: !3, line: 7428, type: !287)
!4864 = !DILocalVariable(name: "key", arg: 2, scope: !4859, file: !3, line: 7428, type: !145)
!4865 = !DILocalVariable(name: "param", arg: 3, scope: !4859, file: !3, line: 7428, type: !145)
!4866 = !DILocalVariable(name: "offset", arg: 4, scope: !4859, file: !3, line: 7428, type: !53)
!4867 = !DILocalVariable(name: "de", scope: !4859, file: !3, line: 7429, type: !124)
!4868 = !DILocalVariable(name: "seconds", scope: !4859, file: !3, line: 7430, type: !49)
!4869 = !DILocalVariable(name: "when", scope: !4870, file: !3, line: 7446, type: !49)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 7445, column: 12)
!4871 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 7441, column: 9)
!4872 = !DILocation(line: 0, scope: !4859)
!4873 = !DILocation(line: 7430, column: 5, scope: !4859)
!4874 = !DILocation(line: 7432, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 7432, column: 9)
!4876 = !DILocation(line: 7432, column: 60, scope: !4875)
!4877 = !DILocation(line: 7432, column: 9, scope: !4859)
!4878 = !DILocation(line: 7434, column: 13, scope: !4859)
!4879 = !DILocation(line: 7436, column: 22, scope: !4859)
!4880 = !DILocation(line: 7436, column: 26, scope: !4859)
!4881 = !DILocation(line: 7436, column: 31, scope: !4859)
!4882 = !DILocation(line: 7436, column: 10, scope: !4859)
!4883 = !DILocation(line: 7437, column: 12, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 7437, column: 9)
!4885 = !DILocation(line: 7437, column: 9, scope: !4859)
!4886 = !DILocation(line: 7438, column: 27, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 7437, column: 21)
!4888 = !DILocation(line: 7438, column: 9, scope: !4887)
!4889 = !DILocation(line: 7439, column: 9, scope: !4887)
!4890 = !DILocation(line: 7441, column: 17, scope: !4871)
!4891 = !DILocation(line: 7441, column: 9, scope: !4859)
!4892 = !DILocation(line: 7442, column: 26, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 7442, column: 13)
!4894 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 7441, column: 23)
!4895 = !DILocation(line: 7442, column: 13, scope: !4893)
!4896 = !DILocation(line: 7442, column: 13, scope: !4894)
!4897 = !DILocation(line: 7442, column: 47, scope: !4893)
!4898 = !DILocation(line: 7442, column: 35, scope: !4893)
!4899 = !DILocation(line: 7443, column: 28, scope: !4894)
!4900 = !DILocation(line: 7443, column: 9, scope: !4894)
!4901 = !DILocation(line: 7444, column: 9, scope: !4894)
!4902 = !DILocation(line: 7446, column: 23, scope: !4870)
!4903 = !DILocation(line: 7446, column: 33, scope: !4870)
!4904 = !DILocation(line: 0, scope: !4870)
!4905 = !DILocation(line: 7447, column: 26, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 7447, column: 13)
!4907 = !DILocation(line: 7447, column: 13, scope: !4906)
!4908 = !DILocation(line: 7447, column: 13, scope: !4870)
!4909 = !DILocation(line: 7448, column: 31, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 7447, column: 40)
!4911 = !DILocation(line: 7448, column: 13, scope: !4910)
!4912 = !DILocation(line: 7449, column: 25, scope: !4910)
!4913 = !DILocation(line: 7450, column: 9, scope: !4910)
!4914 = !DILocation(line: 7451, column: 31, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 7450, column: 16)
!4916 = !DILocation(line: 7451, column: 13, scope: !4915)
!4917 = !DILocation(line: 7455, column: 1, scope: !4859)
!4918 = distinct !DISubprogram(name: "getLongFromObjectOrReply", scope: !3, file: !3, line: 3356, type: !4919, scopeLine: 3356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4922)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!45, !287, !145, !4921, !741}
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!4922 = !{!4923, !4924, !4925, !4926, !4927}
!4923 = !DILocalVariable(name: "c", arg: 1, scope: !4918, file: !3, line: 3356, type: !287)
!4924 = !DILocalVariable(name: "o", arg: 2, scope: !4918, file: !3, line: 3356, type: !145)
!4925 = !DILocalVariable(name: "target", arg: 3, scope: !4918, file: !3, line: 3356, type: !4921)
!4926 = !DILocalVariable(name: "msg", arg: 4, scope: !4918, file: !3, line: 3356, type: !741)
!4927 = !DILocalVariable(name: "value", scope: !4918, file: !3, line: 3357, type: !54)
!4928 = !DILocation(line: 0, scope: !4918)
!4929 = !DILocation(line: 3357, column: 5, scope: !4918)
!4930 = !DILocation(line: 3359, column: 9, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 3359, column: 9)
!4932 = !DILocation(line: 3359, column: 57, scope: !4931)
!4933 = !DILocation(line: 3359, column: 9, scope: !4918)
!4934 = !DILocation(line: 3360, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 3360, column: 9)
!4936 = !{!715, !715, i64 0}
!4937 = !DILocation(line: 3369, column: 13, scope: !4918)
!4938 = !DILocation(line: 3370, column: 5, scope: !4918)
!4939 = !DILocation(line: 3371, column: 1, scope: !4918)
!4940 = distinct !DISubprogram(name: "setExpire", scope: !3, file: !3, line: 7375, type: !4941, scopeLine: 7375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4943)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{!45, !293, !145, !49}
!4943 = !{!4944, !4945, !4946}
!4944 = !DILocalVariable(name: "db", arg: 1, scope: !4940, file: !3, line: 7375, type: !293)
!4945 = !DILocalVariable(name: "key", arg: 2, scope: !4940, file: !3, line: 7375, type: !145)
!4946 = !DILocalVariable(name: "when", arg: 3, scope: !4940, file: !3, line: 7375, type: !49)
!4947 = !DILocation(line: 0, scope: !4940)
!4948 = !DILocation(line: 7376, column: 21, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 7376, column: 9)
!4950 = !DILocation(line: 7376, column: 29, scope: !4949)
!4951 = !DILocation(line: 7376, column: 33, scope: !4949)
!4952 = !DILocation(line: 7376, column: 9, scope: !4949)
!4953 = !DILocation(line: 7376, column: 46, scope: !4949)
!4954 = !DILocation(line: 7376, column: 9, scope: !4940)
!4955 = !DILocation(line: 7379, column: 9, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 7378, column: 12)
!4957 = !DILocation(line: 7380, column: 9, scope: !4956)
!4958 = !DILocation(line: 0, scope: !4949)
!4959 = !DILocation(line: 7382, column: 1, scope: !4940)
!4960 = distinct !DISubprogram(name: "getLongLongFromObjectOrReply", scope: !3, file: !3, line: 3341, type: !4961, scopeLine: 3341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4964)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!45, !287, !145, !4963, !741}
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!4964 = !{!4965, !4966, !4967, !4968, !4969}
!4965 = !DILocalVariable(name: "c", arg: 1, scope: !4960, file: !3, line: 3341, type: !287)
!4966 = !DILocalVariable(name: "o", arg: 2, scope: !4960, file: !3, line: 3341, type: !145)
!4967 = !DILocalVariable(name: "target", arg: 3, scope: !4960, file: !3, line: 3341, type: !4963)
!4968 = !DILocalVariable(name: "msg", arg: 4, scope: !4960, file: !3, line: 3341, type: !741)
!4969 = !DILocalVariable(name: "value", scope: !4960, file: !3, line: 3342, type: !54)
!4970 = !DILocation(line: 0, scope: !4960)
!4971 = !DILocation(line: 3342, column: 5, scope: !4960)
!4972 = !DILocation(line: 3343, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 3343, column: 9)
!4974 = !DILocation(line: 3343, column: 42, scope: !4973)
!4975 = !DILocation(line: 3343, column: 9, scope: !4960)
!4976 = !DILocation(line: 3344, column: 17, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 3344, column: 13)
!4978 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 3343, column: 55)
!4979 = !DILocation(line: 3344, column: 13, scope: !4978)
!4980 = !DILocation(line: 3345, column: 41, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 3344, column: 26)
!4982 = !DILocation(line: 3345, column: 28, scope: !4981)
!4983 = !DILocation(line: 3345, column: 13, scope: !4981)
!4984 = !DILocation(line: 3346, column: 9, scope: !4981)
!4985 = !DILocation(line: 3347, column: 28, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 3346, column: 16)
!4987 = !DILocation(line: 3347, column: 13, scope: !4986)
!4988 = !DILocation(line: 3352, column: 15, scope: !4960)
!4989 = !DILocation(line: 3352, column: 13, scope: !4960)
!4990 = !DILocation(line: 3353, column: 5, scope: !4960)
!4991 = !DILocation(line: 3354, column: 1, scope: !4960)
!4992 = distinct !DISubprogram(name: "getLongLongFromObject", scope: !3, file: !3, line: 3319, type: !4993, scopeLine: 3319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4995)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!45, !145, !4963}
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DILocalVariable(name: "o", arg: 1, scope: !4992, file: !3, line: 3319, type: !145)
!4997 = !DILocalVariable(name: "target", arg: 2, scope: !4992, file: !3, line: 3319, type: !4963)
!4998 = !DILocalVariable(name: "value", scope: !4992, file: !3, line: 3320, type: !54)
!4999 = !DILocalVariable(name: "eptr", scope: !4992, file: !3, line: 3321, type: !47)
!5000 = !DILocation(line: 0, scope: !4992)
!5001 = !DILocation(line: 3321, column: 5, scope: !4992)
!5002 = !DILocation(line: 3323, column: 11, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 3323, column: 9)
!5004 = !DILocation(line: 3323, column: 9, scope: !4992)
!5005 = !DILocation(line: 3326, column: 9, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 3325, column: 12)
!5007 = !DILocation(line: 3327, column: 16, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 3327, column: 13)
!5009 = !DILocation(line: 3327, column: 13, scope: !5006)
!5010 = !DILocation(line: 3328, column: 32, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 3327, column: 48)
!5012 = !DILocation(line: 3328, column: 21, scope: !5011)
!5013 = !DILocation(line: 3329, column: 17, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 3329, column: 17)
!5015 = !DILocation(line: 3329, column: 25, scope: !5014)
!5016 = !DILocation(line: 3329, column: 17, scope: !5011)
!5017 = !DILocation(line: 3331, column: 30, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3330, column: 55)
!5019 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 3330, column: 20)
!5020 = !DILocation(line: 3331, column: 21, scope: !5018)
!5021 = !DILocation(line: 3333, column: 13, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3332, column: 16)
!5023 = !DILocation(line: 0, scope: !5003)
!5024 = !DILocation(line: 3337, column: 13, scope: !4992)
!5025 = !DILocation(line: 3338, column: 5, scope: !4992)
!5026 = !DILocation(line: 3339, column: 1, scope: !4992)
!5027 = !DISubprogram(name: "strtoll", scope: !1432, file: !1432, line: 200, type: !5028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!54, !1076, !1476, !45}
!5030 = distinct !DISubprogram(name: "setGenericCommand", scope: !3, file: !3, line: 4249, type: !5031, scopeLine: 4249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{null, !287, !45, !145, !145, !145}
!5033 = !{!5034, !5035, !5036, !5037, !5038, !5039, !5040}
!5034 = !DILocalVariable(name: "c", arg: 1, scope: !5030, file: !3, line: 4249, type: !287)
!5035 = !DILocalVariable(name: "nx", arg: 2, scope: !5030, file: !3, line: 4249, type: !45)
!5036 = !DILocalVariable(name: "key", arg: 3, scope: !5030, file: !3, line: 4249, type: !145)
!5037 = !DILocalVariable(name: "val", arg: 4, scope: !5030, file: !3, line: 4249, type: !145)
!5038 = !DILocalVariable(name: "expire", arg: 5, scope: !5030, file: !3, line: 4249, type: !145)
!5039 = !DILocalVariable(name: "retval", scope: !5030, file: !3, line: 4250, type: !45)
!5040 = !DILocalVariable(name: "seconds", scope: !5030, file: !3, line: 4251, type: !53)
!5041 = !DILocation(line: 0, scope: !5030)
!5042 = !DILocation(line: 4251, column: 5, scope: !5030)
!5043 = !DILocation(line: 4251, column: 10, scope: !5030)
!5044 = !DILocation(line: 4253, column: 9, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 4253, column: 9)
!5046 = !DILocation(line: 4253, column: 9, scope: !5030)
!5047 = !DILocation(line: 4254, column: 13, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 4254, column: 13)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 4253, column: 17)
!5050 = !DILocation(line: 4254, column: 65, scope: !5048)
!5051 = !DILocation(line: 4254, column: 13, scope: !5049)
!5052 = !DILocation(line: 4256, column: 13, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 4256, column: 13)
!5054 = !DILocation(line: 4256, column: 21, scope: !5053)
!5055 = !DILocation(line: 4256, column: 13, scope: !5049)
!5056 = !DILocation(line: 4257, column: 27, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 4256, column: 27)
!5058 = !DILocation(line: 4257, column: 13, scope: !5057)
!5059 = !DILocation(line: 4258, column: 13, scope: !5057)
!5060 = !DILocation(line: 4262, column: 9, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 4262, column: 9)
!5062 = !DILocation(line: 4262, column: 9, scope: !5030)
!5063 = !DILocation(line: 4262, column: 33, scope: !5061)
!5064 = !DILocation(line: 4262, column: 13, scope: !5061)
!5065 = !DILocation(line: 4263, column: 25, scope: !5030)
!5066 = !DILocation(line: 4263, column: 29, scope: !5030)
!5067 = !DILocation(line: 4263, column: 34, scope: !5030)
!5068 = !DILocation(line: 4263, column: 38, scope: !5030)
!5069 = !DILocation(line: 4263, column: 14, scope: !5030)
!5070 = !DILocation(line: 4264, column: 16, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 4264, column: 9)
!5072 = !DILocation(line: 4264, column: 9, scope: !5030)
!5073 = !DILocation(line: 4265, column: 13, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 4264, column: 29)
!5075 = !DILocation(line: 4270, column: 24, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 4270, column: 17)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 4265, column: 18)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 4265, column: 13)
!5079 = !DILocation(line: 4270, column: 17, scope: !5076)
!5080 = !DILocation(line: 4270, column: 35, scope: !5076)
!5081 = !DILocation(line: 4270, column: 57, scope: !5076)
!5082 = !DILocation(line: 4270, column: 38, scope: !5076)
!5083 = !DILocation(line: 4270, column: 17, scope: !5077)
!5084 = !DILocation(line: 4271, column: 17, scope: !5076)
!5085 = !DILocation(line: 4272, column: 28, scope: !5077)
!5086 = !DILocation(line: 4272, column: 32, scope: !5077)
!5087 = !DILocation(line: 4272, column: 13, scope: !5077)
!5088 = !DILocation(line: 4278, column: 5, scope: !5074)
!5089 = !DILocation(line: 4275, column: 31, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 4274, column: 16)
!5091 = !DILocation(line: 4275, column: 13, scope: !5090)
!5092 = !DILocation(line: 4276, column: 13, scope: !5090)
!5093 = !DILocation(line: 4279, column: 9, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 4278, column: 12)
!5095 = !DILocation(line: 0, scope: !5071)
!5096 = !DILocation(line: 4282, column: 17, scope: !5030)
!5097 = !DILocation(line: 4283, column: 21, scope: !5030)
!5098 = !DILocation(line: 4283, column: 5, scope: !5030)
!5099 = !DILocation(line: 4284, column: 9, scope: !5030)
!5100 = !DILocation(line: 4284, column: 30, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 4284, column: 9)
!5102 = !DILocation(line: 4284, column: 37, scope: !5101)
!5103 = !DILocation(line: 4284, column: 47, scope: !5101)
!5104 = !DILocation(line: 4284, column: 17, scope: !5101)
!5105 = !DILocation(line: 4285, column: 17, scope: !5030)
!5106 = !DILocation(line: 4285, column: 5, scope: !5030)
!5107 = !DILocation(line: 4286, column: 1, scope: !5030)
!5108 = distinct !DISubprogram(name: "deleteIfVolatile", scope: !3, file: !3, line: 7414, type: !4065, scopeLine: 7414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5109)
!5109 = !{!5110, !5111, !5112}
!5110 = !DILocalVariable(name: "db", arg: 1, scope: !5108, file: !3, line: 7414, type: !293)
!5111 = !DILocalVariable(name: "key", arg: 2, scope: !5108, file: !3, line: 7414, type: !145)
!5112 = !DILocalVariable(name: "de", scope: !5108, file: !3, line: 7415, type: !124)
!5113 = !DILocation(line: 0, scope: !5108)
!5114 = !DILocation(line: 7418, column: 9, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 7418, column: 9)
!5116 = !DILocation(line: 7418, column: 31, scope: !5115)
!5117 = !DILocation(line: 7418, column: 36, scope: !5115)
!5118 = !DILocation(line: 7419, column: 35, scope: !5115)
!5119 = !DILocation(line: 7419, column: 14, scope: !5115)
!5120 = !DILocation(line: 7419, column: 41, scope: !5115)
!5121 = !DILocation(line: 7418, column: 9, scope: !5108)
!5122 = !DILocation(line: 7422, column: 17, scope: !5108)
!5123 = !DILocation(line: 7423, column: 28, scope: !5108)
!5124 = !{!709, !715, i64 376}
!5125 = !DILocation(line: 7424, column: 20, scope: !5108)
!5126 = !DILocation(line: 7424, column: 5, scope: !5108)
!5127 = !DILocation(line: 7425, column: 27, scope: !5108)
!5128 = !DILocation(line: 7425, column: 12, scope: !5108)
!5129 = !DILocation(line: 7425, column: 37, scope: !5108)
!5130 = !DILocation(line: 7425, column: 5, scope: !5108)
!5131 = !DILocation(line: 7426, column: 1, scope: !5108)
!5132 = distinct !DISubprogram(name: "deleteIfSwapped", scope: !3, file: !3, line: 9352, type: !4065, scopeLine: 9352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5133)
!5133 = !{!5134, !5135, !5136, !5137}
!5134 = !DILocalVariable(name: "db", arg: 1, scope: !5132, file: !3, line: 9352, type: !293)
!5135 = !DILocalVariable(name: "key", arg: 2, scope: !5132, file: !3, line: 9352, type: !145)
!5136 = !DILocalVariable(name: "de", scope: !5132, file: !3, line: 9353, type: !124)
!5137 = !DILocalVariable(name: "foundkey", scope: !5132, file: !3, line: 9354, type: !145)
!5138 = !DILocation(line: 0, scope: !5132)
!5139 = !DILocation(line: 9356, column: 28, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 9356, column: 9)
!5141 = !DILocation(line: 9356, column: 33, scope: !5140)
!5142 = !DILocation(line: 9356, column: 15, scope: !5140)
!5143 = !DILocation(line: 9356, column: 39, scope: !5140)
!5144 = !DILocation(line: 9356, column: 9, scope: !5132)
!5145 = !DILocation(line: 9357, column: 16, scope: !5132)
!5146 = !DILocation(line: 9358, column: 19, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 9358, column: 9)
!5148 = !DILocation(line: 9358, column: 27, scope: !5147)
!5149 = !DILocation(line: 9358, column: 9, scope: !5132)
!5150 = !DILocation(line: 9359, column: 5, scope: !5132)
!5151 = !DILocation(line: 9360, column: 5, scope: !5132)
!5152 = !DILocation(line: 9361, column: 1, scope: !5132)
!5153 = !DISubprogram(name: "dictReplace", scope: !88, file: !88, line: 127, type: !4147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5154 = distinct !DISubprogram(name: "removeExpire", scope: !3, file: !3, line: 7367, type: !4065, scopeLine: 7367, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5155)
!5155 = !{!5156, !5157}
!5156 = !DILocalVariable(name: "db", arg: 1, scope: !5154, file: !3, line: 7367, type: !293)
!5157 = !DILocalVariable(name: "key", arg: 2, scope: !5154, file: !3, line: 7367, type: !145)
!5158 = !DILocation(line: 0, scope: !5154)
!5159 = !DILocation(line: 7368, column: 24, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 7368, column: 9)
!5161 = !DILocation(line: 7368, column: 32, scope: !5160)
!5162 = !DILocation(line: 7368, column: 9, scope: !5160)
!5163 = !DILocation(line: 7368, column: 37, scope: !5160)
!5164 = !DILocation(line: 0, scope: !5160)
!5165 = !DILocation(line: 7373, column: 1, scope: !5154)
!5166 = distinct !DISubprogram(name: "stringObjectLen", scope: !3, file: !3, line: 3271, type: !5167, scopeLine: 3271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5169)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!196, !145}
!5169 = !{!5170, !5171}
!5170 = !DILocalVariable(name: "o", arg: 1, scope: !5166, file: !3, line: 3271, type: !145)
!5171 = !DILocalVariable(name: "buf", scope: !5172, file: !3, line: 3276, type: !4256)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 3275, column: 12)
!5173 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 3273, column: 9)
!5174 = !DILocation(line: 0, scope: !5166)
!5175 = !DILocation(line: 3272, column: 5, scope: !5166)
!5176 = !DILocation(line: 3273, column: 12, scope: !5173)
!5177 = !DILocation(line: 3273, column: 21, scope: !5173)
!5178 = !DILocation(line: 3273, column: 9, scope: !5166)
!5179 = !DILocation(line: 3274, column: 26, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 3273, column: 44)
!5181 = !DILocation(line: 3274, column: 16, scope: !5180)
!5182 = !DILocation(line: 3274, column: 9, scope: !5180)
!5183 = !DILocation(line: 3276, column: 9, scope: !5172)
!5184 = !DILocation(line: 3276, column: 14, scope: !5172)
!5185 = !DILocation(line: 3278, column: 42, scope: !5172)
!5186 = !DILocation(line: 3278, column: 33, scope: !5172)
!5187 = !DILocation(line: 3278, column: 16, scope: !5172)
!5188 = !DILocation(line: 3279, column: 5, scope: !5173)
!5189 = !DILocation(line: 0, scope: !5173)
!5190 = !DILocation(line: 3280, column: 1, scope: !5166)
!5191 = distinct !DISubprogram(name: "sendReplyToClient", scope: !3, file: !3, line: 2099, type: !2737, scopeLine: 2099, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5192)
!5192 = !{!5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201}
!5193 = !DILocalVariable(name: "el", arg: 1, scope: !5191, file: !3, line: 2099, type: !461)
!5194 = !DILocalVariable(name: "fd", arg: 2, scope: !5191, file: !3, line: 2099, type: !45)
!5195 = !DILocalVariable(name: "privdata", arg: 3, scope: !5191, file: !3, line: 2099, type: !46)
!5196 = !DILocalVariable(name: "mask", arg: 4, scope: !5191, file: !3, line: 2099, type: !45)
!5197 = !DILocalVariable(name: "c", scope: !5191, file: !3, line: 2100, type: !287)
!5198 = !DILocalVariable(name: "nwritten", scope: !5191, file: !3, line: 2101, type: !45)
!5199 = !DILocalVariable(name: "totwritten", scope: !5191, file: !3, line: 2101, type: !45)
!5200 = !DILocalVariable(name: "objlen", scope: !5191, file: !3, line: 2101, type: !45)
!5201 = !DILocalVariable(name: "o", scope: !5191, file: !3, line: 2102, type: !145)
!5202 = !DILocation(line: 0, scope: !5191)
!5203 = !DILocation(line: 2100, column: 22, scope: !5191)
!5204 = !DILocation(line: 2107, column: 17, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2107, column: 9)
!5206 = !DILocation(line: 2107, column: 10, scope: !5205)
!5207 = !DILocation(line: 2107, column: 31, scope: !5205)
!5208 = !DILocation(line: 2108, column: 9, scope: !5205)
!5209 = !DILocation(line: 2108, column: 30, scope: !5205)
!5210 = !DILocation(line: 2108, column: 55, scope: !5205)
!5211 = !DILocation(line: 2109, column: 14, scope: !5205)
!5212 = !DILocation(line: 2109, column: 20, scope: !5205)
!5213 = !DILocation(line: 2107, column: 9, scope: !5191)
!5214 = !DILocation(line: 2111, column: 9, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 2110, column: 5)
!5216 = !DILocation(line: 2112, column: 9, scope: !5215)
!5217 = !DILocation(line: 2115, column: 5, scope: !5191)
!5218 = !DILocation(line: 2115, column: 11, scope: !5191)
!5219 = !DILocation(line: 2116, column: 20, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2116, column: 13)
!5221 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2115, column: 33)
!5222 = !DILocation(line: 2116, column: 13, scope: !5220)
!5223 = !DILocation(line: 2116, column: 34, scope: !5220)
!5224 = !DILocation(line: 2117, column: 13, scope: !5220)
!5225 = !DILocation(line: 2119, column: 13, scope: !5221)
!5226 = !DILocation(line: 2120, column: 28, scope: !5221)
!5227 = !DILocation(line: 2120, column: 18, scope: !5221)
!5228 = !DILocation(line: 2122, column: 20, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2122, column: 13)
!5230 = !DILocation(line: 2122, column: 13, scope: !5221)
!5231 = !DILocation(line: 2123, column: 28, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2122, column: 26)
!5233 = !DILocation(line: 2123, column: 34, scope: !5232)
!5234 = !DILocation(line: 2123, column: 13, scope: !5232)
!5235 = distinct !{!5235, !5217, !5236}
!5236 = !DILocation(line: 2147, column: 5, scope: !5191)
!5237 = !DILocation(line: 2127, column: 16, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2127, column: 13)
!5239 = !DILocation(line: 2127, column: 22, scope: !5238)
!5240 = !DILocation(line: 2127, column: 13, scope: !5221)
!5241 = !DILocation(line: 2129, column: 36, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2127, column: 38)
!5243 = !{!897, !713, i64 72}
!5244 = !DILocation(line: 2129, column: 31, scope: !5242)
!5245 = !DILocation(line: 2130, column: 9, scope: !5242)
!5246 = !DILocation(line: 2131, column: 45, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2130, column: 16)
!5248 = !DILocation(line: 2131, column: 53, scope: !5247)
!5249 = !DILocation(line: 2131, column: 49, scope: !5247)
!5250 = !DILocation(line: 2131, column: 69, scope: !5247)
!5251 = !DILocation(line: 2131, column: 62, scope: !5247)
!5252 = !DILocation(line: 2131, column: 24, scope: !5247)
!5253 = !DILocation(line: 2132, column: 26, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 2132, column: 17)
!5255 = !DILocation(line: 2132, column: 17, scope: !5247)
!5256 = !DILocation(line: 2134, column: 20, scope: !5221)
!5257 = !DILocation(line: 0, scope: !5238)
!5258 = !DILocation(line: 2135, column: 20, scope: !5221)
!5259 = !DILocation(line: 2137, column: 24, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2137, column: 13)
!5261 = !DILocation(line: 2137, column: 13, scope: !5221)
!5262 = !DILocation(line: 2138, column: 28, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2137, column: 35)
!5264 = !DILocation(line: 2138, column: 34, scope: !5263)
!5265 = !DILocation(line: 2138, column: 13, scope: !5263)
!5266 = !DILocation(line: 2139, column: 24, scope: !5263)
!5267 = !DILocation(line: 2140, column: 9, scope: !5263)
!5268 = !DILocation(line: 2146, column: 24, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2146, column: 13)
!5270 = !DILocation(line: 2146, column: 13, scope: !5221)
!5271 = !DILocation(line: 2148, column: 18, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2148, column: 9)
!5273 = !DILocation(line: 2148, column: 9, scope: !5191)
!5274 = !DILocation(line: 2149, column: 13, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 2149, column: 13)
!5276 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2148, column: 25)
!5277 = !DILocation(line: 2149, column: 19, scope: !5275)
!5278 = !DILocation(line: 2149, column: 13, scope: !5276)
!5279 = !DILocation(line: 2153, column: 48, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2151, column: 16)
!5281 = !DILocation(line: 2152, column: 13, scope: !5280)
!5282 = !DILocation(line: 2154, column: 13, scope: !5280)
!5283 = !DILocation(line: 2155, column: 13, scope: !5280)
!5284 = !DILocation(line: 2158, column: 20, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2158, column: 9)
!5286 = !DILocation(line: 2158, column: 9, scope: !5191)
!5287 = !DILocation(line: 2158, column: 46, scope: !5285)
!5288 = !DILocation(line: 2158, column: 28, scope: !5285)
!5289 = !DILocation(line: 2158, column: 44, scope: !5285)
!5290 = !{!897, !710, i64 80}
!5291 = !DILocation(line: 2158, column: 25, scope: !5285)
!5292 = !DILocation(line: 2159, column: 9, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2159, column: 9)
!5294 = !DILocation(line: 2159, column: 30, scope: !5293)
!5295 = !DILocation(line: 2159, column: 9, scope: !5191)
!5296 = !DILocation(line: 2160, column: 20, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 2159, column: 36)
!5298 = !DILocation(line: 2161, column: 34, scope: !5297)
!5299 = !DILocation(line: 2161, column: 40, scope: !5297)
!5300 = !DILocation(line: 2161, column: 9, scope: !5297)
!5301 = !DILocation(line: 2162, column: 5, scope: !5297)
!5302 = !DILocation(line: 2163, column: 1, scope: !5191)
!5303 = distinct !DISubprogram(name: "dupStringObject", scope: !3, file: !3, line: 2951, type: !1572, scopeLine: 2951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5304)
!5304 = !{!5305}
!5305 = !DILocalVariable(name: "o", arg: 1, scope: !5303, file: !3, line: 2951, type: !145)
!5306 = !DILocation(line: 0, scope: !5303)
!5307 = !DILocation(line: 2952, column: 5, scope: !5303)
!5308 = !DILocation(line: 2953, column: 34, scope: !5303)
!5309 = !DILocation(line: 2953, column: 38, scope: !5303)
!5310 = !DILocation(line: 2953, column: 12, scope: !5303)
!5311 = !DILocation(line: 2953, column: 5, scope: !5303)
!5312 = distinct !DISubprogram(name: "sendReplyToClientWritev", scope: !3, file: !3, line: 2165, type: !2737, scopeLine: 2166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5313)
!5313 = !{!5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5331, !5332, !5333}
!5314 = !DILocalVariable(name: "el", arg: 1, scope: !5312, file: !3, line: 2165, type: !461)
!5315 = !DILocalVariable(name: "fd", arg: 2, scope: !5312, file: !3, line: 2165, type: !45)
!5316 = !DILocalVariable(name: "privdata", arg: 3, scope: !5312, file: !3, line: 2165, type: !46)
!5317 = !DILocalVariable(name: "mask", arg: 4, scope: !5312, file: !3, line: 2165, type: !45)
!5318 = !DILocalVariable(name: "c", scope: !5312, file: !3, line: 2167, type: !287)
!5319 = !DILocalVariable(name: "nwritten", scope: !5312, file: !3, line: 2168, type: !45)
!5320 = !DILocalVariable(name: "totwritten", scope: !5312, file: !3, line: 2168, type: !45)
!5321 = !DILocalVariable(name: "objlen", scope: !5312, file: !3, line: 2168, type: !45)
!5322 = !DILocalVariable(name: "willwrite", scope: !5312, file: !3, line: 2168, type: !45)
!5323 = !DILocalVariable(name: "o", scope: !5312, file: !3, line: 2169, type: !145)
!5324 = !DILocalVariable(name: "iov", scope: !5312, file: !3, line: 2170, type: !5325)
!5325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5326, size: 32768, elements: !458)
!5326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !5327, line: 26, size: 128, elements: !5328)
!5327 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "", checksumkind: CSK_MD5, checksum: "6a734cae8feaa37c12e11190a6573675")
!5328 = !{!5329, !5330}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !5326, file: !5327, line: 28, baseType: !46, size: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !5326, file: !5327, line: 29, baseType: !196, size: 64, offset: 64)
!5331 = !DILocalVariable(name: "offset", scope: !5312, file: !3, line: 2171, type: !45)
!5332 = !DILocalVariable(name: "ion", scope: !5312, file: !3, line: 2171, type: !45)
!5333 = !DILocalVariable(name: "node", scope: !5312, file: !3, line: 2175, type: !64)
!5334 = !DILocation(line: 0, scope: !5312)
!5335 = !DILocation(line: 2167, column: 22, scope: !5312)
!5336 = !DILocation(line: 2170, column: 5, scope: !5312)
!5337 = !DILocation(line: 2170, column: 18, scope: !5312)
!5338 = !DILocation(line: 2176, column: 12, scope: !5312)
!5339 = !DILocation(line: 2176, column: 5, scope: !5312)
!5340 = !DILocation(line: 2177, column: 21, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2176, column: 34)
!5342 = !DILocation(line: 2182, column: 20, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2182, column: 9)
!5344 = !DILocation(line: 0, scope: !5343)
!5345 = !DILocation(line: 2182, column: 9, scope: !5343)
!5346 = !DILocation(line: 2183, column: 17, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 2182, column: 74)
!5348 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2182, column: 9)
!5349 = !DILocation(line: 2184, column: 32, scope: !5347)
!5350 = !DILocation(line: 2184, column: 22, scope: !5347)
!5351 = !DILocation(line: 2186, column: 28, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2186, column: 17)
!5353 = !DILocation(line: 2186, column: 37, scope: !5352)
!5354 = !DILocation(line: 2186, column: 46, scope: !5352)
!5355 = !DILocation(line: 2186, column: 17, scope: !5347)
!5356 = !DILocation(line: 2192, column: 44, scope: !5347)
!5357 = !DILocation(line: 2192, column: 49, scope: !5347)
!5358 = !DILocation(line: 2192, column: 22, scope: !5347)
!5359 = !DILocation(line: 2192, column: 31, scope: !5347)
!5360 = !{!5361, !714, i64 0}
!5361 = !{!"iovec", !714, i64 0, !710, i64 8}
!5362 = !DILocation(line: 2193, column: 39, scope: !5347)
!5363 = !DILocation(line: 2193, column: 32, scope: !5347)
!5364 = !DILocation(line: 2193, column: 22, scope: !5347)
!5365 = !DILocation(line: 2193, column: 30, scope: !5347)
!5366 = !{!5361, !710, i64 8}
!5367 = !DILocation(line: 2194, column: 23, scope: !5347)
!5368 = !DILocation(line: 2196, column: 16, scope: !5347)
!5369 = !DILocation(line: 2182, column: 54, scope: !5348)
!5370 = distinct !{!5370, !5345, !5371}
!5371 = !DILocation(line: 2197, column: 9, scope: !5343)
!5372 = !DILocation(line: 2199, column: 22, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2199, column: 12)
!5374 = !DILocation(line: 2199, column: 12, scope: !5341)
!5375 = !DILocation(line: 0, scope: !5347)
!5376 = !DILocation(line: 2203, column: 24, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2203, column: 12)
!5378 = !DILocation(line: 2203, column: 46, scope: !5377)
!5379 = !DILocation(line: 2203, column: 12, scope: !5341)
!5380 = !DILocation(line: 2204, column: 17, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2204, column: 17)
!5382 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2203, column: 51)
!5383 = !DILocation(line: 2204, column: 23, scope: !5381)
!5384 = !DILocation(line: 2204, column: 17, scope: !5382)
!5385 = !DILocation(line: 2206, column: 57, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 2204, column: 34)
!5387 = !DILocation(line: 2205, column: 17, scope: !5386)
!5388 = !DILocation(line: 2207, column: 17, scope: !5386)
!5389 = !DILocation(line: 2208, column: 17, scope: !5386)
!5390 = !DILocation(line: 2213, column: 20, scope: !5341)
!5391 = !DILocation(line: 2214, column: 21, scope: !5341)
!5392 = !DILocation(line: 2217, column: 16, scope: !5341)
!5393 = !DILocation(line: 2217, column: 25, scope: !5341)
!5394 = !DILocation(line: 2217, column: 28, scope: !5341)
!5395 = !DILocation(line: 2217, column: 9, scope: !5341)
!5396 = !DILocation(line: 2218, column: 17, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2217, column: 50)
!5398 = !DILocation(line: 2219, column: 32, scope: !5397)
!5399 = !DILocation(line: 2219, column: 22, scope: !5397)
!5400 = !DILocation(line: 2221, column: 35, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2221, column: 16)
!5402 = !DILocation(line: 2221, column: 25, scope: !5401)
!5403 = !DILocation(line: 2221, column: 16, scope: !5397)
!5404 = !DILocation(line: 2222, column: 32, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 2221, column: 45)
!5406 = !DILocation(line: 2222, column: 39, scope: !5405)
!5407 = !DILocation(line: 2222, column: 17, scope: !5405)
!5408 = !DILocation(line: 2223, column: 26, scope: !5405)
!5409 = !DILocation(line: 2224, column: 28, scope: !5405)
!5410 = distinct !{!5410, !5395, !5411}
!5411 = !DILocation(line: 2231, column: 9, scope: !5341)
!5412 = !DILocation(line: 2227, column: 28, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 2225, column: 20)
!5414 = !DILocation(line: 2228, column: 17, scope: !5413)
!5415 = distinct !{!5415, !5339, !5416}
!5416 = !DILocation(line: 2232, column: 5, scope: !5312)
!5417 = !DILocation(line: 2234, column: 20, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2234, column: 9)
!5419 = !DILocation(line: 2234, column: 9, scope: !5312)
!5420 = !DILocation(line: 2235, column: 30, scope: !5418)
!5421 = !DILocation(line: 2235, column: 12, scope: !5418)
!5422 = !DILocation(line: 2235, column: 28, scope: !5418)
!5423 = !DILocation(line: 2235, column: 9, scope: !5418)
!5424 = !DILocation(line: 2237, column: 9, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2237, column: 9)
!5426 = !DILocation(line: 2237, column: 30, scope: !5425)
!5427 = !DILocation(line: 2237, column: 9, scope: !5312)
!5428 = !DILocation(line: 2238, column: 12, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2237, column: 36)
!5430 = !DILocation(line: 2238, column: 20, scope: !5429)
!5431 = !DILocation(line: 2239, column: 34, scope: !5429)
!5432 = !DILocation(line: 2239, column: 40, scope: !5429)
!5433 = !DILocation(line: 2239, column: 9, scope: !5429)
!5434 = !DILocation(line: 2240, column: 5, scope: !5429)
!5435 = !DILocation(line: 2241, column: 1, scope: !5312)
!5436 = distinct !DISubprogram(name: "glueReplyBuffersIfNeeded", scope: !3, file: !3, line: 2072, type: !340, scopeLine: 2072, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5437)
!5437 = !{!5438, !5439, !5440, !5441, !5442, !5443, !5444}
!5438 = !DILocalVariable(name: "c", arg: 1, scope: !5436, file: !3, line: 2072, type: !287)
!5439 = !DILocalVariable(name: "copylen", scope: !5436, file: !3, line: 2073, type: !45)
!5440 = !DILocalVariable(name: "buf", scope: !5436, file: !3, line: 2074, type: !2331)
!5441 = !DILocalVariable(name: "ln", scope: !5436, file: !3, line: 2075, type: !64)
!5442 = !DILocalVariable(name: "li", scope: !5436, file: !3, line: 2076, type: !831)
!5443 = !DILocalVariable(name: "o", scope: !5436, file: !3, line: 2077, type: !145)
!5444 = !DILocalVariable(name: "objlen", scope: !5445, file: !3, line: 2081, type: !45)
!5445 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2080, column: 33)
!5446 = !DILocation(line: 0, scope: !5436)
!5447 = !DILocation(line: 2074, column: 5, scope: !5436)
!5448 = !DILocation(line: 2074, column: 10, scope: !5436)
!5449 = !DILocation(line: 2076, column: 5, scope: !5436)
!5450 = !DILocation(line: 2076, column: 14, scope: !5436)
!5451 = !DILocation(line: 2079, column: 19, scope: !5436)
!5452 = !DILocation(line: 2079, column: 5, scope: !5436)
!5453 = !DILocation(line: 2080, column: 17, scope: !5436)
!5454 = !DILocation(line: 2080, column: 5, scope: !5436)
!5455 = !DILocation(line: 2083, column: 17, scope: !5445)
!5456 = !DILocation(line: 2084, column: 28, scope: !5445)
!5457 = !DILocation(line: 2084, column: 18, scope: !5445)
!5458 = !DILocation(line: 0, scope: !5445)
!5459 = !DILocation(line: 2085, column: 21, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 2085, column: 13)
!5461 = !DILocation(line: 2085, column: 30, scope: !5460)
!5462 = !DILocation(line: 2085, column: 13, scope: !5445)
!5463 = !DILocation(line: 2090, column: 25, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 2090, column: 17)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 2089, column: 16)
!5466 = !DILocation(line: 0, scope: !5465)
!5467 = !DILocation(line: 2086, column: 23, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 2085, column: 50)
!5469 = !DILocation(line: 2086, column: 35, scope: !5468)
!5470 = !DILocation(line: 2086, column: 39, scope: !5468)
!5471 = !DILocation(line: 2086, column: 13, scope: !5468)
!5472 = !DILocation(line: 2088, column: 28, scope: !5468)
!5473 = !DILocation(line: 2088, column: 13, scope: !5468)
!5474 = !DILocation(line: 2095, column: 49, scope: !5436)
!5475 = !DILocation(line: 2095, column: 35, scope: !5436)
!5476 = !DILocation(line: 2095, column: 9, scope: !5436)
!5477 = !DILocation(line: 2096, column: 24, scope: !5436)
!5478 = !DILocation(line: 2096, column: 30, scope: !5436)
!5479 = !DILocation(line: 2096, column: 5, scope: !5436)
!5480 = !DILocation(line: 2097, column: 1, scope: !5436)
!5481 = !DISubprogram(name: "writev", scope: !5482, file: !5482, line: 52, type: !5483, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/uio.h", directory: "", checksumkind: CSK_MD5, checksum: "b45afcbdd2bdf62d9ec67b3a109f51e9")
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!1089, !45, !5485, !45}
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5326)
!5487 = !DISubprogram(name: "listAddNodeHead", scope: !60, file: !60, line: 75, type: !4153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5488 = distinct !DISubprogram(name: "waitForMultipleSwappedKeys", scope: !3, file: !3, line: 9830, type: !347, scopeLine: 9830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5489)
!5489 = !{!5490, !5491, !5492, !5493, !5494, !5495}
!5490 = !DILocalVariable(name: "c", arg: 1, scope: !5488, file: !3, line: 9830, type: !287)
!5491 = !DILocalVariable(name: "cmd", arg: 2, scope: !5488, file: !3, line: 9830, type: !333)
!5492 = !DILocalVariable(name: "argc", arg: 3, scope: !5488, file: !3, line: 9830, type: !45)
!5493 = !DILocalVariable(name: "argv", arg: 4, scope: !5488, file: !3, line: 9830, type: !305)
!5494 = !DILocalVariable(name: "j", scope: !5488, file: !3, line: 9831, type: !45)
!5495 = !DILocalVariable(name: "last", scope: !5488, file: !3, line: 9831, type: !45)
!5496 = !DILocation(line: 0, scope: !5488)
!5497 = !DILocation(line: 9832, column: 14, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 9832, column: 9)
!5499 = !{!1341, !713, i64 32}
!5500 = !DILocation(line: 9832, column: 26, scope: !5498)
!5501 = !DILocation(line: 9832, column: 9, scope: !5488)
!5502 = !DILocation(line: 9833, column: 17, scope: !5488)
!5503 = !{!1341, !713, i64 36}
!5504 = !DILocation(line: 9834, column: 14, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 9834, column: 9)
!5506 = !DILocation(line: 9834, column: 9, scope: !5488)
!5507 = !DILocation(line: 9835, column: 34, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 9835, column: 5)
!5509 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 9835, column: 5)
!5510 = !DILocation(line: 9835, column: 5, scope: !5509)
!5511 = !DILocation(line: 9836, column: 9, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 9835, column: 65)
!5513 = !DILocation(line: 9837, column: 29, scope: !5512)
!5514 = !DILocation(line: 9837, column: 9, scope: !5512)
!5515 = !DILocation(line: 9835, column: 53, scope: !5508)
!5516 = !{!1341, !713, i64 40}
!5517 = !DILocation(line: 9835, column: 45, scope: !5508)
!5518 = distinct !{!5518, !5510, !5519}
!5519 = !DILocation(line: 9838, column: 5, scope: !5509)
!5520 = !DILocation(line: 9839, column: 1, scope: !5488)
!5521 = distinct !DISubprogram(name: "waitForSwappedKey", scope: !3, file: !3, line: 9767, type: !3044, scopeLine: 9767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5522)
!5522 = !{!5523, !5524, !5525, !5526, !5527, !5528, !5531}
!5523 = !DILocalVariable(name: "c", arg: 1, scope: !5521, file: !3, line: 9767, type: !287)
!5524 = !DILocalVariable(name: "key", arg: 2, scope: !5521, file: !3, line: 9767, type: !145)
!5525 = !DILocalVariable(name: "de", scope: !5521, file: !3, line: 9768, type: !131)
!5526 = !DILocalVariable(name: "o", scope: !5521, file: !3, line: 9769, type: !145)
!5527 = !DILocalVariable(name: "l", scope: !5521, file: !3, line: 9770, type: !58)
!5528 = !DILocalVariable(name: "retval", scope: !5529, file: !3, line: 9795, type: !45)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 9794, column: 21)
!5530 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 9794, column: 9)
!5531 = !DILocalVariable(name: "j", scope: !5532, file: !3, line: 9809, type: !5534)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 9808, column: 41)
!5533 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 9808, column: 9)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_typedef, name: "iojob", file: !3, line: 549, baseType: !5536)
!5536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iojob", file: !3, line: 539, size: 512, elements: !5537)
!5537 = !{!5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5536, file: !3, line: 540, baseType: !45, size: 32)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !5536, file: !3, line: 541, baseType: !293, size: 64, offset: 64)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5536, file: !3, line: 542, baseType: !145, size: 64, offset: 128)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5536, file: !3, line: 543, baseType: !145, size: 64, offset: 192)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5536, file: !3, line: 545, baseType: !160, size: 64, offset: 256)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5536, file: !3, line: 546, baseType: !160, size: 64, offset: 320)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "canceled", scope: !5536, file: !3, line: 547, baseType: !45, size: 32, offset: 384)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5536, file: !3, line: 548, baseType: !56, size: 64, offset: 448)
!5546 = !DILocation(line: 0, scope: !5521)
!5547 = !DILocation(line: 9774, column: 22, scope: !5521)
!5548 = !DILocation(line: 9774, column: 26, scope: !5521)
!5549 = !DILocation(line: 9774, column: 31, scope: !5521)
!5550 = !DILocation(line: 9774, column: 10, scope: !5521)
!5551 = !DILocation(line: 9775, column: 12, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 9775, column: 9)
!5553 = !DILocation(line: 9775, column: 9, scope: !5521)
!5554 = !DILocation(line: 9776, column: 9, scope: !5521)
!5555 = !DILocation(line: 9777, column: 12, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 9777, column: 9)
!5557 = !DILocation(line: 9777, column: 9, scope: !5521)
!5558 = !DILocation(line: 9781, column: 9, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 9779, column: 49)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 9779, column: 16)
!5561 = !DILocation(line: 9782, column: 9, scope: !5559)
!5562 = !DILocation(line: 9789, column: 24, scope: !5521)
!5563 = !DILocation(line: 9789, column: 5, scope: !5521)
!5564 = !DILocation(line: 9790, column: 5, scope: !5521)
!5565 = !DILocation(line: 9793, column: 22, scope: !5521)
!5566 = !DILocation(line: 9793, column: 26, scope: !5521)
!5567 = !DILocation(line: 9793, column: 10, scope: !5521)
!5568 = !DILocation(line: 9794, column: 12, scope: !5530)
!5569 = !DILocation(line: 9794, column: 9, scope: !5521)
!5570 = !DILocation(line: 9798, column: 13, scope: !5529)
!5571 = !DILocation(line: 9799, column: 29, scope: !5529)
!5572 = !DILocation(line: 9799, column: 33, scope: !5529)
!5573 = !DILocation(line: 9799, column: 45, scope: !5529)
!5574 = !DILocation(line: 9799, column: 18, scope: !5529)
!5575 = !DILocation(line: 0, scope: !5529)
!5576 = !DILocation(line: 9800, column: 9, scope: !5529)
!5577 = !DILocation(line: 9801, column: 9, scope: !5529)
!5578 = !DILocation(line: 9803, column: 13, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 9802, column: 12)
!5580 = !DILocation(line: 0, scope: !5530)
!5581 = !DILocation(line: 9805, column: 23, scope: !5521)
!5582 = !DILocation(line: 9805, column: 5, scope: !5521)
!5583 = !DILocation(line: 9808, column: 12, scope: !5533)
!5584 = !DILocation(line: 9808, column: 20, scope: !5533)
!5585 = !DILocation(line: 9808, column: 9, scope: !5521)
!5586 = !DILocation(line: 9811, column: 20, scope: !5532)
!5587 = !DILocation(line: 9812, column: 13, scope: !5532)
!5588 = !DILocation(line: 0, scope: !5532)
!5589 = !DILocation(line: 9813, column: 12, scope: !5532)
!5590 = !DILocation(line: 9813, column: 17, scope: !5532)
!5591 = !{!5592, !713, i64 0}
!5592 = !{!"iojob", !713, i64 0, !714, i64 8, !714, i64 16, !714, i64 24, !710, i64 32, !710, i64 40, !713, i64 48, !710, i64 56}
!5593 = !DILocation(line: 9814, column: 20, scope: !5532)
!5594 = !DILocation(line: 9814, column: 12, scope: !5532)
!5595 = !DILocation(line: 9814, column: 15, scope: !5532)
!5596 = !{!5592, !714, i64 8}
!5597 = !DILocation(line: 9815, column: 12, scope: !5532)
!5598 = !DILocation(line: 9815, column: 16, scope: !5532)
!5599 = !{!5592, !714, i64 16}
!5600 = !DILocation(line: 9817, column: 25, scope: !5532)
!5601 = !DILocation(line: 9817, column: 12, scope: !5532)
!5602 = !DILocation(line: 9817, column: 17, scope: !5532)
!5603 = !{!5592, !710, i64 32}
!5604 = !DILocation(line: 9818, column: 12, scope: !5532)
!5605 = !DILocation(line: 9818, column: 16, scope: !5532)
!5606 = !{!5592, !714, i64 24}
!5607 = !DILocation(line: 9819, column: 12, scope: !5532)
!5608 = !DILocation(line: 9819, column: 21, scope: !5532)
!5609 = !{!5592, !713, i64 48}
!5610 = !DILocation(line: 9820, column: 12, scope: !5532)
!5611 = !DILocation(line: 9820, column: 19, scope: !5532)
!5612 = !{!5592, !710, i64 56}
!5613 = !DILocation(line: 9821, column: 9, scope: !5532)
!5614 = !DILocation(line: 9822, column: 9, scope: !5532)
!5615 = !DILocation(line: 9823, column: 9, scope: !5532)
!5616 = !DILocation(line: 9824, column: 5, scope: !5532)
!5617 = !DILocation(line: 9826, column: 1, scope: !5521)
!5618 = distinct !DISubprogram(name: "vmCancelThreadedIOJob", scope: !3, file: !3, line: 9535, type: !4091, scopeLine: 9535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5619)
!5619 = !{!5620, !5621, !5623, !5624, !5628, !5629, !5631}
!5620 = !DILocalVariable(name: "o", arg: 1, scope: !5618, file: !3, line: 9535, type: !145)
!5621 = !DILocalVariable(name: "lists", scope: !5618, file: !3, line: 9536, type: !5622)
!5622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 192, elements: !257)
!5623 = !DILocalVariable(name: "i", scope: !5618, file: !3, line: 9541, type: !45)
!5624 = !DILocalVariable(name: "ln", scope: !5625, file: !3, line: 9548, type: !64)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 9547, column: 29)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 9547, column: 5)
!5627 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 9547, column: 5)
!5628 = !DILocalVariable(name: "li", scope: !5625, file: !3, line: 9549, type: !831)
!5629 = !DILocalVariable(name: "job", scope: !5630, file: !3, line: 9553, type: !5534)
!5630 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 9552, column: 46)
!5631 = !DILabel(scope: !5618, name: "again", file: !3, line: 9544)
!5632 = !DILocation(line: 0, scope: !5618)
!5633 = !DILocation(line: 9537, column: 16, scope: !5618)
!5634 = !{!709, !714, i64 704}
!5635 = !DILocation(line: 9538, column: 16, scope: !5618)
!5636 = !{!709, !714, i64 712}
!5637 = !DILocation(line: 9539, column: 16, scope: !5618)
!5638 = !{!709, !714, i64 720}
!5639 = !DILocation(line: 9543, column: 5, scope: !5618)
!5640 = !DILocation(line: 9547, column: 10, scope: !5627)
!5641 = !DILocation(line: 9544, column: 1, scope: !5618)
!5642 = !DILocation(line: 9545, column: 5, scope: !5618)
!5643 = !DILocation(line: 9549, column: 9, scope: !5625)
!5644 = !DILocation(line: 9549, column: 18, scope: !5625)
!5645 = !DILocation(line: 9551, column: 9, scope: !5625)
!5646 = !DILocation(line: 9552, column: 22, scope: !5625)
!5647 = !DILocation(line: 0, scope: !5625)
!5648 = !DILocation(line: 9552, column: 37, scope: !5625)
!5649 = !DILocation(line: 9552, column: 9, scope: !5625)
!5650 = !DILocation(line: 9553, column: 30, scope: !5630)
!5651 = !DILocation(line: 0, scope: !5630)
!5652 = !DILocation(line: 9555, column: 22, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 9555, column: 17)
!5654 = !DILocation(line: 9555, column: 17, scope: !5653)
!5655 = !DILocation(line: 9555, column: 17, scope: !5630)
!5656 = distinct !{!5656, !5649, !5657}
!5657 = !DILocation(line: 9608, column: 9, scope: !5625)
!5658 = !DILocation(line: 9556, column: 22, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 9556, column: 17)
!5660 = !DILocation(line: 9556, column: 26, scope: !5659)
!5661 = !DILocation(line: 9556, column: 17, scope: !5630)
!5662 = !DILocation(line: 9558, column: 43, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 9556, column: 32)
!5664 = !DILocation(line: 9558, column: 53, scope: !5663)
!5665 = !DILocation(line: 9557, column: 17, scope: !5663)
!5666 = !DILocation(line: 9553, column: 26, scope: !5630)
!5667 = !DILocation(line: 9561, column: 36, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 9561, column: 21)
!5669 = !DILocation(line: 9561, column: 41, scope: !5668)
!5670 = !DILocation(line: 9561, column: 21, scope: !5663)
!5671 = !DILocation(line: 9562, column: 42, scope: !5668)
!5672 = !DILocation(line: 9562, column: 52, scope: !5668)
!5673 = !{!5592, !710, i64 40}
!5674 = !DILocation(line: 9562, column: 21, scope: !5668)
!5675 = !DILocation(line: 9565, column: 17, scope: !5663)
!5676 = !DILocation(line: 9569, column: 21, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 9565, column: 27)
!5678 = !DILocation(line: 9570, column: 21, scope: !5677)
!5679 = !DILocation(line: 9571, column: 21, scope: !5677)
!5680 = !DILocation(line: 9596, column: 35, scope: !5677)
!5681 = !DILocation(line: 9597, column: 21, scope: !5677)
!5682 = !DILocation(line: 9601, column: 24, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 9601, column: 21)
!5684 = !DILocation(line: 9601, column: 21, scope: !5663)
!5685 = !DILocation(line: 9604, column: 21, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 9603, column: 26)
!5687 = !DILocation(line: 9586, column: 21, scope: !5677)
!5688 = !DILocation(line: 9590, column: 21, scope: !5677)
!5689 = !DILocation(line: 9609, column: 5, scope: !5626)
!5690 = !DILocation(line: 9610, column: 5, scope: !5618)
!5691 = !DILocation(line: 9611, column: 5, scope: !5618)
!5692 = !DILocation(line: 0, scope: !5683)
!5693 = !DILocation(line: 9605, column: 17, scope: !5663)
!5694 = !DILocation(line: 9612, column: 1, scope: !5618)
!5695 = distinct !DISubprogram(name: "lockThreadedIO", scope: !3, file: !3, line: 9525, type: !1747, scopeLine: 9525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!5696 = !DILocation(line: 9526, column: 5, scope: !5695)
!5697 = !DILocation(line: 9527, column: 1, scope: !5695)
!5698 = distinct !DISubprogram(name: "queueIOJob", scope: !3, file: !3, line: 9730, type: !5699, scopeLine: 9730, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{null, !5534}
!5701 = !{!5702}
!5702 = !DILocalVariable(name: "j", arg: 1, scope: !5698, file: !3, line: 9730, type: !5534)
!5703 = !DILocation(line: 0, scope: !5698)
!5704 = !DILocation(line: 9732, column: 9, scope: !5698)
!5705 = !DILocation(line: 9732, column: 22, scope: !5698)
!5706 = !DILocation(line: 9732, column: 38, scope: !5698)
!5707 = !DILocation(line: 9732, column: 43, scope: !5698)
!5708 = !DILocation(line: 9731, column: 5, scope: !5698)
!5709 = !DILocation(line: 9733, column: 28, scope: !5698)
!5710 = !DILocation(line: 9733, column: 5, scope: !5698)
!5711 = !DILocation(line: 9734, column: 16, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 9734, column: 9)
!5713 = !{!709, !713, i64 912}
!5714 = !DILocation(line: 9734, column: 43, scope: !5712)
!5715 = !DILocation(line: 9734, column: 34, scope: !5712)
!5716 = !DILocation(line: 9734, column: 9, scope: !5698)
!5717 = !DILocation(line: 9735, column: 9, scope: !5712)
!5718 = !DILocation(line: 9736, column: 1, scope: !5698)
!5719 = distinct !DISubprogram(name: "unlockThreadedIO", scope: !3, file: !3, line: 9529, type: !1747, scopeLine: 9529, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!5720 = !DILocation(line: 9530, column: 5, scope: !5719)
!5721 = !DILocation(line: 9531, column: 1, scope: !5719)
!5722 = distinct !DISubprogram(name: "vmMarkPagesFree", scope: !3, file: !3, line: 8967, type: !5723, scopeLine: 8967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5725)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !160, !160}
!5725 = !{!5726, !5727, !5728}
!5726 = !DILocalVariable(name: "page", arg: 1, scope: !5722, file: !3, line: 8967, type: !160)
!5727 = !DILocalVariable(name: "count", arg: 2, scope: !5722, file: !3, line: 8967, type: !160)
!5728 = !DILocalVariable(name: "j", scope: !5722, file: !3, line: 8968, type: !160)
!5729 = !DILocation(line: 0, scope: !5722)
!5730 = !DILocation(line: 8970, column: 19, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 8970, column: 5)
!5732 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 8970, column: 5)
!5733 = !DILocation(line: 8970, column: 5, scope: !5732)
!5734 = !DILocation(line: 8971, column: 28, scope: !5731)
!5735 = !DILocation(line: 8971, column: 9, scope: !5731)
!5736 = !DILocation(line: 8970, column: 29, scope: !5731)
!5737 = distinct !{!5737, !5733, !5738}
!5738 = !DILocation(line: 8971, column: 30, scope: !5732)
!5739 = !DILocation(line: 8972, column: 32, scope: !5722)
!5740 = !{!709, !715, i64 928}
!5741 = !DILocation(line: 8973, column: 5, scope: !5722)
!5742 = !DILocation(line: 8975, column: 1, scope: !5722)
!5743 = distinct !DISubprogram(name: "freeIOJob", scope: !3, file: !3, line: 9365, type: !5699, scopeLine: 9365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5744)
!5744 = !{!5745}
!5745 = !DILocalVariable(name: "j", arg: 1, scope: !5743, file: !3, line: 9365, type: !5534)
!5746 = !DILocation(line: 0, scope: !5743)
!5747 = !DILocation(line: 9366, column: 13, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 9366, column: 9)
!5749 = !DILocation(line: 9366, column: 46, scope: !5748)
!5750 = !DILocation(line: 9368, column: 44, scope: !5748)
!5751 = !DILocation(line: 9368, column: 48, scope: !5748)
!5752 = !DILocation(line: 9366, column: 9, scope: !5743)
!5753 = !DILocation(line: 9369, column: 22, scope: !5748)
!5754 = !DILocation(line: 9369, column: 9, scope: !5748)
!5755 = !DILocation(line: 9374, column: 11, scope: !5743)
!5756 = !DILocation(line: 9374, column: 5, scope: !5743)
!5757 = !DILocation(line: 9375, column: 1, scope: !5743)
!5758 = !DISubprogram(name: "usleep", scope: !1086, file: !1086, line: 460, type: !5759, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!45, !5761}
!5761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__useconds_t", file: !52, line: 161, baseType: !7)
!5762 = distinct !DISubprogram(name: "vmMarkPageFree", scope: !3, file: !3, line: 8959, type: !5763, scopeLine: 8959, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5765)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{null, !160}
!5765 = !{!5766, !5767, !5768}
!5766 = !DILocalVariable(name: "page", arg: 1, scope: !5762, file: !3, line: 8959, type: !160)
!5767 = !DILocalVariable(name: "byte", scope: !5762, file: !3, line: 8960, type: !160)
!5768 = !DILocalVariable(name: "bit", scope: !5762, file: !3, line: 8961, type: !45)
!5769 = !DILocation(line: 0, scope: !5762)
!5770 = !DILocation(line: 8962, column: 5, scope: !5762)
!5771 = !DILocation(line: 8961, column: 15, scope: !5762)
!5772 = !DILocation(line: 8960, column: 22, scope: !5762)
!5773 = !DILocation(line: 8963, column: 34, scope: !5762)
!5774 = !DILocation(line: 8963, column: 31, scope: !5762)
!5775 = !DILocation(line: 8963, column: 12, scope: !5762)
!5776 = !{!709, !714, i64 688}
!5777 = !DILocation(line: 8963, column: 5, scope: !5762)
!5778 = !DILocation(line: 8963, column: 28, scope: !5762)
!5779 = !DILocation(line: 8964, column: 1, scope: !5762)
!5780 = distinct !DISubprogram(name: "vmFreePage", scope: !3, file: !3, line: 8978, type: !5781, scopeLine: 8978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!45, !160}
!5783 = !{!5784, !5785, !5786}
!5784 = !DILocalVariable(name: "page", arg: 1, scope: !5780, file: !3, line: 8978, type: !160)
!5785 = !DILocalVariable(name: "byte", scope: !5780, file: !3, line: 8979, type: !160)
!5786 = !DILocalVariable(name: "bit", scope: !5780, file: !3, line: 8980, type: !45)
!5787 = !DILocation(line: 0, scope: !5780)
!5788 = !DILocation(line: 8979, column: 22, scope: !5780)
!5789 = !DILocation(line: 8980, column: 15, scope: !5780)
!5790 = !DILocation(line: 8981, column: 20, scope: !5780)
!5791 = !DILocation(line: 8981, column: 13, scope: !5780)
!5792 = !DILocation(line: 8981, column: 48, scope: !5780)
!5793 = !DILocation(line: 8981, column: 5, scope: !5780)
!5794 = distinct !DISubprogram(name: "spawnIOThread", scope: !3, file: !3, line: 9668, type: !1747, scopeLine: 9668, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5795)
!5795 = !{!5796, !5797, !5798, !5799}
!5796 = !DILocalVariable(name: "thread", scope: !5794, file: !3, line: 9669, type: !56)
!5797 = !DILocalVariable(name: "mask", scope: !5794, file: !3, line: 9670, type: !276)
!5798 = !DILocalVariable(name: "omask", scope: !5794, file: !3, line: 9670, type: !276)
!5799 = !DILocalVariable(name: "err", scope: !5794, file: !3, line: 9671, type: !45)
!5800 = !DILocation(line: 9669, column: 5, scope: !5794)
!5801 = !DILocation(line: 9670, column: 5, scope: !5794)
!5802 = !DILocation(line: 9670, column: 14, scope: !5794)
!5803 = !DILocation(line: 9670, column: 20, scope: !5794)
!5804 = !DILocation(line: 9673, column: 5, scope: !5794)
!5805 = !DILocation(line: 9674, column: 5, scope: !5794)
!5806 = !DILocation(line: 9675, column: 5, scope: !5794)
!5807 = !DILocation(line: 9676, column: 5, scope: !5794)
!5808 = !DILocation(line: 9677, column: 5, scope: !5794)
!5809 = !DILocation(line: 0, scope: !5794)
!5810 = !DILocation(line: 9678, column: 19, scope: !5794)
!5811 = !DILocation(line: 9678, column: 92, scope: !5794)
!5812 = !DILocation(line: 9678, column: 5, scope: !5794)
!5813 = !DILocation(line: 9680, column: 13, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 9678, column: 98)
!5815 = !DILocation(line: 9679, column: 9, scope: !5814)
!5816 = !DILocation(line: 9681, column: 9, scope: !5814)
!5817 = distinct !{!5817, !5812, !5818}
!5818 = !DILocation(line: 9682, column: 5, scope: !5794)
!5819 = !DILocation(line: 9683, column: 5, scope: !5794)
!5820 = !DILocation(line: 9684, column: 29, scope: !5794)
!5821 = !DILocation(line: 9685, column: 1, scope: !5794)
!5822 = !DISubprogram(name: "sigemptyset", scope: !200, file: !200, line: 196, type: !5823, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!45, !5825}
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!5826 = !DISubprogram(name: "sigaddset", scope: !200, file: !200, line: 202, type: !5827, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{!45, !5825, !45}
!5829 = !DISubprogram(name: "pthread_sigmask", scope: !5830, file: !5830, line: 31, type: !5831, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5830 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigthread.h", directory: "", checksumkind: CSK_MD5, checksum: "8ea332b322ec52d6c0e990fdbd561e54")
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!45, !45, !5833, !5836}
!5833 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !5834)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!5836 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !5837)
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!5838 = !DISubprogram(name: "pthread_create", scope: !4085, file: !4085, line: 198, type: !5839, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!45, !5841, !5843, !74, !1483}
!5841 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !5842)
!5842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!5843 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !5844)
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!5846 = distinct !DISubprogram(name: "IOThreadEntryPoint", scope: !3, file: !3, line: 9614, type: !75, scopeLine: 9614, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5847)
!5847 = !{!5848, !5849, !5850, !5851}
!5848 = !DILocalVariable(name: "arg", arg: 1, scope: !5846, file: !3, line: 9614, type: !46)
!5849 = !DILocalVariable(name: "j", scope: !5846, file: !3, line: 9615, type: !5534)
!5850 = !DILocalVariable(name: "ln", scope: !5846, file: !3, line: 9616, type: !64)
!5851 = !DILocalVariable(name: "fp", scope: !5852, file: !3, line: 9646, type: !580)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 9645, column: 57)
!5853 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 9645, column: 20)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 9643, column: 13)
!5855 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 9620, column: 14)
!5856 = !DILocation(line: 0, scope: !5846)
!5857 = !DILocation(line: 9619, column: 20, scope: !5846)
!5858 = !DILocation(line: 9619, column: 5, scope: !5846)
!5859 = !DILocation(line: 9620, column: 5, scope: !5846)
!5860 = !DILocation(line: 9622, column: 9, scope: !5855)
!5861 = !DILocation(line: 9623, column: 13, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 9623, column: 13)
!5863 = !DILocation(line: 9623, column: 43, scope: !5862)
!5864 = !DILocation(line: 9623, column: 13, scope: !5855)
!5865 = !DILocation(line: 9625, column: 13, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 9623, column: 49)
!5867 = !DILocation(line: 9627, column: 37, scope: !5866)
!5868 = !DILocation(line: 9628, column: 13, scope: !5866)
!5869 = !DILocation(line: 9629, column: 13, scope: !5866)
!5870 = !DILocation(line: 9631, column: 14, scope: !5855)
!5871 = !DILocation(line: 9632, column: 17, scope: !5855)
!5872 = !DILocation(line: 9633, column: 9, scope: !5855)
!5873 = !DILocation(line: 9635, column: 12, scope: !5855)
!5874 = !DILocation(line: 9635, column: 19, scope: !5855)
!5875 = !DILocation(line: 9636, column: 32, scope: !5855)
!5876 = !DILocation(line: 9636, column: 9, scope: !5855)
!5877 = !DILocation(line: 9637, column: 14, scope: !5855)
!5878 = !{!1359, !714, i64 8}
!5879 = !DILocation(line: 9638, column: 9, scope: !5855)
!5880 = !DILocation(line: 9640, column: 39, scope: !5855)
!5881 = !DILocation(line: 9640, column: 65, scope: !5855)
!5882 = !DILocation(line: 9640, column: 70, scope: !5855)
!5883 = !DILocation(line: 9639, column: 9, scope: !5855)
!5884 = !DILocation(line: 9643, column: 16, scope: !5854)
!5885 = !DILocation(line: 9643, column: 13, scope: !5855)
!5886 = !DILocation(line: 9644, column: 46, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 9643, column: 42)
!5888 = !DILocation(line: 9644, column: 54, scope: !5887)
!5889 = !DILocation(line: 9644, column: 59, scope: !5887)
!5890 = !{!1329, !711, i64 11}
!5891 = !DILocation(line: 9644, column: 51, scope: !5887)
!5892 = !DILocation(line: 9644, column: 22, scope: !5887)
!5893 = !DILocation(line: 9644, column: 16, scope: !5887)
!5894 = !DILocation(line: 9644, column: 20, scope: !5887)
!5895 = !DILocation(line: 9645, column: 9, scope: !5887)
!5896 = !DILocation(line: 9646, column: 24, scope: !5852)
!5897 = !DILocation(line: 0, scope: !5852)
!5898 = !DILocation(line: 9647, column: 47, scope: !5852)
!5899 = !DILocation(line: 9647, column: 24, scope: !5852)
!5900 = !DILocation(line: 9647, column: 16, scope: !5852)
!5901 = !DILocation(line: 9647, column: 22, scope: !5852)
!5902 = !DILocation(line: 9648, column: 13, scope: !5852)
!5903 = !DILocation(line: 9649, column: 9, scope: !5852)
!5904 = !DILocation(line: 9650, column: 40, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 9650, column: 17)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 9649, column: 52)
!5907 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 9649, column: 20)
!5908 = !DILocation(line: 9650, column: 47, scope: !5905)
!5909 = !DILocation(line: 9650, column: 17, scope: !5905)
!5910 = !DILocation(line: 9650, column: 53, scope: !5905)
!5911 = !DILocation(line: 9650, column: 17, scope: !5906)
!5912 = !DILocation(line: 9651, column: 20, scope: !5905)
!5913 = !DILocation(line: 9651, column: 29, scope: !5905)
!5914 = !DILocation(line: 9651, column: 17, scope: !5905)
!5915 = !DILocation(line: 9656, column: 56, scope: !5855)
!5916 = !DILocation(line: 9656, column: 61, scope: !5855)
!5917 = !DILocation(line: 9655, column: 9, scope: !5855)
!5918 = !DILocation(line: 9657, column: 9, scope: !5855)
!5919 = !DILocation(line: 9658, column: 28, scope: !5855)
!5920 = !DILocation(line: 9658, column: 9, scope: !5855)
!5921 = !DILocation(line: 9659, column: 32, scope: !5855)
!5922 = !DILocation(line: 9659, column: 9, scope: !5855)
!5923 = !DILocation(line: 9660, column: 9, scope: !5855)
!5924 = !DILocation(line: 9663, column: 9, scope: !5855)
!5925 = !{!709, !713, i64 924}
!5926 = distinct !{!5926, !5859, !5927}
!5927 = !DILocation(line: 9664, column: 5, scope: !5846)
!5928 = !DISubprogram(name: "pthread_detach", scope: !4085, file: !4085, line: 247, type: !5929, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!45, !56}
!5931 = !DISubprogram(name: "pthread_self", scope: !4085, file: !4085, line: 251, type: !5932, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{!56}
!5934 = distinct !DISubprogram(name: "vmReadObjectFromSwap", scope: !3, file: !3, line: 9099, type: !5935, scopeLine: 9099, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5937)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!145, !160, !45}
!5937 = !{!5938, !5939, !5940}
!5938 = !DILocalVariable(name: "page", arg: 1, scope: !5934, file: !3, line: 9099, type: !160)
!5939 = !DILocalVariable(name: "type", arg: 2, scope: !5934, file: !3, line: 9099, type: !45)
!5940 = !DILocalVariable(name: "o", scope: !5934, file: !3, line: 9100, type: !145)
!5941 = !DILocation(line: 0, scope: !5934)
!5942 = !DILocation(line: 9102, column: 16, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 9102, column: 9)
!5944 = !DILocation(line: 9102, column: 9, scope: !5943)
!5945 = !DILocation(line: 9102, column: 9, scope: !5934)
!5946 = !DILocation(line: 9102, column: 28, scope: !5943)
!5947 = !DILocation(line: 9103, column: 23, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 9103, column: 9)
!5949 = !{!709, !714, i64 656}
!5950 = !DILocation(line: 9103, column: 41, scope: !5948)
!5951 = !DILocation(line: 9103, column: 33, scope: !5948)
!5952 = !DILocation(line: 9103, column: 9, scope: !5948)
!5953 = !DILocation(line: 9103, column: 64, scope: !5948)
!5954 = !DILocation(line: 9103, column: 9, scope: !5934)
!5955 = !DILocation(line: 9106, column: 22, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 9103, column: 71)
!5957 = !DILocation(line: 9106, column: 13, scope: !5956)
!5958 = !DILocation(line: 9104, column: 9, scope: !5956)
!5959 = !DILocation(line: 9107, column: 9, scope: !5956)
!5960 = !DILocation(line: 9109, column: 35, scope: !5934)
!5961 = !DILocation(line: 9109, column: 9, scope: !5934)
!5962 = !DILocation(line: 9110, column: 11, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 9110, column: 9)
!5964 = !DILocation(line: 9110, column: 9, scope: !5934)
!5965 = !DILocation(line: 9111, column: 134, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 9110, column: 20)
!5967 = !DILocation(line: 9111, column: 125, scope: !5966)
!5968 = !DILocation(line: 9111, column: 9, scope: !5966)
!5969 = !DILocation(line: 9112, column: 9, scope: !5966)
!5970 = !DILocation(line: 9114, column: 16, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 9114, column: 9)
!5972 = !DILocation(line: 9114, column: 9, scope: !5971)
!5973 = !DILocation(line: 9114, column: 9, scope: !5934)
!5974 = !DILocation(line: 9114, column: 28, scope: !5971)
!5975 = !DILocation(line: 9115, column: 5, scope: !5934)
!5976 = distinct !DISubprogram(name: "rdbSavedObjectPages", scope: !3, file: !3, line: 3683, type: !5977, scopeLine: 3683, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5979)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!160, !145, !580}
!5979 = !{!5980, !5981, !5982}
!5980 = !DILocalVariable(name: "o", arg: 1, scope: !5976, file: !3, line: 3683, type: !145)
!5981 = !DILocalVariable(name: "fp", arg: 2, scope: !5976, file: !3, line: 3683, type: !580)
!5982 = !DILocalVariable(name: "bytes", scope: !5976, file: !3, line: 3684, type: !160)
!5983 = !DILocation(line: 0, scope: !5976)
!5984 = !DILocation(line: 3684, column: 19, scope: !5976)
!5985 = !DILocation(line: 3686, column: 27, scope: !5976)
!5986 = !DILocation(line: 3686, column: 39, scope: !5976)
!5987 = !DILocation(line: 3686, column: 18, scope: !5976)
!5988 = !DILocation(line: 3686, column: 43, scope: !5976)
!5989 = !DILocation(line: 3686, column: 5, scope: !5976)
!5990 = distinct !DISubprogram(name: "vmWriteObjectOnSwap", scope: !3, file: !3, line: 9058, type: !5991, scopeLine: 9058, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5993)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!45, !145, !160}
!5993 = !{!5994, !5995}
!5994 = !DILocalVariable(name: "o", arg: 1, scope: !5990, file: !3, line: 9058, type: !145)
!5995 = !DILocalVariable(name: "page", arg: 2, scope: !5990, file: !3, line: 9058, type: !160)
!5996 = !DILocation(line: 0, scope: !5990)
!5997 = !DILocation(line: 9059, column: 16, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 9059, column: 9)
!5999 = !DILocation(line: 9059, column: 9, scope: !5998)
!6000 = !DILocation(line: 9059, column: 9, scope: !5990)
!6001 = !DILocation(line: 9059, column: 28, scope: !5998)
!6002 = !DILocation(line: 9060, column: 23, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 9060, column: 9)
!6004 = !DILocation(line: 9060, column: 41, scope: !6003)
!6005 = !DILocation(line: 9060, column: 33, scope: !6003)
!6006 = !DILocation(line: 9060, column: 9, scope: !6003)
!6007 = !DILocation(line: 9060, column: 64, scope: !6003)
!6008 = !DILocation(line: 9060, column: 9, scope: !5990)
!6009 = !DILocation(line: 9061, column: 20, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 9061, column: 13)
!6011 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 9060, column: 71)
!6012 = !DILocation(line: 9061, column: 13, scope: !6010)
!6013 = !DILocation(line: 9061, column: 13, scope: !6011)
!6014 = !DILocation(line: 9061, column: 32, scope: !6010)
!6015 = !DILocation(line: 9064, column: 22, scope: !6011)
!6016 = !DILocation(line: 9064, column: 13, scope: !6011)
!6017 = !DILocation(line: 9062, column: 9, scope: !6011)
!6018 = !DILocation(line: 9065, column: 9, scope: !6011)
!6019 = !DILocation(line: 9067, column: 26, scope: !5990)
!6020 = !DILocation(line: 9067, column: 5, scope: !5990)
!6021 = !DILocation(line: 9068, column: 19, scope: !5990)
!6022 = !DILocation(line: 9068, column: 5, scope: !5990)
!6023 = !DILocation(line: 9069, column: 16, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 9069, column: 9)
!6025 = !DILocation(line: 9069, column: 9, scope: !6024)
!6026 = !DILocation(line: 9069, column: 9, scope: !5990)
!6027 = !DILocation(line: 9069, column: 28, scope: !6024)
!6028 = !DILocation(line: 9071, column: 1, scope: !5990)
!6029 = !DISubprogram(name: "fseeko", linkageName: "fseeko64", scope: !161, file: !161, line: 715, type: !6030, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!45, !580, !162, !45}
!6032 = distinct !DISubprogram(name: "rdbLoadObject", scope: !3, file: !3, line: 3975, type: !6033, scopeLine: 3975, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6035)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!145, !45, !580}
!6035 = !{!6036, !6037, !6038, !6039, !6043, !6045, !6048, !6049, !6051, !6052, !6055, !6057, !6058}
!6036 = !DILocalVariable(name: "type", arg: 1, scope: !6032, file: !3, line: 3975, type: !45)
!6037 = !DILocalVariable(name: "fp", arg: 2, scope: !6032, file: !3, line: 3975, type: !580)
!6038 = !DILocalVariable(name: "o", scope: !6032, file: !3, line: 3976, type: !145)
!6039 = !DILocalVariable(name: "listlen", scope: !6040, file: !3, line: 3985, type: !2322)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3983, column: 57)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3983, column: 16)
!6042 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 3979, column: 9)
!6043 = !DILocalVariable(name: "ele", scope: !6044, file: !3, line: 3995, type: !145)
!6044 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 3994, column: 26)
!6045 = !DILocalVariable(name: "zsetlen", scope: !6046, file: !3, line: 4007, type: !196)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4005, column: 36)
!6047 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 4005, column: 16)
!6048 = !DILocalVariable(name: "zs", scope: !6046, file: !3, line: 4008, type: !171)
!6049 = !DILocalVariable(name: "ele", scope: !6050, file: !3, line: 4015, type: !145)
!6050 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 4014, column: 26)
!6051 = !DILocalVariable(name: "score", scope: !6050, file: !3, line: 4016, type: !198)
!6052 = !DILocalVariable(name: "hashlen", scope: !6053, file: !3, line: 4026, type: !196)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 4025, column: 36)
!6054 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4025, column: 16)
!6055 = !DILocalVariable(name: "key", scope: !6056, file: !3, line: 4036, type: !145)
!6056 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 4035, column: 26)
!6057 = !DILocalVariable(name: "val", scope: !6056, file: !3, line: 4036, type: !145)
!6058 = !DILocalVariable(name: "zm", scope: !6059, file: !3, line: 4050, type: !167)
!6059 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 4049, column: 55)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4049, column: 17)
!6061 = !DILocation(line: 0, scope: !6032)
!6062 = !DILocation(line: 3978, column: 61, scope: !6032)
!6063 = !DILocation(line: 3978, column: 5, scope: !6032)
!6064 = !DILocation(line: 3979, column: 14, scope: !6042)
!6065 = !DILocation(line: 3979, column: 9, scope: !6032)
!6066 = !DILocation(line: 3981, column: 18, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 3981, column: 13)
!6068 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3979, column: 31)
!6069 = !DILocation(line: 3981, column: 50, scope: !6067)
!6070 = !DILocation(line: 3981, column: 13, scope: !6068)
!6071 = !DILocation(line: 3982, column: 13, scope: !6068)
!6072 = !DILocation(line: 3983, column: 5, scope: !6068)
!6073 = !DILocation(line: 3983, column: 21, scope: !6041)
!6074 = !DILocation(line: 3983, column: 35, scope: !6041)
!6075 = !DILocation(line: 3987, column: 24, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 3987, column: 13)
!6077 = !DILocation(line: 0, scope: !6040)
!6078 = !DILocation(line: 3987, column: 45, scope: !6076)
!6079 = !DILocation(line: 3987, column: 13, scope: !6040)
!6080 = !DILocation(line: 3988, column: 13, scope: !6040)
!6081 = !DILocation(line: 3988, column: 36, scope: !6040)
!6082 = !DILocation(line: 3988, column: 57, scope: !6040)
!6083 = !DILocation(line: 3991, column: 31, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 3991, column: 13)
!6085 = !DILocation(line: 3992, column: 27, scope: !6084)
!6086 = !DILocation(line: 3992, column: 31, scope: !6084)
!6087 = !DILocation(line: 3992, column: 13, scope: !6084)
!6088 = !DILocation(line: 3994, column: 9, scope: !6040)
!6089 = !DILocation(line: 3994, column: 22, scope: !6040)
!6090 = !DILocation(line: 3997, column: 24, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 3997, column: 17)
!6092 = !DILocation(line: 0, scope: !6044)
!6093 = !DILocation(line: 3997, column: 56, scope: !6091)
!6094 = !DILocation(line: 3997, column: 17, scope: !6044)
!6095 = !DILocation(line: 3998, column: 19, scope: !6044)
!6096 = !DILocation(line: 3999, column: 17, scope: !6044)
!6097 = !DILocation(line: 4000, column: 43, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 3999, column: 37)
!6099 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 3999, column: 17)
!6100 = !DILocation(line: 4000, column: 47, scope: !6098)
!6101 = !DILocation(line: 4000, column: 17, scope: !6098)
!6102 = !DILocation(line: 4001, column: 13, scope: !6098)
!6103 = !DILocation(line: 4002, column: 35, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 4001, column: 20)
!6105 = !DILocation(line: 4002, column: 39, scope: !6104)
!6106 = !DILocation(line: 4002, column: 17, scope: !6104)
!6107 = distinct !{!6107, !6088, !6108}
!6108 = !DILocation(line: 4004, column: 9, scope: !6040)
!6109 = !DILocation(line: 4005, column: 16, scope: !6041)
!6110 = !DILocation(line: 4010, column: 24, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 4010, column: 13)
!6112 = !DILocation(line: 0, scope: !6046)
!6113 = !DILocation(line: 4010, column: 45, scope: !6111)
!6114 = !DILocation(line: 4010, column: 13, scope: !6046)
!6115 = !DILocation(line: 4011, column: 13, scope: !6046)
!6116 = !DILocation(line: 4012, column: 17, scope: !6046)
!6117 = !DILocation(line: 4014, column: 9, scope: !6046)
!6118 = !DILocation(line: 4014, column: 22, scope: !6046)
!6119 = !DILocation(line: 4016, column: 29, scope: !6050)
!6120 = !DILocation(line: 0, scope: !6050)
!6121 = !DILocation(line: 4018, column: 24, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 4018, column: 17)
!6123 = !DILocation(line: 4018, column: 56, scope: !6122)
!6124 = !DILocation(line: 4018, column: 17, scope: !6050)
!6125 = distinct !{!6125, !6117, !6126}
!6126 = !DILocation(line: 4024, column: 9, scope: !6046)
!6127 = !DILocation(line: 4019, column: 19, scope: !6050)
!6128 = !DILocation(line: 4020, column: 17, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 4020, column: 17)
!6130 = !DILocation(line: 4020, column: 46, scope: !6129)
!6131 = !DILocation(line: 4020, column: 17, scope: !6050)
!6132 = !DILocation(line: 4021, column: 25, scope: !6050)
!6133 = !{!6134, !714, i64 0}
!6134 = !{!"zset", !714, i64 0, !714, i64 8}
!6135 = !DILocation(line: 4021, column: 30, scope: !6050)
!6136 = !DILocation(line: 4021, column: 13, scope: !6050)
!6137 = !DILocation(line: 4022, column: 27, scope: !6050)
!6138 = !{!6134, !714, i64 8}
!6139 = !DILocation(line: 4022, column: 31, scope: !6050)
!6140 = !{!1143, !1143, i64 0}
!6141 = !DILocation(line: 4022, column: 13, scope: !6050)
!6142 = !DILocation(line: 4023, column: 13, scope: !6050)
!6143 = !DILocation(line: 4028, column: 24, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 4028, column: 13)
!6145 = !DILocation(line: 0, scope: !6053)
!6146 = !DILocation(line: 4028, column: 45, scope: !6144)
!6147 = !DILocation(line: 4028, column: 13, scope: !6053)
!6148 = !DILocation(line: 4029, column: 13, scope: !6053)
!6149 = !DILocation(line: 4031, column: 30, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 4031, column: 13)
!6151 = !DILocation(line: 4031, column: 21, scope: !6150)
!6152 = !DILocation(line: 4031, column: 13, scope: !6053)
!6153 = !DILocation(line: 4032, column: 13, scope: !6150)
!6154 = !DILocation(line: 4035, column: 9, scope: !6053)
!6155 = !DILocation(line: 4035, column: 22, scope: !6053)
!6156 = !DILocation(line: 4038, column: 24, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4038, column: 17)
!6158 = !DILocation(line: 0, scope: !6056)
!6159 = !DILocation(line: 4038, column: 49, scope: !6157)
!6160 = !DILocation(line: 4038, column: 17, scope: !6056)
!6161 = !DILocation(line: 4039, column: 24, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4039, column: 17)
!6163 = !DILocation(line: 4039, column: 49, scope: !6162)
!6164 = !DILocation(line: 4039, column: 17, scope: !6056)
!6165 = !DILocation(line: 4042, column: 20, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4042, column: 17)
!6167 = !DILocation(line: 4042, column: 29, scope: !6166)
!6168 = !DILocation(line: 4042, column: 50, scope: !6166)
!6169 = !DILocation(line: 4043, column: 29, scope: !6166)
!6170 = !DILocation(line: 4043, column: 17, scope: !6166)
!6171 = !DILocation(line: 4043, column: 43, scope: !6166)
!6172 = !DILocation(line: 4043, column: 34, scope: !6166)
!6173 = !DILocation(line: 4043, column: 65, scope: !6166)
!6174 = !DILocation(line: 4044, column: 29, scope: !6166)
!6175 = !DILocation(line: 4044, column: 17, scope: !6166)
!6176 = !DILocation(line: 4044, column: 43, scope: !6166)
!6177 = !DILocation(line: 4044, column: 34, scope: !6166)
!6178 = !DILocation(line: 4042, column: 17, scope: !6056)
!6179 = !DILocation(line: 4046, column: 21, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 4045, column: 13)
!6181 = !DILocation(line: 4047, column: 13, scope: !6180)
!6182 = !DILocation(line: 4049, column: 20, scope: !6060)
!6183 = !DILocation(line: 4049, column: 29, scope: !6060)
!6184 = !DILocation(line: 4049, column: 17, scope: !6056)
!6185 = !DILocation(line: 4050, column: 40, scope: !6059)
!6186 = !DILocation(line: 0, scope: !6059)
!6187 = !DILocation(line: 4052, column: 40, scope: !6059)
!6188 = !DILocation(line: 4052, column: 44, scope: !6059)
!6189 = !DILocation(line: 4053, column: 40, scope: !6059)
!6190 = !DILocation(line: 4053, column: 44, scope: !6059)
!6191 = !DILocation(line: 4052, column: 22, scope: !6059)
!6192 = !DILocation(line: 4054, column: 24, scope: !6059)
!6193 = !DILocation(line: 4055, column: 30, scope: !6059)
!6194 = !DILocation(line: 4055, column: 17, scope: !6059)
!6195 = !DILocation(line: 4056, column: 30, scope: !6059)
!6196 = !DILocation(line: 4056, column: 17, scope: !6059)
!6197 = !DILocation(line: 4057, column: 13, scope: !6059)
!6198 = !DILocation(line: 4058, column: 23, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 4057, column: 20)
!6200 = !DILocation(line: 4059, column: 23, scope: !6199)
!6201 = !DILocation(line: 4060, column: 35, scope: !6199)
!6202 = !DILocation(line: 4060, column: 39, scope: !6199)
!6203 = !DILocation(line: 4060, column: 43, scope: !6199)
!6204 = !DILocation(line: 4060, column: 17, scope: !6199)
!6205 = distinct !{!6205, !6154, !6206}
!6206 = !DILocation(line: 4062, column: 9, scope: !6053)
!6207 = !DILocation(line: 4064, column: 9, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 4063, column: 12)
!6209 = !DILocation(line: 4067, column: 1, scope: !6032)
!6210 = !DISubprogram(name: "ftell", scope: !161, file: !161, line: 689, type: !6211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{!53, !580}
!6213 = distinct !DISubprogram(name: "rdbLoadEncodedStringObject", scope: !3, file: !3, line: 3951, type: !6214, scopeLine: 3951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6216)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!145, !580}
!6216 = !{!6217}
!6217 = !DILocalVariable(name: "fp", arg: 1, scope: !6213, file: !3, line: 3951, type: !580)
!6218 = !DILocation(line: 0, scope: !6213)
!6219 = !DILocation(line: 3952, column: 12, scope: !6213)
!6220 = !DILocation(line: 3952, column: 5, scope: !6213)
!6221 = distinct !DISubprogram(name: "rdbLoadLen", scope: !3, file: !3, line: 3843, type: !6222, scopeLine: 3843, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6224)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!2322, !580, !3301}
!6224 = !{!6225, !6226, !6227, !6229, !6230}
!6225 = !DILocalVariable(name: "fp", arg: 1, scope: !6221, file: !3, line: 3843, type: !580)
!6226 = !DILocalVariable(name: "isencoded", arg: 2, scope: !6221, file: !3, line: 3843, type: !3301)
!6227 = !DILocalVariable(name: "buf", scope: !6221, file: !3, line: 3844, type: !6228)
!6228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 16, elements: !135)
!6229 = !DILocalVariable(name: "len", scope: !6221, file: !3, line: 3845, type: !2322)
!6230 = !DILocalVariable(name: "type", scope: !6221, file: !3, line: 3846, type: !45)
!6231 = !DILocation(line: 0, scope: !6221)
!6232 = !DILocation(line: 3844, column: 5, scope: !6221)
!6233 = !DILocation(line: 3844, column: 19, scope: !6221)
!6234 = !DILocation(line: 3845, column: 5, scope: !6221)
!6235 = !DILocation(line: 3848, column: 9, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 3848, column: 9)
!6237 = !DILocation(line: 3848, column: 9, scope: !6221)
!6238 = !DILocation(line: 3848, column: 31, scope: !6236)
!6239 = !DILocation(line: 3848, column: 20, scope: !6236)
!6240 = !DILocation(line: 3849, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 3849, column: 9)
!6242 = !DILocation(line: 3849, column: 27, scope: !6241)
!6243 = !DILocation(line: 3849, column: 9, scope: !6221)
!6244 = !DILocation(line: 3850, column: 13, scope: !6221)
!6245 = !DILocation(line: 3851, column: 14, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 3851, column: 9)
!6247 = !DILocation(line: 3851, column: 9, scope: !6221)
!6248 = !DILocation(line: 3853, column: 22, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3851, column: 36)
!6250 = !DILocation(line: 3853, column: 9, scope: !6249)
!6251 = !DILocation(line: 3850, column: 25, scope: !6221)
!6252 = !DILocation(line: 3854, column: 16, scope: !6246)
!6253 = !DILocation(line: 3856, column: 13, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 3854, column: 42)
!6255 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3854, column: 16)
!6256 = !DILocation(line: 3856, column: 35, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 3856, column: 13)
!6258 = !DILocation(line: 3856, column: 24, scope: !6257)
!6259 = !DILocation(line: 3857, column: 22, scope: !6254)
!6260 = !DILocation(line: 3857, column: 9, scope: !6254)
!6261 = !DILocation(line: 3860, column: 22, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 3860, column: 13)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 3858, column: 44)
!6264 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 3858, column: 16)
!6265 = !DILocation(line: 3860, column: 13, scope: !6262)
!6266 = !DILocation(line: 3860, column: 33, scope: !6262)
!6267 = !DILocation(line: 3860, column: 13, scope: !6263)
!6268 = !DILocation(line: 3861, column: 18, scope: !6263)
!6269 = !DILocation(line: 3861, column: 24, scope: !6263)
!6270 = !DILocation(line: 3861, column: 30, scope: !6263)
!6271 = !DILocation(line: 3861, column: 35, scope: !6263)
!6272 = !DILocation(line: 3861, column: 34, scope: !6263)
!6273 = !DILocation(line: 3861, column: 9, scope: !6263)
!6274 = !DILocation(line: 3864, column: 13, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 3864, column: 13)
!6276 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 3862, column: 12)
!6277 = !DILocation(line: 3864, column: 32, scope: !6275)
!6278 = !DILocation(line: 3864, column: 13, scope: !6276)
!6279 = !DILocation(line: 3865, column: 16, scope: !6276)
!6280 = !DILocation(line: 3865, column: 9, scope: !6276)
!6281 = !DILocation(line: 3867, column: 1, scope: !6221)
!6282 = distinct !DISubprogram(name: "createListObject", scope: !3, file: !3, line: 2956, type: !6283, scopeLine: 2956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6285)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!145}
!6285 = !{!6286}
!6286 = !DILocalVariable(name: "l", scope: !6282, file: !3, line: 2957, type: !58)
!6287 = !DILocation(line: 2957, column: 15, scope: !6282)
!6288 = !DILocation(line: 0, scope: !6282)
!6289 = !DILocation(line: 2959, column: 5, scope: !6282)
!6290 = !DILocation(line: 2960, column: 36, scope: !6282)
!6291 = !DILocation(line: 2960, column: 12, scope: !6282)
!6292 = !DILocation(line: 2960, column: 5, scope: !6282)
!6293 = distinct !DISubprogram(name: "createSetObject", scope: !3, file: !3, line: 2963, type: !6283, scopeLine: 2963, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6294)
!6294 = !{!6295}
!6295 = !DILocalVariable(name: "d", scope: !6293, file: !3, line: 2964, type: !86)
!6296 = !DILocation(line: 2964, column: 15, scope: !6293)
!6297 = !DILocation(line: 0, scope: !6293)
!6298 = !DILocation(line: 2965, column: 35, scope: !6293)
!6299 = !DILocation(line: 2965, column: 12, scope: !6293)
!6300 = !DILocation(line: 2965, column: 5, scope: !6293)
!6301 = !DISubprogram(name: "dictExpand", scope: !88, file: !88, line: 125, type: !6302, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!45, !86, !55}
!6304 = distinct !DISubprogram(name: "createZsetObject", scope: !3, file: !3, line: 2978, type: !6283, scopeLine: 2978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6305)
!6305 = !{!6306}
!6306 = !DILocalVariable(name: "zs", scope: !6304, file: !3, line: 2979, type: !171)
!6307 = !DILocation(line: 2979, column: 16, scope: !6304)
!6308 = !DILocation(line: 0, scope: !6304)
!6309 = !DILocation(line: 2981, column: 16, scope: !6304)
!6310 = !DILocation(line: 2981, column: 9, scope: !6304)
!6311 = !DILocation(line: 2981, column: 14, scope: !6304)
!6312 = !DILocation(line: 2982, column: 15, scope: !6304)
!6313 = !DILocation(line: 2982, column: 9, scope: !6304)
!6314 = !DILocation(line: 2982, column: 13, scope: !6304)
!6315 = !DILocation(line: 2983, column: 12, scope: !6304)
!6316 = !DILocation(line: 2983, column: 5, scope: !6304)
!6317 = distinct !DISubprogram(name: "rdbLoadDoubleValue", scope: !3, file: !3, line: 3956, type: !6318, scopeLine: 3956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6320)
!6318 = !DISubroutineType(types: !6319)
!6319 = !{!45, !580, !198}
!6320 = !{!6321, !6322, !6323, !6324}
!6321 = !DILocalVariable(name: "fp", arg: 1, scope: !6317, file: !3, line: 3956, type: !580)
!6322 = !DILocalVariable(name: "val", arg: 2, scope: !6317, file: !3, line: 3956, type: !198)
!6323 = !DILocalVariable(name: "buf", scope: !6317, file: !3, line: 3957, type: !1247)
!6324 = !DILocalVariable(name: "len", scope: !6317, file: !3, line: 3958, type: !151)
!6325 = !DILocation(line: 0, scope: !6317)
!6326 = !DILocation(line: 3957, column: 5, scope: !6317)
!6327 = !DILocation(line: 3957, column: 10, scope: !6317)
!6328 = !DILocation(line: 3958, column: 5, scope: !6317)
!6329 = !DILocation(line: 3960, column: 9, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 3960, column: 9)
!6331 = !DILocation(line: 3960, column: 28, scope: !6330)
!6332 = !DILocation(line: 3960, column: 9, scope: !6317)
!6333 = !DILocation(line: 3961, column: 12, scope: !6317)
!6334 = !DILocation(line: 3961, column: 5, scope: !6317)
!6335 = !DILocation(line: 3962, column: 22, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 3961, column: 17)
!6337 = !DILocation(line: 3962, column: 20, scope: !6336)
!6338 = !DILocation(line: 3962, column: 32, scope: !6336)
!6339 = !DILocation(line: 3963, column: 22, scope: !6336)
!6340 = !DILocation(line: 3963, column: 20, scope: !6336)
!6341 = !DILocation(line: 3963, column: 32, scope: !6336)
!6342 = !DILocation(line: 3964, column: 22, scope: !6336)
!6343 = !DILocation(line: 3964, column: 20, scope: !6336)
!6344 = !DILocation(line: 3964, column: 29, scope: !6336)
!6345 = !DILocation(line: 3966, column: 23, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3966, column: 13)
!6347 = !DILocation(line: 3966, column: 13, scope: !6346)
!6348 = !DILocation(line: 3966, column: 33, scope: !6346)
!6349 = !DILocation(line: 3966, column: 13, scope: !6336)
!6350 = !DILocation(line: 3967, column: 13, scope: !6336)
!6351 = !DILocation(line: 3967, column: 9, scope: !6336)
!6352 = !DILocation(line: 3967, column: 18, scope: !6336)
!6353 = !DILocation(line: 3968, column: 9, scope: !6336)
!6354 = !DILocation(line: 3969, column: 9, scope: !6336)
!6355 = !DILocation(line: 3971, column: 1, scope: !6317)
!6356 = distinct !DISubprogram(name: "zslInsert", scope: !3, file: !3, line: 5502, type: !6357, scopeLine: 5502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6359)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{null, !177, !168, !145}
!6359 = !{!6360, !6361, !6362, !6363, !6365, !6366, !6368, !6369}
!6360 = !DILocalVariable(name: "zsl", arg: 1, scope: !6356, file: !3, line: 5502, type: !177)
!6361 = !DILocalVariable(name: "score", arg: 2, scope: !6356, file: !3, line: 5502, type: !168)
!6362 = !DILocalVariable(name: "obj", arg: 3, scope: !6356, file: !3, line: 5502, type: !145)
!6363 = !DILocalVariable(name: "update", scope: !6356, file: !3, line: 5503, type: !6364)
!6364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 2048, elements: !4257)
!6365 = !DILocalVariable(name: "x", scope: !6356, file: !3, line: 5503, type: !1121)
!6366 = !DILocalVariable(name: "rank", scope: !6356, file: !3, line: 5504, type: !6367)
!6367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1024, elements: !4257)
!6368 = !DILocalVariable(name: "i", scope: !6356, file: !3, line: 5505, type: !45)
!6369 = !DILocalVariable(name: "level", scope: !6356, file: !3, line: 5505, type: !45)
!6370 = !DILocation(line: 0, scope: !6356)
!6371 = !DILocation(line: 5503, column: 5, scope: !6356)
!6372 = !DILocation(line: 5503, column: 20, scope: !6356)
!6373 = !DILocation(line: 5504, column: 5, scope: !6356)
!6374 = !DILocation(line: 5504, column: 18, scope: !6356)
!6375 = !DILocation(line: 5507, column: 14, scope: !6356)
!6376 = !DILocation(line: 5508, column: 19, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 5508, column: 5)
!6378 = !DILocation(line: 5508, column: 30, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 5508, column: 5)
!6380 = !DILocation(line: 5508, column: 5, scope: !6377)
!6381 = !DILocation(line: 5510, column: 30, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 5508, column: 41)
!6383 = !DILocation(line: 0, scope: !6377)
!6384 = !DILocation(line: 5510, column: 21, scope: !6382)
!6385 = !DILocation(line: 5510, column: 19, scope: !6382)
!6386 = !DILocation(line: 5510, column: 45, scope: !6382)
!6387 = !DILocation(line: 5510, column: 9, scope: !6382)
!6388 = !DILocation(line: 5510, column: 17, scope: !6382)
!6389 = !DILocation(line: 5512, column: 19, scope: !6382)
!6390 = !DILocation(line: 5512, column: 16, scope: !6382)
!6391 = !DILocation(line: 5512, column: 30, scope: !6382)
!6392 = !DILocation(line: 5513, column: 29, scope: !6382)
!6393 = !{!1142, !1143, i64 24}
!6394 = !DILocation(line: 5513, column: 35, scope: !6382)
!6395 = !DILocation(line: 5513, column: 43, scope: !6382)
!6396 = !DILocation(line: 5514, column: 39, scope: !6382)
!6397 = !DILocation(line: 5514, column: 48, scope: !6382)
!6398 = !DILocation(line: 5515, column: 53, scope: !6382)
!6399 = !{!1142, !714, i64 32}
!6400 = !DILocation(line: 5515, column: 17, scope: !6382)
!6401 = !DILocation(line: 5515, column: 62, scope: !6382)
!6402 = !DILocation(line: 5512, column: 9, scope: !6382)
!6403 = !DILocation(line: 5516, column: 24, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 5515, column: 69)
!6405 = !DILocation(line: 5516, column: 35, scope: !6404)
!6406 = !DILocation(line: 5516, column: 32, scope: !6404)
!6407 = !DILocation(line: 5516, column: 21, scope: !6404)
!6408 = !DILocation(line: 5517, column: 20, scope: !6404)
!6409 = !DILocation(line: 5517, column: 17, scope: !6404)
!6410 = distinct !{!6410, !6402, !6411}
!6411 = !DILocation(line: 5518, column: 9, scope: !6382)
!6412 = !DILocation(line: 5519, column: 9, scope: !6382)
!6413 = !DILocation(line: 5519, column: 19, scope: !6382)
!6414 = distinct !{!6414, !6380, !6415}
!6415 = !DILocation(line: 5520, column: 5, scope: !6377)
!6416 = !DILocation(line: 5525, column: 13, scope: !6356)
!6417 = !DILocation(line: 5526, column: 22, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 5526, column: 9)
!6419 = !DILocation(line: 5526, column: 15, scope: !6418)
!6420 = !DILocation(line: 5526, column: 9, scope: !6356)
!6421 = !DILocation(line: 5527, column: 9, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 5527, column: 9)
!6423 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 5526, column: 29)
!6424 = !DILocation(line: 5527, column: 32, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 5527, column: 9)
!6426 = !DILocation(line: 5528, column: 13, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 5527, column: 46)
!6428 = !DILocation(line: 5528, column: 21, scope: !6427)
!6429 = !DILocation(line: 5529, column: 13, scope: !6427)
!6430 = !DILocation(line: 5529, column: 23, scope: !6427)
!6431 = !DILocation(line: 5530, column: 30, scope: !6427)
!6432 = !DILocation(line: 5530, column: 13, scope: !6427)
!6433 = !DILocation(line: 5530, column: 34, scope: !6427)
!6434 = distinct !{!6434, !6421, !6435, !6436}
!6435 = !DILocation(line: 5531, column: 9, scope: !6422)
!6436 = !{!"llvm.loop.isvectorized", i32 1}
!6437 = !DILocation(line: 5527, column: 42, scope: !6425)
!6438 = distinct !{!6438, !6421, !6435, !6439, !6436}
!6439 = !{!"llvm.loop.unroll.runtime.disable"}
!6440 = !DILocation(line: 5532, column: 20, scope: !6423)
!6441 = !DILocation(line: 5533, column: 5, scope: !6423)
!6442 = !DILocation(line: 5534, column: 9, scope: !6356)
!6443 = !DILocation(line: 5535, column: 19, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 5535, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 5535, column: 5)
!6446 = !DILocation(line: 5535, column: 5, scope: !6445)
!6447 = !DILocation(line: 5536, column: 25, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 5535, column: 33)
!6449 = !DILocation(line: 5536, column: 36, scope: !6448)
!6450 = !DILocation(line: 5536, column: 12, scope: !6448)
!6451 = !DILocation(line: 5536, column: 23, scope: !6448)
!6452 = !DILocation(line: 5537, column: 20, scope: !6448)
!6453 = !DILocation(line: 5537, column: 31, scope: !6448)
!6454 = !DILocation(line: 5547, column: 30, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 5547, column: 5)
!6456 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 5547, column: 5)
!6457 = !DILocation(line: 5547, column: 23, scope: !6455)
!6458 = !DILocation(line: 5547, column: 5, scope: !6456)
!6459 = !DILocation(line: 5536, column: 9, scope: !6448)
!6460 = !DILocation(line: 5537, column: 9, scope: !6448)
!6461 = !DILocation(line: 5541, column: 39, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 5540, column: 20)
!6463 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 5540, column: 13)
!6464 = !DILocation(line: 5541, column: 28, scope: !6462)
!6465 = !DILocation(line: 5541, column: 62, scope: !6462)
!6466 = !DILocation(line: 5541, column: 60, scope: !6462)
!6467 = !DILocation(line: 5541, column: 49, scope: !6462)
!6468 = !DILocation(line: 5541, column: 16, scope: !6462)
!6469 = !DILocation(line: 5541, column: 13, scope: !6462)
!6470 = !DILocation(line: 5541, column: 26, scope: !6462)
!6471 = !DILocation(line: 5542, column: 56, scope: !6462)
!6472 = !DILocation(line: 5542, column: 34, scope: !6462)
!6473 = !DILocation(line: 5535, column: 29, scope: !6444)
!6474 = distinct !{!6474, !6446, !6475, !1168}
!6475 = !DILocation(line: 5544, column: 5, scope: !6445)
!6476 = !DILocation(line: 5548, column: 9, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 5547, column: 42)
!6478 = !DILocation(line: 5548, column: 20, scope: !6477)
!6479 = !DILocation(line: 5548, column: 26, scope: !6477)
!6480 = !DILocation(line: 5548, column: 29, scope: !6477)
!6481 = !DILocation(line: 5547, column: 38, scope: !6455)
!6482 = distinct !{!6482, !6458, !6483}
!6483 = !DILocation(line: 5549, column: 5, scope: !6456)
!6484 = !DILocation(line: 5551, column: 20, scope: !6356)
!6485 = !DILocation(line: 5551, column: 38, scope: !6356)
!6486 = !DILocation(line: 5551, column: 30, scope: !6356)
!6487 = !DILocation(line: 5551, column: 19, scope: !6356)
!6488 = !DILocation(line: 5551, column: 8, scope: !6356)
!6489 = !DILocation(line: 5551, column: 17, scope: !6356)
!6490 = !DILocation(line: 5552, column: 12, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 5552, column: 9)
!6492 = !DILocation(line: 5552, column: 9, scope: !6491)
!6493 = !DILocation(line: 5552, column: 9, scope: !6356)
!6494 = !DILocation(line: 0, scope: !6491)
!6495 = !DILocation(line: 5556, column: 10, scope: !6356)
!6496 = !DILocation(line: 5556, column: 16, scope: !6356)
!6497 = !DILocation(line: 5557, column: 1, scope: !6356)
!6498 = distinct !DISubprogram(name: "createHashObject", scope: !3, file: !3, line: 2968, type: !6283, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6499)
!6499 = !{!6500, !6501}
!6500 = !DILocalVariable(name: "zm", scope: !6498, file: !3, line: 2972, type: !167)
!6501 = !DILocalVariable(name: "o", scope: !6498, file: !3, line: 2973, type: !145)
!6502 = !DILocation(line: 2972, column: 25, scope: !6498)
!6503 = !DILocation(line: 0, scope: !6498)
!6504 = !DILocation(line: 2973, column: 15, scope: !6498)
!6505 = !DILocation(line: 2974, column: 8, scope: !6498)
!6506 = !DILocation(line: 2974, column: 17, scope: !6498)
!6507 = !DILocation(line: 2975, column: 5, scope: !6498)
!6508 = distinct !DISubprogram(name: "convertToRealHash", scope: !3, file: !3, line: 6783, type: !4091, scopeLine: 6783, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6509)
!6509 = !{!6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6520}
!6510 = !DILocalVariable(name: "o", arg: 1, scope: !6508, file: !3, line: 6783, type: !145)
!6511 = !DILocalVariable(name: "key", scope: !6508, file: !3, line: 6784, type: !167)
!6512 = !DILocalVariable(name: "val", scope: !6508, file: !3, line: 6784, type: !167)
!6513 = !DILocalVariable(name: "p", scope: !6508, file: !3, line: 6784, type: !167)
!6514 = !DILocalVariable(name: "zm", scope: !6508, file: !3, line: 6784, type: !167)
!6515 = !DILocalVariable(name: "klen", scope: !6508, file: !3, line: 6785, type: !7)
!6516 = !DILocalVariable(name: "vlen", scope: !6508, file: !3, line: 6785, type: !7)
!6517 = !DILocalVariable(name: "dict", scope: !6508, file: !3, line: 6786, type: !86)
!6518 = !DILocalVariable(name: "keyobj", scope: !6519, file: !3, line: 6791, type: !145)
!6519 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 6790, column: 62)
!6520 = !DILocalVariable(name: "valobj", scope: !6519, file: !3, line: 6791, type: !145)
!6521 = !DILocation(line: 0, scope: !6508)
!6522 = !DILocation(line: 6784, column: 5, scope: !6508)
!6523 = !DILocation(line: 6784, column: 44, scope: !6508)
!6524 = !DILocation(line: 6785, column: 5, scope: !6508)
!6525 = !DILocation(line: 6786, column: 18, scope: !6508)
!6526 = !DILocation(line: 6788, column: 5, scope: !6508)
!6527 = !DILocation(line: 6789, column: 9, scope: !6508)
!6528 = !DILocation(line: 6790, column: 16, scope: !6508)
!6529 = !DILocation(line: 6790, column: 53, scope: !6508)
!6530 = !DILocation(line: 6790, column: 5, scope: !6508)
!6531 = !DILocation(line: 6793, column: 44, scope: !6519)
!6532 = !DILocation(line: 6793, column: 48, scope: !6519)
!6533 = !DILocation(line: 6793, column: 18, scope: !6519)
!6534 = !DILocation(line: 0, scope: !6519)
!6535 = !DILocation(line: 6794, column: 44, scope: !6519)
!6536 = !DILocation(line: 6794, column: 48, scope: !6519)
!6537 = !DILocation(line: 6794, column: 18, scope: !6519)
!6538 = !DILocation(line: 6795, column: 18, scope: !6519)
!6539 = !DILocation(line: 6796, column: 18, scope: !6519)
!6540 = !DILocation(line: 6797, column: 22, scope: !6519)
!6541 = !DILocation(line: 6797, column: 29, scope: !6519)
!6542 = !DILocation(line: 6797, column: 9, scope: !6519)
!6543 = distinct !{!6543, !6530, !6544}
!6544 = !DILocation(line: 6798, column: 5, scope: !6508)
!6545 = !DILocation(line: 6799, column: 17, scope: !6508)
!6546 = !DILocation(line: 6800, column: 12, scope: !6508)
!6547 = !DILocation(line: 6801, column: 5, scope: !6508)
!6548 = !DILocation(line: 6802, column: 1, scope: !6508)
!6549 = distinct !DISubprogram(name: "rdbLoadStringObject", scope: !3, file: !3, line: 3947, type: !6214, scopeLine: 3947, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6550)
!6550 = !{!6551}
!6551 = !DILocalVariable(name: "fp", arg: 1, scope: !6549, file: !3, line: 3947, type: !580)
!6552 = !DILocation(line: 0, scope: !6549)
!6553 = !DILocation(line: 3948, column: 12, scope: !6549)
!6554 = !DILocation(line: 3948, column: 5, scope: !6549)
!6555 = !DISubprogram(name: "zipmapSet", scope: !6556, file: !6556, line: 39, type: !6557, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6556 = !DIFile(filename: "./zipmap.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "00ab42a4019f6cf2459a85a88d18f112")
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!167, !167, !167, !7, !167, !7, !3301}
!6559 = distinct !DISubprogram(name: "rdbGenericLoadStringObject", scope: !3, file: !3, line: 3919, type: !6560, scopeLine: 3919, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6562)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!145, !580, !45}
!6562 = !{!6563, !6564, !6565, !6566, !6567}
!6563 = !DILocalVariable(name: "fp", arg: 1, scope: !6559, file: !3, line: 3919, type: !580)
!6564 = !DILocalVariable(name: "encode", arg: 2, scope: !6559, file: !3, line: 3919, type: !45)
!6565 = !DILocalVariable(name: "isencoded", scope: !6559, file: !3, line: 3920, type: !45)
!6566 = !DILocalVariable(name: "len", scope: !6559, file: !3, line: 3921, type: !2322)
!6567 = !DILocalVariable(name: "val", scope: !6559, file: !3, line: 3922, type: !165)
!6568 = !DILocation(line: 0, scope: !6559)
!6569 = !DILocation(line: 3920, column: 5, scope: !6559)
!6570 = !DILocation(line: 3924, column: 11, scope: !6559)
!6571 = !DILocation(line: 3925, column: 9, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 3925, column: 9)
!6573 = !DILocation(line: 3925, column: 9, scope: !6559)
!6574 = !DILocation(line: 3926, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 3925, column: 20)
!6576 = !DILocation(line: 3930, column: 20, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 3926, column: 21)
!6578 = !DILocation(line: 3930, column: 13, scope: !6577)
!6579 = !DILocation(line: 3932, column: 20, scope: !6577)
!6580 = !DILocation(line: 3932, column: 13, scope: !6577)
!6581 = !DILocation(line: 3934, column: 13, scope: !6577)
!6582 = !DILocation(line: 3938, column: 13, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 3938, column: 9)
!6584 = !DILocation(line: 3938, column: 9, scope: !6559)
!6585 = !DILocation(line: 3939, column: 26, scope: !6559)
!6586 = !DILocation(line: 3939, column: 11, scope: !6559)
!6587 = !DILocation(line: 3940, column: 9, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 3940, column: 9)
!6589 = !DILocation(line: 3940, column: 13, scope: !6588)
!6590 = !DILocation(line: 3940, column: 16, scope: !6588)
!6591 = !DILocation(line: 3940, column: 36, scope: !6588)
!6592 = !DILocation(line: 3940, column: 9, scope: !6559)
!6593 = !DILocation(line: 3941, column: 9, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 3940, column: 42)
!6595 = !DILocation(line: 3942, column: 9, scope: !6594)
!6596 = !DILocation(line: 3944, column: 12, scope: !6559)
!6597 = !DILocation(line: 3944, column: 5, scope: !6559)
!6598 = !DILocation(line: 3945, column: 1, scope: !6559)
!6599 = distinct !DISubprogram(name: "rdbLoadIntegerObject", scope: !3, file: !3, line: 3873, type: !6600, scopeLine: 3873, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6602)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!145, !580, !45, !45}
!6602 = !{!6603, !6604, !6605, !6606, !6608, !6609, !6614}
!6603 = !DILocalVariable(name: "fp", arg: 1, scope: !6599, file: !3, line: 3873, type: !580)
!6604 = !DILocalVariable(name: "enctype", arg: 2, scope: !6599, file: !3, line: 3873, type: !45)
!6605 = !DILocalVariable(name: "encode", arg: 3, scope: !6599, file: !3, line: 3873, type: !45)
!6606 = !DILocalVariable(name: "enc", scope: !6599, file: !3, line: 3874, type: !6607)
!6607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 32, elements: !252)
!6608 = !DILocalVariable(name: "val", scope: !6599, file: !3, line: 3875, type: !54)
!6609 = !DILocalVariable(name: "v", scope: !6610, file: !3, line: 3881, type: !6613)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 3880, column: 48)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 3880, column: 16)
!6612 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 3877, column: 9)
!6613 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !2323, line: 25, baseType: !236)
!6614 = !DILocalVariable(name: "v", scope: !6615, file: !3, line: 3886, type: !2322)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 3885, column: 48)
!6616 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 3885, column: 16)
!6617 = !DILocation(line: 0, scope: !6599)
!6618 = !DILocation(line: 3874, column: 5, scope: !6599)
!6619 = !DILocation(line: 3874, column: 19, scope: !6599)
!6620 = !DILocation(line: 3877, column: 9, scope: !6599)
!6621 = !DILocation(line: 3878, column: 13, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 3878, column: 13)
!6623 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 3877, column: 40)
!6624 = !DILocation(line: 3878, column: 31, scope: !6622)
!6625 = !DILocation(line: 3878, column: 13, scope: !6623)
!6626 = !DILocation(line: 3879, column: 28, scope: !6623)
!6627 = !DILocation(line: 3879, column: 15, scope: !6623)
!6628 = !DILocation(line: 3880, column: 5, scope: !6623)
!6629 = !DILocation(line: 3882, column: 13, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3882, column: 13)
!6631 = !DILocation(line: 3882, column: 31, scope: !6630)
!6632 = !DILocation(line: 3882, column: 13, scope: !6610)
!6633 = !DILocation(line: 3883, column: 13, scope: !6610)
!6634 = !DILocation(line: 3883, column: 21, scope: !6610)
!6635 = !DILocation(line: 3883, column: 27, scope: !6610)
!6636 = !DILocation(line: 3883, column: 19, scope: !6610)
!6637 = !DILocation(line: 0, scope: !6610)
!6638 = !DILocation(line: 3884, column: 15, scope: !6610)
!6639 = !DILocation(line: 3887, column: 13, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 3887, column: 13)
!6641 = !DILocation(line: 3887, column: 31, scope: !6640)
!6642 = !DILocation(line: 3887, column: 13, scope: !6615)
!6643 = !DILocation(line: 3888, column: 13, scope: !6615)
!6644 = !DILocation(line: 3888, column: 21, scope: !6615)
!6645 = !DILocation(line: 3888, column: 27, scope: !6615)
!6646 = !DILocation(line: 3888, column: 19, scope: !6615)
!6647 = !DILocation(line: 3888, column: 33, scope: !6615)
!6648 = !DILocation(line: 3888, column: 39, scope: !6615)
!6649 = !DILocation(line: 3888, column: 31, scope: !6615)
!6650 = !DILocation(line: 3888, column: 46, scope: !6615)
!6651 = !DILocation(line: 3888, column: 52, scope: !6615)
!6652 = !DILocation(line: 3888, column: 44, scope: !6615)
!6653 = !DILocation(line: 0, scope: !6615)
!6654 = !DILocation(line: 3889, column: 15, scope: !6615)
!6655 = !DILocation(line: 3892, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 3890, column: 12)
!6657 = !DILocation(line: 3894, column: 9, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 3894, column: 9)
!6659 = !DILocation(line: 3894, column: 9, scope: !6599)
!6660 = !DILocation(line: 3895, column: 16, scope: !6658)
!6661 = !DILocation(line: 3895, column: 9, scope: !6658)
!6662 = !DILocation(line: 3897, column: 42, scope: !6658)
!6663 = !DILocation(line: 3897, column: 16, scope: !6658)
!6664 = !DILocation(line: 3897, column: 9, scope: !6658)
!6665 = !DILocation(line: 3898, column: 1, scope: !6599)
!6666 = distinct !DISubprogram(name: "rdbLoadLzfStringObject", scope: !3, file: !3, line: 3900, type: !6214, scopeLine: 3900, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6667)
!6667 = !{!6668, !6669, !6670, !6671, !6672, !6673}
!6668 = !DILocalVariable(name: "fp", arg: 1, scope: !6666, file: !3, line: 3900, type: !580)
!6669 = !DILocalVariable(name: "len", scope: !6666, file: !3, line: 3901, type: !7)
!6670 = !DILocalVariable(name: "clen", scope: !6666, file: !3, line: 3901, type: !7)
!6671 = !DILocalVariable(name: "c", scope: !6666, file: !3, line: 3902, type: !167)
!6672 = !DILocalVariable(name: "val", scope: !6666, file: !3, line: 3903, type: !165)
!6673 = !DILabel(scope: !6666, name: "err", file: !3, line: 3913)
!6674 = !DILocation(line: 0, scope: !6666)
!6675 = !DILocation(line: 3905, column: 17, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3905, column: 9)
!6677 = !DILocation(line: 3905, column: 38, scope: !6676)
!6678 = !DILocation(line: 3905, column: 9, scope: !6666)
!6679 = !DILocation(line: 3906, column: 16, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3906, column: 9)
!6681 = !DILocation(line: 3906, column: 37, scope: !6680)
!6682 = !DILocation(line: 3906, column: 9, scope: !6666)
!6683 = !DILocation(line: 3907, column: 22, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3907, column: 9)
!6685 = !DILocation(line: 3907, column: 14, scope: !6684)
!6686 = !DILocation(line: 3907, column: 29, scope: !6684)
!6687 = !DILocation(line: 3907, column: 9, scope: !6666)
!6688 = !DILocation(line: 3908, column: 31, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3908, column: 9)
!6690 = !DILocation(line: 3908, column: 16, scope: !6689)
!6691 = !DILocation(line: 3908, column: 37, scope: !6689)
!6692 = !DILocation(line: 3908, column: 9, scope: !6666)
!6693 = !DILocation(line: 3909, column: 9, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3909, column: 9)
!6695 = !DILocation(line: 3909, column: 28, scope: !6694)
!6696 = !DILocation(line: 3909, column: 9, scope: !6666)
!6697 = !DILocation(line: 3910, column: 9, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3910, column: 9)
!6699 = !DILocation(line: 3910, column: 40, scope: !6698)
!6700 = !DILocation(line: 3910, column: 9, scope: !6666)
!6701 = !DILocation(line: 3911, column: 5, scope: !6666)
!6702 = !DILocation(line: 3912, column: 12, scope: !6666)
!6703 = !DILocation(line: 3912, column: 5, scope: !6666)
!6704 = !DILocation(line: 3913, column: 1, scope: !6666)
!6705 = !DILocation(line: 3914, column: 5, scope: !6666)
!6706 = !DILocation(line: 3915, column: 5, scope: !6666)
!6707 = !DILocation(line: 3916, column: 5, scope: !6666)
!6708 = !DILocation(line: 3917, column: 1, scope: !6666)
!6709 = distinct !DISubprogram(name: "createStringObjectFromLongLong", scope: !3, file: !3, line: 2933, type: !6710, scopeLine: 2933, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6712)
!6710 = !DISubroutineType(types: !6711)
!6711 = !{!145, !54}
!6712 = !{!6713, !6714}
!6713 = !DILocalVariable(name: "value", arg: 1, scope: !6709, file: !3, line: 2933, type: !54)
!6714 = !DILocalVariable(name: "o", scope: !6709, file: !3, line: 2934, type: !145)
!6715 = !DILocation(line: 0, scope: !6709)
!6716 = !DILocation(line: 2935, column: 20, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 2935, column: 9)
!6718 = !DILocation(line: 2936, column: 23, scope: !6717)
!6719 = !DILocation(line: 2936, column: 45, scope: !6717)
!6720 = !DILocation(line: 2936, column: 9, scope: !6717)
!6721 = !DILocation(line: 2935, column: 9, scope: !6709)
!6722 = !DILocation(line: 2937, column: 22, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 2936, column: 58)
!6724 = !DILocation(line: 2937, column: 9, scope: !6723)
!6725 = !DILocation(line: 2938, column: 13, scope: !6723)
!6726 = !DILocation(line: 2939, column: 5, scope: !6723)
!6727 = !DILocation(line: 2941, column: 17, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2940, column: 53)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2940, column: 13)
!6730 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 2939, column: 12)
!6731 = !DILocation(line: 2942, column: 16, scope: !6728)
!6732 = !DILocation(line: 2942, column: 25, scope: !6728)
!6733 = !DILocation(line: 2943, column: 22, scope: !6728)
!6734 = !DILocation(line: 2943, column: 16, scope: !6728)
!6735 = !DILocation(line: 2943, column: 20, scope: !6728)
!6736 = !DILocation(line: 2944, column: 9, scope: !6728)
!6737 = !DILocation(line: 0, scope: !6717)
!6738 = !DILocation(line: 2948, column: 5, scope: !6709)
!6739 = !DISubprogram(name: "sdsfromlonglong", scope: !166, file: !166, line: 71, type: !6740, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{!165, !54}
!6742 = !DISubprogram(name: "lzf_decompress", scope: !6743, file: !6743, line: 96, type: !6744, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6743 = !DIFile(filename: "./lzf.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "de5d5515a292d52007c7ca62ff7a90e0")
!6744 = !DISubroutineType(types: !6745)
!6745 = !{!7, !6746, !7, !46, !7}
!6746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !100)
!6747 = distinct !DISubprogram(name: "__bswap_32", scope: !6748, file: !6748, line: 49, type: !6749, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6751)
!6748 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/byteswap.h", directory: "", checksumkind: CSK_MD5, checksum: "552c402ec2d372531713984b317e0c35")
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!244, !244}
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "__bsx", arg: 1, scope: !6747, file: !6748, line: 49, type: !244)
!6753 = !DILocation(line: 0, scope: !6747)
!6754 = !DILocation(line: 54, column: 10, scope: !6747)
!6755 = !DILocation(line: 54, column: 3, scope: !6747)
!6756 = !DISubprogram(name: "dictCreate", scope: !88, file: !88, line: 124, type: !6757, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{!86, !92, !46}
!6759 = distinct !DISubprogram(name: "dictEncObjHash", scope: !3, file: !3, line: 1151, type: !98, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6760)
!6760 = !{!6761, !6762, !6763, !6768, !6769}
!6761 = !DILocalVariable(name: "key", arg: 1, scope: !6759, file: !3, line: 1151, type: !100)
!6762 = !DILocalVariable(name: "o", scope: !6759, file: !3, line: 1152, type: !145)
!6763 = !DILocalVariable(name: "buf", scope: !6764, file: !3, line: 1158, type: !4256)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1157, column: 48)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 1157, column: 13)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1156, column: 12)
!6767 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 1154, column: 9)
!6768 = !DILocalVariable(name: "len", scope: !6764, file: !3, line: 1159, type: !45)
!6769 = !DILocalVariable(name: "hash", scope: !6770, file: !3, line: 1164, type: !7)
!6770 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1163, column: 16)
!6771 = !DILocation(line: 0, scope: !6759)
!6772 = !DILocation(line: 1154, column: 12, scope: !6767)
!6773 = !DILocation(line: 1154, column: 9, scope: !6759)
!6774 = !DILocation(line: 1155, column: 39, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1154, column: 44)
!6776 = !DILocation(line: 1155, column: 44, scope: !6775)
!6777 = !DILocation(line: 1155, column: 16, scope: !6775)
!6778 = !DILocation(line: 1155, column: 9, scope: !6775)
!6779 = !DILocation(line: 1158, column: 13, scope: !6764)
!6780 = !DILocation(line: 1158, column: 18, scope: !6764)
!6781 = !DILocation(line: 1161, column: 45, scope: !6764)
!6782 = !DILocation(line: 1161, column: 36, scope: !6764)
!6783 = !DILocation(line: 1161, column: 19, scope: !6764)
!6784 = !DILocation(line: 0, scope: !6764)
!6785 = !DILocation(line: 1162, column: 20, scope: !6764)
!6786 = !DILocation(line: 1163, column: 9, scope: !6765)
!6787 = !DILocation(line: 1152, column: 15, scope: !6759)
!6788 = !DILocation(line: 1166, column: 17, scope: !6770)
!6789 = !DILocation(line: 1167, column: 43, scope: !6770)
!6790 = !DILocation(line: 1167, column: 48, scope: !6770)
!6791 = !DILocation(line: 1167, column: 20, scope: !6770)
!6792 = !DILocation(line: 0, scope: !6770)
!6793 = !DILocation(line: 1168, column: 26, scope: !6770)
!6794 = !DILocation(line: 1168, column: 13, scope: !6770)
!6795 = !DILocation(line: 0, scope: !6767)
!6796 = !DILocation(line: 1172, column: 1, scope: !6759)
!6797 = distinct !DISubprogram(name: "dictEncObjKeyCompare", scope: !3, file: !3, line: 1133, type: !109, scopeLine: 1135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6798)
!6798 = !{!6799, !6800, !6801, !6802, !6803, !6804}
!6799 = !DILocalVariable(name: "privdata", arg: 1, scope: !6797, file: !3, line: 1133, type: !46)
!6800 = !DILocalVariable(name: "key1", arg: 2, scope: !6797, file: !3, line: 1133, type: !100)
!6801 = !DILocalVariable(name: "key2", arg: 3, scope: !6797, file: !3, line: 1134, type: !100)
!6802 = !DILocalVariable(name: "o1", scope: !6797, file: !3, line: 1136, type: !145)
!6803 = !DILocalVariable(name: "o2", scope: !6797, file: !3, line: 1136, type: !145)
!6804 = !DILocalVariable(name: "cmp", scope: !6797, file: !3, line: 1137, type: !45)
!6805 = !DILocation(line: 0, scope: !6797)
!6806 = !DILocation(line: 1136, column: 16, scope: !6797)
!6807 = !DILocation(line: 1136, column: 36, scope: !6797)
!6808 = !DILocation(line: 1139, column: 13, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1139, column: 9)
!6810 = !DILocation(line: 1139, column: 22, scope: !6809)
!6811 = !DILocation(line: 1139, column: 44, scope: !6809)
!6812 = !DILocation(line: 1140, column: 13, scope: !6809)
!6813 = !DILocation(line: 1140, column: 22, scope: !6809)
!6814 = !DILocation(line: 1139, column: 9, scope: !6797)
!6815 = !DILocation(line: 1141, column: 24, scope: !6809)
!6816 = !DILocation(line: 1141, column: 35, scope: !6809)
!6817 = !DILocation(line: 1141, column: 28, scope: !6809)
!6818 = !DILocation(line: 1141, column: 13, scope: !6809)
!6819 = !DILocation(line: 1143, column: 10, scope: !6797)
!6820 = !DILocation(line: 1144, column: 10, scope: !6797)
!6821 = !DILocation(line: 1145, column: 42, scope: !6797)
!6822 = !DILocation(line: 1145, column: 50, scope: !6797)
!6823 = !DILocation(line: 1145, column: 11, scope: !6797)
!6824 = !DILocation(line: 1146, column: 18, scope: !6797)
!6825 = !DILocation(line: 1146, column: 5, scope: !6797)
!6826 = !DILocation(line: 1147, column: 18, scope: !6797)
!6827 = !DILocation(line: 1147, column: 5, scope: !6797)
!6828 = !DILocation(line: 1148, column: 5, scope: !6797)
!6829 = !DILocation(line: 1149, column: 1, scope: !6797)
!6830 = distinct !DISubprogram(name: "dictRedisObjectDestructor", scope: !3, file: !3, line: 1113, type: !113, scopeLine: 1114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6831)
!6831 = !{!6832, !6833}
!6832 = !DILocalVariable(name: "privdata", arg: 1, scope: !6830, file: !3, line: 1113, type: !46)
!6833 = !DILocalVariable(name: "val", arg: 2, scope: !6830, file: !3, line: 1113, type: !46)
!6834 = !DILocation(line: 0, scope: !6830)
!6835 = !DILocation(line: 1117, column: 13, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 1117, column: 9)
!6837 = !DILocation(line: 1117, column: 9, scope: !6830)
!6838 = !DILocation(line: 1118, column: 5, scope: !6830)
!6839 = !DILocation(line: 1119, column: 1, scope: !6830)
!6840 = !DISubprogram(name: "dictGenHashFunction", scope: !88, file: !88, line: 139, type: !6841, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!7, !6843, !45}
!6843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6844, size: 64)
!6844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!6845 = distinct !DISubprogram(name: "sdsDictKeyCompare", scope: !3, file: !3, line: 1101, type: !109, scopeLine: 1103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6846)
!6846 = !{!6847, !6848, !6849, !6850, !6851}
!6847 = !DILocalVariable(name: "privdata", arg: 1, scope: !6845, file: !3, line: 1101, type: !46)
!6848 = !DILocalVariable(name: "key1", arg: 2, scope: !6845, file: !3, line: 1101, type: !100)
!6849 = !DILocalVariable(name: "key2", arg: 3, scope: !6845, file: !3, line: 1102, type: !100)
!6850 = !DILocalVariable(name: "l1", scope: !6845, file: !3, line: 1104, type: !45)
!6851 = !DILocalVariable(name: "l2", scope: !6845, file: !3, line: 1104, type: !45)
!6852 = !DILocation(line: 0, scope: !6845)
!6853 = !DILocation(line: 1107, column: 10, scope: !6845)
!6854 = !DILocation(line: 1108, column: 10, scope: !6845)
!6855 = !DILocation(line: 1109, column: 12, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 1109, column: 9)
!6857 = !DILocation(line: 1109, column: 9, scope: !6845)
!6858 = !DILocation(line: 1110, column: 31, scope: !6845)
!6859 = !DILocation(line: 1110, column: 12, scope: !6845)
!6860 = !DILocation(line: 1110, column: 35, scope: !6845)
!6861 = !DILocation(line: 1110, column: 5, scope: !6845)
!6862 = !DILocation(line: 1111, column: 1, scope: !6845)
!6863 = !DISubprogram(name: "memcmp", scope: !1082, file: !1082, line: 64, type: !6864, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!45, !100, !100, !196}
!6866 = distinct !DISubprogram(name: "zslCreate", scope: !3, file: !3, line: 5454, type: !6867, scopeLine: 5454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6869)
!6867 = !DISubroutineType(types: !6868)
!6868 = !{!177}
!6869 = !{!6870, !6871}
!6870 = !DILocalVariable(name: "j", scope: !6866, file: !3, line: 5455, type: !45)
!6871 = !DILocalVariable(name: "zsl", scope: !6866, file: !3, line: 5456, type: !177)
!6872 = !DILocation(line: 5458, column: 11, scope: !6866)
!6873 = !DILocation(line: 0, scope: !6866)
!6874 = !DILocation(line: 5459, column: 10, scope: !6866)
!6875 = !DILocation(line: 5459, column: 16, scope: !6866)
!6876 = !DILocation(line: 5460, column: 10, scope: !6866)
!6877 = !DILocation(line: 5460, column: 17, scope: !6866)
!6878 = !DILocation(line: 5461, column: 19, scope: !6866)
!6879 = !DILocation(line: 5461, column: 10, scope: !6866)
!6880 = !DILocation(line: 5461, column: 17, scope: !6866)
!6881 = !DILocation(line: 5463, column: 22, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 5462, column: 46)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 5462, column: 5)
!6884 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 5462, column: 5)
!6885 = !DILocation(line: 5463, column: 33, scope: !6882)
!6886 = !DILocation(line: 5466, column: 13, scope: !6882)
!6887 = !DILocation(line: 5467, column: 18, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 5466, column: 13)
!6889 = !DILocation(line: 5467, column: 26, scope: !6888)
!6890 = !DILocation(line: 5467, column: 13, scope: !6888)
!6891 = !DILocation(line: 5467, column: 34, scope: !6888)
!6892 = !DILocation(line: 5462, column: 42, scope: !6883)
!6893 = !DILocation(line: 5463, column: 9, scope: !6882)
!6894 = !DILocation(line: 5466, column: 15, scope: !6888)
!6895 = !DILocation(line: 5469, column: 10, scope: !6866)
!6896 = !DILocation(line: 5469, column: 18, scope: !6866)
!6897 = !DILocation(line: 5469, column: 27, scope: !6866)
!6898 = !DILocation(line: 5470, column: 10, scope: !6866)
!6899 = !DILocation(line: 5470, column: 15, scope: !6866)
!6900 = !{!1134, !714, i64 8}
!6901 = !DILocation(line: 5471, column: 5, scope: !6866)
!6902 = distinct !DISubprogram(name: "dictVanillaFree", scope: !3, file: !3, line: 1089, type: !113, scopeLine: 1090, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6903)
!6903 = !{!6904, !6905}
!6904 = !DILocalVariable(name: "privdata", arg: 1, scope: !6902, file: !3, line: 1089, type: !46)
!6905 = !DILocalVariable(name: "val", arg: 2, scope: !6902, file: !3, line: 1089, type: !46)
!6906 = !DILocation(line: 0, scope: !6902)
!6907 = !DILocation(line: 1092, column: 5, scope: !6902)
!6908 = !DILocation(line: 1093, column: 1, scope: !6902)
!6909 = distinct !DISubprogram(name: "zslCreateNode", scope: !3, file: !3, line: 5441, type: !6910, scopeLine: 5441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6912)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{!1121, !45, !168, !145}
!6912 = !{!6913, !6914, !6915, !6916}
!6913 = !DILocalVariable(name: "level", arg: 1, scope: !6909, file: !3, line: 5441, type: !45)
!6914 = !DILocalVariable(name: "score", arg: 2, scope: !6909, file: !3, line: 5441, type: !168)
!6915 = !DILocalVariable(name: "obj", arg: 3, scope: !6909, file: !3, line: 5441, type: !145)
!6916 = !DILocalVariable(name: "zn", scope: !6909, file: !3, line: 5442, type: !1121)
!6917 = !DILocation(line: 0, scope: !6909)
!6918 = !DILocation(line: 5442, column: 25, scope: !6909)
!6919 = !DILocation(line: 5444, column: 52, scope: !6909)
!6920 = !DILocation(line: 5444, column: 50, scope: !6909)
!6921 = !DILocation(line: 5444, column: 19, scope: !6909)
!6922 = !DILocation(line: 5444, column: 17, scope: !6909)
!6923 = !DILocation(line: 5445, column: 15, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 5445, column: 9)
!6925 = !DILocation(line: 5445, column: 9, scope: !6909)
!6926 = !DILocation(line: 5446, column: 58, scope: !6924)
!6927 = !DILocation(line: 5446, column: 49, scope: !6924)
!6928 = !DILocation(line: 5446, column: 20, scope: !6924)
!6929 = !DILocation(line: 5446, column: 13, scope: !6924)
!6930 = !DILocation(line: 5446, column: 18, scope: !6924)
!6931 = !DILocation(line: 5446, column: 9, scope: !6924)
!6932 = !DILocation(line: 5448, column: 13, scope: !6924)
!6933 = !DILocation(line: 5448, column: 18, scope: !6924)
!6934 = !DILocation(line: 5449, column: 9, scope: !6909)
!6935 = !DILocation(line: 5449, column: 15, scope: !6909)
!6936 = !DILocation(line: 5450, column: 9, scope: !6909)
!6937 = !DILocation(line: 5450, column: 13, scope: !6909)
!6938 = !DILocation(line: 5451, column: 5, scope: !6909)
!6939 = !DISubprogram(name: "sscanf", linkageName: "__isoc99_sscanf", scope: !161, file: !161, line: 412, type: !6940, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!45, !1076, !1076, null}
!6942 = distinct !DISubprogram(name: "compareStringObjects", scope: !3, file: !3, line: 3236, type: !6943, scopeLine: 3236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6945)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!45, !145, !145}
!6945 = !{!6946, !6947, !6948, !6949, !6950, !6951, !6952}
!6946 = !DILocalVariable(name: "a", arg: 1, scope: !6942, file: !3, line: 3236, type: !145)
!6947 = !DILocalVariable(name: "b", arg: 2, scope: !6942, file: !3, line: 3236, type: !145)
!6948 = !DILocalVariable(name: "bufa", scope: !6942, file: !3, line: 3238, type: !1247)
!6949 = !DILocalVariable(name: "bufb", scope: !6942, file: !3, line: 3238, type: !1247)
!6950 = !DILocalVariable(name: "astr", scope: !6942, file: !3, line: 3238, type: !47)
!6951 = !DILocalVariable(name: "bstr", scope: !6942, file: !3, line: 3238, type: !47)
!6952 = !DILocalVariable(name: "bothsds", scope: !6942, file: !3, line: 3239, type: !45)
!6953 = !DILocation(line: 0, scope: !6942)
!6954 = !DILocation(line: 3237, column: 5, scope: !6942)
!6955 = !DILocation(line: 3238, column: 5, scope: !6942)
!6956 = !DILocation(line: 3238, column: 10, scope: !6942)
!6957 = !DILocation(line: 3238, column: 21, scope: !6942)
!6958 = !DILocation(line: 3241, column: 11, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3241, column: 9)
!6960 = !DILocation(line: 3241, column: 9, scope: !6942)
!6961 = !DILocation(line: 3242, column: 12, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3242, column: 9)
!6963 = !DILocation(line: 3242, column: 21, scope: !6962)
!6964 = !DILocation(line: 0, scope: !6962)
!6965 = !DILocation(line: 3242, column: 9, scope: !6942)
!6966 = !DILocation(line: 3243, column: 37, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 3242, column: 44)
!6968 = !DILocation(line: 3243, column: 9, scope: !6967)
!6969 = !DILocation(line: 3249, column: 12, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3249, column: 9)
!6971 = !DILocation(line: 3249, column: 21, scope: !6970)
!6972 = !DILocation(line: 3249, column: 9, scope: !6942)
!6973 = !DILocation(line: 3250, column: 47, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 3249, column: 44)
!6975 = !DILocation(line: 3250, column: 37, scope: !6974)
!6976 = !DILocation(line: 3250, column: 9, scope: !6974)
!6977 = !DILocation(line: 3256, column: 12, scope: !6942)
!6978 = !DILocation(line: 3254, column: 19, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 3253, column: 12)
!6980 = !DILocation(line: 3256, column: 22, scope: !6942)
!6981 = !DILocation(line: 3256, column: 42, scope: !6942)
!6982 = !DILocation(line: 3257, column: 1, scope: !6942)
!6983 = distinct !DISubprogram(name: "zslRandomLevel", scope: !3, file: !3, line: 5495, type: !1709, scopeLine: 5495, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6984)
!6984 = !{!6985}
!6985 = !DILocalVariable(name: "level", scope: !6983, file: !3, line: 5496, type: !45)
!6986 = !DILocation(line: 0, scope: !6983)
!6987 = !DILocation(line: 5497, column: 5, scope: !6983)
!6988 = !DILocation(line: 5497, column: 13, scope: !6983)
!6989 = !DILocation(line: 5497, column: 21, scope: !6983)
!6990 = !DILocation(line: 5497, column: 30, scope: !6983)
!6991 = !DILocation(line: 5498, column: 15, scope: !6983)
!6992 = distinct !{!6992, !6987, !6993}
!6993 = !DILocation(line: 5498, column: 18, scope: !6983)
!6994 = !DILocation(line: 5499, column: 18, scope: !6983)
!6995 = !DILocation(line: 5499, column: 12, scope: !6983)
!6996 = !DILocation(line: 5499, column: 5, scope: !6983)
!6997 = !DISubprogram(name: "sdscmp", scope: !166, file: !166, line: 66, type: !6998, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{!45, !165, !165}
!7000 = !DISubprogram(name: "random", scope: !1432, file: !1432, line: 401, type: !7001, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7001 = !DISubroutineType(types: !7002)
!7002 = !{!53}
!7003 = !DISubprogram(name: "zipmapNew", scope: !6556, file: !6556, line: 38, type: !7004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!167}
!7006 = !DISubprogram(name: "zipmapRewind", scope: !6556, file: !6556, line: 41, type: !7007, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{!167, !167}
!7009 = !DISubprogram(name: "zipmapNext", scope: !6556, file: !6556, line: 42, type: !7010, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{!167, !167, !7012, !189, !7012, !189}
!7012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!7013 = distinct !DISubprogram(name: "rdbSavedObjectLen", scope: !3, file: !3, line: 3675, type: !5977, scopeLine: 3675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7014)
!7014 = !{!7015, !7016}
!7015 = !DILocalVariable(name: "o", arg: 1, scope: !7013, file: !3, line: 3675, type: !145)
!7016 = !DILocalVariable(name: "fp", arg: 2, scope: !7013, file: !3, line: 3675, type: !580)
!7017 = !DILocation(line: 0, scope: !7013)
!7018 = !DILocation(line: 3676, column: 12, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 3676, column: 9)
!7020 = !DILocation(line: 3676, column: 9, scope: !7013)
!7021 = !DILocation(line: 3677, column: 5, scope: !7013)
!7022 = !DILocation(line: 3678, column: 5, scope: !7013)
!7023 = !DILocation(line: 3679, column: 12, scope: !7013)
!7024 = !DILocation(line: 3679, column: 5, scope: !7013)
!7025 = !DISubprogram(name: "rewind", scope: !161, file: !161, line: 694, type: !7026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{null, !580}
!7028 = distinct !DISubprogram(name: "rdbSaveObject", scope: !3, file: !3, line: 3593, type: !7029, scopeLine: 3593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7031)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!45, !580, !145}
!7031 = !{!7032, !7033, !7034, !7038, !7039, !7040, !7042, !7045, !7046, !7047, !7049, !7052, !7053, !7054, !7056, !7057, !7062, !7063, !7064, !7065, !7066, !7067, !7069, !7070, !7072}
!7032 = !DILocalVariable(name: "fp", arg: 1, scope: !7028, file: !3, line: 3593, type: !580)
!7033 = !DILocalVariable(name: "o", arg: 2, scope: !7028, file: !3, line: 3593, type: !145)
!7034 = !DILocalVariable(name: "list", scope: !7035, file: !3, line: 3599, type: !58)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 3597, column: 39)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 3597, column: 16)
!7037 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 3594, column: 9)
!7038 = !DILocalVariable(name: "li", scope: !7035, file: !3, line: 3600, type: !831)
!7039 = !DILocalVariable(name: "ln", scope: !7035, file: !3, line: 3601, type: !64)
!7040 = !DILocalVariable(name: "eleobj", scope: !7041, file: !3, line: 3606, type: !145)
!7041 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 3605, column: 37)
!7042 = !DILocalVariable(name: "set", scope: !7043, file: !3, line: 3612, type: !86)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 3610, column: 38)
!7044 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 3610, column: 16)
!7045 = !DILocalVariable(name: "di", scope: !7043, file: !3, line: 3613, type: !2938)
!7046 = !DILocalVariable(name: "de", scope: !7043, file: !3, line: 3614, type: !124)
!7047 = !DILocalVariable(name: "eleobj", scope: !7048, file: !3, line: 3618, type: !145)
!7048 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 3617, column: 44)
!7049 = !DILocalVariable(name: "zs", scope: !7050, file: !3, line: 3625, type: !171)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 3623, column: 39)
!7051 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 3623, column: 16)
!7052 = !DILocalVariable(name: "di", scope: !7050, file: !3, line: 3626, type: !2938)
!7053 = !DILocalVariable(name: "de", scope: !7050, file: !3, line: 3627, type: !124)
!7054 = !DILocalVariable(name: "eleobj", scope: !7055, file: !3, line: 3631, type: !145)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 3630, column: 44)
!7056 = !DILocalVariable(name: "score", scope: !7055, file: !3, line: 3632, type: !198)
!7057 = !DILocalVariable(name: "p", scope: !7058, file: !3, line: 3641, type: !167)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3640, column: 51)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3640, column: 13)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 3638, column: 39)
!7061 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 3638, column: 16)
!7062 = !DILocalVariable(name: "count", scope: !7058, file: !3, line: 3642, type: !7)
!7063 = !DILocalVariable(name: "key", scope: !7058, file: !3, line: 3643, type: !167)
!7064 = !DILocalVariable(name: "val", scope: !7058, file: !3, line: 3643, type: !167)
!7065 = !DILocalVariable(name: "klen", scope: !7058, file: !3, line: 3644, type: !7)
!7066 = !DILocalVariable(name: "vlen", scope: !7058, file: !3, line: 3644, type: !7)
!7067 = !DILocalVariable(name: "di", scope: !7068, file: !3, line: 3652, type: !2938)
!7068 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3651, column: 16)
!7069 = !DILocalVariable(name: "de", scope: !7068, file: !3, line: 3653, type: !124)
!7070 = !DILocalVariable(name: "key", scope: !7071, file: !3, line: 3657, type: !145)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3656, column: 48)
!7072 = !DILocalVariable(name: "val", scope: !7071, file: !3, line: 3658, type: !145)
!7073 = !DILocation(line: 0, scope: !7028)
!7074 = !DILocation(line: 3594, column: 12, scope: !7037)
!7075 = !DILocation(line: 3594, column: 9, scope: !7028)
!7076 = !DILocation(line: 3596, column: 13, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3596, column: 13)
!7078 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 3594, column: 34)
!7079 = !DILocation(line: 3596, column: 39, scope: !7077)
!7080 = !DILocation(line: 3596, column: 13, scope: !7078)
!7081 = !DILocation(line: 3599, column: 25, scope: !7035)
!7082 = !DILocation(line: 0, scope: !7035)
!7083 = !DILocation(line: 3600, column: 9, scope: !7035)
!7084 = !DILocation(line: 3600, column: 18, scope: !7035)
!7085 = !DILocation(line: 3603, column: 27, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 3603, column: 13)
!7087 = !DILocation(line: 3603, column: 13, scope: !7086)
!7088 = !DILocation(line: 3603, column: 45, scope: !7086)
!7089 = !DILocation(line: 3603, column: 13, scope: !7035)
!7090 = !DILocation(line: 3604, column: 9, scope: !7035)
!7091 = !DILocation(line: 3605, column: 9, scope: !7035)
!7092 = !DILocation(line: 3605, column: 21, scope: !7035)
!7093 = !DILocation(line: 3606, column: 28, scope: !7041)
!7094 = !DILocation(line: 0, scope: !7041)
!7095 = !DILocation(line: 3608, column: 17, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 3608, column: 17)
!7097 = !DILocation(line: 3608, column: 48, scope: !7096)
!7098 = distinct !{!7098, !7091, !7099}
!7099 = !DILocation(line: 3609, column: 9, scope: !7035)
!7100 = !DILocation(line: 3610, column: 5, scope: !7036)
!7101 = !DILocation(line: 3612, column: 24, scope: !7043)
!7102 = !DILocation(line: 0, scope: !7043)
!7103 = !DILocation(line: 3613, column: 28, scope: !7043)
!7104 = !DILocation(line: 3616, column: 27, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 3616, column: 13)
!7106 = !DILocation(line: 3616, column: 13, scope: !7105)
!7107 = !DILocation(line: 3616, column: 42, scope: !7105)
!7108 = !DILocation(line: 3616, column: 13, scope: !7043)
!7109 = !DILocation(line: 3617, column: 21, scope: !7043)
!7110 = !DILocation(line: 3617, column: 35, scope: !7043)
!7111 = !DILocation(line: 3617, column: 9, scope: !7043)
!7112 = !DILocation(line: 3618, column: 28, scope: !7048)
!7113 = !DILocation(line: 0, scope: !7048)
!7114 = !DILocation(line: 3620, column: 17, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 3620, column: 17)
!7116 = !DILocation(line: 3620, column: 48, scope: !7115)
!7117 = distinct !{!7117, !7111, !7118}
!7118 = !DILocation(line: 3621, column: 9, scope: !7043)
!7119 = !DILocation(line: 3622, column: 9, scope: !7043)
!7120 = !DILocation(line: 3625, column: 23, scope: !7050)
!7121 = !DILocation(line: 0, scope: !7050)
!7122 = !DILocation(line: 3626, column: 48, scope: !7050)
!7123 = !DILocation(line: 3626, column: 28, scope: !7050)
!7124 = !DILocation(line: 3629, column: 27, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 3629, column: 13)
!7126 = !DILocation(line: 3629, column: 13, scope: !7125)
!7127 = !DILocation(line: 3629, column: 47, scope: !7125)
!7128 = !DILocation(line: 3629, column: 13, scope: !7050)
!7129 = !DILocation(line: 3630, column: 21, scope: !7050)
!7130 = !DILocation(line: 3630, column: 35, scope: !7050)
!7131 = !DILocation(line: 3630, column: 9, scope: !7050)
!7132 = !DILocation(line: 3631, column: 28, scope: !7055)
!7133 = !DILocation(line: 0, scope: !7055)
!7134 = !DILocation(line: 3632, column: 29, scope: !7055)
!7135 = !DILocation(line: 3634, column: 17, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 3634, column: 17)
!7137 = !DILocation(line: 3634, column: 48, scope: !7136)
!7138 = !DILocation(line: 3634, column: 17, scope: !7055)
!7139 = !DILocation(line: 3635, column: 39, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 3635, column: 17)
!7141 = !DILocation(line: 3635, column: 17, scope: !7140)
!7142 = !DILocation(line: 3635, column: 47, scope: !7140)
!7143 = distinct !{!7143, !7131, !7144}
!7144 = !DILocation(line: 3636, column: 9, scope: !7050)
!7145 = !DILocation(line: 3637, column: 9, scope: !7050)
!7146 = !DILocation(line: 3640, column: 16, scope: !7059)
!7147 = !DILocation(line: 3640, column: 25, scope: !7059)
!7148 = !DILocation(line: 3640, column: 13, scope: !7060)
!7149 = !DILocation(line: 3641, column: 48, scope: !7058)
!7150 = !DILocation(line: 3641, column: 32, scope: !7058)
!7151 = !DILocation(line: 0, scope: !7058)
!7152 = !DILocation(line: 3642, column: 47, scope: !7058)
!7153 = !DILocation(line: 3642, column: 34, scope: !7058)
!7154 = !DILocation(line: 3643, column: 13, scope: !7058)
!7155 = !DILocation(line: 3644, column: 13, scope: !7058)
!7156 = !DILocation(line: 3646, column: 17, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 3646, column: 17)
!7158 = !DILocation(line: 3646, column: 38, scope: !7157)
!7159 = !DILocation(line: 3646, column: 17, scope: !7058)
!7160 = !DILocation(line: 3647, column: 24, scope: !7058)
!7161 = !DILocation(line: 3647, column: 61, scope: !7058)
!7162 = !DILocation(line: 3647, column: 13, scope: !7058)
!7163 = !DILocation(line: 3648, column: 41, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3648, column: 21)
!7165 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 3647, column: 70)
!7166 = !DILocation(line: 3648, column: 45, scope: !7164)
!7167 = !DILocation(line: 3648, column: 21, scope: !7164)
!7168 = !DILocation(line: 3648, column: 51, scope: !7164)
!7169 = !DILocation(line: 3648, column: 21, scope: !7165)
!7170 = !DILocation(line: 3649, column: 41, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 3649, column: 21)
!7172 = !DILocation(line: 3649, column: 45, scope: !7171)
!7173 = !DILocation(line: 3649, column: 21, scope: !7171)
!7174 = !DILocation(line: 3649, column: 51, scope: !7171)
!7175 = !DILocation(line: 3649, column: 21, scope: !7165)
!7176 = distinct !{!7176, !7162, !7177}
!7177 = !DILocation(line: 3650, column: 13, scope: !7058)
!7178 = !DILocation(line: 3651, column: 9, scope: !7059)
!7179 = !DILocation(line: 3652, column: 51, scope: !7068)
!7180 = !DILocation(line: 3652, column: 32, scope: !7068)
!7181 = !DILocation(line: 0, scope: !7068)
!7182 = !DILocation(line: 3655, column: 31, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3655, column: 17)
!7184 = !DILocation(line: 3655, column: 17, scope: !7183)
!7185 = !DILocation(line: 3655, column: 56, scope: !7183)
!7186 = !DILocation(line: 3655, column: 17, scope: !7068)
!7187 = !DILocation(line: 3656, column: 25, scope: !7068)
!7188 = !DILocation(line: 3656, column: 39, scope: !7068)
!7189 = !DILocation(line: 3656, column: 13, scope: !7068)
!7190 = !DILocation(line: 3657, column: 29, scope: !7071)
!7191 = !DILocation(line: 0, scope: !7071)
!7192 = !DILocation(line: 3658, column: 29, scope: !7071)
!7193 = !DILocation(line: 3660, column: 21, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 3660, column: 21)
!7195 = !DILocation(line: 3660, column: 49, scope: !7194)
!7196 = !DILocation(line: 3660, column: 21, scope: !7071)
!7197 = !DILocation(line: 3661, column: 21, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 3661, column: 21)
!7199 = !DILocation(line: 3661, column: 49, scope: !7198)
!7200 = distinct !{!7200, !7189, !7201}
!7201 = !DILocation(line: 3662, column: 13, scope: !7068)
!7202 = !DILocation(line: 3663, column: 13, scope: !7068)
!7203 = !DILocation(line: 3666, column: 9, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 3665, column: 12)
!7205 = !DILocation(line: 3668, column: 5, scope: !7028)
!7206 = !DILocation(line: 3669, column: 1, scope: !7028)
!7207 = !DISubprogram(name: "ftello", linkageName: "ftello64", scope: !161, file: !161, line: 718, type: !7208, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!162, !580}
!7210 = distinct !DISubprogram(name: "rdbSaveStringObject", scope: !3, file: !3, line: 3516, type: !7029, scopeLine: 3516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7211)
!7211 = !{!7212, !7213, !7214, !7215, !7218, !7222}
!7212 = !DILocalVariable(name: "fp", arg: 1, scope: !7210, file: !3, line: 3516, type: !580)
!7213 = !DILocalVariable(name: "obj", arg: 2, scope: !7210, file: !3, line: 3516, type: !145)
!7214 = !DILocalVariable(name: "retval", scope: !7210, file: !3, line: 3517, type: !45)
!7215 = !DILocalVariable(name: "val", scope: !7216, file: !3, line: 3522, type: !53)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 3521, column: 46)
!7217 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 3521, column: 9)
!7218 = !DILocalVariable(name: "buf", scope: !7216, file: !3, line: 3523, type: !7219)
!7219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 40, elements: !7220)
!7220 = !{!7221}
!7221 = !DISubrange(count: 5)
!7222 = !DILocalVariable(name: "enclen", scope: !7216, file: !3, line: 3524, type: !45)
!7223 = !DILocation(line: 0, scope: !7210)
!7224 = !DILocation(line: 3521, column: 14, scope: !7217)
!7225 = !DILocation(line: 3521, column: 23, scope: !7217)
!7226 = !DILocation(line: 3521, column: 9, scope: !7210)
!7227 = !DILocation(line: 3522, column: 32, scope: !7216)
!7228 = !DILocation(line: 3522, column: 20, scope: !7216)
!7229 = !DILocation(line: 0, scope: !7216)
!7230 = !DILocation(line: 3523, column: 9, scope: !7216)
!7231 = !DILocation(line: 3523, column: 23, scope: !7216)
!7232 = !DILocation(line: 3526, column: 23, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 3526, column: 13)
!7234 = !DILocation(line: 3526, column: 50, scope: !7233)
!7235 = !DILocation(line: 3526, column: 13, scope: !7216)
!7236 = !DILocation(line: 3532, column: 5, scope: !7217)
!7237 = !DILocation(line: 3539, column: 14, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 3539, column: 9)
!7239 = !DILocation(line: 3527, column: 28, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 3527, column: 17)
!7241 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 3526, column: 55)
!7242 = !DILocation(line: 3527, column: 17, scope: !7240)
!7243 = !DILocation(line: 3527, column: 41, scope: !7240)
!7244 = !DILocation(line: 0, scope: !7241)
!7245 = !DILocation(line: 3539, column: 23, scope: !7238)
!7246 = !DILocation(line: 3539, column: 9, scope: !7210)
!7247 = !DILocation(line: 3540, column: 15, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 3539, column: 46)
!7249 = !DILocation(line: 3541, column: 43, scope: !7248)
!7250 = !DILocation(line: 3541, column: 47, scope: !7248)
!7251 = !DILocation(line: 3541, column: 18, scope: !7248)
!7252 = !DILocation(line: 3542, column: 22, scope: !7248)
!7253 = !DILocation(line: 3542, column: 9, scope: !7248)
!7254 = !DILocation(line: 3543, column: 5, scope: !7248)
!7255 = !DILocation(line: 3544, column: 43, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 3543, column: 12)
!7257 = !DILocation(line: 3544, column: 47, scope: !7256)
!7258 = !DILocation(line: 3544, column: 18, scope: !7256)
!7259 = !DILocation(line: 3547, column: 1, scope: !7210)
!7260 = distinct !DISubprogram(name: "rdbSaveLen", scope: !3, file: !3, line: 3387, type: !7261, scopeLine: 3387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7263)
!7261 = !DISubroutineType(types: !7262)
!7262 = !{!45, !580, !2322}
!7263 = !{!7264, !7265, !7266}
!7264 = !DILocalVariable(name: "fp", arg: 1, scope: !7260, file: !3, line: 3387, type: !580)
!7265 = !DILocalVariable(name: "len", arg: 2, scope: !7260, file: !3, line: 3387, type: !2322)
!7266 = !DILocalVariable(name: "buf", scope: !7260, file: !3, line: 3388, type: !6228)
!7267 = !DILocation(line: 0, scope: !7260)
!7268 = !DILocation(line: 3388, column: 5, scope: !7260)
!7269 = !DILocation(line: 3388, column: 19, scope: !7260)
!7270 = !DILocation(line: 3390, column: 13, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3390, column: 9)
!7272 = !DILocation(line: 3390, column: 9, scope: !7260)
!7273 = !DILocation(line: 3392, column: 18, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 3390, column: 23)
!7275 = !DILocation(line: 3392, column: 16, scope: !7274)
!7276 = !DILocation(line: 3393, column: 13, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3393, column: 13)
!7278 = !DILocation(line: 3393, column: 32, scope: !7277)
!7279 = !DILocation(line: 3393, column: 13, scope: !7274)
!7280 = !DILocation(line: 3394, column: 20, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 3394, column: 16)
!7282 = !DILocation(line: 3394, column: 16, scope: !7271)
!7283 = !DILocation(line: 3396, column: 23, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3394, column: 31)
!7285 = !DILocation(line: 3396, column: 18, scope: !7284)
!7286 = !DILocation(line: 3396, column: 16, scope: !7284)
!7287 = !DILocation(line: 3397, column: 18, scope: !7284)
!7288 = !DILocation(line: 3397, column: 9, scope: !7284)
!7289 = !DILocation(line: 3397, column: 16, scope: !7284)
!7290 = !DILocation(line: 3398, column: 13, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 3398, column: 13)
!7292 = !DILocation(line: 3398, column: 32, scope: !7291)
!7293 = !DILocation(line: 3398, column: 13, scope: !7284)
!7294 = !DILocation(line: 3401, column: 16, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3399, column: 12)
!7296 = !DILocation(line: 3402, column: 13, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 3402, column: 13)
!7298 = !DILocation(line: 3402, column: 32, scope: !7297)
!7299 = !DILocation(line: 3402, column: 13, scope: !7295)
!7300 = !DILocation(line: 3403, column: 15, scope: !7295)
!7301 = !DILocation(line: 3403, column: 13, scope: !7295)
!7302 = !DILocation(line: 3404, column: 20, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 3404, column: 13)
!7304 = !DILocation(line: 3404, column: 13, scope: !7303)
!7305 = !DILocation(line: 3404, column: 33, scope: !7303)
!7306 = !DILocation(line: 3404, column: 13, scope: !7295)
!7307 = !DILocation(line: 3406, column: 5, scope: !7260)
!7308 = !DILocation(line: 3407, column: 1, scope: !7260)
!7309 = !DISubprogram(name: "dictGetIterator", scope: !88, file: !88, line: 134, type: !7310, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!2938, !86}
!7312 = !DISubprogram(name: "dictNext", scope: !88, file: !88, line: 135, type: !7313, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!124, !2938}
!7315 = !DISubprogram(name: "dictReleaseIterator", scope: !88, file: !88, line: 136, type: !7316, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !2938}
!7318 = distinct !DISubprogram(name: "rdbSaveDoubleValue", scope: !3, file: !3, line: 3557, type: !7319, scopeLine: 3557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7321)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{!45, !580, !168}
!7321 = !{!7322, !7323, !7324, !7326, !7327, !7331}
!7322 = !DILocalVariable(name: "fp", arg: 1, scope: !7318, file: !3, line: 3557, type: !580)
!7323 = !DILocalVariable(name: "val", arg: 2, scope: !7318, file: !3, line: 3557, type: !168)
!7324 = !DILocalVariable(name: "buf", scope: !7318, file: !3, line: 3558, type: !7325)
!7325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 1024, elements: !1248)
!7326 = !DILocalVariable(name: "len", scope: !7318, file: !3, line: 3559, type: !45)
!7327 = !DILocalVariable(name: "min", scope: !7328, file: !3, line: 3578, type: !168)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3567, column: 12)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 3564, column: 16)
!7330 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 3561, column: 9)
!7331 = !DILocalVariable(name: "max", scope: !7328, file: !3, line: 3579, type: !168)
!7332 = !DILocation(line: 0, scope: !7318)
!7333 = !DILocation(line: 3558, column: 5, scope: !7318)
!7334 = !DILocation(line: 3558, column: 19, scope: !7318)
!7335 = !DILocation(line: 3561, column: 9, scope: !7330)
!7336 = !DILocation(line: 3561, column: 9, scope: !7318)
!7337 = !DILocation(line: 3562, column: 16, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 3561, column: 21)
!7339 = !DILocation(line: 3564, column: 5, scope: !7338)
!7340 = !DILocation(line: 3564, column: 17, scope: !7329)
!7341 = !DILocation(line: 3564, column: 16, scope: !7330)
!7342 = !DILocation(line: 3566, column: 23, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 3564, column: 32)
!7344 = !DILocation(line: 3566, column: 18, scope: !7343)
!7345 = !DILocation(line: 3566, column: 16, scope: !7343)
!7346 = !DILocation(line: 3567, column: 5, scope: !7343)
!7347 = !DILocation(line: 0, scope: !7328)
!7348 = !DILocation(line: 3580, column: 17, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 3580, column: 13)
!7350 = !DILocation(line: 3580, column: 23, scope: !7349)
!7351 = !DILocation(line: 3580, column: 56, scope: !7349)
!7352 = !DILocation(line: 3580, column: 47, scope: !7349)
!7353 = !DILocation(line: 3580, column: 43, scope: !7349)
!7354 = !DILocation(line: 3580, column: 13, scope: !7328)
!7355 = !DILocation(line: 3581, column: 33, scope: !7349)
!7356 = !DILocation(line: 3581, column: 13, scope: !7349)
!7357 = !DILocation(line: 3584, column: 32, scope: !7349)
!7358 = !DILocation(line: 3584, column: 13, scope: !7349)
!7359 = !DILocation(line: 3585, column: 35, scope: !7328)
!7360 = !DILocation(line: 3585, column: 18, scope: !7328)
!7361 = !DILocation(line: 3585, column: 16, scope: !7328)
!7362 = !DILocation(line: 3586, column: 15, scope: !7328)
!7363 = !DILocation(line: 3586, column: 21, scope: !7328)
!7364 = !DILocation(line: 3588, column: 9, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 3588, column: 9)
!7366 = !DILocation(line: 3588, column: 30, scope: !7365)
!7367 = !DILocation(line: 3590, column: 1, scope: !7318)
!7368 = !DISubprogram(name: "zipmapLen", scope: !6556, file: !6556, line: 45, type: !7369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{!7, !167}
!7371 = distinct !DISubprogram(name: "rdbSaveRawString", scope: !3, file: !3, line: 3486, type: !7372, scopeLine: 3486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7374)
!7372 = !DISubroutineType(types: !7373)
!7373 = !{!45, !580, !167, !196}
!7374 = !{!7375, !7376, !7377, !7378, !7379, !7382}
!7375 = !DILocalVariable(name: "fp", arg: 1, scope: !7371, file: !3, line: 3486, type: !580)
!7376 = !DILocalVariable(name: "s", arg: 2, scope: !7371, file: !3, line: 3486, type: !167)
!7377 = !DILocalVariable(name: "len", arg: 3, scope: !7371, file: !3, line: 3486, type: !196)
!7378 = !DILocalVariable(name: "enclen", scope: !7371, file: !3, line: 3487, type: !45)
!7379 = !DILocalVariable(name: "buf", scope: !7380, file: !3, line: 3491, type: !7219)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 3490, column: 20)
!7381 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 3490, column: 9)
!7382 = !DILocalVariable(name: "retval", scope: !7383, file: !3, line: 3501, type: !45)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 3500, column: 44)
!7384 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 3500, column: 9)
!7385 = !DILocation(line: 0, scope: !7371)
!7386 = !DILocation(line: 3490, column: 13, scope: !7381)
!7387 = !DILocation(line: 3490, column: 9, scope: !7371)
!7388 = !DILocation(line: 3491, column: 9, scope: !7380)
!7389 = !DILocation(line: 3491, column: 23, scope: !7380)
!7390 = !DILocation(line: 3492, column: 23, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 3492, column: 13)
!7392 = !DILocation(line: 3492, column: 64, scope: !7391)
!7393 = !DILocation(line: 3492, column: 13, scope: !7380)
!7394 = !DILocation(line: 3496, column: 5, scope: !7381)
!7395 = !DILocation(line: 3500, column: 31, scope: !7384)
!7396 = !DILocation(line: 3493, column: 28, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 3493, column: 17)
!7398 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 3492, column: 69)
!7399 = !DILocation(line: 3493, column: 17, scope: !7397)
!7400 = !DILocation(line: 3493, column: 41, scope: !7397)
!7401 = !DILocation(line: 0, scope: !7398)
!7402 = !DILocation(line: 3500, column: 16, scope: !7384)
!7403 = !DILocation(line: 3500, column: 9, scope: !7384)
!7404 = !DILocation(line: 3503, column: 18, scope: !7383)
!7405 = !DILocation(line: 0, scope: !7383)
!7406 = !DILocation(line: 3504, column: 20, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 3504, column: 13)
!7408 = !DILocation(line: 3504, column: 13, scope: !7383)
!7409 = !DILocation(line: 3505, column: 20, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 3505, column: 13)
!7411 = !DILocation(line: 3510, column: 23, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 3510, column: 9)
!7413 = !DILocation(line: 3510, column: 9, scope: !7412)
!7414 = !DILocation(line: 3510, column: 28, scope: !7412)
!7415 = !DILocation(line: 3510, column: 9, scope: !7371)
!7416 = !DILocation(line: 3511, column: 9, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 3511, column: 9)
!7418 = !DILocation(line: 3511, column: 13, scope: !7417)
!7419 = !DILocation(line: 3511, column: 16, scope: !7417)
!7420 = !DILocation(line: 3511, column: 35, scope: !7417)
!7421 = !DILocation(line: 3511, column: 9, scope: !7371)
!7422 = !DILocation(line: 3512, column: 5, scope: !7371)
!7423 = !DILocation(line: 3513, column: 1, scope: !7371)
!7424 = distinct !DISubprogram(name: "rdbEncodeInteger", scope: !3, file: !3, line: 3414, type: !7425, scopeLine: 3414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7427)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{!45, !54, !167}
!7427 = !{!7428, !7429}
!7428 = !DILocalVariable(name: "value", arg: 1, scope: !7424, file: !3, line: 3414, type: !54)
!7429 = !DILocalVariable(name: "enc", arg: 2, scope: !7424, file: !3, line: 3414, type: !167)
!7430 = !DILocation(line: 0, scope: !7424)
!7431 = !DILocation(line: 3416, column: 26, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 3416, column: 9)
!7433 = !DILocation(line: 3417, column: 16, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 3416, column: 48)
!7435 = !DILocation(line: 3419, column: 9, scope: !7434)
!7436 = !DILocation(line: 3420, column: 34, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 3420, column: 16)
!7438 = !DILocation(line: 3421, column: 16, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3420, column: 57)
!7440 = !DILocation(line: 3422, column: 18, scope: !7439)
!7441 = !DILocation(line: 3422, column: 9, scope: !7439)
!7442 = !DILocation(line: 3422, column: 16, scope: !7439)
!7443 = !DILocation(line: 3423, column: 24, scope: !7439)
!7444 = !DILocation(line: 3424, column: 9, scope: !7439)
!7445 = !DILocation(line: 3425, column: 45, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3425, column: 16)
!7447 = !DILocation(line: 3426, column: 16, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 3425, column: 79)
!7449 = !DILocation(line: 3427, column: 18, scope: !7448)
!7450 = !DILocation(line: 3427, column: 9, scope: !7448)
!7451 = !DILocation(line: 3427, column: 16, scope: !7448)
!7452 = !DILocation(line: 3428, column: 24, scope: !7448)
!7453 = !DILocation(line: 3428, column: 18, scope: !7448)
!7454 = !DILocation(line: 3428, column: 9, scope: !7448)
!7455 = !DILocation(line: 3428, column: 16, scope: !7448)
!7456 = !DILocation(line: 3429, column: 24, scope: !7448)
!7457 = !DILocation(line: 3429, column: 18, scope: !7448)
!7458 = !DILocation(line: 3429, column: 9, scope: !7448)
!7459 = !DILocation(line: 3429, column: 16, scope: !7448)
!7460 = !DILocation(line: 3430, column: 24, scope: !7448)
!7461 = !DILocation(line: 3431, column: 9, scope: !7448)
!7462 = !DILocation(line: 0, scope: !7432)
!7463 = !DILocation(line: 3435, column: 1, scope: !7424)
!7464 = !DISubprogram(name: "fwrite", scope: !161, file: !161, line: 652, type: !7465, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{!196, !4302, !196, !196, !1467}
!7467 = distinct !DISubprogram(name: "rdbTryIntegerEncoding", scope: !3, file: !3, line: 3440, type: !7468, scopeLine: 3440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7470)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!45, !47, !196, !167}
!7470 = !{!7471, !7472, !7473, !7474, !7475, !7476}
!7471 = !DILocalVariable(name: "s", arg: 1, scope: !7467, file: !3, line: 3440, type: !47)
!7472 = !DILocalVariable(name: "len", arg: 2, scope: !7467, file: !3, line: 3440, type: !196)
!7473 = !DILocalVariable(name: "enc", arg: 3, scope: !7467, file: !3, line: 3440, type: !167)
!7474 = !DILocalVariable(name: "value", scope: !7467, file: !3, line: 3441, type: !54)
!7475 = !DILocalVariable(name: "endptr", scope: !7467, file: !3, line: 3442, type: !47)
!7476 = !DILocalVariable(name: "buf", scope: !7467, file: !3, line: 3442, type: !4256)
!7477 = !DILocation(line: 0, scope: !7467)
!7478 = !DILocation(line: 3442, column: 5, scope: !7467)
!7479 = !DILocation(line: 3442, column: 19, scope: !7467)
!7480 = !DILocation(line: 3445, column: 13, scope: !7467)
!7481 = !DILocation(line: 3446, column: 9, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 3446, column: 9)
!7483 = !DILocation(line: 3446, column: 19, scope: !7482)
!7484 = !DILocation(line: 3446, column: 9, scope: !7467)
!7485 = !DILocation(line: 3447, column: 5, scope: !7467)
!7486 = !DILocation(line: 3451, column: 9, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 3451, column: 9)
!7488 = !DILocation(line: 3451, column: 21, scope: !7487)
!7489 = !DILocation(line: 3451, column: 28, scope: !7487)
!7490 = !DILocation(line: 3451, column: 31, scope: !7487)
!7491 = !DILocation(line: 3451, column: 9, scope: !7467)
!7492 = !DILocation(line: 3453, column: 12, scope: !7467)
!7493 = !DILocation(line: 3453, column: 5, scope: !7467)
!7494 = !DILocation(line: 3454, column: 1, scope: !7467)
!7495 = distinct !DISubprogram(name: "rdbSaveLzfStringObject", scope: !3, file: !3, line: 3456, type: !7372, scopeLine: 3456, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7496)
!7496 = !{!7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504}
!7497 = !DILocalVariable(name: "fp", arg: 1, scope: !7495, file: !3, line: 3456, type: !580)
!7498 = !DILocalVariable(name: "s", arg: 2, scope: !7495, file: !3, line: 3456, type: !167)
!7499 = !DILocalVariable(name: "len", arg: 3, scope: !7495, file: !3, line: 3456, type: !196)
!7500 = !DILocalVariable(name: "comprlen", scope: !7495, file: !3, line: 3457, type: !196)
!7501 = !DILocalVariable(name: "outlen", scope: !7495, file: !3, line: 3457, type: !196)
!7502 = !DILocalVariable(name: "byte", scope: !7495, file: !3, line: 3458, type: !151)
!7503 = !DILocalVariable(name: "out", scope: !7495, file: !3, line: 3459, type: !46)
!7504 = !DILabel(scope: !7495, name: "writeerr", file: !3, line: 3479)
!7505 = !DILocation(line: 0, scope: !7495)
!7506 = !DILocation(line: 3458, column: 5, scope: !7495)
!7507 = !DILocation(line: 3462, column: 13, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3462, column: 9)
!7509 = !DILocation(line: 3462, column: 9, scope: !7495)
!7510 = !DILocation(line: 3464, column: 30, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3464, column: 9)
!7512 = !DILocation(line: 3464, column: 16, scope: !7511)
!7513 = !DILocation(line: 3464, column: 35, scope: !7511)
!7514 = !DILocation(line: 3464, column: 9, scope: !7495)
!7515 = !DILocation(line: 3465, column: 32, scope: !7495)
!7516 = !DILocation(line: 3465, column: 42, scope: !7495)
!7517 = !DILocation(line: 3465, column: 16, scope: !7495)
!7518 = !DILocation(line: 3466, column: 18, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3466, column: 9)
!7520 = !DILocation(line: 3466, column: 9, scope: !7495)
!7521 = !DILocation(line: 3467, column: 9, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3466, column: 24)
!7523 = !DILocation(line: 3468, column: 9, scope: !7522)
!7524 = !DILocation(line: 3471, column: 10, scope: !7495)
!7525 = !DILocation(line: 3472, column: 9, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3472, column: 9)
!7527 = !DILocation(line: 3472, column: 30, scope: !7526)
!7528 = !DILocation(line: 3472, column: 9, scope: !7495)
!7529 = !DILocation(line: 3473, column: 9, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3473, column: 9)
!7531 = !DILocation(line: 3473, column: 33, scope: !7530)
!7532 = !DILocation(line: 3473, column: 9, scope: !7495)
!7533 = !DILocation(line: 3474, column: 9, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3474, column: 9)
!7535 = !DILocation(line: 3474, column: 28, scope: !7534)
!7536 = !DILocation(line: 3474, column: 9, scope: !7495)
!7537 = !DILocation(line: 3475, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3475, column: 9)
!7539 = !DILocation(line: 3475, column: 35, scope: !7538)
!7540 = !DILocation(line: 3475, column: 9, scope: !7495)
!7541 = !DILocation(line: 3476, column: 5, scope: !7495)
!7542 = !DILocation(line: 3477, column: 5, scope: !7495)
!7543 = !DILocation(line: 3479, column: 1, scope: !7495)
!7544 = !DILocation(line: 3480, column: 5, scope: !7495)
!7545 = !DILocation(line: 3481, column: 5, scope: !7495)
!7546 = !DILocation(line: 3482, column: 1, scope: !7495)
!7547 = !DISubprogram(name: "lzf_compress", scope: !6743, file: !6743, line: 77, type: !6744, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7548 = distinct !DISubprogram(name: "replicationFeedMonitors", scope: !3, file: !3, line: 2553, type: !4607, scopeLine: 2553, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7549)
!7549 = !{!7550, !7551, !7552, !7553, !7554, !7555, !7556, !7557, !7558, !7559, !7566}
!7550 = !DILocalVariable(name: "monitors", arg: 1, scope: !7548, file: !3, line: 2553, type: !58)
!7551 = !DILocalVariable(name: "dictid", arg: 2, scope: !7548, file: !3, line: 2553, type: !45)
!7552 = !DILocalVariable(name: "argv", arg: 3, scope: !7548, file: !3, line: 2553, type: !305)
!7553 = !DILocalVariable(name: "argc", arg: 4, scope: !7548, file: !3, line: 2553, type: !45)
!7554 = !DILocalVariable(name: "ln", scope: !7548, file: !3, line: 2554, type: !64)
!7555 = !DILocalVariable(name: "li", scope: !7548, file: !3, line: 2555, type: !831)
!7556 = !DILocalVariable(name: "j", scope: !7548, file: !3, line: 2556, type: !45)
!7557 = !DILocalVariable(name: "cmdrepr", scope: !7548, file: !3, line: 2557, type: !165)
!7558 = !DILocalVariable(name: "cmdobj", scope: !7548, file: !3, line: 2558, type: !145)
!7559 = !DILocalVariable(name: "tv", scope: !7548, file: !3, line: 2559, type: !7560)
!7560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !7561, line: 8, size: 128, elements: !7562)
!7561 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "", checksumkind: CSK_MD5, checksum: "7798c68081a8161421218378689a8d48")
!7562 = !{!7563, !7564}
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7560, file: !7561, line: 10, baseType: !51, size: 64)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !7560, file: !7561, line: 11, baseType: !7565, size: 64, offset: 64)
!7565 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !52, line: 162, baseType: !53)
!7566 = !DILocalVariable(name: "monitor", scope: !7567, file: !3, line: 2580, type: !287)
!7567 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 2579, column: 33)
!7568 = !DILocation(line: 0, scope: !7548)
!7569 = !DILocation(line: 2555, column: 5, scope: !7548)
!7570 = !DILocation(line: 2555, column: 14, scope: !7548)
!7571 = !DILocation(line: 2557, column: 19, scope: !7548)
!7572 = !DILocation(line: 2559, column: 5, scope: !7548)
!7573 = !DILocation(line: 2559, column: 20, scope: !7548)
!7574 = !DILocation(line: 2561, column: 5, scope: !7548)
!7575 = !DILocation(line: 2562, column: 56, scope: !7548)
!7576 = !{!7577, !710, i64 0}
!7577 = !{!"timeval", !710, i64 0, !710, i64 8}
!7578 = !DILocation(line: 2562, column: 72, scope: !7548)
!7579 = !{!7577, !710, i64 8}
!7580 = !DILocation(line: 2562, column: 15, scope: !7548)
!7581 = !DILocation(line: 2563, column: 16, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 2563, column: 9)
!7583 = !DILocation(line: 2563, column: 9, scope: !7548)
!7584 = !DILocation(line: 2563, column: 32, scope: !7582)
!7585 = !DILocation(line: 2563, column: 22, scope: !7582)
!7586 = !DILocation(line: 2565, column: 19, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 2565, column: 5)
!7588 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 2565, column: 5)
!7589 = !DILocation(line: 2565, column: 5, scope: !7588)
!7590 = !DILocation(line: 2566, column: 13, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2566, column: 13)
!7592 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 2565, column: 32)
!7593 = !DILocation(line: 2566, column: 22, scope: !7591)
!7594 = !DILocation(line: 2566, column: 31, scope: !7591)
!7595 = !DILocation(line: 0, scope: !7591)
!7596 = !DILocation(line: 2566, column: 13, scope: !7592)
!7597 = !DILocation(line: 2567, column: 56, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2566, column: 54)
!7599 = !DILocation(line: 2567, column: 23, scope: !7598)
!7600 = !DILocation(line: 2568, column: 9, scope: !7598)
!7601 = !DILocation(line: 2570, column: 25, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2568, column: 16)
!7603 = !DILocation(line: 2569, column: 23, scope: !7602)
!7604 = !DILocation(line: 2572, column: 15, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2572, column: 13)
!7606 = !DILocation(line: 2572, column: 13, scope: !7592)
!7607 = !DILocation(line: 2573, column: 23, scope: !7605)
!7608 = !DILocation(line: 2573, column: 13, scope: !7605)
!7609 = !DILocation(line: 0, scope: !7592)
!7610 = !DILocation(line: 2565, column: 28, scope: !7587)
!7611 = distinct !{!7611, !7589, !7612}
!7612 = !DILocation(line: 2574, column: 5, scope: !7588)
!7613 = !DILocation(line: 2575, column: 15, scope: !7548)
!7614 = !DILocation(line: 2576, column: 14, scope: !7548)
!7615 = !DILocation(line: 2578, column: 5, scope: !7548)
!7616 = !DILocation(line: 2579, column: 17, scope: !7548)
!7617 = !DILocation(line: 2579, column: 5, scope: !7548)
!7618 = !DILocation(line: 2580, column: 36, scope: !7567)
!7619 = !DILocation(line: 0, scope: !7567)
!7620 = !DILocation(line: 2581, column: 9, scope: !7567)
!7621 = distinct !{!7621, !7617, !7622}
!7622 = !DILocation(line: 2582, column: 5, scope: !7548)
!7623 = !DILocation(line: 2583, column: 18, scope: !7548)
!7624 = !DILocation(line: 2583, column: 5, scope: !7548)
!7625 = !DILocation(line: 2584, column: 1, scope: !7548)
!7626 = !DISubprogram(name: "gettimeofday", scope: !7627, file: !7627, line: 66, type: !7628, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7627 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "", checksumkind: CSK_MD5, checksum: "99ab902f1529d4d72694df20fbf7a8ec")
!7628 = !DISubroutineType(types: !7629)
!7629 = !{!45, !7630, !1483}
!7630 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !7631)
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7632 = distinct !DISubprogram(name: "sdscatrepr", scope: !3, file: !3, line: 2528, type: !7633, scopeLine: 2528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!165, !165, !47, !196}
!7635 = !{!7636, !7637, !7638}
!7636 = !DILocalVariable(name: "s", arg: 1, scope: !7632, file: !3, line: 2528, type: !165)
!7637 = !DILocalVariable(name: "p", arg: 2, scope: !7632, file: !3, line: 2528, type: !47)
!7638 = !DILocalVariable(name: "len", arg: 3, scope: !7632, file: !3, line: 2528, type: !196)
!7639 = !DILocation(line: 0, scope: !7632)
!7640 = !DILocation(line: 2529, column: 9, scope: !7632)
!7641 = !DILocation(line: 2530, column: 5, scope: !7632)
!7642 = !DILocation(line: 2530, column: 14, scope: !7632)
!7643 = !DILocation(line: 2531, column: 16, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 2530, column: 18)
!7645 = !DILocation(line: 2531, column: 9, scope: !7644)
!7646 = !DILocation(line: 2534, column: 17, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2531, column: 20)
!7648 = !DILocation(line: 2535, column: 13, scope: !7647)
!7649 = !DILocation(line: 2536, column: 24, scope: !7647)
!7650 = !DILocation(line: 2536, column: 46, scope: !7647)
!7651 = !DILocation(line: 2537, column: 24, scope: !7647)
!7652 = !DILocation(line: 2537, column: 46, scope: !7647)
!7653 = !DILocation(line: 2538, column: 24, scope: !7647)
!7654 = !DILocation(line: 2538, column: 46, scope: !7647)
!7655 = !DILocation(line: 2539, column: 24, scope: !7647)
!7656 = !DILocation(line: 2539, column: 46, scope: !7647)
!7657 = !DILocation(line: 2540, column: 24, scope: !7647)
!7658 = !DILocation(line: 2540, column: 46, scope: !7647)
!7659 = !DILocation(line: 2542, column: 17, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 2542, column: 17)
!7661 = !{!7662, !7662, i64 0}
!7662 = !{!"short", !711, i64 0}
!7663 = !DILocation(line: 2542, column: 17, scope: !7647)
!7664 = !DILocation(line: 2543, column: 21, scope: !7660)
!7665 = !DILocation(line: 2543, column: 17, scope: !7660)
!7666 = !DILocation(line: 2545, column: 46, scope: !7660)
!7667 = !DILocation(line: 2545, column: 21, scope: !7660)
!7668 = !DILocation(line: 0, scope: !7647)
!7669 = !DILocation(line: 2548, column: 10, scope: !7644)
!7670 = distinct !{!7670, !7641, !7671}
!7671 = !DILocation(line: 2549, column: 5, scope: !7632)
!7672 = !DILocation(line: 2550, column: 12, scope: !7632)
!7673 = !DILocation(line: 2550, column: 5, scope: !7632)
!7674 = distinct !DISubprogram(name: "equalStringObjects", scope: !3, file: !3, line: 3263, type: !6943, scopeLine: 3263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7675)
!7675 = !{!7676, !7677}
!7676 = !DILocalVariable(name: "a", arg: 1, scope: !7674, file: !3, line: 3263, type: !145)
!7677 = !DILocalVariable(name: "b", arg: 2, scope: !7674, file: !3, line: 3263, type: !145)
!7678 = !DILocation(line: 0, scope: !7674)
!7679 = !DILocation(line: 3264, column: 12, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 3264, column: 9)
!7681 = !DILocation(line: 3264, column: 21, scope: !7680)
!7682 = !DILocation(line: 3264, column: 43, scope: !7680)
!7683 = !DILocation(line: 3264, column: 49, scope: !7680)
!7684 = !DILocation(line: 3264, column: 58, scope: !7680)
!7685 = !DILocation(line: 3264, column: 9, scope: !7674)
!7686 = !DILocation(line: 3265, column: 19, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 3264, column: 80)
!7688 = !DILocation(line: 3265, column: 29, scope: !7687)
!7689 = !DILocation(line: 3265, column: 23, scope: !7687)
!7690 = !DILocation(line: 3265, column: 9, scope: !7687)
!7691 = !DILocation(line: 3267, column: 16, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 3266, column: 12)
!7693 = !DILocation(line: 3267, column: 42, scope: !7692)
!7694 = !DILocation(line: 3267, column: 9, scope: !7692)
!7695 = !DILocation(line: 0, scope: !7680)
!7696 = !DILocation(line: 3269, column: 1, scope: !7674)
!7697 = !DISubprogram(name: "lseek", linkageName: "lseek64", scope: !1086, file: !1086, line: 337, type: !7698, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!162, !45, !162, !45}
!7700 = !DISubprogram(name: "read", scope: !1086, file: !1086, line: 360, type: !7701, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{!1089, !45, !46, !196}
!7703 = distinct !DISubprogram(name: "waitEmptyIOJobsQueue", scope: !3, file: !3, line: 9689, type: !1747, scopeLine: 9689, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7704)
!7704 = !{!7705}
!7705 = !DILocalVariable(name: "io_processed_len", scope: !7706, file: !3, line: 9691, type: !45)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 9690, column: 14)
!7707 = !DILocation(line: 9690, column: 5, scope: !7703)
!7708 = !DILocation(line: 9693, column: 9, scope: !7706)
!7709 = !DILocation(line: 9694, column: 13, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 9694, column: 13)
!7711 = !DILocation(line: 9694, column: 43, scope: !7710)
!7712 = !DILocation(line: 9694, column: 48, scope: !7710)
!7713 = !DILocation(line: 9695, column: 13, scope: !7710)
!7714 = !DILocation(line: 9695, column: 46, scope: !7710)
!7715 = !DILocation(line: 9695, column: 51, scope: !7710)
!7716 = !DILocation(line: 9705, column: 28, scope: !7706)
!7717 = !DILocation(line: 0, scope: !7706)
!7718 = !DILocation(line: 9706, column: 9, scope: !7706)
!7719 = !DILocation(line: 9707, column: 13, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 9707, column: 13)
!7721 = !DILocation(line: 9707, column: 13, scope: !7706)
!7722 = !DILocation(line: 9708, column: 50, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 9707, column: 31)
!7724 = !{!709, !713, i64 920}
!7725 = !DILocation(line: 9708, column: 13, scope: !7723)
!7726 = !DILocation(line: 9711, column: 9, scope: !7723)
!7727 = !DILocation(line: 0, scope: !7720)
!7728 = !DILocation(line: 9698, column: 13, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 9697, column: 9)
!7730 = !DILocation(line: 9715, column: 1, scope: !7703)
!7731 = !DISubprogram(name: "fork", scope: !1086, file: !1086, line: 756, type: !2604, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!7732 = distinct !DISubprogram(name: "vmReopenSwapFile", scope: !3, file: !3, line: 9717, type: !1747, scopeLine: 9717, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!7733 = !DILocation(line: 9720, column: 33, scope: !7732)
!7734 = !DILocation(line: 9720, column: 20, scope: !7732)
!7735 = !DILocation(line: 9720, column: 18, scope: !7732)
!7736 = !DILocation(line: 9721, column: 22, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 9721, column: 9)
!7738 = !DILocation(line: 9721, column: 9, scope: !7732)
!7739 = !DILocation(line: 9723, column: 20, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 9721, column: 31)
!7741 = !DILocation(line: 9722, column: 9, scope: !7740)
!7742 = !DILocation(line: 9724, column: 9, scope: !7740)
!7743 = !DILocation(line: 9726, column: 20, scope: !7732)
!7744 = !DILocation(line: 9726, column: 18, scope: !7732)
!7745 = !{!709, !713, i64 664}
!7746 = !DILocation(line: 9727, column: 1, scope: !7732)
!7747 = distinct !DISubprogram(name: "rdbSave", scope: !3, file: !3, line: 3690, type: !1232, scopeLine: 3690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7748)
!7748 = !{!7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7760, !7761, !7763, !7764, !7765, !7768}
!7749 = !DILocalVariable(name: "filename", arg: 1, scope: !7747, file: !3, line: 3690, type: !47)
!7750 = !DILocalVariable(name: "di", scope: !7747, file: !3, line: 3691, type: !2938)
!7751 = !DILocalVariable(name: "de", scope: !7747, file: !3, line: 3692, type: !124)
!7752 = !DILocalVariable(name: "fp", scope: !7747, file: !3, line: 3693, type: !580)
!7753 = !DILocalVariable(name: "tmpfile", scope: !7747, file: !3, line: 3694, type: !457)
!7754 = !DILocalVariable(name: "j", scope: !7747, file: !3, line: 3695, type: !45)
!7755 = !DILocalVariable(name: "now", scope: !7747, file: !3, line: 3696, type: !49)
!7756 = !DILocalVariable(name: "db", scope: !7757, file: !3, line: 3712, type: !293)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 3711, column: 40)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3711, column: 5)
!7759 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3711, column: 5)
!7760 = !DILocalVariable(name: "d", scope: !7757, file: !3, line: 3713, type: !86)
!7761 = !DILocalVariable(name: "key", scope: !7762, file: !3, line: 3727, type: !145)
!7762 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 3726, column: 44)
!7763 = !DILocalVariable(name: "o", scope: !7762, file: !3, line: 3728, type: !145)
!7764 = !DILocalVariable(name: "expiretime", scope: !7762, file: !3, line: 3729, type: !49)
!7765 = !DILocalVariable(name: "po", scope: !7766, file: !3, line: 3748, type: !145)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 3746, column: 20)
!7767 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 3740, column: 17)
!7768 = !DILabel(scope: !7747, name: "werr", file: !3, line: 3781)
!7769 = !DILocation(line: 0, scope: !7747)
!7770 = !DILocation(line: 3694, column: 5, scope: !7747)
!7771 = !DILocation(line: 3694, column: 10, scope: !7747)
!7772 = !DILocation(line: 3696, column: 18, scope: !7747)
!7773 = !DILocation(line: 3701, column: 16, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3701, column: 9)
!7775 = !DILocation(line: 3701, column: 9, scope: !7774)
!7776 = !DILocation(line: 3701, column: 9, scope: !7747)
!7777 = !DILocation(line: 3702, column: 9, scope: !7774)
!7778 = !DILocation(line: 3704, column: 47, scope: !7747)
!7779 = !DILocation(line: 3704, column: 5, scope: !7747)
!7780 = !DILocation(line: 3705, column: 10, scope: !7747)
!7781 = !DILocation(line: 3706, column: 10, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3706, column: 9)
!7783 = !DILocation(line: 3706, column: 9, scope: !7747)
!7784 = !DILocation(line: 3707, column: 70, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 3706, column: 14)
!7786 = !DILocation(line: 3707, column: 61, scope: !7785)
!7787 = !DILocation(line: 3707, column: 9, scope: !7785)
!7788 = !DILocation(line: 3708, column: 9, scope: !7785)
!7789 = !DILocation(line: 3710, column: 9, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3710, column: 9)
!7791 = !DILocation(line: 3710, column: 36, scope: !7790)
!7792 = !DILocation(line: 3710, column: 9, scope: !7747)
!7793 = !DILocation(line: 3711, column: 28, scope: !7758)
!7794 = !DILocation(line: 3711, column: 19, scope: !7758)
!7795 = !DILocation(line: 3711, column: 5, scope: !7759)
!7796 = !DILocation(line: 3712, column: 30, scope: !7757)
!7797 = !DILocation(line: 3712, column: 32, scope: !7757)
!7798 = !DILocation(line: 0, scope: !7757)
!7799 = !DILocation(line: 3713, column: 23, scope: !7757)
!7800 = !DILocation(line: 3714, column: 13, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 3714, column: 13)
!7802 = !DILocation(line: 3714, column: 25, scope: !7801)
!7803 = !DILocation(line: 3714, column: 13, scope: !7757)
!7804 = !DILocation(line: 3715, column: 14, scope: !7757)
!7805 = !DILocation(line: 3716, column: 14, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 3716, column: 13)
!7807 = !DILocation(line: 3716, column: 13, scope: !7757)
!7808 = !DILocation(line: 3722, column: 13, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 3722, column: 13)
!7810 = !DILocation(line: 3722, column: 44, scope: !7809)
!7811 = !DILocation(line: 3722, column: 13, scope: !7757)
!7812 = !DILocation(line: 3723, column: 13, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 3723, column: 13)
!7814 = !DILocation(line: 3723, column: 30, scope: !7813)
!7815 = !DILocation(line: 3723, column: 13, scope: !7757)
!7816 = !DILocation(line: 3726, column: 21, scope: !7757)
!7817 = !DILocation(line: 3726, column: 35, scope: !7757)
!7818 = !DILocation(line: 3726, column: 9, scope: !7757)
!7819 = !DILocation(line: 3727, column: 25, scope: !7762)
!7820 = !DILocation(line: 0, scope: !7762)
!7821 = !DILocation(line: 3728, column: 23, scope: !7762)
!7822 = !DILocation(line: 3729, column: 33, scope: !7762)
!7823 = !DILocation(line: 3732, column: 28, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 3732, column: 17)
!7825 = !DILocation(line: 3732, column: 17, scope: !7762)
!7826 = !DILocation(line: 3734, column: 32, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 3734, column: 21)
!7828 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 3732, column: 35)
!7829 = !DILocation(line: 3734, column: 21, scope: !7828)
!7830 = distinct !{!7830, !7818, !7831}
!7831 = !DILocation(line: 3758, column: 9, scope: !7757)
!7832 = !DILocation(line: 3735, column: 21, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 3735, column: 21)
!7834 = !DILocation(line: 3735, column: 54, scope: !7833)
!7835 = !DILocation(line: 3735, column: 21, scope: !7828)
!7836 = !DILocation(line: 3736, column: 21, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 3736, column: 21)
!7838 = !DILocation(line: 3736, column: 48, scope: !7837)
!7839 = !DILocation(line: 3736, column: 21, scope: !7828)
!7840 = !DILocation(line: 3740, column: 25, scope: !7767)
!7841 = !DILocation(line: 3740, column: 18, scope: !7767)
!7842 = !DILocation(line: 3740, column: 36, scope: !7767)
!7843 = !DILocation(line: 3740, column: 44, scope: !7767)
!7844 = !DILocation(line: 3740, column: 71, scope: !7767)
!7845 = !DILocation(line: 3743, column: 39, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3743, column: 21)
!7847 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 3741, column: 74)
!7848 = !DILocation(line: 3743, column: 21, scope: !7846)
!7849 = !DILocation(line: 3743, column: 45, scope: !7846)
!7850 = !DILocation(line: 3743, column: 21, scope: !7847)
!7851 = !DILocation(line: 3744, column: 21, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3744, column: 21)
!7853 = !DILocation(line: 3744, column: 49, scope: !7852)
!7854 = !DILocation(line: 3744, column: 21, scope: !7847)
!7855 = !DILocation(line: 3745, column: 21, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3745, column: 21)
!7857 = !DILocation(line: 3745, column: 41, scope: !7856)
!7858 = !DILocation(line: 3745, column: 21, scope: !7847)
!7859 = !DILocation(line: 3750, column: 22, scope: !7766)
!7860 = !DILocation(line: 0, scope: !7766)
!7861 = !DILocation(line: 3752, column: 41, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 3752, column: 21)
!7863 = !DILocation(line: 3752, column: 21, scope: !7862)
!7864 = !DILocation(line: 3752, column: 48, scope: !7862)
!7865 = !DILocation(line: 3752, column: 21, scope: !7766)
!7866 = !DILocation(line: 3753, column: 21, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 3753, column: 21)
!7868 = !DILocation(line: 3753, column: 49, scope: !7867)
!7869 = !DILocation(line: 3753, column: 21, scope: !7766)
!7870 = !DILocation(line: 3754, column: 21, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 3754, column: 21)
!7872 = !DILocation(line: 3754, column: 42, scope: !7871)
!7873 = !DILocation(line: 3754, column: 21, scope: !7766)
!7874 = !DILocation(line: 3756, column: 30, scope: !7766)
!7875 = !DILocation(line: 3756, column: 17, scope: !7766)
!7876 = !DILocation(line: 3759, column: 9, scope: !7757)
!7877 = !DILocation(line: 3760, column: 5, scope: !7758)
!7878 = !DILocation(line: 3717, column: 13, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 3716, column: 18)
!7880 = !DILocation(line: 3711, column: 36, scope: !7758)
!7881 = distinct !{!7881, !7795, !7882}
!7882 = !DILocation(line: 3760, column: 5, scope: !7759)
!7883 = !DILocation(line: 3691, column: 19, scope: !7747)
!7884 = !DILocation(line: 3762, column: 9, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3762, column: 9)
!7886 = !DILocation(line: 3762, column: 35, scope: !7885)
!7887 = !DILocation(line: 3762, column: 9, scope: !7747)
!7888 = !DILocation(line: 3765, column: 5, scope: !7747)
!7889 = !DILocation(line: 3766, column: 11, scope: !7747)
!7890 = !DILocation(line: 3766, column: 5, scope: !7747)
!7891 = !DILocation(line: 3767, column: 5, scope: !7747)
!7892 = !DILocation(line: 3771, column: 9, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3771, column: 9)
!7894 = !DILocation(line: 3771, column: 34, scope: !7893)
!7895 = !DILocation(line: 3771, column: 9, scope: !7747)
!7896 = !DILocation(line: 3772, column: 99, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 3771, column: 41)
!7898 = !DILocation(line: 3772, column: 90, scope: !7897)
!7899 = !DILocation(line: 3772, column: 9, scope: !7897)
!7900 = !DILocation(line: 3773, column: 9, scope: !7897)
!7901 = !DILocation(line: 3774, column: 9, scope: !7897)
!7902 = !DILocation(line: 3776, column: 5, scope: !7747)
!7903 = !DILocation(line: 3777, column: 18, scope: !7747)
!7904 = !DILocation(line: 3778, column: 23, scope: !7747)
!7905 = !DILocation(line: 3778, column: 21, scope: !7747)
!7906 = !DILocation(line: 3779, column: 5, scope: !7747)
!7907 = !DILocation(line: 3781, column: 1, scope: !7747)
!7908 = !DILocation(line: 3782, column: 5, scope: !7747)
!7909 = !DILocation(line: 3783, column: 5, scope: !7747)
!7910 = !DILocation(line: 3784, column: 74, scope: !7747)
!7911 = !DILocation(line: 3784, column: 65, scope: !7747)
!7912 = !DILocation(line: 3784, column: 5, scope: !7747)
!7913 = !DILocation(line: 3785, column: 9, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3785, column: 9)
!7915 = !DILocation(line: 3785, column: 9, scope: !7747)
!7916 = !DILocation(line: 3785, column: 13, scope: !7914)
!7917 = !DILocation(line: 3787, column: 1, scope: !7747)
!7918 = distinct !DISubprogram(name: "updateDictResizePolicy", scope: !3, file: !3, line: 1407, type: !1747, scopeLine: 1407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!7919 = !DILocation(line: 1408, column: 16, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1408, column: 9)
!7921 = !DILocation(line: 1408, column: 31, scope: !7920)
!7922 = !DILocation(line: 1408, column: 37, scope: !7920)
!7923 = !DILocation(line: 1409, column: 9, scope: !7920)
!7924 = !DILocation(line: 1411, column: 9, scope: !7920)
!7925 = !DILocation(line: 1412, column: 1, scope: !7918)
!7926 = distinct !DISubprogram(name: "vmThreadedIOCompletedJob", scope: !3, file: !3, line: 9388, type: !2737, scopeLine: 9390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7927)
!7927 = !{!7928, !7929, !7930, !7931, !7932, !7933, !7934, !7935, !7936, !7937, !7939, !7940, !7941, !7942, !7945, !7949}
!7928 = !DILocalVariable(name: "el", arg: 1, scope: !7926, file: !3, line: 9388, type: !461)
!7929 = !DILocalVariable(name: "fd", arg: 2, scope: !7926, file: !3, line: 9388, type: !45)
!7930 = !DILocalVariable(name: "privdata", arg: 3, scope: !7926, file: !3, line: 9388, type: !46)
!7931 = !DILocalVariable(name: "mask", arg: 4, scope: !7926, file: !3, line: 9389, type: !45)
!7932 = !DILocalVariable(name: "buf", scope: !7926, file: !3, line: 9391, type: !610)
!7933 = !DILocalVariable(name: "retval", scope: !7926, file: !3, line: 9392, type: !45)
!7934 = !DILocalVariable(name: "processed", scope: !7926, file: !3, line: 9392, type: !45)
!7935 = !DILocalVariable(name: "toprocess", scope: !7926, file: !3, line: 9392, type: !45)
!7936 = !DILocalVariable(name: "trytoswap", scope: !7926, file: !3, line: 9392, type: !45)
!7937 = !DILocalVariable(name: "j", scope: !7938, file: !3, line: 9402, type: !5534)
!7938 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 9401, column: 43)
!7939 = !DILocalVariable(name: "ln", scope: !7938, file: !3, line: 9403, type: !64)
!7940 = !DILocalVariable(name: "key", scope: !7938, file: !3, line: 9404, type: !145)
!7941 = !DILocalVariable(name: "de", scope: !7938, file: !3, line: 9405, type: !131)
!7942 = !DILocalVariable(name: "db", scope: !7943, file: !3, line: 9432, type: !293)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 9431, column: 42)
!7944 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 9431, column: 13)
!7945 = !DILocalVariable(name: "val", scope: !7946, file: !3, line: 9470, type: !145)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 9469, column: 52)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 9469, column: 20)
!7948 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 9448, column: 20)
!7949 = !DILocalVariable(name: "more", scope: !7950, file: !3, line: 9501, type: !45)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 9500, column: 13)
!7951 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 9498, column: 17)
!7952 = !DILocation(line: 0, scope: !7926)
!7953 = !DILocation(line: 9391, column: 5, scope: !7926)
!7954 = !DILocation(line: 9391, column: 10, scope: !7926)
!7955 = !DILocation(line: 9401, column: 21, scope: !7926)
!7956 = !DILocation(line: 9401, column: 37, scope: !7926)
!7957 = !DILocation(line: 9401, column: 5, scope: !7926)
!7958 = !DILocation(line: 9397, column: 18, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 9397, column: 9)
!7960 = !DILocation(line: 9397, column: 9, scope: !7926)
!7961 = !DILocation(line: 9411, column: 9, scope: !7938)
!7962 = !DILocation(line: 9407, column: 9, scope: !7938)
!7963 = !DILocation(line: 9410, column: 9, scope: !7938)
!7964 = !DILocation(line: 9412, column: 23, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 9412, column: 13)
!7966 = !DILocation(line: 9412, column: 13, scope: !7938)
!7967 = !DILocation(line: 9413, column: 93, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 9412, column: 30)
!7969 = !DILocation(line: 9414, column: 27, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 9414, column: 17)
!7971 = !DILocation(line: 9414, column: 17, scope: !7968)
!7972 = !DILocation(line: 9415, column: 9, scope: !7968)
!7973 = !DILocation(line: 9416, column: 14, scope: !7938)
!7974 = !DILocation(line: 0, scope: !7938)
!7975 = !DILocation(line: 9417, column: 17, scope: !7938)
!7976 = !DILocation(line: 9417, column: 13, scope: !7938)
!7977 = !DILocation(line: 9418, column: 9, scope: !7938)
!7978 = !DILocation(line: 9419, column: 9, scope: !7938)
!7979 = !DILocation(line: 9421, column: 16, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 9421, column: 13)
!7981 = !DILocation(line: 9421, column: 13, scope: !7980)
!7982 = !DILocation(line: 9421, column: 13, scope: !7938)
!7983 = !DILocation(line: 9422, column: 13, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 9421, column: 26)
!7985 = !DILocation(line: 9423, column: 13, scope: !7984)
!7986 = distinct !{!7986, !7957, !7987}
!7987 = !DILocation(line: 9517, column: 5, scope: !7926)
!7988 = !DILocation(line: 9427, column: 94, scope: !7938)
!7989 = !DILocation(line: 9427, column: 110, scope: !7938)
!7990 = !DILocation(line: 9427, column: 130, scope: !7938)
!7991 = !DILocation(line: 9427, column: 143, scope: !7938)
!7992 = !DILocation(line: 9427, column: 9, scope: !7938)
!7993 = !DILocation(line: 9428, column: 26, scope: !7938)
!7994 = !DILocation(line: 9428, column: 30, scope: !7938)
!7995 = !DILocation(line: 9428, column: 38, scope: !7938)
!7996 = !DILocation(line: 9428, column: 14, scope: !7938)
!7997 = !DILocation(line: 9429, column: 9, scope: !7938)
!7998 = !DILocation(line: 9430, column: 15, scope: !7938)
!7999 = !DILocation(line: 9431, column: 16, scope: !7944)
!8000 = !DILocation(line: 9431, column: 13, scope: !7938)
!8001 = !DILocation(line: 9435, column: 18, scope: !7943)
!8002 = !DILocation(line: 9435, column: 26, scope: !7943)
!8003 = !DILocation(line: 9436, column: 36, scope: !7943)
!8004 = !DILocation(line: 9436, column: 21, scope: !7943)
!8005 = !DILocation(line: 9436, column: 27, scope: !7943)
!8006 = !DILocation(line: 9437, column: 37, scope: !7943)
!8007 = !DILocation(line: 9437, column: 50, scope: !7943)
!8008 = !DILocation(line: 9437, column: 13, scope: !7943)
!8009 = !DILocation(line: 9439, column: 39, scope: !7943)
!8010 = !DILocation(line: 9438, column: 13, scope: !7943)
!8011 = !DILocation(line: 9440, column: 44, scope: !7943)
!8012 = !DILocation(line: 9441, column: 36, scope: !7943)
!8013 = !{!709, !715, i64 952}
!8014 = !DILocation(line: 9442, column: 38, scope: !7943)
!8015 = !DILocation(line: 9442, column: 13, scope: !7943)
!8016 = !DILocation(line: 9442, column: 33, scope: !7943)
!8017 = !DILocation(line: 9443, column: 29, scope: !7943)
!8018 = !DILocation(line: 9443, column: 13, scope: !7943)
!8019 = !DILocation(line: 9444, column: 21, scope: !7943)
!8020 = !DILocation(line: 0, scope: !7943)
!8021 = !DILocation(line: 9445, column: 13, scope: !7943)
!8022 = !DILocation(line: 9447, column: 13, scope: !7943)
!8023 = !DILocation(line: 9448, column: 9, scope: !7943)
!8024 = !DILocation(line: 9452, column: 18, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 9452, column: 17)
!8026 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 9448, column: 57)
!8027 = !DILocation(line: 9452, column: 33, scope: !8025)
!8028 = !DILocation(line: 9453, column: 43, scope: !8025)
!8029 = !DILocation(line: 9453, column: 51, scope: !8025)
!8030 = !DILocation(line: 9453, column: 17, scope: !8025)
!8031 = !DILocation(line: 9453, column: 58, scope: !8025)
!8032 = !DILocation(line: 9452, column: 17, scope: !8026)
!8033 = !DILocation(line: 9457, column: 17, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 9454, column: 13)
!8035 = !DILocation(line: 9458, column: 22, scope: !8034)
!8036 = !DILocation(line: 9458, column: 30, scope: !8034)
!8037 = !DILocation(line: 9459, column: 13, scope: !8034)
!8038 = !DILocation(line: 9463, column: 36, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 9459, column: 20)
!8040 = !DILocation(line: 9463, column: 44, scope: !8039)
!8041 = !DILocation(line: 9463, column: 17, scope: !8039)
!8042 = !DILocation(line: 9464, column: 25, scope: !8039)
!8043 = !DILocation(line: 9465, column: 17, scope: !8039)
!8044 = !DILocation(line: 9466, column: 17, scope: !8039)
!8045 = !DILocation(line: 9467, column: 17, scope: !8039)
!8046 = !DILocation(line: 9473, column: 22, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 9473, column: 17)
!8048 = !DILocation(line: 9473, column: 30, scope: !8047)
!8049 = !DILocation(line: 9473, column: 17, scope: !7946)
!8050 = !DILocation(line: 9473, column: 17, scope: !8047)
!8051 = !DILocation(line: 9474, column: 17, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 9473, column: 52)
!8053 = !DILocation(line: 9475, column: 54, scope: !8052)
!8054 = !DILocation(line: 9475, column: 17, scope: !8052)
!8055 = !DILocation(line: 9476, column: 51, scope: !8052)
!8056 = !DILocation(line: 9476, column: 17, scope: !8052)
!8057 = !DILocation(line: 9477, column: 46, scope: !8052)
!8058 = !DILocation(line: 9477, column: 17, scope: !8052)
!8059 = !DILocation(line: 9478, column: 45, scope: !8052)
!8060 = !DILocation(line: 9478, column: 50, scope: !8052)
!8061 = !DILocation(line: 9478, column: 42, scope: !8052)
!8062 = !DILocation(line: 9478, column: 17, scope: !8052)
!8063 = !DILocation(line: 9479, column: 51, scope: !8052)
!8064 = !DILocation(line: 9479, column: 56, scope: !8052)
!8065 = !DILocation(line: 9479, column: 17, scope: !8052)
!8066 = !DILocation(line: 9481, column: 13, scope: !7946)
!8067 = !DILocation(line: 9482, column: 19, scope: !7946)
!8068 = !DILocation(line: 0, scope: !7946)
!8069 = !DILocation(line: 9483, column: 31, scope: !7946)
!8070 = !DILocation(line: 9483, column: 21, scope: !7946)
!8071 = !DILocation(line: 9484, column: 36, scope: !7946)
!8072 = !DILocation(line: 9483, column: 26, scope: !7946)
!8073 = !DILocation(line: 9485, column: 26, scope: !7946)
!8074 = !DILocation(line: 9486, column: 29, scope: !7946)
!8075 = !DILocation(line: 9486, column: 34, scope: !7946)
!8076 = !DILocation(line: 9486, column: 18, scope: !7946)
!8077 = !DILocation(line: 9486, column: 24, scope: !7946)
!8078 = !DILocation(line: 9487, column: 13, scope: !7946)
!8079 = !DILocation(line: 9488, column: 33, scope: !7946)
!8080 = !DILocation(line: 9491, column: 39, scope: !7946)
!8081 = !DILocation(line: 9492, column: 41, scope: !7946)
!8082 = !DILocation(line: 9492, column: 71, scope: !7946)
!8083 = !DILocation(line: 9489, column: 13, scope: !7946)
!8084 = !DILocation(line: 9493, column: 44, scope: !7946)
!8085 = !DILocation(line: 9495, column: 13, scope: !7946)
!8086 = !DILocation(line: 9498, column: 17, scope: !7951)
!8087 = !DILocation(line: 9498, column: 27, scope: !7951)
!8088 = !DILocation(line: 9498, column: 30, scope: !7951)
!8089 = !DILocation(line: 9498, column: 45, scope: !7951)
!8090 = !DILocation(line: 9499, column: 17, scope: !7951)
!8091 = !DILocation(line: 9499, column: 48, scope: !7951)
!8092 = !DILocation(line: 9499, column: 39, scope: !7951)
!8093 = !DILocation(line: 9498, column: 17, scope: !7946)
!8094 = !DILocation(line: 0, scope: !7950)
!8095 = !DILocation(line: 9502, column: 17, scope: !7950)
!8096 = !DILocation(line: 9503, column: 21, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 9502, column: 29)
!8098 = !DILocation(line: 9504, column: 28, scope: !8097)
!8099 = !DILocation(line: 9505, column: 47, scope: !8097)
!8100 = !DILocation(line: 9504, column: 58, scope: !8097)
!8101 = !DILocation(line: 9506, column: 21, scope: !8097)
!8102 = !DILocation(line: 9508, column: 25, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 9508, column: 25)
!8104 = !DILocation(line: 9508, column: 51, scope: !8103)
!8105 = !DILocation(line: 9508, column: 25, scope: !8097)
!8106 = distinct !{!8106, !8095, !8107}
!8107 = !DILocation(line: 9512, column: 17, scope: !7950)
!8108 = !DILocation(line: 9515, column: 18, scope: !7938)
!8109 = !DILocation(line: 9516, column: 23, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 9516, column: 13)
!8111 = !DILocation(line: 9518, column: 16, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 9518, column: 9)
!8113 = !DILocation(line: 9518, column: 20, scope: !8112)
!8114 = !DILocation(line: 9518, column: 23, scope: !8112)
!8115 = !DILocation(line: 9518, column: 29, scope: !8112)
!8116 = !DILocation(line: 9518, column: 9, scope: !7926)
!8117 = !DILocation(line: 9521, column: 13, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 9518, column: 40)
!8119 = !DILocation(line: 9519, column: 9, scope: !8118)
!8120 = !DILocation(line: 9522, column: 5, scope: !8118)
!8121 = !DILocation(line: 9523, column: 1, scope: !7926)
!8122 = distinct !DISubprogram(name: "handleClientsBlockedOnSwappedKey", scope: !3, file: !3, line: 9948, type: !8123, scopeLine: 9948, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{null, !293, !145}
!8125 = !{!8126, !8127, !8128, !8129, !8130, !8131, !8132}
!8126 = !DILocalVariable(name: "db", arg: 1, scope: !8122, file: !3, line: 9948, type: !293)
!8127 = !DILocalVariable(name: "key", arg: 2, scope: !8122, file: !3, line: 9948, type: !145)
!8128 = !DILocalVariable(name: "de", scope: !8122, file: !3, line: 9949, type: !131)
!8129 = !DILocalVariable(name: "l", scope: !8122, file: !3, line: 9950, type: !58)
!8130 = !DILocalVariable(name: "ln", scope: !8122, file: !3, line: 9951, type: !64)
!8131 = !DILocalVariable(name: "len", scope: !8122, file: !3, line: 9952, type: !45)
!8132 = !DILocalVariable(name: "c", scope: !8133, file: !3, line: 9963, type: !287)
!8133 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 9961, column: 19)
!8134 = !DILocation(line: 0, scope: !8122)
!8135 = !DILocation(line: 9954, column: 23, scope: !8122)
!8136 = !DILocation(line: 9954, column: 31, scope: !8122)
!8137 = !DILocation(line: 9954, column: 10, scope: !8122)
!8138 = !DILocation(line: 9955, column: 10, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 9955, column: 9)
!8140 = !DILocation(line: 9955, column: 9, scope: !8122)
!8141 = !DILocation(line: 9957, column: 9, scope: !8122)
!8142 = !DILocation(line: 9958, column: 11, scope: !8122)
!8143 = !DILocation(line: 9961, column: 5, scope: !8122)
!8144 = !DILocation(line: 9961, column: 15, scope: !8122)
!8145 = !DILocation(line: 9962, column: 14, scope: !8133)
!8146 = !DILocation(line: 9963, column: 30, scope: !8133)
!8147 = !DILocation(line: 9963, column: 26, scope: !8133)
!8148 = !DILocation(line: 0, scope: !8133)
!8149 = !DILocation(line: 9965, column: 13, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 9965, column: 13)
!8151 = !DILocation(line: 9965, column: 13, scope: !8133)
!8152 = !DILocation(line: 9968, column: 36, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 9965, column: 43)
!8154 = !DILocation(line: 9968, column: 13, scope: !8153)
!8155 = !DILocation(line: 9969, column: 9, scope: !8153)
!8156 = distinct !{!8156, !8143, !8157}
!8157 = !DILocation(line: 9970, column: 5, scope: !8122)
!8158 = !DILocation(line: 9971, column: 1, scope: !8122)
!8159 = distinct !DISubprogram(name: "vmCanSwapOut", scope: !3, file: !3, line: 9346, type: !1709, scopeLine: 9346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!8160 = !DILocation(line: 9347, column: 20, scope: !8159)
!8161 = !DILocation(line: 9347, column: 35, scope: !8159)
!8162 = !DILocation(line: 9347, column: 41, scope: !8159)
!8163 = !DILocation(line: 9347, column: 5, scope: !8159)
!8164 = distinct !DISubprogram(name: "vmFindContiguousPages", scope: !3, file: !3, line: 9003, type: !8165, scopeLine: 9003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8168)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!45, !8167, !160}
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!8168 = !{!8169, !8170, !8171, !8172, !8173, !8174, !8175}
!8169 = !DILocalVariable(name: "first", arg: 1, scope: !8164, file: !3, line: 9003, type: !8167)
!8170 = !DILocalVariable(name: "n", arg: 2, scope: !8164, file: !3, line: 9003, type: !160)
!8171 = !DILocalVariable(name: "base", scope: !8164, file: !3, line: 9004, type: !160)
!8172 = !DILocalVariable(name: "offset", scope: !8164, file: !3, line: 9004, type: !160)
!8173 = !DILocalVariable(name: "since_jump", scope: !8164, file: !3, line: 9004, type: !160)
!8174 = !DILocalVariable(name: "numfree", scope: !8164, file: !3, line: 9004, type: !160)
!8175 = !DILocalVariable(name: "this", scope: !8176, file: !3, line: 9014, type: !160)
!8176 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 9013, column: 37)
!8177 = !DILocation(line: 0, scope: !8164)
!8178 = !DILocation(line: 9006, column: 16, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 9006, column: 9)
!8180 = !{!709, !710, i64 680}
!8181 = !DILocation(line: 9006, column: 30, scope: !8179)
!8182 = !DILocation(line: 9006, column: 9, scope: !8164)
!8183 = !DILocation(line: 9011, column: 19, scope: !8164)
!8184 = !{!709, !710, i64 672}
!8185 = !DILocation(line: 9008, column: 29, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 9006, column: 58)
!8187 = !DILocation(line: 9009, column: 5, scope: !8186)
!8188 = !DILocation(line: 9010, column: 25, scope: !8164)
!8189 = !DILocation(line: 9013, column: 27, scope: !8164)
!8190 = !DILocation(line: 9013, column: 18, scope: !8164)
!8191 = !DILocation(line: 9013, column: 5, scope: !8164)
!8192 = !DILocation(line: 9014, column: 26, scope: !8176)
!8193 = !DILocation(line: 0, scope: !8176)
!8194 = !DILocation(line: 9017, column: 18, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 9017, column: 13)
!8196 = !DILocation(line: 9017, column: 13, scope: !8176)
!8197 = !DILocation(line: 9025, column: 13, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 9025, column: 13)
!8199 = !DILocation(line: 9025, column: 13, scope: !8176)
!8200 = !DILocation(line: 9027, column: 20, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 9025, column: 31)
!8202 = !DILocation(line: 9029, column: 25, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 9029, column: 17)
!8204 = !DILocation(line: 9029, column: 17, scope: !8201)
!8205 = !DILocation(line: 9030, column: 33, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 9029, column: 31)
!8207 = !DILocation(line: 9030, column: 30, scope: !8206)
!8208 = !DILocation(line: 9030, column: 24, scope: !8206)
!8209 = !DILocation(line: 9031, column: 43, scope: !8206)
!8210 = !DILocation(line: 9031, column: 37, scope: !8206)
!8211 = !DILocation(line: 9032, column: 114, scope: !8206)
!8212 = !DILocation(line: 9032, column: 17, scope: !8206)
!8213 = !DILocation(line: 0, scope: !8198)
!8214 = !DILocation(line: 9043, column: 14, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 9043, column: 13)
!8216 = !DILocation(line: 9043, column: 22, scope: !8215)
!8217 = !DILocation(line: 9044, column: 23, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 9043, column: 67)
!8219 = !DILocation(line: 9044, column: 32, scope: !8218)
!8220 = !DILocation(line: 9049, column: 9, scope: !8218)
!8221 = !DILocation(line: 9042, column: 19, scope: !8176)
!8222 = !DILocation(line: 0, scope: !8215)
!8223 = distinct !{!8223, !8191, !8224}
!8224 = !DILocation(line: 9053, column: 5, scope: !8164)
!8225 = !DILocation(line: 9055, column: 1, scope: !8164)
!8226 = distinct !DISubprogram(name: "vmMarkPagesUsed", scope: !3, file: !3, line: 8948, type: !5723, scopeLine: 8948, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8227)
!8227 = !{!8228, !8229, !8230}
!8228 = !DILocalVariable(name: "page", arg: 1, scope: !8226, file: !3, line: 8948, type: !160)
!8229 = !DILocalVariable(name: "count", arg: 2, scope: !8226, file: !3, line: 8948, type: !160)
!8230 = !DILocalVariable(name: "j", scope: !8226, file: !3, line: 8949, type: !160)
!8231 = !DILocation(line: 0, scope: !8226)
!8232 = !DILocation(line: 8951, column: 19, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 8951, column: 5)
!8234 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 8951, column: 5)
!8235 = !DILocation(line: 8951, column: 5, scope: !8234)
!8236 = !DILocation(line: 8952, column: 28, scope: !8233)
!8237 = !DILocation(line: 8952, column: 9, scope: !8233)
!8238 = !DILocation(line: 8951, column: 29, scope: !8233)
!8239 = distinct !{!8239, !8235, !8240}
!8240 = !DILocation(line: 8952, column: 30, scope: !8234)
!8241 = !DILocation(line: 8953, column: 32, scope: !8226)
!8242 = !DILocation(line: 8954, column: 5, scope: !8226)
!8243 = !DILocation(line: 8956, column: 1, scope: !8226)
!8244 = !DISubprogram(name: "printf", scope: !161, file: !161, line: 332, type: !8245, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!8245 = !DISubroutineType(types: !8246)
!8246 = !{!45, !1076, null}
!8247 = distinct !DISubprogram(name: "vmSwapOneObjectThreaded", scope: !3, file: !3, line: 9339, type: !1709, scopeLine: 9339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!8248 = !DILocation(line: 9340, column: 12, scope: !8247)
!8249 = !DILocation(line: 9340, column: 5, scope: !8247)
!8250 = distinct !DISubprogram(name: "vmMarkPageUsed", scope: !3, file: !3, line: 8940, type: !5763, scopeLine: 8940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8251)
!8251 = !{!8252, !8253, !8254}
!8252 = !DILocalVariable(name: "page", arg: 1, scope: !8250, file: !3, line: 8940, type: !160)
!8253 = !DILocalVariable(name: "byte", scope: !8250, file: !3, line: 8941, type: !160)
!8254 = !DILocalVariable(name: "bit", scope: !8250, file: !3, line: 8942, type: !45)
!8255 = !DILocation(line: 0, scope: !8250)
!8256 = !DILocation(line: 8943, column: 5, scope: !8250)
!8257 = !DILocation(line: 8942, column: 15, scope: !8250)
!8258 = !DILocation(line: 8941, column: 22, scope: !8250)
!8259 = !DILocation(line: 8944, column: 32, scope: !8250)
!8260 = !DILocation(line: 8944, column: 12, scope: !8250)
!8261 = !DILocation(line: 8944, column: 5, scope: !8250)
!8262 = !DILocation(line: 8944, column: 28, scope: !8250)
!8263 = !DILocation(line: 8945, column: 1, scope: !8250)
!8264 = distinct !DISubprogram(name: "vmSwapOneObject", scope: !3, file: !3, line: 9265, type: !1096, scopeLine: 9265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8265)
!8265 = !{!8266, !8267, !8268, !8269, !8270, !8271, !8272, !8273, !8274, !8278, !8279, !8283, !8284}
!8266 = !DILocalVariable(name: "usethreads", arg: 1, scope: !8264, file: !3, line: 9265, type: !45)
!8267 = !DILocalVariable(name: "j", scope: !8264, file: !3, line: 9266, type: !45)
!8268 = !DILocalVariable(name: "i", scope: !8264, file: !3, line: 9266, type: !45)
!8269 = !DILocalVariable(name: "best", scope: !8264, file: !3, line: 9267, type: !131)
!8270 = !DILocalVariable(name: "best_swappability", scope: !8264, file: !3, line: 9268, type: !168)
!8271 = !DILocalVariable(name: "best_db", scope: !8264, file: !3, line: 9269, type: !293)
!8272 = !DILocalVariable(name: "key", scope: !8264, file: !3, line: 9270, type: !145)
!8273 = !DILocalVariable(name: "val", scope: !8264, file: !3, line: 9270, type: !145)
!8274 = !DILocalVariable(name: "db", scope: !8275, file: !3, line: 9273, type: !293)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 9272, column: 40)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 9272, column: 5)
!8277 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 9272, column: 5)
!8278 = !DILocalVariable(name: "maxtries", scope: !8275, file: !3, line: 9277, type: !45)
!8279 = !DILocalVariable(name: "de", scope: !8280, file: !3, line: 9281, type: !124)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 9280, column: 33)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 9280, column: 9)
!8282 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 9280, column: 9)
!8283 = !DILocalVariable(name: "swappability", scope: !8280, file: !3, line: 9282, type: !168)
!8284 = !DILocalVariable(name: "newkey", scope: !8285, file: !3, line: 9317, type: !145)
!8285 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 9316, column: 28)
!8286 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 9316, column: 9)
!8287 = !DILocation(line: 0, scope: !8264)
!8288 = !DILocation(line: 9272, column: 28, scope: !8276)
!8289 = !DILocation(line: 9272, column: 19, scope: !8276)
!8290 = !DILocation(line: 9272, column: 5, scope: !8277)
!8291 = !DILocation(line: 9273, column: 30, scope: !8275)
!8292 = !DILocation(line: 9273, column: 32, scope: !8275)
!8293 = !DILocation(line: 0, scope: !8275)
!8294 = !DILocation(line: 9279, column: 13, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 9279, column: 13)
!8296 = !DILocation(line: 9279, column: 32, scope: !8295)
!8297 = !DILocation(line: 9279, column: 13, scope: !8275)
!8298 = !DILocation(line: 9285, column: 39, scope: !8280)
!8299 = !DILocation(line: 9284, column: 17, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 9284, column: 17)
!8301 = !DILocation(line: 9284, column: 17, scope: !8280)
!8302 = !DILocation(line: 9285, column: 18, scope: !8280)
!8303 = !DILocation(line: 0, scope: !8280)
!8304 = !DILocation(line: 9286, column: 19, scope: !8280)
!8305 = !DILocation(line: 9287, column: 19, scope: !8280)
!8306 = !DILocation(line: 9294, column: 22, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 9294, column: 17)
!8308 = !DILocation(line: 9294, column: 30, scope: !8307)
!8309 = !DILocation(line: 9294, column: 49, scope: !8307)
!8310 = !DILocation(line: 9295, column: 25, scope: !8307)
!8311 = !DILocation(line: 9295, column: 40, scope: !8307)
!8312 = !DILocation(line: 9295, column: 45, scope: !8307)
!8313 = !DILocation(line: 9295, column: 53, scope: !8307)
!8314 = !DILocation(line: 9295, column: 62, scope: !8307)
!8315 = !DILocation(line: 9294, column: 17, scope: !8280)
!8316 = !DILocation(line: 9296, column: 21, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 9296, column: 21)
!8318 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 9295, column: 69)
!8319 = !DILocation(line: 9296, column: 21, scope: !8318)
!8320 = !DILocation(line: 9297, column: 17, scope: !8318)
!8321 = !DILocation(line: 9299, column: 37, scope: !8280)
!8322 = !DILocation(line: 9299, column: 21, scope: !8280)
!8323 = !DILocation(line: 9299, column: 27, scope: !8280)
!8324 = !DILocation(line: 9300, column: 28, scope: !8280)
!8325 = !DILocation(line: 9301, column: 18, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 9301, column: 17)
!8327 = !DILocation(line: 9301, column: 23, scope: !8326)
!8328 = !DILocation(line: 9306, column: 9, scope: !8281)
!8329 = !DILocation(line: 0, scope: !8282)
!8330 = !DILocation(line: 9280, column: 23, scope: !8281)
!8331 = !DILocation(line: 9280, column: 9, scope: !8282)
!8332 = distinct !{!8332, !8331, !8333}
!8333 = !DILocation(line: 9306, column: 9, scope: !8282)
!8334 = !DILocation(line: 9280, column: 29, scope: !8281)
!8335 = !DILocation(line: 9272, column: 36, scope: !8276)
!8336 = !DILocation(line: 9268, column: 12, scope: !8264)
!8337 = !DILocation(line: 9269, column: 14, scope: !8264)
!8338 = !DILocation(line: 9267, column: 23, scope: !8264)
!8339 = distinct !{!8339, !8290, !8340}
!8340 = !DILocation(line: 9307, column: 5, scope: !8277)
!8341 = !DILocation(line: 9308, column: 14, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 9308, column: 9)
!8343 = !DILocation(line: 9308, column: 9, scope: !8264)
!8344 = !DILocation(line: 9309, column: 11, scope: !8264)
!8345 = !DILocation(line: 9310, column: 11, scope: !8264)
!8346 = !DILocation(line: 9313, column: 14, scope: !8264)
!8347 = !DILocation(line: 9312, column: 5, scope: !8264)
!8348 = !DILocation(line: 9316, column: 14, scope: !8286)
!8349 = !DILocation(line: 9316, column: 23, scope: !8286)
!8350 = !DILocation(line: 9316, column: 9, scope: !8264)
!8351 = !DILocation(line: 9317, column: 24, scope: !8285)
!8352 = !DILocation(line: 0, scope: !8285)
!8353 = !DILocation(line: 9318, column: 9, scope: !8285)
!8354 = !DILocation(line: 9319, column: 37, scope: !8285)
!8355 = !DILocation(line: 9320, column: 5, scope: !8285)
!8356 = !DILocation(line: 9322, column: 9, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 9322, column: 9)
!8358 = !DILocation(line: 9322, column: 9, scope: !8264)
!8359 = !DILocation(line: 9323, column: 9, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 9322, column: 21)
!8361 = !DILocation(line: 9324, column: 9, scope: !8360)
!8362 = !DILocation(line: 9326, column: 13, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 9326, column: 13)
!8364 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 9325, column: 12)
!8365 = !DILocation(line: 9326, column: 43, scope: !8363)
!8366 = !DILocation(line: 9326, column: 13, scope: !8364)
!8367 = !DILocation(line: 9327, column: 35, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 9326, column: 56)
!8369 = !DILocation(line: 9328, column: 13, scope: !8368)
!8370 = !DILocation(line: 9333, column: 1, scope: !8264)
!8371 = distinct !DISubprogram(name: "computeObjectSwappability", scope: !3, file: !3, line: 9171, type: !8372, scopeLine: 9171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8374)
!8372 = !DISubroutineType(types: !8373)
!8373 = !{!168, !145}
!8374 = !{!8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382, !8384, !8387, !8388, !8391, !8392, !8395, !8396, !8397, !8398, !8399, !8400, !8405}
!8375 = !DILocalVariable(name: "o", arg: 1, scope: !8371, file: !3, line: 9171, type: !145)
!8376 = !DILocalVariable(name: "age", scope: !8371, file: !3, line: 9172, type: !49)
!8377 = !DILocalVariable(name: "asize", scope: !8371, file: !3, line: 9173, type: !53)
!8378 = !DILocalVariable(name: "l", scope: !8371, file: !3, line: 9174, type: !58)
!8379 = !DILocalVariable(name: "d", scope: !8371, file: !3, line: 9175, type: !86)
!8380 = !DILocalVariable(name: "de", scope: !8371, file: !3, line: 9176, type: !131)
!8381 = !DILocalVariable(name: "z", scope: !8371, file: !3, line: 9177, type: !45)
!8382 = !DILocalVariable(name: "ln", scope: !8383, file: !3, line: 9190, type: !64)
!8383 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 9180, column: 21)
!8384 = !DILocalVariable(name: "ele", scope: !8385, file: !3, line: 9194, type: !145)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 9193, column: 17)
!8386 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 9193, column: 13)
!8387 = !DILocalVariable(name: "elesize", scope: !8385, file: !3, line: 9195, type: !53)
!8388 = !DILocalVariable(name: "elesize", scope: !8389, file: !3, line: 9211, type: !53)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 9210, column: 26)
!8390 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 9210, column: 13)
!8391 = !DILocalVariable(name: "ele", scope: !8389, file: !3, line: 9212, type: !145)
!8392 = !DILocalVariable(name: "p", scope: !8393, file: !3, line: 9225, type: !167)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 9224, column: 51)
!8394 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 9224, column: 13)
!8395 = !DILocalVariable(name: "len", scope: !8393, file: !3, line: 9226, type: !7)
!8396 = !DILocalVariable(name: "klen", scope: !8393, file: !3, line: 9227, type: !7)
!8397 = !DILocalVariable(name: "vlen", scope: !8393, file: !3, line: 9227, type: !7)
!8398 = !DILocalVariable(name: "key", scope: !8393, file: !3, line: 9228, type: !167)
!8399 = !DILocalVariable(name: "val", scope: !8393, file: !3, line: 9228, type: !167)
!8400 = !DILocalVariable(name: "elesize", scope: !8401, file: !3, line: 9239, type: !53)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 9238, column: 30)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 9238, column: 17)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 9235, column: 54)
!8404 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 9235, column: 20)
!8405 = !DILocalVariable(name: "ele", scope: !8401, file: !3, line: 9240, type: !145)
!8406 = !DILocation(line: 0, scope: !8371)
!8407 = !DILocation(line: 9172, column: 25, scope: !8371)
!8408 = !DILocation(line: 9172, column: 42, scope: !8371)
!8409 = !DILocation(line: 9172, column: 34, scope: !8371)
!8410 = !DILocation(line: 9179, column: 13, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 9179, column: 9)
!8412 = !DILocation(line: 9179, column: 9, scope: !8371)
!8413 = !DILocation(line: 9180, column: 15, scope: !8371)
!8414 = !DILocation(line: 9180, column: 5, scope: !8371)
!8415 = !DILocation(line: 9182, column: 16, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 9182, column: 13)
!8417 = !DILocation(line: 9182, column: 25, scope: !8416)
!8418 = !DILocation(line: 9182, column: 13, scope: !8383)
!8419 = !DILocation(line: 9185, column: 31, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 9184, column: 16)
!8421 = !DILocation(line: 9185, column: 21, scope: !8420)
!8422 = !DILocation(line: 9185, column: 46, scope: !8420)
!8423 = !DILocation(line: 9189, column: 16, scope: !8383)
!8424 = !DILocation(line: 9190, column: 24, scope: !8383)
!8425 = !DILocation(line: 0, scope: !8383)
!8426 = !DILocation(line: 9193, column: 13, scope: !8386)
!8427 = !DILocation(line: 9193, column: 13, scope: !8383)
!8428 = !DILocation(line: 9194, column: 29, scope: !8385)
!8429 = !DILocation(line: 0, scope: !8385)
!8430 = !DILocation(line: 9197, column: 29, scope: !8385)
!8431 = !DILocation(line: 9197, column: 38, scope: !8385)
!8432 = !DILocation(line: 9197, column: 23, scope: !8385)
!8433 = !DILocation(line: 9198, column: 53, scope: !8385)
!8434 = !DILocation(line: 9198, column: 41, scope: !8385)
!8435 = !DILocation(line: 9200, column: 49, scope: !8385)
!8436 = !DILocation(line: 9200, column: 48, scope: !8385)
!8437 = !DILocation(line: 9200, column: 19, scope: !8385)
!8438 = !DILocation(line: 9201, column: 9, scope: !8385)
!8439 = !DILocation(line: 9205, column: 22, scope: !8383)
!8440 = !DILocation(line: 9206, column: 13, scope: !8383)
!8441 = !DILocation(line: 9206, column: 28, scope: !8383)
!8442 = !DILocation(line: 9206, column: 34, scope: !8383)
!8443 = !DILocation(line: 9206, column: 44, scope: !8383)
!8444 = !DILocation(line: 9208, column: 57, scope: !8383)
!8445 = !{!3546, !710, i64 8}
!8446 = !DILocation(line: 9208, column: 56, scope: !8383)
!8447 = !DILocation(line: 9209, column: 13, scope: !8383)
!8448 = !DILocation(line: 9210, column: 13, scope: !8390)
!8449 = !DILocation(line: 9210, column: 13, scope: !8383)
!8450 = !DILocation(line: 9214, column: 18, scope: !8389)
!8451 = !DILocation(line: 9215, column: 19, scope: !8389)
!8452 = !DILocation(line: 0, scope: !8389)
!8453 = !DILocation(line: 9216, column: 29, scope: !8389)
!8454 = !DILocation(line: 9216, column: 38, scope: !8389)
!8455 = !DILocation(line: 9216, column: 23, scope: !8389)
!8456 = !DILocation(line: 9217, column: 53, scope: !8389)
!8457 = !DILocation(line: 9217, column: 41, scope: !8389)
!8458 = !DILocation(line: 9219, column: 57, scope: !8389)
!8459 = !DILocation(line: 9219, column: 56, scope: !8389)
!8460 = !DILocation(line: 9219, column: 19, scope: !8389)
!8461 = !DILocation(line: 9220, column: 17, scope: !8389)
!8462 = !DILocation(line: 9221, column: 9, scope: !8389)
!8463 = !DILocation(line: 9224, column: 16, scope: !8394)
!8464 = !DILocation(line: 9224, column: 13, scope: !8383)
!8465 = !DILocation(line: 9225, column: 64, scope: !8393)
!8466 = !DILocation(line: 9225, column: 32, scope: !8393)
!8467 = !DILocation(line: 0, scope: !8393)
!8468 = !DILocation(line: 9226, column: 61, scope: !8393)
!8469 = !DILocation(line: 9226, column: 32, scope: !8393)
!8470 = !DILocation(line: 9227, column: 13, scope: !8393)
!8471 = !DILocation(line: 9228, column: 13, scope: !8393)
!8472 = !DILocation(line: 9230, column: 22, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 9230, column: 17)
!8474 = !DILocation(line: 9230, column: 59, scope: !8473)
!8475 = !DILocation(line: 9230, column: 17, scope: !8393)
!8476 = !DILocation(line: 9234, column: 24, scope: !8393)
!8477 = !DILocation(line: 9234, column: 21, scope: !8393)
!8478 = !DILocation(line: 9235, column: 9, scope: !8394)
!8479 = !DILocation(line: 9235, column: 9, scope: !8393)
!8480 = !DILocation(line: 9236, column: 20, scope: !8403)
!8481 = !DILocation(line: 9237, column: 61, scope: !8403)
!8482 = !DILocation(line: 9237, column: 60, scope: !8403)
!8483 = !DILocation(line: 9237, column: 33, scope: !8403)
!8484 = !DILocation(line: 9238, column: 17, scope: !8402)
!8485 = !DILocation(line: 9238, column: 17, scope: !8403)
!8486 = !DILocation(line: 9242, column: 22, scope: !8401)
!8487 = !DILocation(line: 9243, column: 23, scope: !8401)
!8488 = !DILocation(line: 0, scope: !8401)
!8489 = !DILocation(line: 9244, column: 33, scope: !8401)
!8490 = !DILocation(line: 9244, column: 42, scope: !8401)
!8491 = !DILocation(line: 9244, column: 27, scope: !8401)
!8492 = !DILocation(line: 9245, column: 57, scope: !8401)
!8493 = !DILocation(line: 9245, column: 45, scope: !8401)
!8494 = !DILocation(line: 9247, column: 23, scope: !8401)
!8495 = !DILocation(line: 9248, column: 33, scope: !8401)
!8496 = !DILocation(line: 9248, column: 42, scope: !8401)
!8497 = !DILocation(line: 9248, column: 27, scope: !8401)
!8498 = !DILocation(line: 9249, column: 57, scope: !8401)
!8499 = !DILocation(line: 9249, column: 45, scope: !8401)
!8500 = !DILocation(line: 9251, column: 61, scope: !8401)
!8501 = !DILocation(line: 9251, column: 60, scope: !8401)
!8502 = !DILocation(line: 9251, column: 23, scope: !8401)
!8503 = !DILocation(line: 9252, column: 13, scope: !8401)
!8504 = !DILocation(line: 9256, column: 12, scope: !8371)
!8505 = !DILocation(line: 9256, column: 29, scope: !8371)
!8506 = !DILocation(line: 9256, column: 28, scope: !8371)
!8507 = !DILocation(line: 9256, column: 24, scope: !8371)
!8508 = !DILocation(line: 9256, column: 23, scope: !8371)
!8509 = !DILocation(line: 9256, column: 5, scope: !8371)
!8510 = !DILocation(line: 9257, column: 1, scope: !8371)
!8511 = distinct !DISubprogram(name: "vmSwapObjectThreaded", scope: !3, file: !3, line: 9738, type: !8512, scopeLine: 9738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{!45, !145, !145, !293}
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DILocalVariable(name: "key", arg: 1, scope: !8511, file: !3, line: 9738, type: !145)
!8516 = !DILocalVariable(name: "val", arg: 2, scope: !8511, file: !3, line: 9738, type: !145)
!8517 = !DILocalVariable(name: "db", arg: 3, scope: !8511, file: !3, line: 9738, type: !293)
!8518 = !DILocalVariable(name: "j", scope: !8511, file: !3, line: 9739, type: !5534)
!8519 = !DILocation(line: 0, scope: !8511)
!8520 = !DILocation(line: 9741, column: 5, scope: !8511)
!8521 = !DILocation(line: 9742, column: 5, scope: !8511)
!8522 = !DILocation(line: 9744, column: 9, scope: !8511)
!8523 = !DILocation(line: 9745, column: 8, scope: !8511)
!8524 = !DILocation(line: 9745, column: 13, scope: !8511)
!8525 = !DILocation(line: 9746, column: 8, scope: !8511)
!8526 = !DILocation(line: 9746, column: 11, scope: !8511)
!8527 = !DILocation(line: 9747, column: 8, scope: !8511)
!8528 = !DILocation(line: 9747, column: 12, scope: !8511)
!8529 = !DILocation(line: 9748, column: 8, scope: !8511)
!8530 = !DILocation(line: 9748, column: 12, scope: !8511)
!8531 = !DILocation(line: 9749, column: 5, scope: !8511)
!8532 = !DILocation(line: 9750, column: 8, scope: !8511)
!8533 = !DILocation(line: 9750, column: 17, scope: !8511)
!8534 = !DILocation(line: 9751, column: 8, scope: !8511)
!8535 = !DILocation(line: 9751, column: 15, scope: !8511)
!8536 = !DILocation(line: 9752, column: 18, scope: !8511)
!8537 = !DILocation(line: 9754, column: 5, scope: !8511)
!8538 = !DILocation(line: 9755, column: 5, scope: !8511)
!8539 = !DILocation(line: 9756, column: 5, scope: !8511)
!8540 = !DILocation(line: 9757, column: 5, scope: !8511)
!8541 = distinct !DISubprogram(name: "vmSwapObjectBlocking", scope: !3, file: !3, line: 9077, type: !6943, scopeLine: 9077, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8542)
!8542 = !{!8543, !8544, !8545, !8546}
!8543 = !DILocalVariable(name: "key", arg: 1, scope: !8541, file: !3, line: 9077, type: !145)
!8544 = !DILocalVariable(name: "val", arg: 2, scope: !8541, file: !3, line: 9077, type: !145)
!8545 = !DILocalVariable(name: "pages", scope: !8541, file: !3, line: 9078, type: !160)
!8546 = !DILocalVariable(name: "page", scope: !8541, file: !3, line: 9079, type: !160)
!8547 = !DILocation(line: 0, scope: !8541)
!8548 = !DILocation(line: 9078, column: 19, scope: !8541)
!8549 = !DILocation(line: 9079, column: 5, scope: !8541)
!8550 = !DILocation(line: 9081, column: 5, scope: !8541)
!8551 = !DILocation(line: 9082, column: 5, scope: !8541)
!8552 = !DILocation(line: 9083, column: 9, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 9083, column: 9)
!8554 = !DILocation(line: 9083, column: 44, scope: !8553)
!8555 = !DILocation(line: 9083, column: 9, scope: !8541)
!8556 = !DILocation(line: 9084, column: 33, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 9084, column: 9)
!8558 = !DILocation(line: 9084, column: 9, scope: !8557)
!8559 = !DILocation(line: 9084, column: 39, scope: !8557)
!8560 = !DILocation(line: 9084, column: 9, scope: !8541)
!8561 = !DILocation(line: 9085, column: 13, scope: !8541)
!8562 = !DILocation(line: 9085, column: 18, scope: !8541)
!8563 = !DILocation(line: 9086, column: 13, scope: !8541)
!8564 = !DILocation(line: 9086, column: 23, scope: !8541)
!8565 = !DILocation(line: 9087, column: 18, scope: !8541)
!8566 = !DILocation(line: 9088, column: 23, scope: !8541)
!8567 = !DILocation(line: 9088, column: 10, scope: !8541)
!8568 = !DILocation(line: 9088, column: 16, scope: !8541)
!8569 = !DILocation(line: 9089, column: 18, scope: !8541)
!8570 = !DILocation(line: 9089, column: 5, scope: !8541)
!8571 = !DILocation(line: 9090, column: 5, scope: !8541)
!8572 = !DILocation(line: 9092, column: 31, scope: !8541)
!8573 = !DILocation(line: 9091, column: 5, scope: !8541)
!8574 = !DILocation(line: 9094, column: 36, scope: !8541)
!8575 = !DILocation(line: 9096, column: 5, scope: !8541)
!8576 = !DILocation(line: 9097, column: 1, scope: !8541)
!8577 = !DISubprogram(name: "log", scope: !8578, file: !8578, line: 104, type: !8579, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!8578 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "", checksumkind: CSK_MD5, checksum: "833006f6c08fa0a86f73f7ac7f62dccb")
!8579 = !DISubroutineType(types: !8580)
!8580 = !{!168, !168}
!8581 = distinct !DISubprogram(name: "rdbSaveType", scope: !3, file: !3, line: 3375, type: !8582, scopeLine: 3375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8584)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{!45, !580, !151}
!8584 = !{!8585, !8586}
!8585 = !DILocalVariable(name: "fp", arg: 1, scope: !8581, file: !3, line: 3375, type: !580)
!8586 = !DILocalVariable(name: "type", arg: 2, scope: !8581, file: !3, line: 3375, type: !151)
!8587 = !DILocation(line: 0, scope: !8581)
!8588 = !DILocation(line: 3376, column: 9, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 3376, column: 9)
!8590 = !DILocation(line: 3376, column: 30, scope: !8589)
!8591 = !DILocation(line: 3378, column: 1, scope: !8581)
!8592 = distinct !DISubprogram(name: "getExpire", scope: !3, file: !3, line: 7386, type: !8593, scopeLine: 7386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!49, !293, !145}
!8595 = !{!8596, !8597, !8598}
!8596 = !DILocalVariable(name: "db", arg: 1, scope: !8592, file: !3, line: 7386, type: !293)
!8597 = !DILocalVariable(name: "key", arg: 2, scope: !8592, file: !3, line: 7386, type: !145)
!8598 = !DILocalVariable(name: "de", scope: !8592, file: !3, line: 7387, type: !124)
!8599 = !DILocation(line: 0, scope: !8592)
!8600 = !DILocation(line: 7390, column: 9, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 7390, column: 9)
!8602 = !DILocation(line: 7390, column: 31, scope: !8601)
!8603 = !DILocation(line: 7390, column: 36, scope: !8601)
!8604 = !DILocation(line: 7391, column: 35, scope: !8601)
!8605 = !DILocation(line: 7391, column: 14, scope: !8601)
!8606 = !DILocation(line: 7391, column: 41, scope: !8601)
!8607 = !DILocation(line: 7390, column: 9, scope: !8592)
!8608 = !DILocation(line: 7393, column: 21, scope: !8592)
!8609 = !DILocation(line: 7393, column: 12, scope: !8592)
!8610 = !DILocation(line: 7393, column: 5, scope: !8592)
!8611 = !DILocation(line: 7394, column: 1, scope: !8592)
!8612 = distinct !DISubprogram(name: "rdbSaveTime", scope: !3, file: !3, line: 3380, type: !8613, scopeLine: 3380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8615)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!45, !580, !49}
!8615 = !{!8616, !8617, !8618}
!8616 = !DILocalVariable(name: "fp", arg: 1, scope: !8612, file: !3, line: 3380, type: !580)
!8617 = !DILocalVariable(name: "t", arg: 2, scope: !8612, file: !3, line: 3380, type: !49)
!8618 = !DILocalVariable(name: "t32", scope: !8612, file: !3, line: 3381, type: !143)
!8619 = !DILocation(line: 0, scope: !8612)
!8620 = !DILocation(line: 3381, column: 5, scope: !8612)
!8621 = !DILocation(line: 3381, column: 19, scope: !8612)
!8622 = !DILocation(line: 3381, column: 13, scope: !8612)
!8623 = !DILocation(line: 3382, column: 9, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 3382, column: 9)
!8625 = !DILocation(line: 3382, column: 29, scope: !8624)
!8626 = !DILocation(line: 3384, column: 1, scope: !8612)
!8627 = distinct !DISubprogram(name: "vmPreviewObject", scope: !3, file: !3, line: 9156, type: !1572, scopeLine: 9156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8628)
!8628 = !{!8629}
!8629 = !DILocalVariable(name: "key", arg: 1, scope: !8627, file: !3, line: 9156, type: !145)
!8630 = !DILocation(line: 0, scope: !8627)
!8631 = !DILocation(line: 9157, column: 12, scope: !8627)
!8632 = !DILocation(line: 9157, column: 5, scope: !8627)
!8633 = distinct !DISubprogram(name: "vmGenericLoadObject", scope: !3, file: !3, line: 9123, type: !8634, scopeLine: 9123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8636)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{!145, !145, !45}
!8636 = !{!8637, !8638, !8639}
!8637 = !DILocalVariable(name: "key", arg: 1, scope: !8633, file: !3, line: 9123, type: !145)
!8638 = !DILocalVariable(name: "preview", arg: 2, scope: !8633, file: !3, line: 9123, type: !45)
!8639 = !DILocalVariable(name: "val", scope: !8633, file: !3, line: 9124, type: !145)
!8640 = !DILocation(line: 0, scope: !8633)
!8641 = !DILocation(line: 9126, column: 5, scope: !8633)
!8642 = !DILocation(line: 9127, column: 40, scope: !8633)
!8643 = !DILocation(line: 9127, column: 50, scope: !8633)
!8644 = !DILocation(line: 9127, column: 45, scope: !8633)
!8645 = !DILocation(line: 9127, column: 11, scope: !8633)
!8646 = !DILocation(line: 9128, column: 10, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 9128, column: 9)
!8648 = !DILocation(line: 9128, column: 9, scope: !8633)
!8649 = !DILocation(line: 9129, column: 22, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 9128, column: 19)
!8651 = !DILocation(line: 9130, column: 32, scope: !8650)
!8652 = !DILocation(line: 9130, column: 17, scope: !8650)
!8653 = !DILocation(line: 9130, column: 23, scope: !8650)
!8654 = !DILocation(line: 9131, column: 33, scope: !8650)
!8655 = !DILocation(line: 9131, column: 46, scope: !8650)
!8656 = !DILocation(line: 9131, column: 9, scope: !8650)
!8657 = !DILocation(line: 9133, column: 35, scope: !8650)
!8658 = !DILocation(line: 9132, column: 9, scope: !8650)
!8659 = !DILocation(line: 9134, column: 40, scope: !8650)
!8660 = !DILocation(line: 9135, column: 5, scope: !8650)
!8661 = !DILocation(line: 9137, column: 35, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 9135, column: 12)
!8663 = !DILocation(line: 9136, column: 9, scope: !8662)
!8664 = !DILocation(line: 9139, column: 28, scope: !8633)
!8665 = !DILocation(line: 9140, column: 5, scope: !8633)
!8666 = !DISubprogram(name: "dictEnableResize", scope: !88, file: !88, line: 141, type: !1747, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!8667 = !DISubprogram(name: "dictDisableResize", scope: !88, file: !88, line: 142, type: !1747, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!8668 = distinct !DISubprogram(name: "selectDb", scope: !3, file: !3, line: 2698, type: !2932, scopeLine: 2698, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8669)
!8669 = !{!8670, !8671}
!8670 = !DILocalVariable(name: "c", arg: 1, scope: !8668, file: !3, line: 2698, type: !287)
!8671 = !DILocalVariable(name: "id", arg: 2, scope: !8668, file: !3, line: 2698, type: !45)
!8672 = !DILocation(line: 0, scope: !8668)
!8673 = !DILocation(line: 2699, column: 12, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 2699, column: 9)
!8675 = !DILocation(line: 2699, column: 16, scope: !8674)
!8676 = !DILocation(line: 2701, column: 21, scope: !8668)
!8677 = !DILocation(line: 2701, column: 14, scope: !8668)
!8678 = !DILocation(line: 2701, column: 8, scope: !8668)
!8679 = !DILocation(line: 2701, column: 11, scope: !8668)
!8680 = !DILocation(line: 2702, column: 5, scope: !8668)
!8681 = !DILocation(line: 2703, column: 1, scope: !8668)
!8682 = distinct !DISubprogram(name: "dupClientReplyValue", scope: !3, file: !3, line: 2705, type: !75, scopeLine: 2705, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8683)
!8683 = !{!8684}
!8684 = !DILocalVariable(name: "o", arg: 1, scope: !8682, file: !3, line: 2705, type: !46)
!8685 = !DILocation(line: 0, scope: !8682)
!8686 = !DILocation(line: 2706, column: 18, scope: !8682)
!8687 = !DILocation(line: 2706, column: 5, scope: !8682)
!8688 = !DILocation(line: 2707, column: 5, scope: !8682)
!8689 = distinct !DISubprogram(name: "getCommand", scope: !3, file: !3, line: 4315, type: !340, scopeLine: 4315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8690)
!8690 = !{!8691}
!8691 = !DILocalVariable(name: "c", arg: 1, scope: !8689, file: !3, line: 4315, type: !287)
!8692 = !DILocation(line: 0, scope: !8689)
!8693 = !DILocation(line: 4316, column: 5, scope: !8689)
!8694 = !DILocation(line: 4317, column: 1, scope: !8689)
!8695 = distinct !DISubprogram(name: "setCommand", scope: !3, file: !3, line: 4288, type: !340, scopeLine: 4288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8696)
!8696 = !{!8697}
!8697 = !DILocalVariable(name: "c", arg: 1, scope: !8695, file: !3, line: 4288, type: !287)
!8698 = !DILocation(line: 0, scope: !8695)
!8699 = !DILocation(line: 4289, column: 30, scope: !8695)
!8700 = !DILocation(line: 4289, column: 27, scope: !8695)
!8701 = !DILocation(line: 4289, column: 38, scope: !8695)
!8702 = !DILocation(line: 4289, column: 5, scope: !8695)
!8703 = !DILocation(line: 4290, column: 1, scope: !8695)
!8704 = distinct !DISubprogram(name: "setnxCommand", scope: !3, file: !3, line: 4292, type: !340, scopeLine: 4292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8705)
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "c", arg: 1, scope: !8704, file: !3, line: 4292, type: !287)
!8707 = !DILocation(line: 0, scope: !8704)
!8708 = !DILocation(line: 4293, column: 30, scope: !8704)
!8709 = !DILocation(line: 4293, column: 27, scope: !8704)
!8710 = !DILocation(line: 4293, column: 38, scope: !8704)
!8711 = !DILocation(line: 4293, column: 5, scope: !8704)
!8712 = !DILocation(line: 4294, column: 1, scope: !8704)
!8713 = distinct !DISubprogram(name: "appendCommand", scope: !3, file: !3, line: 4442, type: !340, scopeLine: 4442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8714)
!8714 = !{!8715, !8716, !8717, !8718, !8719, !8722}
!8715 = !DILocalVariable(name: "c", arg: 1, scope: !8713, file: !3, line: 4442, type: !287)
!8716 = !DILocalVariable(name: "retval", scope: !8713, file: !3, line: 4443, type: !45)
!8717 = !DILocalVariable(name: "totlen", scope: !8713, file: !3, line: 4444, type: !196)
!8718 = !DILocalVariable(name: "o", scope: !8713, file: !3, line: 4445, type: !145)
!8719 = !DILocalVariable(name: "de", scope: !8720, file: !3, line: 4455, type: !124)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4454, column: 12)
!8721 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 4448, column: 9)
!8722 = !DILocalVariable(name: "decoded", scope: !8723, file: !3, line: 4468, type: !145)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 4467, column: 68)
!8724 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4467, column: 13)
!8725 = !DILocation(line: 0, scope: !8713)
!8726 = !DILocation(line: 4447, column: 27, scope: !8713)
!8727 = !DILocation(line: 4447, column: 33, scope: !8713)
!8728 = !DILocation(line: 4447, column: 30, scope: !8713)
!8729 = !DILocation(line: 4447, column: 9, scope: !8713)
!8730 = !DILocation(line: 4448, column: 11, scope: !8721)
!8731 = !DILocation(line: 0, scope: !8721)
!8732 = !DILocation(line: 4448, column: 9, scope: !8713)
!8733 = !DILocation(line: 4450, column: 49, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4448, column: 20)
!8735 = !DILocation(line: 4450, column: 18, scope: !8734)
!8736 = !DILocation(line: 4451, column: 25, scope: !8734)
!8737 = !DILocation(line: 4451, column: 22, scope: !8734)
!8738 = !DILocation(line: 4451, column: 9, scope: !8734)
!8739 = !DILocation(line: 4452, column: 25, scope: !8734)
!8740 = !DILocation(line: 4452, column: 22, scope: !8734)
!8741 = !DILocation(line: 4452, column: 9, scope: !8734)
!8742 = !DILocation(line: 4453, column: 37, scope: !8734)
!8743 = !DILocation(line: 4453, column: 34, scope: !8734)
!8744 = !DILocation(line: 4453, column: 18, scope: !8734)
!8745 = !DILocation(line: 4454, column: 5, scope: !8734)
!8746 = !DILocation(line: 4457, column: 14, scope: !8720)
!8747 = !DILocation(line: 0, scope: !8720)
!8748 = !DILocation(line: 4458, column: 9, scope: !8720)
!8749 = !DILocation(line: 4460, column: 13, scope: !8720)
!8750 = !DILocation(line: 4461, column: 16, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4461, column: 13)
!8752 = !DILocation(line: 4461, column: 21, scope: !8751)
!8753 = !DILocation(line: 4461, column: 13, scope: !8720)
!8754 = !DILocation(line: 4467, column: 16, scope: !8724)
!8755 = !DILocation(line: 4467, column: 25, scope: !8724)
!8756 = !DILocation(line: 4467, column: 30, scope: !8724)
!8757 = !DILocation(line: 4467, column: 36, scope: !8724)
!8758 = !DILocation(line: 4467, column: 45, scope: !8724)
!8759 = !DILocation(line: 4467, column: 13, scope: !8720)
!8760 = !DILocation(line: 4468, column: 29, scope: !8723)
!8761 = !DILocation(line: 0, scope: !8723)
!8762 = !DILocation(line: 4470, column: 45, scope: !8723)
!8763 = !DILocation(line: 4470, column: 50, scope: !8723)
!8764 = !DILocation(line: 4470, column: 17, scope: !8723)
!8765 = !DILocation(line: 4471, column: 26, scope: !8723)
!8766 = !DILocation(line: 4471, column: 13, scope: !8723)
!8767 = !DILocation(line: 4472, column: 28, scope: !8723)
!8768 = !DILocation(line: 4472, column: 32, scope: !8723)
!8769 = !DILocation(line: 4472, column: 40, scope: !8723)
!8770 = !DILocation(line: 4472, column: 37, scope: !8723)
!8771 = !DILocation(line: 4472, column: 48, scope: !8723)
!8772 = !DILocation(line: 4472, column: 13, scope: !8723)
!8773 = !DILocation(line: 4473, column: 9, scope: !8723)
!8774 = !DILocation(line: 4475, column: 16, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4475, column: 13)
!8776 = !DILocation(line: 4475, column: 13, scope: !8775)
!8777 = !DILocation(line: 4475, column: 25, scope: !8775)
!8778 = !DILocation(line: 4475, column: 34, scope: !8775)
!8779 = !DILocation(line: 0, scope: !8775)
!8780 = !DILocation(line: 4475, column: 13, scope: !8720)
!8781 = !DILocation(line: 4477, column: 34, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 4475, column: 57)
!8783 = !DILocation(line: 4476, column: 22, scope: !8782)
!8784 = !DILocation(line: 4478, column: 9, scope: !8782)
!8785 = !DILocation(line: 4480, column: 17, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 4478, column: 16)
!8787 = !DILocation(line: 4479, column: 22, scope: !8786)
!8788 = !DILocation(line: 4482, column: 18, scope: !8720)
!8789 = !DILocation(line: 4462, column: 31, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 4461, column: 38)
!8791 = !{!3571, !714, i64 104}
!8792 = !DILocation(line: 4462, column: 13, scope: !8790)
!8793 = !DILocation(line: 4484, column: 17, scope: !8713)
!8794 = !DILocation(line: 4485, column: 32, scope: !8713)
!8795 = !DILocation(line: 4485, column: 19, scope: !8713)
!8796 = !DILocation(line: 4485, column: 5, scope: !8713)
!8797 = !DILocation(line: 4486, column: 1, scope: !8713)
!8798 = distinct !DISubprogram(name: "substrCommand", scope: !3, file: !3, line: 4488, type: !340, scopeLine: 4488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8799)
!8799 = !{!8800, !8801, !8802, !8803, !8804, !8805, !8806}
!8800 = !DILocalVariable(name: "c", arg: 1, scope: !8798, file: !3, line: 4488, type: !287)
!8801 = !DILocalVariable(name: "o", scope: !8798, file: !3, line: 4489, type: !145)
!8802 = !DILocalVariable(name: "start", scope: !8798, file: !3, line: 4490, type: !53)
!8803 = !DILocalVariable(name: "end", scope: !8798, file: !3, line: 4491, type: !53)
!8804 = !DILocalVariable(name: "rangelen", scope: !8798, file: !3, line: 4492, type: !196)
!8805 = !DILocalVariable(name: "strlen", scope: !8798, file: !3, line: 4492, type: !196)
!8806 = !DILocalVariable(name: "range", scope: !8798, file: !3, line: 4493, type: !165)
!8807 = !DILocation(line: 0, scope: !8798)
!8808 = !DILocation(line: 4490, column: 26, scope: !8798)
!8809 = !DILocation(line: 4490, column: 23, scope: !8798)
!8810 = !DILocation(line: 4490, column: 35, scope: !8798)
!8811 = !DILocation(line: 4490, column: 18, scope: !8798)
!8812 = !DILocation(line: 4491, column: 21, scope: !8798)
!8813 = !DILocation(line: 4491, column: 33, scope: !8798)
!8814 = !DILocation(line: 4491, column: 16, scope: !8798)
!8815 = !DILocation(line: 4495, column: 37, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 4495, column: 9)
!8817 = !DILocation(line: 4495, column: 55, scope: !8816)
!8818 = !{!3571, !714, i64 72}
!8819 = !DILocation(line: 4495, column: 14, scope: !8816)
!8820 = !DILocation(line: 4495, column: 66, scope: !8816)
!8821 = !DILocation(line: 4495, column: 74, scope: !8816)
!8822 = !DILocation(line: 4496, column: 9, scope: !8816)
!8823 = !DILocation(line: 4495, column: 9, scope: !8798)
!8824 = !DILocation(line: 4498, column: 9, scope: !8798)
!8825 = !DILocation(line: 4499, column: 24, scope: !8798)
!8826 = !DILocation(line: 4499, column: 14, scope: !8798)
!8827 = !DILocation(line: 4502, column: 15, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 4502, column: 9)
!8829 = !DILocation(line: 4502, column: 9, scope: !8798)
!8830 = !DILocation(line: 4503, column: 13, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 4503, column: 9)
!8832 = !DILocation(line: 4503, column: 9, scope: !8798)
!8833 = !DILocation(line: 4504, column: 9, scope: !8798)
!8834 = !DILocation(line: 4505, column: 9, scope: !8798)
!8835 = !DILocation(line: 4508, column: 15, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 4508, column: 9)
!8837 = !DILocation(line: 4508, column: 21, scope: !8836)
!8838 = !DILocation(line: 4514, column: 21, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 4514, column: 9)
!8840 = !DILocation(line: 4514, column: 9, scope: !8798)
!8841 = !DILocation(line: 4515, column: 20, scope: !8798)
!8842 = !DILocation(line: 4515, column: 27, scope: !8798)
!8843 = !DILocation(line: 4518, column: 32, scope: !8798)
!8844 = !DILocation(line: 4518, column: 19, scope: !8798)
!8845 = !DILocation(line: 4518, column: 5, scope: !8798)
!8846 = !DILocation(line: 4519, column: 33, scope: !8798)
!8847 = !DILocation(line: 4519, column: 36, scope: !8798)
!8848 = !DILocation(line: 4519, column: 13, scope: !8798)
!8849 = !DILocation(line: 4520, column: 5, scope: !8798)
!8850 = !DILocation(line: 4523, column: 1, scope: !8798)
!8851 = distinct !DISubprogram(name: "delCommand", scope: !3, file: !3, line: 4527, type: !340, scopeLine: 4527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8852)
!8852 = !{!8853, !8854, !8855}
!8853 = !DILocalVariable(name: "c", arg: 1, scope: !8851, file: !3, line: 4527, type: !287)
!8854 = !DILocalVariable(name: "deleted", scope: !8851, file: !3, line: 4528, type: !45)
!8855 = !DILocalVariable(name: "j", scope: !8851, file: !3, line: 4528, type: !45)
!8856 = !DILocation(line: 0, scope: !8851)
!8857 = !DILocation(line: 4530, column: 24, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 4530, column: 5)
!8859 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 4530, column: 5)
!8860 = !DILocation(line: 4530, column: 19, scope: !8858)
!8861 = !DILocation(line: 4530, column: 5, scope: !8859)
!8862 = !DILocation(line: 4531, column: 26, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 4531, column: 13)
!8864 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 4530, column: 35)
!8865 = !DILocation(line: 4531, column: 32, scope: !8863)
!8866 = !DILocation(line: 4531, column: 29, scope: !8863)
!8867 = !DILocation(line: 4531, column: 13, scope: !8863)
!8868 = !DILocation(line: 4531, column: 13, scope: !8864)
!8869 = !DILocation(line: 4532, column: 25, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 4531, column: 42)
!8871 = !DILocation(line: 4533, column: 20, scope: !8870)
!8872 = !DILocation(line: 4534, column: 9, scope: !8870)
!8873 = !DILocation(line: 4530, column: 31, scope: !8858)
!8874 = distinct !{!8874, !8861, !8875}
!8875 = !DILocation(line: 4535, column: 5, scope: !8859)
!8876 = !DILocation(line: 4536, column: 24, scope: !8851)
!8877 = !DILocation(line: 4536, column: 5, scope: !8851)
!8878 = !DILocation(line: 4537, column: 1, scope: !8851)
!8879 = distinct !DISubprogram(name: "existsCommand", scope: !3, file: !3, line: 4539, type: !340, scopeLine: 4539, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8880)
!8880 = !{!8881}
!8881 = !DILocalVariable(name: "c", arg: 1, scope: !8879, file: !3, line: 4539, type: !287)
!8882 = !DILocation(line: 0, scope: !8879)
!8883 = !DILocation(line: 4540, column: 23, scope: !8879)
!8884 = !DILocation(line: 4540, column: 29, scope: !8879)
!8885 = !DILocation(line: 4540, column: 26, scope: !8879)
!8886 = !DILocation(line: 4540, column: 5, scope: !8879)
!8887 = !DILocation(line: 4541, column: 21, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 4541, column: 9)
!8889 = !DILocation(line: 4541, column: 25, scope: !8888)
!8890 = !DILocation(line: 4541, column: 33, scope: !8888)
!8891 = !DILocation(line: 4541, column: 30, scope: !8888)
!8892 = !DILocation(line: 4541, column: 9, scope: !8888)
!8893 = !DILocation(line: 0, scope: !8888)
!8894 = !DILocation(line: 4546, column: 1, scope: !8879)
!8895 = distinct !DISubprogram(name: "incrCommand", scope: !3, file: !3, line: 4420, type: !340, scopeLine: 4420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8896)
!8896 = !{!8897}
!8897 = !DILocalVariable(name: "c", arg: 1, scope: !8895, file: !3, line: 4420, type: !287)
!8898 = !DILocation(line: 0, scope: !8895)
!8899 = !DILocation(line: 4421, column: 5, scope: !8895)
!8900 = !DILocation(line: 4422, column: 1, scope: !8895)
!8901 = distinct !DISubprogram(name: "decrCommand", scope: !3, file: !3, line: 4424, type: !340, scopeLine: 4424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8902)
!8902 = !{!8903}
!8903 = !DILocalVariable(name: "c", arg: 1, scope: !8901, file: !3, line: 4424, type: !287)
!8904 = !DILocation(line: 0, scope: !8901)
!8905 = !DILocation(line: 4425, column: 5, scope: !8901)
!8906 = !DILocation(line: 4426, column: 1, scope: !8901)
!8907 = distinct !DISubprogram(name: "mgetCommand", scope: !3, file: !3, line: 4331, type: !340, scopeLine: 4331, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8908)
!8908 = !{!8909, !8910, !8911}
!8909 = !DILocalVariable(name: "c", arg: 1, scope: !8907, file: !3, line: 4331, type: !287)
!8910 = !DILocalVariable(name: "j", scope: !8907, file: !3, line: 4332, type: !45)
!8911 = !DILocalVariable(name: "o", scope: !8912, file: !3, line: 4336, type: !145)
!8912 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 4335, column: 35)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 4335, column: 5)
!8914 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 4335, column: 5)
!8915 = !DILocation(line: 0, scope: !8907)
!8916 = !DILocation(line: 4334, column: 32, scope: !8907)
!8917 = !DILocation(line: 4334, column: 56, scope: !8907)
!8918 = !DILocation(line: 4334, column: 60, scope: !8907)
!8919 = !DILocation(line: 4334, column: 19, scope: !8907)
!8920 = !DILocation(line: 4334, column: 5, scope: !8907)
!8921 = !DILocation(line: 4335, column: 24, scope: !8913)
!8922 = !DILocation(line: 4335, column: 19, scope: !8913)
!8923 = !DILocation(line: 4335, column: 5, scope: !8914)
!8924 = !DILocation(line: 4336, column: 36, scope: !8912)
!8925 = !DILocation(line: 4336, column: 42, scope: !8912)
!8926 = !DILocation(line: 4336, column: 39, scope: !8912)
!8927 = !DILocation(line: 4336, column: 19, scope: !8912)
!8928 = !DILocation(line: 0, scope: !8912)
!8929 = !DILocation(line: 4337, column: 15, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 4337, column: 13)
!8931 = !DILocation(line: 4337, column: 13, scope: !8912)
!8932 = !DILocation(line: 4338, column: 31, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 4337, column: 24)
!8934 = !DILocation(line: 4338, column: 13, scope: !8933)
!8935 = !DILocation(line: 4339, column: 9, scope: !8933)
!8936 = !DILocation(line: 4340, column: 20, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 4340, column: 17)
!8938 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 4339, column: 16)
!8939 = !DILocation(line: 4340, column: 25, scope: !8937)
!8940 = !DILocation(line: 4340, column: 17, scope: !8938)
!8941 = !DILocation(line: 4341, column: 35, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 4340, column: 42)
!8943 = !DILocation(line: 4341, column: 17, scope: !8942)
!8944 = !DILocation(line: 4342, column: 13, scope: !8942)
!8945 = !DILocation(line: 4343, column: 17, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 4342, column: 20)
!8947 = !DILocation(line: 4335, column: 31, scope: !8913)
!8948 = distinct !{!8948, !8923, !8949}
!8949 = !DILocation(line: 4346, column: 5, scope: !8914)
!8950 = !DILocation(line: 4347, column: 1, scope: !8907)
!8951 = distinct !DISubprogram(name: "rpushCommand", scope: !3, file: !3, line: 4798, type: !340, scopeLine: 4798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8952)
!8952 = !{!8953}
!8953 = !DILocalVariable(name: "c", arg: 1, scope: !8951, file: !3, line: 4798, type: !287)
!8954 = !DILocation(line: 0, scope: !8951)
!8955 = !DILocation(line: 4799, column: 5, scope: !8951)
!8956 = !DILocation(line: 4800, column: 1, scope: !8951)
!8957 = distinct !DISubprogram(name: "lpushCommand", scope: !3, file: !3, line: 4794, type: !340, scopeLine: 4794, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8958)
!8958 = !{!8959}
!8959 = !DILocalVariable(name: "c", arg: 1, scope: !8957, file: !3, line: 4794, type: !287)
!8960 = !DILocation(line: 0, scope: !8957)
!8961 = !DILocation(line: 4795, column: 5, scope: !8957)
!8962 = !DILocation(line: 4796, column: 1, scope: !8957)
!8963 = distinct !DISubprogram(name: "rpopCommand", scope: !3, file: !3, line: 4885, type: !340, scopeLine: 4885, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8964)
!8964 = !{!8965}
!8965 = !DILocalVariable(name: "c", arg: 1, scope: !8963, file: !3, line: 4885, type: !287)
!8966 = !DILocation(line: 0, scope: !8963)
!8967 = !DILocation(line: 4886, column: 5, scope: !8963)
!8968 = !DILocation(line: 4887, column: 1, scope: !8963)
!8969 = distinct !DISubprogram(name: "lpopCommand", scope: !3, file: !3, line: 4881, type: !340, scopeLine: 4881, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8970)
!8970 = !{!8971}
!8971 = !DILocalVariable(name: "c", arg: 1, scope: !8969, file: !3, line: 4881, type: !287)
!8972 = !DILocation(line: 0, scope: !8969)
!8973 = !DILocation(line: 4882, column: 5, scope: !8969)
!8974 = !DILocation(line: 4883, column: 1, scope: !8969)
!8975 = distinct !DISubprogram(name: "brpopCommand", scope: !3, file: !3, line: 7786, type: !340, scopeLine: 7786, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8976)
!8976 = !{!8977}
!8977 = !DILocalVariable(name: "c", arg: 1, scope: !8975, file: !3, line: 7786, type: !287)
!8978 = !DILocation(line: 0, scope: !8975)
!8979 = !DILocation(line: 7787, column: 5, scope: !8975)
!8980 = !DILocation(line: 7788, column: 1, scope: !8975)
!8981 = distinct !DISubprogram(name: "blpopCommand", scope: !3, file: !3, line: 7782, type: !340, scopeLine: 7782, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8982)
!8982 = !{!8983}
!8983 = !DILocalVariable(name: "c", arg: 1, scope: !8981, file: !3, line: 7782, type: !287)
!8984 = !DILocation(line: 0, scope: !8981)
!8985 = !DILocation(line: 7783, column: 5, scope: !8981)
!8986 = !DILocation(line: 7784, column: 1, scope: !8981)
!8987 = distinct !DISubprogram(name: "llenCommand", scope: !3, file: !3, line: 4802, type: !340, scopeLine: 4802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8988)
!8988 = !{!8989, !8990, !8991}
!8989 = !DILocalVariable(name: "c", arg: 1, scope: !8987, file: !3, line: 4802, type: !287)
!8990 = !DILocalVariable(name: "o", scope: !8987, file: !3, line: 4803, type: !145)
!8991 = !DILocalVariable(name: "l", scope: !8987, file: !3, line: 4804, type: !58)
!8992 = !DILocation(line: 0, scope: !8987)
!8993 = !DILocation(line: 4806, column: 40, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 4806, column: 9)
!8995 = !DILocation(line: 4806, column: 37, scope: !8994)
!8996 = !DILocation(line: 4806, column: 55, scope: !8994)
!8997 = !DILocation(line: 4806, column: 14, scope: !8994)
!8998 = !DILocation(line: 4806, column: 63, scope: !8994)
!8999 = !DILocation(line: 4806, column: 71, scope: !8994)
!9000 = !DILocation(line: 4807, column: 9, scope: !8994)
!9001 = !DILocation(line: 4806, column: 9, scope: !8987)
!9002 = !DILocation(line: 4809, column: 12, scope: !8987)
!9003 = !DILocation(line: 4810, column: 21, scope: !8987)
!9004 = !DILocation(line: 4810, column: 5, scope: !8987)
!9005 = !DILocation(line: 4811, column: 1, scope: !8987)
!9006 = distinct !DISubprogram(name: "lindexCommand", scope: !3, file: !3, line: 4813, type: !340, scopeLine: 4813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9007)
!9007 = !{!9008, !9009, !9010, !9011, !9012, !9013}
!9008 = !DILocalVariable(name: "c", arg: 1, scope: !9006, file: !3, line: 4813, type: !287)
!9009 = !DILocalVariable(name: "o", scope: !9006, file: !3, line: 4814, type: !145)
!9010 = !DILocalVariable(name: "index", scope: !9006, file: !3, line: 4815, type: !45)
!9011 = !DILocalVariable(name: "list", scope: !9006, file: !3, line: 4816, type: !58)
!9012 = !DILocalVariable(name: "ln", scope: !9006, file: !3, line: 4817, type: !64)
!9013 = !DILocalVariable(name: "ele", scope: !9014, file: !3, line: 4827, type: !145)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 4826, column: 12)
!9015 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 4824, column: 9)
!9016 = !DILocation(line: 0, scope: !9006)
!9017 = !DILocation(line: 4815, column: 25, scope: !9006)
!9018 = !DILocation(line: 4815, column: 22, scope: !9006)
!9019 = !DILocation(line: 4815, column: 34, scope: !9006)
!9020 = !DILocation(line: 4815, column: 17, scope: !9006)
!9021 = !DILocation(line: 4819, column: 37, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 4819, column: 9)
!9023 = !DILocation(line: 4819, column: 55, scope: !9022)
!9024 = !DILocation(line: 4819, column: 14, scope: !9022)
!9025 = !DILocation(line: 4819, column: 66, scope: !9022)
!9026 = !DILocation(line: 4819, column: 74, scope: !9022)
!9027 = !DILocation(line: 4820, column: 9, scope: !9022)
!9028 = !DILocation(line: 4819, column: 9, scope: !9006)
!9029 = !DILocation(line: 4821, column: 15, scope: !9006)
!9030 = !DILocation(line: 4823, column: 10, scope: !9006)
!9031 = !DILocation(line: 4824, column: 12, scope: !9015)
!9032 = !DILocation(line: 4824, column: 9, scope: !9006)
!9033 = !DILocation(line: 4825, column: 27, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 4824, column: 21)
!9035 = !DILocation(line: 4825, column: 9, scope: !9034)
!9036 = !DILocation(line: 4826, column: 5, scope: !9034)
!9037 = !DILocation(line: 4827, column: 21, scope: !9014)
!9038 = !DILocation(line: 0, scope: !9014)
!9039 = !DILocation(line: 4828, column: 9, scope: !9014)
!9040 = !DILocation(line: 4830, column: 1, scope: !9006)
!9041 = distinct !DISubprogram(name: "lsetCommand", scope: !3, file: !3, line: 4832, type: !340, scopeLine: 4832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9042)
!9042 = !{!9043, !9044, !9045, !9046, !9047, !9048}
!9043 = !DILocalVariable(name: "c", arg: 1, scope: !9041, file: !3, line: 4832, type: !287)
!9044 = !DILocalVariable(name: "o", scope: !9041, file: !3, line: 4833, type: !145)
!9045 = !DILocalVariable(name: "index", scope: !9041, file: !3, line: 4834, type: !45)
!9046 = !DILocalVariable(name: "list", scope: !9041, file: !3, line: 4835, type: !58)
!9047 = !DILocalVariable(name: "ln", scope: !9041, file: !3, line: 4836, type: !64)
!9048 = !DILocalVariable(name: "ele", scope: !9049, file: !3, line: 4846, type: !145)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 4845, column: 12)
!9050 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 4843, column: 9)
!9051 = !DILocation(line: 0, scope: !9041)
!9052 = !DILocation(line: 4834, column: 25, scope: !9041)
!9053 = !DILocation(line: 4834, column: 22, scope: !9041)
!9054 = !DILocation(line: 4834, column: 34, scope: !9041)
!9055 = !DILocation(line: 4834, column: 17, scope: !9041)
!9056 = !DILocation(line: 4838, column: 38, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 4838, column: 9)
!9058 = !DILocation(line: 4838, column: 56, scope: !9057)
!9059 = !{!3571, !714, i64 112}
!9060 = !DILocation(line: 4838, column: 14, scope: !9057)
!9061 = !DILocation(line: 4838, column: 67, scope: !9057)
!9062 = !DILocation(line: 4838, column: 75, scope: !9057)
!9063 = !DILocation(line: 4839, column: 9, scope: !9057)
!9064 = !DILocation(line: 4838, column: 9, scope: !9041)
!9065 = !DILocation(line: 4840, column: 15, scope: !9041)
!9066 = !DILocation(line: 4842, column: 10, scope: !9041)
!9067 = !DILocation(line: 4843, column: 12, scope: !9050)
!9068 = !DILocation(line: 4843, column: 9, scope: !9041)
!9069 = !DILocation(line: 4844, column: 27, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 4843, column: 21)
!9071 = !{!3571, !714, i64 136}
!9072 = !DILocation(line: 4844, column: 9, scope: !9070)
!9073 = !DILocation(line: 4845, column: 5, scope: !9070)
!9074 = !DILocation(line: 4846, column: 21, scope: !9049)
!9075 = !DILocation(line: 0, scope: !9049)
!9076 = !DILocation(line: 4848, column: 9, scope: !9049)
!9077 = !DILocation(line: 4849, column: 32, scope: !9049)
!9078 = !DILocation(line: 4849, column: 29, scope: !9049)
!9079 = !DILocation(line: 4849, column: 27, scope: !9049)
!9080 = !DILocation(line: 4850, column: 22, scope: !9049)
!9081 = !DILocation(line: 4850, column: 9, scope: !9049)
!9082 = !DILocation(line: 4851, column: 27, scope: !9049)
!9083 = !DILocation(line: 4851, column: 9, scope: !9049)
!9084 = !DILocation(line: 4852, column: 21, scope: !9049)
!9085 = !DILocation(line: 4854, column: 1, scope: !9041)
!9086 = distinct !DISubprogram(name: "lrangeCommand", scope: !3, file: !3, line: 4889, type: !340, scopeLine: 4889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9087)
!9087 = !{!9088, !9089, !9090, !9091, !9092, !9093, !9094, !9095, !9096, !9097}
!9088 = !DILocalVariable(name: "c", arg: 1, scope: !9086, file: !3, line: 4889, type: !287)
!9089 = !DILocalVariable(name: "o", scope: !9086, file: !3, line: 4890, type: !145)
!9090 = !DILocalVariable(name: "start", scope: !9086, file: !3, line: 4891, type: !45)
!9091 = !DILocalVariable(name: "end", scope: !9086, file: !3, line: 4892, type: !45)
!9092 = !DILocalVariable(name: "llen", scope: !9086, file: !3, line: 4893, type: !45)
!9093 = !DILocalVariable(name: "rangelen", scope: !9086, file: !3, line: 4894, type: !45)
!9094 = !DILocalVariable(name: "j", scope: !9086, file: !3, line: 4894, type: !45)
!9095 = !DILocalVariable(name: "list", scope: !9086, file: !3, line: 4895, type: !58)
!9096 = !DILocalVariable(name: "ln", scope: !9086, file: !3, line: 4896, type: !64)
!9097 = !DILocalVariable(name: "ele", scope: !9086, file: !3, line: 4897, type: !145)
!9098 = !DILocation(line: 0, scope: !9086)
!9099 = !DILocation(line: 4891, column: 25, scope: !9086)
!9100 = !DILocation(line: 4891, column: 22, scope: !9086)
!9101 = !DILocation(line: 4891, column: 34, scope: !9086)
!9102 = !DILocation(line: 4891, column: 17, scope: !9086)
!9103 = !DILocation(line: 4892, column: 20, scope: !9086)
!9104 = !DILocation(line: 4892, column: 32, scope: !9086)
!9105 = !DILocation(line: 4892, column: 15, scope: !9086)
!9106 = !DILocation(line: 4899, column: 37, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4899, column: 9)
!9108 = !DILocation(line: 4899, column: 55, scope: !9107)
!9109 = !{!3571, !714, i64 96}
!9110 = !DILocation(line: 4899, column: 14, scope: !9107)
!9111 = !DILocation(line: 4899, column: 72, scope: !9107)
!9112 = !DILocation(line: 4900, column: 10, scope: !9107)
!9113 = !DILocation(line: 4900, column: 13, scope: !9107)
!9114 = !DILocation(line: 4899, column: 9, scope: !9086)
!9115 = !DILocation(line: 4901, column: 15, scope: !9086)
!9116 = !DILocation(line: 4902, column: 12, scope: !9086)
!9117 = !DILocation(line: 4905, column: 15, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4905, column: 9)
!9119 = !DILocation(line: 4905, column: 9, scope: !9086)
!9120 = !DILocation(line: 4906, column: 13, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4906, column: 9)
!9122 = !DILocation(line: 4906, column: 9, scope: !9086)
!9123 = !DILocation(line: 4907, column: 9, scope: !9086)
!9124 = !DILocation(line: 4911, column: 15, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4911, column: 9)
!9126 = !DILocation(line: 4911, column: 21, scope: !9125)
!9127 = !DILocation(line: 4913, column: 27, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 4911, column: 39)
!9129 = !DILocation(line: 4913, column: 9, scope: !9128)
!9130 = !DILocation(line: 4914, column: 9, scope: !9128)
!9131 = !DILocation(line: 4916, column: 13, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4916, column: 9)
!9133 = !DILocation(line: 4916, column: 9, scope: !9086)
!9134 = !DILocation(line: 4917, column: 20, scope: !9086)
!9135 = !DILocation(line: 4917, column: 27, scope: !9086)
!9136 = !DILocation(line: 4920, column: 10, scope: !9086)
!9137 = !DILocation(line: 4921, column: 32, scope: !9086)
!9138 = !DILocation(line: 4921, column: 19, scope: !9086)
!9139 = !DILocation(line: 4921, column: 5, scope: !9086)
!9140 = !DILocation(line: 4922, column: 19, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 4922, column: 5)
!9142 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 4922, column: 5)
!9143 = !DILocation(line: 4922, column: 5, scope: !9142)
!9144 = !DILocation(line: 4923, column: 15, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 4922, column: 36)
!9146 = !DILocation(line: 4924, column: 9, scope: !9145)
!9147 = !DILocation(line: 4925, column: 18, scope: !9145)
!9148 = !{!892, !714, i64 8}
!9149 = !DILocation(line: 4922, column: 32, scope: !9141)
!9150 = distinct !{!9150, !9143, !9151}
!9151 = !DILocation(line: 4926, column: 5, scope: !9142)
!9152 = !DILocation(line: 4927, column: 1, scope: !9086)
!9153 = distinct !DISubprogram(name: "ltrimCommand", scope: !3, file: !3, line: 4929, type: !340, scopeLine: 4929, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157, !9158, !9159, !9160, !9161, !9162, !9163, !9164}
!9155 = !DILocalVariable(name: "c", arg: 1, scope: !9153, file: !3, line: 4929, type: !287)
!9156 = !DILocalVariable(name: "o", scope: !9153, file: !3, line: 4930, type: !145)
!9157 = !DILocalVariable(name: "start", scope: !9153, file: !3, line: 4931, type: !45)
!9158 = !DILocalVariable(name: "end", scope: !9153, file: !3, line: 4932, type: !45)
!9159 = !DILocalVariable(name: "llen", scope: !9153, file: !3, line: 4933, type: !45)
!9160 = !DILocalVariable(name: "j", scope: !9153, file: !3, line: 4934, type: !45)
!9161 = !DILocalVariable(name: "ltrim", scope: !9153, file: !3, line: 4934, type: !45)
!9162 = !DILocalVariable(name: "rtrim", scope: !9153, file: !3, line: 4934, type: !45)
!9163 = !DILocalVariable(name: "list", scope: !9153, file: !3, line: 4935, type: !58)
!9164 = !DILocalVariable(name: "ln", scope: !9153, file: !3, line: 4936, type: !64)
!9165 = !DILocation(line: 0, scope: !9153)
!9166 = !DILocation(line: 4931, column: 25, scope: !9153)
!9167 = !DILocation(line: 4931, column: 22, scope: !9153)
!9168 = !DILocation(line: 4931, column: 34, scope: !9153)
!9169 = !DILocation(line: 4931, column: 17, scope: !9153)
!9170 = !DILocation(line: 4932, column: 20, scope: !9153)
!9171 = !DILocation(line: 4932, column: 32, scope: !9153)
!9172 = !DILocation(line: 4932, column: 15, scope: !9153)
!9173 = !DILocation(line: 4938, column: 38, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4938, column: 9)
!9175 = !DILocation(line: 4938, column: 56, scope: !9174)
!9176 = !DILocation(line: 4938, column: 14, scope: !9174)
!9177 = !DILocation(line: 4938, column: 61, scope: !9174)
!9178 = !DILocation(line: 4938, column: 69, scope: !9174)
!9179 = !DILocation(line: 4939, column: 9, scope: !9174)
!9180 = !DILocation(line: 4938, column: 9, scope: !9153)
!9181 = !DILocation(line: 4940, column: 15, scope: !9153)
!9182 = !DILocation(line: 4941, column: 12, scope: !9153)
!9183 = !DILocation(line: 4944, column: 15, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4944, column: 9)
!9185 = !DILocation(line: 4944, column: 9, scope: !9153)
!9186 = !DILocation(line: 4945, column: 13, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4945, column: 9)
!9188 = !DILocation(line: 4945, column: 9, scope: !9153)
!9189 = !DILocation(line: 4946, column: 9, scope: !9153)
!9190 = !DILocation(line: 4950, column: 15, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4950, column: 9)
!9192 = !DILocation(line: 4950, column: 21, scope: !9191)
!9193 = !DILocation(line: 4955, column: 17, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 4955, column: 13)
!9195 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 4954, column: 12)
!9196 = !DILocation(line: 4955, column: 13, scope: !9195)
!9197 = !DILocation(line: 4957, column: 25, scope: !9195)
!9198 = !DILocation(line: 0, scope: !9191)
!9199 = !DILocation(line: 4961, column: 19, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 4961, column: 5)
!9201 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4961, column: 5)
!9202 = !DILocation(line: 4961, column: 5, scope: !9201)
!9203 = !DILocation(line: 4965, column: 19, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4965, column: 5)
!9205 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4965, column: 5)
!9206 = !DILocation(line: 4965, column: 5, scope: !9205)
!9207 = !DILocation(line: 4962, column: 14, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 4961, column: 33)
!9209 = !DILocation(line: 4963, column: 9, scope: !9208)
!9210 = !DILocation(line: 4961, column: 29, scope: !9200)
!9211 = distinct !{!9211, !9202, !9212}
!9212 = !DILocation(line: 4964, column: 5, scope: !9201)
!9213 = !DILocation(line: 4966, column: 14, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 4965, column: 33)
!9215 = !DILocation(line: 4967, column: 9, scope: !9214)
!9216 = !DILocation(line: 4965, column: 29, scope: !9204)
!9217 = distinct !{!9217, !9206, !9218}
!9218 = !DILocation(line: 4968, column: 5, scope: !9205)
!9219 = !DILocation(line: 4969, column: 9, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4969, column: 9)
!9221 = !DILocation(line: 4969, column: 26, scope: !9220)
!9222 = !DILocation(line: 4969, column: 9, scope: !9153)
!9223 = !DILocation(line: 4969, column: 45, scope: !9220)
!9224 = !DILocation(line: 4969, column: 51, scope: !9220)
!9225 = !DILocation(line: 4969, column: 48, scope: !9220)
!9226 = !DILocation(line: 4969, column: 32, scope: !9220)
!9227 = !DILocation(line: 4970, column: 17, scope: !9153)
!9228 = !DILocation(line: 4971, column: 23, scope: !9153)
!9229 = !DILocation(line: 4971, column: 5, scope: !9153)
!9230 = !DILocation(line: 4972, column: 1, scope: !9153)
!9231 = distinct !DISubprogram(name: "lremCommand", scope: !3, file: !3, line: 4974, type: !340, scopeLine: 4974, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9232)
!9232 = !{!9233, !9234, !9235, !9236, !9237, !9238, !9239, !9240, !9241}
!9233 = !DILocalVariable(name: "c", arg: 1, scope: !9231, file: !3, line: 4974, type: !287)
!9234 = !DILocalVariable(name: "o", scope: !9231, file: !3, line: 4975, type: !145)
!9235 = !DILocalVariable(name: "list", scope: !9231, file: !3, line: 4976, type: !58)
!9236 = !DILocalVariable(name: "ln", scope: !9231, file: !3, line: 4977, type: !64)
!9237 = !DILocalVariable(name: "next", scope: !9231, file: !3, line: 4977, type: !64)
!9238 = !DILocalVariable(name: "toremove", scope: !9231, file: !3, line: 4978, type: !45)
!9239 = !DILocalVariable(name: "removed", scope: !9231, file: !3, line: 4979, type: !45)
!9240 = !DILocalVariable(name: "fromtail", scope: !9231, file: !3, line: 4980, type: !45)
!9241 = !DILocalVariable(name: "ele", scope: !9242, file: !3, line: 4992, type: !145)
!9242 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 4991, column: 16)
!9243 = !DILocation(line: 0, scope: !9231)
!9244 = !DILocation(line: 4978, column: 28, scope: !9231)
!9245 = !DILocation(line: 4978, column: 25, scope: !9231)
!9246 = !DILocation(line: 4978, column: 37, scope: !9231)
!9247 = !DILocation(line: 4978, column: 20, scope: !9231)
!9248 = !DILocation(line: 4982, column: 38, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 4982, column: 9)
!9250 = !DILocation(line: 4982, column: 56, scope: !9249)
!9251 = !DILocation(line: 4982, column: 14, scope: !9249)
!9252 = !DILocation(line: 4982, column: 64, scope: !9249)
!9253 = !DILocation(line: 4982, column: 72, scope: !9249)
!9254 = !DILocation(line: 4983, column: 9, scope: !9249)
!9255 = !DILocation(line: 4982, column: 9, scope: !9231)
!9256 = !DILocation(line: 4984, column: 15, scope: !9231)
!9257 = !DILocation(line: 4986, column: 18, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 4986, column: 9)
!9259 = !DILocation(line: 4986, column: 9, scope: !9231)
!9260 = !DILocation(line: 4990, column: 10, scope: !9231)
!9261 = !DILocation(line: 4991, column: 5, scope: !9231)
!9262 = !DILocation(line: 4992, column: 21, scope: !9242)
!9263 = !DILocation(line: 0, scope: !9242)
!9264 = !DILocation(line: 4994, column: 16, scope: !9242)
!9265 = !DILocation(line: 4995, column: 39, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 4995, column: 13)
!9267 = !DILocation(line: 4995, column: 36, scope: !9266)
!9268 = !DILocation(line: 4995, column: 13, scope: !9266)
!9269 = !DILocation(line: 4995, column: 13, scope: !9242)
!9270 = !DILocation(line: 4996, column: 13, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 4995, column: 49)
!9272 = !DILocation(line: 4997, column: 25, scope: !9271)
!9273 = !DILocation(line: 4998, column: 20, scope: !9271)
!9274 = !DILocation(line: 4999, column: 26, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 4999, column: 17)
!9276 = !DILocation(line: 5003, column: 9, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 5003, column: 9)
!9278 = !DILocation(line: 5003, column: 26, scope: !9277)
!9279 = !DILocation(line: 5003, column: 9, scope: !9231)
!9280 = !DILocation(line: 5003, column: 45, scope: !9277)
!9281 = !DILocation(line: 5003, column: 51, scope: !9277)
!9282 = !DILocation(line: 5003, column: 48, scope: !9277)
!9283 = !DILocation(line: 5003, column: 32, scope: !9277)
!9284 = !DILocation(line: 5004, column: 32, scope: !9231)
!9285 = !DILocation(line: 5004, column: 19, scope: !9231)
!9286 = !DILocation(line: 5004, column: 5, scope: !9231)
!9287 = !DILocation(line: 5005, column: 1, scope: !9231)
!9288 = distinct !DISubprogram(name: "rpoplpushcommand", scope: !3, file: !3, line: 5022, type: !340, scopeLine: 5022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9289)
!9289 = !{!9290, !9291, !9292, !9293, !9294, !9297, !9298}
!9290 = !DILocalVariable(name: "c", arg: 1, scope: !9288, file: !3, line: 5022, type: !287)
!9291 = !DILocalVariable(name: "sobj", scope: !9288, file: !3, line: 5023, type: !145)
!9292 = !DILocalVariable(name: "srclist", scope: !9288, file: !3, line: 5024, type: !58)
!9293 = !DILocalVariable(name: "ln", scope: !9288, file: !3, line: 5025, type: !64)
!9294 = !DILocalVariable(name: "dobj", scope: !9295, file: !3, line: 5035, type: !145)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 5034, column: 12)
!9296 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 5032, column: 9)
!9297 = !DILocalVariable(name: "ele", scope: !9295, file: !3, line: 5036, type: !145)
!9298 = !DILocalVariable(name: "dstlist", scope: !9295, file: !3, line: 5037, type: !58)
!9299 = !DILocation(line: 0, scope: !9288)
!9300 = !DILocation(line: 5027, column: 44, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 5027, column: 9)
!9302 = !DILocation(line: 5027, column: 41, scope: !9301)
!9303 = !DILocation(line: 5027, column: 59, scope: !9301)
!9304 = !DILocation(line: 5027, column: 17, scope: !9301)
!9305 = !DILocation(line: 5027, column: 70, scope: !9301)
!9306 = !DILocation(line: 5027, column: 78, scope: !9301)
!9307 = !DILocation(line: 5028, column: 9, scope: !9301)
!9308 = !DILocation(line: 5027, column: 9, scope: !9288)
!9309 = !DILocation(line: 5029, column: 21, scope: !9288)
!9310 = !DILocation(line: 5030, column: 10, scope: !9288)
!9311 = !DILocation(line: 5032, column: 12, scope: !9296)
!9312 = !DILocation(line: 5032, column: 9, scope: !9288)
!9313 = !DILocation(line: 5033, column: 27, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 5032, column: 21)
!9315 = !DILocation(line: 5033, column: 9, scope: !9314)
!9316 = !DILocation(line: 5034, column: 5, scope: !9314)
!9317 = !DILocation(line: 5035, column: 40, scope: !9295)
!9318 = !DILocation(line: 5035, column: 46, scope: !9295)
!9319 = !DILocation(line: 5035, column: 43, scope: !9295)
!9320 = !DILocation(line: 5035, column: 22, scope: !9295)
!9321 = !DILocation(line: 0, scope: !9295)
!9322 = !DILocation(line: 5036, column: 21, scope: !9295)
!9323 = !DILocation(line: 5039, column: 13, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 5039, column: 13)
!9325 = !DILocation(line: 5039, column: 18, scope: !9324)
!9326 = !DILocation(line: 5039, column: 27, scope: !9324)
!9327 = !DILocation(line: 5039, column: 32, scope: !9324)
!9328 = !DILocation(line: 5039, column: 13, scope: !9295)
!9329 = !DILocation(line: 5040, column: 31, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 5039, column: 47)
!9331 = !DILocation(line: 5040, column: 13, scope: !9330)
!9332 = !DILocation(line: 5046, column: 48, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 5046, column: 13)
!9334 = !DILocation(line: 5046, column: 45, scope: !9333)
!9335 = !DILocation(line: 5046, column: 14, scope: !9333)
!9336 = !DILocation(line: 5046, column: 13, scope: !9295)
!9337 = !DILocation(line: 5047, column: 17, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 5046, column: 62)
!9339 = !DILocation(line: 5049, column: 24, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 5047, column: 31)
!9341 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 5047, column: 17)
!9342 = !DILocation(line: 5050, column: 28, scope: !9340)
!9343 = !DILocation(line: 5050, column: 32, scope: !9340)
!9344 = !DILocation(line: 5050, column: 40, scope: !9340)
!9345 = !DILocation(line: 5050, column: 37, scope: !9340)
!9346 = !DILocation(line: 5050, column: 48, scope: !9340)
!9347 = !DILocation(line: 5050, column: 17, scope: !9340)
!9348 = !DILocation(line: 5051, column: 33, scope: !9340)
!9349 = !DILocation(line: 5051, column: 30, scope: !9340)
!9350 = !DILocation(line: 5051, column: 17, scope: !9340)
!9351 = !DILocation(line: 5052, column: 13, scope: !9340)
!9352 = !DILocation(line: 5053, column: 29, scope: !9338)
!9353 = !DILocation(line: 5054, column: 13, scope: !9338)
!9354 = !DILocation(line: 5055, column: 13, scope: !9338)
!9355 = !DILocation(line: 5056, column: 9, scope: !9338)
!9356 = !DILocation(line: 5059, column: 9, scope: !9295)
!9357 = !DILocation(line: 5062, column: 9, scope: !9295)
!9358 = !DILocation(line: 5063, column: 13, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 5063, column: 13)
!9360 = !DILocation(line: 5063, column: 33, scope: !9359)
!9361 = !DILocation(line: 5063, column: 13, scope: !9295)
!9362 = !DILocation(line: 5063, column: 52, scope: !9359)
!9363 = !DILocation(line: 5063, column: 58, scope: !9359)
!9364 = !DILocation(line: 5063, column: 55, scope: !9359)
!9365 = !DILocation(line: 5063, column: 39, scope: !9359)
!9366 = !DILocation(line: 5064, column: 21, scope: !9295)
!9367 = !DILocation(line: 5066, column: 1, scope: !9288)
!9368 = distinct !DISubprogram(name: "saddCommand", scope: !3, file: !3, line: 5070, type: !340, scopeLine: 5070, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9369)
!9369 = !{!9370, !9371}
!9370 = !DILocalVariable(name: "c", arg: 1, scope: !9368, file: !3, line: 5070, type: !287)
!9371 = !DILocalVariable(name: "set", scope: !9368, file: !3, line: 5071, type: !145)
!9372 = !DILocation(line: 0, scope: !9368)
!9373 = !DILocation(line: 5073, column: 29, scope: !9368)
!9374 = !DILocation(line: 5073, column: 35, scope: !9368)
!9375 = !DILocation(line: 5073, column: 32, scope: !9368)
!9376 = !DILocation(line: 5073, column: 11, scope: !9368)
!9377 = !DILocation(line: 5074, column: 13, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 5074, column: 9)
!9379 = !DILocation(line: 5074, column: 9, scope: !9368)
!9380 = !DILocation(line: 5075, column: 15, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 5074, column: 22)
!9382 = !DILocation(line: 5076, column: 20, scope: !9381)
!9383 = !DILocation(line: 5076, column: 24, scope: !9381)
!9384 = !DILocation(line: 5076, column: 32, scope: !9381)
!9385 = !DILocation(line: 5076, column: 29, scope: !9381)
!9386 = !DILocation(line: 5076, column: 40, scope: !9381)
!9387 = !DILocation(line: 5076, column: 9, scope: !9381)
!9388 = !DILocation(line: 5077, column: 25, scope: !9381)
!9389 = !DILocation(line: 5077, column: 22, scope: !9381)
!9390 = !DILocation(line: 5077, column: 9, scope: !9381)
!9391 = !DILocation(line: 5078, column: 5, scope: !9381)
!9392 = !DILocation(line: 5079, column: 18, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 5079, column: 13)
!9394 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 5078, column: 12)
!9395 = !DILocation(line: 5079, column: 23, scope: !9393)
!9396 = !DILocation(line: 5079, column: 13, scope: !9394)
!9397 = !DILocation(line: 5084, column: 22, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 5084, column: 9)
!9399 = !DILocation(line: 5084, column: 29, scope: !9398)
!9400 = !DILocation(line: 5084, column: 26, scope: !9398)
!9401 = !DILocation(line: 5084, column: 9, scope: !9398)
!9402 = !DILocation(line: 5084, column: 43, scope: !9398)
!9403 = !DILocation(line: 5084, column: 9, scope: !9368)
!9404 = !DILocation(line: 5085, column: 25, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 5084, column: 55)
!9406 = !DILocation(line: 5085, column: 22, scope: !9405)
!9407 = !DILocation(line: 5085, column: 9, scope: !9405)
!9408 = !DILocation(line: 5086, column: 21, scope: !9405)
!9409 = !DILocation(line: 5088, column: 5, scope: !9405)
!9410 = !DILocation(line: 5091, column: 1, scope: !9368)
!9411 = distinct !DISubprogram(name: "sremCommand", scope: !3, file: !3, line: 5093, type: !340, scopeLine: 5093, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9412)
!9412 = !{!9413, !9414}
!9413 = !DILocalVariable(name: "c", arg: 1, scope: !9411, file: !3, line: 5093, type: !287)
!9414 = !DILocalVariable(name: "set", scope: !9411, file: !3, line: 5094, type: !145)
!9415 = !DILocation(line: 0, scope: !9411)
!9416 = !DILocation(line: 5096, column: 43, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 5096, column: 9)
!9418 = !DILocation(line: 5096, column: 40, scope: !9417)
!9419 = !DILocation(line: 5096, column: 58, scope: !9417)
!9420 = !DILocation(line: 5096, column: 16, scope: !9417)
!9421 = !DILocation(line: 5096, column: 66, scope: !9417)
!9422 = !DILocation(line: 5096, column: 74, scope: !9417)
!9423 = !DILocation(line: 5097, column: 9, scope: !9417)
!9424 = !DILocation(line: 5096, column: 9, scope: !9411)
!9425 = !DILocation(line: 5099, column: 25, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 5099, column: 9)
!9427 = !DILocation(line: 5099, column: 32, scope: !9426)
!9428 = !DILocation(line: 5099, column: 29, scope: !9426)
!9429 = !DILocation(line: 5099, column: 9, scope: !9426)
!9430 = !DILocation(line: 5099, column: 41, scope: !9426)
!9431 = !DILocation(line: 5099, column: 9, scope: !9411)
!9432 = !DILocation(line: 5100, column: 21, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 5099, column: 53)
!9434 = !DILocation(line: 5101, column: 32, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 5101, column: 13)
!9436 = !DILocation(line: 5101, column: 13, scope: !9435)
!9437 = !DILocation(line: 5101, column: 13, scope: !9433)
!9438 = !DILocation(line: 5101, column: 38, scope: !9435)
!9439 = !DILocation(line: 5102, column: 13, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 5102, column: 13)
!9441 = !DILocation(line: 5102, column: 39, scope: !9440)
!9442 = !DILocation(line: 5102, column: 13, scope: !9433)
!9443 = !DILocation(line: 5102, column: 58, scope: !9440)
!9444 = !DILocation(line: 5102, column: 64, scope: !9440)
!9445 = !DILocation(line: 5102, column: 61, scope: !9440)
!9446 = !DILocation(line: 5102, column: 45, scope: !9440)
!9447 = !DILocation(line: 0, scope: !9426)
!9448 = !DILocation(line: 5107, column: 1, scope: !9411)
!9449 = distinct !DISubprogram(name: "smoveCommand", scope: !3, file: !3, line: 5109, type: !340, scopeLine: 5109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9450)
!9450 = !{!9451, !9452, !9453}
!9451 = !DILocalVariable(name: "c", arg: 1, scope: !9449, file: !3, line: 5109, type: !287)
!9452 = !DILocalVariable(name: "srcset", scope: !9449, file: !3, line: 5110, type: !145)
!9453 = !DILocalVariable(name: "dstset", scope: !9449, file: !3, line: 5110, type: !145)
!9454 = !DILocation(line: 0, scope: !9449)
!9455 = !DILocation(line: 5112, column: 32, scope: !9449)
!9456 = !DILocation(line: 5112, column: 38, scope: !9449)
!9457 = !DILocation(line: 5112, column: 35, scope: !9449)
!9458 = !DILocation(line: 5112, column: 14, scope: !9449)
!9459 = !DILocation(line: 5113, column: 32, scope: !9449)
!9460 = !DILocation(line: 5113, column: 38, scope: !9449)
!9461 = !DILocation(line: 5113, column: 35, scope: !9449)
!9462 = !DILocation(line: 5113, column: 14, scope: !9449)
!9463 = !DILocation(line: 5117, column: 16, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5117, column: 9)
!9465 = !DILocation(line: 5117, column: 24, scope: !9464)
!9466 = !DILocation(line: 5117, column: 35, scope: !9464)
!9467 = !DILocation(line: 5117, column: 40, scope: !9464)
!9468 = !DILocation(line: 5117, column: 9, scope: !9449)
!9469 = !DILocation(line: 5118, column: 21, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 5117, column: 54)
!9471 = !DILocation(line: 5119, column: 9, scope: !9470)
!9472 = !DILocation(line: 5122, column: 9, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5122, column: 9)
!9474 = !DILocation(line: 5122, column: 16, scope: !9473)
!9475 = !DILocation(line: 5122, column: 27, scope: !9473)
!9476 = !DILocation(line: 5122, column: 32, scope: !9473)
!9477 = !DILocation(line: 5122, column: 9, scope: !9449)
!9478 = !DILocation(line: 5123, column: 27, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 5122, column: 46)
!9480 = !DILocation(line: 5124, column: 9, scope: !9479)
!9481 = !DILocation(line: 5127, column: 28, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5127, column: 9)
!9483 = !DILocation(line: 5127, column: 35, scope: !9482)
!9484 = !DILocation(line: 5127, column: 32, scope: !9482)
!9485 = !DILocation(line: 5127, column: 9, scope: !9482)
!9486 = !DILocation(line: 5127, column: 44, scope: !9482)
!9487 = !DILocation(line: 5127, column: 9, scope: !9449)
!9488 = !DILocation(line: 5129, column: 27, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 5127, column: 57)
!9490 = !DILocation(line: 5130, column: 9, scope: !9489)
!9491 = !DILocation(line: 5132, column: 9, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5132, column: 9)
!9493 = !DILocation(line: 5132, column: 38, scope: !9492)
!9494 = !DILocation(line: 5132, column: 43, scope: !9492)
!9495 = !DILocation(line: 5133, column: 22, scope: !9492)
!9496 = !DILocation(line: 5133, column: 28, scope: !9492)
!9497 = !DILocation(line: 5133, column: 25, scope: !9492)
!9498 = !DILocation(line: 5133, column: 9, scope: !9492)
!9499 = !DILocation(line: 5134, column: 17, scope: !9449)
!9500 = !DILocation(line: 5136, column: 9, scope: !9449)
!9501 = !DILocation(line: 5137, column: 18, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 5136, column: 18)
!9503 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5136, column: 9)
!9504 = !DILocation(line: 5138, column: 20, scope: !9502)
!9505 = !DILocation(line: 5138, column: 24, scope: !9502)
!9506 = !DILocation(line: 5138, column: 32, scope: !9502)
!9507 = !DILocation(line: 5138, column: 29, scope: !9502)
!9508 = !DILocation(line: 5138, column: 40, scope: !9502)
!9509 = !DILocation(line: 5138, column: 9, scope: !9502)
!9510 = !DILocation(line: 5139, column: 25, scope: !9502)
!9511 = !DILocation(line: 5139, column: 22, scope: !9502)
!9512 = !DILocation(line: 5139, column: 9, scope: !9502)
!9513 = !DILocation(line: 5140, column: 5, scope: !9502)
!9514 = !DILocation(line: 5141, column: 25, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 5141, column: 9)
!9516 = !DILocation(line: 5141, column: 32, scope: !9515)
!9517 = !DILocation(line: 5141, column: 29, scope: !9515)
!9518 = !DILocation(line: 5141, column: 9, scope: !9515)
!9519 = !DILocation(line: 5141, column: 46, scope: !9515)
!9520 = !DILocation(line: 5141, column: 9, scope: !9449)
!9521 = !DILocation(line: 5142, column: 25, scope: !9515)
!9522 = !DILocation(line: 5142, column: 22, scope: !9515)
!9523 = !DILocation(line: 5142, column: 9, scope: !9515)
!9524 = !DILocation(line: 5143, column: 23, scope: !9449)
!9525 = !DILocation(line: 5144, column: 1, scope: !9449)
!9526 = distinct !DISubprogram(name: "sismemberCommand", scope: !3, file: !3, line: 5146, type: !340, scopeLine: 5146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9527)
!9527 = !{!9528, !9529}
!9528 = !DILocalVariable(name: "c", arg: 1, scope: !9526, file: !3, line: 5146, type: !287)
!9529 = !DILocalVariable(name: "set", scope: !9526, file: !3, line: 5147, type: !145)
!9530 = !DILocation(line: 0, scope: !9526)
!9531 = !DILocation(line: 5149, column: 42, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 5149, column: 9)
!9533 = !DILocation(line: 5149, column: 39, scope: !9532)
!9534 = !DILocation(line: 5149, column: 57, scope: !9532)
!9535 = !DILocation(line: 5149, column: 16, scope: !9532)
!9536 = !DILocation(line: 5149, column: 65, scope: !9532)
!9537 = !DILocation(line: 5149, column: 73, scope: !9532)
!9538 = !DILocation(line: 5150, column: 9, scope: !9532)
!9539 = !DILocation(line: 5149, column: 9, scope: !9526)
!9540 = !DILocation(line: 5152, column: 23, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 5152, column: 9)
!9542 = !DILocation(line: 5152, column: 30, scope: !9541)
!9543 = !DILocation(line: 5152, column: 27, scope: !9541)
!9544 = !DILocation(line: 5152, column: 9, scope: !9541)
!9545 = !DILocation(line: 0, scope: !9541)
!9546 = !DILocation(line: 5156, column: 1, scope: !9526)
!9547 = distinct !DISubprogram(name: "scardCommand", scope: !3, file: !3, line: 5158, type: !340, scopeLine: 5158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9548)
!9548 = !{!9549, !9550, !9551}
!9549 = !DILocalVariable(name: "c", arg: 1, scope: !9547, file: !3, line: 5158, type: !287)
!9550 = !DILocalVariable(name: "o", scope: !9547, file: !3, line: 5159, type: !145)
!9551 = !DILocalVariable(name: "s", scope: !9547, file: !3, line: 5160, type: !86)
!9552 = !DILocation(line: 0, scope: !9547)
!9553 = !DILocation(line: 5162, column: 40, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 5162, column: 9)
!9555 = !DILocation(line: 5162, column: 37, scope: !9554)
!9556 = !DILocation(line: 5162, column: 55, scope: !9554)
!9557 = !DILocation(line: 5162, column: 14, scope: !9554)
!9558 = !DILocation(line: 5162, column: 63, scope: !9554)
!9559 = !DILocation(line: 5162, column: 71, scope: !9554)
!9560 = !DILocation(line: 5163, column: 9, scope: !9554)
!9561 = !DILocation(line: 5162, column: 9, scope: !9547)
!9562 = !DILocation(line: 5165, column: 12, scope: !9547)
!9563 = !DILocation(line: 5166, column: 21, scope: !9547)
!9564 = !DILocation(line: 5166, column: 5, scope: !9547)
!9565 = !DILocation(line: 5167, column: 1, scope: !9547)
!9566 = distinct !DISubprogram(name: "spopCommand", scope: !3, file: !3, line: 5169, type: !340, scopeLine: 5169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9567)
!9567 = !{!9568, !9569, !9570, !9571}
!9568 = !DILocalVariable(name: "c", arg: 1, scope: !9566, file: !3, line: 5169, type: !287)
!9569 = !DILocalVariable(name: "set", scope: !9566, file: !3, line: 5170, type: !145)
!9570 = !DILocalVariable(name: "de", scope: !9566, file: !3, line: 5171, type: !124)
!9571 = !DILocalVariable(name: "ele", scope: !9572, file: !3, line: 5180, type: !145)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 5179, column: 12)
!9573 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 5177, column: 9)
!9574 = !DILocation(line: 0, scope: !9566)
!9575 = !DILocation(line: 5173, column: 43, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 5173, column: 9)
!9577 = !DILocation(line: 5173, column: 40, scope: !9576)
!9578 = !DILocation(line: 5173, column: 58, scope: !9576)
!9579 = !DILocation(line: 5173, column: 16, scope: !9576)
!9580 = !DILocation(line: 5173, column: 69, scope: !9576)
!9581 = !DILocation(line: 5173, column: 77, scope: !9576)
!9582 = !DILocation(line: 5174, column: 9, scope: !9576)
!9583 = !DILocation(line: 5173, column: 9, scope: !9566)
!9584 = !DILocation(line: 5176, column: 32, scope: !9566)
!9585 = !DILocation(line: 5176, column: 10, scope: !9566)
!9586 = !DILocation(line: 5177, column: 12, scope: !9573)
!9587 = !DILocation(line: 5177, column: 9, scope: !9566)
!9588 = !DILocation(line: 5178, column: 27, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 5177, column: 21)
!9590 = !DILocation(line: 5178, column: 9, scope: !9589)
!9591 = !DILocation(line: 5179, column: 5, scope: !9589)
!9592 = !DILocation(line: 5180, column: 21, scope: !9572)
!9593 = !DILocation(line: 0, scope: !9572)
!9594 = !DILocation(line: 5182, column: 9, scope: !9572)
!9595 = !DILocation(line: 5183, column: 25, scope: !9572)
!9596 = !DILocation(line: 5183, column: 9, scope: !9572)
!9597 = !DILocation(line: 5184, column: 32, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5184, column: 13)
!9599 = !DILocation(line: 5184, column: 13, scope: !9598)
!9600 = !DILocation(line: 5184, column: 13, scope: !9572)
!9601 = !DILocation(line: 5184, column: 38, scope: !9598)
!9602 = !DILocation(line: 5185, column: 13, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 5185, column: 13)
!9604 = !DILocation(line: 5185, column: 39, scope: !9603)
!9605 = !DILocation(line: 5185, column: 13, scope: !9572)
!9606 = !DILocation(line: 5185, column: 58, scope: !9603)
!9607 = !DILocation(line: 5185, column: 64, scope: !9603)
!9608 = !DILocation(line: 5185, column: 61, scope: !9603)
!9609 = !DILocation(line: 5185, column: 45, scope: !9603)
!9610 = !DILocation(line: 5186, column: 21, scope: !9572)
!9611 = !DILocation(line: 5188, column: 1, scope: !9566)
!9612 = distinct !DISubprogram(name: "srandmemberCommand", scope: !3, file: !3, line: 5190, type: !340, scopeLine: 5190, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9613)
!9613 = !{!9614, !9615, !9616, !9617}
!9614 = !DILocalVariable(name: "c", arg: 1, scope: !9612, file: !3, line: 5190, type: !287)
!9615 = !DILocalVariable(name: "set", scope: !9612, file: !3, line: 5191, type: !145)
!9616 = !DILocalVariable(name: "de", scope: !9612, file: !3, line: 5192, type: !124)
!9617 = !DILocalVariable(name: "ele", scope: !9618, file: !3, line: 5201, type: !145)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 5200, column: 12)
!9619 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 5198, column: 9)
!9620 = !DILocation(line: 0, scope: !9612)
!9621 = !DILocation(line: 5194, column: 42, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 5194, column: 9)
!9623 = !DILocation(line: 5194, column: 39, scope: !9622)
!9624 = !DILocation(line: 5194, column: 57, scope: !9622)
!9625 = !DILocation(line: 5194, column: 16, scope: !9622)
!9626 = !DILocation(line: 5194, column: 68, scope: !9622)
!9627 = !DILocation(line: 5194, column: 76, scope: !9622)
!9628 = !DILocation(line: 5195, column: 9, scope: !9622)
!9629 = !DILocation(line: 5194, column: 9, scope: !9612)
!9630 = !DILocation(line: 5197, column: 32, scope: !9612)
!9631 = !DILocation(line: 5197, column: 10, scope: !9612)
!9632 = !DILocation(line: 5198, column: 12, scope: !9619)
!9633 = !DILocation(line: 5198, column: 9, scope: !9612)
!9634 = !DILocation(line: 5199, column: 27, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 5198, column: 21)
!9636 = !DILocation(line: 5199, column: 9, scope: !9635)
!9637 = !DILocation(line: 5200, column: 5, scope: !9635)
!9638 = !DILocation(line: 5201, column: 21, scope: !9618)
!9639 = !DILocation(line: 0, scope: !9618)
!9640 = !DILocation(line: 5203, column: 9, scope: !9618)
!9641 = !DILocation(line: 5205, column: 1, scope: !9612)
!9642 = distinct !DISubprogram(name: "sinterCommand", scope: !3, file: !3, line: 5305, type: !340, scopeLine: 5305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9643)
!9643 = !{!9644}
!9644 = !DILocalVariable(name: "c", arg: 1, scope: !9642, file: !3, line: 5305, type: !287)
!9645 = !DILocation(line: 0, scope: !9642)
!9646 = !DILocation(line: 5306, column: 31, scope: !9642)
!9647 = !DILocation(line: 5306, column: 35, scope: !9642)
!9648 = !DILocation(line: 5306, column: 41, scope: !9642)
!9649 = !DILocation(line: 5306, column: 45, scope: !9642)
!9650 = !DILocation(line: 5306, column: 38, scope: !9642)
!9651 = !DILocation(line: 5306, column: 5, scope: !9642)
!9652 = !DILocation(line: 5307, column: 1, scope: !9642)
!9653 = distinct !DISubprogram(name: "sinterstoreCommand", scope: !3, file: !3, line: 5309, type: !340, scopeLine: 5309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9654)
!9654 = !{!9655}
!9655 = !DILocalVariable(name: "c", arg: 1, scope: !9653, file: !3, line: 5309, type: !287)
!9656 = !DILocation(line: 0, scope: !9653)
!9657 = !DILocation(line: 5310, column: 31, scope: !9653)
!9658 = !DILocation(line: 5310, column: 35, scope: !9653)
!9659 = !DILocation(line: 5310, column: 41, scope: !9653)
!9660 = !DILocation(line: 5310, column: 45, scope: !9653)
!9661 = !DILocation(line: 5310, column: 38, scope: !9653)
!9662 = !DILocation(line: 5310, column: 48, scope: !9653)
!9663 = !DILocation(line: 5310, column: 5, scope: !9653)
!9664 = !DILocation(line: 5311, column: 1, scope: !9653)
!9665 = distinct !DISubprogram(name: "sunionCommand", scope: !3, file: !3, line: 5406, type: !340, scopeLine: 5406, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9666)
!9666 = !{!9667}
!9667 = !DILocalVariable(name: "c", arg: 1, scope: !9665, file: !3, line: 5406, type: !287)
!9668 = !DILocation(line: 0, scope: !9665)
!9669 = !DILocation(line: 5407, column: 35, scope: !9665)
!9670 = !DILocation(line: 5407, column: 39, scope: !9665)
!9671 = !DILocation(line: 5407, column: 45, scope: !9665)
!9672 = !DILocation(line: 5407, column: 49, scope: !9665)
!9673 = !DILocation(line: 5407, column: 5, scope: !9665)
!9674 = !DILocation(line: 5408, column: 1, scope: !9665)
!9675 = distinct !DISubprogram(name: "sunionstoreCommand", scope: !3, file: !3, line: 5410, type: !340, scopeLine: 5410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9676)
!9676 = !{!9677}
!9677 = !DILocalVariable(name: "c", arg: 1, scope: !9675, file: !3, line: 5410, type: !287)
!9678 = !DILocation(line: 0, scope: !9675)
!9679 = !DILocation(line: 5411, column: 35, scope: !9675)
!9680 = !DILocation(line: 5411, column: 39, scope: !9675)
!9681 = !DILocation(line: 5411, column: 45, scope: !9675)
!9682 = !DILocation(line: 5411, column: 49, scope: !9675)
!9683 = !DILocation(line: 5411, column: 52, scope: !9675)
!9684 = !DILocation(line: 5411, column: 5, scope: !9675)
!9685 = !DILocation(line: 5412, column: 1, scope: !9675)
!9686 = distinct !DISubprogram(name: "sdiffCommand", scope: !3, file: !3, line: 5414, type: !340, scopeLine: 5414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9687)
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "c", arg: 1, scope: !9686, file: !3, line: 5414, type: !287)
!9689 = !DILocation(line: 0, scope: !9686)
!9690 = !DILocation(line: 5415, column: 35, scope: !9686)
!9691 = !DILocation(line: 5415, column: 39, scope: !9686)
!9692 = !DILocation(line: 5415, column: 45, scope: !9686)
!9693 = !DILocation(line: 5415, column: 49, scope: !9686)
!9694 = !DILocation(line: 5415, column: 5, scope: !9686)
!9695 = !DILocation(line: 5416, column: 1, scope: !9686)
!9696 = distinct !DISubprogram(name: "sdiffstoreCommand", scope: !3, file: !3, line: 5418, type: !340, scopeLine: 5418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9697)
!9697 = !{!9698}
!9698 = !DILocalVariable(name: "c", arg: 1, scope: !9696, file: !3, line: 5418, type: !287)
!9699 = !DILocation(line: 0, scope: !9696)
!9700 = !DILocation(line: 5419, column: 35, scope: !9696)
!9701 = !DILocation(line: 5419, column: 39, scope: !9696)
!9702 = !DILocation(line: 5419, column: 45, scope: !9696)
!9703 = !DILocation(line: 5419, column: 49, scope: !9696)
!9704 = !DILocation(line: 5419, column: 52, scope: !9696)
!9705 = !DILocation(line: 5419, column: 5, scope: !9696)
!9706 = !DILocation(line: 5420, column: 1, scope: !9696)
!9707 = distinct !DISubprogram(name: "zaddCommand", scope: !3, file: !3, line: 5825, type: !340, scopeLine: 5825, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9708)
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "c", arg: 1, scope: !9707, file: !3, line: 5825, type: !287)
!9710 = !DILocalVariable(name: "scoreval", scope: !9707, file: !3, line: 5826, type: !168)
!9711 = !DILocation(line: 0, scope: !9707)
!9712 = !DILocation(line: 5826, column: 5, scope: !9707)
!9713 = !DILocation(line: 5827, column: 41, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 5827, column: 9)
!9715 = !DILocation(line: 5827, column: 38, scope: !9714)
!9716 = !DILocation(line: 5827, column: 9, scope: !9714)
!9717 = !DILocation(line: 5827, column: 65, scope: !9714)
!9718 = !DILocation(line: 5827, column: 9, scope: !9707)
!9719 = !DILocation(line: 5828, column: 29, scope: !9707)
!9720 = !DILocation(line: 5828, column: 26, scope: !9707)
!9721 = !DILocation(line: 5828, column: 37, scope: !9707)
!9722 = !DILocation(line: 5828, column: 48, scope: !9707)
!9723 = !DILocation(line: 5828, column: 5, scope: !9707)
!9724 = !DILocation(line: 5829, column: 1, scope: !9707)
!9725 = distinct !DISubprogram(name: "zincrbyCommand", scope: !3, file: !3, line: 5831, type: !340, scopeLine: 5831, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9726)
!9726 = !{!9727, !9728}
!9727 = !DILocalVariable(name: "c", arg: 1, scope: !9725, file: !3, line: 5831, type: !287)
!9728 = !DILocalVariable(name: "scoreval", scope: !9725, file: !3, line: 5832, type: !168)
!9729 = !DILocation(line: 0, scope: !9725)
!9730 = !DILocation(line: 5832, column: 5, scope: !9725)
!9731 = !DILocation(line: 5833, column: 41, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 5833, column: 9)
!9733 = !DILocation(line: 5833, column: 38, scope: !9732)
!9734 = !DILocation(line: 5833, column: 9, scope: !9732)
!9735 = !DILocation(line: 5833, column: 65, scope: !9732)
!9736 = !DILocation(line: 5833, column: 9, scope: !9725)
!9737 = !DILocation(line: 5834, column: 29, scope: !9725)
!9738 = !DILocation(line: 5834, column: 26, scope: !9725)
!9739 = !DILocation(line: 5834, column: 37, scope: !9725)
!9740 = !DILocation(line: 5834, column: 48, scope: !9725)
!9741 = !DILocation(line: 5834, column: 5, scope: !9725)
!9742 = !DILocation(line: 5835, column: 1, scope: !9725)
!9743 = distinct !DISubprogram(name: "zremCommand", scope: !3, file: !3, line: 5837, type: !340, scopeLine: 5837, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9744)
!9744 = !{!9745, !9746, !9747, !9748, !9749, !9750}
!9745 = !DILocalVariable(name: "c", arg: 1, scope: !9743, file: !3, line: 5837, type: !287)
!9746 = !DILocalVariable(name: "zsetobj", scope: !9743, file: !3, line: 5838, type: !145)
!9747 = !DILocalVariable(name: "zs", scope: !9743, file: !3, line: 5839, type: !171)
!9748 = !DILocalVariable(name: "de", scope: !9743, file: !3, line: 5840, type: !124)
!9749 = !DILocalVariable(name: "oldscore", scope: !9743, file: !3, line: 5841, type: !198)
!9750 = !DILocalVariable(name: "deleted", scope: !9743, file: !3, line: 5842, type: !45)
!9751 = !DILocation(line: 0, scope: !9743)
!9752 = !DILocation(line: 5844, column: 47, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 5844, column: 9)
!9754 = !DILocation(line: 5844, column: 44, scope: !9753)
!9755 = !DILocation(line: 5844, column: 62, scope: !9753)
!9756 = !DILocation(line: 5844, column: 20, scope: !9753)
!9757 = !DILocation(line: 5844, column: 70, scope: !9753)
!9758 = !DILocation(line: 5844, column: 78, scope: !9753)
!9759 = !DILocation(line: 5845, column: 9, scope: !9753)
!9760 = !DILocation(line: 5844, column: 9, scope: !9743)
!9761 = !DILocation(line: 5847, column: 19, scope: !9743)
!9762 = !DILocation(line: 5848, column: 23, scope: !9743)
!9763 = !DILocation(line: 5848, column: 31, scope: !9743)
!9764 = !DILocation(line: 5848, column: 28, scope: !9743)
!9765 = !DILocation(line: 5848, column: 10, scope: !9743)
!9766 = !DILocation(line: 5849, column: 12, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 5849, column: 9)
!9768 = !DILocation(line: 5849, column: 9, scope: !9743)
!9769 = !DILocation(line: 5854, column: 16, scope: !9743)
!9770 = !DILocation(line: 5855, column: 29, scope: !9743)
!9771 = !DILocation(line: 5855, column: 33, scope: !9743)
!9772 = !DILocation(line: 5855, column: 46, scope: !9743)
!9773 = !DILocation(line: 5855, column: 43, scope: !9743)
!9774 = !DILocation(line: 5855, column: 15, scope: !9743)
!9775 = !DILocation(line: 5856, column: 5, scope: !9743)
!9776 = !DILocation(line: 5859, column: 20, scope: !9743)
!9777 = !DILocation(line: 5859, column: 28, scope: !9743)
!9778 = !DILocation(line: 5859, column: 25, scope: !9743)
!9779 = !DILocation(line: 5859, column: 5, scope: !9743)
!9780 = !DILocation(line: 5860, column: 27, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 5860, column: 9)
!9782 = !DILocation(line: 5860, column: 9, scope: !9781)
!9783 = !DILocation(line: 5860, column: 9, scope: !9743)
!9784 = !DILocation(line: 5860, column: 34, scope: !9781)
!9785 = !DILocation(line: 5861, column: 9, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 5861, column: 9)
!9787 = !DILocation(line: 5861, column: 28, scope: !9786)
!9788 = !DILocation(line: 5861, column: 9, scope: !9743)
!9789 = !DILocation(line: 5861, column: 47, scope: !9786)
!9790 = !DILocation(line: 5861, column: 53, scope: !9786)
!9791 = !DILocation(line: 5861, column: 50, scope: !9786)
!9792 = !DILocation(line: 5861, column: 34, scope: !9786)
!9793 = !DILocation(line: 5862, column: 17, scope: !9743)
!9794 = !DILocation(line: 5864, column: 1, scope: !9743)
!9795 = distinct !DISubprogram(name: "zremrangebyscoreCommand", scope: !3, file: !3, line: 5866, type: !340, scopeLine: 5866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9796)
!9796 = !{!9797, !9798, !9799, !9800, !9801, !9802}
!9797 = !DILocalVariable(name: "c", arg: 1, scope: !9795, file: !3, line: 5866, type: !287)
!9798 = !DILocalVariable(name: "min", scope: !9795, file: !3, line: 5867, type: !168)
!9799 = !DILocalVariable(name: "max", scope: !9795, file: !3, line: 5868, type: !168)
!9800 = !DILocalVariable(name: "deleted", scope: !9795, file: !3, line: 5869, type: !53)
!9801 = !DILocalVariable(name: "zsetobj", scope: !9795, file: !3, line: 5870, type: !145)
!9802 = !DILocalVariable(name: "zs", scope: !9795, file: !3, line: 5871, type: !171)
!9803 = !DILocation(line: 0, scope: !9795)
!9804 = !DILocation(line: 5867, column: 5, scope: !9795)
!9805 = !DILocation(line: 5868, column: 5, scope: !9795)
!9806 = !DILocation(line: 5873, column: 43, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 5873, column: 9)
!9808 = !DILocation(line: 5873, column: 40, scope: !9807)
!9809 = !DILocation(line: 5873, column: 10, scope: !9807)
!9810 = !DILocation(line: 5873, column: 64, scope: !9807)
!9811 = !DILocation(line: 5873, column: 77, scope: !9807)
!9812 = !DILocation(line: 5874, column: 43, scope: !9807)
!9813 = !DILocation(line: 5874, column: 40, scope: !9807)
!9814 = !DILocation(line: 5874, column: 10, scope: !9807)
!9815 = !DILocation(line: 5874, column: 64, scope: !9807)
!9816 = !DILocation(line: 5873, column: 9, scope: !9795)
!9817 = !DILocation(line: 5876, column: 47, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 5876, column: 9)
!9819 = !DILocation(line: 5876, column: 44, scope: !9818)
!9820 = !DILocation(line: 5876, column: 62, scope: !9818)
!9821 = !DILocation(line: 5876, column: 20, scope: !9818)
!9822 = !DILocation(line: 5876, column: 70, scope: !9818)
!9823 = !DILocation(line: 5876, column: 78, scope: !9818)
!9824 = !DILocation(line: 5877, column: 9, scope: !9818)
!9825 = !DILocation(line: 5876, column: 9, scope: !9795)
!9826 = !DILocation(line: 5879, column: 19, scope: !9795)
!9827 = !DILocation(line: 5880, column: 41, scope: !9795)
!9828 = !DILocation(line: 5880, column: 45, scope: !9795)
!9829 = !DILocation(line: 5880, column: 49, scope: !9795)
!9830 = !DILocation(line: 5880, column: 57, scope: !9795)
!9831 = !DILocation(line: 5880, column: 15, scope: !9795)
!9832 = !DILocation(line: 5881, column: 27, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 5881, column: 9)
!9834 = !DILocation(line: 5881, column: 9, scope: !9833)
!9835 = !DILocation(line: 5881, column: 9, scope: !9795)
!9836 = !DILocation(line: 5881, column: 34, scope: !9833)
!9837 = !DILocation(line: 5882, column: 9, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 5882, column: 9)
!9839 = !DILocation(line: 5882, column: 28, scope: !9838)
!9840 = !DILocation(line: 5882, column: 9, scope: !9795)
!9841 = !DILocation(line: 5882, column: 47, scope: !9838)
!9842 = !DILocation(line: 5882, column: 53, scope: !9838)
!9843 = !DILocation(line: 5882, column: 50, scope: !9838)
!9844 = !DILocation(line: 5882, column: 34, scope: !9838)
!9845 = !DILocation(line: 5883, column: 18, scope: !9795)
!9846 = !DILocation(line: 5884, column: 5, scope: !9795)
!9847 = !DILocation(line: 5885, column: 1, scope: !9795)
!9848 = distinct !DISubprogram(name: "zremrangebyrankCommand", scope: !3, file: !3, line: 5887, type: !340, scopeLine: 5887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854, !9855, !9856}
!9850 = !DILocalVariable(name: "c", arg: 1, scope: !9848, file: !3, line: 5887, type: !287)
!9851 = !DILocalVariable(name: "start", scope: !9848, file: !3, line: 5888, type: !53)
!9852 = !DILocalVariable(name: "end", scope: !9848, file: !3, line: 5889, type: !53)
!9853 = !DILocalVariable(name: "llen", scope: !9848, file: !3, line: 5890, type: !45)
!9854 = !DILocalVariable(name: "deleted", scope: !9848, file: !3, line: 5891, type: !53)
!9855 = !DILocalVariable(name: "zsetobj", scope: !9848, file: !3, line: 5892, type: !145)
!9856 = !DILocalVariable(name: "zs", scope: !9848, file: !3, line: 5893, type: !171)
!9857 = !DILocation(line: 0, scope: !9848)
!9858 = !DILocation(line: 5888, column: 5, scope: !9848)
!9859 = !DILocation(line: 5889, column: 5, scope: !9848)
!9860 = !DILocation(line: 5895, column: 41, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5895, column: 9)
!9862 = !DILocation(line: 5895, column: 38, scope: !9861)
!9863 = !DILocation(line: 5895, column: 10, scope: !9861)
!9864 = !DILocation(line: 5895, column: 64, scope: !9861)
!9865 = !DILocation(line: 5895, column: 77, scope: !9861)
!9866 = !DILocation(line: 5896, column: 41, scope: !9861)
!9867 = !DILocation(line: 5896, column: 38, scope: !9861)
!9868 = !DILocation(line: 5896, column: 10, scope: !9861)
!9869 = !DILocation(line: 5896, column: 62, scope: !9861)
!9870 = !DILocation(line: 5895, column: 9, scope: !9848)
!9871 = !DILocation(line: 5898, column: 47, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5898, column: 9)
!9873 = !DILocation(line: 5898, column: 44, scope: !9872)
!9874 = !DILocation(line: 5898, column: 62, scope: !9872)
!9875 = !DILocation(line: 5898, column: 20, scope: !9872)
!9876 = !DILocation(line: 5898, column: 70, scope: !9872)
!9877 = !DILocation(line: 5898, column: 78, scope: !9872)
!9878 = !DILocation(line: 5899, column: 9, scope: !9872)
!9879 = !DILocation(line: 5898, column: 9, scope: !9848)
!9880 = !DILocation(line: 5900, column: 19, scope: !9848)
!9881 = !DILocation(line: 5901, column: 16, scope: !9848)
!9882 = !DILocation(line: 5901, column: 21, scope: !9848)
!9883 = !DILocation(line: 5904, column: 9, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5904, column: 9)
!9885 = !DILocation(line: 5904, column: 15, scope: !9884)
!9886 = !DILocation(line: 5904, column: 9, scope: !9848)
!9887 = !DILocation(line: 5905, column: 9, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5905, column: 9)
!9889 = !DILocation(line: 5905, column: 13, scope: !9888)
!9890 = !DILocation(line: 5905, column: 9, scope: !9848)
!9891 = !DILocation(line: 5906, column: 9, scope: !9848)
!9892 = !DILocation(line: 5910, column: 15, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5910, column: 9)
!9894 = !DILocation(line: 5910, column: 21, scope: !9893)
!9895 = !DILocation(line: 5910, column: 33, scope: !9893)
!9896 = !DILocation(line: 5910, column: 30, scope: !9893)
!9897 = !DILocation(line: 5910, column: 9, scope: !9848)
!9898 = !DILocation(line: 5911, column: 27, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 5910, column: 39)
!9900 = !DILocation(line: 5911, column: 9, scope: !9899)
!9901 = !DILocation(line: 5912, column: 9, scope: !9899)
!9902 = !DILocation(line: 5914, column: 13, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5914, column: 9)
!9904 = !DILocation(line: 5914, column: 9, scope: !9848)
!9905 = !DILocation(line: 5914, column: 28, scope: !9903)
!9906 = !DILocation(line: 5914, column: 26, scope: !9903)
!9907 = !DILocation(line: 5914, column: 22, scope: !9903)
!9908 = !DILocation(line: 5918, column: 52, scope: !9848)
!9909 = !DILocation(line: 5918, column: 44, scope: !9848)
!9910 = !DILocation(line: 5918, column: 62, scope: !9848)
!9911 = !DILocation(line: 5918, column: 15, scope: !9848)
!9912 = !DILocation(line: 5919, column: 27, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5919, column: 9)
!9914 = !DILocation(line: 5919, column: 9, scope: !9913)
!9915 = !DILocation(line: 5919, column: 9, scope: !9848)
!9916 = !DILocation(line: 5919, column: 34, scope: !9913)
!9917 = !DILocation(line: 5920, column: 9, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 5920, column: 9)
!9919 = !DILocation(line: 5920, column: 28, scope: !9918)
!9920 = !DILocation(line: 5920, column: 9, scope: !9848)
!9921 = !DILocation(line: 5920, column: 47, scope: !9918)
!9922 = !DILocation(line: 5920, column: 53, scope: !9918)
!9923 = !DILocation(line: 5920, column: 50, scope: !9918)
!9924 = !DILocation(line: 5920, column: 34, scope: !9918)
!9925 = !DILocation(line: 5921, column: 18, scope: !9848)
!9926 = !DILocation(line: 5922, column: 5, scope: !9848)
!9927 = !DILocation(line: 5923, column: 1, scope: !9848)
!9928 = distinct !DISubprogram(name: "zunionstoreCommand", scope: !3, file: !3, line: 6125, type: !340, scopeLine: 6125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9929)
!9929 = !{!9930}
!9930 = !DILocalVariable(name: "c", arg: 1, scope: !9928, file: !3, line: 6125, type: !287)
!9931 = !DILocation(line: 0, scope: !9928)
!9932 = !DILocation(line: 6126, column: 36, scope: !9928)
!9933 = !DILocation(line: 6126, column: 33, scope: !9928)
!9934 = !DILocation(line: 6126, column: 5, scope: !9928)
!9935 = !DILocation(line: 6127, column: 1, scope: !9928)
!9936 = distinct !DISubprogram(name: "zunionInterBlockClientOnSwappedKeys", scope: !3, file: !3, line: 9844, type: !347, scopeLine: 9844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9937)
!9937 = !{!9938, !9939, !9940, !9941, !9942, !9943}
!9938 = !DILocalVariable(name: "c", arg: 1, scope: !9936, file: !3, line: 9844, type: !287)
!9939 = !DILocalVariable(name: "cmd", arg: 2, scope: !9936, file: !3, line: 9844, type: !333)
!9940 = !DILocalVariable(name: "argc", arg: 3, scope: !9936, file: !3, line: 9844, type: !45)
!9941 = !DILocalVariable(name: "argv", arg: 4, scope: !9936, file: !3, line: 9844, type: !305)
!9942 = !DILocalVariable(name: "i", scope: !9936, file: !3, line: 9845, type: !45)
!9943 = !DILocalVariable(name: "num", scope: !9936, file: !3, line: 9845, type: !45)
!9944 = !DILocation(line: 0, scope: !9936)
!9945 = !DILocation(line: 9848, column: 16, scope: !9936)
!9946 = !DILocation(line: 9848, column: 25, scope: !9936)
!9947 = !DILocation(line: 9848, column: 11, scope: !9936)
!9948 = !DILocation(line: 9849, column: 20, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 9849, column: 9)
!9950 = !DILocation(line: 9849, column: 13, scope: !9949)
!9951 = !DILocation(line: 9849, column: 9, scope: !9936)
!9952 = !DILocation(line: 9850, column: 19, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 9850, column: 5)
!9954 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 9850, column: 5)
!9955 = !DILocation(line: 9850, column: 5, scope: !9954)
!9956 = !DILocation(line: 9851, column: 35, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 9850, column: 31)
!9958 = !DILocation(line: 9851, column: 29, scope: !9957)
!9959 = !DILocation(line: 9851, column: 9, scope: !9957)
!9960 = !DILocation(line: 9850, column: 27, scope: !9953)
!9961 = distinct !{!9961, !9955, !9962}
!9962 = !DILocation(line: 9852, column: 5, scope: !9954)
!9963 = !DILocation(line: 9853, column: 1, scope: !9936)
!9964 = distinct !DISubprogram(name: "zinterstoreCommand", scope: !3, file: !3, line: 6129, type: !340, scopeLine: 6129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9965)
!9965 = !{!9966}
!9966 = !DILocalVariable(name: "c", arg: 1, scope: !9964, file: !3, line: 6129, type: !287)
!9967 = !DILocation(line: 0, scope: !9964)
!9968 = !DILocation(line: 6130, column: 36, scope: !9964)
!9969 = !DILocation(line: 6130, column: 33, scope: !9964)
!9970 = !DILocation(line: 6130, column: 5, scope: !9964)
!9971 = !DILocation(line: 6131, column: 1, scope: !9964)
!9972 = distinct !DISubprogram(name: "zrangeCommand", scope: !3, file: !3, line: 6196, type: !340, scopeLine: 6196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9973)
!9973 = !{!9974}
!9974 = !DILocalVariable(name: "c", arg: 1, scope: !9972, file: !3, line: 6196, type: !287)
!9975 = !DILocation(line: 0, scope: !9972)
!9976 = !DILocation(line: 6197, column: 5, scope: !9972)
!9977 = !DILocation(line: 6198, column: 1, scope: !9972)
!9978 = distinct !DISubprogram(name: "zrangebyscoreCommand", scope: !3, file: !3, line: 6320, type: !340, scopeLine: 6320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9979)
!9979 = !{!9980}
!9980 = !DILocalVariable(name: "c", arg: 1, scope: !9978, file: !3, line: 6320, type: !287)
!9981 = !DILocation(line: 0, scope: !9978)
!9982 = !DILocation(line: 6321, column: 5, scope: !9978)
!9983 = !DILocation(line: 6322, column: 1, scope: !9978)
!9984 = distinct !DISubprogram(name: "zcountCommand", scope: !3, file: !3, line: 6324, type: !340, scopeLine: 6324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9985)
!9985 = !{!9986}
!9986 = !DILocalVariable(name: "c", arg: 1, scope: !9984, file: !3, line: 6324, type: !287)
!9987 = !DILocation(line: 0, scope: !9984)
!9988 = !DILocation(line: 6325, column: 5, scope: !9984)
!9989 = !DILocation(line: 6326, column: 1, scope: !9984)
!9990 = distinct !DISubprogram(name: "zrevrangeCommand", scope: !3, file: !3, line: 6200, type: !340, scopeLine: 6200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9991)
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "c", arg: 1, scope: !9990, file: !3, line: 6200, type: !287)
!9993 = !DILocation(line: 0, scope: !9990)
!9994 = !DILocation(line: 6201, column: 5, scope: !9990)
!9995 = !DILocation(line: 6202, column: 1, scope: !9990)
!9996 = distinct !DISubprogram(name: "zcardCommand", scope: !3, file: !3, line: 6328, type: !340, scopeLine: 6328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9997)
!9997 = !{!9998, !9999, !10000}
!9998 = !DILocalVariable(name: "c", arg: 1, scope: !9996, file: !3, line: 6328, type: !287)
!9999 = !DILocalVariable(name: "o", scope: !9996, file: !3, line: 6329, type: !145)
!10000 = !DILocalVariable(name: "zs", scope: !9996, file: !3, line: 6330, type: !171)
!10001 = !DILocation(line: 0, scope: !9996)
!10002 = !DILocation(line: 6332, column: 40, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 6332, column: 9)
!10004 = !DILocation(line: 6332, column: 37, scope: !10003)
!10005 = !DILocation(line: 6332, column: 55, scope: !10003)
!10006 = !DILocation(line: 6332, column: 14, scope: !10003)
!10007 = !DILocation(line: 6332, column: 63, scope: !10003)
!10008 = !DILocation(line: 6332, column: 71, scope: !10003)
!10009 = !DILocation(line: 6333, column: 9, scope: !10003)
!10010 = !DILocation(line: 6332, column: 9, scope: !9996)
!10011 = !DILocation(line: 6335, column: 13, scope: !9996)
!10012 = !DILocation(line: 6336, column: 25, scope: !9996)
!10013 = !DILocation(line: 6336, column: 30, scope: !9996)
!10014 = !DILocation(line: 6336, column: 5, scope: !9996)
!10015 = !DILocation(line: 6337, column: 1, scope: !9996)
!10016 = distinct !DISubprogram(name: "zscoreCommand", scope: !3, file: !3, line: 6339, type: !340, scopeLine: 6339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10017)
!10017 = !{!10018, !10019, !10020, !10021, !10022}
!10018 = !DILocalVariable(name: "c", arg: 1, scope: !10016, file: !3, line: 6339, type: !287)
!10019 = !DILocalVariable(name: "o", scope: !10016, file: !3, line: 6340, type: !145)
!10020 = !DILocalVariable(name: "zs", scope: !10016, file: !3, line: 6341, type: !171)
!10021 = !DILocalVariable(name: "de", scope: !10016, file: !3, line: 6342, type: !124)
!10022 = !DILocalVariable(name: "score", scope: !10023, file: !3, line: 6352, type: !198)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 6351, column: 12)
!10024 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 6349, column: 9)
!10025 = !DILocation(line: 0, scope: !10016)
!10026 = !DILocation(line: 6344, column: 40, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 6344, column: 9)
!10028 = !DILocation(line: 6344, column: 37, scope: !10027)
!10029 = !DILocation(line: 6344, column: 55, scope: !10027)
!10030 = !DILocation(line: 6344, column: 14, scope: !10027)
!10031 = !DILocation(line: 6344, column: 66, scope: !10027)
!10032 = !DILocation(line: 6344, column: 74, scope: !10027)
!10033 = !DILocation(line: 6345, column: 9, scope: !10027)
!10034 = !DILocation(line: 6344, column: 9, scope: !10016)
!10035 = !DILocation(line: 6347, column: 13, scope: !10016)
!10036 = !DILocation(line: 6348, column: 23, scope: !10016)
!10037 = !DILocation(line: 6348, column: 31, scope: !10016)
!10038 = !DILocation(line: 6348, column: 28, scope: !10016)
!10039 = !DILocation(line: 6348, column: 10, scope: !10016)
!10040 = !DILocation(line: 6349, column: 10, scope: !10024)
!10041 = !DILocation(line: 6349, column: 9, scope: !10016)
!10042 = !DILocation(line: 6350, column: 27, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 6349, column: 14)
!10044 = !DILocation(line: 6350, column: 9, scope: !10043)
!10045 = !DILocation(line: 6351, column: 5, scope: !10043)
!10046 = !DILocation(line: 6352, column: 25, scope: !10023)
!10047 = !DILocation(line: 0, scope: !10023)
!10048 = !DILocation(line: 6354, column: 26, scope: !10023)
!10049 = !DILocation(line: 6354, column: 9, scope: !10023)
!10050 = !DILocation(line: 6356, column: 1, scope: !10016)
!10051 = distinct !DISubprogram(name: "zrankCommand", scope: !3, file: !3, line: 6390, type: !340, scopeLine: 6390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10052)
!10052 = !{!10053}
!10053 = !DILocalVariable(name: "c", arg: 1, scope: !10051, file: !3, line: 6390, type: !287)
!10054 = !DILocation(line: 0, scope: !10051)
!10055 = !DILocation(line: 6391, column: 5, scope: !10051)
!10056 = !DILocation(line: 6392, column: 1, scope: !10051)
!10057 = distinct !DISubprogram(name: "zrevrankCommand", scope: !3, file: !3, line: 6394, type: !340, scopeLine: 6394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10058)
!10058 = !{!10059}
!10059 = !DILocalVariable(name: "c", arg: 1, scope: !10057, file: !3, line: 6394, type: !287)
!10060 = !DILocation(line: 0, scope: !10057)
!10061 = !DILocation(line: 6395, column: 5, scope: !10057)
!10062 = !DILocation(line: 6396, column: 1, scope: !10057)
!10063 = distinct !DISubprogram(name: "hsetCommand", scope: !3, file: !3, line: 6602, type: !340, scopeLine: 6602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10064)
!10064 = !{!10065, !10066, !10067}
!10065 = !DILocalVariable(name: "c", arg: 1, scope: !10063, file: !3, line: 6602, type: !287)
!10066 = !DILocalVariable(name: "update", scope: !10063, file: !3, line: 6603, type: !45)
!10067 = !DILocalVariable(name: "o", scope: !10063, file: !3, line: 6604, type: !145)
!10068 = !DILocation(line: 0, scope: !10063)
!10069 = !DILocation(line: 6606, column: 43, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 6606, column: 9)
!10071 = !DILocation(line: 6606, column: 40, scope: !10070)
!10072 = !DILocation(line: 6606, column: 14, scope: !10070)
!10073 = !DILocation(line: 6606, column: 53, scope: !10070)
!10074 = !DILocation(line: 6606, column: 9, scope: !10063)
!10075 = !DILocation(line: 6607, column: 28, scope: !10063)
!10076 = !DILocation(line: 6607, column: 5, scope: !10063)
!10077 = !DILocation(line: 6608, column: 33, scope: !10063)
!10078 = !DILocation(line: 6608, column: 30, scope: !10063)
!10079 = !DILocation(line: 6608, column: 43, scope: !10063)
!10080 = !DILocation(line: 6608, column: 5, scope: !10063)
!10081 = !DILocation(line: 6609, column: 27, scope: !10063)
!10082 = !DILocation(line: 6609, column: 24, scope: !10063)
!10083 = !DILocation(line: 6609, column: 35, scope: !10063)
!10084 = !DILocation(line: 6609, column: 14, scope: !10063)
!10085 = !DILocation(line: 6610, column: 17, scope: !10063)
!10086 = !DILocation(line: 6610, column: 5, scope: !10063)
!10087 = !DILocation(line: 6611, column: 17, scope: !10063)
!10088 = !DILocation(line: 6612, column: 1, scope: !10063)
!10089 = distinct !DISubprogram(name: "hsetnxCommand", scope: !3, file: !3, line: 6614, type: !340, scopeLine: 6614, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10090)
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "c", arg: 1, scope: !10089, file: !3, line: 6614, type: !287)
!10092 = !DILocalVariable(name: "o", scope: !10089, file: !3, line: 6615, type: !145)
!10093 = !DILocation(line: 0, scope: !10089)
!10094 = !DILocation(line: 6616, column: 43, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10089, file: !3, line: 6616, column: 9)
!10096 = !DILocation(line: 6616, column: 40, scope: !10095)
!10097 = !DILocation(line: 6616, column: 14, scope: !10095)
!10098 = !DILocation(line: 6616, column: 53, scope: !10095)
!10099 = !DILocation(line: 6616, column: 9, scope: !10089)
!10100 = !DILocation(line: 6617, column: 28, scope: !10089)
!10101 = !DILocation(line: 6617, column: 5, scope: !10089)
!10102 = !DILocation(line: 6619, column: 26, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10089, file: !3, line: 6619, column: 9)
!10104 = !DILocation(line: 6619, column: 23, scope: !10103)
!10105 = !DILocation(line: 6619, column: 9, scope: !10103)
!10106 = !DILocation(line: 6619, column: 9, scope: !10089)
!10107 = !DILocation(line: 6620, column: 28, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 6619, column: 36)
!10109 = !DILocation(line: 6620, column: 9, scope: !10108)
!10110 = !DILocation(line: 6621, column: 5, scope: !10108)
!10111 = !DILocation(line: 6622, column: 37, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 6621, column: 12)
!10113 = !DILocation(line: 6622, column: 34, scope: !10112)
!10114 = !DILocation(line: 6622, column: 47, scope: !10112)
!10115 = !DILocation(line: 6622, column: 9, scope: !10112)
!10116 = !DILocation(line: 6623, column: 22, scope: !10112)
!10117 = !DILocation(line: 6623, column: 19, scope: !10112)
!10118 = !DILocation(line: 6623, column: 30, scope: !10112)
!10119 = !DILocation(line: 6623, column: 9, scope: !10112)
!10120 = !DILocation(line: 6624, column: 28, scope: !10112)
!10121 = !DILocation(line: 6624, column: 9, scope: !10112)
!10122 = !DILocation(line: 6625, column: 21, scope: !10112)
!10123 = !DILocation(line: 6627, column: 1, scope: !10089)
!10124 = distinct !DISubprogram(name: "hgetCommand", scope: !3, file: !3, line: 6674, type: !340, scopeLine: 6674, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10125)
!10125 = !{!10126, !10127, !10128}
!10126 = !DILocalVariable(name: "c", arg: 1, scope: !10124, file: !3, line: 6674, type: !287)
!10127 = !DILocalVariable(name: "o", scope: !10124, file: !3, line: 6675, type: !145)
!10128 = !DILocalVariable(name: "value", scope: !10124, file: !3, line: 6675, type: !145)
!10129 = !DILocation(line: 0, scope: !10124)
!10130 = !DILocation(line: 6676, column: 40, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 6676, column: 9)
!10132 = !DILocation(line: 6676, column: 37, scope: !10131)
!10133 = !DILocation(line: 6676, column: 55, scope: !10131)
!10134 = !DILocation(line: 6676, column: 14, scope: !10131)
!10135 = !DILocation(line: 6676, column: 66, scope: !10131)
!10136 = !DILocation(line: 6676, column: 74, scope: !10131)
!10137 = !DILocation(line: 6677, column: 9, scope: !10131)
!10138 = !DILocation(line: 6676, column: 9, scope: !10124)
!10139 = !DILocation(line: 6679, column: 31, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 6679, column: 9)
!10141 = !DILocation(line: 6679, column: 28, scope: !10140)
!10142 = !DILocation(line: 6679, column: 18, scope: !10140)
!10143 = !DILocation(line: 6679, column: 41, scope: !10140)
!10144 = !DILocation(line: 6679, column: 9, scope: !10124)
!10145 = !DILocation(line: 6680, column: 9, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 6679, column: 50)
!10147 = !DILocation(line: 6681, column: 22, scope: !10146)
!10148 = !DILocation(line: 6681, column: 9, scope: !10146)
!10149 = !DILocation(line: 6682, column: 5, scope: !10146)
!10150 = !DILocation(line: 6683, column: 27, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 6682, column: 12)
!10152 = !DILocation(line: 6683, column: 9, scope: !10151)
!10153 = !DILocation(line: 6685, column: 1, scope: !10124)
!10154 = distinct !DISubprogram(name: "hmsetCommand", scope: !3, file: !3, line: 6629, type: !340, scopeLine: 6629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10155)
!10155 = !{!10156, !10157, !10158}
!10156 = !DILocalVariable(name: "c", arg: 1, scope: !10154, file: !3, line: 6629, type: !287)
!10157 = !DILocalVariable(name: "i", scope: !10154, file: !3, line: 6630, type: !45)
!10158 = !DILocalVariable(name: "o", scope: !10154, file: !3, line: 6631, type: !145)
!10159 = !DILocation(line: 0, scope: !10154)
!10160 = !DILocation(line: 6633, column: 13, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 6633, column: 9)
!10162 = !DILocation(line: 6633, column: 18, scope: !10161)
!10163 = !DILocation(line: 6633, column: 23, scope: !10161)
!10164 = !DILocation(line: 6633, column: 9, scope: !10154)
!10165 = !DILocation(line: 6634, column: 23, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 6633, column: 29)
!10167 = !DILocation(line: 6634, column: 9, scope: !10166)
!10168 = !DILocation(line: 6635, column: 9, scope: !10166)
!10169 = !DILocation(line: 6638, column: 43, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 6638, column: 9)
!10171 = !DILocation(line: 6638, column: 40, scope: !10170)
!10172 = !DILocation(line: 6638, column: 14, scope: !10170)
!10173 = !DILocation(line: 6638, column: 53, scope: !10170)
!10174 = !DILocation(line: 6638, column: 9, scope: !10154)
!10175 = !DILocation(line: 6639, column: 28, scope: !10154)
!10176 = !DILocation(line: 6639, column: 38, scope: !10154)
!10177 = !DILocation(line: 6639, column: 42, scope: !10154)
!10178 = !DILocation(line: 6639, column: 5, scope: !10154)
!10179 = !DILocation(line: 6640, column: 24, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 6640, column: 5)
!10181 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 6640, column: 5)
!10182 = !DILocation(line: 6640, column: 19, scope: !10180)
!10183 = !DILocation(line: 6640, column: 5, scope: !10181)
!10184 = !DILocation(line: 6641, column: 37, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 6640, column: 38)
!10186 = !DILocation(line: 6641, column: 34, scope: !10185)
!10187 = !DILocation(line: 6641, column: 56, scope: !10185)
!10188 = !DILocation(line: 6641, column: 47, scope: !10185)
!10189 = !DILocation(line: 6641, column: 9, scope: !10185)
!10190 = !DILocation(line: 6642, column: 22, scope: !10185)
!10191 = !DILocation(line: 6642, column: 19, scope: !10185)
!10192 = !DILocation(line: 6642, column: 30, scope: !10185)
!10193 = !DILocation(line: 6642, column: 9, scope: !10185)
!10194 = !DILocation(line: 6640, column: 32, scope: !10180)
!10195 = distinct !{!10195, !10183, !10196}
!10196 = !DILocation(line: 6643, column: 5, scope: !10181)
!10197 = !DILocation(line: 6644, column: 24, scope: !10154)
!10198 = !DILocation(line: 6644, column: 5, scope: !10154)
!10199 = !DILocation(line: 6645, column: 17, scope: !10154)
!10200 = !DILocation(line: 6646, column: 1, scope: !10154)
!10201 = distinct !DISubprogram(name: "hmgetCommand", scope: !3, file: !3, line: 6687, type: !340, scopeLine: 6687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10202)
!10202 = !{!10203, !10204, !10205, !10206}
!10203 = !DILocalVariable(name: "c", arg: 1, scope: !10201, file: !3, line: 6687, type: !287)
!10204 = !DILocalVariable(name: "i", scope: !10201, file: !3, line: 6688, type: !45)
!10205 = !DILocalVariable(name: "o", scope: !10201, file: !3, line: 6689, type: !145)
!10206 = !DILocalVariable(name: "value", scope: !10201, file: !3, line: 6689, type: !145)
!10207 = !DILocation(line: 0, scope: !10201)
!10208 = !DILocation(line: 6690, column: 26, scope: !10201)
!10209 = !DILocation(line: 6690, column: 32, scope: !10201)
!10210 = !DILocation(line: 6690, column: 29, scope: !10201)
!10211 = !DILocation(line: 6690, column: 9, scope: !10201)
!10212 = !DILocation(line: 6691, column: 11, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 6691, column: 9)
!10214 = !DILocation(line: 6691, column: 19, scope: !10213)
!10215 = !DILocation(line: 6691, column: 25, scope: !10213)
!10216 = !DILocation(line: 6691, column: 30, scope: !10213)
!10217 = !DILocation(line: 6691, column: 9, scope: !10201)
!10218 = !DILocation(line: 6692, column: 27, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 6691, column: 45)
!10220 = !DILocation(line: 6692, column: 9, scope: !10219)
!10221 = !DILocation(line: 6693, column: 5, scope: !10219)
!10222 = !DILocation(line: 6698, column: 32, scope: !10201)
!10223 = !DILocation(line: 6698, column: 56, scope: !10201)
!10224 = !DILocation(line: 6698, column: 60, scope: !10201)
!10225 = !DILocation(line: 6698, column: 19, scope: !10201)
!10226 = !DILocation(line: 6698, column: 5, scope: !10201)
!10227 = !DILocation(line: 6699, column: 24, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 6699, column: 5)
!10229 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 6699, column: 5)
!10230 = !DILocation(line: 6699, column: 19, scope: !10228)
!10231 = !DILocation(line: 6699, column: 5, scope: !10229)
!10232 = !DILocation(line: 6700, column: 23, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 6700, column: 13)
!10234 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 6699, column: 35)
!10235 = !DILocation(line: 6700, column: 48, scope: !10233)
!10236 = !DILocation(line: 6700, column: 45, scope: !10233)
!10237 = !DILocation(line: 6700, column: 35, scope: !10233)
!10238 = !DILocation(line: 6700, column: 58, scope: !10233)
!10239 = !DILocation(line: 6700, column: 13, scope: !10234)
!10240 = !DILocation(line: 6701, column: 13, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 6700, column: 67)
!10242 = !DILocation(line: 6702, column: 26, scope: !10241)
!10243 = !DILocation(line: 6702, column: 13, scope: !10241)
!10244 = !DILocation(line: 6703, column: 9, scope: !10241)
!10245 = !DILocation(line: 6704, column: 31, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 6703, column: 16)
!10247 = !DILocation(line: 6704, column: 13, scope: !10246)
!10248 = !DILocation(line: 6699, column: 31, scope: !10228)
!10249 = distinct !{!10249, !10231, !10250}
!10250 = !DILocation(line: 6706, column: 5, scope: !10229)
!10251 = !DILocation(line: 6707, column: 1, scope: !10201)
!10252 = distinct !DISubprogram(name: "hincrbyCommand", scope: !3, file: !3, line: 6648, type: !340, scopeLine: 6648, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10253)
!10253 = !{!10254, !10255, !10256, !10257, !10258, !10259}
!10254 = !DILocalVariable(name: "c", arg: 1, scope: !10252, file: !3, line: 6648, type: !287)
!10255 = !DILocalVariable(name: "value", scope: !10252, file: !3, line: 6649, type: !54)
!10256 = !DILocalVariable(name: "incr", scope: !10252, file: !3, line: 6649, type: !54)
!10257 = !DILocalVariable(name: "o", scope: !10252, file: !3, line: 6650, type: !145)
!10258 = !DILocalVariable(name: "current", scope: !10252, file: !3, line: 6650, type: !145)
!10259 = !DILocalVariable(name: "new", scope: !10252, file: !3, line: 6650, type: !145)
!10260 = !DILocation(line: 0, scope: !10252)
!10261 = !DILocation(line: 6649, column: 5, scope: !10252)
!10262 = !DILocation(line: 6652, column: 43, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 6652, column: 9)
!10264 = !DILocation(line: 6652, column: 40, scope: !10263)
!10265 = !DILocation(line: 6652, column: 9, scope: !10263)
!10266 = !DILocation(line: 6652, column: 63, scope: !10263)
!10267 = !DILocation(line: 6652, column: 9, scope: !10252)
!10268 = !DILocation(line: 6653, column: 43, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 6653, column: 9)
!10270 = !DILocation(line: 6653, column: 40, scope: !10269)
!10271 = !DILocation(line: 6653, column: 14, scope: !10269)
!10272 = !DILocation(line: 6653, column: 53, scope: !10269)
!10273 = !DILocation(line: 6653, column: 9, scope: !10252)
!10274 = !DILocation(line: 6654, column: 33, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 6654, column: 9)
!10276 = !DILocation(line: 6654, column: 30, scope: !10275)
!10277 = !DILocation(line: 6654, column: 20, scope: !10275)
!10278 = !DILocation(line: 6654, column: 43, scope: !10275)
!10279 = !DILocation(line: 6654, column: 9, scope: !10252)
!10280 = !DILocation(line: 6655, column: 13, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 6655, column: 13)
!10282 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 6654, column: 52)
!10283 = !DILocation(line: 6656, column: 45, scope: !10281)
!10284 = !DILocation(line: 0, scope: !10282)
!10285 = !DILocation(line: 6655, column: 13, scope: !10282)
!10286 = !DILocation(line: 6665, column: 11, scope: !10252)
!10287 = !DILocation(line: 6661, column: 5, scope: !10282)
!10288 = !DILocation(line: 6662, column: 15, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 6661, column: 12)
!10290 = !DILocation(line: 6665, column: 14, scope: !10252)
!10291 = !DILocation(line: 6666, column: 11, scope: !10252)
!10292 = !DILocation(line: 6667, column: 33, scope: !10252)
!10293 = !DILocation(line: 6667, column: 30, scope: !10252)
!10294 = !DILocation(line: 6667, column: 5, scope: !10252)
!10295 = !DILocation(line: 6668, column: 18, scope: !10252)
!10296 = !DILocation(line: 6668, column: 15, scope: !10252)
!10297 = !DILocation(line: 6668, column: 5, scope: !10252)
!10298 = !DILocation(line: 6669, column: 18, scope: !10252)
!10299 = !DILocation(line: 6669, column: 5, scope: !10252)
!10300 = !DILocation(line: 6670, column: 5, scope: !10252)
!10301 = !DILocation(line: 6671, column: 17, scope: !10252)
!10302 = !DILocation(line: 6672, column: 1, scope: !10252)
!10303 = distinct !DISubprogram(name: "hdelCommand", scope: !3, file: !3, line: 6709, type: !340, scopeLine: 6709, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10304)
!10304 = !{!10305, !10306}
!10305 = !DILocalVariable(name: "c", arg: 1, scope: !10303, file: !3, line: 6709, type: !287)
!10306 = !DILocalVariable(name: "o", scope: !10303, file: !3, line: 6710, type: !145)
!10307 = !DILocation(line: 0, scope: !10303)
!10308 = !DILocation(line: 6711, column: 41, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 6711, column: 9)
!10310 = !DILocation(line: 6711, column: 38, scope: !10309)
!10311 = !DILocation(line: 6711, column: 56, scope: !10309)
!10312 = !DILocation(line: 6711, column: 14, scope: !10309)
!10313 = !DILocation(line: 6711, column: 64, scope: !10309)
!10314 = !DILocation(line: 6711, column: 72, scope: !10309)
!10315 = !DILocation(line: 6712, column: 9, scope: !10309)
!10316 = !DILocation(line: 6711, column: 9, scope: !10303)
!10317 = !DILocation(line: 6714, column: 25, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 6714, column: 9)
!10319 = !DILocation(line: 6714, column: 22, scope: !10318)
!10320 = !DILocation(line: 6714, column: 9, scope: !10318)
!10321 = !DILocation(line: 6714, column: 9, scope: !10303)
!10322 = !DILocation(line: 6715, column: 13, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 6715, column: 13)
!10324 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 6714, column: 35)
!10325 = !DILocation(line: 6715, column: 27, scope: !10323)
!10326 = !DILocation(line: 6715, column: 13, scope: !10324)
!10327 = !DILocation(line: 6715, column: 46, scope: !10323)
!10328 = !DILocation(line: 6715, column: 52, scope: !10323)
!10329 = !DILocation(line: 6715, column: 49, scope: !10323)
!10330 = !DILocation(line: 6715, column: 33, scope: !10323)
!10331 = !DILocation(line: 6716, column: 27, scope: !10324)
!10332 = !DILocation(line: 6716, column: 9, scope: !10324)
!10333 = !DILocation(line: 6717, column: 21, scope: !10324)
!10334 = !DILocation(line: 6718, column: 5, scope: !10324)
!10335 = !DILocation(line: 6719, column: 27, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 6718, column: 12)
!10337 = !DILocation(line: 6719, column: 9, scope: !10336)
!10338 = !DILocation(line: 6721, column: 1, scope: !10303)
!10339 = distinct !DISubprogram(name: "hlenCommand", scope: !3, file: !3, line: 6723, type: !340, scopeLine: 6723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10340)
!10340 = !{!10341, !10342}
!10341 = !DILocalVariable(name: "c", arg: 1, scope: !10339, file: !3, line: 6723, type: !287)
!10342 = !DILocalVariable(name: "o", scope: !10339, file: !3, line: 6724, type: !145)
!10343 = !DILocation(line: 0, scope: !10339)
!10344 = !DILocation(line: 6725, column: 40, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 6725, column: 9)
!10346 = !DILocation(line: 6725, column: 37, scope: !10345)
!10347 = !DILocation(line: 6725, column: 55, scope: !10345)
!10348 = !DILocation(line: 6725, column: 14, scope: !10345)
!10349 = !DILocation(line: 6725, column: 63, scope: !10345)
!10350 = !DILocation(line: 6725, column: 71, scope: !10345)
!10351 = !DILocation(line: 6726, column: 9, scope: !10345)
!10352 = !DILocation(line: 6725, column: 9, scope: !10339)
!10353 = !DILocation(line: 6728, column: 21, scope: !10339)
!10354 = !DILocation(line: 6728, column: 5, scope: !10339)
!10355 = !DILocation(line: 6729, column: 1, scope: !10339)
!10356 = distinct !DISubprogram(name: "hkeysCommand", scope: !3, file: !3, line: 6763, type: !340, scopeLine: 6763, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "c", arg: 1, scope: !10356, file: !3, line: 6763, type: !287)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 6764, column: 5, scope: !10356)
!10361 = !DILocation(line: 6765, column: 1, scope: !10356)
!10362 = distinct !DISubprogram(name: "hvalsCommand", scope: !3, file: !3, line: 6767, type: !340, scopeLine: 6767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10363)
!10363 = !{!10364}
!10364 = !DILocalVariable(name: "c", arg: 1, scope: !10362, file: !3, line: 6767, type: !287)
!10365 = !DILocation(line: 0, scope: !10362)
!10366 = !DILocation(line: 6768, column: 5, scope: !10362)
!10367 = !DILocation(line: 6769, column: 1, scope: !10362)
!10368 = distinct !DISubprogram(name: "hgetallCommand", scope: !3, file: !3, line: 6771, type: !340, scopeLine: 6771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10369)
!10369 = !{!10370}
!10370 = !DILocalVariable(name: "c", arg: 1, scope: !10368, file: !3, line: 6771, type: !287)
!10371 = !DILocation(line: 0, scope: !10368)
!10372 = !DILocation(line: 6772, column: 5, scope: !10368)
!10373 = !DILocation(line: 6773, column: 1, scope: !10368)
!10374 = distinct !DISubprogram(name: "hexistsCommand", scope: !3, file: !3, line: 6775, type: !340, scopeLine: 6775, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10375)
!10375 = !{!10376, !10377}
!10376 = !DILocalVariable(name: "c", arg: 1, scope: !10374, file: !3, line: 6775, type: !287)
!10377 = !DILocalVariable(name: "o", scope: !10374, file: !3, line: 6776, type: !145)
!10378 = !DILocation(line: 0, scope: !10374)
!10379 = !DILocation(line: 6777, column: 40, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 6777, column: 9)
!10381 = !DILocation(line: 6777, column: 37, scope: !10380)
!10382 = !DILocation(line: 6777, column: 55, scope: !10380)
!10383 = !DILocation(line: 6777, column: 14, scope: !10380)
!10384 = !DILocation(line: 6777, column: 63, scope: !10380)
!10385 = !DILocation(line: 6777, column: 71, scope: !10380)
!10386 = !DILocation(line: 6778, column: 9, scope: !10380)
!10387 = !DILocation(line: 6777, column: 9, scope: !10374)
!10388 = !DILocation(line: 6780, column: 33, scope: !10374)
!10389 = !DILocation(line: 6780, column: 30, scope: !10374)
!10390 = !DILocation(line: 6780, column: 17, scope: !10374)
!10391 = !DILocation(line: 6780, column: 5, scope: !10374)
!10392 = !DILocation(line: 6781, column: 1, scope: !10374)
!10393 = distinct !DISubprogram(name: "incrbyCommand", scope: !3, file: !3, line: 4428, type: !340, scopeLine: 4428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10394)
!10394 = !{!10395, !10396}
!10395 = !DILocalVariable(name: "c", arg: 1, scope: !10393, file: !3, line: 4428, type: !287)
!10396 = !DILocalVariable(name: "incr", scope: !10393, file: !3, line: 4429, type: !54)
!10397 = !DILocation(line: 0, scope: !10393)
!10398 = !DILocation(line: 4429, column: 5, scope: !10393)
!10399 = !DILocation(line: 4431, column: 44, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4431, column: 9)
!10401 = !DILocation(line: 4431, column: 41, scope: !10400)
!10402 = !DILocation(line: 4431, column: 9, scope: !10400)
!10403 = !DILocation(line: 4431, column: 66, scope: !10400)
!10404 = !DILocation(line: 4431, column: 9, scope: !10393)
!10405 = !DILocation(line: 4432, column: 23, scope: !10393)
!10406 = !DILocation(line: 4432, column: 5, scope: !10393)
!10407 = !DILocation(line: 4433, column: 1, scope: !10393)
!10408 = distinct !DISubprogram(name: "decrbyCommand", scope: !3, file: !3, line: 4435, type: !340, scopeLine: 4435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10409)
!10409 = !{!10410, !10411}
!10410 = !DILocalVariable(name: "c", arg: 1, scope: !10408, file: !3, line: 4435, type: !287)
!10411 = !DILocalVariable(name: "incr", scope: !10408, file: !3, line: 4436, type: !54)
!10412 = !DILocation(line: 0, scope: !10408)
!10413 = !DILocation(line: 4436, column: 5, scope: !10408)
!10414 = !DILocation(line: 4438, column: 44, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 4438, column: 9)
!10416 = !DILocation(line: 4438, column: 41, scope: !10415)
!10417 = !DILocation(line: 4438, column: 9, scope: !10415)
!10418 = !DILocation(line: 4438, column: 66, scope: !10415)
!10419 = !DILocation(line: 4438, column: 9, scope: !10408)
!10420 = !DILocation(line: 4439, column: 24, scope: !10408)
!10421 = !DILocation(line: 4439, column: 23, scope: !10408)
!10422 = !DILocation(line: 4439, column: 5, scope: !10408)
!10423 = !DILocation(line: 4440, column: 1, scope: !10408)
!10424 = distinct !DISubprogram(name: "getsetCommand", scope: !3, file: !3, line: 4319, type: !340, scopeLine: 4319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10425)
!10425 = !{!10426}
!10426 = !DILocalVariable(name: "c", arg: 1, scope: !10424, file: !3, line: 4319, type: !287)
!10427 = !DILocation(line: 0, scope: !10424)
!10428 = !DILocation(line: 4320, column: 9, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 4320, column: 9)
!10430 = !DILocation(line: 4320, column: 30, scope: !10429)
!10431 = !DILocation(line: 4320, column: 9, scope: !10424)
!10432 = !DILocation(line: 4321, column: 20, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 4321, column: 9)
!10434 = !DILocation(line: 4321, column: 24, scope: !10433)
!10435 = !DILocation(line: 4321, column: 32, scope: !10433)
!10436 = !DILocation(line: 4321, column: 29, scope: !10433)
!10437 = !DILocation(line: 4321, column: 40, scope: !10433)
!10438 = !DILocation(line: 4321, column: 9, scope: !10433)
!10439 = !DILocation(line: 4321, column: 52, scope: !10433)
!10440 = !DILocation(line: 4321, column: 9, scope: !10424)
!10441 = !DILocation(line: 4322, column: 24, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 4321, column: 65)
!10443 = !DILocation(line: 4322, column: 28, scope: !10442)
!10444 = !DILocation(line: 4322, column: 36, scope: !10442)
!10445 = !DILocation(line: 4322, column: 33, scope: !10442)
!10446 = !DILocation(line: 4322, column: 44, scope: !10442)
!10447 = !DILocation(line: 4322, column: 9, scope: !10442)
!10448 = !DILocation(line: 4323, column: 5, scope: !10442)
!10449 = !DILocation(line: 4324, column: 25, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 4323, column: 12)
!10451 = !DILocation(line: 4324, column: 22, scope: !10450)
!10452 = !DILocation(line: 4324, column: 9, scope: !10450)
!10453 = !DILocation(line: 4326, column: 21, scope: !10424)
!10454 = !DILocation(line: 4326, column: 18, scope: !10424)
!10455 = !DILocation(line: 4326, column: 5, scope: !10424)
!10456 = !DILocation(line: 4327, column: 17, scope: !10424)
!10457 = !DILocation(line: 4328, column: 21, scope: !10424)
!10458 = !DILocation(line: 4328, column: 27, scope: !10424)
!10459 = !DILocation(line: 4328, column: 24, scope: !10424)
!10460 = !DILocation(line: 4328, column: 5, scope: !10424)
!10461 = !DILocation(line: 4329, column: 1, scope: !10424)
!10462 = distinct !DISubprogram(name: "msetCommand", scope: !3, file: !3, line: 4388, type: !340, scopeLine: 4388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10463)
!10463 = !{!10464}
!10464 = !DILocalVariable(name: "c", arg: 1, scope: !10462, file: !3, line: 4388, type: !287)
!10465 = !DILocation(line: 0, scope: !10462)
!10466 = !DILocation(line: 4389, column: 5, scope: !10462)
!10467 = !DILocation(line: 4390, column: 1, scope: !10462)
!10468 = distinct !DISubprogram(name: "msetnxCommand", scope: !3, file: !3, line: 4392, type: !340, scopeLine: 4392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10469)
!10469 = !{!10470}
!10470 = !DILocalVariable(name: "c", arg: 1, scope: !10468, file: !3, line: 4392, type: !287)
!10471 = !DILocation(line: 0, scope: !10468)
!10472 = !DILocation(line: 4393, column: 5, scope: !10468)
!10473 = !DILocation(line: 4394, column: 1, scope: !10468)
!10474 = distinct !DISubprogram(name: "randomkeyCommand", scope: !3, file: !3, line: 4558, type: !340, scopeLine: 4558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10475)
!10475 = !{!10476, !10477, !10478}
!10476 = !DILocalVariable(name: "c", arg: 1, scope: !10474, file: !3, line: 4558, type: !287)
!10477 = !DILocalVariable(name: "de", scope: !10474, file: !3, line: 4559, type: !124)
!10478 = !DILocalVariable(name: "key", scope: !10474, file: !3, line: 4560, type: !145)
!10479 = !DILocation(line: 0, scope: !10474)
!10480 = !DILocation(line: 4562, column: 5, scope: !10474)
!10481 = !DILocation(line: 4563, column: 34, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 4562, column: 14)
!10483 = !DILocation(line: 4563, column: 38, scope: !10482)
!10484 = !DILocation(line: 4563, column: 14, scope: !10482)
!10485 = !DILocation(line: 4564, column: 17, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 4564, column: 13)
!10487 = !DILocation(line: 4564, column: 38, scope: !10486)
!10488 = !DILocation(line: 4564, column: 41, scope: !10486)
!10489 = !DILocation(line: 4564, column: 20, scope: !10486)
!10490 = !DILocation(line: 4564, column: 62, scope: !10486)
!10491 = !DILocation(line: 4564, column: 13, scope: !10482)
!10492 = distinct !{!10492, !10480, !10493}
!10493 = !DILocation(line: 4565, column: 5, scope: !10474)
!10494 = !DILocation(line: 4568, column: 27, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 4567, column: 21)
!10496 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 4567, column: 9)
!10497 = !DILocation(line: 4568, column: 9, scope: !10495)
!10498 = !DILocation(line: 4569, column: 9, scope: !10495)
!10499 = !DILocation(line: 4572, column: 11, scope: !10474)
!10500 = !DILocation(line: 4573, column: 16, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 4573, column: 9)
!10502 = !DILocation(line: 4573, column: 9, scope: !10501)
!10503 = !DILocation(line: 4573, column: 9, scope: !10474)
!10504 = !DILocation(line: 4574, column: 15, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 4573, column: 28)
!10506 = !DILocation(line: 4575, column: 9, scope: !10505)
!10507 = !DILocation(line: 4576, column: 22, scope: !10505)
!10508 = !DILocation(line: 4576, column: 9, scope: !10505)
!10509 = !DILocation(line: 4577, column: 5, scope: !10505)
!10510 = !DILocation(line: 4578, column: 9, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 4577, column: 12)
!10512 = !DILocation(line: 4580, column: 1, scope: !10474)
!10513 = distinct !DISubprogram(name: "selectCommand", scope: !3, file: !3, line: 4548, type: !340, scopeLine: 4548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10514)
!10514 = !{!10515, !10516}
!10515 = !DILocalVariable(name: "c", arg: 1, scope: !10513, file: !3, line: 4548, type: !287)
!10516 = !DILocalVariable(name: "id", scope: !10513, file: !3, line: 4549, type: !45)
!10517 = !DILocation(line: 0, scope: !10513)
!10518 = !DILocation(line: 4549, column: 22, scope: !10513)
!10519 = !DILocation(line: 4549, column: 19, scope: !10513)
!10520 = !DILocation(line: 4549, column: 31, scope: !10513)
!10521 = !DILocation(line: 4549, column: 14, scope: !10513)
!10522 = !DILocation(line: 4551, column: 9, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 4551, column: 9)
!10524 = !DILocation(line: 4551, column: 24, scope: !10523)
!10525 = !DILocation(line: 4551, column: 9, scope: !10513)
!10526 = !DILocation(line: 4552, column: 23, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 4551, column: 38)
!10528 = !DILocation(line: 4552, column: 9, scope: !10527)
!10529 = !DILocation(line: 4553, column: 5, scope: !10527)
!10530 = !DILocation(line: 4554, column: 27, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 4553, column: 12)
!10532 = !DILocation(line: 4554, column: 9, scope: !10531)
!10533 = !DILocation(line: 4556, column: 1, scope: !10513)
!10534 = distinct !DISubprogram(name: "moveCommand", scope: !3, file: !3, line: 4708, type: !340, scopeLine: 4708, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10535)
!10535 = !{!10536, !10537, !10538, !10539, !10540}
!10536 = !DILocalVariable(name: "c", arg: 1, scope: !10534, file: !3, line: 4708, type: !287)
!10537 = !DILocalVariable(name: "o", scope: !10534, file: !3, line: 4709, type: !145)
!10538 = !DILocalVariable(name: "src", scope: !10534, file: !3, line: 4710, type: !293)
!10539 = !DILocalVariable(name: "dst", scope: !10534, file: !3, line: 4710, type: !293)
!10540 = !DILocalVariable(name: "srcid", scope: !10534, file: !3, line: 4711, type: !45)
!10541 = !DILocation(line: 0, scope: !10534)
!10542 = !DILocation(line: 4714, column: 14, scope: !10534)
!10543 = !DILocation(line: 4715, column: 20, scope: !10534)
!10544 = !DILocation(line: 4716, column: 28, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 4716, column: 9)
!10546 = !DILocation(line: 4716, column: 25, scope: !10545)
!10547 = !DILocation(line: 4716, column: 37, scope: !10545)
!10548 = !DILocation(line: 4716, column: 20, scope: !10545)
!10549 = !DILocation(line: 4716, column: 9, scope: !10545)
!10550 = !DILocation(line: 4716, column: 43, scope: !10545)
!10551 = !DILocation(line: 4716, column: 9, scope: !10534)
!10552 = !DILocation(line: 4720, column: 14, scope: !10534)
!10553 = !DILocation(line: 4721, column: 5, scope: !10534)
!10554 = !DILocation(line: 4725, column: 13, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 4725, column: 9)
!10556 = !DILocation(line: 4725, column: 9, scope: !10534)
!10557 = !DILocation(line: 4731, column: 27, scope: !10534)
!10558 = !DILocation(line: 4731, column: 33, scope: !10534)
!10559 = !DILocation(line: 4731, column: 30, scope: !10534)
!10560 = !DILocation(line: 4731, column: 9, scope: !10534)
!10561 = !DILocation(line: 4732, column: 10, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 4732, column: 9)
!10563 = !DILocation(line: 4732, column: 9, scope: !10534)
!10564 = !DILocation(line: 4738, column: 29, scope: !10534)
!10565 = !DILocation(line: 4738, column: 26, scope: !10534)
!10566 = !DILocation(line: 4738, column: 5, scope: !10534)
!10567 = !DILocation(line: 4739, column: 22, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 4739, column: 9)
!10569 = !DILocation(line: 4739, column: 30, scope: !10568)
!10570 = !DILocation(line: 4739, column: 27, scope: !10568)
!10571 = !DILocation(line: 4739, column: 38, scope: !10568)
!10572 = !DILocation(line: 4739, column: 9, scope: !10568)
!10573 = !DILocation(line: 4739, column: 41, scope: !10568)
!10574 = !DILocation(line: 4739, column: 9, scope: !10534)
!10575 = !DILocation(line: 4743, column: 21, scope: !10534)
!10576 = !DILocation(line: 4743, column: 18, scope: !10534)
!10577 = !DILocation(line: 4743, column: 5, scope: !10534)
!10578 = !DILocation(line: 4744, column: 5, scope: !10534)
!10579 = !DILocation(line: 4747, column: 22, scope: !10534)
!10580 = !DILocation(line: 4747, column: 19, scope: !10534)
!10581 = !DILocation(line: 4747, column: 5, scope: !10534)
!10582 = !DILocation(line: 4748, column: 17, scope: !10534)
!10583 = !DILocation(line: 4750, column: 1, scope: !10534)
!10584 = distinct !DISubprogram(name: "renameCommand", scope: !3, file: !3, line: 4700, type: !340, scopeLine: 4700, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10585)
!10585 = !{!10586}
!10586 = !DILocalVariable(name: "c", arg: 1, scope: !10584, file: !3, line: 4700, type: !287)
!10587 = !DILocation(line: 0, scope: !10584)
!10588 = !DILocation(line: 4701, column: 5, scope: !10584)
!10589 = !DILocation(line: 4702, column: 1, scope: !10584)
!10590 = distinct !DISubprogram(name: "renamenxCommand", scope: !3, file: !3, line: 4704, type: !340, scopeLine: 4704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10591)
!10591 = !{!10592}
!10592 = !DILocalVariable(name: "c", arg: 1, scope: !10590, file: !3, line: 4704, type: !287)
!10593 = !DILocation(line: 0, scope: !10590)
!10594 = !DILocation(line: 4705, column: 5, scope: !10590)
!10595 = !DILocation(line: 4706, column: 1, scope: !10590)
!10596 = distinct !DISubprogram(name: "expireatCommand", scope: !3, file: !3, line: 7461, type: !340, scopeLine: 7461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10597)
!10597 = !{!10598}
!10598 = !DILocalVariable(name: "c", arg: 1, scope: !10596, file: !3, line: 7461, type: !287)
!10599 = !DILocation(line: 0, scope: !10596)
!10600 = !DILocation(line: 7462, column: 31, scope: !10596)
!10601 = !DILocation(line: 7462, column: 28, scope: !10596)
!10602 = !DILocation(line: 7462, column: 39, scope: !10596)
!10603 = !DILocation(line: 7462, column: 50, scope: !10596)
!10604 = !DILocation(line: 7462, column: 5, scope: !10596)
!10605 = !DILocation(line: 7463, column: 1, scope: !10596)
!10606 = distinct !DISubprogram(name: "keysCommand", scope: !3, file: !3, line: 4582, type: !340, scopeLine: 4582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10607)
!10607 = !{!10608, !10609, !10610, !10611, !10612, !10613, !10614, !10615, !10617}
!10608 = !DILocalVariable(name: "c", arg: 1, scope: !10606, file: !3, line: 4582, type: !287)
!10609 = !DILocalVariable(name: "di", scope: !10606, file: !3, line: 4583, type: !2938)
!10610 = !DILocalVariable(name: "de", scope: !10606, file: !3, line: 4584, type: !124)
!10611 = !DILocalVariable(name: "pattern", scope: !10606, file: !3, line: 4585, type: !165)
!10612 = !DILocalVariable(name: "plen", scope: !10606, file: !3, line: 4586, type: !45)
!10613 = !DILocalVariable(name: "numkeys", scope: !10606, file: !3, line: 4587, type: !55)
!10614 = !DILocalVariable(name: "lenobj", scope: !10606, file: !3, line: 4588, type: !145)
!10615 = !DILocalVariable(name: "keyobj", scope: !10616, file: !3, line: 4594, type: !145)
!10616 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 4593, column: 40)
!10617 = !DILocalVariable(name: "key", scope: !10616, file: !3, line: 4596, type: !165)
!10618 = !DILocation(line: 0, scope: !10606)
!10619 = !DILocation(line: 4585, column: 22, scope: !10606)
!10620 = !DILocation(line: 4585, column: 19, scope: !10606)
!10621 = !DILocation(line: 4585, column: 31, scope: !10606)
!10622 = !DILocation(line: 4586, column: 16, scope: !10606)
!10623 = !DILocation(line: 4588, column: 20, scope: !10606)
!10624 = !DILocation(line: 4590, column: 29, scope: !10606)
!10625 = !DILocation(line: 4590, column: 33, scope: !10606)
!10626 = !DILocation(line: 4590, column: 10, scope: !10606)
!10627 = !DILocation(line: 4591, column: 5, scope: !10606)
!10628 = !DILocation(line: 4592, column: 18, scope: !10606)
!10629 = !DILocation(line: 4592, column: 5, scope: !10606)
!10630 = !DILocation(line: 4593, column: 17, scope: !10606)
!10631 = !DILocation(line: 4593, column: 31, scope: !10606)
!10632 = !DILocation(line: 4593, column: 5, scope: !10606)
!10633 = !DILocation(line: 4594, column: 24, scope: !10616)
!10634 = !DILocation(line: 0, scope: !10616)
!10635 = !DILocation(line: 4596, column: 27, scope: !10616)
!10636 = !DILocation(line: 4597, column: 14, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 4597, column: 13)
!10638 = !DILocation(line: 4597, column: 25, scope: !10637)
!10639 = !DILocation(line: 4597, column: 32, scope: !10637)
!10640 = !DILocation(line: 4597, column: 35, scope: !10637)
!10641 = !DILocation(line: 4597, column: 46, scope: !10637)
!10642 = !DILocation(line: 4597, column: 55, scope: !10637)
!10643 = !DILocation(line: 4598, column: 45, scope: !10637)
!10644 = !DILocation(line: 4598, column: 13, scope: !10637)
!10645 = !DILocation(line: 4597, column: 13, scope: !10616)
!10646 = !DILocation(line: 4599, column: 35, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 4599, column: 17)
!10648 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 4598, column: 61)
!10649 = !DILocation(line: 4599, column: 17, scope: !10647)
!10650 = !DILocation(line: 4599, column: 46, scope: !10647)
!10651 = !DILocation(line: 4599, column: 17, scope: !10648)
!10652 = !DILocation(line: 4600, column: 17, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 4599, column: 52)
!10654 = !DILocation(line: 4601, column: 24, scope: !10653)
!10655 = !DILocation(line: 4602, column: 13, scope: !10653)
!10656 = distinct !{!10656, !10632, !10657}
!10657 = !DILocation(line: 4604, column: 5, scope: !10606)
!10658 = !DILocation(line: 4605, column: 5, scope: !10606)
!10659 = !DILocation(line: 4606, column: 32, scope: !10606)
!10660 = !DILocation(line: 4606, column: 19, scope: !10606)
!10661 = !DILocation(line: 4606, column: 13, scope: !10606)
!10662 = !DILocation(line: 4606, column: 17, scope: !10606)
!10663 = !DILocation(line: 4607, column: 1, scope: !10606)
!10664 = distinct !DISubprogram(name: "dbsizeCommand", scope: !3, file: !3, line: 4609, type: !340, scopeLine: 4609, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "c", arg: 1, scope: !10664, file: !3, line: 4609, type: !287)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 4611, column: 22, scope: !10664)
!10669 = !DILocation(line: 4611, column: 44, scope: !10664)
!10670 = !DILocation(line: 4611, column: 9, scope: !10664)
!10671 = !DILocation(line: 4610, column: 5, scope: !10664)
!10672 = !DILocation(line: 4612, column: 1, scope: !10664)
!10673 = distinct !DISubprogram(name: "pingCommand", scope: !3, file: !3, line: 4239, type: !340, scopeLine: 4239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10674)
!10674 = !{!10675}
!10675 = !DILocalVariable(name: "c", arg: 1, scope: !10673, file: !3, line: 4239, type: !287)
!10676 = !DILocation(line: 0, scope: !10673)
!10677 = !DILocation(line: 4240, column: 23, scope: !10673)
!10678 = !{!3571, !714, i64 48}
!10679 = !DILocation(line: 4240, column: 5, scope: !10673)
!10680 = !DILocation(line: 4241, column: 1, scope: !10673)
!10681 = distinct !DISubprogram(name: "echoCommand", scope: !3, file: !3, line: 4243, type: !340, scopeLine: 4243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10682)
!10682 = !{!10683}
!10683 = !DILocalVariable(name: "c", arg: 1, scope: !10681, file: !3, line: 4243, type: !287)
!10684 = !DILocation(line: 0, scope: !10681)
!10685 = !DILocation(line: 4244, column: 23, scope: !10681)
!10686 = !DILocation(line: 4244, column: 20, scope: !10681)
!10687 = !DILocation(line: 4244, column: 5, scope: !10681)
!10688 = !DILocation(line: 4245, column: 1, scope: !10681)
!10689 = distinct !DISubprogram(name: "saveCommand", scope: !3, file: !3, line: 4640, type: !340, scopeLine: 4640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10690)
!10690 = !{!10691}
!10691 = !DILocalVariable(name: "c", arg: 1, scope: !10689, file: !3, line: 4640, type: !287)
!10692 = !DILocation(line: 0, scope: !10689)
!10693 = !DILocation(line: 4641, column: 16, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 4641, column: 9)
!10695 = !DILocation(line: 4641, column: 31, scope: !10694)
!10696 = !DILocation(line: 4641, column: 9, scope: !10689)
!10697 = !DILocation(line: 4642, column: 23, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 4641, column: 38)
!10699 = !DILocation(line: 4642, column: 9, scope: !10698)
!10700 = !DILocation(line: 4643, column: 9, scope: !10698)
!10701 = !DILocation(line: 4645, column: 24, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 4645, column: 9)
!10703 = !DILocation(line: 4645, column: 9, scope: !10702)
!10704 = !DILocation(line: 4645, column: 36, scope: !10702)
!10705 = !DILocation(line: 4645, column: 9, scope: !10689)
!10706 = !DILocation(line: 4646, column: 27, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 4645, column: 49)
!10708 = !DILocation(line: 4646, column: 9, scope: !10707)
!10709 = !DILocation(line: 4647, column: 5, scope: !10707)
!10710 = !DILocation(line: 4648, column: 27, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 4647, column: 12)
!10712 = !{!3571, !714, i64 16}
!10713 = !DILocation(line: 4648, column: 9, scope: !10711)
!10714 = !DILocation(line: 4650, column: 1, scope: !10689)
!10715 = distinct !DISubprogram(name: "bgsaveCommand", scope: !3, file: !3, line: 4652, type: !340, scopeLine: 4652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10716)
!10716 = !{!10717, !10718}
!10717 = !DILocalVariable(name: "c", arg: 1, scope: !10715, file: !3, line: 4652, type: !287)
!10718 = !DILocalVariable(name: "status", scope: !10719, file: !3, line: 4658, type: !47)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 4657, column: 59)
!10720 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 4657, column: 9)
!10721 = !DILocation(line: 0, scope: !10715)
!10722 = !DILocation(line: 4653, column: 16, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 4653, column: 9)
!10724 = !DILocation(line: 4653, column: 31, scope: !10723)
!10725 = !DILocation(line: 4653, column: 9, scope: !10715)
!10726 = !DILocation(line: 4654, column: 23, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 4653, column: 38)
!10728 = !DILocation(line: 4654, column: 9, scope: !10727)
!10729 = !DILocation(line: 4655, column: 9, scope: !10727)
!10730 = !DILocation(line: 4657, column: 34, scope: !10720)
!10731 = !DILocation(line: 4657, column: 9, scope: !10720)
!10732 = !DILocation(line: 4657, column: 46, scope: !10720)
!10733 = !DILocation(line: 4657, column: 9, scope: !10715)
!10734 = !DILocation(line: 0, scope: !10719)
!10735 = !DILocation(line: 4659, column: 23, scope: !10719)
!10736 = !DILocation(line: 4659, column: 9, scope: !10719)
!10737 = !DILocation(line: 4660, column: 5, scope: !10719)
!10738 = !DILocation(line: 4661, column: 27, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 4660, column: 12)
!10740 = !DILocation(line: 4661, column: 9, scope: !10739)
!10741 = !DILocation(line: 4663, column: 1, scope: !10715)
!10742 = distinct !DISubprogram(name: "bgrewriteaofCommand", scope: !3, file: !3, line: 8769, type: !340, scopeLine: 8769, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10743)
!10743 = !{!10744, !10745}
!10744 = !DILocalVariable(name: "c", arg: 1, scope: !10742, file: !3, line: 8769, type: !287)
!10745 = !DILocalVariable(name: "status", scope: !10746, file: !3, line: 8775, type: !47)
!10746 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 8774, column: 56)
!10747 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 8774, column: 9)
!10748 = !DILocation(line: 0, scope: !10742)
!10749 = !DILocation(line: 8770, column: 16, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 8770, column: 9)
!10751 = !DILocation(line: 8770, column: 34, scope: !10750)
!10752 = !DILocation(line: 8770, column: 9, scope: !10742)
!10753 = !DILocation(line: 8771, column: 23, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 8770, column: 41)
!10755 = !DILocation(line: 8771, column: 9, scope: !10754)
!10756 = !DILocation(line: 8772, column: 9, scope: !10754)
!10757 = !DILocation(line: 8774, column: 9, scope: !10747)
!10758 = !DILocation(line: 8774, column: 43, scope: !10747)
!10759 = !DILocation(line: 8774, column: 9, scope: !10742)
!10760 = !DILocation(line: 0, scope: !10746)
!10761 = !DILocation(line: 8776, column: 23, scope: !10746)
!10762 = !DILocation(line: 8776, column: 9, scope: !10746)
!10763 = !DILocation(line: 8777, column: 5, scope: !10746)
!10764 = !DILocation(line: 8778, column: 27, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 8777, column: 12)
!10766 = !DILocation(line: 8778, column: 9, scope: !10765)
!10767 = !DILocation(line: 8780, column: 1, scope: !10742)
!10768 = distinct !DISubprogram(name: "shutdownCommand", scope: !3, file: !3, line: 4665, type: !340, scopeLine: 4665, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10769)
!10769 = !{!10770}
!10770 = !DILocalVariable(name: "c", arg: 1, scope: !10768, file: !3, line: 4665, type: !287)
!10771 = !DILocation(line: 0, scope: !10768)
!10772 = !DILocation(line: 4666, column: 9, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 4666, column: 9)
!10774 = !DILocation(line: 4666, column: 30, scope: !10773)
!10775 = !DILocation(line: 4666, column: 9, scope: !10768)
!10776 = !DILocation(line: 4667, column: 9, scope: !10773)
!10777 = !DILocation(line: 4668, column: 20, scope: !10768)
!10778 = !DILocation(line: 4668, column: 5, scope: !10768)
!10779 = !DILocation(line: 4669, column: 1, scope: !10768)
!10780 = distinct !DISubprogram(name: "lastsaveCommand", scope: !3, file: !3, line: 4614, type: !340, scopeLine: 4614, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10781)
!10781 = !{!10782}
!10782 = !DILocalVariable(name: "c", arg: 1, scope: !10780, file: !3, line: 4614, type: !287)
!10783 = !DILocation(line: 0, scope: !10780)
!10784 = !DILocation(line: 4616, column: 22, scope: !10780)
!10785 = !DILocation(line: 4616, column: 51, scope: !10780)
!10786 = !DILocation(line: 4616, column: 9, scope: !10780)
!10787 = !DILocation(line: 4615, column: 5, scope: !10780)
!10788 = !DILocation(line: 4617, column: 1, scope: !10780)
!10789 = distinct !DISubprogram(name: "typeCommand", scope: !3, file: !3, line: 4619, type: !340, scopeLine: 4619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10790)
!10790 = !{!10791, !10792, !10793}
!10791 = !DILocalVariable(name: "c", arg: 1, scope: !10789, file: !3, line: 4619, type: !287)
!10792 = !DILocalVariable(name: "o", scope: !10789, file: !3, line: 4620, type: !145)
!10793 = !DILocalVariable(name: "type", scope: !10789, file: !3, line: 4621, type: !47)
!10794 = !DILocation(line: 0, scope: !10789)
!10795 = !DILocation(line: 4623, column: 26, scope: !10789)
!10796 = !DILocation(line: 4623, column: 32, scope: !10789)
!10797 = !DILocation(line: 4623, column: 29, scope: !10789)
!10798 = !DILocation(line: 4623, column: 9, scope: !10789)
!10799 = !DILocation(line: 4624, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 4624, column: 9)
!10801 = !DILocation(line: 4624, column: 9, scope: !10789)
!10802 = !DILocation(line: 4627, column: 19, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 4626, column: 12)
!10804 = !DILocation(line: 4627, column: 9, scope: !10803)
!10805 = !DILocation(line: 0, scope: !10800)
!10806 = !DILocation(line: 4636, column: 19, scope: !10789)
!10807 = !DILocation(line: 4636, column: 5, scope: !10789)
!10808 = !DILocation(line: 4637, column: 23, scope: !10789)
!10809 = !DILocation(line: 4637, column: 5, scope: !10789)
!10810 = !DILocation(line: 4638, column: 1, scope: !10789)
!10811 = distinct !DISubprogram(name: "multiCommand", scope: !3, file: !3, line: 7517, type: !340, scopeLine: 7517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10812)
!10812 = !{!10813}
!10813 = !DILocalVariable(name: "c", arg: 1, scope: !10811, file: !3, line: 7517, type: !287)
!10814 = !DILocation(line: 0, scope: !10811)
!10815 = !DILocation(line: 7518, column: 8, scope: !10811)
!10816 = !DILocation(line: 7518, column: 14, scope: !10811)
!10817 = !DILocation(line: 7519, column: 23, scope: !10811)
!10818 = !DILocation(line: 7519, column: 5, scope: !10811)
!10819 = !DILocation(line: 7520, column: 1, scope: !10811)
!10820 = distinct !DISubprogram(name: "execBlockClientOnSwappedKeys", scope: !3, file: !3, line: 9859, type: !347, scopeLine: 9859, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10821)
!10821 = !{!10822, !10823, !10824, !10825, !10826, !10827, !10828, !10829}
!10822 = !DILocalVariable(name: "c", arg: 1, scope: !10820, file: !3, line: 9859, type: !287)
!10823 = !DILocalVariable(name: "cmd", arg: 2, scope: !10820, file: !3, line: 9859, type: !333)
!10824 = !DILocalVariable(name: "argc", arg: 3, scope: !10820, file: !3, line: 9859, type: !45)
!10825 = !DILocalVariable(name: "argv", arg: 4, scope: !10820, file: !3, line: 9859, type: !305)
!10826 = !DILocalVariable(name: "i", scope: !10820, file: !3, line: 9860, type: !45)
!10827 = !DILocalVariable(name: "margc", scope: !10820, file: !3, line: 9860, type: !45)
!10828 = !DILocalVariable(name: "mcmd", scope: !10820, file: !3, line: 9861, type: !333)
!10829 = !DILocalVariable(name: "margv", scope: !10820, file: !3, line: 9862, type: !305)
!10830 = !DILocation(line: 0, scope: !10820)
!10831 = !DILocation(line: 9867, column: 14, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 9867, column: 9)
!10833 = !DILocation(line: 9867, column: 20, scope: !10832)
!10834 = !DILocation(line: 9867, column: 9, scope: !10820)
!10835 = !DILocation(line: 9868, column: 31, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 9868, column: 5)
!10837 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 9868, column: 5)
!10838 = !DILocation(line: 9868, column: 19, scope: !10836)
!10839 = !DILocation(line: 9868, column: 5, scope: !10837)
!10840 = !DILocation(line: 9869, column: 26, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 9868, column: 43)
!10842 = !DILocation(line: 9869, column: 38, scope: !10841)
!10843 = !DILocation(line: 9870, column: 39, scope: !10841)
!10844 = !DILocation(line: 9871, column: 39, scope: !10841)
!10845 = !DILocation(line: 9873, column: 19, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 9873, column: 13)
!10847 = !DILocation(line: 9873, column: 35, scope: !10846)
!10848 = !DILocation(line: 9873, column: 13, scope: !10841)
!10849 = !DILocation(line: 9874, column: 13, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 9873, column: 44)
!10851 = !DILocation(line: 9875, column: 9, scope: !10850)
!10852 = !DILocation(line: 9876, column: 13, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 9875, column: 16)
!10854 = !DILocation(line: 9868, column: 39, scope: !10836)
!10855 = distinct !{!10855, !10839, !10856}
!10856 = !DILocation(line: 9878, column: 5, scope: !10837)
!10857 = !DILocation(line: 9879, column: 1, scope: !10820)
!10858 = distinct !DISubprogram(name: "syncCommand", scope: !3, file: !3, line: 7854, type: !340, scopeLine: 7854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10859)
!10859 = !{!10860, !10861, !10864, !10865}
!10860 = !DILocalVariable(name: "c", arg: 1, scope: !10858, file: !3, line: 7854, type: !287)
!10861 = !DILocalVariable(name: "slave", scope: !10862, file: !3, line: 7874, type: !287)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 7870, column: 38)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 7870, column: 9)
!10864 = !DILocalVariable(name: "ln", scope: !10862, file: !3, line: 7875, type: !64)
!10865 = !DILocalVariable(name: "li", scope: !10862, file: !3, line: 7876, type: !831)
!10866 = !DILocation(line: 0, scope: !10858)
!10867 = !DILocation(line: 7856, column: 12, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 7856, column: 9)
!10869 = !DILocation(line: 7856, column: 18, scope: !10868)
!10870 = !DILocation(line: 7856, column: 9, scope: !10858)
!10871 = !DILocation(line: 7862, column: 9, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 7862, column: 9)
!10873 = !DILocation(line: 7862, column: 30, scope: !10872)
!10874 = !DILocation(line: 7862, column: 9, scope: !10858)
!10875 = !DILocation(line: 7863, column: 23, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 7862, column: 36)
!10877 = !DILocation(line: 7863, column: 9, scope: !10876)
!10878 = !DILocation(line: 7864, column: 9, scope: !10876)
!10879 = !DILocation(line: 7867, column: 5, scope: !10858)
!10880 = !DILocation(line: 7870, column: 16, scope: !10863)
!10881 = !DILocation(line: 7870, column: 31, scope: !10863)
!10882 = !DILocation(line: 7870, column: 9, scope: !10858)
!10883 = !DILocation(line: 7876, column: 9, scope: !10862)
!10884 = !DILocation(line: 7876, column: 18, scope: !10862)
!10885 = !DILocation(line: 7878, column: 27, scope: !10862)
!10886 = !DILocation(line: 7878, column: 9, scope: !10862)
!10887 = !DILocation(line: 7879, column: 9, scope: !10862)
!10888 = !DILocation(line: 0, scope: !10862)
!10889 = !DILocation(line: 7879, column: 21, scope: !10862)
!10890 = !DILocation(line: 7880, column: 25, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 7879, column: 37)
!10892 = !DILocation(line: 7881, column: 24, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 7881, column: 17)
!10894 = !DILocation(line: 7881, column: 34, scope: !10893)
!10895 = !DILocation(line: 7881, column: 17, scope: !10891)
!10896 = distinct !{!10896, !10887, !10897}
!10897 = !DILocation(line: 7882, column: 9, scope: !10862)
!10898 = !DILocation(line: 7886, column: 28, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 7883, column: 17)
!10900 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 7883, column: 13)
!10901 = !DILocation(line: 7886, column: 13, scope: !10899)
!10902 = !DILocation(line: 7887, column: 39, scope: !10899)
!10903 = !DILocation(line: 7887, column: 24, scope: !10899)
!10904 = !DILocation(line: 7887, column: 22, scope: !10899)
!10905 = !DILocation(line: 7890, column: 9, scope: !10899)
!10906 = !DILocation(line: 0, scope: !10900)
!10907 = !DILocation(line: 7896, column: 5, scope: !10863)
!10908 = !DILocation(line: 7896, column: 5, scope: !10862)
!10909 = !DILocation(line: 7898, column: 9, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 7896, column: 12)
!10911 = !DILocation(line: 7899, column: 38, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 7899, column: 13)
!10913 = !DILocation(line: 7899, column: 13, scope: !10912)
!10914 = !DILocation(line: 7899, column: 50, scope: !10912)
!10915 = !DILocation(line: 7899, column: 13, scope: !10910)
!10916 = !DILocation(line: 7900, column: 13, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 7899, column: 63)
!10918 = !DILocation(line: 7901, column: 27, scope: !10917)
!10919 = !DILocation(line: 7901, column: 13, scope: !10917)
!10920 = !DILocation(line: 7902, column: 13, scope: !10917)
!10921 = !DILocation(line: 7904, column: 12, scope: !10910)
!10922 = !DILocation(line: 7904, column: 22, scope: !10910)
!10923 = !DILocation(line: 7906, column: 8, scope: !10858)
!10924 = !DILocation(line: 7906, column: 17, scope: !10858)
!10925 = !DILocation(line: 7907, column: 14, scope: !10858)
!10926 = !DILocation(line: 7908, column: 8, scope: !10858)
!10927 = !DILocation(line: 7908, column: 19, scope: !10858)
!10928 = !DILocation(line: 7909, column: 28, scope: !10858)
!10929 = !DILocation(line: 7909, column: 35, scope: !10858)
!10930 = !DILocation(line: 7909, column: 5, scope: !10858)
!10931 = !DILocation(line: 7910, column: 5, scope: !10858)
!10932 = !DILocation(line: 7911, column: 1, scope: !10858)
!10933 = distinct !DISubprogram(name: "flushdbCommand", scope: !3, file: !3, line: 6806, type: !340, scopeLine: 6806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10934)
!10934 = !{!10935}
!10935 = !DILocalVariable(name: "c", arg: 1, scope: !10933, file: !3, line: 6806, type: !287)
!10936 = !DILocation(line: 0, scope: !10933)
!10937 = !DILocation(line: 6807, column: 21, scope: !10933)
!10938 = !DILocation(line: 6807, column: 18, scope: !10933)
!10939 = !DILocation(line: 6808, column: 5, scope: !10933)
!10940 = !DILocation(line: 6809, column: 18, scope: !10933)
!10941 = !DILocation(line: 6809, column: 22, scope: !10933)
!10942 = !DILocation(line: 6809, column: 5, scope: !10933)
!10943 = !DILocation(line: 6810, column: 23, scope: !10933)
!10944 = !DILocation(line: 6810, column: 5, scope: !10933)
!10945 = !DILocation(line: 6811, column: 1, scope: !10933)
!10946 = distinct !DISubprogram(name: "flushallCommand", scope: !3, file: !3, line: 6813, type: !340, scopeLine: 6813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "c", arg: 1, scope: !10946, file: !3, line: 6813, type: !287)
!10949 = !DILocation(line: 0, scope: !10946)
!10950 = !DILocation(line: 6814, column: 21, scope: !10946)
!10951 = !DILocation(line: 6814, column: 18, scope: !10946)
!10952 = !DILocation(line: 6815, column: 23, scope: !10946)
!10953 = !DILocation(line: 6815, column: 5, scope: !10946)
!10954 = !DILocation(line: 6816, column: 16, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 6816, column: 9)
!10956 = !DILocation(line: 6816, column: 31, scope: !10955)
!10957 = !DILocation(line: 6816, column: 9, scope: !10946)
!10958 = !DILocation(line: 6817, column: 9, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 6816, column: 38)
!10960 = !DILocation(line: 6818, column: 34, scope: !10959)
!10961 = !DILocation(line: 6818, column: 9, scope: !10959)
!10962 = !DILocation(line: 6819, column: 5, scope: !10959)
!10963 = !DILocation(line: 6820, column: 20, scope: !10946)
!10964 = !DILocation(line: 6820, column: 5, scope: !10946)
!10965 = !DILocation(line: 6821, column: 17, scope: !10946)
!10966 = !DILocation(line: 6822, column: 1, scope: !10946)
!10967 = distinct !DISubprogram(name: "sortCommand", scope: !3, file: !3, line: 6952, type: !340, scopeLine: 6952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10968)
!10968 = !{!10969, !10970, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10978, !10979, !10980, !10981, !10982, !10983, !10984, !10985, !10996, !10998, !11001, !11002, !11003, !11005, !11007, !11008, !11009, !11012, !11018, !11024, !11025, !11033, !11034, !11036, !11037, !11041, !11042, !11044}
!10969 = !DILocalVariable(name: "c", arg: 1, scope: !10967, file: !3, line: 6952, type: !287)
!10970 = !DILocalVariable(name: "operations", scope: !10967, file: !3, line: 6953, type: !58)
!10971 = !DILocalVariable(name: "outputlen", scope: !10967, file: !3, line: 6954, type: !45)
!10972 = !DILocalVariable(name: "desc", scope: !10967, file: !3, line: 6955, type: !45)
!10973 = !DILocalVariable(name: "alpha", scope: !10967, file: !3, line: 6955, type: !45)
!10974 = !DILocalVariable(name: "limit_start", scope: !10967, file: !3, line: 6956, type: !45)
!10975 = !DILocalVariable(name: "limit_count", scope: !10967, file: !3, line: 6956, type: !45)
!10976 = !DILocalVariable(name: "start", scope: !10967, file: !3, line: 6956, type: !45)
!10977 = !DILocalVariable(name: "end", scope: !10967, file: !3, line: 6956, type: !45)
!10978 = !DILocalVariable(name: "j", scope: !10967, file: !3, line: 6957, type: !45)
!10979 = !DILocalVariable(name: "dontsort", scope: !10967, file: !3, line: 6957, type: !45)
!10980 = !DILocalVariable(name: "vectorlen", scope: !10967, file: !3, line: 6957, type: !45)
!10981 = !DILocalVariable(name: "getop", scope: !10967, file: !3, line: 6958, type: !45)
!10982 = !DILocalVariable(name: "sortval", scope: !10967, file: !3, line: 6959, type: !145)
!10983 = !DILocalVariable(name: "sortby", scope: !10967, file: !3, line: 6959, type: !145)
!10984 = !DILocalVariable(name: "storekey", scope: !10967, file: !3, line: 6959, type: !145)
!10985 = !DILocalVariable(name: "vector", scope: !10967, file: !3, line: 6960, type: !10986)
!10986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10987, size: 64)
!10987 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisSortObject", file: !3, line: 486, baseType: !10988)
!10988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_redisSortObject", file: !3, line: 480, size: 128, elements: !10989)
!10989 = !{!10990, !10991}
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !10988, file: !3, line: 481, baseType: !145, size: 64)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10988, file: !3, line: 485, baseType: !10992, size: 64, offset: 64)
!10992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10988, file: !3, line: 482, size: 64, elements: !10993)
!10993 = !{!10994, !10995}
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !10992, file: !3, line: 483, baseType: !168, size: 64)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "cmpobj", scope: !10992, file: !3, line: 484, baseType: !145, size: 64)
!10996 = !DILocalVariable(name: "leftargs", scope: !10997, file: !3, line: 6988, type: !45)
!10997 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 6987, column: 24)
!10998 = !DILocalVariable(name: "list", scope: !10999, file: !3, line: 7033, type: !58)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 7032, column: 38)
!11000 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7032, column: 9)
!11001 = !DILocalVariable(name: "ln", scope: !10999, file: !3, line: 7034, type: !64)
!11002 = !DILocalVariable(name: "li", scope: !10999, file: !3, line: 7035, type: !831)
!11003 = !DILocalVariable(name: "ele", scope: !11004, file: !3, line: 7039, type: !145)
!11004 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 7038, column: 37)
!11005 = !DILocalVariable(name: "set", scope: !11006, file: !3, line: 7046, type: !86)
!11006 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 7045, column: 12)
!11007 = !DILocalVariable(name: "di", scope: !11006, file: !3, line: 7047, type: !2938)
!11008 = !DILocalVariable(name: "setele", scope: !11006, file: !3, line: 7048, type: !124)
!11009 = !DILocalVariable(name: "zs", scope: !11010, file: !3, line: 7053, type: !171)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 7052, column: 16)
!11011 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 7050, column: 13)
!11012 = !DILocalVariable(name: "byval", scope: !11013, file: !3, line: 7071, type: !145)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 7070, column: 41)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 7070, column: 9)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 7070, column: 9)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 7069, column: 24)
!11017 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7069, column: 9)
!11018 = !DILocalVariable(name: "ln", scope: !11019, file: !3, line: 7131, type: !64)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 7130, column: 40)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 7130, column: 9)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 7130, column: 9)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 7127, column: 27)
!11023 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7127, column: 9)
!11024 = !DILocalVariable(name: "li", scope: !11019, file: !3, line: 7132, type: !831)
!11025 = !DILocalVariable(name: "sop", scope: !11026, file: !3, line: 7137, type: !11027)
!11026 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 7136, column: 41)
!11027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11028, size: 64)
!11028 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisSortOperation", file: !3, line: 491, baseType: !11029)
!11029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_redisSortOperation", file: !3, line: 488, size: 128, elements: !11030)
!11030 = !{!11031, !11032}
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11029, file: !3, line: 489, baseType: !45, size: 32)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !11029, file: !3, line: 490, baseType: !145, size: 64, offset: 64)
!11033 = !DILocalVariable(name: "val", scope: !11026, file: !3, line: 7138, type: !145)
!11034 = !DILocalVariable(name: "listObject", scope: !11035, file: !3, line: 7154, type: !145)
!11035 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 7153, column: 12)
!11036 = !DILocalVariable(name: "listPtr", scope: !11035, file: !3, line: 7155, type: !58)
!11037 = !DILocalVariable(name: "ln", scope: !11038, file: !3, line: 7159, type: !64)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 7158, column: 40)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 7158, column: 9)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 7158, column: 9)
!11041 = !DILocalVariable(name: "li", scope: !11038, file: !3, line: 7160, type: !831)
!11042 = !DILocalVariable(name: "sop", scope: !11043, file: !3, line: 7168, type: !11027)
!11043 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 7167, column: 41)
!11044 = !DILocalVariable(name: "val", scope: !11043, file: !3, line: 7169, type: !145)
!11045 = !DILocation(line: 0, scope: !10967)
!11046 = !DILocation(line: 6963, column: 32, scope: !10967)
!11047 = !DILocation(line: 6963, column: 38, scope: !10967)
!11048 = !DILocation(line: 6963, column: 35, scope: !10967)
!11049 = !DILocation(line: 6963, column: 15, scope: !10967)
!11050 = !DILocation(line: 6964, column: 17, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 6964, column: 9)
!11052 = !DILocation(line: 6964, column: 9, scope: !10967)
!11053 = !DILocation(line: 6965, column: 27, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 6964, column: 26)
!11055 = !DILocation(line: 6965, column: 9, scope: !11054)
!11056 = !DILocation(line: 6966, column: 9, scope: !11054)
!11057 = !DILocation(line: 6968, column: 18, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 6968, column: 9)
!11059 = !DILocation(line: 6968, column: 36, scope: !11058)
!11060 = !DILocation(line: 6971, column: 27, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 6970, column: 5)
!11062 = !DILocation(line: 6971, column: 9, scope: !11061)
!11063 = !DILocation(line: 6972, column: 9, scope: !11061)
!11064 = !DILocation(line: 6977, column: 18, scope: !10967)
!11065 = !DILocation(line: 6978, column: 5, scope: !10967)
!11066 = !DILocation(line: 6984, column: 5, scope: !10967)
!11067 = !DILocation(line: 6987, column: 18, scope: !10967)
!11068 = !DILocation(line: 6987, column: 13, scope: !10967)
!11069 = !DILocation(line: 6987, column: 5, scope: !10967)
!11070 = !DILocation(line: 6988, column: 33, scope: !10997)
!11071 = !DILocation(line: 0, scope: !10997)
!11072 = !DILocation(line: 6989, column: 28, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 6989, column: 13)
!11074 = !DILocation(line: 6989, column: 25, scope: !11073)
!11075 = !DILocation(line: 6989, column: 37, scope: !11073)
!11076 = !DILocation(line: 6989, column: 14, scope: !11073)
!11077 = !DILocation(line: 6989, column: 13, scope: !10997)
!11078 = !DILocation(line: 6991, column: 21, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 6991, column: 20)
!11080 = !DILocation(line: 6991, column: 20, scope: !11073)
!11081 = !DILocation(line: 6993, column: 21, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 6993, column: 20)
!11083 = !DILocation(line: 6993, column: 20, scope: !11079)
!11084 = !DILocation(line: 6995, column: 21, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 6995, column: 20)
!11086 = !DILocation(line: 6995, column: 57, scope: !11085)
!11087 = !DILocation(line: 6996, column: 41, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 6995, column: 75)
!11089 = !DILocation(line: 6996, column: 32, scope: !11088)
!11090 = !DILocation(line: 6996, column: 46, scope: !11088)
!11091 = !DILocation(line: 6996, column: 27, scope: !11088)
!11092 = !DILocation(line: 6997, column: 41, scope: !11088)
!11093 = !DILocation(line: 6997, column: 32, scope: !11088)
!11094 = !DILocation(line: 6997, column: 46, scope: !11088)
!11095 = !DILocation(line: 6997, column: 27, scope: !11088)
!11096 = !DILocation(line: 6999, column: 9, scope: !11088)
!11097 = !DILocation(line: 6999, column: 21, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 6999, column: 20)
!11099 = !DILocation(line: 6999, column: 57, scope: !11098)
!11100 = !DILocation(line: 7000, column: 33, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 6999, column: 75)
!11102 = !DILocation(line: 7000, column: 24, scope: !11101)
!11103 = !DILocation(line: 7002, column: 9, scope: !11101)
!11104 = !DILocation(line: 7002, column: 21, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 7002, column: 20)
!11106 = !DILocation(line: 7002, column: 54, scope: !11105)
!11107 = !DILocation(line: 7003, column: 31, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 7002, column: 72)
!11109 = !DILocation(line: 7003, column: 22, scope: !11108)
!11110 = !DILocation(line: 7006, column: 38, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 7006, column: 17)
!11112 = !DILocation(line: 7006, column: 17, scope: !11111)
!11113 = !DILocation(line: 7006, column: 47, scope: !11111)
!11114 = !DILocation(line: 7006, column: 17, scope: !11108)
!11115 = !DILocation(line: 7008, column: 9, scope: !11108)
!11116 = !DILocation(line: 7008, column: 21, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 7008, column: 20)
!11118 = !DILocation(line: 7008, column: 55, scope: !11117)
!11119 = !DILocation(line: 7010, column: 41, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 7008, column: 73)
!11121 = !DILocation(line: 7010, column: 32, scope: !11120)
!11122 = !DILocation(line: 7009, column: 40, scope: !11120)
!11123 = !DILocation(line: 7009, column: 13, scope: !11120)
!11124 = !DILocation(line: 7011, column: 18, scope: !11120)
!11125 = !DILocation(line: 7014, column: 26, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 7013, column: 16)
!11127 = !DILocation(line: 7014, column: 13, scope: !11126)
!11128 = !DILocation(line: 7015, column: 13, scope: !11126)
!11129 = !DILocation(line: 7016, column: 31, scope: !11126)
!11130 = !{!3571, !714, i64 120}
!11131 = !DILocation(line: 7016, column: 13, scope: !11126)
!11132 = !DILocation(line: 7019, column: 10, scope: !10997)
!11133 = distinct !{!11133, !11069, !11134}
!11134 = !DILocation(line: 7020, column: 5, scope: !10967)
!11135 = !DILocation(line: 6959, column: 37, scope: !10967)
!11136 = !DILocation(line: 6959, column: 21, scope: !10967)
!11137 = !DILocation(line: 6958, column: 9, scope: !10967)
!11138 = !DILocation(line: 6957, column: 12, scope: !10967)
!11139 = !DILocation(line: 6955, column: 19, scope: !10967)
!11140 = !DILocation(line: 6955, column: 9, scope: !10967)
!11141 = !DILocation(line: 7023, column: 21, scope: !10967)
!11142 = !DILocation(line: 7023, column: 5, scope: !10967)
!11143 = !DILocation(line: 7024, column: 34, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7023, column: 27)
!11145 = !DILocation(line: 7024, column: 67, scope: !11144)
!11146 = !DILocation(line: 7025, column: 34, scope: !11144)
!11147 = !DILocation(line: 7025, column: 65, scope: !11144)
!11148 = !DILocation(line: 7026, column: 34, scope: !11144)
!11149 = !DILocation(line: 7026, column: 73, scope: !11144)
!11150 = !DILocation(line: 7027, column: 29, scope: !11144)
!11151 = !DILocation(line: 0, scope: !11144)
!11152 = !DILocation(line: 7029, column: 46, scope: !10967)
!11153 = !DILocation(line: 7029, column: 45, scope: !10967)
!11154 = !DILocation(line: 7029, column: 14, scope: !10967)
!11155 = !DILocation(line: 7032, column: 18, scope: !11000)
!11156 = !DILocation(line: 7032, column: 9, scope: !10967)
!11157 = !DILocation(line: 7033, column: 31, scope: !10999)
!11158 = !DILocation(line: 0, scope: !10999)
!11159 = !DILocation(line: 7035, column: 9, scope: !10999)
!11160 = !DILocation(line: 7035, column: 18, scope: !10999)
!11161 = !DILocation(line: 7037, column: 9, scope: !10999)
!11162 = !DILocation(line: 7038, column: 21, scope: !10999)
!11163 = !DILocation(line: 7038, column: 9, scope: !10999)
!11164 = !DILocation(line: 7039, column: 29, scope: !11004)
!11165 = !DILocation(line: 0, scope: !11004)
!11166 = !DILocation(line: 7040, column: 23, scope: !11004)
!11167 = !DILocation(line: 7040, column: 27, scope: !11004)
!11168 = !{!11169, !714, i64 0}
!11169 = !{!"_redisSortObject", !714, i64 0, !711, i64 8}
!11170 = !DILocation(line: 7041, column: 23, scope: !11004)
!11171 = !DILocation(line: 7042, column: 25, scope: !11004)
!11172 = !DILocation(line: 7042, column: 32, scope: !11004)
!11173 = !DILocation(line: 7043, column: 14, scope: !11004)
!11174 = distinct !{!11174, !11163, !11175}
!11175 = !DILocation(line: 7044, column: 9, scope: !10999)
!11176 = !DILocation(line: 7045, column: 5, scope: !11000)
!11177 = !DILocation(line: 7045, column: 5, scope: !10999)
!11178 = !DILocation(line: 7051, column: 28, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 7050, column: 41)
!11180 = !DILocation(line: 0, scope: !11006)
!11181 = !DILocation(line: 7052, column: 9, scope: !11179)
!11182 = !DILocation(line: 7053, column: 33, scope: !11010)
!11183 = !DILocation(line: 0, scope: !11010)
!11184 = !DILocation(line: 7054, column: 23, scope: !11010)
!11185 = !DILocation(line: 0, scope: !11011)
!11186 = !DILocation(line: 7057, column: 14, scope: !11006)
!11187 = !DILocation(line: 7058, column: 25, scope: !11006)
!11188 = !DILocation(line: 7058, column: 39, scope: !11006)
!11189 = !DILocation(line: 7058, column: 9, scope: !11006)
!11190 = !DILocation(line: 7059, column: 29, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 7058, column: 48)
!11192 = !DILocation(line: 7059, column: 23, scope: !11191)
!11193 = !DILocation(line: 7059, column: 27, scope: !11191)
!11194 = !DILocation(line: 7060, column: 23, scope: !11191)
!11195 = !DILocation(line: 7061, column: 25, scope: !11191)
!11196 = !DILocation(line: 7061, column: 32, scope: !11191)
!11197 = !DILocation(line: 7062, column: 14, scope: !11191)
!11198 = distinct !{!11198, !11189, !11199}
!11199 = !DILocation(line: 7063, column: 9, scope: !11006)
!11200 = !DILocation(line: 7064, column: 9, scope: !11006)
!11201 = !DILocation(line: 7030, column: 7, scope: !10967)
!11202 = !DILocation(line: 7066, column: 5, scope: !10967)
!11203 = !DILocation(line: 7069, column: 18, scope: !11017)
!11204 = !DILocation(line: 7069, column: 9, scope: !10967)
!11205 = !DILocation(line: 7070, column: 23, scope: !11014)
!11206 = !DILocation(line: 7070, column: 9, scope: !11015)
!11207 = !DILocation(line: 7072, column: 17, scope: !11013)
!11208 = !DILocation(line: 7074, column: 47, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 7072, column: 25)
!11210 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 7072, column: 17)
!11211 = !DILocation(line: 7074, column: 67, scope: !11209)
!11212 = !DILocation(line: 7074, column: 25, scope: !11209)
!11213 = !DILocation(line: 0, scope: !11013)
!11214 = !DILocation(line: 7075, column: 22, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 7075, column: 21)
!11216 = !DILocation(line: 7075, column: 21, scope: !11209)
!11217 = !DILocation(line: 7078, column: 35, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 7076, column: 20)
!11219 = !DILocation(line: 7081, column: 17, scope: !11013)
!11220 = !DILocation(line: 7082, column: 50, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 7082, column: 21)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 7081, column: 24)
!11223 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 7081, column: 17)
!11224 = !DILocation(line: 7082, column: 39, scope: !11221)
!11225 = !DILocation(line: 7082, column: 41, scope: !11221)
!11226 = !DILocation(line: 7082, column: 48, scope: !11221)
!11227 = !DILocation(line: 7098, column: 17, scope: !11013)
!11228 = !DILocation(line: 7084, column: 28, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 7084, column: 21)
!11230 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 7083, column: 20)
!11231 = !DILocation(line: 7084, column: 21, scope: !11230)
!11232 = !DILocation(line: 7085, column: 55, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 7084, column: 60)
!11234 = !DILocation(line: 7085, column: 41, scope: !11233)
!11235 = !DILocation(line: 7086, column: 17, scope: !11233)
!11236 = !DILocation(line: 7090, column: 54, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 7086, column: 67)
!11238 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 7086, column: 28)
!11239 = !DILocation(line: 7090, column: 41, scope: !11237)
!11240 = !DILocation(line: 7092, column: 21, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 7091, column: 24)
!11242 = !DILocation(line: 0, scope: !11229)
!11243 = !DILocation(line: 7099, column: 30, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 7098, column: 25)
!11245 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 7098, column: 17)
!11246 = !DILocation(line: 7099, column: 17, scope: !11244)
!11247 = !DILocation(line: 7100, column: 13, scope: !11244)
!11248 = !DILocation(line: 7070, column: 37, scope: !11014)
!11249 = distinct !{!11249, !11206, !11250}
!11250 = !DILocation(line: 7101, column: 9, scope: !11015)
!11251 = !DILocation(line: 7106, column: 13, scope: !10967)
!11252 = !DILocation(line: 7107, column: 24, scope: !10967)
!11253 = !DILocation(line: 7107, column: 11, scope: !10967)
!11254 = !DILocation(line: 7108, column: 15, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7108, column: 9)
!11256 = !DILocation(line: 7108, column: 9, scope: !10967)
!11257 = !DILocation(line: 7112, column: 13, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7112, column: 9)
!11259 = !DILocation(line: 7112, column: 9, scope: !10967)
!11260 = !DILocation(line: 7114, column: 9, scope: !10967)
!11261 = !DILocation(line: 7115, column: 26, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 7114, column: 24)
!11263 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7114, column: 9)
!11264 = !{!709, !713, i64 592}
!11265 = !DILocation(line: 7116, column: 27, scope: !11262)
!11266 = !{!709, !713, i64 596}
!11267 = !DILocation(line: 7117, column: 33, scope: !11262)
!11268 = !DILocation(line: 7117, column: 31, scope: !11262)
!11269 = !{!709, !713, i64 600}
!11270 = !DILocation(line: 7118, column: 20, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 7118, column: 13)
!11272 = !DILocation(line: 7118, column: 30, scope: !11271)
!11273 = !DILocation(line: 7118, column: 35, scope: !11271)
!11274 = !DILocation(line: 7119, column: 74, scope: !11271)
!11275 = !DILocation(line: 7119, column: 80, scope: !11271)
!11276 = !DILocation(line: 7119, column: 13, scope: !11271)
!11277 = !DILocation(line: 7121, column: 13, scope: !11271)
!11278 = !DILocation(line: 7126, column: 17, scope: !10967)
!11279 = !DILocation(line: 7127, column: 18, scope: !11023)
!11280 = !DILocation(line: 7127, column: 9, scope: !10967)
!11281 = !DILocation(line: 7129, column: 36, scope: !11022)
!11282 = !DILocation(line: 7129, column: 23, scope: !11022)
!11283 = !DILocation(line: 7129, column: 9, scope: !11022)
!11284 = !DILocation(line: 7130, column: 27, scope: !11020)
!11285 = !DILocation(line: 7130, column: 9, scope: !11021)
!11286 = !DILocation(line: 7132, column: 13, scope: !11019)
!11287 = !DILocation(line: 7132, column: 22, scope: !11019)
!11288 = !DILocation(line: 7134, column: 17, scope: !11019)
!11289 = !DILocation(line: 7134, column: 50, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 7134, column: 17)
!11291 = !DILocation(line: 7134, column: 25, scope: !11290)
!11292 = !DILocation(line: 7135, column: 13, scope: !11019)
!11293 = !DILocation(line: 7136, column: 25, scope: !11019)
!11294 = !DILocation(line: 0, scope: !11019)
!11295 = !DILocation(line: 7136, column: 13, scope: !11019)
!11296 = !DILocation(line: 7137, column: 47, scope: !11026)
!11297 = !DILocation(line: 0, scope: !11026)
!11298 = !DILocation(line: 7138, column: 51, scope: !11026)
!11299 = !DILocation(line: 7138, column: 59, scope: !11026)
!11300 = !{!11301, !714, i64 8}
!11301 = !{!"_redisSortOperation", !713, i64 0, !714, i64 8}
!11302 = !DILocation(line: 7139, column: 31, scope: !11026)
!11303 = !DILocation(line: 7138, column: 29, scope: !11026)
!11304 = !DILocation(line: 7141, column: 26, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 7141, column: 21)
!11306 = !{!11301, !713, i64 0}
!11307 = !DILocation(line: 7141, column: 31, scope: !11305)
!11308 = !DILocation(line: 7141, column: 21, scope: !11026)
!11309 = !DILocation(line: 7142, column: 26, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 7142, column: 25)
!11311 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 7141, column: 50)
!11312 = !DILocation(line: 7142, column: 25, scope: !11311)
!11313 = !DILocation(line: 7143, column: 43, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 7142, column: 31)
!11315 = !DILocation(line: 7143, column: 25, scope: !11314)
!11316 = !DILocation(line: 7144, column: 21, scope: !11314)
!11317 = !DILocation(line: 7145, column: 25, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 7144, column: 28)
!11319 = !DILocation(line: 7146, column: 38, scope: !11318)
!11320 = !DILocation(line: 7146, column: 25, scope: !11318)
!11321 = !DILocation(line: 7149, column: 21, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 7148, column: 24)
!11323 = distinct !{!11323, !11295, !11324}
!11324 = !DILocation(line: 7151, column: 13, scope: !11019)
!11325 = !DILocation(line: 7152, column: 9, scope: !11020)
!11326 = !DILocation(line: 7130, column: 36, scope: !11020)
!11327 = distinct !{!11327, !11285, !11328}
!11328 = !DILocation(line: 7152, column: 9, scope: !11021)
!11329 = !DILocation(line: 7154, column: 28, scope: !11035)
!11330 = !DILocation(line: 0, scope: !11035)
!11331 = !DILocation(line: 7155, column: 45, scope: !11035)
!11332 = !DILocation(line: 7158, column: 27, scope: !11039)
!11333 = !DILocation(line: 7158, column: 9, scope: !11040)
!11334 = !DILocation(line: 7160, column: 13, scope: !11038)
!11335 = !DILocation(line: 7160, column: 22, scope: !11038)
!11336 = !DILocation(line: 7162, column: 17, scope: !11038)
!11337 = !DILocation(line: 7163, column: 51, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 7162, column: 25)
!11339 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 7162, column: 17)
!11340 = !DILocation(line: 7163, column: 17, scope: !11338)
!11341 = !DILocation(line: 7164, column: 40, scope: !11338)
!11342 = !DILocation(line: 7164, column: 17, scope: !11338)
!11343 = !DILocation(line: 7165, column: 13, scope: !11338)
!11344 = !DILocation(line: 7166, column: 13, scope: !11038)
!11345 = !DILocation(line: 7167, column: 25, scope: !11038)
!11346 = !DILocation(line: 0, scope: !11038)
!11347 = !DILocation(line: 7167, column: 13, scope: !11038)
!11348 = !DILocation(line: 7168, column: 47, scope: !11043)
!11349 = !DILocation(line: 0, scope: !11043)
!11350 = !DILocation(line: 7169, column: 51, scope: !11043)
!11351 = !DILocation(line: 7169, column: 59, scope: !11043)
!11352 = !DILocation(line: 7170, column: 31, scope: !11043)
!11353 = !DILocation(line: 7169, column: 29, scope: !11043)
!11354 = !DILocation(line: 7172, column: 26, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11043, file: !3, line: 7172, column: 21)
!11356 = !DILocation(line: 7172, column: 31, scope: !11355)
!11357 = !DILocation(line: 7172, column: 21, scope: !11043)
!11358 = !DILocation(line: 7173, column: 26, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 7173, column: 25)
!11360 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 7172, column: 50)
!11361 = !DILocation(line: 7173, column: 25, scope: !11360)
!11362 = !DILocation(line: 7174, column: 49, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 7173, column: 31)
!11364 = !DILocation(line: 7174, column: 25, scope: !11363)
!11365 = !DILocation(line: 7175, column: 21, scope: !11363)
!11366 = !DILocation(line: 7180, column: 49, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 7175, column: 28)
!11368 = !DILocation(line: 7180, column: 25, scope: !11367)
!11369 = !DILocation(line: 7183, column: 21, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 7182, column: 24)
!11371 = distinct !{!11371, !11347, !11372}
!11372 = !DILocation(line: 7185, column: 13, scope: !11038)
!11373 = !DILocation(line: 7186, column: 9, scope: !11039)
!11374 = !DILocation(line: 7158, column: 36, scope: !11039)
!11375 = distinct !{!11375, !11333, !11376}
!11376 = !DILocation(line: 7186, column: 9, scope: !11040)
!11377 = !DILocation(line: 7187, column: 28, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 7187, column: 13)
!11379 = !DILocation(line: 7187, column: 32, scope: !11378)
!11380 = !DILocation(line: 7187, column: 37, scope: !11378)
!11381 = !DILocation(line: 7187, column: 46, scope: !11378)
!11382 = !DILocation(line: 7187, column: 13, scope: !11378)
!11383 = !DILocation(line: 7187, column: 13, scope: !11035)
!11384 = !DILocation(line: 7188, column: 13, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 7187, column: 59)
!11386 = !DILocation(line: 7189, column: 9, scope: !11385)
!11387 = !DILocation(line: 7193, column: 26, scope: !11035)
!11388 = !DILocation(line: 7193, column: 25, scope: !11035)
!11389 = !DILocation(line: 7193, column: 22, scope: !11035)
!11390 = !DILocation(line: 7194, column: 36, scope: !11035)
!11391 = !DILocation(line: 7194, column: 23, scope: !11035)
!11392 = !DILocation(line: 7194, column: 9, scope: !11035)
!11393 = !DILocation(line: 7198, column: 18, scope: !10967)
!11394 = !DILocation(line: 7198, column: 5, scope: !10967)
!11395 = !DILocation(line: 7199, column: 5, scope: !10967)
!11396 = !DILocation(line: 7200, column: 5, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 7200, column: 5)
!11398 = !DILocation(line: 7200, column: 19, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 7200, column: 5)
!11400 = !DILocation(line: 7201, column: 19, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 7201, column: 13)
!11402 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 7200, column: 37)
!11403 = !DILocation(line: 7201, column: 32, scope: !11401)
!11404 = !DILocation(line: 7201, column: 34, scope: !11401)
!11405 = !DILocation(line: 7201, column: 22, scope: !11401)
!11406 = !DILocation(line: 7201, column: 13, scope: !11402)
!11407 = !DILocation(line: 7202, column: 26, scope: !11401)
!11408 = !DILocation(line: 7202, column: 13, scope: !11401)
!11409 = !DILocation(line: 7200, column: 33, scope: !11399)
!11410 = distinct !{!11410, !11396, !11411}
!11411 = !DILocation(line: 7203, column: 5, scope: !11397)
!11412 = !DILocation(line: 7204, column: 5, scope: !10967)
!11413 = !DILocation(line: 7205, column: 1, scope: !10967)
!11414 = distinct !DISubprogram(name: "infoCommand", scope: !3, file: !3, line: 7348, type: !340, scopeLine: 7348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11415)
!11415 = !{!11416, !11417}
!11416 = !DILocalVariable(name: "c", arg: 1, scope: !11414, file: !3, line: 7348, type: !287)
!11417 = !DILocalVariable(name: "info", scope: !11414, file: !3, line: 7349, type: !165)
!11418 = !DILocation(line: 0, scope: !11414)
!11419 = !DILocation(line: 7349, column: 16, scope: !11414)
!11420 = !DILocation(line: 7350, column: 32, scope: !11414)
!11421 = !DILocation(line: 7351, column: 24, scope: !11414)
!11422 = !DILocation(line: 7350, column: 19, scope: !11414)
!11423 = !DILocation(line: 7350, column: 5, scope: !11414)
!11424 = !DILocation(line: 7352, column: 5, scope: !11414)
!11425 = !DILocation(line: 7353, column: 23, scope: !11414)
!11426 = !DILocation(line: 7353, column: 5, scope: !11414)
!11427 = !DILocation(line: 7354, column: 1, scope: !11414)
!11428 = distinct !DISubprogram(name: "monitorCommand", scope: !3, file: !3, line: 7356, type: !340, scopeLine: 7356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11429)
!11429 = !{!11430}
!11430 = !DILocalVariable(name: "c", arg: 1, scope: !11428, file: !3, line: 7356, type: !287)
!11431 = !DILocation(line: 0, scope: !11428)
!11432 = !DILocation(line: 7358, column: 12, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 7358, column: 9)
!11434 = !DILocation(line: 7358, column: 18, scope: !11433)
!11435 = !DILocation(line: 7358, column: 9, scope: !11428)
!11436 = !DILocation(line: 7360, column: 14, scope: !11428)
!11437 = !DILocation(line: 7361, column: 8, scope: !11428)
!11438 = !DILocation(line: 7361, column: 19, scope: !11428)
!11439 = !DILocation(line: 7362, column: 28, scope: !11428)
!11440 = !DILocation(line: 7362, column: 37, scope: !11428)
!11441 = !DILocation(line: 7362, column: 5, scope: !11428)
!11442 = !DILocation(line: 7363, column: 23, scope: !11428)
!11443 = !DILocation(line: 7363, column: 5, scope: !11428)
!11444 = !DILocation(line: 7364, column: 1, scope: !11428)
!11445 = distinct !DISubprogram(name: "ttlCommand", scope: !3, file: !3, line: 7465, type: !340, scopeLine: 7465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11446)
!11446 = !{!11447, !11448, !11449}
!11447 = !DILocalVariable(name: "c", arg: 1, scope: !11445, file: !3, line: 7465, type: !287)
!11448 = !DILocalVariable(name: "expire", scope: !11445, file: !3, line: 7466, type: !49)
!11449 = !DILocalVariable(name: "ttl", scope: !11445, file: !3, line: 7467, type: !45)
!11450 = !DILocation(line: 0, scope: !11445)
!11451 = !DILocation(line: 7469, column: 27, scope: !11445)
!11452 = !DILocation(line: 7469, column: 33, scope: !11445)
!11453 = !DILocation(line: 7469, column: 30, scope: !11445)
!11454 = !DILocation(line: 7469, column: 14, scope: !11445)
!11455 = !DILocation(line: 7470, column: 16, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 7470, column: 9)
!11457 = !DILocation(line: 7470, column: 9, scope: !11445)
!11458 = !DILocation(line: 7471, column: 29, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11456, file: !3, line: 7470, column: 23)
!11460 = !DILocation(line: 7471, column: 28, scope: !11459)
!11461 = !DILocation(line: 7471, column: 15, scope: !11459)
!11462 = !DILocation(line: 7472, column: 13, scope: !11459)
!11463 = !DILocation(line: 7473, column: 5, scope: !11459)
!11464 = !DILocation(line: 7474, column: 32, scope: !11445)
!11465 = !DILocation(line: 7474, column: 19, scope: !11445)
!11466 = !DILocation(line: 7474, column: 5, scope: !11445)
!11467 = !DILocation(line: 7475, column: 1, scope: !11445)
!11468 = distinct !DISubprogram(name: "slaveofCommand", scope: !3, file: !3, line: 8134, type: !340, scopeLine: 8134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11469)
!11469 = !{!11470}
!11470 = !DILocalVariable(name: "c", arg: 1, scope: !11468, file: !3, line: 8134, type: !287)
!11471 = !DILocation(line: 0, scope: !11468)
!11472 = !DILocation(line: 8135, column: 24, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 8135, column: 9)
!11474 = !DILocation(line: 8135, column: 21, scope: !11473)
!11475 = !DILocation(line: 8135, column: 33, scope: !11473)
!11476 = !DILocation(line: 8135, column: 10, scope: !11473)
!11477 = !DILocation(line: 8135, column: 43, scope: !11473)
!11478 = !DILocation(line: 8136, column: 21, scope: !11473)
!11479 = !DILocation(line: 8136, column: 33, scope: !11473)
!11480 = !DILocation(line: 8136, column: 10, scope: !11473)
!11481 = !DILocation(line: 8135, column: 9, scope: !11468)
!11482 = !DILocation(line: 8137, column: 20, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 8137, column: 13)
!11484 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 8136, column: 45)
!11485 = !DILocation(line: 8137, column: 13, scope: !11483)
!11486 = !DILocation(line: 8137, column: 13, scope: !11484)
!11487 = !DILocation(line: 8138, column: 13, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 8137, column: 32)
!11489 = !DILocation(line: 8139, column: 31, scope: !11488)
!11490 = !DILocation(line: 8140, column: 24, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 8140, column: 17)
!11492 = !DILocation(line: 8140, column: 17, scope: !11491)
!11493 = !DILocation(line: 8140, column: 17, scope: !11488)
!11494 = !DILocation(line: 8140, column: 32, scope: !11491)
!11495 = !DILocation(line: 8141, column: 30, scope: !11488)
!11496 = !DILocation(line: 8142, column: 13, scope: !11488)
!11497 = !DILocation(line: 8143, column: 9, scope: !11488)
!11498 = !DILocation(line: 8145, column: 24, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 8144, column: 12)
!11500 = !DILocation(line: 8145, column: 9, scope: !11499)
!11501 = !DILocation(line: 8146, column: 39, scope: !11499)
!11502 = !DILocation(line: 8146, column: 36, scope: !11499)
!11503 = !DILocation(line: 8146, column: 48, scope: !11499)
!11504 = !DILocation(line: 8146, column: 29, scope: !11499)
!11505 = !DILocation(line: 8146, column: 27, scope: !11499)
!11506 = !DILocation(line: 8147, column: 37, scope: !11499)
!11507 = !DILocation(line: 8147, column: 34, scope: !11499)
!11508 = !DILocation(line: 8147, column: 46, scope: !11499)
!11509 = !DILocation(line: 8147, column: 29, scope: !11499)
!11510 = !DILocation(line: 8147, column: 27, scope: !11499)
!11511 = !DILocation(line: 8148, column: 20, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 8148, column: 13)
!11513 = !DILocation(line: 8148, column: 13, scope: !11512)
!11514 = !DILocation(line: 8148, column: 13, scope: !11499)
!11515 = !DILocation(line: 8148, column: 28, scope: !11512)
!11516 = !DILocation(line: 8151, column: 20, scope: !11499)
!11517 = !DILocation(line: 8151, column: 39, scope: !11499)
!11518 = !DILocation(line: 8149, column: 26, scope: !11499)
!11519 = !DILocation(line: 8150, column: 9, scope: !11499)
!11520 = !DILocation(line: 8153, column: 23, scope: !11468)
!11521 = !DILocation(line: 8153, column: 5, scope: !11468)
!11522 = !DILocation(line: 8154, column: 1, scope: !11468)
!11523 = distinct !DISubprogram(name: "debugCommand", scope: !3, file: !3, line: 10620, type: !340, scopeLine: 10620, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11524)
!11524 = !{!11525, !11526, !11532, !11533, !11534, !11537, !11538, !11542, !11543, !11544, !11547, !11550, !11551, !11552, !11553, !11554, !11558, !11559}
!11525 = !DILocalVariable(name: "c", arg: 1, scope: !11523, file: !3, line: 10620, type: !287)
!11526 = !DILocalVariable(name: "de", scope: !11527, file: !3, line: 10644, type: !124)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 10643, column: 71)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 10643, column: 16)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 10635, column: 16)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 10623, column: 16)
!11531 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 10621, column: 9)
!11532 = !DILocalVariable(name: "key", scope: !11527, file: !3, line: 10645, type: !145)
!11533 = !DILocalVariable(name: "val", scope: !11527, file: !3, line: 10645, type: !145)
!11534 = !DILocalVariable(name: "strenc", scope: !11535, file: !3, line: 10655, type: !47)
!11535 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 10654, column: 72)
!11536 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 10653, column: 13)
!11537 = !DILocalVariable(name: "buf", scope: !11535, file: !3, line: 10656, type: !1247)
!11538 = !DILocalVariable(name: "de", scope: !11539, file: !3, line: 10680, type: !124)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 10679, column: 72)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 10679, column: 16)
!11541 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 10676, column: 16)
!11542 = !DILocalVariable(name: "key", scope: !11539, file: !3, line: 10681, type: !145)
!11543 = !DILocalVariable(name: "val", scope: !11539, file: !3, line: 10681, type: !145)
!11544 = !DILocalVariable(name: "newkey", scope: !11545, file: !3, line: 10695, type: !145)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 10694, column: 32)
!11546 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 10694, column: 13)
!11547 = !DILocalVariable(name: "keys", scope: !11548, file: !3, line: 10709, type: !53)
!11548 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 10708, column: 73)
!11549 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 10708, column: 16)
!11550 = !DILocalVariable(name: "j", scope: !11548, file: !3, line: 10709, type: !53)
!11551 = !DILocalVariable(name: "key", scope: !11548, file: !3, line: 10710, type: !145)
!11552 = !DILocalVariable(name: "val", scope: !11548, file: !3, line: 10710, type: !145)
!11553 = !DILocalVariable(name: "buf", scope: !11548, file: !3, line: 10711, type: !1247)
!11554 = !DILocalVariable(name: "digest", scope: !11555, file: !3, line: 10728, type: !11557)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 10727, column: 71)
!11556 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 10727, column: 16)
!11557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 160, elements: !629)
!11558 = !DILocalVariable(name: "d", scope: !11555, file: !3, line: 10729, type: !165)
!11559 = !DILocalVariable(name: "j", scope: !11555, file: !3, line: 10730, type: !45)
!11560 = !DILocation(line: 0, scope: !11523)
!11561 = !DILocation(line: 10621, column: 24, scope: !11531)
!11562 = !DILocation(line: 10621, column: 21, scope: !11531)
!11563 = !DILocation(line: 10621, column: 33, scope: !11531)
!11564 = !DILocation(line: 10621, column: 10, scope: !11531)
!11565 = !DILocation(line: 10621, column: 9, scope: !11523)
!11566 = !DILocation(line: 10622, column: 22, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 10621, column: 50)
!11568 = !DILocation(line: 10623, column: 5, scope: !11567)
!11569 = !DILocation(line: 10623, column: 17, scope: !11530)
!11570 = !DILocation(line: 10623, column: 16, scope: !11531)
!11571 = !DILocation(line: 10624, column: 28, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 10624, column: 13)
!11573 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 10623, column: 55)
!11574 = !DILocation(line: 10624, column: 13, scope: !11572)
!11575 = !DILocation(line: 10624, column: 40, scope: !11572)
!11576 = !DILocation(line: 10624, column: 13, scope: !11573)
!11577 = !DILocation(line: 10625, column: 31, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 10624, column: 53)
!11579 = !DILocation(line: 10625, column: 13, scope: !11578)
!11580 = !DILocation(line: 10626, column: 13, scope: !11578)
!11581 = !DILocation(line: 10628, column: 9, scope: !11573)
!11582 = !DILocation(line: 10629, column: 28, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 10629, column: 13)
!11584 = !DILocation(line: 10629, column: 13, scope: !11583)
!11585 = !DILocation(line: 10629, column: 40, scope: !11583)
!11586 = !DILocation(line: 10629, column: 13, scope: !11573)
!11587 = !DILocation(line: 10630, column: 31, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 10629, column: 53)
!11589 = !DILocation(line: 10630, column: 13, scope: !11588)
!11590 = !DILocation(line: 10631, column: 13, scope: !11588)
!11591 = !DILocation(line: 10633, column: 9, scope: !11573)
!11592 = !DILocation(line: 10634, column: 27, scope: !11573)
!11593 = !DILocation(line: 10634, column: 9, scope: !11573)
!11594 = !DILocation(line: 10635, column: 5, scope: !11573)
!11595 = !DILocation(line: 10635, column: 17, scope: !11529)
!11596 = !DILocation(line: 10635, column: 16, scope: !11530)
!11597 = !DILocation(line: 10636, column: 9, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 10635, column: 56)
!11599 = !DILocation(line: 10637, column: 39, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 10637, column: 13)
!11601 = !DILocation(line: 10637, column: 13, scope: !11600)
!11602 = !DILocation(line: 10637, column: 55, scope: !11600)
!11603 = !DILocation(line: 10637, column: 13, scope: !11598)
!11604 = !DILocation(line: 10638, column: 31, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 10637, column: 68)
!11606 = !DILocation(line: 10638, column: 13, scope: !11605)
!11607 = !DILocation(line: 10639, column: 13, scope: !11605)
!11608 = !DILocation(line: 10641, column: 9, scope: !11598)
!11609 = !DILocation(line: 10642, column: 27, scope: !11598)
!11610 = !DILocation(line: 10642, column: 9, scope: !11598)
!11611 = !DILocation(line: 10643, column: 5, scope: !11598)
!11612 = !DILocation(line: 10643, column: 17, scope: !11528)
!11613 = !DILocation(line: 10643, column: 54, scope: !11528)
!11614 = !DILocation(line: 10643, column: 60, scope: !11528)
!11615 = !DILocation(line: 10643, column: 65, scope: !11528)
!11616 = !DILocation(line: 10643, column: 16, scope: !11529)
!11617 = !DILocation(line: 10644, column: 37, scope: !11527)
!11618 = !DILocation(line: 10644, column: 41, scope: !11527)
!11619 = !DILocation(line: 10644, column: 46, scope: !11527)
!11620 = !DILocation(line: 10644, column: 25, scope: !11527)
!11621 = !DILocation(line: 0, scope: !11527)
!11622 = !DILocation(line: 10647, column: 14, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 10647, column: 13)
!11624 = !DILocation(line: 10647, column: 13, scope: !11527)
!11625 = !DILocation(line: 10648, column: 31, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 10647, column: 18)
!11627 = !DILocation(line: 10648, column: 13, scope: !11626)
!11628 = !DILocation(line: 10649, column: 13, scope: !11626)
!11629 = !DILocation(line: 10651, column: 15, scope: !11527)
!11630 = !DILocation(line: 10652, column: 15, scope: !11527)
!11631 = !DILocation(line: 10653, column: 21, scope: !11536)
!11632 = !DILocation(line: 10653, column: 14, scope: !11536)
!11633 = !DILocation(line: 10653, column: 32, scope: !11536)
!11634 = !DILocation(line: 10653, column: 41, scope: !11536)
!11635 = !DILocation(line: 10653, column: 68, scope: !11536)
!11636 = !DILocation(line: 10656, column: 13, scope: !11535)
!11637 = !DILocation(line: 10656, column: 18, scope: !11535)
!11638 = !DILocation(line: 10658, column: 22, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 10658, column: 17)
!11640 = !DILocation(line: 10658, column: 31, scope: !11639)
!11641 = !DILocation(line: 10658, column: 17, scope: !11535)
!11642 = !DILocation(line: 10658, column: 17, scope: !11639)
!11643 = !DILocation(line: 10659, column: 26, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 10658, column: 70)
!11645 = !DILocation(line: 0, scope: !11535)
!11646 = !DILocation(line: 10660, column: 13, scope: !11644)
!11647 = !DILocation(line: 10661, column: 58, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 10660, column: 20)
!11649 = !DILocation(line: 10661, column: 17, scope: !11648)
!11650 = !DILocation(line: 0, scope: !11639)
!11651 = !DILocation(line: 10664, column: 40, scope: !11535)
!11652 = !DILocation(line: 10667, column: 34, scope: !11535)
!11653 = !DILocation(line: 10667, column: 61, scope: !11535)
!11654 = !DILocation(line: 10668, column: 37, scope: !11535)
!11655 = !DILocation(line: 10664, column: 27, scope: !11535)
!11656 = !DILocation(line: 10664, column: 13, scope: !11535)
!11657 = !DILocation(line: 10669, column: 9, scope: !11536)
!11658 = !DILocation(line: 10669, column: 9, scope: !11535)
!11659 = !DILocation(line: 10670, column: 40, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 10669, column: 16)
!11661 = !DILocation(line: 10673, column: 34, scope: !11660)
!11662 = !DILocation(line: 10673, column: 70, scope: !11660)
!11663 = !DILocation(line: 10673, column: 73, scope: !11660)
!11664 = !DILocation(line: 10674, column: 46, scope: !11660)
!11665 = !DILocation(line: 10670, column: 27, scope: !11660)
!11666 = !DILocation(line: 10670, column: 13, scope: !11660)
!11667 = !DILocation(line: 10676, column: 17, scope: !11541)
!11668 = !DILocation(line: 10676, column: 54, scope: !11541)
!11669 = !DILocation(line: 10676, column: 60, scope: !11541)
!11670 = !DILocation(line: 10676, column: 65, scope: !11541)
!11671 = !DILocation(line: 10676, column: 16, scope: !11528)
!11672 = !DILocation(line: 10677, column: 26, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 10676, column: 71)
!11674 = !DILocation(line: 10677, column: 29, scope: !11673)
!11675 = !DILocation(line: 10677, column: 9, scope: !11673)
!11676 = !DILocation(line: 10678, column: 27, scope: !11673)
!11677 = !DILocation(line: 10678, column: 9, scope: !11673)
!11678 = !DILocation(line: 10679, column: 5, scope: !11673)
!11679 = !DILocation(line: 10679, column: 17, scope: !11540)
!11680 = !DILocation(line: 10679, column: 55, scope: !11540)
!11681 = !DILocation(line: 10679, column: 61, scope: !11540)
!11682 = !DILocation(line: 10679, column: 66, scope: !11540)
!11683 = !DILocation(line: 10679, column: 16, scope: !11541)
!11684 = !DILocation(line: 10680, column: 37, scope: !11539)
!11685 = !DILocation(line: 10680, column: 41, scope: !11539)
!11686 = !DILocation(line: 10680, column: 46, scope: !11539)
!11687 = !DILocation(line: 10680, column: 25, scope: !11539)
!11688 = !DILocation(line: 0, scope: !11539)
!11689 = !DILocation(line: 10683, column: 21, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 10683, column: 13)
!11691 = !DILocation(line: 10683, column: 14, scope: !11690)
!11692 = !DILocation(line: 10683, column: 13, scope: !11539)
!11693 = !DILocation(line: 10684, column: 27, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 10683, column: 33)
!11695 = !DILocation(line: 10684, column: 13, scope: !11694)
!11696 = !DILocation(line: 10685, column: 13, scope: !11694)
!11697 = !DILocation(line: 10687, column: 14, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 10687, column: 13)
!11699 = !DILocation(line: 10687, column: 13, scope: !11539)
!11700 = !DILocation(line: 10688, column: 31, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 10687, column: 18)
!11702 = !DILocation(line: 10688, column: 13, scope: !11701)
!11703 = !DILocation(line: 10689, column: 13, scope: !11701)
!11704 = !DILocation(line: 10691, column: 15, scope: !11539)
!11705 = !DILocation(line: 10692, column: 15, scope: !11539)
!11706 = !DILocation(line: 10694, column: 18, scope: !11546)
!11707 = !DILocation(line: 10694, column: 27, scope: !11546)
!11708 = !DILocation(line: 10694, column: 13, scope: !11539)
!11709 = !DILocation(line: 10695, column: 28, scope: !11545)
!11710 = !DILocation(line: 0, scope: !11545)
!11711 = !DILocation(line: 10696, column: 13, scope: !11545)
!11712 = !DILocation(line: 10697, column: 39, scope: !11545)
!11713 = !DILocation(line: 10698, column: 9, scope: !11545)
!11714 = !DILocation(line: 10700, column: 18, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 10700, column: 13)
!11716 = !DILocation(line: 10700, column: 26, scope: !11715)
!11717 = !DILocation(line: 10700, column: 13, scope: !11539)
!11718 = !DILocation(line: 10701, column: 27, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 10700, column: 46)
!11720 = !DILocation(line: 10701, column: 13, scope: !11719)
!11721 = !DILocation(line: 10702, column: 9, scope: !11719)
!11722 = !DILocation(line: 10702, column: 20, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 10702, column: 20)
!11724 = !DILocation(line: 10702, column: 50, scope: !11723)
!11725 = !DILocation(line: 10702, column: 20, scope: !11715)
!11726 = !DILocation(line: 10703, column: 33, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 10702, column: 63)
!11728 = !DILocation(line: 10704, column: 31, scope: !11727)
!11729 = !DILocation(line: 10704, column: 13, scope: !11727)
!11730 = !DILocation(line: 10705, column: 9, scope: !11727)
!11731 = !DILocation(line: 10706, column: 31, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 10705, column: 16)
!11733 = !DILocation(line: 10706, column: 13, scope: !11732)
!11734 = !DILocation(line: 10708, column: 17, scope: !11549)
!11735 = !DILocation(line: 10708, column: 56, scope: !11549)
!11736 = !DILocation(line: 10708, column: 62, scope: !11549)
!11737 = !DILocation(line: 10708, column: 67, scope: !11549)
!11738 = !DILocation(line: 10708, column: 16, scope: !11540)
!11739 = !DILocation(line: 10709, column: 9, scope: !11548)
!11740 = !DILocation(line: 10711, column: 9, scope: !11548)
!11741 = !DILocation(line: 10711, column: 14, scope: !11548)
!11742 = !DILocation(line: 10713, column: 41, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 10713, column: 13)
!11744 = !DILocation(line: 0, scope: !11548)
!11745 = !DILocation(line: 10713, column: 13, scope: !11743)
!11746 = !DILocation(line: 10713, column: 66, scope: !11743)
!11747 = !DILocation(line: 10713, column: 13, scope: !11548)
!11748 = !DILocation(line: 10715, column: 23, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 10715, column: 9)
!11750 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 10715, column: 9)
!11751 = !DILocation(line: 10715, column: 9, scope: !11750)
!11752 = !DILocation(line: 10716, column: 13, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 10715, column: 36)
!11754 = !DILocation(line: 10717, column: 42, scope: !11753)
!11755 = !DILocation(line: 10717, column: 19, scope: !11753)
!11756 = !DILocation(line: 10718, column: 34, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 10718, column: 17)
!11758 = !DILocation(line: 10718, column: 17, scope: !11757)
!11759 = !DILocation(line: 10718, column: 42, scope: !11757)
!11760 = !DILocation(line: 10718, column: 17, scope: !11753)
!11761 = !DILocation(line: 10719, column: 30, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 10718, column: 51)
!11763 = !DILocation(line: 10719, column: 17, scope: !11762)
!11764 = !DILocation(line: 10720, column: 17, scope: !11762)
!11765 = !DILocation(line: 10722, column: 13, scope: !11753)
!11766 = !DILocation(line: 10723, column: 42, scope: !11753)
!11767 = !DILocation(line: 10723, column: 19, scope: !11753)
!11768 = !DILocation(line: 10724, column: 24, scope: !11753)
!11769 = !DILocation(line: 10724, column: 28, scope: !11753)
!11770 = !DILocation(line: 10724, column: 33, scope: !11753)
!11771 = !DILocation(line: 10724, column: 37, scope: !11753)
!11772 = !DILocation(line: 10724, column: 13, scope: !11753)
!11773 = !DILocation(line: 10725, column: 9, scope: !11753)
!11774 = !DILocation(line: 10715, column: 32, scope: !11749)
!11775 = distinct !{!11775, !11751, !11776}
!11776 = !DILocation(line: 10725, column: 9, scope: !11750)
!11777 = !DILocation(line: 10726, column: 27, scope: !11548)
!11778 = !DILocation(line: 10726, column: 9, scope: !11548)
!11779 = !DILocation(line: 10727, column: 5, scope: !11549)
!11780 = !DILocation(line: 10727, column: 17, scope: !11556)
!11781 = !DILocation(line: 10727, column: 54, scope: !11556)
!11782 = !DILocation(line: 10727, column: 60, scope: !11556)
!11783 = !DILocation(line: 10727, column: 65, scope: !11556)
!11784 = !DILocation(line: 10727, column: 16, scope: !11549)
!11785 = !DILocation(line: 10728, column: 9, scope: !11555)
!11786 = !DILocation(line: 10728, column: 23, scope: !11555)
!11787 = !DILocation(line: 10729, column: 17, scope: !11555)
!11788 = !DILocation(line: 0, scope: !11555)
!11789 = !DILocation(line: 10732, column: 9, scope: !11555)
!11790 = !DILocation(line: 10734, column: 40, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 10733, column: 9)
!11792 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 10733, column: 9)
!11793 = !DILocation(line: 10734, column: 17, scope: !11791)
!11794 = !DILocation(line: 10736, column: 13, scope: !11555)
!11795 = !DILocation(line: 10737, column: 9, scope: !11555)
!11796 = !DILocation(line: 10738, column: 5, scope: !11556)
!11797 = !DILocation(line: 10738, column: 5, scope: !11555)
!11798 = !DILocation(line: 10739, column: 23, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 10738, column: 12)
!11800 = !DILocation(line: 10739, column: 9, scope: !11799)
!11801 = !DILocation(line: 10742, column: 1, scope: !11523)
!11802 = distinct !DISubprogram(name: "configCommand", scope: !3, file: !3, line: 10154, type: !340, scopeLine: 10154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11803)
!11803 = !{!11804, !11805}
!11804 = !DILocalVariable(name: "c", arg: 1, scope: !11802, file: !3, line: 10154, type: !287)
!11805 = !DILabel(scope: !11802, name: "badarity", file: !3, line: 10174)
!11806 = !DILocation(line: 0, scope: !11802)
!11807 = !DILocation(line: 10155, column: 24, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 10155, column: 9)
!11809 = !DILocation(line: 10155, column: 21, scope: !11808)
!11810 = !DILocation(line: 10155, column: 33, scope: !11808)
!11811 = !DILocation(line: 10155, column: 10, scope: !11808)
!11812 = !DILocation(line: 10155, column: 9, scope: !11802)
!11813 = !DILocation(line: 10156, column: 16, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 10156, column: 13)
!11815 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 10155, column: 45)
!11816 = !DILocation(line: 10156, column: 21, scope: !11814)
!11817 = !DILocation(line: 10156, column: 13, scope: !11815)
!11818 = !DILocation(line: 10157, column: 9, scope: !11815)
!11819 = !DILocation(line: 10158, column: 5, scope: !11815)
!11820 = !DILocation(line: 10158, column: 17, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 10158, column: 16)
!11822 = !DILocation(line: 10158, column: 16, scope: !11808)
!11823 = !DILocation(line: 10159, column: 16, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 10159, column: 13)
!11825 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 10158, column: 52)
!11826 = !DILocation(line: 10159, column: 21, scope: !11824)
!11827 = !DILocation(line: 10159, column: 13, scope: !11825)
!11828 = !DILocation(line: 10160, column: 9, scope: !11825)
!11829 = !DILocation(line: 10161, column: 5, scope: !11825)
!11830 = !DILocation(line: 10161, column: 17, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 10161, column: 16)
!11832 = !DILocation(line: 10161, column: 16, scope: !11821)
!11833 = !DILocation(line: 10162, column: 16, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 10162, column: 13)
!11835 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 10161, column: 58)
!11836 = !DILocation(line: 10162, column: 21, scope: !11834)
!11837 = !DILocation(line: 10162, column: 13, scope: !11835)
!11838 = !DILocation(line: 10163, column: 33, scope: !11835)
!11839 = !DILocation(line: 10165, column: 33, scope: !11835)
!11840 = !DILocation(line: 10166, column: 33, scope: !11835)
!11841 = !DILocation(line: 10166, column: 31, scope: !11835)
!11842 = !{!709, !710, i64 352}
!11843 = !DILocation(line: 10167, column: 27, scope: !11835)
!11844 = !DILocation(line: 10167, column: 9, scope: !11835)
!11845 = !DILocation(line: 10168, column: 5, scope: !11835)
!11846 = !DILocation(line: 10169, column: 36, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 10168, column: 12)
!11848 = !DILocation(line: 10169, column: 23, scope: !11847)
!11849 = !DILocation(line: 10169, column: 9, scope: !11847)
!11850 = !DILocation(line: 10174, column: 1, scope: !11802)
!11851 = !DILocation(line: 10175, column: 32, scope: !11802)
!11852 = !DILocation(line: 10177, column: 20, scope: !11802)
!11853 = !DILocation(line: 10177, column: 17, scope: !11802)
!11854 = !DILocation(line: 10177, column: 29, scope: !11802)
!11855 = !DILocation(line: 10175, column: 19, scope: !11802)
!11856 = !DILocation(line: 10175, column: 5, scope: !11802)
!11857 = !DILocation(line: 10178, column: 1, scope: !11802)
!11858 = distinct !DISubprogram(name: "publishCommand", scope: !3, file: !3, line: 10435, type: !340, scopeLine: 10435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11859)
!11859 = !{!11860, !11861}
!11860 = !DILocalVariable(name: "c", arg: 1, scope: !11858, file: !3, line: 10435, type: !287)
!11861 = !DILocalVariable(name: "receivers", scope: !11858, file: !3, line: 10436, type: !45)
!11862 = !DILocation(line: 0, scope: !11858)
!11863 = !DILocation(line: 10436, column: 45, scope: !11858)
!11864 = !DILocation(line: 10436, column: 42, scope: !11858)
!11865 = !DILocation(line: 10436, column: 53, scope: !11858)
!11866 = !DILocation(line: 10436, column: 21, scope: !11858)
!11867 = !DILocation(line: 10437, column: 24, scope: !11858)
!11868 = !DILocation(line: 10437, column: 5, scope: !11858)
!11869 = !DILocation(line: 10438, column: 1, scope: !11858)
!11870 = distinct !DISubprogram(name: "getGenericCommand", scope: !3, file: !3, line: 4300, type: !3303, scopeLine: 4300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11871)
!11871 = !{!11872, !11873}
!11872 = !DILocalVariable(name: "c", arg: 1, scope: !11870, file: !3, line: 4300, type: !287)
!11873 = !DILocalVariable(name: "o", scope: !11870, file: !3, line: 4301, type: !145)
!11874 = !DILocation(line: 0, scope: !11870)
!11875 = !DILocation(line: 4303, column: 40, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 4303, column: 9)
!11877 = !DILocation(line: 4303, column: 37, scope: !11876)
!11878 = !DILocation(line: 4303, column: 55, scope: !11876)
!11879 = !DILocation(line: 4303, column: 14, scope: !11876)
!11880 = !DILocation(line: 4303, column: 66, scope: !11876)
!11881 = !DILocation(line: 4303, column: 9, scope: !11870)
!11882 = !DILocation(line: 4306, column: 12, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 4306, column: 9)
!11884 = !DILocation(line: 4306, column: 17, scope: !11883)
!11885 = !DILocation(line: 4306, column: 9, scope: !11870)
!11886 = !DILocation(line: 4307, column: 27, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 4306, column: 34)
!11888 = !DILocation(line: 4307, column: 9, scope: !11887)
!11889 = !DILocation(line: 4308, column: 9, scope: !11887)
!11890 = !DILocation(line: 4310, column: 9, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 4309, column: 12)
!11892 = !DILocation(line: 4311, column: 9, scope: !11891)
!11893 = !DILocation(line: 4313, column: 1, scope: !11870)
!11894 = distinct !DISubprogram(name: "lookupKeyReadOrReply", scope: !3, file: !3, line: 3112, type: !11895, scopeLine: 3112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11897)
!11895 = !DISubroutineType(types: !11896)
!11896 = !{!145, !287, !145, !145}
!11897 = !{!11898, !11899, !11900, !11901}
!11898 = !DILocalVariable(name: "c", arg: 1, scope: !11894, file: !3, line: 3112, type: !287)
!11899 = !DILocalVariable(name: "key", arg: 2, scope: !11894, file: !3, line: 3112, type: !145)
!11900 = !DILocalVariable(name: "reply", arg: 3, scope: !11894, file: !3, line: 3112, type: !145)
!11901 = !DILocalVariable(name: "o", scope: !11894, file: !3, line: 3113, type: !145)
!11902 = !DILocation(line: 0, scope: !11894)
!11903 = !DILocation(line: 3113, column: 32, scope: !11894)
!11904 = !DILocation(line: 3113, column: 15, scope: !11894)
!11905 = !DILocation(line: 3114, column: 10, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 3114, column: 9)
!11907 = !DILocation(line: 3114, column: 9, scope: !11894)
!11908 = !DILocation(line: 3114, column: 13, scope: !11906)
!11909 = !DILocation(line: 3115, column: 5, scope: !11894)
!11910 = distinct !DISubprogram(name: "lookupKeyRead", scope: !3, file: !3, line: 3102, type: !11911, scopeLine: 3102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11913)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!145, !293, !145}
!11913 = !{!11914, !11915}
!11914 = !DILocalVariable(name: "db", arg: 1, scope: !11910, file: !3, line: 3102, type: !293)
!11915 = !DILocalVariable(name: "key", arg: 2, scope: !11910, file: !3, line: 3102, type: !145)
!11916 = !DILocation(line: 0, scope: !11910)
!11917 = !DILocation(line: 3103, column: 5, scope: !11910)
!11918 = !DILocation(line: 3104, column: 12, scope: !11910)
!11919 = !DILocation(line: 3104, column: 5, scope: !11910)
!11920 = distinct !DISubprogram(name: "expireIfNeeded", scope: !3, file: !3, line: 7396, type: !4065, scopeLine: 7396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11921)
!11921 = !{!11922, !11923, !11924, !11925}
!11922 = !DILocalVariable(name: "db", arg: 1, scope: !11920, file: !3, line: 7396, type: !293)
!11923 = !DILocalVariable(name: "key", arg: 2, scope: !11920, file: !3, line: 7396, type: !145)
!11924 = !DILocalVariable(name: "when", scope: !11920, file: !3, line: 7397, type: !49)
!11925 = !DILocalVariable(name: "de", scope: !11920, file: !3, line: 7398, type: !124)
!11926 = !DILocation(line: 0, scope: !11920)
!11927 = !DILocation(line: 7401, column: 9, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 7401, column: 9)
!11929 = !DILocation(line: 7401, column: 31, scope: !11928)
!11930 = !DILocation(line: 7401, column: 36, scope: !11928)
!11931 = !DILocation(line: 7402, column: 35, scope: !11928)
!11932 = !DILocation(line: 7402, column: 14, scope: !11928)
!11933 = !DILocation(line: 7402, column: 41, scope: !11928)
!11934 = !DILocation(line: 7401, column: 9, scope: !11920)
!11935 = !DILocation(line: 7405, column: 21, scope: !11920)
!11936 = !DILocation(line: 7405, column: 12, scope: !11920)
!11937 = !DILocation(line: 7406, column: 9, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 7406, column: 9)
!11939 = !DILocation(line: 7406, column: 20, scope: !11938)
!11940 = !DILocation(line: 7406, column: 9, scope: !11920)
!11941 = !DILocation(line: 7409, column: 20, scope: !11920)
!11942 = !DILocation(line: 7409, column: 5, scope: !11920)
!11943 = !DILocation(line: 7410, column: 28, scope: !11920)
!11944 = !DILocation(line: 7411, column: 27, scope: !11920)
!11945 = !DILocation(line: 7411, column: 12, scope: !11920)
!11946 = !DILocation(line: 7411, column: 37, scope: !11920)
!11947 = !DILocation(line: 7411, column: 5, scope: !11920)
!11948 = !DILocation(line: 7412, column: 1, scope: !11920)
!11949 = distinct !DISubprogram(name: "lookupKey", scope: !3, file: !3, line: 3067, type: !11911, scopeLine: 3067, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11950)
!11950 = !{!11951, !11952, !11953, !11954, !11957, !11958}
!11951 = !DILocalVariable(name: "db", arg: 1, scope: !11949, file: !3, line: 3067, type: !293)
!11952 = !DILocalVariable(name: "key", arg: 2, scope: !11949, file: !3, line: 3067, type: !145)
!11953 = !DILocalVariable(name: "de", scope: !11949, file: !3, line: 3068, type: !124)
!11954 = !DILocalVariable(name: "key", scope: !11955, file: !3, line: 3070, type: !145)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 3069, column: 13)
!11956 = distinct !DILexicalBlock(scope: !11949, file: !3, line: 3069, column: 9)
!11957 = !DILocalVariable(name: "val", scope: !11955, file: !3, line: 3071, type: !145)
!11958 = !DILocalVariable(name: "notify", scope: !11959, file: !3, line: 3084, type: !45)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 3083, column: 20)
!11960 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 3074, column: 17)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 3073, column: 32)
!11962 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 3073, column: 13)
!11963 = !DILocation(line: 0, scope: !11949)
!11964 = !DILocation(line: 3068, column: 34, scope: !11949)
!11965 = !DILocation(line: 3068, column: 39, scope: !11949)
!11966 = !DILocation(line: 3068, column: 21, scope: !11949)
!11967 = !DILocation(line: 3069, column: 9, scope: !11956)
!11968 = !DILocation(line: 3069, column: 9, scope: !11949)
!11969 = !DILocation(line: 3070, column: 21, scope: !11955)
!11970 = !DILocation(line: 0, scope: !11955)
!11971 = !DILocation(line: 3071, column: 21, scope: !11955)
!11972 = !DILocation(line: 3073, column: 20, scope: !11962)
!11973 = !DILocation(line: 3073, column: 13, scope: !11962)
!11974 = !DILocation(line: 3073, column: 13, scope: !11955)
!11975 = !DILocation(line: 3074, column: 22, scope: !11960)
!11976 = !DILocation(line: 3074, column: 49, scope: !11960)
!11977 = !DILocation(line: 3080, column: 21, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3079, column: 21)
!11979 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 3076, column: 13)
!11980 = !DILocation(line: 3082, column: 40, scope: !11979)
!11981 = !DILocation(line: 3082, column: 25, scope: !11979)
!11982 = !DILocation(line: 3082, column: 31, scope: !11979)
!11983 = !DILocation(line: 3083, column: 13, scope: !11979)
!11984 = !DILocation(line: 0, scope: !11959)
!11985 = !DILocation(line: 3087, column: 17, scope: !11959)
!11986 = !DILocation(line: 3084, column: 44, scope: !11959)
!11987 = !DILocation(line: 3088, column: 23, scope: !11959)
!11988 = !DILocation(line: 3089, column: 37, scope: !11959)
!11989 = !DILocation(line: 3093, column: 21, scope: !11959)
!11990 = !DILocation(line: 3093, column: 29, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 3093, column: 21)
!11992 = !DILocation(line: 0, scope: !11956)
!11993 = !DILocation(line: 3100, column: 1, scope: !11949)
!11994 = distinct !DISubprogram(name: "vmLoadObject", scope: !3, file: !3, line: 9144, type: !1572, scopeLine: 9144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11995)
!11995 = !{!11996}
!11996 = !DILocalVariable(name: "key", arg: 1, scope: !11994, file: !3, line: 9144, type: !145)
!11997 = !DILocation(line: 0, scope: !11994)
!11998 = !DILocation(line: 9147, column: 14, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 9147, column: 9)
!12000 = !DILocation(line: 9147, column: 22, scope: !11999)
!12001 = !DILocation(line: 9147, column: 9, scope: !11994)
!12002 = !DILocation(line: 9148, column: 9, scope: !11999)
!12003 = !DILocation(line: 9149, column: 12, scope: !11994)
!12004 = !DILocation(line: 9149, column: 5, scope: !11994)
!12005 = distinct !DISubprogram(name: "lookupKeyWrite", scope: !3, file: !3, line: 3107, type: !11911, scopeLine: 3107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12006)
!12006 = !{!12007, !12008}
!12007 = !DILocalVariable(name: "db", arg: 1, scope: !12005, file: !3, line: 3107, type: !293)
!12008 = !DILocalVariable(name: "key", arg: 2, scope: !12005, file: !3, line: 3107, type: !145)
!12009 = !DILocation(line: 0, scope: !12005)
!12010 = !DILocation(line: 3108, column: 5, scope: !12005)
!12011 = !DILocation(line: 3109, column: 12, scope: !12005)
!12012 = !DILocation(line: 3109, column: 5, scope: !12005)
!12013 = distinct !DISubprogram(name: "checkType", scope: !3, file: !3, line: 3124, type: !4304, scopeLine: 3124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12014)
!12014 = !{!12015, !12016, !12017}
!12015 = !DILocalVariable(name: "c", arg: 1, scope: !12013, file: !3, line: 3124, type: !287)
!12016 = !DILocalVariable(name: "o", arg: 2, scope: !12013, file: !3, line: 3124, type: !145)
!12017 = !DILocalVariable(name: "type", arg: 3, scope: !12013, file: !3, line: 3124, type: !45)
!12018 = !DILocation(line: 0, scope: !12013)
!12019 = !DILocation(line: 3125, column: 12, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 3125, column: 9)
!12021 = !DILocation(line: 3125, column: 9, scope: !12020)
!12022 = !DILocation(line: 3125, column: 17, scope: !12020)
!12023 = !DILocation(line: 3125, column: 9, scope: !12013)
!12024 = !DILocation(line: 3126, column: 27, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 3125, column: 26)
!12026 = !DILocation(line: 3126, column: 9, scope: !12025)
!12027 = !DILocation(line: 3127, column: 9, scope: !12025)
!12028 = !DILocation(line: 3130, column: 1, scope: !12013)
!12029 = distinct !DISubprogram(name: "incrDecrCommand", scope: !3, file: !3, line: 4396, type: !4167, scopeLine: 4396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12030)
!12030 = !{!12031, !12032, !12033, !12034, !12035}
!12031 = !DILocalVariable(name: "c", arg: 1, scope: !12029, file: !3, line: 4396, type: !287)
!12032 = !DILocalVariable(name: "incr", arg: 2, scope: !12029, file: !3, line: 4396, type: !54)
!12033 = !DILocalVariable(name: "value", scope: !12029, file: !3, line: 4397, type: !54)
!12034 = !DILocalVariable(name: "retval", scope: !12029, file: !3, line: 4398, type: !45)
!12035 = !DILocalVariable(name: "o", scope: !12029, file: !3, line: 4399, type: !145)
!12036 = !DILocation(line: 0, scope: !12029)
!12037 = !DILocation(line: 4397, column: 5, scope: !12029)
!12038 = !DILocation(line: 4401, column: 27, scope: !12029)
!12039 = !DILocation(line: 4401, column: 33, scope: !12029)
!12040 = !DILocation(line: 4401, column: 30, scope: !12029)
!12041 = !DILocation(line: 4401, column: 9, scope: !12029)
!12042 = !DILocation(line: 4402, column: 11, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 4402, column: 9)
!12044 = !DILocation(line: 4402, column: 19, scope: !12043)
!12045 = !DILocation(line: 4402, column: 22, scope: !12043)
!12046 = !DILocation(line: 4402, column: 9, scope: !12029)
!12047 = !DILocation(line: 4403, column: 9, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 4403, column: 9)
!12049 = !DILocation(line: 4403, column: 55, scope: !12048)
!12050 = !DILocation(line: 4403, column: 9, scope: !12029)
!12051 = !DILocation(line: 4405, column: 11, scope: !12029)
!12052 = !DILocation(line: 4406, column: 9, scope: !12029)
!12053 = !DILocation(line: 4407, column: 25, scope: !12029)
!12054 = !DILocation(line: 4407, column: 29, scope: !12029)
!12055 = !DILocation(line: 4407, column: 37, scope: !12029)
!12056 = !DILocation(line: 4407, column: 34, scope: !12029)
!12057 = !DILocation(line: 4407, column: 45, scope: !12029)
!12058 = !DILocation(line: 4407, column: 14, scope: !12029)
!12059 = !DILocation(line: 4408, column: 16, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 4408, column: 9)
!12061 = !DILocation(line: 4408, column: 9, scope: !12029)
!12062 = !DILocation(line: 4409, column: 24, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 4408, column: 29)
!12064 = !DILocation(line: 4409, column: 28, scope: !12063)
!12065 = !DILocation(line: 4409, column: 36, scope: !12063)
!12066 = !DILocation(line: 4409, column: 33, scope: !12063)
!12067 = !DILocation(line: 4409, column: 9, scope: !12063)
!12068 = !DILocation(line: 4410, column: 25, scope: !12063)
!12069 = !DILocation(line: 4410, column: 31, scope: !12063)
!12070 = !DILocation(line: 4410, column: 28, scope: !12063)
!12071 = !DILocation(line: 4410, column: 9, scope: !12063)
!12072 = !DILocation(line: 4411, column: 5, scope: !12063)
!12073 = !DILocation(line: 4412, column: 25, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 4411, column: 12)
!12075 = !DILocation(line: 4412, column: 22, scope: !12074)
!12076 = !DILocation(line: 4412, column: 9, scope: !12074)
!12077 = !DILocation(line: 4414, column: 17, scope: !12029)
!12078 = !DILocation(line: 4415, column: 23, scope: !12029)
!12079 = !{!3571, !714, i64 64}
!12080 = !DILocation(line: 4415, column: 5, scope: !12029)
!12081 = !DILocation(line: 4416, column: 5, scope: !12029)
!12082 = !DILocation(line: 4417, column: 23, scope: !12029)
!12083 = !DILocation(line: 4417, column: 5, scope: !12029)
!12084 = !DILocation(line: 4418, column: 1, scope: !12029)
!12085 = distinct !DISubprogram(name: "pushGenericCommand", scope: !3, file: !3, line: 4753, type: !12086, scopeLine: 4753, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12088)
!12086 = !DISubroutineType(types: !12087)
!12087 = !{null, !287, !45}
!12088 = !{!12089, !12090, !12091, !12092}
!12089 = !DILocalVariable(name: "c", arg: 1, scope: !12085, file: !3, line: 4753, type: !287)
!12090 = !DILocalVariable(name: "where", arg: 2, scope: !12085, file: !3, line: 4753, type: !45)
!12091 = !DILocalVariable(name: "lobj", scope: !12085, file: !3, line: 4754, type: !145)
!12092 = !DILocalVariable(name: "list", scope: !12085, file: !3, line: 4755, type: !58)
!12093 = !DILocation(line: 0, scope: !12085)
!12094 = !DILocation(line: 4757, column: 30, scope: !12085)
!12095 = !DILocation(line: 4757, column: 36, scope: !12085)
!12096 = !DILocation(line: 4757, column: 33, scope: !12085)
!12097 = !DILocation(line: 4757, column: 12, scope: !12085)
!12098 = !DILocation(line: 4758, column: 14, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 4758, column: 9)
!12100 = !DILocation(line: 4758, column: 9, scope: !12085)
!12101 = !DILocation(line: 4759, column: 47, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 4759, column: 13)
!12103 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 4758, column: 23)
!12104 = !DILocation(line: 4759, column: 44, scope: !12102)
!12105 = !DILocation(line: 4759, column: 55, scope: !12102)
!12106 = !DILocation(line: 4759, column: 13, scope: !12102)
!12107 = !DILocation(line: 4759, column: 13, scope: !12103)
!12108 = !DILocation(line: 4760, column: 31, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 4759, column: 68)
!12110 = !DILocation(line: 4760, column: 13, scope: !12109)
!12111 = !DILocation(line: 4761, column: 13, scope: !12109)
!12112 = !DILocation(line: 4763, column: 16, scope: !12103)
!12113 = !DILocation(line: 4764, column: 22, scope: !12103)
!12114 = !DILocation(line: 4765, column: 19, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 4765, column: 13)
!12116 = !DILocation(line: 0, scope: !12115)
!12117 = !DILocation(line: 4765, column: 13, scope: !12103)
!12118 = !DILocation(line: 4766, column: 13, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 4765, column: 34)
!12120 = !DILocation(line: 4767, column: 9, scope: !12119)
!12121 = !DILocation(line: 4768, column: 13, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 4767, column: 16)
!12123 = !DILocation(line: 4770, column: 20, scope: !12103)
!12124 = !DILocation(line: 4770, column: 24, scope: !12103)
!12125 = !DILocation(line: 4770, column: 32, scope: !12103)
!12126 = !DILocation(line: 4770, column: 29, scope: !12103)
!12127 = !DILocation(line: 4770, column: 40, scope: !12103)
!12128 = !DILocation(line: 4770, column: 9, scope: !12103)
!12129 = !DILocation(line: 4771, column: 25, scope: !12103)
!12130 = !DILocation(line: 4771, column: 22, scope: !12103)
!12131 = !DILocation(line: 4771, column: 9, scope: !12103)
!12132 = !DILocation(line: 4773, column: 5, scope: !12103)
!12133 = !DILocation(line: 4774, column: 19, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 4774, column: 13)
!12135 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 4773, column: 12)
!12136 = !DILocation(line: 4774, column: 24, scope: !12134)
!12137 = !DILocation(line: 4774, column: 13, scope: !12135)
!12138 = !DILocation(line: 4775, column: 31, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 4774, column: 39)
!12140 = !DILocation(line: 4775, column: 13, scope: !12139)
!12141 = !DILocation(line: 4776, column: 13, scope: !12139)
!12142 = !DILocation(line: 4778, column: 47, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 4778, column: 13)
!12144 = !DILocation(line: 4778, column: 44, scope: !12143)
!12145 = !DILocation(line: 4778, column: 55, scope: !12143)
!12146 = !DILocation(line: 4778, column: 13, scope: !12143)
!12147 = !DILocation(line: 4778, column: 13, scope: !12135)
!12148 = !DILocation(line: 4779, column: 31, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 4778, column: 68)
!12150 = !DILocation(line: 4779, column: 13, scope: !12149)
!12151 = !DILocation(line: 4780, column: 13, scope: !12149)
!12152 = !DILocation(line: 4782, column: 22, scope: !12135)
!12153 = !DILocation(line: 4783, column: 19, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 4783, column: 13)
!12155 = !DILocation(line: 0, scope: !12154)
!12156 = !DILocation(line: 4783, column: 13, scope: !12135)
!12157 = !DILocation(line: 4784, column: 13, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 4783, column: 34)
!12159 = !DILocation(line: 4785, column: 9, scope: !12158)
!12160 = !DILocation(line: 4786, column: 13, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 4785, column: 16)
!12162 = !DILocation(line: 0, scope: !12099)
!12163 = !DILocation(line: 4790, column: 17, scope: !12085)
!12164 = !DILocation(line: 4791, column: 24, scope: !12085)
!12165 = !DILocation(line: 4791, column: 5, scope: !12085)
!12166 = !DILocation(line: 4792, column: 1, scope: !12085)
!12167 = distinct !DISubprogram(name: "handleClientsWaitingListPush", scope: !3, file: !3, line: 7692, type: !12168, scopeLine: 7692, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12170)
!12168 = !DISubroutineType(types: !12169)
!12169 = !{!45, !287, !145, !145}
!12170 = !{!12171, !12172, !12173, !12174, !12175, !12176, !12177}
!12171 = !DILocalVariable(name: "c", arg: 1, scope: !12167, file: !3, line: 7692, type: !287)
!12172 = !DILocalVariable(name: "key", arg: 2, scope: !12167, file: !3, line: 7692, type: !145)
!12173 = !DILocalVariable(name: "ele", arg: 3, scope: !12167, file: !3, line: 7692, type: !145)
!12174 = !DILocalVariable(name: "de", scope: !12167, file: !3, line: 7693, type: !131)
!12175 = !DILocalVariable(name: "receiver", scope: !12167, file: !3, line: 7694, type: !287)
!12176 = !DILocalVariable(name: "l", scope: !12167, file: !3, line: 7695, type: !58)
!12177 = !DILocalVariable(name: "ln", scope: !12167, file: !3, line: 7696, type: !64)
!12178 = !DILocation(line: 0, scope: !12167)
!12179 = !DILocation(line: 7698, column: 22, scope: !12167)
!12180 = !DILocation(line: 7698, column: 26, scope: !12167)
!12181 = !DILocation(line: 7698, column: 39, scope: !12167)
!12182 = !DILocation(line: 7698, column: 10, scope: !12167)
!12183 = !DILocation(line: 7699, column: 12, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 7699, column: 9)
!12185 = !DILocation(line: 7699, column: 9, scope: !12167)
!12186 = !DILocation(line: 7700, column: 9, scope: !12167)
!12187 = !DILocation(line: 7701, column: 10, scope: !12167)
!12188 = !DILocation(line: 7702, column: 5, scope: !12167)
!12189 = !DILocation(line: 7703, column: 20, scope: !12167)
!12190 = !DILocation(line: 7705, column: 26, scope: !12167)
!12191 = !DILocation(line: 7705, column: 5, scope: !12167)
!12192 = !DILocation(line: 7706, column: 5, scope: !12167)
!12193 = !DILocation(line: 7707, column: 5, scope: !12167)
!12194 = !DILocation(line: 7708, column: 5, scope: !12167)
!12195 = !DILocation(line: 7709, column: 5, scope: !12167)
!12196 = !DILocation(line: 7710, column: 1, scope: !12167)
!12197 = distinct !DISubprogram(name: "popGenericCommand", scope: !3, file: !3, line: 4856, type: !12086, scopeLine: 4856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12198)
!12198 = !{!12199, !12200, !12201, !12202, !12203, !12204}
!12199 = !DILocalVariable(name: "c", arg: 1, scope: !12197, file: !3, line: 4856, type: !287)
!12200 = !DILocalVariable(name: "where", arg: 2, scope: !12197, file: !3, line: 4856, type: !45)
!12201 = !DILocalVariable(name: "o", scope: !12197, file: !3, line: 4857, type: !145)
!12202 = !DILocalVariable(name: "list", scope: !12197, file: !3, line: 4858, type: !58)
!12203 = !DILocalVariable(name: "ln", scope: !12197, file: !3, line: 4859, type: !64)
!12204 = !DILocalVariable(name: "ele", scope: !12205, file: !3, line: 4873, type: !145)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 4872, column: 12)
!12206 = distinct !DILexicalBlock(scope: !12197, file: !3, line: 4870, column: 9)
!12207 = !DILocation(line: 0, scope: !12197)
!12208 = !DILocation(line: 4861, column: 41, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12197, file: !3, line: 4861, column: 9)
!12210 = !DILocation(line: 4861, column: 38, scope: !12209)
!12211 = !DILocation(line: 4861, column: 56, scope: !12209)
!12212 = !DILocation(line: 4861, column: 14, scope: !12209)
!12213 = !DILocation(line: 4861, column: 67, scope: !12209)
!12214 = !DILocation(line: 4861, column: 75, scope: !12209)
!12215 = !DILocation(line: 4862, column: 9, scope: !12209)
!12216 = !DILocation(line: 4861, column: 9, scope: !12197)
!12217 = !DILocation(line: 4863, column: 15, scope: !12197)
!12218 = !DILocation(line: 4865, column: 15, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12197, file: !3, line: 4865, column: 9)
!12220 = !DILocation(line: 4865, column: 9, scope: !12197)
!12221 = !DILocation(line: 0, scope: !12219)
!12222 = !DILocation(line: 4870, column: 12, scope: !12206)
!12223 = !DILocation(line: 4870, column: 9, scope: !12197)
!12224 = !DILocation(line: 4871, column: 27, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 4870, column: 21)
!12226 = !DILocation(line: 4871, column: 9, scope: !12225)
!12227 = !DILocation(line: 4872, column: 5, scope: !12225)
!12228 = !DILocation(line: 4873, column: 21, scope: !12205)
!12229 = !DILocation(line: 0, scope: !12205)
!12230 = !DILocation(line: 4874, column: 9, scope: !12205)
!12231 = !DILocation(line: 4875, column: 9, scope: !12205)
!12232 = !DILocation(line: 4876, column: 13, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 4876, column: 13)
!12234 = !DILocation(line: 4876, column: 30, scope: !12233)
!12235 = !DILocation(line: 4876, column: 13, scope: !12205)
!12236 = !DILocation(line: 4876, column: 49, scope: !12233)
!12237 = !DILocation(line: 4876, column: 55, scope: !12233)
!12238 = !DILocation(line: 4876, column: 52, scope: !12233)
!12239 = !DILocation(line: 4876, column: 36, scope: !12233)
!12240 = !DILocation(line: 4877, column: 21, scope: !12205)
!12241 = !DILocation(line: 4879, column: 1, scope: !12197)
!12242 = distinct !DISubprogram(name: "lookupKeyWriteOrReply", scope: !3, file: !3, line: 3118, type: !11895, scopeLine: 3118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12243)
!12243 = !{!12244, !12245, !12246, !12247}
!12244 = !DILocalVariable(name: "c", arg: 1, scope: !12242, file: !3, line: 3118, type: !287)
!12245 = !DILocalVariable(name: "key", arg: 2, scope: !12242, file: !3, line: 3118, type: !145)
!12246 = !DILocalVariable(name: "reply", arg: 3, scope: !12242, file: !3, line: 3118, type: !145)
!12247 = !DILocalVariable(name: "o", scope: !12242, file: !3, line: 3119, type: !145)
!12248 = !DILocation(line: 0, scope: !12242)
!12249 = !DILocation(line: 3119, column: 33, scope: !12242)
!12250 = !DILocation(line: 3119, column: 15, scope: !12242)
!12251 = !DILocation(line: 3120, column: 10, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 3120, column: 9)
!12253 = !DILocation(line: 3120, column: 9, scope: !12242)
!12254 = !DILocation(line: 3120, column: 13, scope: !12252)
!12255 = !DILocation(line: 3121, column: 5, scope: !12242)
!12256 = distinct !DISubprogram(name: "blockingPopGenericCommand", scope: !3, file: !3, line: 7713, type: !12086, scopeLine: 7713, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12257)
!12257 = !{!12258, !12259, !12260, !12261, !12262, !12263, !12264, !12272, !12276, !12277}
!12258 = !DILocalVariable(name: "c", arg: 1, scope: !12256, file: !3, line: 7713, type: !287)
!12259 = !DILocalVariable(name: "where", arg: 2, scope: !12256, file: !3, line: 7713, type: !45)
!12260 = !DILocalVariable(name: "o", scope: !12256, file: !3, line: 7714, type: !145)
!12261 = !DILocalVariable(name: "lltimeout", scope: !12256, file: !3, line: 7715, type: !54)
!12262 = !DILocalVariable(name: "timeout", scope: !12256, file: !3, line: 7716, type: !49)
!12263 = !DILocalVariable(name: "j", scope: !12256, file: !3, line: 7717, type: !45)
!12264 = !DILocalVariable(name: "list", scope: !12265, file: !3, line: 7736, type: !58)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 7735, column: 20)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !3, line: 7732, column: 17)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 7731, column: 24)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 7731, column: 13)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 7729, column: 37)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 7729, column: 5)
!12271 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 7729, column: 5)
!12272 = !DILocalVariable(name: "argv", scope: !12273, file: !3, line: 7740, type: !12275)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !3, line: 7737, column: 44)
!12274 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 7737, column: 21)
!12275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 128, elements: !135)
!12276 = !DILocalVariable(name: "orig_argv", scope: !12273, file: !3, line: 7740, type: !305)
!12277 = !DILocalVariable(name: "orig_argc", scope: !12273, file: !3, line: 7741, type: !45)
!12278 = !DILocation(line: 0, scope: !12256)
!12279 = !DILocation(line: 7715, column: 5, scope: !12256)
!12280 = !DILocation(line: 7720, column: 43, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 7720, column: 9)
!12282 = !DILocation(line: 7720, column: 51, scope: !12281)
!12283 = !DILocation(line: 7720, column: 55, scope: !12281)
!12284 = !DILocation(line: 7720, column: 40, scope: !12281)
!12285 = !DILocation(line: 7720, column: 9, scope: !12281)
!12286 = !DILocation(line: 7721, column: 42, scope: !12281)
!12287 = !DILocation(line: 7720, column: 9, scope: !12256)
!12288 = !DILocation(line: 7724, column: 9, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 7724, column: 9)
!12290 = !DILocation(line: 7724, column: 19, scope: !12289)
!12291 = !DILocation(line: 7724, column: 9, scope: !12256)
!12292 = !DILocation(line: 7729, column: 24, scope: !12270)
!12293 = !DILocation(line: 7729, column: 19, scope: !12270)
!12294 = !DILocation(line: 7729, column: 5, scope: !12271)
!12295 = !DILocation(line: 7725, column: 23, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 7724, column: 24)
!12297 = !DILocation(line: 7725, column: 9, scope: !12296)
!12298 = !DILocation(line: 7726, column: 9, scope: !12296)
!12299 = !DILocation(line: 7730, column: 31, scope: !12269)
!12300 = !DILocation(line: 7730, column: 37, scope: !12269)
!12301 = !DILocation(line: 7730, column: 34, scope: !12269)
!12302 = !DILocation(line: 7730, column: 13, scope: !12269)
!12303 = !DILocation(line: 7731, column: 15, scope: !12268)
!12304 = !DILocation(line: 7731, column: 13, scope: !12269)
!12305 = !DILocation(line: 7732, column: 20, scope: !12266)
!12306 = !DILocation(line: 7732, column: 25, scope: !12266)
!12307 = !DILocation(line: 7732, column: 17, scope: !12267)
!12308 = !DILocation(line: 7733, column: 35, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 7732, column: 40)
!12310 = !DILocation(line: 7733, column: 17, scope: !12309)
!12311 = !DILocation(line: 7734, column: 17, scope: !12309)
!12312 = !DILocation(line: 7736, column: 33, scope: !12265)
!12313 = !DILocation(line: 0, scope: !12265)
!12314 = !DILocation(line: 7737, column: 21, scope: !12274)
!12315 = !DILocation(line: 7737, column: 38, scope: !12274)
!12316 = !DILocation(line: 7737, column: 21, scope: !12265)
!12317 = !DILocation(line: 7740, column: 21, scope: !12273)
!12318 = !DILocation(line: 7740, column: 27, scope: !12273)
!12319 = !DILocation(line: 7745, column: 36, scope: !12273)
!12320 = !DILocation(line: 0, scope: !12273)
!12321 = !DILocation(line: 7746, column: 36, scope: !12273)
!12322 = !DILocation(line: 7747, column: 31, scope: !12273)
!12323 = !DILocation(line: 7747, column: 21, scope: !12273)
!12324 = !DILocation(line: 7747, column: 29, scope: !12273)
!12325 = !DILocation(line: 7748, column: 31, scope: !12273)
!12326 = !DILocation(line: 7748, column: 29, scope: !12273)
!12327 = !DILocation(line: 7749, column: 29, scope: !12273)
!12328 = !DILocation(line: 7756, column: 35, scope: !12273)
!12329 = !DILocation(line: 7756, column: 21, scope: !12273)
!12330 = !DILocation(line: 7757, column: 36, scope: !12273)
!12331 = !DILocation(line: 7757, column: 21, scope: !12273)
!12332 = !DILocation(line: 7758, column: 21, scope: !12273)
!12333 = !DILocation(line: 7761, column: 29, scope: !12273)
!12334 = !DILocation(line: 7762, column: 29, scope: !12273)
!12335 = !DILocation(line: 7764, column: 17, scope: !12274)
!12336 = !DILocation(line: 7729, column: 33, scope: !12270)
!12337 = !DILocation(line: 7729, column: 28, scope: !12270)
!12338 = distinct !{!12338, !12294, !12339}
!12339 = !DILocation(line: 7767, column: 5, scope: !12271)
!12340 = !DILocation(line: 7771, column: 12, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 7771, column: 9)
!12342 = !DILocation(line: 7771, column: 18, scope: !12341)
!12343 = !DILocation(line: 7771, column: 9, scope: !12256)
!12344 = !DILocation(line: 7772, column: 27, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 7771, column: 33)
!12346 = !{!3571, !714, i64 80}
!12347 = !DILocation(line: 7772, column: 9, scope: !12345)
!12348 = !DILocation(line: 7773, column: 9, scope: !12345)
!12349 = !DILocation(line: 7778, column: 17, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 7778, column: 9)
!12351 = !DILocation(line: 7778, column: 9, scope: !12256)
!12352 = !DILocation(line: 7778, column: 33, scope: !12350)
!12353 = !DILocation(line: 7778, column: 30, scope: !12350)
!12354 = !DILocation(line: 7779, column: 33, scope: !12256)
!12355 = !DILocation(line: 7778, column: 22, scope: !12350)
!12356 = !DILocation(line: 7779, column: 23, scope: !12256)
!12357 = !DILocation(line: 7779, column: 27, scope: !12256)
!12358 = !DILocation(line: 7779, column: 37, scope: !12256)
!12359 = !DILocation(line: 7779, column: 5, scope: !12256)
!12360 = !DILocation(line: 7780, column: 1, scope: !12256)
!12361 = distinct !DISubprogram(name: "blockForKeys", scope: !3, file: !3, line: 7617, type: !12362, scopeLine: 7617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12364)
!12362 = !DISubroutineType(types: !12363)
!12363 = !{null, !287, !305, !45, !49}
!12364 = !{!12365, !12366, !12367, !12368, !12369, !12370, !12371, !12372}
!12365 = !DILocalVariable(name: "c", arg: 1, scope: !12361, file: !3, line: 7617, type: !287)
!12366 = !DILocalVariable(name: "keys", arg: 2, scope: !12361, file: !3, line: 7617, type: !305)
!12367 = !DILocalVariable(name: "numkeys", arg: 3, scope: !12361, file: !3, line: 7617, type: !45)
!12368 = !DILocalVariable(name: "timeout", arg: 4, scope: !12361, file: !3, line: 7617, type: !49)
!12369 = !DILocalVariable(name: "de", scope: !12361, file: !3, line: 7618, type: !124)
!12370 = !DILocalVariable(name: "l", scope: !12361, file: !3, line: 7619, type: !58)
!12371 = !DILocalVariable(name: "j", scope: !12361, file: !3, line: 7620, type: !45)
!12372 = !DILocalVariable(name: "retval", scope: !12373, file: !3, line: 7633, type: !45)
!12373 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 7632, column: 25)
!12374 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 7632, column: 13)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 7625, column: 35)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 7625, column: 5)
!12377 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 7625, column: 5)
!12378 = !DILocation(line: 0, scope: !12361)
!12379 = !DILocation(line: 7622, column: 45, scope: !12361)
!12380 = !DILocation(line: 7622, column: 44, scope: !12361)
!12381 = !DILocation(line: 7622, column: 23, scope: !12361)
!12382 = !DILocation(line: 7622, column: 8, scope: !12361)
!12383 = !DILocation(line: 7622, column: 21, scope: !12361)
!12384 = !DILocation(line: 7623, column: 8, scope: !12361)
!12385 = !DILocation(line: 7623, column: 24, scope: !12361)
!12386 = !DILocation(line: 7624, column: 8, scope: !12361)
!12387 = !DILocation(line: 7624, column: 19, scope: !12361)
!12388 = !{!897, !710, i64 160}
!12389 = !DILocation(line: 7625, column: 19, scope: !12376)
!12390 = !DILocation(line: 7625, column: 5, scope: !12377)
!12391 = !DILocation(line: 7627, column: 12, scope: !12375)
!12392 = !DILocation(line: 7627, column: 30, scope: !12375)
!12393 = !DILocation(line: 7627, column: 9, scope: !12375)
!12394 = !DILocation(line: 7627, column: 28, scope: !12375)
!12395 = !DILocation(line: 7628, column: 22, scope: !12375)
!12396 = !DILocation(line: 7628, column: 9, scope: !12375)
!12397 = !DILocation(line: 7631, column: 26, scope: !12375)
!12398 = !DILocation(line: 7631, column: 30, scope: !12375)
!12399 = !DILocation(line: 7631, column: 43, scope: !12375)
!12400 = !DILocation(line: 7631, column: 14, scope: !12375)
!12401 = !DILocation(line: 7632, column: 16, scope: !12374)
!12402 = !DILocation(line: 7632, column: 13, scope: !12375)
!12403 = !DILocation(line: 7636, column: 17, scope: !12373)
!12404 = !DILocation(line: 7637, column: 33, scope: !12373)
!12405 = !DILocation(line: 7637, column: 37, scope: !12373)
!12406 = !DILocation(line: 7637, column: 50, scope: !12373)
!12407 = !DILocation(line: 7637, column: 58, scope: !12373)
!12408 = !DILocation(line: 7637, column: 22, scope: !12373)
!12409 = !DILocation(line: 0, scope: !12373)
!12410 = !DILocation(line: 7638, column: 26, scope: !12373)
!12411 = !DILocation(line: 7638, column: 13, scope: !12373)
!12412 = !DILocation(line: 7639, column: 13, scope: !12373)
!12413 = !DILocation(line: 7641, column: 17, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 7640, column: 16)
!12415 = !DILocation(line: 0, scope: !12374)
!12416 = !DILocation(line: 7643, column: 9, scope: !12375)
!12417 = !DILocation(line: 7625, column: 31, scope: !12376)
!12418 = distinct !{!12418, !12390, !12419}
!12419 = !DILocation(line: 7644, column: 5, scope: !12377)
!12420 = !DILocation(line: 7646, column: 8, scope: !12361)
!12421 = !DILocation(line: 7646, column: 14, scope: !12361)
!12422 = !DILocation(line: 7647, column: 33, scope: !12361)
!12423 = !DILocation(line: 7648, column: 1, scope: !12361)
!12424 = distinct !DISubprogram(name: "addReplyUlong", scope: !3, file: !3, line: 2801, type: !12425, scopeLine: 2801, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12427)
!12425 = !DISubroutineType(types: !12426)
!12426 = !{null, !287, !55}
!12427 = !{!12428, !12429, !12430, !12431}
!12428 = !DILocalVariable(name: "c", arg: 1, scope: !12424, file: !3, line: 2801, type: !287)
!12429 = !DILocalVariable(name: "ul", arg: 2, scope: !12424, file: !3, line: 2801, type: !55)
!12430 = !DILocalVariable(name: "buf", scope: !12424, file: !3, line: 2802, type: !1247)
!12431 = !DILocalVariable(name: "len", scope: !12424, file: !3, line: 2803, type: !196)
!12432 = !DILocation(line: 0, scope: !12424)
!12433 = !DILocation(line: 2802, column: 5, scope: !12424)
!12434 = !DILocation(line: 2802, column: 10, scope: !12424)
!12435 = !DILocation(line: 2805, column: 9, scope: !12424)
!12436 = !DILocation(line: 2806, column: 27, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 2805, column: 18)
!12438 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 2805, column: 9)
!12439 = !DILocation(line: 2806, column: 9, scope: !12437)
!12440 = !DILocation(line: 2807, column: 9, scope: !12437)
!12441 = !DILocation(line: 2809, column: 27, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12443, file: !3, line: 2808, column: 25)
!12443 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 2808, column: 16)
!12444 = !DILocation(line: 2809, column: 9, scope: !12442)
!12445 = !DILocation(line: 2810, column: 9, scope: !12442)
!12446 = !DILocation(line: 2812, column: 11, scope: !12424)
!12447 = !DILocation(line: 2813, column: 19, scope: !12424)
!12448 = !DILocation(line: 2813, column: 5, scope: !12424)
!12449 = !DILocation(line: 2814, column: 1, scope: !12424)
!12450 = !DISubprogram(name: "listIndex", scope: !60, file: !60, line: 83, type: !12451, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!12451 = !DISubroutineType(types: !12452)
!12452 = !{!64, !58, !45}
!12453 = distinct !DISubprogram(name: "htNeedsResize", scope: !3, file: !3, line: 1279, type: !12454, scopeLine: 1279, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!45, !86}
!12456 = !{!12457, !12458, !12459}
!12457 = !DILocalVariable(name: "dict", arg: 1, scope: !12453, file: !3, line: 1279, type: !86)
!12458 = !DILocalVariable(name: "size", scope: !12453, file: !3, line: 1280, type: !54)
!12459 = !DILocalVariable(name: "used", scope: !12453, file: !3, line: 1280, type: !54)
!12460 = !DILocation(line: 0, scope: !12453)
!12461 = !DILocation(line: 1282, column: 12, scope: !12453)
!12462 = !DILocation(line: 1283, column: 12, scope: !12453)
!12463 = !DILocation(line: 1284, column: 18, scope: !12453)
!12464 = !DILocation(line: 1285, column: 18, scope: !12453)
!12465 = !DILocation(line: 1285, column: 22, scope: !12453)
!12466 = !DILocation(line: 1285, column: 28, scope: !12453)
!12467 = !DILocation(line: 1284, column: 5, scope: !12453)
!12468 = !DISubprogram(name: "dictResize", scope: !88, file: !88, line: 133, type: !12454, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!12469 = distinct !DISubprogram(name: "sinterGenericCommand", scope: !3, file: !3, line: 5213, type: !12470, scopeLine: 5213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12472)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{null, !287, !305, !55, !145}
!12472 = !{!12473, !12474, !12475, !12476, !12477, !12479, !12480, !12481, !12482, !12483, !12484, !12485, !12489}
!12473 = !DILocalVariable(name: "c", arg: 1, scope: !12469, file: !3, line: 5213, type: !287)
!12474 = !DILocalVariable(name: "setskeys", arg: 2, scope: !12469, file: !3, line: 5213, type: !305)
!12475 = !DILocalVariable(name: "setsnum", arg: 3, scope: !12469, file: !3, line: 5213, type: !55)
!12476 = !DILocalVariable(name: "dstkey", arg: 4, scope: !12469, file: !3, line: 5213, type: !145)
!12477 = !DILocalVariable(name: "dv", scope: !12469, file: !3, line: 5214, type: !12478)
!12478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!12479 = !DILocalVariable(name: "di", scope: !12469, file: !3, line: 5215, type: !2938)
!12480 = !DILocalVariable(name: "de", scope: !12469, file: !3, line: 5216, type: !124)
!12481 = !DILocalVariable(name: "lenobj", scope: !12469, file: !3, line: 5217, type: !145)
!12482 = !DILocalVariable(name: "dstset", scope: !12469, file: !3, line: 5217, type: !145)
!12483 = !DILocalVariable(name: "j", scope: !12469, file: !3, line: 5218, type: !55)
!12484 = !DILocalVariable(name: "cardinality", scope: !12469, file: !3, line: 5218, type: !55)
!12485 = !DILocalVariable(name: "setobj", scope: !12486, file: !3, line: 5221, type: !145)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !3, line: 5220, column: 35)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 5220, column: 5)
!12488 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 5220, column: 5)
!12489 = !DILocalVariable(name: "ele", scope: !12490, file: !3, line: 5269, type: !145)
!12490 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 5268, column: 40)
!12491 = !DILocation(line: 0, scope: !12469)
!12492 = !DILocation(line: 5214, column: 38, scope: !12469)
!12493 = !DILocation(line: 5214, column: 17, scope: !12469)
!12494 = !DILocation(line: 5220, column: 19, scope: !12487)
!12495 = !DILocation(line: 5220, column: 5, scope: !12488)
!12496 = !DILocation(line: 0, scope: !12486)
!12497 = !DILocation(line: 5223, column: 18, scope: !12486)
!12498 = !DILocation(line: 5225, column: 21, scope: !12486)
!12499 = !DILocation(line: 5226, column: 14, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 5226, column: 13)
!12501 = !DILocation(line: 5226, column: 13, scope: !12486)
!12502 = !DILocation(line: 5224, column: 21, scope: !12486)
!12503 = !DILocation(line: 5227, column: 13, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 5226, column: 22)
!12505 = !DILocation(line: 5229, column: 34, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !3, line: 5229, column: 21)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 5228, column: 25)
!12508 = distinct !DILexicalBlock(scope: !12504, file: !3, line: 5228, column: 17)
!12509 = !DILocation(line: 5229, column: 21, scope: !12506)
!12510 = !DILocation(line: 5229, column: 21, scope: !12507)
!12511 = !DILocation(line: 5230, column: 33, scope: !12506)
!12512 = !DILocation(line: 5230, column: 21, scope: !12506)
!12513 = !DILocation(line: 5231, column: 35, scope: !12507)
!12514 = !DILocation(line: 5231, column: 17, scope: !12507)
!12515 = !DILocation(line: 5232, column: 13, scope: !12507)
!12516 = !DILocation(line: 5233, column: 35, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 5232, column: 20)
!12518 = !DILocation(line: 5233, column: 17, scope: !12517)
!12519 = !DILocation(line: 5237, column: 21, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 5237, column: 13)
!12521 = !DILocation(line: 5237, column: 26, scope: !12520)
!12522 = !DILocation(line: 5237, column: 13, scope: !12486)
!12523 = !DILocation(line: 5238, column: 13, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 5237, column: 40)
!12525 = !DILocation(line: 5239, column: 31, scope: !12524)
!12526 = !DILocation(line: 5239, column: 13, scope: !12524)
!12527 = !DILocation(line: 5240, column: 13, scope: !12524)
!12528 = !DILocation(line: 5242, column: 25, scope: !12486)
!12529 = !DILocation(line: 5242, column: 9, scope: !12486)
!12530 = !DILocation(line: 5242, column: 15, scope: !12486)
!12531 = !DILocation(line: 5220, column: 31, scope: !12487)
!12532 = distinct !{!12532, !12495, !12533}
!12533 = !DILocation(line: 5243, column: 5, scope: !12488)
!12534 = !DILocation(line: 5246, column: 5, scope: !12469)
!12535 = !DILocation(line: 5253, column: 10, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 5253, column: 9)
!12537 = !DILocation(line: 5253, column: 9, scope: !12469)
!12538 = !DILocation(line: 5254, column: 18, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12536, file: !3, line: 5253, column: 18)
!12540 = !DILocation(line: 5255, column: 9, scope: !12539)
!12541 = !DILocation(line: 5256, column: 22, scope: !12539)
!12542 = !DILocation(line: 5256, column: 9, scope: !12539)
!12543 = !DILocation(line: 5257, column: 5, scope: !12539)
!12544 = !DILocation(line: 5260, column: 18, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12536, file: !3, line: 5257, column: 12)
!12546 = !DILocation(line: 5266, column: 26, scope: !12469)
!12547 = !DILocation(line: 5266, column: 10, scope: !12469)
!12548 = !DILocation(line: 5268, column: 17, scope: !12469)
!12549 = !DILocation(line: 5268, column: 31, scope: !12469)
!12550 = !DILocation(line: 5268, column: 5, scope: !12469)
!12551 = !DILocation(line: 5271, column: 9, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 5271, column: 9)
!12553 = !DILocation(line: 5272, column: 26, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 5272, column: 17)
!12555 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 5271, column: 9)
!12556 = !DILocation(line: 5272, column: 32, scope: !12554)
!12557 = !DILocation(line: 5272, column: 17, scope: !12554)
!12558 = !DILocation(line: 5272, column: 53, scope: !12554)
!12559 = !DILocation(line: 5272, column: 17, scope: !12555)
!12560 = !DILocation(line: 5271, column: 35, scope: !12555)
!12561 = !DILocation(line: 5271, column: 23, scope: !12555)
!12562 = distinct !{!12562, !12551, !12563}
!12563 = !DILocation(line: 5272, column: 62, scope: !12552)
!12564 = !DILocation(line: 0, scope: !12552)
!12565 = !DILocation(line: 5273, column: 15, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 5273, column: 13)
!12567 = !DILocation(line: 5273, column: 13, scope: !12490)
!12568 = distinct !{!12568, !12550, !12569}
!12569 = !DILocation(line: 5283, column: 5, scope: !12469)
!12570 = !DILocation(line: 5275, column: 15, scope: !12490)
!12571 = !DILocation(line: 0, scope: !12490)
!12572 = !DILocation(line: 5276, column: 13, scope: !12490)
!12573 = !DILocation(line: 5277, column: 13, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 5276, column: 22)
!12575 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 5276, column: 13)
!12576 = !DILocation(line: 5278, column: 24, scope: !12574)
!12577 = !DILocation(line: 5279, column: 9, scope: !12574)
!12578 = !DILocation(line: 5280, column: 29, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 5279, column: 16)
!12580 = !DILocation(line: 5280, column: 13, scope: !12579)
!12581 = !DILocation(line: 5281, column: 13, scope: !12579)
!12582 = !DILocation(line: 5218, column: 22, scope: !12469)
!12583 = !DILocation(line: 5284, column: 5, scope: !12469)
!12584 = !DILocation(line: 5286, column: 9, scope: !12469)
!12585 = !DILocation(line: 5289, column: 22, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 5286, column: 17)
!12587 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 5286, column: 9)
!12588 = !DILocation(line: 5289, column: 9, scope: !12586)
!12589 = !DILocation(line: 5290, column: 13, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 5290, column: 13)
!12591 = !DILocation(line: 5290, column: 42, scope: !12590)
!12592 = !DILocation(line: 5290, column: 13, scope: !12586)
!12593 = !DILocation(line: 5291, column: 24, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 5290, column: 47)
!12595 = !DILocation(line: 5291, column: 28, scope: !12594)
!12596 = !DILocation(line: 5291, column: 33, scope: !12594)
!12597 = !DILocation(line: 5291, column: 40, scope: !12594)
!12598 = !DILocation(line: 5291, column: 13, scope: !12594)
!12599 = !DILocation(line: 5292, column: 13, scope: !12594)
!12600 = !DILocation(line: 5293, column: 32, scope: !12594)
!12601 = !DILocation(line: 5293, column: 13, scope: !12594)
!12602 = !DILocation(line: 5294, column: 9, scope: !12594)
!12603 = !DILocation(line: 5295, column: 26, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 5294, column: 16)
!12605 = !DILocation(line: 5295, column: 13, scope: !12604)
!12606 = !DILocation(line: 5296, column: 31, scope: !12604)
!12607 = !DILocation(line: 5296, column: 13, scope: !12604)
!12608 = !DILocation(line: 5298, column: 21, scope: !12586)
!12609 = !DILocation(line: 5299, column: 5, scope: !12586)
!12610 = !DILocation(line: 5300, column: 36, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 5299, column: 12)
!12612 = !DILocation(line: 5300, column: 23, scope: !12611)
!12613 = !DILocation(line: 5300, column: 17, scope: !12611)
!12614 = !DILocation(line: 5300, column: 21, scope: !12611)
!12615 = !DILocation(line: 5302, column: 5, scope: !12469)
!12616 = !DILocation(line: 5303, column: 1, scope: !12469)
!12617 = !DISubprogram(name: "qsort", scope: !1432, file: !1432, line: 830, type: !12618, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!12618 = !DISubroutineType(types: !12619)
!12619 = !{null, !46, !196, !196, !12620}
!12620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1432, line: 808, baseType: !12621)
!12621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12622, size: 64)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!45, !100, !100}
!12624 = distinct !DISubprogram(name: "qsortCompareSetsByCardinality", scope: !3, file: !3, line: 5207, type: !12622, scopeLine: 5207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12625)
!12625 = !{!12626, !12627, !12628, !12629}
!12626 = !DILocalVariable(name: "s1", arg: 1, scope: !12624, file: !3, line: 5207, type: !100)
!12627 = !DILocalVariable(name: "s2", arg: 2, scope: !12624, file: !3, line: 5207, type: !100)
!12628 = !DILocalVariable(name: "d1", scope: !12624, file: !3, line: 5208, type: !12478)
!12629 = !DILocalVariable(name: "d2", scope: !12624, file: !3, line: 5208, type: !12478)
!12630 = !DILocation(line: 0, scope: !12624)
!12631 = !DILocation(line: 5208, column: 17, scope: !12624)
!12632 = !DILocation(line: 5208, column: 36, scope: !12624)
!12633 = !DILocation(line: 5210, column: 12, scope: !12624)
!12634 = !DILocation(line: 5210, column: 26, scope: !12624)
!12635 = !DILocation(line: 5210, column: 25, scope: !12624)
!12636 = !DILocation(line: 5210, column: 5, scope: !12624)
!12637 = distinct !DISubprogram(name: "sunionDiffGenericCommand", scope: !3, file: !3, line: 5317, type: !12638, scopeLine: 5317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12640)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{null, !287, !305, !45, !145, !45}
!12640 = !{!12641, !12642, !12643, !12644, !12645, !12646, !12647, !12648, !12649, !12650, !12651, !12652, !12656, !12661}
!12641 = !DILocalVariable(name: "c", arg: 1, scope: !12637, file: !3, line: 5317, type: !287)
!12642 = !DILocalVariable(name: "setskeys", arg: 2, scope: !12637, file: !3, line: 5317, type: !305)
!12643 = !DILocalVariable(name: "setsnum", arg: 3, scope: !12637, file: !3, line: 5317, type: !45)
!12644 = !DILocalVariable(name: "dstkey", arg: 4, scope: !12637, file: !3, line: 5317, type: !145)
!12645 = !DILocalVariable(name: "op", arg: 5, scope: !12637, file: !3, line: 5317, type: !45)
!12646 = !DILocalVariable(name: "dv", scope: !12637, file: !3, line: 5318, type: !12478)
!12647 = !DILocalVariable(name: "di", scope: !12637, file: !3, line: 5319, type: !2938)
!12648 = !DILocalVariable(name: "de", scope: !12637, file: !3, line: 5320, type: !124)
!12649 = !DILocalVariable(name: "dstset", scope: !12637, file: !3, line: 5321, type: !145)
!12650 = !DILocalVariable(name: "j", scope: !12637, file: !3, line: 5322, type: !45)
!12651 = !DILocalVariable(name: "cardinality", scope: !12637, file: !3, line: 5322, type: !45)
!12652 = !DILocalVariable(name: "setobj", scope: !12653, file: !3, line: 5325, type: !145)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 5324, column: 35)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 5324, column: 5)
!12655 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 5324, column: 5)
!12656 = !DILocalVariable(name: "ele", scope: !12657, file: !3, line: 5356, type: !145)
!12657 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5355, column: 44)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5349, column: 35)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !3, line: 5349, column: 5)
!12660 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 5349, column: 5)
!12661 = !DILocalVariable(name: "ele", scope: !12662, file: !3, line: 5382, type: !145)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !3, line: 5381, column: 44)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 5378, column: 18)
!12664 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 5378, column: 9)
!12665 = !DILocation(line: 0, scope: !12637)
!12666 = !DILocation(line: 5318, column: 39, scope: !12637)
!12667 = !DILocation(line: 5318, column: 38, scope: !12637)
!12668 = !DILocation(line: 5318, column: 17, scope: !12637)
!12669 = !DILocation(line: 5324, column: 19, scope: !12654)
!12670 = !DILocation(line: 5324, column: 5, scope: !12655)
!12671 = !DILocation(line: 5345, column: 14, scope: !12637)
!12672 = !DILocation(line: 5349, column: 5, scope: !12660)
!12673 = !DILocation(line: 0, scope: !12653)
!12674 = !DILocation(line: 5327, column: 18, scope: !12653)
!12675 = !DILocation(line: 5328, column: 21, scope: !12653)
!12676 = !DILocation(line: 5329, column: 21, scope: !12653)
!12677 = !DILocation(line: 5330, column: 14, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 5330, column: 13)
!12679 = !DILocation(line: 5330, column: 13, scope: !12653)
!12680 = !DILocation(line: 5334, column: 21, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 5334, column: 13)
!12682 = !DILocation(line: 5334, column: 26, scope: !12681)
!12683 = !DILocation(line: 5334, column: 13, scope: !12653)
!12684 = !DILocation(line: 5339, column: 25, scope: !12653)
!12685 = !DILocation(line: 5340, column: 5, scope: !12654)
!12686 = !DILocation(line: 5335, column: 13, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 5334, column: 40)
!12688 = !DILocation(line: 5336, column: 31, scope: !12687)
!12689 = !DILocation(line: 5336, column: 13, scope: !12687)
!12690 = !DILocation(line: 5324, column: 31, scope: !12654)
!12691 = distinct !{!12691, !12670, !12692}
!12692 = !DILocation(line: 5340, column: 5, scope: !12655)
!12693 = !DILocation(line: 5349, column: 19, scope: !12659)
!12694 = !DILocation(line: 5350, column: 33, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5350, column: 13)
!12696 = !DILocation(line: 5350, column: 47, scope: !12695)
!12697 = !DILocation(line: 5350, column: 13, scope: !12658)
!12698 = !DILocation(line: 5351, column: 14, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5351, column: 13)
!12700 = !DILocation(line: 5351, column: 13, scope: !12658)
!12701 = !DILocation(line: 5353, column: 14, scope: !12658)
!12702 = !DILocation(line: 5355, column: 21, scope: !12658)
!12703 = !DILocation(line: 5355, column: 35, scope: !12658)
!12704 = !DILocation(line: 5355, column: 9, scope: !12658)
!12705 = !DILocation(line: 5359, column: 19, scope: !12657)
!12706 = !DILocation(line: 0, scope: !12657)
!12707 = !DILocation(line: 5360, column: 38, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 5360, column: 17)
!12709 = !DILocation(line: 5361, column: 37, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 5361, column: 21)
!12711 = distinct !DILexicalBlock(scope: !12708, file: !3, line: 5360, column: 49)
!12712 = !DILocation(line: 5361, column: 21, scope: !12710)
!12713 = !DILocation(line: 5361, column: 51, scope: !12710)
!12714 = !DILocation(line: 5361, column: 21, scope: !12711)
!12715 = !DILocation(line: 5362, column: 21, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 5361, column: 63)
!12717 = !DILocation(line: 5363, column: 32, scope: !12716)
!12718 = !DILocation(line: 5364, column: 17, scope: !12716)
!12719 = !DILocation(line: 5365, column: 24, scope: !12708)
!12720 = !DILocation(line: 5366, column: 40, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 5366, column: 21)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 5365, column: 45)
!12723 = distinct !DILexicalBlock(scope: !12708, file: !3, line: 5365, column: 24)
!12724 = !DILocation(line: 5366, column: 21, scope: !12721)
!12725 = !DILocation(line: 5366, column: 49, scope: !12721)
!12726 = !DILocation(line: 5366, column: 21, scope: !12722)
!12727 = distinct !{!12727, !12704, !12728}
!12728 = !DILocation(line: 5370, column: 9, scope: !12658)
!12729 = !DILocation(line: 5371, column: 9, scope: !12658)
!12730 = !DILocation(line: 5374, column: 33, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5374, column: 13)
!12732 = !DILocation(line: 5322, column: 12, scope: !12637)
!12733 = !DILocation(line: 5349, column: 31, scope: !12659)
!12734 = distinct !{!12734, !12672, !12735}
!12735 = !DILocation(line: 5375, column: 5, scope: !12660)
!12736 = !DILocation(line: 5378, column: 10, scope: !12664)
!12737 = !DILocation(line: 5378, column: 9, scope: !12637)
!12738 = !DILocation(line: 5379, column: 36, scope: !12663)
!12739 = !DILocation(line: 5379, column: 23, scope: !12663)
!12740 = !DILocation(line: 5379, column: 9, scope: !12663)
!12741 = !DILocation(line: 5380, column: 38, scope: !12663)
!12742 = !DILocation(line: 5380, column: 14, scope: !12663)
!12743 = !DILocation(line: 5381, column: 21, scope: !12663)
!12744 = !DILocation(line: 5381, column: 35, scope: !12663)
!12745 = !DILocation(line: 5381, column: 9, scope: !12663)
!12746 = !DILocation(line: 5384, column: 19, scope: !12662)
!12747 = !DILocation(line: 0, scope: !12662)
!12748 = !DILocation(line: 5385, column: 13, scope: !12662)
!12749 = distinct !{!12749, !12745, !12750}
!12750 = !DILocation(line: 5386, column: 9, scope: !12663)
!12751 = !DILocation(line: 5387, column: 9, scope: !12663)
!12752 = !DILocation(line: 5388, column: 22, scope: !12663)
!12753 = !DILocation(line: 5388, column: 9, scope: !12663)
!12754 = !DILocation(line: 5389, column: 5, scope: !12663)
!12755 = !DILocation(line: 5392, column: 22, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 5389, column: 12)
!12757 = !DILocation(line: 5392, column: 9, scope: !12756)
!12758 = !DILocation(line: 5393, column: 13, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12756, file: !3, line: 5393, column: 13)
!12760 = !DILocation(line: 5393, column: 42, scope: !12759)
!12761 = !DILocation(line: 5393, column: 13, scope: !12756)
!12762 = !DILocation(line: 5394, column: 24, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 5393, column: 47)
!12764 = !DILocation(line: 5394, column: 28, scope: !12763)
!12765 = !DILocation(line: 5394, column: 33, scope: !12763)
!12766 = !DILocation(line: 5394, column: 40, scope: !12763)
!12767 = !DILocation(line: 5394, column: 13, scope: !12763)
!12768 = !DILocation(line: 5395, column: 13, scope: !12763)
!12769 = !DILocation(line: 5396, column: 32, scope: !12763)
!12770 = !DILocation(line: 5396, column: 13, scope: !12763)
!12771 = !DILocation(line: 5397, column: 9, scope: !12763)
!12772 = !DILocation(line: 5398, column: 26, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 5397, column: 16)
!12774 = !DILocation(line: 5398, column: 13, scope: !12773)
!12775 = !DILocation(line: 5399, column: 31, scope: !12773)
!12776 = !DILocation(line: 5399, column: 13, scope: !12773)
!12777 = !DILocation(line: 5401, column: 21, scope: !12756)
!12778 = !DILocation(line: 5403, column: 5, scope: !12637)
!12779 = !DILocation(line: 5404, column: 1, scope: !12637)
!12780 = distinct !DISubprogram(name: "getDoubleFromObjectOrReply", scope: !3, file: !3, line: 3304, type: !12781, scopeLine: 3304, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12783)
!12781 = !DISubroutineType(types: !12782)
!12782 = !{!45, !287, !145, !198, !741}
!12783 = !{!12784, !12785, !12786, !12787, !12788}
!12784 = !DILocalVariable(name: "c", arg: 1, scope: !12780, file: !3, line: 3304, type: !287)
!12785 = !DILocalVariable(name: "o", arg: 2, scope: !12780, file: !3, line: 3304, type: !145)
!12786 = !DILocalVariable(name: "target", arg: 3, scope: !12780, file: !3, line: 3304, type: !198)
!12787 = !DILocalVariable(name: "msg", arg: 4, scope: !12780, file: !3, line: 3304, type: !741)
!12788 = !DILocalVariable(name: "value", scope: !12780, file: !3, line: 3305, type: !168)
!12789 = !DILocation(line: 0, scope: !12780)
!12790 = !DILocation(line: 3305, column: 5, scope: !12780)
!12791 = !DILocation(line: 3306, column: 9, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12780, file: !3, line: 3306, column: 9)
!12793 = !DILocation(line: 3306, column: 40, scope: !12792)
!12794 = !DILocation(line: 3306, column: 9, scope: !12780)
!12795 = !DILocation(line: 3307, column: 17, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 3307, column: 13)
!12797 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 3306, column: 53)
!12798 = !DILocation(line: 3307, column: 13, scope: !12797)
!12799 = !DILocation(line: 3308, column: 41, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 3307, column: 26)
!12801 = !DILocation(line: 3308, column: 28, scope: !12800)
!12802 = !DILocation(line: 3308, column: 13, scope: !12800)
!12803 = !DILocation(line: 3309, column: 9, scope: !12800)
!12804 = !DILocation(line: 3310, column: 28, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 3309, column: 16)
!12806 = !DILocation(line: 3310, column: 13, scope: !12805)
!12807 = !DILocation(line: 3315, column: 15, scope: !12780)
!12808 = !DILocation(line: 3315, column: 13, scope: !12780)
!12809 = !DILocation(line: 3316, column: 5, scope: !12780)
!12810 = !DILocation(line: 3317, column: 1, scope: !12780)
!12811 = distinct !DISubprogram(name: "zaddGenericCommand", scope: !3, file: !3, line: 5738, type: !12812, scopeLine: 5738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12814)
!12812 = !DISubroutineType(types: !12813)
!12813 = !{null, !287, !145, !145, !168, !45}
!12814 = !{!12815, !12816, !12817, !12818, !12819, !12820, !12821, !12822, !12823, !12826, !12829, !12832, !12833}
!12815 = !DILocalVariable(name: "c", arg: 1, scope: !12811, file: !3, line: 5738, type: !287)
!12816 = !DILocalVariable(name: "key", arg: 2, scope: !12811, file: !3, line: 5738, type: !145)
!12817 = !DILocalVariable(name: "ele", arg: 3, scope: !12811, file: !3, line: 5738, type: !145)
!12818 = !DILocalVariable(name: "scoreval", arg: 4, scope: !12811, file: !3, line: 5738, type: !168)
!12819 = !DILocalVariable(name: "doincrement", arg: 5, scope: !12811, file: !3, line: 5738, type: !45)
!12820 = !DILocalVariable(name: "zsetobj", scope: !12811, file: !3, line: 5739, type: !145)
!12821 = !DILocalVariable(name: "zs", scope: !12811, file: !3, line: 5740, type: !171)
!12822 = !DILocalVariable(name: "score", scope: !12811, file: !3, line: 5741, type: !198)
!12823 = !DILocalVariable(name: "de", scope: !12824, file: !3, line: 5761, type: !124)
!12824 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 5760, column: 22)
!12825 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 5760, column: 9)
!12826 = !DILocalVariable(name: "oldscore", scope: !12827, file: !3, line: 5766, type: !198)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 5765, column: 17)
!12828 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 5765, column: 13)
!12829 = !DILocalVariable(name: "de", scope: !12830, file: !3, line: 5797, type: !124)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 5796, column: 12)
!12831 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 5786, column: 9)
!12832 = !DILocalVariable(name: "oldscore", scope: !12830, file: !3, line: 5798, type: !198)
!12833 = !DILocalVariable(name: "deleted", scope: !12834, file: !3, line: 5805, type: !45)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 5804, column: 34)
!12835 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 5804, column: 13)
!12836 = !DILocation(line: 0, scope: !12811)
!12837 = !DILocation(line: 5743, column: 33, scope: !12811)
!12838 = !DILocation(line: 5743, column: 15, scope: !12811)
!12839 = !DILocation(line: 5744, column: 17, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 5744, column: 9)
!12841 = !DILocation(line: 5744, column: 9, scope: !12811)
!12842 = !DILocation(line: 5745, column: 19, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 5744, column: 26)
!12844 = !DILocation(line: 5746, column: 20, scope: !12843)
!12845 = !DILocation(line: 5746, column: 24, scope: !12843)
!12846 = !DILocation(line: 5746, column: 29, scope: !12843)
!12847 = !DILocation(line: 5746, column: 33, scope: !12843)
!12848 = !DILocation(line: 5746, column: 9, scope: !12843)
!12849 = !DILocation(line: 5747, column: 9, scope: !12843)
!12850 = !DILocation(line: 5748, column: 5, scope: !12843)
!12851 = !DILocation(line: 5749, column: 22, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 5749, column: 13)
!12853 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 5748, column: 12)
!12854 = !DILocation(line: 5749, column: 27, scope: !12852)
!12855 = !DILocation(line: 5749, column: 13, scope: !12853)
!12856 = !DILocation(line: 5750, column: 31, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 5749, column: 42)
!12858 = !DILocation(line: 5750, column: 13, scope: !12857)
!12859 = !DILocation(line: 5751, column: 13, scope: !12857)
!12860 = !DILocation(line: 5754, column: 19, scope: !12811)
!12861 = !DILocation(line: 5759, column: 13, scope: !12811)
!12862 = !DILocation(line: 5760, column: 9, scope: !12825)
!12863 = !DILocation(line: 5760, column: 9, scope: !12811)
!12864 = !DILocation(line: 5764, column: 27, scope: !12824)
!12865 = !DILocation(line: 5764, column: 32, scope: !12824)
!12866 = !DILocation(line: 5764, column: 14, scope: !12824)
!12867 = !DILocation(line: 0, scope: !12824)
!12868 = !DILocation(line: 5765, column: 13, scope: !12828)
!12869 = !DILocation(line: 5765, column: 13, scope: !12824)
!12870 = !DILocation(line: 5766, column: 32, scope: !12827)
!12871 = !DILocation(line: 0, scope: !12827)
!12872 = !DILocation(line: 5767, column: 22, scope: !12827)
!12873 = !DILocation(line: 5767, column: 32, scope: !12827)
!12874 = !DILocation(line: 5768, column: 9, scope: !12827)
!12875 = !DILocation(line: 0, scope: !12828)
!12876 = !DILocation(line: 5771, column: 13, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 5771, column: 13)
!12878 = !DILocation(line: 5771, column: 13, scope: !12824)
!12879 = !DILocation(line: 5773, column: 17, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12877, file: !3, line: 5771, column: 28)
!12881 = !DILocation(line: 5772, column: 13, scope: !12880)
!12882 = !DILocation(line: 5774, column: 13, scope: !12880)
!12883 = !DILocation(line: 5781, column: 16, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 5780, column: 12)
!12885 = !DILocation(line: 5786, column: 26, scope: !12831)
!12886 = !DILocation(line: 5786, column: 21, scope: !12831)
!12887 = !DILocation(line: 5786, column: 9, scope: !12831)
!12888 = !DILocation(line: 5786, column: 37, scope: !12831)
!12889 = !DILocation(line: 5786, column: 9, scope: !12811)
!12890 = !DILocation(line: 5788, column: 9, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 5786, column: 49)
!12892 = !DILocation(line: 5789, column: 23, scope: !12891)
!12893 = !DILocation(line: 5789, column: 27, scope: !12891)
!12894 = !DILocation(line: 5789, column: 9, scope: !12891)
!12895 = !DILocation(line: 5790, column: 9, scope: !12891)
!12896 = !DILocation(line: 5791, column: 21, scope: !12891)
!12897 = !DILocation(line: 5792, column: 13, scope: !12891)
!12898 = !DILocation(line: 5793, column: 30, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12891, file: !3, line: 5792, column: 13)
!12900 = !DILocation(line: 5793, column: 13, scope: !12899)
!12901 = !DILocation(line: 5795, column: 31, scope: !12899)
!12902 = !DILocation(line: 5795, column: 13, scope: !12899)
!12903 = !DILocation(line: 5801, column: 27, scope: !12830)
!12904 = !DILocation(line: 5801, column: 14, scope: !12830)
!12905 = !DILocation(line: 0, scope: !12830)
!12906 = !DILocation(line: 5802, column: 9, scope: !12830)
!12907 = !DILocation(line: 5803, column: 20, scope: !12830)
!12908 = !DILocation(line: 5804, column: 13, scope: !12835)
!12909 = !DILocation(line: 5804, column: 23, scope: !12835)
!12910 = !DILocation(line: 5804, column: 20, scope: !12835)
!12911 = !DILocation(line: 5804, column: 13, scope: !12830)
!12912 = !DILocation(line: 5808, column: 37, scope: !12834)
!12913 = !DILocation(line: 5808, column: 23, scope: !12834)
!12914 = !DILocation(line: 0, scope: !12834)
!12915 = !DILocation(line: 5809, column: 13, scope: !12834)
!12916 = !DILocation(line: 5810, column: 27, scope: !12834)
!12917 = !DILocation(line: 5810, column: 31, scope: !12834)
!12918 = !DILocation(line: 5810, column: 13, scope: !12834)
!12919 = !DILocation(line: 5811, column: 13, scope: !12834)
!12920 = !DILocation(line: 5813, column: 29, scope: !12834)
!12921 = !DILocation(line: 5813, column: 13, scope: !12834)
!12922 = !DILocation(line: 5814, column: 25, scope: !12834)
!12923 = !DILocation(line: 5815, column: 9, scope: !12834)
!12924 = !DILocation(line: 5816, column: 13, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 5815, column: 16)
!12926 = !DILocation(line: 5818, column: 13, scope: !12830)
!12927 = !DILocation(line: 5819, column: 30, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 5818, column: 13)
!12929 = !DILocation(line: 5819, column: 13, scope: !12928)
!12930 = !DILocation(line: 5821, column: 31, scope: !12928)
!12931 = !DILocation(line: 5821, column: 13, scope: !12928)
!12932 = !DILocation(line: 5823, column: 1, scope: !12811)
!12933 = distinct !DISubprogram(name: "getDoubleFromObject", scope: !3, file: !3, line: 3282, type: !12934, scopeLine: 3282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12936)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{!45, !145, !198}
!12936 = !{!12937, !12938, !12939, !12940}
!12937 = !DILocalVariable(name: "o", arg: 1, scope: !12933, file: !3, line: 3282, type: !145)
!12938 = !DILocalVariable(name: "target", arg: 2, scope: !12933, file: !3, line: 3282, type: !198)
!12939 = !DILocalVariable(name: "value", scope: !12933, file: !3, line: 3283, type: !168)
!12940 = !DILocalVariable(name: "eptr", scope: !12933, file: !3, line: 3284, type: !47)
!12941 = !DILocation(line: 0, scope: !12933)
!12942 = !DILocation(line: 3284, column: 5, scope: !12933)
!12943 = !DILocation(line: 3286, column: 11, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 3286, column: 9)
!12945 = !DILocation(line: 3286, column: 9, scope: !12933)
!12946 = !DILocation(line: 3289, column: 9, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 3288, column: 12)
!12948 = !DILocation(line: 3290, column: 16, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 3290, column: 13)
!12950 = !DILocation(line: 3290, column: 13, scope: !12947)
!12951 = !DILocation(line: 3291, column: 31, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12949, file: !3, line: 3290, column: 48)
!12953 = !DILocation(line: 3291, column: 21, scope: !12952)
!12954 = !DILocation(line: 3292, column: 17, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 3292, column: 17)
!12956 = !DILocation(line: 3292, column: 25, scope: !12955)
!12957 = !DILocation(line: 3292, column: 33, scope: !12955)
!12958 = !DILocation(line: 3294, column: 30, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 3293, column: 55)
!12960 = distinct !DILexicalBlock(scope: !12949, file: !3, line: 3293, column: 20)
!12961 = !DILocation(line: 3294, column: 21, scope: !12959)
!12962 = !DILocation(line: 3296, column: 13, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 3295, column: 16)
!12964 = !DILocation(line: 0, scope: !12944)
!12965 = !DILocation(line: 3300, column: 13, scope: !12933)
!12966 = !DILocation(line: 3301, column: 5, scope: !12933)
!12967 = !DILocation(line: 3302, column: 1, scope: !12933)
!12968 = !DISubprogram(name: "strtod", scope: !1432, file: !1432, line: 117, type: !12969, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!168, !1076, !1476}
!12971 = distinct !DISubprogram(name: "addReplyDouble", scope: !3, file: !3, line: 2775, type: !12972, scopeLine: 2775, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12974)
!12972 = !DISubroutineType(types: !12973)
!12973 = !{null, !287, !168}
!12974 = !{!12975, !12976, !12977}
!12975 = !DILocalVariable(name: "c", arg: 1, scope: !12971, file: !3, line: 2775, type: !287)
!12976 = !DILocalVariable(name: "d", arg: 2, scope: !12971, file: !3, line: 2775, type: !168)
!12977 = !DILocalVariable(name: "buf", scope: !12971, file: !3, line: 2776, type: !1247)
!12978 = !DILocation(line: 0, scope: !12971)
!12979 = !DILocation(line: 2776, column: 5, scope: !12971)
!12980 = !DILocation(line: 2776, column: 10, scope: !12971)
!12981 = !DILocation(line: 2778, column: 5, scope: !12971)
!12982 = !DILocation(line: 2779, column: 32, scope: !12971)
!12983 = !DILocation(line: 2780, column: 25, scope: !12971)
!12984 = !DILocation(line: 2779, column: 19, scope: !12971)
!12985 = !DILocation(line: 2779, column: 5, scope: !12971)
!12986 = !DILocation(line: 2781, column: 1, scope: !12971)
!12987 = distinct !DISubprogram(name: "zslDelete", scope: !3, file: !3, line: 5585, type: !12988, scopeLine: 5585, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12990)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{!45, !177, !168, !145}
!12990 = !{!12991, !12992, !12993, !12994, !12995, !12996}
!12991 = !DILocalVariable(name: "zsl", arg: 1, scope: !12987, file: !3, line: 5585, type: !177)
!12992 = !DILocalVariable(name: "score", arg: 2, scope: !12987, file: !3, line: 5585, type: !168)
!12993 = !DILocalVariable(name: "obj", arg: 3, scope: !12987, file: !3, line: 5585, type: !145)
!12994 = !DILocalVariable(name: "update", scope: !12987, file: !3, line: 5586, type: !6364)
!12995 = !DILocalVariable(name: "x", scope: !12987, file: !3, line: 5586, type: !1121)
!12996 = !DILocalVariable(name: "i", scope: !12987, file: !3, line: 5587, type: !45)
!12997 = !DILocation(line: 0, scope: !12987)
!12998 = !DILocation(line: 5586, column: 5, scope: !12987)
!12999 = !DILocation(line: 5586, column: 20, scope: !12987)
!13000 = !DILocation(line: 5589, column: 14, scope: !12987)
!13001 = !DILocation(line: 5590, column: 19, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 5590, column: 5)
!13003 = !DILocation(line: 5590, column: 30, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 5590, column: 5)
!13005 = !DILocation(line: 5590, column: 5, scope: !13002)
!13006 = !DILocation(line: 0, scope: !13002)
!13007 = !DILocation(line: 5591, column: 19, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 5590, column: 41)
!13009 = !DILocation(line: 5591, column: 16, scope: !13008)
!13010 = !DILocation(line: 5591, column: 30, scope: !13008)
!13011 = !DILocation(line: 5592, column: 29, scope: !13008)
!13012 = !DILocation(line: 5592, column: 35, scope: !13008)
!13013 = !DILocation(line: 5592, column: 43, scope: !13008)
!13014 = !DILocation(line: 5593, column: 39, scope: !13008)
!13015 = !DILocation(line: 5593, column: 48, scope: !13008)
!13016 = !DILocation(line: 5594, column: 53, scope: !13008)
!13017 = !DILocation(line: 5594, column: 17, scope: !13008)
!13018 = !DILocation(line: 5594, column: 62, scope: !13008)
!13019 = !DILocation(line: 5591, column: 9, scope: !13008)
!13020 = !DILocation(line: 5595, column: 20, scope: !13008)
!13021 = !DILocation(line: 5595, column: 17, scope: !13008)
!13022 = distinct !{!13022, !13019, !13023}
!13023 = !DILocation(line: 5595, column: 29, scope: !13008)
!13024 = !DILocation(line: 5596, column: 9, scope: !13008)
!13025 = !DILocation(line: 5596, column: 19, scope: !13008)
!13026 = distinct !{!13026, !13005, !13027}
!13027 = !DILocation(line: 5597, column: 5, scope: !13002)
!13028 = !DILocation(line: 5589, column: 7, scope: !12987)
!13029 = !DILocation(line: 5600, column: 12, scope: !12987)
!13030 = !DILocation(line: 5600, column: 9, scope: !12987)
!13031 = !DILocation(line: 5601, column: 9, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 5601, column: 9)
!13033 = !DILocation(line: 5601, column: 11, scope: !13032)
!13034 = !DILocation(line: 5601, column: 26, scope: !13032)
!13035 = !DILocation(line: 5601, column: 20, scope: !13032)
!13036 = !DILocation(line: 5601, column: 32, scope: !13032)
!13037 = !DILocation(line: 5601, column: 57, scope: !13032)
!13038 = !DILocation(line: 5601, column: 35, scope: !13032)
!13039 = !DILocation(line: 5601, column: 9, scope: !12987)
!13040 = !DILocation(line: 5602, column: 31, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 5601, column: 67)
!13042 = !DILocation(line: 5602, column: 9, scope: !13041)
!13043 = !DILocation(line: 5603, column: 9, scope: !13041)
!13044 = !DILocation(line: 5604, column: 9, scope: !13041)
!13045 = !DILocation(line: 0, scope: !13032)
!13046 = !DILocation(line: 5609, column: 1, scope: !12987)
!13047 = distinct !DISubprogram(name: "zslFreeNode", scope: !3, file: !3, line: 5474, type: !13048, scopeLine: 5474, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13050)
!13048 = !DISubroutineType(types: !13049)
!13049 = !{null, !1121}
!13050 = !{!13051}
!13051 = !DILocalVariable(name: "node", arg: 1, scope: !13047, file: !3, line: 5474, type: !1121)
!13052 = !DILocation(line: 0, scope: !13047)
!13053 = !DILocation(line: 5475, column: 24, scope: !13047)
!13054 = !DILocation(line: 5475, column: 5, scope: !13047)
!13055 = !DILocation(line: 5476, column: 17, scope: !13047)
!13056 = !DILocation(line: 5476, column: 5, scope: !13047)
!13057 = !DILocation(line: 5477, column: 17, scope: !13047)
!13058 = !DILocation(line: 5477, column: 5, scope: !13047)
!13059 = !DILocation(line: 5478, column: 11, scope: !13047)
!13060 = !DILocation(line: 5478, column: 5, scope: !13047)
!13061 = !DILocation(line: 5479, column: 1, scope: !13047)
!13062 = distinct !DISubprogram(name: "zslDeleteRangeByScore", scope: !3, file: !3, line: 5615, type: !13063, scopeLine: 5615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!55, !177, !168, !168, !86}
!13065 = !{!13066, !13067, !13068, !13069, !13070, !13071, !13072, !13073, !13074}
!13066 = !DILocalVariable(name: "zsl", arg: 1, scope: !13062, file: !3, line: 5615, type: !177)
!13067 = !DILocalVariable(name: "min", arg: 2, scope: !13062, file: !3, line: 5615, type: !168)
!13068 = !DILocalVariable(name: "max", arg: 3, scope: !13062, file: !3, line: 5615, type: !168)
!13069 = !DILocalVariable(name: "dict", arg: 4, scope: !13062, file: !3, line: 5615, type: !86)
!13070 = !DILocalVariable(name: "update", scope: !13062, file: !3, line: 5616, type: !6364)
!13071 = !DILocalVariable(name: "x", scope: !13062, file: !3, line: 5616, type: !1121)
!13072 = !DILocalVariable(name: "removed", scope: !13062, file: !3, line: 5617, type: !55)
!13073 = !DILocalVariable(name: "i", scope: !13062, file: !3, line: 5618, type: !45)
!13074 = !DILocalVariable(name: "next", scope: !13075, file: !3, line: 5630, type: !1121)
!13075 = distinct !DILexicalBlock(scope: !13062, file: !3, line: 5629, column: 34)
!13076 = !DILocation(line: 0, scope: !13062)
!13077 = !DILocation(line: 5616, column: 5, scope: !13062)
!13078 = !DILocation(line: 5616, column: 20, scope: !13062)
!13079 = !DILocation(line: 5620, column: 14, scope: !13062)
!13080 = !DILocation(line: 5621, column: 19, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13062, file: !3, line: 5621, column: 5)
!13082 = !DILocation(line: 5621, column: 30, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 5621, column: 5)
!13084 = !DILocation(line: 5621, column: 5, scope: !13081)
!13085 = !DILocation(line: 0, scope: !13081)
!13086 = !DILocation(line: 5622, column: 9, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13083, file: !3, line: 5621, column: 41)
!13088 = !DILocation(line: 5622, column: 19, scope: !13087)
!13089 = !DILocation(line: 5622, column: 16, scope: !13087)
!13090 = !DILocation(line: 5622, column: 30, scope: !13087)
!13091 = !DILocation(line: 5622, column: 48, scope: !13087)
!13092 = !DILocation(line: 5622, column: 54, scope: !13087)
!13093 = distinct !{!13093, !13086, !13094}
!13094 = !DILocation(line: 5623, column: 29, scope: !13087)
!13095 = !DILocation(line: 5624, column: 9, scope: !13087)
!13096 = !DILocation(line: 5624, column: 19, scope: !13087)
!13097 = distinct !{!13097, !13084, !13098}
!13098 = !DILocation(line: 5625, column: 5, scope: !13081)
!13099 = !DILocation(line: 5620, column: 7, scope: !13062)
!13100 = !DILocation(line: 5628, column: 12, scope: !13062)
!13101 = !DILocation(line: 5628, column: 9, scope: !13062)
!13102 = !DILocation(line: 5629, column: 12, scope: !13062)
!13103 = !DILocation(line: 5629, column: 14, scope: !13062)
!13104 = !DILocation(line: 5629, column: 20, scope: !13062)
!13105 = !DILocation(line: 5629, column: 26, scope: !13062)
!13106 = !DILocation(line: 5629, column: 5, scope: !13062)
!13107 = !DILocation(line: 5630, column: 34, scope: !13075)
!13108 = !DILocation(line: 5630, column: 31, scope: !13075)
!13109 = !DILocation(line: 0, scope: !13075)
!13110 = !DILocation(line: 5631, column: 9, scope: !13075)
!13111 = !DILocation(line: 5632, column: 28, scope: !13075)
!13112 = !DILocation(line: 5632, column: 9, scope: !13075)
!13113 = !DILocation(line: 5633, column: 9, scope: !13075)
!13114 = !DILocation(line: 5634, column: 16, scope: !13075)
!13115 = distinct !{!13115, !13106, !13116}
!13116 = !DILocation(line: 5636, column: 5, scope: !13062)
!13117 = !DILocation(line: 5638, column: 1, scope: !13062)
!13118 = !DILocation(line: 5637, column: 5, scope: !13062)
!13119 = distinct !DISubprogram(name: "zslDeleteRangeByRank", scope: !3, file: !3, line: 5642, type: !13120, scopeLine: 5642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13122)
!13120 = !DISubroutineType(types: !13121)
!13121 = !{!55, !177, !7, !7, !86}
!13122 = !{!13123, !13124, !13125, !13126, !13127, !13128, !13129, !13130, !13131, !13132}
!13123 = !DILocalVariable(name: "zsl", arg: 1, scope: !13119, file: !3, line: 5642, type: !177)
!13124 = !DILocalVariable(name: "start", arg: 2, scope: !13119, file: !3, line: 5642, type: !7)
!13125 = !DILocalVariable(name: "end", arg: 3, scope: !13119, file: !3, line: 5642, type: !7)
!13126 = !DILocalVariable(name: "dict", arg: 4, scope: !13119, file: !3, line: 5642, type: !86)
!13127 = !DILocalVariable(name: "update", scope: !13119, file: !3, line: 5643, type: !6364)
!13128 = !DILocalVariable(name: "x", scope: !13119, file: !3, line: 5643, type: !1121)
!13129 = !DILocalVariable(name: "traversed", scope: !13119, file: !3, line: 5644, type: !55)
!13130 = !DILocalVariable(name: "removed", scope: !13119, file: !3, line: 5644, type: !55)
!13131 = !DILocalVariable(name: "i", scope: !13119, file: !3, line: 5645, type: !45)
!13132 = !DILocalVariable(name: "next", scope: !13133, file: !3, line: 5659, type: !1121)
!13133 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 5658, column: 35)
!13134 = !DILocation(line: 0, scope: !13119)
!13135 = !DILocation(line: 5643, column: 5, scope: !13119)
!13136 = !DILocation(line: 5643, column: 20, scope: !13119)
!13137 = !DILocation(line: 5647, column: 14, scope: !13119)
!13138 = !DILocation(line: 5648, column: 19, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 5648, column: 5)
!13140 = !DILocation(line: 5648, column: 30, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 5648, column: 5)
!13142 = !DILocation(line: 5648, column: 5, scope: !13139)
!13143 = !DILocation(line: 0, scope: !13139)
!13144 = !DILocation(line: 5649, column: 19, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 5648, column: 41)
!13146 = !DILocation(line: 5649, column: 16, scope: !13145)
!13147 = !DILocation(line: 5649, column: 30, scope: !13145)
!13148 = !DILocation(line: 5649, column: 47, scope: !13145)
!13149 = !DILocation(line: 5649, column: 58, scope: !13145)
!13150 = !DILocation(line: 5649, column: 55, scope: !13145)
!13151 = !DILocation(line: 5649, column: 46, scope: !13145)
!13152 = !DILocation(line: 5649, column: 44, scope: !13145)
!13153 = !DILocation(line: 5649, column: 74, scope: !13145)
!13154 = !DILocation(line: 5649, column: 9, scope: !13145)
!13155 = !DILocation(line: 5653, column: 9, scope: !13145)
!13156 = !DILocation(line: 5653, column: 19, scope: !13145)
!13157 = !DILocation(line: 5650, column: 26, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 5649, column: 83)
!13159 = !DILocation(line: 5650, column: 23, scope: !13158)
!13160 = distinct !{!13160, !13154, !13161}
!13161 = !DILocation(line: 5652, column: 9, scope: !13145)
!13162 = distinct !{!13162, !13142, !13163}
!13163 = !DILocation(line: 5654, column: 5, scope: !13139)
!13164 = !DILocation(line: 5644, column: 19, scope: !13119)
!13165 = !DILocation(line: 5647, column: 7, scope: !13119)
!13166 = !DILocation(line: 5657, column: 12, scope: !13119)
!13167 = !DILocation(line: 5657, column: 9, scope: !13119)
!13168 = !DILocation(line: 5658, column: 12, scope: !13119)
!13169 = !DILocation(line: 5658, column: 14, scope: !13119)
!13170 = !DILocation(line: 5658, column: 5, scope: !13119)
!13171 = !DILocation(line: 5659, column: 34, scope: !13133)
!13172 = !DILocation(line: 5659, column: 31, scope: !13133)
!13173 = !DILocation(line: 0, scope: !13133)
!13174 = !DILocation(line: 5660, column: 9, scope: !13133)
!13175 = !DILocation(line: 5661, column: 28, scope: !13133)
!13176 = !DILocation(line: 5661, column: 9, scope: !13133)
!13177 = !DILocation(line: 5662, column: 9, scope: !13133)
!13178 = !DILocation(line: 5663, column: 16, scope: !13133)
!13179 = distinct !{!13179, !13170, !13180}
!13180 = !DILocation(line: 5666, column: 5, scope: !13119)
!13181 = !DILocation(line: 5668, column: 1, scope: !13119)
!13182 = !DILocation(line: 5667, column: 5, scope: !13119)
!13183 = distinct !DISubprogram(name: "zunionInterGenericCommand", scope: !3, file: !3, line: 5959, type: !13184, scopeLine: 5959, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13186)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{null, !287, !145, !45}
!13186 = !{!13187, !13188, !13189, !13190, !13191, !13192, !13193, !13194, !13201, !13202, !13203, !13204, !13205, !13209, !13212, !13218, !13219, !13223, !13226, !13233, !13234, !13238}
!13187 = !DILocalVariable(name: "c", arg: 1, scope: !13183, file: !3, line: 5959, type: !287)
!13188 = !DILocalVariable(name: "dstkey", arg: 2, scope: !13183, file: !3, line: 5959, type: !145)
!13189 = !DILocalVariable(name: "op", arg: 3, scope: !13183, file: !3, line: 5959, type: !45)
!13190 = !DILocalVariable(name: "i", scope: !13183, file: !3, line: 5960, type: !45)
!13191 = !DILocalVariable(name: "j", scope: !13183, file: !3, line: 5960, type: !45)
!13192 = !DILocalVariable(name: "zsetnum", scope: !13183, file: !3, line: 5960, type: !45)
!13193 = !DILocalVariable(name: "aggregate", scope: !13183, file: !3, line: 5961, type: !45)
!13194 = !DILocalVariable(name: "src", scope: !13183, file: !3, line: 5962, type: !13195)
!13195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13196, size: 64)
!13196 = !DIDerivedType(tag: DW_TAG_typedef, name: "zsetopsrc", file: !3, line: 5928, baseType: !13197)
!13197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 5925, size: 128, elements: !13198)
!13198 = !{!13199, !13200}
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !13197, file: !3, line: 5926, baseType: !86, size: 64)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !13197, file: !3, line: 5927, baseType: !168, size: 64, offset: 64)
!13201 = !DILocalVariable(name: "dstobj", scope: !13183, file: !3, line: 5963, type: !145)
!13202 = !DILocalVariable(name: "dstzset", scope: !13183, file: !3, line: 5964, type: !171)
!13203 = !DILocalVariable(name: "di", scope: !13183, file: !3, line: 5965, type: !2938)
!13204 = !DILocalVariable(name: "de", scope: !13183, file: !3, line: 5966, type: !124)
!13205 = !DILocalVariable(name: "zsetobj", scope: !13206, file: !3, line: 5984, type: !145)
!13206 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 5983, column: 47)
!13207 = distinct !DILexicalBlock(scope: !13208, file: !3, line: 5983, column: 5)
!13208 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 5983, column: 5)
!13209 = !DILocalVariable(name: "remaining", scope: !13210, file: !3, line: 6002, type: !45)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 6001, column: 22)
!13211 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 6001, column: 9)
!13212 = !DILocalVariable(name: "score", scope: !13213, file: !3, line: 6051, type: !198)
!13213 = distinct !DILexicalBlock(scope: !13214, file: !3, line: 6050, column: 48)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 6046, column: 55)
!13215 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 6046, column: 13)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 6044, column: 31)
!13217 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 6044, column: 9)
!13218 = !DILocalVariable(name: "value", scope: !13213, file: !3, line: 6051, type: !168)
!13219 = !DILocalVariable(name: "other", scope: !13220, file: !3, line: 6055, type: !124)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !3, line: 6054, column: 47)
!13221 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 6054, column: 17)
!13222 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 6054, column: 17)
!13223 = !DILocalVariable(name: "o", scope: !13224, file: !3, line: 6068, type: !145)
!13224 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 6067, column: 24)
!13225 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 6065, column: 21)
!13226 = !DILocalVariable(name: "score", scope: !13227, file: !3, line: 6086, type: !198)
!13227 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 6082, column: 48)
!13228 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 6078, column: 39)
!13229 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 6078, column: 9)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 6078, column: 9)
!13231 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 6077, column: 38)
!13232 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 6077, column: 16)
!13233 = !DILocalVariable(name: "value", scope: !13227, file: !3, line: 6086, type: !168)
!13234 = !DILocalVariable(name: "other", scope: !13235, file: !3, line: 6092, type: !124)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 6091, column: 51)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 6091, column: 17)
!13237 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 6091, column: 17)
!13238 = !DILocalVariable(name: "o", scope: !13227, file: !3, line: 6099, type: !145)
!13239 = !DILocation(line: 0, scope: !13183)
!13240 = !DILocation(line: 5969, column: 23, scope: !13183)
!13241 = !DILocation(line: 5969, column: 20, scope: !13183)
!13242 = !DILocation(line: 5969, column: 32, scope: !13183)
!13243 = !DILocation(line: 5969, column: 15, scope: !13183)
!13244 = !DILocation(line: 5970, column: 17, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 5970, column: 9)
!13246 = !DILocation(line: 5970, column: 9, scope: !13183)
!13247 = !DILocation(line: 5971, column: 23, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 5970, column: 22)
!13249 = !DILocation(line: 5971, column: 9, scope: !13248)
!13250 = !DILocation(line: 5972, column: 9, scope: !13248)
!13251 = !DILocation(line: 5976, column: 10, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 5976, column: 9)
!13253 = !DILocation(line: 5976, column: 24, scope: !13252)
!13254 = !DILocation(line: 5976, column: 19, scope: !13252)
!13255 = !DILocation(line: 5976, column: 9, scope: !13183)
!13256 = !DILocation(line: 5977, column: 27, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 5976, column: 30)
!13258 = !DILocation(line: 5977, column: 9, scope: !13257)
!13259 = !DILocation(line: 5978, column: 9, scope: !13257)
!13260 = !DILocation(line: 5982, column: 39, scope: !13183)
!13261 = !DILocation(line: 5982, column: 37, scope: !13183)
!13262 = !DILocation(line: 5982, column: 11, scope: !13183)
!13263 = !DILocation(line: 5983, column: 5, scope: !13208)
!13264 = !DILocation(line: 5984, column: 43, scope: !13206)
!13265 = !DILocation(line: 5984, column: 49, scope: !13206)
!13266 = !DILocation(line: 5984, column: 46, scope: !13206)
!13267 = !DILocation(line: 5984, column: 25, scope: !13206)
!13268 = !DILocation(line: 0, scope: !13206)
!13269 = !DILocation(line: 5985, column: 14, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13206, file: !3, line: 5985, column: 13)
!13271 = !DILocation(line: 5985, column: 13, scope: !13206)
!13272 = !DILocation(line: 5988, column: 26, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !3, line: 5988, column: 17)
!13274 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 5987, column: 16)
!13275 = !DILocation(line: 5988, column: 31, scope: !13273)
!13276 = !DILocation(line: 5988, column: 17, scope: !13274)
!13277 = !DILocation(line: 5989, column: 17, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13273, file: !3, line: 5988, column: 46)
!13279 = !DILocation(line: 5990, column: 35, scope: !13278)
!13280 = !DILocation(line: 5990, column: 17, scope: !13278)
!13281 = !DILocation(line: 5993, column: 44, scope: !13274)
!13282 = !DILocation(line: 5993, column: 50, scope: !13274)
!13283 = !DILocation(line: 0, scope: !13270)
!13284 = !{!13285, !714, i64 0}
!13285 = !{!"", !714, i64 0, !1143, i64 8}
!13286 = !DILocation(line: 5997, column: 16, scope: !13206)
!13287 = !DILocation(line: 5997, column: 23, scope: !13206)
!13288 = !{!13285, !1143, i64 8}
!13289 = !DILocation(line: 5983, column: 38, scope: !13207)
!13290 = !DILocation(line: 5983, column: 43, scope: !13207)
!13291 = !DILocation(line: 5983, column: 26, scope: !13207)
!13292 = distinct !{!13292, !13263, !13293}
!13293 = !DILocation(line: 5998, column: 5, scope: !13208)
!13294 = !DILocation(line: 6001, column: 16, scope: !13211)
!13295 = !DILocation(line: 6001, column: 11, scope: !13211)
!13296 = !DILocation(line: 6001, column: 9, scope: !13183)
!13297 = !DILocation(line: 6002, column: 33, scope: !13210)
!13298 = !DILocation(line: 0, scope: !13210)
!13299 = !DILocation(line: 6004, column: 9, scope: !13210)
!13300 = !DILocation(line: 6007, column: 17, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 6007, column: 17)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 6005, column: 87)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !3, line: 6005, column: 17)
!13304 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 6004, column: 27)
!13305 = !DILocation(line: 6005, column: 27, scope: !13303)
!13306 = !DILocation(line: 6005, column: 44, scope: !13303)
!13307 = !DILocation(line: 6005, column: 62, scope: !13303)
!13308 = !DILocation(line: 6005, column: 59, scope: !13303)
!13309 = !DILocation(line: 6005, column: 71, scope: !13303)
!13310 = !DILocation(line: 6005, column: 48, scope: !13303)
!13311 = !DILocation(line: 6005, column: 17, scope: !13304)
!13312 = !DILocation(line: 0, scope: !13302)
!13313 = !DILocation(line: 6008, column: 54, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 6008, column: 25)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !3, line: 6007, column: 65)
!13316 = distinct !DILexicalBlock(scope: !13301, file: !3, line: 6007, column: 17)
!13317 = !DILocation(line: 6008, column: 25, scope: !13314)
!13318 = !DILocation(line: 6009, column: 61, scope: !13314)
!13319 = !DILocation(line: 6008, column: 25, scope: !13315)
!13320 = !DILocation(line: 6007, column: 31, scope: !13316)
!13321 = distinct !{!13321, !13300, !13322}
!13322 = !DILocation(line: 6014, column: 17, scope: !13301)
!13323 = !DILocation(line: 6008, column: 57, scope: !13314)
!13324 = !DILocation(line: 6008, column: 73, scope: !13314)
!13325 = !DILocation(line: 6007, column: 43, scope: !13316)
!13326 = !DILocation(line: 6011, column: 25, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 6010, column: 21)
!13328 = !DILocation(line: 6015, column: 34, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 6015, column: 24)
!13330 = !DILocation(line: 6015, column: 39, scope: !13329)
!13331 = !DILocation(line: 6015, column: 57, scope: !13329)
!13332 = !DILocation(line: 6015, column: 54, scope: !13329)
!13333 = !DILocation(line: 6015, column: 66, scope: !13329)
!13334 = !DILocation(line: 6015, column: 43, scope: !13329)
!13335 = !DILocation(line: 6015, column: 24, scope: !13303)
!13336 = !DILocation(line: 6016, column: 18, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 6015, column: 84)
!13338 = !DILocation(line: 6017, column: 33, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 6017, column: 21)
!13340 = !DILocation(line: 6017, column: 45, scope: !13339)
!13341 = !DILocation(line: 6017, column: 22, scope: !13339)
!13342 = !DILocation(line: 6017, column: 21, scope: !13337)
!13343 = !DILocation(line: 6019, column: 29, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13339, file: !3, line: 6019, column: 28)
!13345 = !DILocation(line: 6019, column: 28, scope: !13339)
!13346 = !DILocation(line: 6021, column: 29, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 6021, column: 28)
!13348 = !DILocation(line: 6021, column: 28, scope: !13344)
!13349 = !DILocation(line: 6024, column: 21, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13347, file: !3, line: 6023, column: 24)
!13351 = !DILocation(line: 6025, column: 39, scope: !13350)
!13352 = !DILocation(line: 6025, column: 21, scope: !13350)
!13353 = !DILocation(line: 0, scope: !13339)
!13354 = !DILocation(line: 6028, column: 18, scope: !13337)
!13355 = !DILocation(line: 6028, column: 31, scope: !13337)
!13356 = !DILocation(line: 6030, column: 17, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 6029, column: 20)
!13358 = !DILocation(line: 6031, column: 35, scope: !13357)
!13359 = !DILocation(line: 6031, column: 17, scope: !13357)
!13360 = !DILocation(line: 0, scope: !13303)
!13361 = distinct !{!13361, !13299, !13362}
!13362 = !DILocation(line: 6034, column: 9, scope: !13210)
!13363 = !DILocation(line: 5961, column: 9, scope: !13183)
!13364 = !DILocation(line: 6039, column: 5, scope: !13183)
!13365 = !DILocation(line: 6041, column: 14, scope: !13183)
!13366 = !DILocation(line: 6042, column: 23, scope: !13183)
!13367 = !DILocation(line: 6044, column: 9, scope: !13183)
!13368 = !DILocation(line: 6078, column: 9, scope: !13230)
!13369 = !DILocation(line: 6046, column: 20, scope: !13215)
!13370 = !DILocation(line: 6046, column: 13, scope: !13215)
!13371 = !DILocation(line: 6046, column: 25, scope: !13215)
!13372 = !DILocation(line: 6046, column: 28, scope: !13215)
!13373 = !DILocation(line: 6046, column: 50, scope: !13215)
!13374 = !DILocation(line: 6046, column: 13, scope: !13216)
!13375 = !DILocation(line: 6049, column: 18, scope: !13214)
!13376 = !DILocation(line: 6050, column: 25, scope: !13214)
!13377 = !DILocation(line: 6050, column: 39, scope: !13214)
!13378 = !DILocation(line: 6050, column: 13, scope: !13214)
!13379 = !DILocation(line: 6051, column: 33, scope: !13213)
!13380 = !DILocation(line: 0, scope: !13213)
!13381 = !DILocation(line: 6052, column: 33, scope: !13213)
!13382 = !DILocation(line: 6052, column: 53, scope: !13213)
!13383 = !DILocation(line: 6052, column: 43, scope: !13213)
!13384 = !DILocation(line: 6052, column: 40, scope: !13213)
!13385 = !DILocation(line: 6052, column: 24, scope: !13213)
!13386 = !DILocation(line: 6054, column: 17, scope: !13222)
!13387 = !DILocation(line: 6055, column: 56, scope: !13220)
!13388 = !DILocation(line: 6055, column: 61, scope: !13220)
!13389 = !DILocation(line: 6055, column: 40, scope: !13220)
!13390 = !DILocation(line: 0, scope: !13220)
!13391 = !DILocation(line: 6056, column: 25, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 6056, column: 25)
!13393 = !DILocation(line: 6056, column: 25, scope: !13220)
!13394 = !DILocation(line: 6057, column: 40, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 6056, column: 32)
!13396 = !DILocation(line: 6057, column: 60, scope: !13395)
!13397 = !DILocation(line: 6057, column: 50, scope: !13395)
!13398 = !DILocation(line: 6057, column: 47, scope: !13395)
!13399 = !DILocation(line: 6058, column: 25, scope: !13395)
!13400 = !DILocation(line: 6054, column: 43, scope: !13221)
!13401 = !DILocation(line: 6054, column: 31, scope: !13221)
!13402 = distinct !{!13402, !13386, !13403}
!13403 = !DILocation(line: 6062, column: 17, scope: !13222)
!13404 = !DILocation(line: 6065, column: 23, scope: !13225)
!13405 = !DILocation(line: 0, scope: !13222)
!13406 = !DILocation(line: 6065, column: 21, scope: !13213)
!13407 = !DILocation(line: 6066, column: 21, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 6065, column: 35)
!13409 = !DILocation(line: 6067, column: 17, scope: !13408)
!13410 = !DILocation(line: 6068, column: 31, scope: !13224)
!13411 = !DILocation(line: 0, scope: !13224)
!13412 = !DILocation(line: 6069, column: 38, scope: !13224)
!13413 = !DILocation(line: 6069, column: 21, scope: !13224)
!13414 = !DILocation(line: 6070, column: 21, scope: !13224)
!13415 = !DILocation(line: 6071, column: 40, scope: !13224)
!13416 = !DILocation(line: 6071, column: 44, scope: !13224)
!13417 = !DILocation(line: 6071, column: 21, scope: !13224)
!13418 = !DILocation(line: 6072, column: 21, scope: !13224)
!13419 = distinct !{!13419, !13378, !13420}
!13420 = !DILocation(line: 6074, column: 13, scope: !13214)
!13421 = !DILocation(line: 6075, column: 13, scope: !13214)
!13422 = !DILocation(line: 6076, column: 9, scope: !13214)
!13423 = !DILocation(line: 6079, column: 25, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 6079, column: 17)
!13425 = !DILocation(line: 6079, column: 18, scope: !13424)
!13426 = !DILocation(line: 6079, column: 17, scope: !13228)
!13427 = !DILocation(line: 6081, column: 18, scope: !13228)
!13428 = !DILocation(line: 6082, column: 25, scope: !13228)
!13429 = !DILocation(line: 6082, column: 39, scope: !13228)
!13430 = !DILocation(line: 6082, column: 13, scope: !13228)
!13431 = !DILocation(line: 6084, column: 39, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 6084, column: 21)
!13433 = !DILocation(line: 6084, column: 44, scope: !13432)
!13434 = !DILocation(line: 6084, column: 21, scope: !13432)
!13435 = !DILocation(line: 6084, column: 65, scope: !13432)
!13436 = !DILocation(line: 6084, column: 21, scope: !13227)
!13437 = !DILocation(line: 6086, column: 33, scope: !13227)
!13438 = !DILocation(line: 0, scope: !13227)
!13439 = !DILocation(line: 6087, column: 33, scope: !13227)
!13440 = !DILocation(line: 6087, column: 53, scope: !13227)
!13441 = !DILocation(line: 6087, column: 43, scope: !13227)
!13442 = !DILocation(line: 6087, column: 40, scope: !13227)
!13443 = !DILocation(line: 6087, column: 24, scope: !13227)
!13444 = !DILocation(line: 6091, column: 17, scope: !13237)
!13445 = !DILocation(line: 6092, column: 56, scope: !13235)
!13446 = !DILocation(line: 6092, column: 61, scope: !13235)
!13447 = !DILocation(line: 6092, column: 40, scope: !13235)
!13448 = !DILocation(line: 0, scope: !13235)
!13449 = !DILocation(line: 6093, column: 25, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 6093, column: 25)
!13451 = !DILocation(line: 6093, column: 25, scope: !13235)
!13452 = !DILocation(line: 6094, column: 40, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 6093, column: 32)
!13454 = !DILocation(line: 6094, column: 60, scope: !13453)
!13455 = !DILocation(line: 6094, column: 50, scope: !13453)
!13456 = !DILocation(line: 6094, column: 47, scope: !13453)
!13457 = !DILocation(line: 6095, column: 25, scope: !13453)
!13458 = !DILocation(line: 6096, column: 21, scope: !13453)
!13459 = !DILocation(line: 0, scope: !13237)
!13460 = !DILocation(line: 6091, column: 35, scope: !13236)
!13461 = distinct !{!13461, !13444, !13462}
!13462 = !DILocation(line: 6097, column: 17, scope: !13237)
!13463 = !DILocation(line: 6099, column: 27, scope: !13227)
!13464 = !DILocation(line: 6100, column: 34, scope: !13227)
!13465 = !DILocation(line: 6100, column: 17, scope: !13227)
!13466 = !DILocation(line: 6101, column: 17, scope: !13227)
!13467 = !DILocation(line: 6102, column: 36, scope: !13227)
!13468 = !DILocation(line: 6102, column: 40, scope: !13227)
!13469 = !DILocation(line: 6102, column: 17, scope: !13227)
!13470 = !DILocation(line: 6103, column: 17, scope: !13227)
!13471 = distinct !{!13471, !13430, !13472}
!13472 = !DILocation(line: 6104, column: 13, scope: !13228)
!13473 = !DILocation(line: 6105, column: 13, scope: !13228)
!13474 = !DILocation(line: 6106, column: 9, scope: !13228)
!13475 = !DILocation(line: 6078, column: 35, scope: !13229)
!13476 = !DILocation(line: 6078, column: 23, scope: !13229)
!13477 = distinct !{!13477, !13368, !13478}
!13478 = !DILocation(line: 6106, column: 9, scope: !13230)
!13479 = !DILocation(line: 6109, column: 9, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 6107, column: 12)
!13481 = !DILocation(line: 6112, column: 22, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 6112, column: 9)
!13483 = !DILocation(line: 6112, column: 9, scope: !13482)
!13484 = !DILocation(line: 6112, column: 9, scope: !13183)
!13485 = !DILocation(line: 6112, column: 46, scope: !13482)
!13486 = !DILocation(line: 6112, column: 34, scope: !13482)
!13487 = !DILocation(line: 6113, column: 18, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 6113, column: 9)
!13489 = !DILocation(line: 6113, column: 23, scope: !13488)
!13490 = !DILocation(line: 6113, column: 9, scope: !13488)
!13491 = !DILocation(line: 6113, column: 9, scope: !13183)
!13492 = !DILocation(line: 6114, column: 20, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 6113, column: 31)
!13494 = !DILocation(line: 6114, column: 24, scope: !13493)
!13495 = !DILocation(line: 6114, column: 29, scope: !13493)
!13496 = !DILocation(line: 6114, column: 36, scope: !13493)
!13497 = !DILocation(line: 6114, column: 9, scope: !13493)
!13498 = !DILocation(line: 6115, column: 9, scope: !13493)
!13499 = !DILocation(line: 6116, column: 38, scope: !13493)
!13500 = !DILocation(line: 6116, column: 43, scope: !13493)
!13501 = !DILocation(line: 6116, column: 9, scope: !13493)
!13502 = !DILocation(line: 6117, column: 21, scope: !13493)
!13503 = !DILocation(line: 6118, column: 5, scope: !13493)
!13504 = !DILocation(line: 6119, column: 22, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 6118, column: 12)
!13506 = !DILocation(line: 6119, column: 9, scope: !13505)
!13507 = !DILocation(line: 6120, column: 28, scope: !13505)
!13508 = !DILocation(line: 6120, column: 9, scope: !13505)
!13509 = !DILocation(line: 6122, column: 5, scope: !13183)
!13510 = !DILocation(line: 6123, column: 1, scope: !13183)
!13511 = distinct !DISubprogram(name: "qsortCompareZsetopsrcByCardinality", scope: !3, file: !3, line: 5930, type: !12622, scopeLine: 5930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13512)
!13512 = !{!13513, !13514, !13515, !13516, !13517, !13518}
!13513 = !DILocalVariable(name: "s1", arg: 1, scope: !13511, file: !3, line: 5930, type: !100)
!13514 = !DILocalVariable(name: "s2", arg: 2, scope: !13511, file: !3, line: 5930, type: !100)
!13515 = !DILocalVariable(name: "d1", scope: !13511, file: !3, line: 5931, type: !13195)
!13516 = !DILocalVariable(name: "d2", scope: !13511, file: !3, line: 5931, type: !13195)
!13517 = !DILocalVariable(name: "size1", scope: !13511, file: !3, line: 5932, type: !55)
!13518 = !DILocalVariable(name: "size2", scope: !13511, file: !3, line: 5932, type: !55)
!13519 = !DILocation(line: 0, scope: !13511)
!13520 = !DILocation(line: 5933, column: 17, scope: !13511)
!13521 = !DILocation(line: 5933, column: 13, scope: !13511)
!13522 = !DILocation(line: 5933, column: 24, scope: !13511)
!13523 = !DILocation(line: 5934, column: 17, scope: !13511)
!13524 = !DILocation(line: 5934, column: 13, scope: !13511)
!13525 = !DILocation(line: 5934, column: 24, scope: !13511)
!13526 = !DILocation(line: 5935, column: 18, scope: !13511)
!13527 = !DILocation(line: 5935, column: 12, scope: !13511)
!13528 = !DILocation(line: 5935, column: 5, scope: !13511)
!13529 = distinct !DISubprogram(name: "zunionInterAggregate", scope: !3, file: !3, line: 5942, type: !13530, scopeLine: 5942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !198, !168, !45}
!13532 = !{!13533, !13534, !13535}
!13533 = !DILocalVariable(name: "target", arg: 1, scope: !13529, file: !3, line: 5942, type: !198)
!13534 = !DILocalVariable(name: "val", arg: 2, scope: !13529, file: !3, line: 5942, type: !168)
!13535 = !DILocalVariable(name: "aggregate", arg: 3, scope: !13529, file: !3, line: 5942, type: !45)
!13536 = !DILocation(line: 0, scope: !13529)
!13537 = !DILocation(line: 5943, column: 9, scope: !13529)
!13538 = !DILocation(line: 5944, column: 19, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 5943, column: 38)
!13540 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 5943, column: 9)
!13541 = !DILocation(line: 5944, column: 27, scope: !13539)
!13542 = !DILocation(line: 5948, column: 13, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13539, file: !3, line: 5948, column: 13)
!13544 = !DILocation(line: 5948, column: 13, scope: !13539)
!13545 = !DILocation(line: 5950, column: 25, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13547, file: !3, line: 5949, column: 45)
!13547 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 5949, column: 16)
!13548 = !DILocation(line: 5950, column: 23, scope: !13546)
!13549 = !DILocation(line: 5950, column: 19, scope: !13546)
!13550 = !DILocation(line: 5951, column: 5, scope: !13546)
!13551 = !DILocation(line: 5952, column: 25, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13553, file: !3, line: 5951, column: 45)
!13553 = distinct !DILexicalBlock(scope: !13547, file: !3, line: 5951, column: 16)
!13554 = !DILocation(line: 5952, column: 23, scope: !13552)
!13555 = !DILocation(line: 5952, column: 19, scope: !13552)
!13556 = !DILocation(line: 5957, column: 1, scope: !13529)
!13557 = !DILocation(line: 0, scope: !13540)
!13558 = distinct !DISubprogram(name: "zrangeGenericCommand", scope: !3, file: !3, line: 6133, type: !12086, scopeLine: 6133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13559)
!13559 = !{!13560, !13561, !13562, !13563, !13564, !13565, !13566, !13567, !13568, !13569, !13570, !13571, !13572}
!13560 = !DILocalVariable(name: "c", arg: 1, scope: !13558, file: !3, line: 6133, type: !287)
!13561 = !DILocalVariable(name: "reverse", arg: 2, scope: !13558, file: !3, line: 6133, type: !45)
!13562 = !DILocalVariable(name: "o", scope: !13558, file: !3, line: 6134, type: !145)
!13563 = !DILocalVariable(name: "start", scope: !13558, file: !3, line: 6135, type: !53)
!13564 = !DILocalVariable(name: "end", scope: !13558, file: !3, line: 6136, type: !53)
!13565 = !DILocalVariable(name: "withscores", scope: !13558, file: !3, line: 6137, type: !45)
!13566 = !DILocalVariable(name: "llen", scope: !13558, file: !3, line: 6138, type: !45)
!13567 = !DILocalVariable(name: "rangelen", scope: !13558, file: !3, line: 6139, type: !45)
!13568 = !DILocalVariable(name: "j", scope: !13558, file: !3, line: 6139, type: !45)
!13569 = !DILocalVariable(name: "zsetobj", scope: !13558, file: !3, line: 6140, type: !171)
!13570 = !DILocalVariable(name: "zsl", scope: !13558, file: !3, line: 6141, type: !177)
!13571 = !DILocalVariable(name: "ln", scope: !13558, file: !3, line: 6142, type: !1121)
!13572 = !DILocalVariable(name: "ele", scope: !13558, file: !3, line: 6143, type: !145)
!13573 = !DILocation(line: 0, scope: !13558)
!13574 = !DILocation(line: 6135, column: 5, scope: !13558)
!13575 = !DILocation(line: 6136, column: 5, scope: !13558)
!13576 = !DILocation(line: 6145, column: 41, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6145, column: 9)
!13578 = !DILocation(line: 6145, column: 38, scope: !13577)
!13579 = !DILocation(line: 6145, column: 10, scope: !13577)
!13580 = !DILocation(line: 6145, column: 64, scope: !13577)
!13581 = !DILocation(line: 6145, column: 77, scope: !13577)
!13582 = !DILocation(line: 6146, column: 41, scope: !13577)
!13583 = !DILocation(line: 6146, column: 38, scope: !13577)
!13584 = !DILocation(line: 6146, column: 10, scope: !13577)
!13585 = !DILocation(line: 6146, column: 62, scope: !13577)
!13586 = !DILocation(line: 6145, column: 9, scope: !13558)
!13587 = !DILocation(line: 6148, column: 12, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6148, column: 9)
!13589 = !DILocation(line: 6148, column: 17, scope: !13588)
!13590 = !DILocation(line: 6148, column: 22, scope: !13588)
!13591 = !DILocation(line: 6148, column: 40, scope: !13588)
!13592 = !DILocation(line: 6148, column: 37, scope: !13588)
!13593 = !DILocation(line: 6148, column: 49, scope: !13588)
!13594 = !DILocation(line: 6148, column: 26, scope: !13588)
!13595 = !DILocation(line: 6148, column: 9, scope: !13558)
!13596 = !DILocation(line: 6150, column: 24, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 6150, column: 16)
!13598 = !DILocation(line: 6150, column: 16, scope: !13588)
!13599 = !DILocation(line: 6155, column: 40, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6155, column: 9)
!13601 = !DILocation(line: 6155, column: 37, scope: !13600)
!13602 = !DILocation(line: 6155, column: 55, scope: !13600)
!13603 = !DILocation(line: 6155, column: 14, scope: !13600)
!13604 = !DILocation(line: 6155, column: 72, scope: !13600)
!13605 = !DILocation(line: 6156, column: 10, scope: !13600)
!13606 = !DILocation(line: 6156, column: 13, scope: !13600)
!13607 = !DILocation(line: 6155, column: 9, scope: !13558)
!13608 = !DILocation(line: 6157, column: 18, scope: !13558)
!13609 = !DILocation(line: 6158, column: 20, scope: !13558)
!13610 = !DILocation(line: 6159, column: 17, scope: !13558)
!13611 = !DILocation(line: 6162, column: 9, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6162, column: 9)
!13613 = !DILocation(line: 6162, column: 15, scope: !13612)
!13614 = !DILocation(line: 6162, column: 9, scope: !13558)
!13615 = !DILocation(line: 6163, column: 9, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6163, column: 9)
!13617 = !DILocation(line: 6163, column: 13, scope: !13616)
!13618 = !DILocation(line: 6163, column: 9, scope: !13558)
!13619 = !DILocation(line: 6164, column: 9, scope: !13558)
!13620 = !DILocation(line: 6168, column: 15, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6168, column: 9)
!13622 = !DILocation(line: 6168, column: 21, scope: !13621)
!13623 = !DILocation(line: 6168, column: 33, scope: !13621)
!13624 = !DILocation(line: 6168, column: 30, scope: !13621)
!13625 = !DILocation(line: 6168, column: 9, scope: !13558)
!13626 = !DILocation(line: 6172, column: 13, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6172, column: 9)
!13628 = !DILocation(line: 6172, column: 9, scope: !13558)
!13629 = !DILocation(line: 6172, column: 28, scope: !13627)
!13630 = !DILocation(line: 6172, column: 26, scope: !13627)
!13631 = !DILocation(line: 6172, column: 22, scope: !13627)
!13632 = !DILocation(line: 6173, column: 17, scope: !13558)
!13633 = !DILocation(line: 6173, column: 20, scope: !13558)
!13634 = !DILocation(line: 6173, column: 16, scope: !13558)
!13635 = !DILocation(line: 6177, column: 9, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6177, column: 9)
!13637 = !DILocation(line: 0, scope: !13636)
!13638 = !DILocation(line: 6177, column: 9, scope: !13558)
!13639 = !DILocation(line: 6178, column: 14, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 6177, column: 18)
!13641 = !DILocation(line: 6178, column: 32, scope: !13640)
!13642 = !DILocation(line: 6178, column: 68, scope: !13640)
!13643 = !DILocation(line: 6178, column: 39, scope: !13640)
!13644 = !DILocation(line: 6180, column: 14, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 6179, column: 12)
!13646 = !DILocation(line: 6181, column: 18, scope: !13645)
!13647 = !DILocation(line: 6181, column: 26, scope: !13645)
!13648 = !DILocation(line: 6181, column: 13, scope: !13645)
!13649 = !DILocation(line: 6181, column: 69, scope: !13645)
!13650 = !DILocation(line: 6181, column: 39, scope: !13645)
!13651 = !DILocation(line: 6185, column: 32, scope: !13558)
!13652 = !DILocation(line: 6186, column: 9, scope: !13558)
!13653 = !DILocation(line: 6185, column: 19, scope: !13558)
!13654 = !DILocation(line: 6185, column: 5, scope: !13558)
!13655 = !DILocation(line: 6187, column: 19, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 6187, column: 5)
!13657 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6187, column: 5)
!13658 = !DILocation(line: 6187, column: 5, scope: !13657)
!13659 = !DILocation(line: 6188, column: 19, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 6187, column: 36)
!13661 = !DILocation(line: 6189, column: 9, scope: !13660)
!13662 = !DILocation(line: 6190, column: 13, scope: !13660)
!13663 = !DILocation(line: 6191, column: 34, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13660, file: !3, line: 6190, column: 13)
!13665 = !DILocation(line: 6191, column: 13, scope: !13664)
!13666 = !DILocation(line: 6192, column: 14, scope: !13660)
!13667 = !DILocation(line: 6192, column: 28, scope: !13660)
!13668 = !DILocation(line: 6192, column: 43, scope: !13660)
!13669 = !DILocation(line: 6187, column: 32, scope: !13656)
!13670 = distinct !{!13670, !13658, !13671}
!13671 = !DILocation(line: 6193, column: 5, scope: !13657)
!13672 = !DILocation(line: 6194, column: 1, scope: !13558)
!13673 = distinct !DISubprogram(name: "genericZrangebyscoreCommand", scope: !3, file: !3, line: 6206, type: !12086, scopeLine: 6206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13674)
!13674 = !{!13675, !13676, !13677, !13678, !13679, !13680, !13681, !13682, !13683, !13684, !13685, !13686, !13691, !13692, !13693, !13694, !13695}
!13675 = !DILocalVariable(name: "c", arg: 1, scope: !13673, file: !3, line: 6206, type: !287)
!13676 = !DILocalVariable(name: "justcount", arg: 2, scope: !13673, file: !3, line: 6206, type: !45)
!13677 = !DILocalVariable(name: "o", scope: !13673, file: !3, line: 6207, type: !145)
!13678 = !DILocalVariable(name: "min", scope: !13673, file: !3, line: 6208, type: !168)
!13679 = !DILocalVariable(name: "max", scope: !13673, file: !3, line: 6208, type: !168)
!13680 = !DILocalVariable(name: "minex", scope: !13673, file: !3, line: 6209, type: !45)
!13681 = !DILocalVariable(name: "maxex", scope: !13673, file: !3, line: 6209, type: !45)
!13682 = !DILocalVariable(name: "offset", scope: !13673, file: !3, line: 6210, type: !45)
!13683 = !DILocalVariable(name: "limit", scope: !13673, file: !3, line: 6210, type: !45)
!13684 = !DILocalVariable(name: "withscores", scope: !13673, file: !3, line: 6211, type: !45)
!13685 = !DILocalVariable(name: "badsyntax", scope: !13673, file: !3, line: 6212, type: !45)
!13686 = !DILocalVariable(name: "zsetobj", scope: !13687, file: !3, line: 6266, type: !171)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 6265, column: 16)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !3, line: 6263, column: 13)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 6262, column: 12)
!13690 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6260, column: 9)
!13691 = !DILocalVariable(name: "zsl", scope: !13687, file: !3, line: 6267, type: !177)
!13692 = !DILocalVariable(name: "ln", scope: !13687, file: !3, line: 6268, type: !1121)
!13693 = !DILocalVariable(name: "ele", scope: !13687, file: !3, line: 6269, type: !145)
!13694 = !DILocalVariable(name: "lenobj", scope: !13687, file: !3, line: 6269, type: !145)
!13695 = !DILocalVariable(name: "rangelen", scope: !13687, file: !3, line: 6270, type: !55)
!13696 = !DILocation(line: 0, scope: !13673)
!13697 = !DILocation(line: 6218, column: 20, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6218, column: 9)
!13699 = !DILocation(line: 6218, column: 17, scope: !13698)
!13700 = !DILocation(line: 6218, column: 29, scope: !13698)
!13701 = !DILocation(line: 6218, column: 9, scope: !13698)
!13702 = !DILocation(line: 6218, column: 37, scope: !13698)
!13703 = !DILocation(line: 6218, column: 9, scope: !13673)
!13704 = !DILocation(line: 0, scope: !13698)
!13705 = !DILocation(line: 6224, column: 20, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6224, column: 9)
!13707 = !DILocation(line: 6224, column: 17, scope: !13706)
!13708 = !DILocation(line: 6224, column: 29, scope: !13706)
!13709 = !DILocation(line: 6224, column: 9, scope: !13706)
!13710 = !DILocation(line: 6224, column: 37, scope: !13706)
!13711 = !DILocation(line: 6224, column: 9, scope: !13673)
!13712 = !DILocation(line: 0, scope: !13706)
!13713 = !DILocation(line: 6234, column: 12, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6234, column: 9)
!13715 = !DILocation(line: 6234, column: 22, scope: !13714)
!13716 = !DILocation(line: 6235, column: 27, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !3, line: 6235, column: 13)
!13718 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 6234, column: 39)
!13719 = !DILocation(line: 6235, column: 39, scope: !13717)
!13720 = !DILocation(line: 6235, column: 24, scope: !13717)
!13721 = !DILocation(line: 6235, column: 44, scope: !13717)
!13722 = !DILocation(line: 6235, column: 13, scope: !13717)
!13723 = !DILocation(line: 6235, column: 62, scope: !13717)
!13724 = !DILocation(line: 6240, column: 23, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6240, column: 9)
!13726 = !DILocation(line: 6240, column: 17, scope: !13725)
!13727 = !DILocation(line: 6240, column: 37, scope: !13725)
!13728 = !DILocation(line: 6242, column: 9, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6242, column: 9)
!13730 = !DILocation(line: 6242, column: 9, scope: !13673)
!13731 = !DILocation(line: 6244, column: 13, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 6242, column: 20)
!13733 = !DILocation(line: 6243, column: 9, scope: !13732)
!13734 = !DILocation(line: 6245, column: 9, scope: !13732)
!13735 = !DILocation(line: 6249, column: 37, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 6249, column: 9)
!13737 = !DILocation(line: 6249, column: 51, scope: !13736)
!13738 = !DILocation(line: 6249, column: 63, scope: !13736)
!13739 = !DILocation(line: 6249, column: 40, scope: !13736)
!13740 = !DILocation(line: 6249, column: 9, scope: !13673)
!13741 = !DILocation(line: 6250, column: 27, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 6249, column: 77)
!13743 = !DILocation(line: 6250, column: 9, scope: !13742)
!13744 = !DILocation(line: 6251, column: 9, scope: !13742)
!13745 = !DILocation(line: 6253, column: 23, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !3, line: 6252, column: 45)
!13747 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 6252, column: 16)
!13748 = !DILocation(line: 6253, column: 35, scope: !13746)
!13749 = !DILocation(line: 6253, column: 18, scope: !13746)
!13750 = !DILocation(line: 6254, column: 22, scope: !13746)
!13751 = !DILocation(line: 6254, column: 34, scope: !13746)
!13752 = !DILocation(line: 6254, column: 17, scope: !13746)
!13753 = !DILocation(line: 6255, column: 13, scope: !13746)
!13754 = !DILocation(line: 6256, column: 5, scope: !13746)
!13755 = !DILocation(line: 6259, column: 26, scope: !13673)
!13756 = !DILocation(line: 6259, column: 29, scope: !13673)
!13757 = !DILocation(line: 6259, column: 9, scope: !13673)
!13758 = !DILocation(line: 6260, column: 11, scope: !13690)
!13759 = !DILocation(line: 6260, column: 9, scope: !13673)
!13760 = !DILocation(line: 6261, column: 20, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 6260, column: 20)
!13762 = !DILocation(line: 6261, column: 9, scope: !13761)
!13763 = !DILocation(line: 6262, column: 5, scope: !13761)
!13764 = !DILocation(line: 6263, column: 16, scope: !13688)
!13765 = !DILocation(line: 6263, column: 21, scope: !13688)
!13766 = !DILocation(line: 6263, column: 13, scope: !13689)
!13767 = !DILocation(line: 6264, column: 31, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 6263, column: 36)
!13769 = !DILocation(line: 6264, column: 13, scope: !13768)
!13770 = !DILocation(line: 6265, column: 9, scope: !13768)
!13771 = !DILocation(line: 6266, column: 32, scope: !13687)
!13772 = !DILocation(line: 0, scope: !13687)
!13773 = !DILocation(line: 6267, column: 39, scope: !13687)
!13774 = !DILocation(line: 6274, column: 18, scope: !13687)
!13775 = !DILocation(line: 6275, column: 26, scope: !13687)
!13776 = !DILocation(line: 6275, column: 39, scope: !13687)
!13777 = !DILocation(line: 6275, column: 45, scope: !13687)
!13778 = !DILocation(line: 6275, column: 13, scope: !13687)
!13779 = !DILocation(line: 6275, column: 62, scope: !13687)
!13780 = !DILocation(line: 6275, column: 58, scope: !13687)
!13781 = distinct !{!13781, !13778, !13782}
!13782 = !DILocation(line: 6275, column: 71, scope: !13687)
!13783 = !DILocation(line: 6277, column: 20, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 6277, column: 17)
!13785 = !DILocation(line: 6277, column: 17, scope: !13687)
!13786 = !DILocation(line: 6279, column: 28, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 6277, column: 29)
!13788 = !DILocation(line: 6279, column: 17, scope: !13787)
!13789 = !DILocation(line: 6280, column: 17, scope: !13787)
!13790 = !DILocation(line: 6287, column: 18, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 6287, column: 17)
!13792 = !DILocation(line: 6287, column: 17, scope: !13687)
!13793 = !DILocation(line: 6288, column: 26, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 6287, column: 29)
!13795 = !DILocation(line: 6289, column: 17, scope: !13794)
!13796 = !DILocation(line: 6290, column: 30, scope: !13794)
!13797 = !DILocation(line: 6290, column: 17, scope: !13794)
!13798 = !DILocation(line: 6291, column: 13, scope: !13794)
!13799 = !DILocation(line: 6293, column: 13, scope: !13687)
!13800 = !DILocation(line: 6293, column: 22, scope: !13687)
!13801 = !DILocation(line: 6293, column: 26, scope: !13687)
!13802 = !DILocation(line: 6293, column: 45, scope: !13687)
!13803 = !DILocation(line: 6293, column: 65, scope: !13687)
!13804 = !DILocation(line: 6294, column: 21, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 6294, column: 21)
!13806 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 6293, column: 75)
!13807 = !DILocation(line: 6294, column: 21, scope: !13806)
!13808 = !DILocation(line: 6295, column: 27, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 6294, column: 29)
!13810 = !DILocation(line: 6296, column: 30, scope: !13809)
!13811 = !DILocation(line: 6296, column: 26, scope: !13809)
!13812 = !DILocation(line: 6293, column: 19, scope: !13687)
!13813 = distinct !{!13813, !13799, !13814}
!13814 = !DILocation(line: 6309, column: 13, scope: !13687)
!13815 = !DILocation(line: 6299, column: 27, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 6299, column: 21)
!13817 = !DILocation(line: 6299, column: 21, scope: !13806)
!13818 = !DILocation(line: 6300, column: 21, scope: !13806)
!13819 = !DILocation(line: 6301, column: 31, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 6300, column: 33)
!13821 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 6300, column: 21)
!13822 = !DILocation(line: 6302, column: 21, scope: !13820)
!13823 = !DILocation(line: 6303, column: 25, scope: !13820)
!13824 = !DILocation(line: 6304, column: 46, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13820, file: !3, line: 6303, column: 25)
!13826 = !DILocation(line: 6304, column: 25, scope: !13825)
!13827 = !DILocation(line: 6306, column: 26, scope: !13806)
!13828 = !DILocation(line: 6306, column: 22, scope: !13806)
!13829 = !DILocation(line: 6307, column: 25, scope: !13806)
!13830 = !DILocation(line: 6308, column: 27, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 6308, column: 21)
!13832 = !DILocation(line: 6308, column: 21, scope: !13806)
!13833 = !DILocation(line: 6310, column: 17, scope: !13687)
!13834 = !DILocation(line: 6311, column: 17, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !3, line: 6310, column: 28)
!13836 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 6310, column: 17)
!13837 = !DILocation(line: 6312, column: 13, scope: !13835)
!13838 = !DILocation(line: 6313, column: 44, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13836, file: !3, line: 6312, column: 20)
!13840 = !DILocation(line: 6314, column: 22, scope: !13839)
!13841 = !DILocation(line: 6313, column: 31, scope: !13839)
!13842 = !DILocation(line: 6313, column: 25, scope: !13839)
!13843 = !DILocation(line: 6313, column: 29, scope: !13839)
!13844 = !DILocation(line: 6318, column: 1, scope: !13673)
!13845 = distinct !DISubprogram(name: "zslFirstWithScore", scope: !3, file: !3, line: 5672, type: !13846, scopeLine: 5672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13848)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{!1121, !177, !168}
!13848 = !{!13849, !13850, !13851, !13852}
!13849 = !DILocalVariable(name: "zsl", arg: 1, scope: !13845, file: !3, line: 5672, type: !177)
!13850 = !DILocalVariable(name: "score", arg: 2, scope: !13845, file: !3, line: 5672, type: !168)
!13851 = !DILocalVariable(name: "x", scope: !13845, file: !3, line: 5673, type: !1121)
!13852 = !DILocalVariable(name: "i", scope: !13845, file: !3, line: 5674, type: !45)
!13853 = !DILocation(line: 0, scope: !13845)
!13854 = !DILocation(line: 5676, column: 14, scope: !13845)
!13855 = !DILocation(line: 5677, column: 19, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 5677, column: 5)
!13857 = !DILocation(line: 5677, column: 30, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 5677, column: 5)
!13859 = !DILocation(line: 5677, column: 5, scope: !13856)
!13860 = !DILocation(line: 5683, column: 15, scope: !13845)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 5678, column: 9, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 5677, column: 41)
!13864 = !DILocation(line: 5678, column: 19, scope: !13863)
!13865 = !DILocation(line: 5678, column: 16, scope: !13863)
!13866 = !DILocation(line: 5678, column: 30, scope: !13863)
!13867 = !DILocation(line: 5678, column: 48, scope: !13863)
!13868 = !DILocation(line: 5678, column: 54, scope: !13863)
!13869 = distinct !{!13869, !13862, !13870}
!13870 = !DILocation(line: 5679, column: 29, scope: !13863)
!13871 = distinct !{!13871, !13859, !13872}
!13872 = !DILocation(line: 5680, column: 5, scope: !13856)
!13873 = !DILocation(line: 5683, column: 12, scope: !13845)
!13874 = !DILocation(line: 5683, column: 5, scope: !13845)
!13875 = distinct !DISubprogram(name: "zrankGenericCommand", scope: !3, file: !3, line: 6358, type: !12086, scopeLine: 6358, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13876)
!13876 = !{!13877, !13878, !13879, !13880, !13881, !13882, !13883, !13884}
!13877 = !DILocalVariable(name: "c", arg: 1, scope: !13875, file: !3, line: 6358, type: !287)
!13878 = !DILocalVariable(name: "reverse", arg: 2, scope: !13875, file: !3, line: 6358, type: !45)
!13879 = !DILocalVariable(name: "o", scope: !13875, file: !3, line: 6359, type: !145)
!13880 = !DILocalVariable(name: "zs", scope: !13875, file: !3, line: 6360, type: !171)
!13881 = !DILocalVariable(name: "zsl", scope: !13875, file: !3, line: 6361, type: !177)
!13882 = !DILocalVariable(name: "de", scope: !13875, file: !3, line: 6362, type: !124)
!13883 = !DILocalVariable(name: "rank", scope: !13875, file: !3, line: 6363, type: !55)
!13884 = !DILocalVariable(name: "score", scope: !13875, file: !3, line: 6364, type: !198)
!13885 = !DILocation(line: 0, scope: !13875)
!13886 = !DILocation(line: 6366, column: 40, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 6366, column: 9)
!13888 = !DILocation(line: 6366, column: 37, scope: !13887)
!13889 = !DILocation(line: 6366, column: 55, scope: !13887)
!13890 = !DILocation(line: 6366, column: 14, scope: !13887)
!13891 = !DILocation(line: 6366, column: 66, scope: !13887)
!13892 = !DILocation(line: 6366, column: 74, scope: !13887)
!13893 = !DILocation(line: 6367, column: 9, scope: !13887)
!13894 = !DILocation(line: 6366, column: 9, scope: !13875)
!13895 = !DILocation(line: 6369, column: 13, scope: !13875)
!13896 = !DILocation(line: 6370, column: 15, scope: !13875)
!13897 = !DILocation(line: 6371, column: 23, scope: !13875)
!13898 = !DILocation(line: 6371, column: 31, scope: !13875)
!13899 = !DILocation(line: 6371, column: 28, scope: !13875)
!13900 = !DILocation(line: 6371, column: 10, scope: !13875)
!13901 = !DILocation(line: 6372, column: 10, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 6372, column: 9)
!13903 = !DILocation(line: 6372, column: 9, scope: !13875)
!13904 = !DILocation(line: 6373, column: 27, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 6372, column: 14)
!13906 = !DILocation(line: 6373, column: 9, scope: !13905)
!13907 = !DILocation(line: 6374, column: 9, scope: !13905)
!13908 = !DILocation(line: 6377, column: 13, scope: !13875)
!13909 = !DILocation(line: 6378, column: 28, scope: !13875)
!13910 = !DILocation(line: 6378, column: 39, scope: !13875)
!13911 = !DILocation(line: 6378, column: 36, scope: !13875)
!13912 = !DILocation(line: 6378, column: 12, scope: !13875)
!13913 = !DILocation(line: 6379, column: 9, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 6379, column: 9)
!13915 = !DILocation(line: 6379, column: 9, scope: !13875)
!13916 = !DILocation(line: 6380, column: 13, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 6380, column: 13)
!13918 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 6379, column: 15)
!13919 = !DILocation(line: 6380, column: 13, scope: !13918)
!13920 = !DILocation(line: 6381, column: 38, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13917, file: !3, line: 6380, column: 22)
!13922 = !DILocation(line: 6381, column: 45, scope: !13921)
!13923 = !DILocation(line: 6381, column: 13, scope: !13921)
!13924 = !DILocation(line: 6382, column: 9, scope: !13921)
!13925 = !DILocation(line: 6383, column: 37, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13917, file: !3, line: 6382, column: 16)
!13927 = !DILocation(line: 6383, column: 13, scope: !13926)
!13928 = !DILocation(line: 6386, column: 27, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 6385, column: 12)
!13930 = !DILocation(line: 6386, column: 9, scope: !13929)
!13931 = !DILocation(line: 6388, column: 1, scope: !13875)
!13932 = distinct !DISubprogram(name: "zslGetRank", scope: !3, file: !3, line: 5690, type: !13933, scopeLine: 5690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13935)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{!55, !177, !168, !145}
!13935 = !{!13936, !13937, !13938, !13939, !13940, !13941}
!13936 = !DILocalVariable(name: "zsl", arg: 1, scope: !13932, file: !3, line: 5690, type: !177)
!13937 = !DILocalVariable(name: "score", arg: 2, scope: !13932, file: !3, line: 5690, type: !168)
!13938 = !DILocalVariable(name: "o", arg: 3, scope: !13932, file: !3, line: 5690, type: !145)
!13939 = !DILocalVariable(name: "x", scope: !13932, file: !3, line: 5691, type: !1121)
!13940 = !DILocalVariable(name: "rank", scope: !13932, file: !3, line: 5692, type: !55)
!13941 = !DILocalVariable(name: "i", scope: !13932, file: !3, line: 5693, type: !45)
!13942 = !DILocation(line: 0, scope: !13932)
!13943 = !DILocation(line: 5696, column: 19, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 5696, column: 5)
!13945 = !DILocation(line: 5696, column: 30, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 5696, column: 5)
!13947 = !DILocation(line: 5696, column: 5, scope: !13944)
!13948 = !DILocation(line: 5695, column: 14, scope: !13932)
!13949 = !DILocation(line: 0, scope: !13944)
!13950 = !DILocation(line: 5697, column: 19, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 5696, column: 41)
!13952 = !DILocation(line: 5697, column: 16, scope: !13951)
!13953 = !DILocation(line: 5697, column: 30, scope: !13951)
!13954 = !DILocation(line: 5698, column: 29, scope: !13951)
!13955 = !DILocation(line: 5698, column: 35, scope: !13951)
!13956 = !DILocation(line: 5698, column: 43, scope: !13951)
!13957 = !DILocation(line: 5699, column: 39, scope: !13951)
!13958 = !DILocation(line: 5699, column: 48, scope: !13951)
!13959 = !DILocation(line: 5700, column: 53, scope: !13951)
!13960 = !DILocation(line: 5700, column: 17, scope: !13951)
!13961 = !DILocation(line: 5700, column: 60, scope: !13951)
!13962 = !DILocation(line: 5697, column: 9, scope: !13951)
!13963 = !DILocation(line: 5701, column: 21, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 5700, column: 68)
!13965 = !DILocation(line: 5701, column: 32, scope: !13964)
!13966 = !DILocation(line: 5701, column: 29, scope: !13964)
!13967 = !DILocation(line: 5701, column: 18, scope: !13964)
!13968 = !DILocation(line: 5702, column: 20, scope: !13964)
!13969 = !DILocation(line: 5702, column: 17, scope: !13964)
!13970 = distinct !{!13970, !13962, !13971}
!13971 = !DILocation(line: 5703, column: 9, scope: !13951)
!13972 = !DILocation(line: 5706, column: 16, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 5706, column: 13)
!13974 = !DILocation(line: 5706, column: 13, scope: !13973)
!13975 = !DILocation(line: 5706, column: 20, scope: !13973)
!13976 = !DILocation(line: 5706, column: 23, scope: !13973)
!13977 = !DILocation(line: 5706, column: 13, scope: !13951)
!13978 = distinct !{!13978, !13947, !13979}
!13979 = !DILocation(line: 5709, column: 5, scope: !13944)
!13980 = !DILocation(line: 5711, column: 1, scope: !13932)
!13981 = distinct !DISubprogram(name: "hashLookupWriteOrCreate", scope: !3, file: !3, line: 6586, type: !13982, scopeLine: 6586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13984)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{!145, !287, !145}
!13984 = !{!13985, !13986, !13987}
!13985 = !DILocalVariable(name: "c", arg: 1, scope: !13981, file: !3, line: 6586, type: !287)
!13986 = !DILocalVariable(name: "key", arg: 2, scope: !13981, file: !3, line: 6586, type: !145)
!13987 = !DILocalVariable(name: "o", scope: !13981, file: !3, line: 6587, type: !145)
!13988 = !DILocation(line: 0, scope: !13981)
!13989 = !DILocation(line: 6587, column: 33, scope: !13981)
!13990 = !DILocation(line: 6587, column: 15, scope: !13981)
!13991 = !DILocation(line: 6588, column: 11, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 6588, column: 9)
!13993 = !DILocation(line: 6588, column: 9, scope: !13981)
!13994 = !DILocation(line: 6589, column: 13, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 6588, column: 20)
!13996 = !DILocation(line: 6590, column: 20, scope: !13995)
!13997 = !DILocation(line: 6590, column: 24, scope: !13995)
!13998 = !DILocation(line: 6590, column: 29, scope: !13995)
!13999 = !DILocation(line: 6590, column: 33, scope: !13995)
!14000 = !DILocation(line: 6590, column: 9, scope: !13995)
!14001 = !DILocation(line: 6591, column: 9, scope: !13995)
!14002 = !DILocation(line: 6592, column: 5, scope: !13995)
!14003 = !DILocation(line: 6593, column: 16, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 6593, column: 13)
!14005 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 6592, column: 12)
!14006 = !DILocation(line: 6593, column: 21, scope: !14004)
!14007 = !DILocation(line: 6593, column: 13, scope: !14005)
!14008 = !DILocation(line: 6594, column: 31, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14004, file: !3, line: 6593, column: 36)
!14010 = !DILocation(line: 6594, column: 13, scope: !14009)
!14011 = !DILocation(line: 6595, column: 13, scope: !14009)
!14012 = !DILocation(line: 6599, column: 1, scope: !13981)
!14013 = distinct !DISubprogram(name: "hashTryConversion", scope: !3, file: !3, line: 6405, type: !14014, scopeLine: 6405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14016)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{null, !145, !305, !45, !45}
!14016 = !{!14017, !14018, !14019, !14020, !14021}
!14017 = !DILocalVariable(name: "subject", arg: 1, scope: !14013, file: !3, line: 6405, type: !145)
!14018 = !DILocalVariable(name: "argv", arg: 2, scope: !14013, file: !3, line: 6405, type: !305)
!14019 = !DILocalVariable(name: "start", arg: 3, scope: !14013, file: !3, line: 6405, type: !45)
!14020 = !DILocalVariable(name: "end", arg: 4, scope: !14013, file: !3, line: 6405, type: !45)
!14021 = !DILocalVariable(name: "i", scope: !14013, file: !3, line: 6406, type: !45)
!14022 = !DILocation(line: 0, scope: !14013)
!14023 = !DILocation(line: 6407, column: 18, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 6407, column: 9)
!14025 = !DILocation(line: 6407, column: 27, scope: !14024)
!14026 = !DILocation(line: 6407, column: 9, scope: !14013)
!14027 = !DILocation(line: 6409, column: 5, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 6409, column: 5)
!14029 = !DILocation(line: 6410, column: 13, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 6410, column: 13)
!14031 = distinct !DILexicalBlock(scope: !14032, file: !3, line: 6409, column: 36)
!14032 = distinct !DILexicalBlock(scope: !14028, file: !3, line: 6409, column: 5)
!14033 = !DILocation(line: 6410, column: 22, scope: !14030)
!14034 = !DILocation(line: 6410, column: 31, scope: !14030)
!14035 = !DILocation(line: 6410, column: 53, scope: !14030)
!14036 = !DILocation(line: 6411, column: 29, scope: !14030)
!14037 = !DILocation(line: 6411, column: 13, scope: !14030)
!14038 = !DILocation(line: 6411, column: 43, scope: !14030)
!14039 = !DILocation(line: 6411, column: 34, scope: !14030)
!14040 = !DILocation(line: 6410, column: 13, scope: !14031)
!14041 = !DILocation(line: 6413, column: 13, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14030, file: !3, line: 6412, column: 9)
!14043 = !DILocation(line: 6414, column: 13, scope: !14042)
!14044 = !DILocation(line: 6409, column: 32, scope: !14032)
!14045 = !DILocation(line: 6409, column: 23, scope: !14032)
!14046 = distinct !{!14046, !14027, !14047}
!14047 = !DILocation(line: 6416, column: 5, scope: !14028)
!14048 = !DILocation(line: 6417, column: 1, scope: !14013)
!14049 = distinct !DISubprogram(name: "hashTryObjectEncoding", scope: !3, file: !3, line: 6420, type: !14050, scopeLine: 6420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14052)
!14050 = !DISubroutineType(types: !14051)
!14051 = !{null, !145, !305, !305}
!14052 = !{!14053, !14054, !14055}
!14053 = !DILocalVariable(name: "subject", arg: 1, scope: !14049, file: !3, line: 6420, type: !145)
!14054 = !DILocalVariable(name: "o1", arg: 2, scope: !14049, file: !3, line: 6420, type: !305)
!14055 = !DILocalVariable(name: "o2", arg: 3, scope: !14049, file: !3, line: 6420, type: !305)
!14056 = !DILocation(line: 0, scope: !14049)
!14057 = !DILocation(line: 6421, column: 18, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 6421, column: 9)
!14059 = !DILocation(line: 6421, column: 27, scope: !14058)
!14060 = !DILocation(line: 6421, column: 9, scope: !14049)
!14061 = !DILocation(line: 6422, column: 13, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !3, line: 6422, column: 13)
!14063 = distinct !DILexicalBlock(scope: !14058, file: !3, line: 6421, column: 49)
!14064 = !DILocation(line: 6422, column: 13, scope: !14063)
!14065 = !DILocation(line: 6422, column: 41, scope: !14062)
!14066 = !DILocation(line: 6422, column: 23, scope: !14062)
!14067 = !DILocation(line: 6422, column: 21, scope: !14062)
!14068 = !DILocation(line: 6422, column: 17, scope: !14062)
!14069 = !DILocation(line: 6423, column: 13, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14063, file: !3, line: 6423, column: 13)
!14071 = !DILocation(line: 6423, column: 13, scope: !14063)
!14072 = !DILocation(line: 6423, column: 41, scope: !14070)
!14073 = !DILocation(line: 6423, column: 23, scope: !14070)
!14074 = !DILocation(line: 6423, column: 21, scope: !14070)
!14075 = !DILocation(line: 6423, column: 17, scope: !14070)
!14076 = !DILocation(line: 6425, column: 1, scope: !14049)
!14077 = distinct !DISubprogram(name: "hashSet", scope: !3, file: !3, line: 6470, type: !14078, scopeLine: 6470, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14080)
!14078 = !DISubroutineType(types: !14079)
!14079 = !{!45, !145, !145, !145}
!14080 = !{!14081, !14082, !14083, !14084}
!14081 = !DILocalVariable(name: "o", arg: 1, scope: !14077, file: !3, line: 6470, type: !145)
!14082 = !DILocalVariable(name: "key", arg: 2, scope: !14077, file: !3, line: 6470, type: !145)
!14083 = !DILocalVariable(name: "value", arg: 3, scope: !14077, file: !3, line: 6470, type: !145)
!14084 = !DILocalVariable(name: "update", scope: !14077, file: !3, line: 6471, type: !45)
!14085 = !DILocation(line: 0, scope: !14077)
!14086 = !DILocation(line: 6471, column: 5, scope: !14077)
!14087 = !DILocation(line: 6471, column: 9, scope: !14077)
!14088 = !DILocation(line: 6472, column: 12, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14077, file: !3, line: 6472, column: 9)
!14090 = !DILocation(line: 6472, column: 21, scope: !14089)
!14091 = !DILocation(line: 6472, column: 9, scope: !14077)
!14092 = !DILocation(line: 6473, column: 15, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14089, file: !3, line: 6472, column: 47)
!14094 = !DILocation(line: 6474, column: 17, scope: !14093)
!14095 = !DILocation(line: 6475, column: 31, scope: !14093)
!14096 = !DILocation(line: 6476, column: 18, scope: !14093)
!14097 = !DILocation(line: 6476, column: 22, scope: !14093)
!14098 = !DILocation(line: 6477, column: 20, scope: !14093)
!14099 = !DILocation(line: 6477, column: 24, scope: !14093)
!14100 = !DILocation(line: 6475, column: 18, scope: !14093)
!14101 = !DILocation(line: 6475, column: 16, scope: !14093)
!14102 = !DILocation(line: 6478, column: 22, scope: !14093)
!14103 = !DILocation(line: 6478, column: 9, scope: !14093)
!14104 = !DILocation(line: 6479, column: 22, scope: !14093)
!14105 = !DILocation(line: 6479, column: 9, scope: !14093)
!14106 = !DILocation(line: 6482, column: 26, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14093, file: !3, line: 6482, column: 13)
!14108 = !DILocation(line: 6482, column: 13, scope: !14107)
!14109 = !DILocation(line: 6482, column: 40, scope: !14107)
!14110 = !DILocation(line: 6482, column: 31, scope: !14107)
!14111 = !DILocation(line: 6482, column: 13, scope: !14093)
!14112 = !DILocation(line: 6483, column: 13, scope: !14107)
!14113 = !DILocation(line: 6485, column: 28, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 6485, column: 13)
!14115 = distinct !DILexicalBlock(scope: !14089, file: !3, line: 6484, column: 12)
!14116 = !DILocation(line: 6485, column: 32, scope: !14114)
!14117 = !DILocation(line: 6485, column: 36, scope: !14114)
!14118 = !DILocation(line: 6485, column: 13, scope: !14114)
!14119 = !DILocation(line: 6485, column: 13, scope: !14115)
!14120 = !DILocation(line: 6487, column: 13, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 6485, column: 44)
!14122 = !DILocation(line: 6488, column: 9, scope: !14121)
!14123 = !DILocation(line: 6490, column: 20, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 6488, column: 16)
!14125 = !DILocation(line: 6492, column: 9, scope: !14115)
!14126 = !DILocation(line: 6494, column: 12, scope: !14077)
!14127 = !DILocation(line: 6495, column: 1, scope: !14077)
!14128 = !DILocation(line: 6494, column: 5, scope: !14077)
!14129 = distinct !DISubprogram(name: "hashExists", scope: !3, file: !3, line: 6452, type: !6943, scopeLine: 6452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14130)
!14130 = !{!14131, !14132}
!14131 = !DILocalVariable(name: "o", arg: 1, scope: !14129, file: !3, line: 6452, type: !145)
!14132 = !DILocalVariable(name: "key", arg: 2, scope: !14129, file: !3, line: 6452, type: !145)
!14133 = !DILocation(line: 0, scope: !14129)
!14134 = !DILocation(line: 6453, column: 12, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14129, file: !3, line: 6453, column: 9)
!14136 = !DILocation(line: 6453, column: 21, scope: !14135)
!14137 = !DILocation(line: 6453, column: 9, scope: !14129)
!14138 = !DILocation(line: 6454, column: 15, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 6453, column: 47)
!14140 = !DILocation(line: 6455, column: 29, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 6455, column: 13)
!14142 = !DILocation(line: 6455, column: 38, scope: !14141)
!14143 = !DILocation(line: 6455, column: 42, scope: !14141)
!14144 = !DILocation(line: 6455, column: 13, scope: !14141)
!14145 = !DILocation(line: 0, scope: !14139)
!14146 = !DILocation(line: 6455, column: 13, scope: !14139)
!14147 = !DILocation(line: 6461, column: 25, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 6461, column: 13)
!14149 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 6460, column: 12)
!14150 = !DILocation(line: 6461, column: 29, scope: !14148)
!14151 = !DILocation(line: 6461, column: 13, scope: !14148)
!14152 = !DILocation(line: 6461, column: 34, scope: !14148)
!14153 = !DILocation(line: 6461, column: 13, scope: !14149)
!14154 = !DILocation(line: 6465, column: 5, scope: !14129)
!14155 = !DILocation(line: 6466, column: 1, scope: !14129)
!14156 = !DISubprogram(name: "zipmapExists", scope: !6556, file: !6556, line: 44, type: !14157, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!45, !167, !167, !7}
!14159 = distinct !DISubprogram(name: "hashGet", scope: !3, file: !3, line: 6430, type: !14160, scopeLine: 6430, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{!145, !145, !145}
!14162 = !{!14163, !14164, !14165, !14166, !14169, !14170}
!14163 = !DILocalVariable(name: "o", arg: 1, scope: !14159, file: !3, line: 6430, type: !145)
!14164 = !DILocalVariable(name: "key", arg: 2, scope: !14159, file: !3, line: 6430, type: !145)
!14165 = !DILocalVariable(name: "value", scope: !14159, file: !3, line: 6431, type: !145)
!14166 = !DILocalVariable(name: "v", scope: !14167, file: !3, line: 6433, type: !167)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !3, line: 6432, column: 47)
!14168 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 6432, column: 9)
!14169 = !DILocalVariable(name: "vlen", scope: !14167, file: !3, line: 6434, type: !7)
!14170 = !DILocalVariable(name: "de", scope: !14171, file: !3, line: 6441, type: !124)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !3, line: 6440, column: 12)
!14172 = !DILocation(line: 0, scope: !14159)
!14173 = !DILocation(line: 6432, column: 12, scope: !14168)
!14174 = !DILocation(line: 6432, column: 21, scope: !14168)
!14175 = !DILocation(line: 6432, column: 9, scope: !14159)
!14176 = !DILocation(line: 6433, column: 9, scope: !14167)
!14177 = !DILocation(line: 6434, column: 9, scope: !14167)
!14178 = !DILocation(line: 6435, column: 15, scope: !14167)
!14179 = !DILocation(line: 6436, column: 26, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14167, file: !3, line: 6436, column: 13)
!14181 = !DILocation(line: 6436, column: 35, scope: !14180)
!14182 = !DILocation(line: 6436, column: 39, scope: !14180)
!14183 = !DILocation(line: 0, scope: !14167)
!14184 = !DILocation(line: 6436, column: 13, scope: !14180)
!14185 = !DILocation(line: 6436, column: 13, scope: !14167)
!14186 = !DILocation(line: 6437, column: 47, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 6436, column: 67)
!14188 = !DILocation(line: 6437, column: 49, scope: !14187)
!14189 = !DILocation(line: 6437, column: 21, scope: !14187)
!14190 = !DILocation(line: 6438, column: 9, scope: !14187)
!14191 = !DILocation(line: 6439, column: 22, scope: !14167)
!14192 = !DILocation(line: 6439, column: 9, scope: !14167)
!14193 = !DILocation(line: 6440, column: 5, scope: !14168)
!14194 = !DILocation(line: 6440, column: 5, scope: !14167)
!14195 = !DILocation(line: 6441, column: 37, scope: !14171)
!14196 = !DILocation(line: 6441, column: 41, scope: !14171)
!14197 = !DILocation(line: 6441, column: 25, scope: !14171)
!14198 = !DILocation(line: 0, scope: !14171)
!14199 = !DILocation(line: 6442, column: 16, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 6442, column: 13)
!14201 = !DILocation(line: 6442, column: 13, scope: !14171)
!14202 = !DILocation(line: 6443, column: 21, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 6442, column: 25)
!14204 = !DILocation(line: 6444, column: 13, scope: !14203)
!14205 = !DILocation(line: 6445, column: 9, scope: !14203)
!14206 = !DILocation(line: 0, scope: !14168)
!14207 = !DILocation(line: 6447, column: 5, scope: !14159)
!14208 = !DISubprogram(name: "zipmapGet", scope: !6556, file: !6556, line: 43, type: !14209, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{!45, !167, !167, !7, !7012, !189}
!14211 = distinct !DISubprogram(name: "hashDelete", scope: !3, file: !3, line: 6499, type: !6943, scopeLine: 6499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14212)
!14212 = !{!14213, !14214, !14215}
!14213 = !DILocalVariable(name: "o", arg: 1, scope: !14211, file: !3, line: 6499, type: !145)
!14214 = !DILocalVariable(name: "key", arg: 2, scope: !14211, file: !3, line: 6499, type: !145)
!14215 = !DILocalVariable(name: "deleted", scope: !14211, file: !3, line: 6500, type: !45)
!14216 = !DILocation(line: 0, scope: !14211)
!14217 = !DILocation(line: 6500, column: 5, scope: !14211)
!14218 = !DILocation(line: 6500, column: 9, scope: !14211)
!14219 = !DILocation(line: 6501, column: 12, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 6501, column: 9)
!14221 = !DILocation(line: 6501, column: 21, scope: !14220)
!14222 = !DILocation(line: 6501, column: 9, scope: !14211)
!14223 = !DILocation(line: 6502, column: 15, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14220, file: !3, line: 6501, column: 47)
!14225 = !DILocation(line: 6503, column: 31, scope: !14224)
!14226 = !DILocation(line: 6503, column: 40, scope: !14224)
!14227 = !DILocation(line: 6503, column: 44, scope: !14224)
!14228 = !DILocation(line: 6503, column: 18, scope: !14224)
!14229 = !DILocation(line: 6503, column: 16, scope: !14224)
!14230 = !DILocation(line: 6504, column: 22, scope: !14224)
!14231 = !DILocation(line: 6504, column: 9, scope: !14224)
!14232 = !DILocation(line: 6510, column: 12, scope: !14211)
!14233 = !DILocation(line: 6505, column: 5, scope: !14224)
!14234 = !DILocation(line: 6506, column: 40, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14220, file: !3, line: 6505, column: 12)
!14236 = !DILocation(line: 6506, column: 44, scope: !14235)
!14237 = !DILocation(line: 6506, column: 19, scope: !14235)
!14238 = !DILocation(line: 6506, column: 49, scope: !14235)
!14239 = !DILocation(line: 6508, column: 21, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14235, file: !3, line: 6508, column: 13)
!14241 = !DILocation(line: 6508, column: 41, scope: !14240)
!14242 = !DILocation(line: 6508, column: 24, scope: !14240)
!14243 = !DILocation(line: 6508, column: 13, scope: !14235)
!14244 = !DILocation(line: 6508, column: 47, scope: !14240)
!14245 = !DILocation(line: 6511, column: 1, scope: !14211)
!14246 = !DILocation(line: 6510, column: 5, scope: !14211)
!14247 = distinct !DISubprogram(name: "hashLength", scope: !3, file: !3, line: 6514, type: !14248, scopeLine: 6514, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14250)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{!55, !145}
!14250 = !{!14251}
!14251 = !DILocalVariable(name: "o", arg: 1, scope: !14247, file: !3, line: 6514, type: !145)
!14252 = !DILocation(line: 0, scope: !14247)
!14253 = !DILocation(line: 6515, column: 16, scope: !14247)
!14254 = !DILocation(line: 6515, column: 25, scope: !14247)
!14255 = !DILocation(line: 6515, column: 12, scope: !14247)
!14256 = !DILocation(line: 6516, column: 38, scope: !14247)
!14257 = !DILocation(line: 6516, column: 9, scope: !14247)
!14258 = !DILocation(line: 6516, column: 45, scope: !14247)
!14259 = !DILocation(line: 6515, column: 5, scope: !14247)
!14260 = !DISubprogram(name: "zipmapDel", scope: !6556, file: !6556, line: 40, type: !14261, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{!167, !167, !167, !7, !3301}
!14263 = distinct !DISubprogram(name: "genericHgetallCommand", scope: !3, file: !3, line: 6731, type: !12086, scopeLine: 6731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14264)
!14264 = !{!14265, !14266, !14267, !14268, !14269, !14270, !14271}
!14265 = !DILocalVariable(name: "c", arg: 1, scope: !14263, file: !3, line: 6731, type: !287)
!14266 = !DILocalVariable(name: "flags", arg: 2, scope: !14263, file: !3, line: 6731, type: !45)
!14267 = !DILocalVariable(name: "o", scope: !14263, file: !3, line: 6732, type: !145)
!14268 = !DILocalVariable(name: "lenobj", scope: !14263, file: !3, line: 6732, type: !145)
!14269 = !DILocalVariable(name: "obj", scope: !14263, file: !3, line: 6732, type: !145)
!14270 = !DILocalVariable(name: "count", scope: !14263, file: !3, line: 6733, type: !55)
!14271 = !DILocalVariable(name: "hi", scope: !14263, file: !3, line: 6734, type: !14272)
!14272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14273, size: 64)
!14273 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashIterator", file: !3, line: 6531, baseType: !14274)
!14274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 6523, size: 448, elements: !14275)
!14275 = !{!14276, !14277, !14278, !14279, !14280, !14281, !14282, !14283}
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !14274, file: !3, line: 6524, baseType: !45, size: 32)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "zi", scope: !14274, file: !3, line: 6525, baseType: !167, size: 64, offset: 64)
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "zk", scope: !14274, file: !3, line: 6526, baseType: !167, size: 64, offset: 128)
!14279 = !DIDerivedType(tag: DW_TAG_member, name: "zv", scope: !14274, file: !3, line: 6526, baseType: !167, size: 64, offset: 192)
!14280 = !DIDerivedType(tag: DW_TAG_member, name: "zklen", scope: !14274, file: !3, line: 6527, baseType: !7, size: 32, offset: 256)
!14281 = !DIDerivedType(tag: DW_TAG_member, name: "zvlen", scope: !14274, file: !3, line: 6527, baseType: !7, size: 32, offset: 288)
!14282 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !14274, file: !3, line: 6529, baseType: !2938, size: 64, offset: 320)
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !14274, file: !3, line: 6530, baseType: !124, size: 64, offset: 384)
!14284 = !DILocation(line: 0, scope: !14263)
!14285 = !DILocation(line: 6736, column: 40, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 6736, column: 9)
!14287 = !DILocation(line: 6736, column: 37, scope: !14286)
!14288 = !DILocation(line: 6736, column: 55, scope: !14286)
!14289 = !DILocation(line: 6736, column: 14, scope: !14286)
!14290 = !DILocation(line: 6736, column: 72, scope: !14286)
!14291 = !DILocation(line: 6737, column: 9, scope: !14286)
!14292 = !DILocation(line: 6737, column: 12, scope: !14286)
!14293 = !DILocation(line: 6736, column: 9, scope: !14263)
!14294 = !DILocation(line: 6739, column: 14, scope: !14263)
!14295 = !DILocation(line: 6740, column: 5, scope: !14263)
!14296 = !DILocation(line: 6741, column: 18, scope: !14263)
!14297 = !DILocation(line: 6741, column: 5, scope: !14263)
!14298 = !DILocation(line: 6743, column: 10, scope: !14263)
!14299 = !DILocation(line: 6744, column: 12, scope: !14263)
!14300 = !DILocation(line: 6744, column: 25, scope: !14263)
!14301 = !DILocation(line: 6744, column: 5, scope: !14263)
!14302 = !DILocation(line: 6745, column: 13, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 6744, column: 39)
!14304 = !DILocation(line: 6746, column: 19, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14306, file: !3, line: 6745, column: 37)
!14306 = distinct !DILexicalBlock(scope: !14303, file: !3, line: 6745, column: 13)
!14307 = !DILocation(line: 6747, column: 13, scope: !14305)
!14308 = !DILocation(line: 6748, column: 26, scope: !14305)
!14309 = !DILocation(line: 6748, column: 13, scope: !14305)
!14310 = !DILocation(line: 6749, column: 18, scope: !14305)
!14311 = !DILocation(line: 6750, column: 9, scope: !14305)
!14312 = !DILocation(line: 6751, column: 13, scope: !14303)
!14313 = !DILocation(line: 6752, column: 19, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 6751, column: 39)
!14315 = distinct !DILexicalBlock(scope: !14303, file: !3, line: 6751, column: 13)
!14316 = !DILocation(line: 6753, column: 13, scope: !14314)
!14317 = !DILocation(line: 6754, column: 26, scope: !14314)
!14318 = !DILocation(line: 6754, column: 13, scope: !14314)
!14319 = !DILocation(line: 6755, column: 18, scope: !14314)
!14320 = !DILocation(line: 6756, column: 9, scope: !14314)
!14321 = !DILocation(line: 0, scope: !14303)
!14322 = distinct !{!14322, !14301, !14323}
!14323 = !DILocation(line: 6757, column: 5, scope: !14263)
!14324 = !DILocation(line: 6758, column: 5, scope: !14263)
!14325 = !DILocation(line: 6760, column: 32, scope: !14263)
!14326 = !DILocation(line: 6760, column: 19, scope: !14263)
!14327 = !DILocation(line: 6760, column: 13, scope: !14263)
!14328 = !DILocation(line: 6760, column: 17, scope: !14263)
!14329 = !DILocation(line: 6761, column: 1, scope: !14263)
!14330 = distinct !DISubprogram(name: "hashInitIterator", scope: !3, file: !3, line: 6533, type: !14331, scopeLine: 6533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14333)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!14272, !145}
!14333 = !{!14334, !14335}
!14334 = !DILocalVariable(name: "subject", arg: 1, scope: !14330, file: !3, line: 6533, type: !145)
!14335 = !DILocalVariable(name: "hi", scope: !14330, file: !3, line: 6534, type: !14272)
!14336 = !DILocation(line: 0, scope: !14330)
!14337 = !DILocation(line: 6534, column: 24, scope: !14330)
!14338 = !DILocation(line: 6535, column: 29, scope: !14330)
!14339 = !DILocation(line: 6535, column: 20, scope: !14330)
!14340 = !DILocation(line: 6535, column: 9, scope: !14330)
!14341 = !DILocation(line: 6535, column: 18, scope: !14330)
!14342 = !{!14343, !713, i64 0}
!14343 = !{!"", !713, i64 0, !714, i64 8, !714, i64 16, !714, i64 24, !713, i64 32, !713, i64 36, !714, i64 40, !714, i64 48}
!14344 = !DILocation(line: 6536, column: 9, scope: !14330)
!14345 = !DILocation(line: 6537, column: 40, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !3, line: 6536, column: 48)
!14347 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 6536, column: 9)
!14348 = !DILocation(line: 6537, column: 18, scope: !14346)
!14349 = !DILocation(line: 6537, column: 13, scope: !14346)
!14350 = !DILocation(line: 6537, column: 16, scope: !14346)
!14351 = !{!14343, !714, i64 8}
!14352 = !DILocation(line: 6538, column: 5, scope: !14346)
!14353 = !DILocation(line: 6539, column: 43, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 6538, column: 51)
!14355 = distinct !DILexicalBlock(scope: !14347, file: !3, line: 6538, column: 16)
!14356 = !DILocation(line: 6539, column: 18, scope: !14354)
!14357 = !DILocation(line: 6539, column: 13, scope: !14354)
!14358 = !DILocation(line: 6539, column: 16, scope: !14354)
!14359 = !{!14343, !714, i64 40}
!14360 = !DILocation(line: 6541, column: 9, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 6540, column: 12)
!14362 = !DILocation(line: 6543, column: 5, scope: !14330)
!14363 = distinct !DISubprogram(name: "hashNext", scope: !3, file: !3, line: 6555, type: !14364, scopeLine: 6555, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14366)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{!45, !14272}
!14366 = !{!14367}
!14367 = !DILocalVariable(name: "hi", arg: 1, scope: !14363, file: !3, line: 6555, type: !14272)
!14368 = !DILocation(line: 0, scope: !14363)
!14369 = !DILocation(line: 6556, column: 13, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 6556, column: 9)
!14371 = !DILocation(line: 6556, column: 22, scope: !14370)
!14372 = !DILocation(line: 6556, column: 9, scope: !14363)
!14373 = !DILocation(line: 6557, column: 38, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 6557, column: 13)
!14375 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 6556, column: 48)
!14376 = !DILocation(line: 6557, column: 47, scope: !14374)
!14377 = !DILocation(line: 6557, column: 56, scope: !14374)
!14378 = !DILocation(line: 6558, column: 18, scope: !14374)
!14379 = !DILocation(line: 6558, column: 27, scope: !14374)
!14380 = !DILocation(line: 6557, column: 23, scope: !14374)
!14381 = !DILocation(line: 6557, column: 21, scope: !14374)
!14382 = !DILocation(line: 6558, column: 35, scope: !14374)
!14383 = !DILocation(line: 6557, column: 13, scope: !14375)
!14384 = !DILocation(line: 6560, column: 36, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 6560, column: 13)
!14386 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 6559, column: 12)
!14387 = !DILocation(line: 6560, column: 23, scope: !14385)
!14388 = !DILocation(line: 6560, column: 18, scope: !14385)
!14389 = !DILocation(line: 6560, column: 21, scope: !14385)
!14390 = !{!14343, !714, i64 48}
!14391 = !DILocation(line: 6560, column: 41, scope: !14385)
!14392 = !DILocation(line: 6560, column: 13, scope: !14386)
!14393 = !DILocation(line: 6562, column: 5, scope: !14363)
!14394 = !DILocation(line: 6563, column: 1, scope: !14363)
!14395 = distinct !DISubprogram(name: "hashCurrent", scope: !3, file: !3, line: 6567, type: !14396, scopeLine: 6567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14398)
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!145, !14272, !45}
!14398 = !{!14399, !14400, !14401}
!14399 = !DILocalVariable(name: "hi", arg: 1, scope: !14395, file: !3, line: 6567, type: !14272)
!14400 = !DILocalVariable(name: "what", arg: 2, scope: !14395, file: !3, line: 6567, type: !45)
!14401 = !DILocalVariable(name: "o", scope: !14395, file: !3, line: 6568, type: !145)
!14402 = !DILocation(line: 0, scope: !14395)
!14403 = !DILocation(line: 6569, column: 13, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14395, file: !3, line: 6569, column: 9)
!14405 = !DILocation(line: 6569, column: 22, scope: !14404)
!14406 = !DILocation(line: 0, scope: !14404)
!14407 = !DILocation(line: 6569, column: 9, scope: !14395)
!14408 = !DILocation(line: 6570, column: 13, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6569, column: 48)
!14410 = !DILocation(line: 6571, column: 47, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !3, line: 6570, column: 36)
!14412 = distinct !DILexicalBlock(scope: !14409, file: !3, line: 6570, column: 13)
!14413 = !{!14343, !714, i64 16}
!14414 = !DILocation(line: 6571, column: 54, scope: !14411)
!14415 = !{!14343, !713, i64 32}
!14416 = !DILocation(line: 6571, column: 50, scope: !14411)
!14417 = !DILocation(line: 6571, column: 17, scope: !14411)
!14418 = !DILocation(line: 6572, column: 9, scope: !14411)
!14419 = !DILocation(line: 6573, column: 47, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14412, file: !3, line: 6572, column: 16)
!14421 = !{!14343, !714, i64 24}
!14422 = !DILocation(line: 6573, column: 54, scope: !14420)
!14423 = !{!14343, !713, i64 36}
!14424 = !DILocation(line: 6573, column: 50, scope: !14420)
!14425 = !DILocation(line: 6573, column: 17, scope: !14420)
!14426 = !DILocation(line: 0, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !3, line: 6576, column: 13)
!14428 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 6575, column: 12)
!14429 = !DILocation(line: 6576, column: 13, scope: !14428)
!14430 = !DILocation(line: 6577, column: 17, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 6576, column: 36)
!14432 = !DILocation(line: 6578, column: 9, scope: !14431)
!14433 = !DILocation(line: 6579, column: 17, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 6578, column: 16)
!14435 = !DILocation(line: 6581, column: 9, scope: !14428)
!14436 = !DILocation(line: 6583, column: 5, scope: !14395)
!14437 = distinct !DISubprogram(name: "hashReleaseIterator", scope: !3, file: !3, line: 6546, type: !14438, scopeLine: 6546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14440)
!14438 = !DISubroutineType(types: !14439)
!14439 = !{null, !14272}
!14440 = !{!14441}
!14441 = !DILocalVariable(name: "hi", arg: 1, scope: !14437, file: !3, line: 6546, type: !14272)
!14442 = !DILocation(line: 0, scope: !14437)
!14443 = !DILocation(line: 6547, column: 13, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14437, file: !3, line: 6547, column: 9)
!14445 = !DILocation(line: 6547, column: 22, scope: !14444)
!14446 = !DILocation(line: 6547, column: 9, scope: !14437)
!14447 = !DILocation(line: 6548, column: 33, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14444, file: !3, line: 6547, column: 44)
!14449 = !DILocation(line: 6548, column: 9, scope: !14448)
!14450 = !DILocation(line: 6549, column: 5, scope: !14448)
!14451 = !DILocation(line: 6550, column: 11, scope: !14437)
!14452 = !DILocation(line: 6550, column: 5, scope: !14437)
!14453 = !DILocation(line: 6551, column: 1, scope: !14437)
!14454 = distinct !DISubprogram(name: "msetGenericCommand", scope: !3, file: !3, line: 4349, type: !12086, scopeLine: 4349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14455)
!14455 = !{!14456, !14457, !14458, !14459, !14460}
!14456 = !DILocalVariable(name: "c", arg: 1, scope: !14454, file: !3, line: 4349, type: !287)
!14457 = !DILocalVariable(name: "nx", arg: 2, scope: !14454, file: !3, line: 4349, type: !45)
!14458 = !DILocalVariable(name: "j", scope: !14454, file: !3, line: 4350, type: !45)
!14459 = !DILocalVariable(name: "busykeys", scope: !14454, file: !3, line: 4350, type: !45)
!14460 = !DILocalVariable(name: "retval", scope: !14461, file: !3, line: 4371, type: !45)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 4370, column: 38)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !3, line: 4370, column: 5)
!14463 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 4370, column: 5)
!14464 = !DILocation(line: 0, scope: !14454)
!14465 = !DILocation(line: 4352, column: 13, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 4352, column: 9)
!14467 = !DILocation(line: 4352, column: 23, scope: !14466)
!14468 = !DILocation(line: 4352, column: 9, scope: !14454)
!14469 = !DILocation(line: 4353, column: 23, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14466, file: !3, line: 4352, column: 29)
!14471 = !DILocation(line: 4353, column: 9, scope: !14470)
!14472 = !DILocation(line: 4354, column: 9, scope: !14470)
!14473 = !DILocation(line: 4358, column: 9, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 4358, column: 9)
!14475 = !DILocation(line: 4358, column: 9, scope: !14454)
!14476 = !DILocation(line: 4359, column: 23, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !3, line: 4359, column: 9)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 4359, column: 9)
!14479 = distinct !DILexicalBlock(scope: !14474, file: !3, line: 4358, column: 13)
!14480 = !DILocation(line: 4359, column: 9, scope: !14478)
!14481 = !DILocation(line: 4360, column: 35, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !3, line: 4360, column: 17)
!14483 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 4359, column: 42)
!14484 = !DILocation(line: 4360, column: 41, scope: !14482)
!14485 = !DILocation(line: 4360, column: 38, scope: !14482)
!14486 = !DILocation(line: 4360, column: 17, scope: !14482)
!14487 = !DILocation(line: 4360, column: 50, scope: !14482)
!14488 = !DILocation(line: 4360, column: 17, scope: !14483)
!14489 = !DILocation(line: 4359, column: 36, scope: !14477)
!14490 = !DILocation(line: 4359, column: 28, scope: !14477)
!14491 = distinct !{!14491, !14480, !14492}
!14492 = !DILocation(line: 4363, column: 9, scope: !14478)
!14493 = !DILocation(line: 4365, column: 9, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 4365, column: 9)
!14495 = !DILocation(line: 4365, column: 9, scope: !14454)
!14496 = !DILocation(line: 4370, column: 19, scope: !14462)
!14497 = !DILocation(line: 4370, column: 5, scope: !14463)
!14498 = !DILocation(line: 4366, column: 28, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14494, file: !3, line: 4365, column: 19)
!14500 = !DILocation(line: 4366, column: 9, scope: !14499)
!14501 = !DILocation(line: 4367, column: 9, scope: !14499)
!14502 = !DILocation(line: 4373, column: 45, scope: !14461)
!14503 = !DILocation(line: 4373, column: 51, scope: !14461)
!14504 = !DILocation(line: 4373, column: 42, scope: !14461)
!14505 = !DILocation(line: 4373, column: 24, scope: !14461)
!14506 = !DILocation(line: 4373, column: 12, scope: !14461)
!14507 = !DILocation(line: 4373, column: 9, scope: !14461)
!14508 = !DILocation(line: 4373, column: 22, scope: !14461)
!14509 = !DILocation(line: 4374, column: 29, scope: !14461)
!14510 = !DILocation(line: 4374, column: 33, scope: !14461)
!14511 = !DILocation(line: 4374, column: 41, scope: !14461)
!14512 = !DILocation(line: 4374, column: 38, scope: !14461)
!14513 = !DILocation(line: 4374, column: 49, scope: !14461)
!14514 = !DILocation(line: 4374, column: 18, scope: !14461)
!14515 = !DILocation(line: 0, scope: !14461)
!14516 = !DILocation(line: 4375, column: 20, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 4375, column: 13)
!14518 = !DILocation(line: 4375, column: 13, scope: !14461)
!14519 = !DILocation(line: 4376, column: 28, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14517, file: !3, line: 4375, column: 33)
!14521 = !DILocation(line: 4376, column: 32, scope: !14520)
!14522 = !DILocation(line: 4376, column: 40, scope: !14520)
!14523 = !DILocation(line: 4376, column: 37, scope: !14520)
!14524 = !DILocation(line: 4376, column: 48, scope: !14520)
!14525 = !DILocation(line: 4376, column: 13, scope: !14520)
!14526 = !DILocation(line: 4378, column: 9, scope: !14520)
!14527 = !DILocation(line: 4379, column: 29, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14517, file: !3, line: 4378, column: 16)
!14529 = !DILocation(line: 4379, column: 26, scope: !14528)
!14530 = !DILocation(line: 4379, column: 13, scope: !14528)
!14531 = !DILocation(line: 0, scope: !14517)
!14532 = !DILocation(line: 4382, column: 25, scope: !14461)
!14533 = !DILocation(line: 4382, column: 31, scope: !14461)
!14534 = !DILocation(line: 4382, column: 28, scope: !14461)
!14535 = !DILocation(line: 4382, column: 9, scope: !14461)
!14536 = !DILocation(line: 4370, column: 32, scope: !14462)
!14537 = !DILocation(line: 4370, column: 24, scope: !14462)
!14538 = distinct !{!14538, !14497, !14539}
!14539 = !DILocation(line: 4383, column: 5, scope: !14463)
!14540 = !DILocation(line: 4384, column: 29, scope: !14454)
!14541 = !DILocation(line: 4384, column: 32, scope: !14454)
!14542 = !DILocation(line: 4384, column: 21, scope: !14454)
!14543 = !DILocation(line: 4384, column: 18, scope: !14454)
!14544 = !DILocation(line: 4385, column: 17, scope: !14454)
!14545 = !DILocation(line: 4385, column: 5, scope: !14454)
!14546 = !DILocation(line: 4386, column: 1, scope: !14454)
!14547 = distinct !DISubprogram(name: "renameGenericCommand", scope: !3, file: !3, line: 4671, type: !12086, scopeLine: 4671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14548)
!14548 = !{!14549, !14550, !14551}
!14549 = !DILocalVariable(name: "c", arg: 1, scope: !14547, file: !3, line: 4671, type: !287)
!14550 = !DILocalVariable(name: "nx", arg: 2, scope: !14547, file: !3, line: 4671, type: !45)
!14551 = !DILocalVariable(name: "o", scope: !14547, file: !3, line: 4672, type: !145)
!14552 = !DILocation(line: 0, scope: !14547)
!14553 = !DILocation(line: 4675, column: 19, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 4675, column: 9)
!14555 = !DILocation(line: 4675, column: 16, scope: !14554)
!14556 = !DILocation(line: 4675, column: 28, scope: !14554)
!14557 = !DILocation(line: 4675, column: 32, scope: !14554)
!14558 = !DILocation(line: 4675, column: 44, scope: !14554)
!14559 = !DILocation(line: 4675, column: 9, scope: !14554)
!14560 = !DILocation(line: 4675, column: 49, scope: !14554)
!14561 = !DILocation(line: 4675, column: 9, scope: !14547)
!14562 = !DILocation(line: 4676, column: 27, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 4675, column: 55)
!14564 = !{!3571, !714, i64 128}
!14565 = !DILocation(line: 4677, column: 9, scope: !14563)
!14566 = !DILocation(line: 4680, column: 41, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 4680, column: 9)
!14568 = !DILocation(line: 4680, column: 38, scope: !14567)
!14569 = !DILocation(line: 4680, column: 56, scope: !14567)
!14570 = !DILocation(line: 4680, column: 14, scope: !14567)
!14571 = !DILocation(line: 4680, column: 67, scope: !14567)
!14572 = !DILocation(line: 4680, column: 9, scope: !14547)
!14573 = !DILocation(line: 4683, column: 5, scope: !14547)
!14574 = !DILocation(line: 4684, column: 25, scope: !14547)
!14575 = !DILocation(line: 4684, column: 31, scope: !14547)
!14576 = !DILocation(line: 4684, column: 28, scope: !14547)
!14577 = !DILocation(line: 4684, column: 5, scope: !14547)
!14578 = !DILocation(line: 4685, column: 20, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 4685, column: 9)
!14580 = !DILocation(line: 4685, column: 24, scope: !14579)
!14581 = !DILocation(line: 4685, column: 32, scope: !14579)
!14582 = !DILocation(line: 4685, column: 29, scope: !14579)
!14583 = !DILocation(line: 4685, column: 40, scope: !14579)
!14584 = !DILocation(line: 4685, column: 9, scope: !14579)
!14585 = !DILocation(line: 4685, column: 43, scope: !14579)
!14586 = !DILocation(line: 4685, column: 9, scope: !14547)
!14587 = !DILocation(line: 4686, column: 13, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 4686, column: 13)
!14589 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 4685, column: 56)
!14590 = !DILocation(line: 4686, column: 13, scope: !14589)
!14591 = !DILocation(line: 4687, column: 13, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 4686, column: 17)
!14593 = !DILocation(line: 4688, column: 31, scope: !14592)
!14594 = !DILocation(line: 4689, column: 13, scope: !14592)
!14595 = !DILocation(line: 4691, column: 24, scope: !14589)
!14596 = !DILocation(line: 4691, column: 28, scope: !14589)
!14597 = !DILocation(line: 4691, column: 36, scope: !14589)
!14598 = !DILocation(line: 4691, column: 33, scope: !14589)
!14599 = !DILocation(line: 4691, column: 9, scope: !14589)
!14600 = !DILocation(line: 4692, column: 5, scope: !14589)
!14601 = !DILocation(line: 4693, column: 25, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 4692, column: 12)
!14603 = !DILocation(line: 4693, column: 22, scope: !14602)
!14604 = !DILocation(line: 4693, column: 9, scope: !14602)
!14605 = !DILocation(line: 4695, column: 18, scope: !14547)
!14606 = !DILocation(line: 4695, column: 24, scope: !14547)
!14607 = !DILocation(line: 4695, column: 21, scope: !14547)
!14608 = !DILocation(line: 4695, column: 5, scope: !14547)
!14609 = !DILocation(line: 4696, column: 17, scope: !14547)
!14610 = !DILocation(line: 4697, column: 16, scope: !14547)
!14611 = !DILocation(line: 4698, column: 1, scope: !14547)
!14612 = distinct !DISubprogram(name: "stringmatchlen", scope: !3, file: !3, line: 862, type: !14613, scopeLine: 864, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14615)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{!45, !741, !45, !741, !45, !45}
!14615 = !{!14616, !14617, !14618, !14619, !14620, !14621, !14625, !14626, !14633, !14634, !14635, !14638, !14642, !14647, !14649, !14654, !14656, !14661, !14667, !14672, !14674, !14679, !14684, !14689, !14691}
!14616 = !DILocalVariable(name: "pattern", arg: 1, scope: !14612, file: !3, line: 862, type: !741)
!14617 = !DILocalVariable(name: "patternLen", arg: 2, scope: !14612, file: !3, line: 862, type: !45)
!14618 = !DILocalVariable(name: "string", arg: 3, scope: !14612, file: !3, line: 863, type: !741)
!14619 = !DILocalVariable(name: "stringLen", arg: 4, scope: !14612, file: !3, line: 863, type: !45)
!14620 = !DILocalVariable(name: "nocase", arg: 5, scope: !14612, file: !3, line: 863, type: !45)
!14621 = !DILocalVariable(name: "not", scope: !14622, file: !3, line: 891, type: !45)
!14622 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 890, column: 9)
!14623 = distinct !DILexicalBlock(scope: !14624, file: !3, line: 866, column: 28)
!14624 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 865, column: 23)
!14625 = !DILocalVariable(name: "match", scope: !14622, file: !3, line: 891, type: !45)
!14626 = !DILocalVariable(name: "start", scope: !14627, file: !3, line: 914, type: !45)
!14627 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 913, column: 66)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !3, line: 913, column: 28)
!14629 = distinct !DILexicalBlock(scope: !14630, file: !3, line: 909, column: 28)
!14630 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 907, column: 28)
!14631 = distinct !DILexicalBlock(scope: !14632, file: !3, line: 902, column: 21)
!14632 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 901, column: 22)
!14633 = !DILocalVariable(name: "end", scope: !14627, file: !3, line: 915, type: !45)
!14634 = !DILocalVariable(name: "c", scope: !14627, file: !3, line: 916, type: !45)
!14635 = !DILocalVariable(name: "t", scope: !14636, file: !3, line: 918, type: !45)
!14636 = distinct !DILexicalBlock(scope: !14637, file: !3, line: 917, column: 38)
!14637 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 917, column: 25)
!14638 = !DILocalVariable(name: "__res", scope: !14639, file: !3, line: 923, type: !45)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !3, line: 923, column: 33)
!14640 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 922, column: 33)
!14641 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 922, column: 25)
!14642 = !DILocalVariable(name: "__c", scope: !14643, file: !3, line: 923, type: !45)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 923, column: 33)
!14644 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 923, column: 33)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !3, line: 923, column: 33)
!14646 = distinct !DILexicalBlock(scope: !14639, file: !3, line: 923, column: 33)
!14647 = !DILocalVariable(name: "__res", scope: !14648, file: !3, line: 924, type: !45)
!14648 = distinct !DILexicalBlock(scope: !14640, file: !3, line: 924, column: 31)
!14649 = !DILocalVariable(name: "__c", scope: !14650, file: !3, line: 924, type: !45)
!14650 = distinct !DILexicalBlock(scope: !14651, file: !3, line: 924, column: 31)
!14651 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 924, column: 31)
!14652 = distinct !DILexicalBlock(scope: !14653, file: !3, line: 924, column: 31)
!14653 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 924, column: 31)
!14654 = !DILocalVariable(name: "__res", scope: !14655, file: !3, line: 925, type: !45)
!14655 = distinct !DILexicalBlock(scope: !14640, file: !3, line: 925, column: 29)
!14656 = !DILocalVariable(name: "__c", scope: !14657, file: !3, line: 925, type: !45)
!14657 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 925, column: 29)
!14658 = distinct !DILexicalBlock(scope: !14659, file: !3, line: 925, column: 29)
!14659 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 925, column: 29)
!14660 = distinct !DILexicalBlock(scope: !14655, file: !3, line: 925, column: 29)
!14661 = !DILocalVariable(name: "__res", scope: !14662, file: !3, line: 936, type: !45)
!14662 = distinct !DILexicalBlock(scope: !14663, file: !3, line: 936, column: 29)
!14663 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 936, column: 29)
!14664 = distinct !DILexicalBlock(scope: !14665, file: !3, line: 935, column: 28)
!14665 = distinct !DILexicalBlock(scope: !14666, file: !3, line: 932, column: 25)
!14666 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 931, column: 24)
!14667 = !DILocalVariable(name: "__c", scope: !14668, file: !3, line: 936, type: !45)
!14668 = distinct !DILexicalBlock(scope: !14669, file: !3, line: 936, column: 29)
!14669 = distinct !DILexicalBlock(scope: !14670, file: !3, line: 936, column: 29)
!14670 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 936, column: 29)
!14671 = distinct !DILexicalBlock(scope: !14662, file: !3, line: 936, column: 29)
!14672 = !DILocalVariable(name: "__res", scope: !14673, file: !3, line: 936, type: !45)
!14673 = distinct !DILexicalBlock(scope: !14663, file: !3, line: 936, column: 57)
!14674 = !DILocalVariable(name: "__c", scope: !14675, file: !3, line: 936, type: !45)
!14675 = distinct !DILexicalBlock(scope: !14676, file: !3, line: 936, column: 57)
!14676 = distinct !DILexicalBlock(scope: !14677, file: !3, line: 936, column: 57)
!14677 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 936, column: 57)
!14678 = distinct !DILexicalBlock(scope: !14673, file: !3, line: 936, column: 57)
!14679 = !DILocalVariable(name: "__res", scope: !14680, file: !3, line: 962, type: !45)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 962, column: 21)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !3, line: 962, column: 21)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !3, line: 961, column: 20)
!14683 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 958, column: 17)
!14684 = !DILocalVariable(name: "__c", scope: !14685, file: !3, line: 962, type: !45)
!14685 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 962, column: 21)
!14686 = distinct !DILexicalBlock(scope: !14687, file: !3, line: 962, column: 21)
!14687 = distinct !DILexicalBlock(scope: !14688, file: !3, line: 962, column: 21)
!14688 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 962, column: 21)
!14689 = !DILocalVariable(name: "__res", scope: !14690, file: !3, line: 962, type: !45)
!14690 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 962, column: 49)
!14691 = !DILocalVariable(name: "__c", scope: !14692, file: !3, line: 962, type: !45)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 962, column: 49)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !3, line: 962, column: 49)
!14694 = distinct !DILexicalBlock(scope: !14695, file: !3, line: 962, column: 49)
!14695 = distinct !DILexicalBlock(scope: !14690, file: !3, line: 962, column: 49)
!14696 = !DILocation(line: 0, scope: !14612)
!14697 = !DILocation(line: 865, column: 5, scope: !14612)
!14698 = !DILocation(line: 866, column: 16, scope: !14624)
!14699 = !DILocation(line: 866, column: 9, scope: !14624)
!14700 = !DILocation(line: 868, column: 20, scope: !14623)
!14701 = !DILocation(line: 868, column: 31, scope: !14623)
!14702 = !DILocation(line: 870, column: 27, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 868, column: 39)
!14704 = !DILocation(line: 868, column: 13, scope: !14623)
!14705 = distinct !{!14705, !14704, !14706}
!14706 = !DILocation(line: 871, column: 13, scope: !14623)
!14707 = !DILocation(line: 872, column: 28, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 872, column: 17)
!14709 = !DILocation(line: 872, column: 17, scope: !14623)
!14710 = !DILocation(line: 874, column: 13, scope: !14623)
!14711 = !DILocation(line: 875, column: 21, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 875, column: 21)
!14713 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 874, column: 30)
!14714 = !DILocation(line: 875, column: 21, scope: !14713)
!14715 = !DILocation(line: 878, column: 23, scope: !14713)
!14716 = !DILocation(line: 879, column: 26, scope: !14713)
!14717 = distinct !{!14717, !14710, !14718}
!14718 = !DILocation(line: 880, column: 13, scope: !14623)
!14719 = !DILocation(line: 884, column: 27, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 884, column: 17)
!14721 = !DILocation(line: 884, column: 17, scope: !14623)
!14722 = !DILocation(line: 893, column: 20, scope: !14622)
!14723 = !DILocation(line: 895, column: 19, scope: !14622)
!14724 = !DILocation(line: 895, column: 30, scope: !14622)
!14725 = !DILocation(line: 0, scope: !14622)
!14726 = !DILocation(line: 896, column: 17, scope: !14622)
!14727 = !DILocation(line: 901, column: 13, scope: !14622)
!14728 = !DILocation(line: 902, column: 21, scope: !14631)
!14729 = !DILocation(line: 902, column: 21, scope: !14632)
!14730 = !DILocation(line: 903, column: 28, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 902, column: 41)
!14732 = !DILocation(line: 904, column: 31, scope: !14731)
!14733 = !DILocation(line: 905, column: 25, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 905, column: 25)
!14735 = !DILocation(line: 905, column: 39, scope: !14734)
!14736 = !DILocation(line: 905, column: 36, scope: !14734)
!14737 = !DILocation(line: 905, column: 25, scope: !14731)
!14738 = !DILocation(line: 909, column: 39, scope: !14629)
!14739 = !DILocation(line: 909, column: 28, scope: !14630)
!14740 = !DILocation(line: 910, column: 28, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14629, file: !3, line: 909, column: 45)
!14742 = !DILocation(line: 912, column: 21, scope: !14741)
!14743 = !DILocation(line: 913, column: 28, scope: !14628)
!14744 = !DILocation(line: 913, column: 39, scope: !14628)
!14745 = !DILocation(line: 913, column: 46, scope: !14628)
!14746 = !DILocation(line: 0, scope: !14627)
!14747 = !DILocation(line: 915, column: 31, scope: !14627)
!14748 = !DILocation(line: 916, column: 29, scope: !14627)
!14749 = !DILocation(line: 917, column: 25, scope: !14627)
!14750 = !DILocation(line: 922, column: 25, scope: !14627)
!14751 = !DILocation(line: 923, column: 33, scope: !14644)
!14752 = !DILocation(line: 0, scope: !14639)
!14753 = !DILocation(line: 924, column: 31, scope: !14651)
!14754 = !DILocation(line: 0, scope: !14648)
!14755 = !DILocation(line: 925, column: 29, scope: !14658)
!14756 = !DILocation(line: 0, scope: !14655)
!14757 = !DILocation(line: 928, column: 32, scope: !14627)
!14758 = !DILocation(line: 929, column: 27, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 929, column: 25)
!14760 = !DILocation(line: 929, column: 36, scope: !14759)
!14761 = !DILocation(line: 931, column: 17, scope: !14627)
!14762 = !DILocation(line: 932, column: 25, scope: !14666)
!14763 = !DILocation(line: 933, column: 43, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 933, column: 29)
!14765 = distinct !DILexicalBlock(scope: !14665, file: !3, line: 932, column: 34)
!14766 = !DILocation(line: 933, column: 40, scope: !14764)
!14767 = !DILocation(line: 933, column: 29, scope: !14765)
!14768 = !DILocation(line: 936, column: 29, scope: !14669)
!14769 = !DILocation(line: 0, scope: !14662)
!14770 = !DILocation(line: 936, column: 57, scope: !14676)
!14771 = !DILocation(line: 0, scope: !14673)
!14772 = !DILocation(line: 936, column: 54, scope: !14663)
!14773 = !DILocation(line: 936, column: 29, scope: !14664)
!14774 = !DILocation(line: 940, column: 24, scope: !14632)
!14775 = !DILocation(line: 941, column: 27, scope: !14632)
!14776 = distinct !{!14776, !14727, !14777}
!14777 = !DILocation(line: 942, column: 13, scope: !14622)
!14778 = !DILocation(line: 943, column: 17, scope: !14622)
!14779 = !DILocation(line: 945, column: 18, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 945, column: 17)
!14781 = !DILocation(line: 952, column: 28, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14623, file: !3, line: 952, column: 17)
!14783 = !DILocation(line: 952, column: 17, scope: !14623)
!14784 = !DILocation(line: 953, column: 24, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14782, file: !3, line: 952, column: 34)
!14786 = !DILocation(line: 954, column: 27, scope: !14785)
!14787 = !DILocation(line: 955, column: 13, scope: !14785)
!14788 = !DILocation(line: 0, scope: !14683)
!14789 = !DILocation(line: 958, column: 17, scope: !14623)
!14790 = !DILocation(line: 959, column: 35, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14792, file: !3, line: 959, column: 21)
!14792 = distinct !DILexicalBlock(scope: !14683, file: !3, line: 958, column: 26)
!14793 = !DILocation(line: 959, column: 32, scope: !14791)
!14794 = !DILocation(line: 959, column: 21, scope: !14792)
!14795 = !DILocation(line: 962, column: 21, scope: !14686)
!14796 = !DILocation(line: 0, scope: !14680)
!14797 = !DILocation(line: 962, column: 49, scope: !14693)
!14798 = !DILocation(line: 0, scope: !14690)
!14799 = !DILocation(line: 962, column: 46, scope: !14681)
!14800 = !DILocation(line: 962, column: 21, scope: !14682)
!14801 = !DILocation(line: 0, scope: !14623)
!14802 = !DILocation(line: 969, column: 16, scope: !14624)
!14803 = !DILocation(line: 970, column: 19, scope: !14624)
!14804 = !DILocation(line: 971, column: 23, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14624, file: !3, line: 971, column: 13)
!14806 = !DILocation(line: 971, column: 13, scope: !14624)
!14807 = distinct !{!14807, !14697, !14808}
!14808 = !DILocation(line: 978, column: 5, scope: !14612)
!14809 = !DILocation(line: 972, column: 19, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 971, column: 29)
!14811 = !DILocation(line: 972, column: 28, scope: !14810)
!14812 = !DILocation(line: 972, column: 13, scope: !14810)
!14813 = !DILocation(line: 973, column: 24, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 972, column: 36)
!14815 = !DILocation(line: 974, column: 27, scope: !14814)
!14816 = distinct !{!14816, !14812, !14817}
!14817 = !DILocation(line: 975, column: 13, scope: !14810)
!14818 = !DILocation(line: 979, column: 20, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 979, column: 9)
!14820 = !DILocation(line: 979, column: 25, scope: !14819)
!14821 = !DILocation(line: 982, column: 1, scope: !14612)
!14822 = distinct !DISubprogram(name: "rewriteAppendOnlyFileBackground", scope: !3, file: !3, line: 8730, type: !1709, scopeLine: 8730, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14823)
!14823 = !{!14824, !14825}
!14824 = !DILocalVariable(name: "childpid", scope: !14822, file: !3, line: 8731, type: !539)
!14825 = !DILocalVariable(name: "tmpfile", scope: !14826, file: !3, line: 8737, type: !457)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 8735, column: 35)
!14827 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 8735, column: 9)
!14828 = !DILocation(line: 8733, column: 16, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 8733, column: 9)
!14830 = !DILocation(line: 8733, column: 34, scope: !14829)
!14831 = !DILocation(line: 8733, column: 9, scope: !14822)
!14832 = !DILocation(line: 8734, column: 16, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 8734, column: 9)
!14834 = !DILocation(line: 8734, column: 9, scope: !14833)
!14835 = !DILocation(line: 8734, column: 9, scope: !14822)
!14836 = !DILocation(line: 8734, column: 28, scope: !14833)
!14837 = !DILocation(line: 8735, column: 21, scope: !14827)
!14838 = !DILocation(line: 0, scope: !14822)
!14839 = !DILocation(line: 8735, column: 9, scope: !14822)
!14840 = !DILocation(line: 8737, column: 9, scope: !14826)
!14841 = !DILocation(line: 8737, column: 14, scope: !14826)
!14842 = !DILocation(line: 8739, column: 20, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 8739, column: 13)
!14844 = !DILocation(line: 8739, column: 13, scope: !14843)
!14845 = !DILocation(line: 8739, column: 13, scope: !14826)
!14846 = !DILocation(line: 8739, column: 32, scope: !14843)
!14847 = !DILocation(line: 8740, column: 22, scope: !14826)
!14848 = !DILocation(line: 8740, column: 9, scope: !14826)
!14849 = !DILocation(line: 8741, column: 65, scope: !14826)
!14850 = !DILocation(line: 8741, column: 9, scope: !14826)
!14851 = !DILocation(line: 8742, column: 13, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 8742, column: 13)
!14853 = !DILocation(line: 8742, column: 44, scope: !14852)
!14854 = !DILocation(line: 8742, column: 13, scope: !14826)
!14855 = !DILocation(line: 8743, column: 13, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 8742, column: 57)
!14857 = !DILocation(line: 8745, column: 13, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 8744, column: 16)
!14859 = !DILocation(line: 8752, column: 26, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 8749, column: 29)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !3, line: 8749, column: 13)
!14862 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 8747, column: 12)
!14863 = !DILocation(line: 8752, column: 17, scope: !14860)
!14864 = !DILocation(line: 8750, column: 13, scope: !14860)
!14865 = !DILocation(line: 8753, column: 13, scope: !14860)
!14866 = !DILocation(line: 8755, column: 9, scope: !14862)
!14867 = !DILocation(line: 8757, column: 34, scope: !14862)
!14868 = !DILocation(line: 8758, column: 9, scope: !14862)
!14869 = !DILocation(line: 8763, column: 28, scope: !14862)
!14870 = !DILocation(line: 8764, column: 9, scope: !14862)
!14871 = !DILocation(line: 8767, column: 1, scope: !14822)
!14872 = distinct !DISubprogram(name: "rewriteAppendOnlyFile", scope: !3, file: !3, line: 8539, type: !1232, scopeLine: 8539, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14873)
!14873 = !{!14874, !14875, !14876, !14877, !14878, !14879, !14880, !14881, !14888, !14889, !14890, !14892, !14893, !14894, !14895, !14901, !14904, !14905, !14906, !14909, !14910, !14913, !14914, !14915, !14920, !14921, !14924, !14925, !14926, !14928, !14929, !14930, !14933, !14936, !14937, !14938, !14939, !14940, !14942, !14943, !14945, !14946, !14952}
!14874 = !DILocalVariable(name: "filename", arg: 1, scope: !14872, file: !3, line: 8539, type: !47)
!14875 = !DILocalVariable(name: "di", scope: !14872, file: !3, line: 8540, type: !2938)
!14876 = !DILocalVariable(name: "de", scope: !14872, file: !3, line: 8541, type: !124)
!14877 = !DILocalVariable(name: "fp", scope: !14872, file: !3, line: 8542, type: !580)
!14878 = !DILocalVariable(name: "tmpfile", scope: !14872, file: !3, line: 8543, type: !457)
!14879 = !DILocalVariable(name: "j", scope: !14872, file: !3, line: 8544, type: !45)
!14880 = !DILocalVariable(name: "now", scope: !14872, file: !3, line: 8545, type: !49)
!14881 = !DILocalVariable(name: "selectcmd", scope: !14882, file: !3, line: 8556, type: !14885)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !3, line: 8555, column: 40)
!14883 = distinct !DILexicalBlock(scope: !14884, file: !3, line: 8555, column: 5)
!14884 = distinct !DILexicalBlock(scope: !14872, file: !3, line: 8555, column: 5)
!14885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 136, elements: !14886)
!14886 = !{!14887}
!14887 = !DISubrange(count: 17)
!14888 = !DILocalVariable(name: "db", scope: !14882, file: !3, line: 8557, type: !293)
!14889 = !DILocalVariable(name: "d", scope: !14882, file: !3, line: 8558, type: !86)
!14890 = !DILocalVariable(name: "key", scope: !14891, file: !3, line: 8572, type: !145)
!14891 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 8571, column: 44)
!14892 = !DILocalVariable(name: "o", scope: !14891, file: !3, line: 8572, type: !145)
!14893 = !DILocalVariable(name: "expiretime", scope: !14891, file: !3, line: 8573, type: !49)
!14894 = !DILocalVariable(name: "swapped", scope: !14891, file: !3, line: 8574, type: !45)
!14895 = !DILocalVariable(name: "cmd", scope: !14896, file: !3, line: 8594, type: !14898)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !3, line: 8592, column: 42)
!14897 = distinct !DILexicalBlock(scope: !14891, file: !3, line: 8592, column: 17)
!14898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 112, elements: !14899)
!14899 = !{!14900}
!14900 = !DISubrange(count: 14)
!14901 = !DILocalVariable(name: "list", scope: !14902, file: !3, line: 8601, type: !58)
!14902 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 8599, column: 47)
!14903 = distinct !DILexicalBlock(scope: !14897, file: !3, line: 8599, column: 24)
!14904 = !DILocalVariable(name: "ln", scope: !14902, file: !3, line: 8602, type: !64)
!14905 = !DILocalVariable(name: "li", scope: !14902, file: !3, line: 8603, type: !831)
!14906 = !DILocalVariable(name: "cmd", scope: !14907, file: !3, line: 8607, type: !14908)
!14907 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 8606, column: 45)
!14908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !267)
!14909 = !DILocalVariable(name: "eleobj", scope: !14907, file: !3, line: 8608, type: !145)
!14910 = !DILocalVariable(name: "set", scope: !14911, file: !3, line: 8616, type: !86)
!14911 = distinct !DILexicalBlock(scope: !14912, file: !3, line: 8614, column: 46)
!14912 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 8614, column: 24)
!14913 = !DILocalVariable(name: "di", scope: !14911, file: !3, line: 8617, type: !2938)
!14914 = !DILocalVariable(name: "de", scope: !14911, file: !3, line: 8618, type: !124)
!14915 = !DILocalVariable(name: "cmd", scope: !14916, file: !3, line: 8621, type: !14917)
!14916 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 8620, column: 52)
!14917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 120, elements: !14918)
!14918 = !{!14919}
!14919 = !DISubrange(count: 15)
!14920 = !DILocalVariable(name: "eleobj", scope: !14916, file: !3, line: 8622, type: !145)
!14921 = !DILocalVariable(name: "zs", scope: !14922, file: !3, line: 8631, type: !171)
!14922 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 8629, column: 47)
!14923 = distinct !DILexicalBlock(scope: !14912, file: !3, line: 8629, column: 24)
!14924 = !DILocalVariable(name: "di", scope: !14922, file: !3, line: 8632, type: !2938)
!14925 = !DILocalVariable(name: "de", scope: !14922, file: !3, line: 8633, type: !124)
!14926 = !DILocalVariable(name: "cmd", scope: !14927, file: !3, line: 8636, type: !14917)
!14927 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 8635, column: 52)
!14928 = !DILocalVariable(name: "eleobj", scope: !14927, file: !3, line: 8637, type: !145)
!14929 = !DILocalVariable(name: "score", scope: !14927, file: !3, line: 8638, type: !198)
!14930 = !DILocalVariable(name: "cmd", scope: !14931, file: !3, line: 8647, type: !14917)
!14931 = distinct !DILexicalBlock(scope: !14932, file: !3, line: 8646, column: 47)
!14932 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 8646, column: 24)
!14933 = !DILocalVariable(name: "p", scope: !14934, file: !3, line: 8651, type: !167)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !3, line: 8650, column: 59)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !3, line: 8650, column: 21)
!14936 = !DILocalVariable(name: "field", scope: !14934, file: !3, line: 8652, type: !167)
!14937 = !DILocalVariable(name: "val", scope: !14934, file: !3, line: 8652, type: !167)
!14938 = !DILocalVariable(name: "flen", scope: !14934, file: !3, line: 8653, type: !7)
!14939 = !DILocalVariable(name: "vlen", scope: !14934, file: !3, line: 8653, type: !7)
!14940 = !DILocalVariable(name: "di", scope: !14941, file: !3, line: 8664, type: !2938)
!14941 = distinct !DILexicalBlock(scope: !14935, file: !3, line: 8663, column: 24)
!14942 = !DILocalVariable(name: "de", scope: !14941, file: !3, line: 8665, type: !124)
!14943 = !DILocalVariable(name: "field", scope: !14944, file: !3, line: 8668, type: !145)
!14944 = distinct !DILexicalBlock(scope: !14941, file: !3, line: 8667, column: 56)
!14945 = !DILocalVariable(name: "val", scope: !14944, file: !3, line: 8669, type: !145)
!14946 = !DILocalVariable(name: "cmd", scope: !14947, file: !3, line: 8683, type: !14949)
!14947 = distinct !DILexicalBlock(scope: !14948, file: !3, line: 8682, column: 35)
!14948 = distinct !DILexicalBlock(scope: !14891, file: !3, line: 8682, column: 17)
!14949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 152, elements: !14950)
!14950 = !{!14951}
!14951 = !DISubrange(count: 19)
!14952 = !DILabel(scope: !14872, name: "werr", file: !3, line: 8710)
!14953 = !DILocation(line: 0, scope: !14872)
!14954 = !DILocation(line: 8543, column: 5, scope: !14872)
!14955 = !DILocation(line: 8543, column: 10, scope: !14872)
!14956 = !DILocation(line: 8545, column: 18, scope: !14872)
!14957 = !DILocation(line: 8549, column: 58, scope: !14872)
!14958 = !DILocation(line: 8549, column: 5, scope: !14872)
!14959 = !DILocation(line: 8550, column: 10, scope: !14872)
!14960 = !DILocation(line: 8551, column: 10, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14872, file: !3, line: 8551, column: 9)
!14962 = !DILocation(line: 8551, column: 9, scope: !14872)
!14963 = !DILocation(line: 8555, column: 28, scope: !14883)
!14964 = !DILocation(line: 8555, column: 19, scope: !14883)
!14965 = !DILocation(line: 8555, column: 5, scope: !14884)
!14966 = !DILocation(line: 8552, column: 87, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14961, file: !3, line: 8551, column: 14)
!14968 = !DILocation(line: 8552, column: 78, scope: !14967)
!14969 = !DILocation(line: 8552, column: 9, scope: !14967)
!14970 = !DILocation(line: 8553, column: 9, scope: !14967)
!14971 = !DILocation(line: 8556, column: 9, scope: !14882)
!14972 = !DILocation(line: 8556, column: 14, scope: !14882)
!14973 = !DILocation(line: 8557, column: 30, scope: !14882)
!14974 = !DILocation(line: 8557, column: 32, scope: !14882)
!14975 = !DILocation(line: 0, scope: !14882)
!14976 = !DILocation(line: 8558, column: 23, scope: !14882)
!14977 = !DILocation(line: 8559, column: 13, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 8559, column: 13)
!14979 = !DILocation(line: 8559, column: 25, scope: !14978)
!14980 = !DILocation(line: 8559, column: 13, scope: !14882)
!14981 = !DILocation(line: 8560, column: 14, scope: !14882)
!14982 = !DILocation(line: 8561, column: 14, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 8561, column: 13)
!14984 = !DILocation(line: 8561, column: 13, scope: !14882)
!14985 = !DILocation(line: 8562, column: 13, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14983, file: !3, line: 8561, column: 18)
!14987 = !DILocation(line: 8693, column: 5, scope: !14883)
!14988 = !DILocation(line: 8567, column: 13, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 8567, column: 13)
!14990 = !DILocation(line: 8567, column: 56, scope: !14989)
!14991 = !DILocation(line: 8567, column: 13, scope: !14882)
!14992 = !DILocation(line: 8568, column: 13, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 8568, column: 13)
!14994 = !DILocation(line: 8568, column: 34, scope: !14993)
!14995 = !DILocation(line: 8568, column: 13, scope: !14882)
!14996 = !DILocation(line: 8571, column: 21, scope: !14882)
!14997 = !DILocation(line: 8571, column: 35, scope: !14882)
!14998 = !DILocation(line: 8571, column: 9, scope: !14882)
!14999 = !DILocation(line: 8576, column: 19, scope: !14891)
!15000 = !DILocation(line: 0, scope: !14891)
!15001 = !DILocation(line: 8581, column: 25, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14891, file: !3, line: 8581, column: 17)
!15003 = !DILocation(line: 8581, column: 18, scope: !15002)
!15004 = !DILocation(line: 8581, column: 36, scope: !15002)
!15005 = !DILocation(line: 8581, column: 44, scope: !15002)
!15006 = !DILocation(line: 8581, column: 71, scope: !15002)
!15007 = !DILocation(line: 8583, column: 21, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 8582, column: 52)
!15009 = !DILocation(line: 8585, column: 13, scope: !15008)
!15010 = !DILocation(line: 8586, column: 21, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 8585, column: 20)
!15012 = !DILocation(line: 0, scope: !15002)
!15013 = !DILocation(line: 8589, column: 26, scope: !14891)
!15014 = !DILocation(line: 8592, column: 20, scope: !14897)
!15015 = !DILocation(line: 8592, column: 17, scope: !14891)
!15016 = !DILocation(line: 8594, column: 17, scope: !14896)
!15017 = !DILocation(line: 8594, column: 22, scope: !14896)
!15018 = !DILocation(line: 8595, column: 21, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14896, file: !3, line: 8595, column: 21)
!15020 = !DILocation(line: 8595, column: 52, scope: !15019)
!15021 = !DILocation(line: 8595, column: 21, scope: !14896)
!15022 = !DILocation(line: 8597, column: 21, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !14896, file: !3, line: 8597, column: 21)
!15024 = !DILocation(line: 8597, column: 46, scope: !15023)
!15025 = !DILocation(line: 8597, column: 21, scope: !14896)
!15026 = !DILocation(line: 8599, column: 13, scope: !14897)
!15027 = !DILocation(line: 8598, column: 21, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !14896, file: !3, line: 8598, column: 21)
!15029 = !DILocation(line: 8598, column: 44, scope: !15028)
!15030 = !DILocation(line: 8601, column: 33, scope: !14902)
!15031 = !DILocation(line: 0, scope: !14902)
!15032 = !DILocation(line: 8603, column: 17, scope: !14902)
!15033 = !DILocation(line: 8603, column: 26, scope: !14902)
!15034 = !DILocation(line: 8605, column: 17, scope: !14902)
!15035 = !DILocation(line: 8606, column: 17, scope: !14902)
!15036 = !DILocation(line: 8606, column: 29, scope: !14902)
!15037 = !DILocation(line: 8614, column: 13, scope: !14903)
!15038 = !DILocation(line: 8607, column: 21, scope: !14907)
!15039 = !DILocation(line: 8607, column: 26, scope: !14907)
!15040 = !DILocation(line: 8608, column: 36, scope: !14907)
!15041 = !DILocation(line: 0, scope: !14907)
!15042 = !DILocation(line: 8610, column: 25, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 8610, column: 25)
!15044 = !DILocation(line: 8610, column: 56, scope: !15043)
!15045 = !DILocation(line: 8610, column: 25, scope: !14907)
!15046 = !DILocation(line: 8611, column: 25, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 8611, column: 25)
!15048 = !DILocation(line: 8611, column: 50, scope: !15047)
!15049 = !DILocation(line: 8611, column: 25, scope: !14907)
!15050 = !DILocation(line: 8613, column: 17, scope: !14902)
!15051 = !DILocation(line: 8612, column: 25, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 8612, column: 25)
!15053 = !DILocation(line: 8612, column: 53, scope: !15052)
!15054 = distinct !{!15054, !15035, !15050}
!15055 = !DILocation(line: 8616, column: 32, scope: !14911)
!15056 = !DILocation(line: 0, scope: !14911)
!15057 = !DILocation(line: 8617, column: 36, scope: !14911)
!15058 = !DILocation(line: 8620, column: 17, scope: !14911)
!15059 = !DILocation(line: 8620, column: 29, scope: !14911)
!15060 = !DILocation(line: 8620, column: 43, scope: !14911)
!15061 = !DILocation(line: 8621, column: 21, scope: !14916)
!15062 = !DILocation(line: 8621, column: 26, scope: !14916)
!15063 = !DILocation(line: 8622, column: 36, scope: !14916)
!15064 = !DILocation(line: 0, scope: !14916)
!15065 = !DILocation(line: 8624, column: 25, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 8624, column: 25)
!15067 = !DILocation(line: 8624, column: 56, scope: !15066)
!15068 = !DILocation(line: 8624, column: 25, scope: !14916)
!15069 = !DILocation(line: 8625, column: 25, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 8625, column: 25)
!15071 = !DILocation(line: 8625, column: 50, scope: !15070)
!15072 = !DILocation(line: 8625, column: 25, scope: !14916)
!15073 = !DILocation(line: 8627, column: 17, scope: !14911)
!15074 = !DILocation(line: 8626, column: 25, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 8626, column: 25)
!15076 = !DILocation(line: 8626, column: 53, scope: !15075)
!15077 = distinct !{!15077, !15058, !15073}
!15078 = !DILocation(line: 8628, column: 17, scope: !14911)
!15079 = !DILocation(line: 8631, column: 31, scope: !14922)
!15080 = !DILocation(line: 0, scope: !14922)
!15081 = !DILocation(line: 8632, column: 56, scope: !14922)
!15082 = !DILocation(line: 8632, column: 36, scope: !14922)
!15083 = !DILocation(line: 8635, column: 17, scope: !14922)
!15084 = !DILocation(line: 8635, column: 29, scope: !14922)
!15085 = !DILocation(line: 8635, column: 43, scope: !14922)
!15086 = !DILocation(line: 8636, column: 21, scope: !14927)
!15087 = !DILocation(line: 8636, column: 26, scope: !14927)
!15088 = !DILocation(line: 8637, column: 36, scope: !14927)
!15089 = !DILocation(line: 0, scope: !14927)
!15090 = !DILocation(line: 8638, column: 37, scope: !14927)
!15091 = !DILocation(line: 8640, column: 25, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 8640, column: 25)
!15093 = !DILocation(line: 8640, column: 56, scope: !15092)
!15094 = !DILocation(line: 8640, column: 25, scope: !14927)
!15095 = !DILocation(line: 8641, column: 25, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 8641, column: 25)
!15097 = !DILocation(line: 8641, column: 50, scope: !15096)
!15098 = !DILocation(line: 8641, column: 25, scope: !14927)
!15099 = !DILocation(line: 8642, column: 45, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 8642, column: 25)
!15101 = !DILocation(line: 8642, column: 25, scope: !15100)
!15102 = !DILocation(line: 8642, column: 53, scope: !15100)
!15103 = !DILocation(line: 8642, column: 25, scope: !14927)
!15104 = !DILocation(line: 8644, column: 17, scope: !14922)
!15105 = !DILocation(line: 8643, column: 25, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 8643, column: 25)
!15107 = !DILocation(line: 8643, column: 53, scope: !15106)
!15108 = distinct !{!15108, !15083, !15104}
!15109 = !DILocation(line: 8645, column: 17, scope: !14922)
!15110 = !DILocation(line: 8647, column: 17, scope: !14931)
!15111 = !DILocation(line: 8647, column: 22, scope: !14931)
!15112 = !DILocation(line: 8650, column: 24, scope: !14935)
!15113 = !DILocation(line: 8650, column: 33, scope: !14935)
!15114 = !DILocation(line: 8650, column: 21, scope: !14931)
!15115 = !DILocation(line: 8651, column: 56, scope: !14934)
!15116 = !DILocation(line: 8651, column: 40, scope: !14934)
!15117 = !DILocation(line: 0, scope: !14934)
!15118 = !DILocation(line: 8652, column: 21, scope: !14934)
!15119 = !DILocation(line: 8653, column: 21, scope: !14934)
!15120 = !DILocation(line: 8655, column: 21, scope: !14934)
!15121 = !DILocation(line: 8655, column: 32, scope: !14934)
!15122 = !DILocation(line: 8655, column: 71, scope: !14934)
!15123 = !DILocation(line: 8656, column: 29, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 8656, column: 29)
!15125 = distinct !DILexicalBlock(scope: !14934, file: !3, line: 8655, column: 80)
!15126 = !DILocation(line: 8656, column: 60, scope: !15124)
!15127 = !DILocation(line: 8656, column: 29, scope: !15125)
!15128 = !DILocation(line: 8657, column: 29, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 8657, column: 29)
!15130 = !DILocation(line: 8657, column: 54, scope: !15129)
!15131 = !DILocation(line: 8657, column: 29, scope: !15125)
!15132 = !DILocation(line: 8658, column: 56, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 8658, column: 29)
!15134 = !DILocation(line: 8658, column: 62, scope: !15133)
!15135 = !DILocation(line: 8658, column: 29, scope: !15133)
!15136 = !DILocation(line: 8658, column: 68, scope: !15133)
!15137 = !DILocation(line: 8658, column: 29, scope: !15125)
!15138 = !DILocation(line: 8660, column: 56, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 8660, column: 29)
!15140 = !DILocation(line: 8660, column: 60, scope: !15139)
!15141 = !DILocation(line: 8660, column: 29, scope: !15139)
!15142 = !DILocation(line: 8660, column: 66, scope: !15139)
!15143 = !DILocation(line: 8660, column: 29, scope: !15125)
!15144 = distinct !{!15144, !15120, !15145}
!15145 = !DILocation(line: 8662, column: 21, scope: !14934)
!15146 = !DILocation(line: 8663, column: 17, scope: !14935)
!15147 = !DILocation(line: 8664, column: 59, scope: !14941)
!15148 = !DILocation(line: 8664, column: 40, scope: !14941)
!15149 = !DILocation(line: 0, scope: !14941)
!15150 = !DILocation(line: 8667, column: 21, scope: !14941)
!15151 = !DILocation(line: 8667, column: 33, scope: !14941)
!15152 = !DILocation(line: 8667, column: 47, scope: !14941)
!15153 = !DILocation(line: 8668, column: 39, scope: !14944)
!15154 = !DILocation(line: 0, scope: !14944)
!15155 = !DILocation(line: 8669, column: 37, scope: !14944)
!15156 = !DILocation(line: 8671, column: 29, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !14944, file: !3, line: 8671, column: 29)
!15158 = !DILocation(line: 8671, column: 60, scope: !15157)
!15159 = !DILocation(line: 8671, column: 29, scope: !14944)
!15160 = !DILocation(line: 8672, column: 29, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !14944, file: !3, line: 8672, column: 29)
!15162 = !DILocation(line: 8672, column: 54, scope: !15161)
!15163 = !DILocation(line: 8672, column: 29, scope: !14944)
!15164 = !DILocation(line: 8673, column: 29, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !14944, file: !3, line: 8673, column: 29)
!15166 = !DILocation(line: 8673, column: 56, scope: !15165)
!15167 = !DILocation(line: 8673, column: 29, scope: !14944)
!15168 = !DILocation(line: 8674, column: 29, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !14944, file: !3, line: 8674, column: 29)
!15170 = !DILocation(line: 8674, column: 54, scope: !15169)
!15171 = distinct !{!15171, !15150, !15172}
!15172 = !DILocation(line: 8675, column: 21, scope: !14941)
!15173 = !DILocation(line: 8676, column: 21, scope: !14941)
!15174 = !DILocation(line: 8678, column: 13, scope: !14932)
!15175 = !DILocation(line: 8679, column: 17, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !14932, file: !3, line: 8678, column: 20)
!15177 = !DILocation(line: 8682, column: 28, scope: !14948)
!15178 = !DILocation(line: 8682, column: 17, scope: !14891)
!15179 = !DILocation(line: 8683, column: 17, scope: !14947)
!15180 = !DILocation(line: 8683, column: 22, scope: !14947)
!15181 = !DILocation(line: 8685, column: 32, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 8685, column: 21)
!15183 = !DILocation(line: 8685, column: 21, scope: !14947)
!15184 = distinct !{!15184, !14998, !15185}
!15185 = !DILocation(line: 8691, column: 9, scope: !14882)
!15186 = !DILocation(line: 8686, column: 21, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 8686, column: 21)
!15188 = !DILocation(line: 8686, column: 52, scope: !15187)
!15189 = !DILocation(line: 8686, column: 21, scope: !14947)
!15190 = !DILocation(line: 8687, column: 21, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 8687, column: 21)
!15192 = !DILocation(line: 8687, column: 46, scope: !15191)
!15193 = !DILocation(line: 8687, column: 21, scope: !14947)
!15194 = !DILocation(line: 8689, column: 13, scope: !14948)
!15195 = !DILocation(line: 8688, column: 21, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 8688, column: 21)
!15197 = !DILocation(line: 8688, column: 51, scope: !15196)
!15198 = !DILocation(line: 8690, column: 17, scope: !14891)
!15199 = !DILocation(line: 8690, column: 39, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !14891, file: !3, line: 8690, column: 17)
!15201 = !DILocation(line: 8690, column: 26, scope: !15200)
!15202 = !DILocation(line: 8692, column: 9, scope: !14882)
!15203 = !DILocation(line: 8555, column: 36, scope: !14883)
!15204 = distinct !{!15204, !14965, !15205}
!15205 = !DILocation(line: 8693, column: 5, scope: !14884)
!15206 = !DILocation(line: 8696, column: 5, scope: !14872)
!15207 = !DILocation(line: 8697, column: 11, scope: !14872)
!15208 = !DILocation(line: 8697, column: 5, scope: !14872)
!15209 = !DILocation(line: 8698, column: 5, scope: !14872)
!15210 = !DILocation(line: 8702, column: 9, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !14872, file: !3, line: 8702, column: 9)
!15212 = !DILocation(line: 8702, column: 34, scope: !15211)
!15213 = !DILocation(line: 8702, column: 9, scope: !14872)
!15214 = !DILocation(line: 8703, column: 108, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15211, file: !3, line: 8702, column: 41)
!15216 = !DILocation(line: 8703, column: 99, scope: !15215)
!15217 = !DILocation(line: 8703, column: 9, scope: !15215)
!15218 = !DILocation(line: 8704, column: 9, scope: !15215)
!15219 = !DILocation(line: 8705, column: 9, scope: !15215)
!15220 = !DILocation(line: 8707, column: 5, scope: !14872)
!15221 = !DILocation(line: 8708, column: 5, scope: !14872)
!15222 = !DILocation(line: 8710, column: 1, scope: !14872)
!15223 = !DILocation(line: 8711, column: 5, scope: !14872)
!15224 = !DILocation(line: 8712, column: 5, scope: !14872)
!15225 = !DILocation(line: 8713, column: 89, scope: !14872)
!15226 = !DILocation(line: 8713, column: 80, scope: !14872)
!15227 = !DILocation(line: 8713, column: 5, scope: !14872)
!15228 = !DILocation(line: 8714, column: 13, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !14872, file: !3, line: 8714, column: 9)
!15230 = !DILocation(line: 8716, column: 1, scope: !14872)
!15231 = distinct !DISubprogram(name: "fwriteBulkLong", scope: !3, file: !3, line: 8527, type: !15232, scopeLine: 8527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15234)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{!45, !580, !53}
!15234 = !{!15235, !15236, !15237, !15238}
!15235 = !DILocalVariable(name: "fp", arg: 1, scope: !15231, file: !3, line: 8527, type: !580)
!15236 = !DILocalVariable(name: "l", arg: 2, scope: !15231, file: !3, line: 8527, type: !53)
!15237 = !DILocalVariable(name: "buf", scope: !15231, file: !3, line: 8528, type: !1247)
!15238 = !DILocalVariable(name: "lbuf", scope: !15231, file: !3, line: 8528, type: !1247)
!15239 = !DILocation(line: 0, scope: !15231)
!15240 = !DILocation(line: 8528, column: 5, scope: !15231)
!15241 = !DILocation(line: 8528, column: 10, scope: !15231)
!15242 = !DILocation(line: 8528, column: 20, scope: !15231)
!15243 = !DILocation(line: 8530, column: 5, scope: !15231)
!15244 = !DILocation(line: 8531, column: 56, scope: !15231)
!15245 = !DILocation(line: 8531, column: 68, scope: !15231)
!15246 = !DILocation(line: 8531, column: 5, scope: !15231)
!15247 = !DILocation(line: 8532, column: 20, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 8532, column: 9)
!15249 = !DILocation(line: 8532, column: 9, scope: !15248)
!15250 = !DILocation(line: 8532, column: 38, scope: !15248)
!15251 = !DILocation(line: 8532, column: 9, scope: !15231)
!15252 = !DILocation(line: 8533, column: 21, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 8533, column: 9)
!15254 = !DILocation(line: 8533, column: 9, scope: !15253)
!15255 = !DILocation(line: 8533, column: 40, scope: !15253)
!15256 = !DILocation(line: 8535, column: 1, scope: !15231)
!15257 = distinct !DISubprogram(name: "fwriteBulkObject", scope: !3, file: !3, line: 8478, type: !7029, scopeLine: 8478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15258)
!15258 = !{!15259, !15260, !15261, !15262, !15263}
!15259 = !DILocalVariable(name: "fp", arg: 1, scope: !15257, file: !3, line: 8478, type: !580)
!15260 = !DILocalVariable(name: "obj", arg: 2, scope: !15257, file: !3, line: 8478, type: !145)
!15261 = !DILocalVariable(name: "buf", scope: !15257, file: !3, line: 8479, type: !1247)
!15262 = !DILocalVariable(name: "decrrc", scope: !15257, file: !3, line: 8480, type: !45)
!15263 = !DILabel(scope: !15257, name: "err", file: !3, line: 8498)
!15264 = !DILocation(line: 0, scope: !15257)
!15265 = !DILocation(line: 8479, column: 5, scope: !15257)
!15266 = !DILocation(line: 8479, column: 10, scope: !15257)
!15267 = !DILocation(line: 8487, column: 14, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15257, file: !3, line: 8487, column: 9)
!15269 = !DILocation(line: 8487, column: 23, scope: !15268)
!15270 = !DILocation(line: 8487, column: 9, scope: !15257)
!15271 = !DILocation(line: 8488, column: 15, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15268, file: !3, line: 8487, column: 46)
!15273 = !DILocation(line: 8490, column: 5, scope: !15272)
!15274 = !DILocation(line: 8491, column: 59, scope: !15257)
!15275 = !DILocation(line: 8491, column: 47, scope: !15257)
!15276 = !DILocation(line: 8491, column: 5, scope: !15257)
!15277 = !DILocation(line: 8492, column: 20, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15257, file: !3, line: 8492, column: 9)
!15279 = !DILocation(line: 8492, column: 9, scope: !15278)
!15280 = !DILocation(line: 8492, column: 38, scope: !15278)
!15281 = !DILocation(line: 8492, column: 9, scope: !15257)
!15282 = !DILocation(line: 8493, column: 21, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15257, file: !3, line: 8493, column: 9)
!15284 = !DILocation(line: 8493, column: 9, scope: !15283)
!15285 = !DILocation(line: 8493, column: 26, scope: !15283)
!15286 = !DILocation(line: 8493, column: 41, scope: !15283)
!15287 = !DILocation(line: 8493, column: 45, scope: !15283)
!15288 = !DILocation(line: 8493, column: 29, scope: !15283)
!15289 = !DILocation(line: 8493, column: 68, scope: !15283)
!15290 = !DILocation(line: 8493, column: 9, scope: !15257)
!15291 = !DILocation(line: 8495, column: 9, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15257, file: !3, line: 8495, column: 9)
!15293 = !DILocation(line: 8495, column: 31, scope: !15292)
!15294 = !DILocation(line: 8495, column: 9, scope: !15257)
!15295 = !DILocation(line: 8496, column: 9, scope: !15257)
!15296 = !DILocation(line: 8498, column: 1, scope: !15257)
!15297 = !DILocation(line: 8499, column: 9, scope: !15257)
!15298 = !DILocation(line: 8501, column: 1, scope: !15257)
!15299 = distinct !DISubprogram(name: "fwriteBulkDouble", scope: !3, file: !3, line: 8516, type: !7319, scopeLine: 8516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15300)
!15300 = !{!15301, !15302, !15303, !15304}
!15301 = !DILocalVariable(name: "fp", arg: 1, scope: !15299, file: !3, line: 8516, type: !580)
!15302 = !DILocalVariable(name: "d", arg: 2, scope: !15299, file: !3, line: 8516, type: !168)
!15303 = !DILocalVariable(name: "buf", scope: !15299, file: !3, line: 8517, type: !1247)
!15304 = !DILocalVariable(name: "dbuf", scope: !15299, file: !3, line: 8517, type: !1247)
!15305 = !DILocation(line: 0, scope: !15299)
!15306 = !DILocation(line: 8517, column: 5, scope: !15299)
!15307 = !DILocation(line: 8517, column: 10, scope: !15299)
!15308 = !DILocation(line: 8517, column: 20, scope: !15299)
!15309 = !DILocation(line: 8519, column: 5, scope: !15299)
!15310 = !DILocation(line: 8520, column: 56, scope: !15299)
!15311 = !DILocation(line: 8520, column: 68, scope: !15299)
!15312 = !DILocation(line: 8520, column: 5, scope: !15299)
!15313 = !DILocation(line: 8521, column: 20, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15299, file: !3, line: 8521, column: 9)
!15315 = !DILocation(line: 8521, column: 9, scope: !15314)
!15316 = !DILocation(line: 8521, column: 38, scope: !15314)
!15317 = !DILocation(line: 8521, column: 9, scope: !15299)
!15318 = !DILocation(line: 8522, column: 21, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15299, file: !3, line: 8522, column: 9)
!15320 = !DILocation(line: 8522, column: 9, scope: !15319)
!15321 = !DILocation(line: 8522, column: 40, scope: !15319)
!15322 = !DILocation(line: 8524, column: 1, scope: !15299)
!15323 = distinct !DISubprogram(name: "fwriteBulkString", scope: !3, file: !3, line: 8505, type: !15324, scopeLine: 8505, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15326)
!15324 = !DISubroutineType(types: !15325)
!15325 = !{!45, !580, !47, !55}
!15326 = !{!15327, !15328, !15329, !15330}
!15327 = !DILocalVariable(name: "fp", arg: 1, scope: !15323, file: !3, line: 8505, type: !580)
!15328 = !DILocalVariable(name: "s", arg: 2, scope: !15323, file: !3, line: 8505, type: !47)
!15329 = !DILocalVariable(name: "len", arg: 3, scope: !15323, file: !3, line: 8505, type: !55)
!15330 = !DILocalVariable(name: "buf", scope: !15323, file: !3, line: 8506, type: !1247)
!15331 = !DILocation(line: 0, scope: !15323)
!15332 = !DILocation(line: 8506, column: 5, scope: !15323)
!15333 = !DILocation(line: 8506, column: 10, scope: !15323)
!15334 = !DILocation(line: 8508, column: 5, scope: !15323)
!15335 = !DILocation(line: 8509, column: 20, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 8509, column: 9)
!15337 = !DILocation(line: 8509, column: 9, scope: !15336)
!15338 = !DILocation(line: 8509, column: 38, scope: !15336)
!15339 = !DILocation(line: 8509, column: 9, scope: !15323)
!15340 = !DILocation(line: 8510, column: 9, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 8510, column: 9)
!15342 = !DILocation(line: 8510, column: 13, scope: !15341)
!15343 = !DILocation(line: 8510, column: 16, scope: !15341)
!15344 = !DILocation(line: 8510, column: 35, scope: !15341)
!15345 = !DILocation(line: 8510, column: 9, scope: !15323)
!15346 = !DILocation(line: 8511, column: 9, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 8511, column: 9)
!15348 = !DILocation(line: 8511, column: 31, scope: !15347)
!15349 = !DILocation(line: 8513, column: 1, scope: !15323)
!15350 = distinct !DISubprogram(name: "prepareForShutdown", scope: !3, file: !3, line: 4193, type: !1709, scopeLine: 4193, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!15351 = !DILocation(line: 4194, column: 5, scope: !15350)
!15352 = !DILocation(line: 4198, column: 16, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 4198, column: 9)
!15354 = !DILocation(line: 4198, column: 31, scope: !15353)
!15355 = !DILocation(line: 4198, column: 9, scope: !15350)
!15356 = !DILocation(line: 4199, column: 9, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 4198, column: 38)
!15358 = !DILocation(line: 4200, column: 21, scope: !15357)
!15359 = !DILocation(line: 4200, column: 9, scope: !15357)
!15360 = !DILocation(line: 4201, column: 34, scope: !15357)
!15361 = !DILocation(line: 4201, column: 9, scope: !15357)
!15362 = !DILocation(line: 4202, column: 5, scope: !15357)
!15363 = !DILocation(line: 4203, column: 16, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 4203, column: 9)
!15365 = !DILocation(line: 4203, column: 9, scope: !15364)
!15366 = !DILocation(line: 4203, column: 9, scope: !15350)
!15367 = !DILocation(line: 4205, column: 22, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 4203, column: 28)
!15369 = !DILocation(line: 4205, column: 9, scope: !15368)
!15370 = !DILocation(line: 4206, column: 20, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 4206, column: 13)
!15372 = !DILocation(line: 4206, column: 13, scope: !15371)
!15373 = !DILocation(line: 4206, column: 13, scope: !15368)
!15374 = !DILocation(line: 4206, column: 46, scope: !15371)
!15375 = !DILocation(line: 4206, column: 32, scope: !15371)
!15376 = !DILocation(line: 4209, column: 28, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 4209, column: 13)
!15378 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 4207, column: 12)
!15379 = !DILocation(line: 4209, column: 13, scope: !15377)
!15380 = !DILocation(line: 4209, column: 40, scope: !15377)
!15381 = !DILocation(line: 4209, column: 13, scope: !15378)
!15382 = !DILocation(line: 4210, column: 24, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15384, file: !3, line: 4210, column: 17)
!15384 = distinct !DILexicalBlock(scope: !15377, file: !3, line: 4209, column: 53)
!15385 = !DILocation(line: 4210, column: 17, scope: !15383)
!15386 = !DILocation(line: 4210, column: 17, scope: !15384)
!15387 = !DILocation(line: 4211, column: 31, scope: !15383)
!15388 = !DILocation(line: 4211, column: 17, scope: !15383)
!15389 = !DILocation(line: 4212, column: 61, scope: !15384)
!15390 = !DILocation(line: 4212, column: 13, scope: !15384)
!15391 = !DILocation(line: 0, scope: !15350)
!15392 = !DILocation(line: 4225, column: 1, scope: !15350)
!15393 = !DISubprogram(name: "kill", scope: !200, file: !200, line: 112, type: !15394, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15394 = !DISubroutineType(types: !15395)
!15395 = !{!45, !541, !45}
!15396 = !DISubprogram(name: "listDup", scope: !60, file: !60, line: 81, type: !15397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!58, !58}
!15399 = !DISubprogram(name: "dictEmpty", scope: !88, file: !88, line: 140, type: !2991, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15400 = distinct !DISubprogram(name: "emptyDb", scope: !3, file: !3, line: 1788, type: !15401, scopeLine: 1788, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15403)
!15401 = !DISubroutineType(types: !15402)
!15402 = !{!54}
!15403 = !{!15404, !15405}
!15404 = !DILocalVariable(name: "j", scope: !15400, file: !3, line: 1789, type: !45)
!15405 = !DILocalVariable(name: "removed", scope: !15400, file: !3, line: 1790, type: !54)
!15406 = !DILocation(line: 0, scope: !15400)
!15407 = !DILocation(line: 1792, column: 28, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15409, file: !3, line: 1792, column: 5)
!15409 = distinct !DILexicalBlock(scope: !15400, file: !3, line: 1792, column: 5)
!15410 = !DILocation(line: 1792, column: 19, scope: !15408)
!15411 = !DILocation(line: 1792, column: 5, scope: !15409)
!15412 = !DILocation(line: 1793, column: 20, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 1792, column: 40)
!15414 = !DILocation(line: 1793, column: 17, scope: !15413)
!15415 = !DILocation(line: 1794, column: 9, scope: !15413)
!15416 = !DILocation(line: 1795, column: 26, scope: !15413)
!15417 = !DILocation(line: 1795, column: 32, scope: !15413)
!15418 = !DILocation(line: 1795, column: 9, scope: !15413)
!15419 = !DILocation(line: 1792, column: 36, scope: !15408)
!15420 = distinct !{!15420, !15411, !15421}
!15421 = !DILocation(line: 1796, column: 5, scope: !15409)
!15422 = !DILocation(line: 1797, column: 5, scope: !15400)
!15423 = distinct !DISubprogram(name: "createSortOperation", scope: !3, file: !3, line: 6824, type: !15424, scopeLine: 6824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{!11027, !45, !145}
!15426 = !{!15427, !15428, !15429}
!15427 = !DILocalVariable(name: "type", arg: 1, scope: !15423, file: !3, line: 6824, type: !45)
!15428 = !DILocalVariable(name: "pattern", arg: 2, scope: !15423, file: !3, line: 6824, type: !145)
!15429 = !DILocalVariable(name: "so", scope: !15423, file: !3, line: 6825, type: !11027)
!15430 = !DILocation(line: 0, scope: !15423)
!15431 = !DILocation(line: 6825, column: 30, scope: !15423)
!15432 = !DILocation(line: 6826, column: 9, scope: !15423)
!15433 = !DILocation(line: 6826, column: 14, scope: !15423)
!15434 = !DILocation(line: 6827, column: 9, scope: !15423)
!15435 = !DILocation(line: 6827, column: 17, scope: !15423)
!15436 = !DILocation(line: 6828, column: 5, scope: !15423)
!15437 = distinct !DISubprogram(name: "lookupKeyByPattern", scope: !3, file: !3, line: 6835, type: !15438, scopeLine: 6835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15440)
!15438 = !DISubroutineType(types: !15439)
!15439 = !{!145, !293, !145, !145}
!15440 = !{!15441, !15442, !15443, !15444, !15445, !15446, !15447, !15448, !15449, !15450, !15451, !15452, !15453, !15454, !15455, !15461}
!15441 = !DILocalVariable(name: "db", arg: 1, scope: !15437, file: !3, line: 6835, type: !293)
!15442 = !DILocalVariable(name: "pattern", arg: 2, scope: !15437, file: !3, line: 6835, type: !145)
!15443 = !DILocalVariable(name: "subst", arg: 3, scope: !15437, file: !3, line: 6835, type: !145)
!15444 = !DILocalVariable(name: "p", scope: !15437, file: !3, line: 6836, type: !47)
!15445 = !DILocalVariable(name: "f", scope: !15437, file: !3, line: 6836, type: !47)
!15446 = !DILocalVariable(name: "spat", scope: !15437, file: !3, line: 6837, type: !165)
!15447 = !DILocalVariable(name: "ssub", scope: !15437, file: !3, line: 6837, type: !165)
!15448 = !DILocalVariable(name: "keyobj", scope: !15437, file: !3, line: 6838, type: !146)
!15449 = !DILocalVariable(name: "fieldobj", scope: !15437, file: !3, line: 6838, type: !146)
!15450 = !DILocalVariable(name: "o", scope: !15437, file: !3, line: 6838, type: !145)
!15451 = !DILocalVariable(name: "prefixlen", scope: !15437, file: !3, line: 6839, type: !45)
!15452 = !DILocalVariable(name: "sublen", scope: !15437, file: !3, line: 6839, type: !45)
!15453 = !DILocalVariable(name: "postfixlen", scope: !15437, file: !3, line: 6839, type: !45)
!15454 = !DILocalVariable(name: "fieldlen", scope: !15437, file: !3, line: 6839, type: !45)
!15455 = !DILocalVariable(name: "keyname", scope: !15437, file: !3, line: 6845, type: !15456)
!15456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15437, file: !3, line: 6841, size: 8384, elements: !15457)
!15457 = !{!15458, !15459, !15460}
!15458 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !15456, file: !3, line: 6842, baseType: !53, size: 64)
!15459 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !15456, file: !3, line: 6843, baseType: !53, size: 64, offset: 64)
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !15456, file: !3, line: 6844, baseType: !1841, size: 8200, offset: 128)
!15461 = !DILocalVariable(name: "fieldname", scope: !15437, file: !3, line: 6845, type: !15456)
!15462 = !DILocation(line: 0, scope: !15437)
!15463 = !DILocation(line: 6838, column: 5, scope: !15437)
!15464 = !DILocation(line: 6838, column: 10, scope: !15437)
!15465 = !DILocation(line: 6838, column: 18, scope: !15437)
!15466 = !DILocation(line: 6841, column: 5, scope: !15437)
!15467 = !DILocation(line: 6845, column: 7, scope: !15437)
!15468 = !DILocation(line: 6845, column: 16, scope: !15437)
!15469 = !DILocation(line: 6849, column: 21, scope: !15437)
!15470 = !DILocation(line: 6850, column: 9, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6850, column: 9)
!15472 = !DILocation(line: 6850, column: 17, scope: !15471)
!15473 = !DILocation(line: 6850, column: 24, scope: !15471)
!15474 = !DILocation(line: 6850, column: 27, scope: !15471)
!15475 = !DILocation(line: 6850, column: 35, scope: !15471)
!15476 = !DILocation(line: 6850, column: 9, scope: !15437)
!15477 = !DILocation(line: 6851, column: 9, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 6850, column: 44)
!15479 = !DILocation(line: 6852, column: 9, scope: !15478)
!15480 = !DILocation(line: 6858, column: 13, scope: !15437)
!15481 = !DILocation(line: 6860, column: 19, scope: !15437)
!15482 = !DILocation(line: 6861, column: 9, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6861, column: 9)
!15484 = !DILocation(line: 6861, column: 22, scope: !15483)
!15485 = !DILocation(line: 6861, column: 21, scope: !15483)
!15486 = !DILocation(line: 6861, column: 37, scope: !15483)
!15487 = !DILocation(line: 6861, column: 9, scope: !15437)
!15488 = !DILocation(line: 6862, column: 9, scope: !15437)
!15489 = !DILocation(line: 6863, column: 10, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6863, column: 9)
!15491 = !DILocation(line: 6863, column: 9, scope: !15437)
!15492 = !DILocation(line: 6864, column: 22, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !3, line: 6863, column: 13)
!15494 = !DILocation(line: 6864, column: 9, scope: !15493)
!15495 = !DILocation(line: 6865, column: 9, scope: !15493)
!15496 = !DILocation(line: 6869, column: 22, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6869, column: 9)
!15498 = !DILocation(line: 6869, column: 14, scope: !15497)
!15499 = !DILocation(line: 6869, column: 33, scope: !15497)
!15500 = !DILocation(line: 6869, column: 9, scope: !15437)
!15501 = !DILocation(line: 6878, column: 18, scope: !15437)
!15502 = !DILocation(line: 6870, column: 20, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 6869, column: 42)
!15504 = !DILocation(line: 6870, column: 35, scope: !15503)
!15505 = !DILocation(line: 6870, column: 32, scope: !15503)
!15506 = !DILocation(line: 6872, column: 16, scope: !15503)
!15507 = !DILocation(line: 6872, column: 31, scope: !15503)
!15508 = !DILocation(line: 6872, column: 34, scope: !15503)
!15509 = !DILocation(line: 6872, column: 9, scope: !15503)
!15510 = !DILocation(line: 6873, column: 25, scope: !15503)
!15511 = !DILocation(line: 6873, column: 19, scope: !15503)
!15512 = !DILocation(line: 6873, column: 23, scope: !15503)
!15513 = !{!15514, !710, i64 0}
!15514 = !{!"", !710, i64 0, !710, i64 8, !711, i64 16}
!15515 = !DILocation(line: 6874, column: 5, scope: !15503)
!15516 = !DILocation(line: 0, scope: !15497)
!15517 = !DILocation(line: 6879, column: 14, scope: !15437)
!15518 = !DILocation(line: 6880, column: 18, scope: !15437)
!15519 = !DILocation(line: 6880, column: 45, scope: !15437)
!15520 = !DILocation(line: 6880, column: 31, scope: !15437)
!15521 = !DILocation(line: 6880, column: 44, scope: !15437)
!15522 = !DILocation(line: 6881, column: 12, scope: !15437)
!15523 = !DILocation(line: 6881, column: 29, scope: !15437)
!15524 = !DILocation(line: 6881, column: 5, scope: !15437)
!15525 = !DILocation(line: 6882, column: 23, scope: !15437)
!15526 = !DILocation(line: 6882, column: 39, scope: !15437)
!15527 = !DILocation(line: 6882, column: 5, scope: !15437)
!15528 = !DILocation(line: 6883, column: 33, scope: !15437)
!15529 = !DILocation(line: 6883, column: 45, scope: !15437)
!15530 = !DILocation(line: 6883, column: 5, scope: !15437)
!15531 = !DILocation(line: 6884, column: 26, scope: !15437)
!15532 = !DILocation(line: 6884, column: 33, scope: !15437)
!15533 = !DILocation(line: 6884, column: 5, scope: !15437)
!15534 = !DILocation(line: 6884, column: 46, scope: !15437)
!15535 = !DILocation(line: 6885, column: 13, scope: !15437)
!15536 = !DILocation(line: 6885, column: 17, scope: !15437)
!15537 = !DILocation(line: 6886, column: 18, scope: !15437)
!15538 = !DILocation(line: 6886, column: 5, scope: !15437)
!15539 = !DILocation(line: 6889, column: 5, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6889, column: 5)
!15541 = !DILocation(line: 6889, column: 5, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 6889, column: 5)
!15543 = !DILocation(line: 6890, column: 9, scope: !15437)
!15544 = !DILocation(line: 6891, column: 11, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6891, column: 9)
!15546 = !DILocation(line: 6891, column: 9, scope: !15437)
!15547 = !DILocation(line: 6893, column: 18, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 6893, column: 9)
!15549 = !DILocation(line: 0, scope: !15548)
!15550 = !DILocation(line: 6893, column: 9, scope: !15437)
!15551 = !DILocation(line: 6894, column: 21, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15553, file: !3, line: 6894, column: 13)
!15553 = distinct !DILexicalBlock(scope: !15548, file: !3, line: 6893, column: 23)
!15554 = !DILocation(line: 6894, column: 35, scope: !15552)
!15555 = !DILocation(line: 6898, column: 9, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15553, file: !3, line: 6898, column: 9)
!15557 = !DILocation(line: 6898, column: 9, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 6898, column: 9)
!15559 = !DILocation(line: 6899, column: 13, scope: !15553)
!15560 = !DILocation(line: 6900, column: 5, scope: !15553)
!15561 = !DILocation(line: 6901, column: 21, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15563, file: !3, line: 6901, column: 13)
!15563 = distinct !DILexicalBlock(scope: !15548, file: !3, line: 6900, column: 12)
!15564 = !DILocation(line: 6901, column: 13, scope: !15563)
!15565 = !DILocation(line: 6905, column: 9, scope: !15563)
!15566 = !DILocation(line: 6909, column: 1, scope: !15437)
!15567 = !DISubprogram(name: "pqsort", scope: !15568, file: !15568, line: 12, type: !15569, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15568 = !DIFile(filename: "./pqsort.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "37481b43f6bc094502485f6cb05bf33c")
!15569 = !DISubroutineType(types: !15570)
!15570 = !{null, !46, !196, !196, !12621, !196, !196}
!15571 = distinct !DISubprogram(name: "sortCompare", scope: !3, file: !3, line: 6914, type: !12622, scopeLine: 6914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15572)
!15572 = !{!15573, !15574, !15575, !15578, !15579}
!15573 = !DILocalVariable(name: "s1", arg: 1, scope: !15571, file: !3, line: 6914, type: !100)
!15574 = !DILocalVariable(name: "s2", arg: 2, scope: !15571, file: !3, line: 6914, type: !100)
!15575 = !DILocalVariable(name: "so1", scope: !15571, file: !3, line: 6915, type: !15576)
!15576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15577, size: 64)
!15577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10987)
!15578 = !DILocalVariable(name: "so2", scope: !15571, file: !3, line: 6915, type: !15576)
!15579 = !DILocalVariable(name: "cmp", scope: !15571, file: !3, line: 6916, type: !45)
!15580 = !DILocation(line: 0, scope: !15571)
!15581 = !DILocation(line: 6918, column: 17, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 6918, column: 9)
!15583 = !DILocation(line: 6918, column: 10, scope: !15582)
!15584 = !DILocation(line: 6918, column: 9, scope: !15571)
!15585 = !DILocation(line: 6920, column: 18, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 6920, column: 13)
!15587 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 6918, column: 29)
!15588 = !DILocation(line: 6920, column: 20, scope: !15586)
!15589 = !DILocation(line: 6920, column: 33, scope: !15586)
!15590 = !DILocation(line: 6920, column: 35, scope: !15586)
!15591 = !DILocation(line: 6920, column: 26, scope: !15586)
!15592 = !DILocation(line: 6920, column: 13, scope: !15587)
!15593 = !DILocation(line: 6922, column: 33, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 6922, column: 20)
!15595 = !DILocation(line: 6929, column: 20, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 6929, column: 13)
!15597 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 6927, column: 12)
!15598 = !DILocation(line: 6929, column: 13, scope: !15596)
!15599 = !DILocation(line: 6929, column: 13, scope: !15597)
!15600 = !DILocation(line: 6930, column: 23, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 6930, column: 17)
!15602 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 6929, column: 36)
!15603 = !DILocation(line: 6930, column: 25, scope: !15601)
!15604 = !DILocation(line: 6930, column: 18, scope: !15601)
!15605 = !DILocation(line: 0, scope: !15601)
!15606 = !DILocation(line: 6930, column: 32, scope: !15601)
!15607 = !DILocation(line: 6930, column: 36, scope: !15601)
!15608 = !DILocation(line: 6930, column: 17, scope: !15602)
!15609 = !DILocation(line: 6932, column: 45, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !3, line: 6932, column: 21)
!15611 = distinct !DILexicalBlock(scope: !15601, file: !3, line: 6930, column: 51)
!15612 = !DILocation(line: 6932, column: 43, scope: !15610)
!15613 = !DILocation(line: 6932, column: 35, scope: !15610)
!15614 = !DILocation(line: 6932, column: 21, scope: !15611)
!15615 = !DILocation(line: 6940, column: 46, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15601, file: !3, line: 6938, column: 20)
!15617 = !DILocation(line: 6940, column: 65, scope: !15616)
!15618 = !DILocation(line: 6940, column: 23, scope: !15616)
!15619 = !DILocation(line: 6944, column: 45, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 6942, column: 16)
!15621 = !DILocation(line: 6944, column: 54, scope: !15620)
!15622 = !DILocation(line: 6944, column: 19, scope: !15620)
!15623 = !DILocation(line: 0, scope: !15582)
!15624 = !DILocation(line: 6947, column: 19, scope: !15571)
!15625 = !DILocation(line: 6947, column: 12, scope: !15571)
!15626 = !DILocation(line: 6947, column: 5, scope: !15571)
!15627 = !DISubprogram(name: "strstr", scope: !1082, file: !1082, line: 330, type: !15628, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15628 = !DISubroutineType(types: !15629)
!15629 = !{!47, !741, !741}
!15630 = !DISubprogram(name: "strcoll", scope: !1082, file: !1082, line: 144, type: !1099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15631 = distinct !DISubprogram(name: "genRedisInfoString", scope: !3, file: !3, line: 7231, type: !1106, scopeLine: 7231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15632)
!15632 = !{!15633, !15634, !15635, !15636, !15637, !15641}
!15633 = !DILocalVariable(name: "info", scope: !15631, file: !3, line: 7232, type: !165)
!15634 = !DILocalVariable(name: "uptime", scope: !15631, file: !3, line: 7233, type: !49)
!15635 = !DILocalVariable(name: "j", scope: !15631, file: !3, line: 7234, type: !45)
!15636 = !DILocalVariable(name: "hmem", scope: !15631, file: !3, line: 7235, type: !762)
!15637 = !DILocalVariable(name: "keys", scope: !15638, file: !3, line: 7336, type: !54)
!15638 = distinct !DILexicalBlock(scope: !15639, file: !3, line: 7335, column: 40)
!15639 = distinct !DILexicalBlock(scope: !15640, file: !3, line: 7335, column: 5)
!15640 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 7335, column: 5)
!15641 = !DILocalVariable(name: "vkeys", scope: !15638, file: !3, line: 7336, type: !54)
!15642 = !DILocation(line: 7233, column: 21, scope: !15631)
!15643 = !DILocation(line: 7233, column: 39, scope: !15631)
!15644 = !DILocation(line: 7233, column: 31, scope: !15631)
!15645 = !DILocation(line: 0, scope: !15631)
!15646 = !DILocation(line: 7235, column: 5, scope: !15631)
!15647 = !DILocation(line: 7235, column: 10, scope: !15631)
!15648 = !DILocation(line: 7237, column: 23, scope: !15631)
!15649 = !DILocation(line: 7237, column: 5, scope: !15631)
!15650 = !DILocation(line: 7238, column: 25, scope: !15631)
!15651 = !DILocation(line: 7267, column: 9, scope: !15631)
!15652 = !DILocation(line: 7267, column: 41, scope: !15631)
!15653 = !DILocation(line: 7269, column: 9, scope: !15631)
!15654 = !DILocation(line: 7270, column: 16, scope: !15631)
!15655 = !DILocation(line: 7270, column: 9, scope: !15631)
!15656 = !DILocation(line: 7272, column: 15, scope: !15631)
!15657 = !DILocation(line: 7273, column: 9, scope: !15631)
!15658 = !DILocation(line: 7273, column: 36, scope: !15631)
!15659 = !DILocation(line: 7273, column: 35, scope: !15631)
!15660 = !DILocation(line: 7275, column: 16, scope: !15631)
!15661 = !DILocation(line: 7276, column: 9, scope: !15631)
!15662 = !DILocation(line: 7278, column: 16, scope: !15631)
!15663 = !DILocation(line: 7279, column: 16, scope: !15631)
!15664 = !DILocation(line: 7279, column: 31, scope: !15631)
!15665 = !DILocation(line: 7280, column: 16, scope: !15631)
!15666 = !DILocation(line: 7281, column: 16, scope: !15631)
!15667 = !DILocation(line: 7281, column: 34, scope: !15631)
!15668 = !DILocation(line: 7282, column: 16, scope: !15631)
!15669 = !{!709, !715, i64 368}
!15670 = !DILocation(line: 7283, column: 16, scope: !15631)
!15671 = !DILocation(line: 7284, column: 16, scope: !15631)
!15672 = !DILocation(line: 7285, column: 16, scope: !15631)
!15673 = !DILocation(line: 7286, column: 16, scope: !15631)
!15674 = !DILocation(line: 7287, column: 9, scope: !15631)
!15675 = !DILocation(line: 7288, column: 9, scope: !15631)
!15676 = !DILocation(line: 7289, column: 16, scope: !15631)
!15677 = !DILocation(line: 7289, column: 27, scope: !15631)
!15678 = !DILocation(line: 7290, column: 16, scope: !15631)
!15679 = !DILocation(line: 7290, column: 27, scope: !15631)
!15680 = !DILocation(line: 7290, column: 9, scope: !15631)
!15681 = !DILocation(line: 7238, column: 12, scope: !15631)
!15682 = !DILocation(line: 7292, column: 16, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 7292, column: 9)
!15684 = !DILocation(line: 7292, column: 9, scope: !15683)
!15685 = !DILocation(line: 7292, column: 9, scope: !15631)
!15686 = !DILocation(line: 7299, column: 20, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15683, file: !3, line: 7292, column: 28)
!15688 = !DILocation(line: 7300, column: 21, scope: !15687)
!15689 = !DILocation(line: 7300, column: 31, scope: !15687)
!15690 = !DILocation(line: 7300, column: 13, scope: !15687)
!15691 = !DILocation(line: 7302, column: 20, scope: !15687)
!15692 = !DILocation(line: 7302, column: 13, scope: !15687)
!15693 = !DILocation(line: 7302, column: 36, scope: !15687)
!15694 = !DILocation(line: 7302, column: 54, scope: !15687)
!15695 = !DILocation(line: 7302, column: 62, scope: !15687)
!15696 = !DILocation(line: 7302, column: 46, scope: !15687)
!15697 = !DILocation(line: 7302, column: 30, scope: !15687)
!15698 = !DILocation(line: 7293, column: 16, scope: !15687)
!15699 = !DILocation(line: 7304, column: 5, scope: !15687)
!15700 = !DILocation(line: 7305, column: 16, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 7305, column: 9)
!15702 = !DILocation(line: 7305, column: 9, scope: !15701)
!15703 = !DILocation(line: 7305, column: 9, scope: !15631)
!15704 = !DILocation(line: 7306, column: 9, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15701, file: !3, line: 7305, column: 28)
!15706 = !DILocation(line: 7320, column: 42, scope: !15705)
!15707 = !DILocation(line: 7321, column: 41, scope: !15705)
!15708 = !DILocation(line: 7322, column: 41, scope: !15705)
!15709 = !DILocation(line: 7323, column: 41, scope: !15705)
!15710 = !DILocation(line: 7324, column: 41, scope: !15705)
!15711 = !DILocation(line: 7325, column: 41, scope: !15705)
!15712 = !DILocation(line: 7326, column: 41, scope: !15705)
!15713 = !{!709, !715, i64 944}
!15714 = !DILocation(line: 7327, column: 29, scope: !15705)
!15715 = !DILocation(line: 7327, column: 13, scope: !15705)
!15716 = !DILocation(line: 7328, column: 29, scope: !15705)
!15717 = !DILocation(line: 7328, column: 13, scope: !15705)
!15718 = !DILocation(line: 7329, column: 29, scope: !15705)
!15719 = !DILocation(line: 7329, column: 13, scope: !15705)
!15720 = !DILocation(line: 7330, column: 36, scope: !15705)
!15721 = !DILocation(line: 7330, column: 13, scope: !15705)
!15722 = !DILocation(line: 7331, column: 36, scope: !15705)
!15723 = !DILocation(line: 7331, column: 13, scope: !15705)
!15724 = !DILocation(line: 7307, column: 16, scope: !15705)
!15725 = !DILocation(line: 7333, column: 9, scope: !15705)
!15726 = !DILocation(line: 7334, column: 5, scope: !15705)
!15727 = !DILocation(line: 7335, column: 28, scope: !15639)
!15728 = !DILocation(line: 7335, column: 19, scope: !15639)
!15729 = !DILocation(line: 7335, column: 5, scope: !15640)
!15730 = !DILocation(line: 7338, column: 16, scope: !15638)
!15731 = !DILocation(line: 0, scope: !15638)
!15732 = !DILocation(line: 7339, column: 17, scope: !15638)
!15733 = !DILocation(line: 7340, column: 13, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15638, file: !3, line: 7340, column: 13)
!15735 = !DILocation(line: 7340, column: 18, scope: !15734)
!15736 = !DILocation(line: 7341, column: 20, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15734, file: !3, line: 7340, column: 28)
!15738 = !DILocation(line: 7343, column: 9, scope: !15737)
!15739 = !DILocation(line: 7335, column: 36, scope: !15639)
!15740 = distinct !{!15740, !15729, !15741}
!15741 = !DILocation(line: 7344, column: 5, scope: !15640)
!15742 = !DILocation(line: 7346, column: 1, scope: !15631)
!15743 = !DILocation(line: 7345, column: 5, scope: !15631)
!15744 = distinct !DISubprogram(name: "bytesToHuman", scope: !3, file: !3, line: 7209, type: !15745, scopeLine: 7209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15747)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{null, !47, !170}
!15747 = !{!15748, !15749, !15750}
!15748 = !DILocalVariable(name: "s", arg: 1, scope: !15744, file: !3, line: 7209, type: !47)
!15749 = !DILocalVariable(name: "n", arg: 2, scope: !15744, file: !3, line: 7209, type: !170)
!15750 = !DILocalVariable(name: "d", scope: !15744, file: !3, line: 7210, type: !168)
!15751 = !DILocation(line: 0, scope: !15744)
!15752 = !DILocation(line: 7212, column: 11, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15744, file: !3, line: 7212, column: 9)
!15754 = !DILocation(line: 7212, column: 9, scope: !15744)
!15755 = !DILocation(line: 7214, column: 9, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15753, file: !3, line: 7212, column: 19)
!15757 = !DILocation(line: 7215, column: 9, scope: !15756)
!15758 = !DILocation(line: 7216, column: 18, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15753, file: !3, line: 7216, column: 16)
!15760 = !DILocation(line: 7216, column: 16, scope: !15753)
!15761 = !DILocation(line: 7217, column: 13, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15759, file: !3, line: 7216, column: 33)
!15763 = !DILocation(line: 7217, column: 22, scope: !15762)
!15764 = !DILocation(line: 7218, column: 9, scope: !15762)
!15765 = !DILocation(line: 7219, column: 5, scope: !15762)
!15766 = !DILocation(line: 7219, column: 18, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15759, file: !3, line: 7219, column: 16)
!15768 = !DILocation(line: 7219, column: 16, scope: !15759)
!15769 = !DILocation(line: 7220, column: 13, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15767, file: !3, line: 7219, column: 40)
!15771 = !DILocation(line: 7220, column: 22, scope: !15770)
!15772 = !DILocation(line: 7221, column: 9, scope: !15770)
!15773 = !DILocation(line: 7222, column: 5, scope: !15770)
!15774 = !DILocation(line: 7222, column: 18, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15767, file: !3, line: 7222, column: 16)
!15776 = !DILocation(line: 7222, column: 16, scope: !15767)
!15777 = !DILocation(line: 7223, column: 13, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15775, file: !3, line: 7222, column: 45)
!15779 = !DILocation(line: 7223, column: 22, scope: !15778)
!15780 = !DILocation(line: 7224, column: 9, scope: !15778)
!15781 = !DILocation(line: 7225, column: 5, scope: !15778)
!15782 = !DILocation(line: 7226, column: 1, scope: !15744)
!15783 = !DISubprogram(name: "aeGetApiName", scope: !463, file: !463, line: 114, type: !15784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15784 = !DISubroutineType(types: !15785)
!15785 = !{!47}
!15786 = !DISubprogram(name: "sprintf", scope: !161, file: !161, line: 334, type: !15787, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!45, !1075, !1076, null}
!15789 = !DISubprogram(name: "sdsdup", scope: !166, file: !166, line: 48, type: !15790, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{!165, !1094}
!15792 = distinct !DISubprogram(name: "computeDatasetDigest", scope: !3, file: !3, line: 10503, type: !15793, scopeLine: 10503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15795)
!15793 = !DISubroutineType(types: !15794)
!15794 = !{null, !167}
!15795 = !{!15796, !15797, !15798, !15799, !15800, !15801, !15802, !15803, !15807, !15809, !15810, !15811, !15812, !15816, !15817, !15818, !15820, !15823, !15824, !15825, !15827, !15830, !15831, !15832, !15834, !15835, !15836, !15839, !15840}
!15796 = !DILocalVariable(name: "final", arg: 1, scope: !15792, file: !3, line: 10503, type: !167)
!15797 = !DILocalVariable(name: "digest", scope: !15792, file: !3, line: 10504, type: !11557)
!15798 = !DILocalVariable(name: "buf", scope: !15792, file: !3, line: 10505, type: !1247)
!15799 = !DILocalVariable(name: "di", scope: !15792, file: !3, line: 10506, type: !2938)
!15800 = !DILocalVariable(name: "de", scope: !15792, file: !3, line: 10507, type: !124)
!15801 = !DILocalVariable(name: "j", scope: !15792, file: !3, line: 10508, type: !45)
!15802 = !DILocalVariable(name: "aux", scope: !15792, file: !3, line: 10509, type: !2322)
!15803 = !DILocalVariable(name: "db", scope: !15804, file: !3, line: 10514, type: !293)
!15804 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 10513, column: 40)
!15805 = distinct !DILexicalBlock(scope: !15806, file: !3, line: 10513, column: 5)
!15806 = distinct !DILexicalBlock(scope: !15792, file: !3, line: 10513, column: 5)
!15807 = !DILocalVariable(name: "key", scope: !15808, file: !3, line: 10526, type: !145)
!15808 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 10525, column: 44)
!15809 = !DILocalVariable(name: "o", scope: !15808, file: !3, line: 10526, type: !145)
!15810 = !DILocalVariable(name: "kcopy", scope: !15808, file: !3, line: 10526, type: !145)
!15811 = !DILocalVariable(name: "expiretime", scope: !15808, file: !3, line: 10527, type: !49)
!15812 = !DILocalVariable(name: "list", scope: !15813, file: !3, line: 10552, type: !58)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !3, line: 10551, column: 47)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !3, line: 10551, column: 24)
!15815 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 10549, column: 17)
!15816 = !DILocalVariable(name: "ln", scope: !15813, file: !3, line: 10553, type: !64)
!15817 = !DILocalVariable(name: "li", scope: !15813, file: !3, line: 10554, type: !831)
!15818 = !DILocalVariable(name: "eleobj", scope: !15819, file: !3, line: 10558, type: !145)
!15819 = distinct !DILexicalBlock(scope: !15813, file: !3, line: 10557, column: 45)
!15820 = !DILocalVariable(name: "set", scope: !15821, file: !3, line: 10563, type: !86)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !3, line: 10562, column: 46)
!15822 = distinct !DILexicalBlock(scope: !15814, file: !3, line: 10562, column: 24)
!15823 = !DILocalVariable(name: "di", scope: !15821, file: !3, line: 10564, type: !2938)
!15824 = !DILocalVariable(name: "de", scope: !15821, file: !3, line: 10565, type: !124)
!15825 = !DILocalVariable(name: "eleobj", scope: !15826, file: !3, line: 10568, type: !145)
!15826 = distinct !DILexicalBlock(scope: !15821, file: !3, line: 10567, column: 52)
!15827 = !DILocalVariable(name: "zs", scope: !15828, file: !3, line: 10574, type: !171)
!15828 = distinct !DILexicalBlock(scope: !15829, file: !3, line: 10573, column: 47)
!15829 = distinct !DILexicalBlock(scope: !15822, file: !3, line: 10573, column: 24)
!15830 = !DILocalVariable(name: "di", scope: !15828, file: !3, line: 10575, type: !2938)
!15831 = !DILocalVariable(name: "de", scope: !15828, file: !3, line: 10576, type: !124)
!15832 = !DILocalVariable(name: "eleobj", scope: !15833, file: !3, line: 10579, type: !145)
!15833 = distinct !DILexicalBlock(scope: !15828, file: !3, line: 10578, column: 52)
!15834 = !DILocalVariable(name: "score", scope: !15833, file: !3, line: 10580, type: !198)
!15835 = !DILocalVariable(name: "eledigest", scope: !15833, file: !3, line: 10581, type: !11557)
!15836 = !DILocalVariable(name: "hi", scope: !15837, file: !3, line: 10591, type: !14272)
!15837 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 10590, column: 47)
!15838 = distinct !DILexicalBlock(scope: !15829, file: !3, line: 10590, column: 24)
!15839 = !DILocalVariable(name: "obj", scope: !15837, file: !3, line: 10592, type: !145)
!15840 = !DILocalVariable(name: "eledigest", scope: !15841, file: !3, line: 10596, type: !11557)
!15841 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 10595, column: 51)
!15842 = !DILocation(line: 0, scope: !15792)
!15843 = !DILocation(line: 10504, column: 5, scope: !15792)
!15844 = !DILocation(line: 10504, column: 19, scope: !15792)
!15845 = !DILocation(line: 10505, column: 5, scope: !15792)
!15846 = !DILocation(line: 10505, column: 10, scope: !15792)
!15847 = !DILocation(line: 10509, column: 5, scope: !15792)
!15848 = !DILocation(line: 10511, column: 5, scope: !15792)
!15849 = !DILocation(line: 10513, column: 28, scope: !15805)
!15850 = !DILocation(line: 10513, column: 19, scope: !15805)
!15851 = !DILocation(line: 10513, column: 5, scope: !15806)
!15852 = !DILocation(line: 10514, column: 30, scope: !15804)
!15853 = !DILocation(line: 10514, column: 32, scope: !15804)
!15854 = !DILocation(line: 0, scope: !15804)
!15855 = !DILocation(line: 10516, column: 13, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 10516, column: 13)
!15857 = !DILocation(line: 10516, column: 32, scope: !15856)
!15858 = !DILocation(line: 10516, column: 13, scope: !15804)
!15859 = !DILocation(line: 10517, column: 14, scope: !15804)
!15860 = !DILocation(line: 10521, column: 15, scope: !15804)
!15861 = !DILocation(line: 10521, column: 13, scope: !15804)
!15862 = !DILocation(line: 10522, column: 9, scope: !15804)
!15863 = !DILocation(line: 10525, column: 21, scope: !15804)
!15864 = !DILocation(line: 10525, column: 35, scope: !15804)
!15865 = !DILocation(line: 10525, column: 9, scope: !15804)
!15866 = !DILocation(line: 10529, column: 13, scope: !15808)
!15867 = !DILocation(line: 10530, column: 19, scope: !15808)
!15868 = !DILocation(line: 0, scope: !15808)
!15869 = !DILocation(line: 10532, column: 25, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 10532, column: 17)
!15871 = !DILocation(line: 10532, column: 18, scope: !15870)
!15872 = !DILocation(line: 10532, column: 17, scope: !15808)
!15873 = !DILocation(line: 10533, column: 17, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15870, file: !3, line: 10532, column: 37)
!15875 = !DILocation(line: 10534, column: 21, scope: !15874)
!15876 = !DILocation(line: 10535, column: 13, scope: !15874)
!15877 = !DILocation(line: 10539, column: 25, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15870, file: !3, line: 10535, column: 20)
!15879 = !DILocation(line: 10540, column: 17, scope: !15878)
!15880 = !DILocation(line: 10541, column: 21, scope: !15878)
!15881 = !DILocation(line: 10542, column: 30, scope: !15878)
!15882 = !DILocation(line: 10542, column: 17, scope: !15878)
!15883 = !DILocation(line: 0, scope: !15870)
!15884 = !DILocation(line: 10544, column: 19, scope: !15808)
!15885 = !DILocation(line: 10544, column: 17, scope: !15808)
!15886 = !DILocation(line: 10545, column: 13, scope: !15808)
!15887 = !DILocation(line: 10546, column: 26, scope: !15808)
!15888 = !DILocation(line: 10549, column: 20, scope: !15815)
!15889 = !DILocation(line: 10549, column: 17, scope: !15808)
!15890 = !DILocation(line: 10550, column: 17, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15815, file: !3, line: 10549, column: 42)
!15892 = !DILocation(line: 10551, column: 13, scope: !15891)
!15893 = !DILocation(line: 10552, column: 33, scope: !15813)
!15894 = !DILocation(line: 0, scope: !15813)
!15895 = !DILocation(line: 10554, column: 17, scope: !15813)
!15896 = !DILocation(line: 10554, column: 26, scope: !15813)
!15897 = !DILocation(line: 10556, column: 17, scope: !15813)
!15898 = !DILocation(line: 10557, column: 29, scope: !15813)
!15899 = !DILocation(line: 10557, column: 17, scope: !15813)
!15900 = !DILocation(line: 10558, column: 36, scope: !15819)
!15901 = !DILocation(line: 0, scope: !15819)
!15902 = !DILocation(line: 10560, column: 21, scope: !15819)
!15903 = distinct !{!15903, !15899, !15904}
!15904 = !DILocation(line: 10561, column: 17, scope: !15813)
!15905 = !DILocation(line: 10562, column: 13, scope: !15814)
!15906 = !DILocation(line: 10562, column: 13, scope: !15813)
!15907 = !DILocation(line: 10563, column: 32, scope: !15821)
!15908 = !DILocation(line: 0, scope: !15821)
!15909 = !DILocation(line: 10564, column: 36, scope: !15821)
!15910 = !DILocation(line: 10567, column: 29, scope: !15821)
!15911 = !DILocation(line: 10567, column: 43, scope: !15821)
!15912 = !DILocation(line: 10567, column: 17, scope: !15821)
!15913 = !DILocation(line: 10568, column: 36, scope: !15826)
!15914 = !DILocation(line: 0, scope: !15826)
!15915 = !DILocation(line: 10570, column: 21, scope: !15826)
!15916 = distinct !{!15916, !15912, !15917}
!15917 = !DILocation(line: 10571, column: 17, scope: !15821)
!15918 = !DILocation(line: 10572, column: 17, scope: !15821)
!15919 = !DILocation(line: 10573, column: 13, scope: !15821)
!15920 = !DILocation(line: 10574, column: 31, scope: !15828)
!15921 = !DILocation(line: 0, scope: !15828)
!15922 = !DILocation(line: 10575, column: 56, scope: !15828)
!15923 = !DILocation(line: 10575, column: 36, scope: !15828)
!15924 = !DILocation(line: 10578, column: 29, scope: !15828)
!15925 = !DILocation(line: 10578, column: 43, scope: !15828)
!15926 = !DILocation(line: 10578, column: 17, scope: !15828)
!15927 = !DILocation(line: 10579, column: 36, scope: !15833)
!15928 = !DILocation(line: 0, scope: !15833)
!15929 = !DILocation(line: 10580, column: 37, scope: !15833)
!15930 = !DILocation(line: 10581, column: 21, scope: !15833)
!15931 = !DILocation(line: 10581, column: 35, scope: !15833)
!15932 = !DILocation(line: 10583, column: 54, scope: !15833)
!15933 = !DILocation(line: 10583, column: 21, scope: !15833)
!15934 = !DILocation(line: 10584, column: 21, scope: !15833)
!15935 = !DILocation(line: 10585, column: 21, scope: !15833)
!15936 = !DILocation(line: 10586, column: 45, scope: !15833)
!15937 = !DILocation(line: 10586, column: 21, scope: !15833)
!15938 = !DILocation(line: 10587, column: 21, scope: !15833)
!15939 = !DILocation(line: 10588, column: 17, scope: !15828)
!15940 = distinct !{!15940, !15926, !15939}
!15941 = !DILocation(line: 10589, column: 17, scope: !15828)
!15942 = !DILocation(line: 10590, column: 13, scope: !15828)
!15943 = !DILocation(line: 10594, column: 22, scope: !15837)
!15944 = !DILocation(line: 0, scope: !15837)
!15945 = !DILocation(line: 10595, column: 24, scope: !15837)
!15946 = !DILocation(line: 10595, column: 37, scope: !15837)
!15947 = !DILocation(line: 10595, column: 17, scope: !15837)
!15948 = !DILocation(line: 10596, column: 21, scope: !15841)
!15949 = !DILocation(line: 10596, column: 35, scope: !15841)
!15950 = !DILocation(line: 10598, column: 21, scope: !15841)
!15951 = !DILocation(line: 10599, column: 27, scope: !15841)
!15952 = !DILocation(line: 10600, column: 21, scope: !15841)
!15953 = !DILocation(line: 10601, column: 34, scope: !15841)
!15954 = !DILocation(line: 10601, column: 21, scope: !15841)
!15955 = !DILocation(line: 10602, column: 27, scope: !15841)
!15956 = !DILocation(line: 10603, column: 21, scope: !15841)
!15957 = !DILocation(line: 10604, column: 34, scope: !15841)
!15958 = !DILocation(line: 10604, column: 21, scope: !15841)
!15959 = !DILocation(line: 10605, column: 21, scope: !15841)
!15960 = !DILocation(line: 10606, column: 17, scope: !15837)
!15961 = distinct !{!15961, !15947, !15960}
!15962 = !DILocation(line: 10607, column: 17, scope: !15837)
!15963 = !DILocation(line: 10609, column: 17, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 10608, column: 20)
!15965 = !DILocation(line: 10612, column: 28, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 10612, column: 17)
!15967 = !DILocation(line: 10612, column: 17, scope: !15808)
!15968 = !DILocation(line: 10612, column: 35, scope: !15966)
!15969 = !DILocation(line: 10614, column: 13, scope: !15808)
!15970 = distinct !{!15970, !15865, !15971}
!15971 = !DILocation(line: 10615, column: 9, scope: !15804)
!15972 = !DILocation(line: 10616, column: 9, scope: !15804)
!15973 = !DILocation(line: 10617, column: 5, scope: !15805)
!15974 = !DILocation(line: 10513, column: 36, scope: !15805)
!15975 = distinct !{!15975, !15851, !15976}
!15976 = !DILocation(line: 10617, column: 5, scope: !15806)
!15977 = !DILocation(line: 10618, column: 1, scope: !15792)
!15978 = !DISubprogram(name: "memset", scope: !1082, file: !1082, line: 61, type: !15979, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{!46, !46, !45, !196}
!15981 = distinct !DISubprogram(name: "mixDigest", scope: !3, file: !3, line: 10481, type: !15982, scopeLine: 10481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15984)
!15982 = !DISubroutineType(types: !15983)
!15983 = !{null, !167, !46, !196}
!15984 = !{!15985, !15986, !15987, !15988, !16000}
!15985 = !DILocalVariable(name: "digest", arg: 1, scope: !15981, file: !3, line: 10481, type: !167)
!15986 = !DILocalVariable(name: "ptr", arg: 2, scope: !15981, file: !3, line: 10481, type: !46)
!15987 = !DILocalVariable(name: "len", arg: 3, scope: !15981, file: !3, line: 10481, type: !196)
!15988 = !DILocalVariable(name: "ctx", scope: !15981, file: !3, line: 10482, type: !15989)
!15989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHA1_CTX", file: !15990, line: 12, baseType: !15991)
!15990 = !DIFile(filename: "./sha1.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "66eb14eb0f961bbb9a2359cab2e67268")
!15991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !15990, line: 8, size: 736, elements: !15992)
!15992 = !{!15993, !15996, !15998}
!15993 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15991, file: !15990, line: 9, baseType: !15994, size: 160)
!15994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15995, size: 160, elements: !7220)
!15995 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32_t", file: !540, line: 160, baseType: !244)
!15996 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15991, file: !15990, line: 10, baseType: !15997, size: 64, offset: 160)
!15997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15995, size: 64, elements: !135)
!15998 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !15991, file: !15990, line: 11, baseType: !15999, size: 512, offset: 224)
!15999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 512, elements: !763)
!16000 = !DILocalVariable(name: "s", scope: !15981, file: !3, line: 10483, type: !47)
!16001 = !DILocation(line: 0, scope: !15981)
!16002 = !DILocation(line: 10482, column: 5, scope: !15981)
!16003 = !DILocation(line: 10482, column: 14, scope: !15981)
!16004 = !DILocation(line: 10485, column: 5, scope: !15981)
!16005 = !DILocation(line: 10486, column: 5, scope: !15981)
!16006 = !DILocation(line: 10487, column: 5, scope: !15981)
!16007 = !DILocation(line: 10488, column: 5, scope: !15981)
!16008 = !DILocation(line: 10489, column: 1, scope: !15981)
!16009 = distinct !DISubprogram(name: "mixObjectDigest", scope: !3, file: !3, line: 10491, type: !16010, scopeLine: 10491, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16012)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !167, !145}
!16012 = !{!16013, !16014}
!16013 = !DILocalVariable(name: "digest", arg: 1, scope: !16009, file: !3, line: 10491, type: !167)
!16014 = !DILocalVariable(name: "o", arg: 2, scope: !16009, file: !3, line: 10491, type: !145)
!16015 = !DILocation(line: 0, scope: !16009)
!16016 = !DILocation(line: 10492, column: 9, scope: !16009)
!16017 = !DILocation(line: 10493, column: 25, scope: !16009)
!16018 = !DILocation(line: 10493, column: 29, scope: !16009)
!16019 = !DILocation(line: 10493, column: 5, scope: !16009)
!16020 = !DILocation(line: 10494, column: 18, scope: !16009)
!16021 = !DILocation(line: 10494, column: 5, scope: !16009)
!16022 = !DILocation(line: 10495, column: 1, scope: !16009)
!16023 = distinct !DISubprogram(name: "xorObjectDigest", scope: !3, file: !3, line: 10461, type: !16010, scopeLine: 10461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16024)
!16024 = !{!16025, !16026}
!16025 = !DILocalVariable(name: "digest", arg: 1, scope: !16023, file: !3, line: 10461, type: !167)
!16026 = !DILocalVariable(name: "o", arg: 2, scope: !16023, file: !3, line: 10461, type: !145)
!16027 = !DILocation(line: 0, scope: !16023)
!16028 = !DILocation(line: 10462, column: 9, scope: !16023)
!16029 = !DILocation(line: 10463, column: 25, scope: !16023)
!16030 = !DILocation(line: 10463, column: 29, scope: !16023)
!16031 = !DILocation(line: 10463, column: 5, scope: !16023)
!16032 = !DILocation(line: 10464, column: 18, scope: !16023)
!16033 = !DILocation(line: 10464, column: 5, scope: !16023)
!16034 = !DILocation(line: 10465, column: 1, scope: !16023)
!16035 = distinct !DISubprogram(name: "xorDigest", scope: !3, file: !3, line: 10448, type: !15982, scopeLine: 10448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16036)
!16036 = !{!16037, !16038, !16039, !16040, !16041, !16042, !16043}
!16037 = !DILocalVariable(name: "digest", arg: 1, scope: !16035, file: !3, line: 10448, type: !167)
!16038 = !DILocalVariable(name: "ptr", arg: 2, scope: !16035, file: !3, line: 10448, type: !46)
!16039 = !DILocalVariable(name: "len", arg: 3, scope: !16035, file: !3, line: 10448, type: !196)
!16040 = !DILocalVariable(name: "ctx", scope: !16035, file: !3, line: 10449, type: !15989)
!16041 = !DILocalVariable(name: "hash", scope: !16035, file: !3, line: 10450, type: !11557)
!16042 = !DILocalVariable(name: "s", scope: !16035, file: !3, line: 10450, type: !167)
!16043 = !DILocalVariable(name: "j", scope: !16035, file: !3, line: 10451, type: !45)
!16044 = !DILocation(line: 0, scope: !16035)
!16045 = !DILocation(line: 10449, column: 5, scope: !16035)
!16046 = !DILocation(line: 10449, column: 14, scope: !16035)
!16047 = !DILocation(line: 10450, column: 5, scope: !16035)
!16048 = !DILocation(line: 10450, column: 19, scope: !16035)
!16049 = !DILocation(line: 10453, column: 5, scope: !16035)
!16050 = !DILocation(line: 10454, column: 23, scope: !16035)
!16051 = !DILocation(line: 10454, column: 5, scope: !16035)
!16052 = !DILocation(line: 10455, column: 5, scope: !16035)
!16053 = !DILocation(line: 10458, column: 22, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16055, file: !3, line: 10457, column: 5)
!16055 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 10457, column: 5)
!16056 = !DILocation(line: 10458, column: 19, scope: !16054)
!16057 = !DILocation(line: 10458, column: 9, scope: !16054)
!16058 = !DILocation(line: 10459, column: 1, scope: !16035)
!16059 = !DISubprogram(name: "SHA1Init", scope: !15990, file: !15990, line: 15, type: !16060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16060 = !DISubroutineType(types: !16061)
!16061 = !{null, !16062}
!16062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15989, size: 64)
!16063 = !DISubprogram(name: "SHA1Update", scope: !15990, file: !15990, line: 16, type: !16064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16064 = !DISubroutineType(types: !16065)
!16065 = !{null, !16062, !6843, !15995}
!16066 = !DISubprogram(name: "SHA1Final", scope: !15990, file: !15990, line: 17, type: !16067, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16067 = !DISubroutineType(types: !16068)
!16068 = !{null, !167, !16062}
!16069 = distinct !DISubprogram(name: "configSetCommand", scope: !3, file: !3, line: 9975, type: !340, scopeLine: 9975, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16070)
!16070 = !{!16071, !16072, !16073, !16074, !16083, !16084, !16087, !16088, !16089, !16093, !16094, !16098, !16099}
!16071 = !DILocalVariable(name: "c", arg: 1, scope: !16069, file: !3, line: 9975, type: !287)
!16072 = !DILocalVariable(name: "o", scope: !16069, file: !3, line: 9976, type: !145)
!16073 = !DILocalVariable(name: "ll", scope: !16069, file: !3, line: 9977, type: !54)
!16074 = !DILocalVariable(name: "old", scope: !16075, file: !3, line: 10007, type: !45)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 10006, column: 59)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !3, line: 10006, column: 16)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 9996, column: 16)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 9992, column: 16)
!16079 = distinct !DILexicalBlock(scope: !16080, file: !3, line: 9988, column: 16)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 9985, column: 16)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 9982, column: 16)
!16082 = distinct !DILexicalBlock(scope: !16069, file: !3, line: 9979, column: 9)
!16083 = !DILocalVariable(name: "new", scope: !16075, file: !3, line: 10008, type: !45)
!16084 = !DILocalVariable(name: "vlen", scope: !16085, file: !3, line: 10024, type: !45)
!16085 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 10023, column: 53)
!16086 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 10023, column: 16)
!16087 = !DILocalVariable(name: "j", scope: !16085, file: !3, line: 10024, type: !45)
!16088 = !DILocalVariable(name: "v", scope: !16085, file: !3, line: 10025, type: !1849)
!16089 = !DILocalVariable(name: "eptr", scope: !16090, file: !3, line: 10035, type: !47)
!16090 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 10034, column: 36)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !3, line: 10034, column: 9)
!16092 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 10034, column: 9)
!16093 = !DILocalVariable(name: "val", scope: !16090, file: !3, line: 10036, type: !53)
!16094 = !DILocalVariable(name: "seconds", scope: !16095, file: !3, line: 10049, type: !49)
!16095 = distinct !DILexicalBlock(scope: !16096, file: !3, line: 10048, column: 39)
!16096 = distinct !DILexicalBlock(scope: !16097, file: !3, line: 10048, column: 9)
!16097 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 10048, column: 9)
!16098 = !DILocalVariable(name: "changes", scope: !16095, file: !3, line: 10050, type: !45)
!16099 = !DILabel(scope: !16069, name: "badfmt", file: !3, line: 10068)
!16100 = !DILocation(line: 0, scope: !16069)
!16101 = !DILocation(line: 9976, column: 35, scope: !16069)
!16102 = !DILocation(line: 9976, column: 32, scope: !16069)
!16103 = !DILocation(line: 9976, column: 15, scope: !16069)
!16104 = !DILocation(line: 9977, column: 5, scope: !16069)
!16105 = !DILocation(line: 9979, column: 24, scope: !16082)
!16106 = !DILocation(line: 9979, column: 21, scope: !16082)
!16107 = !DILocation(line: 9979, column: 33, scope: !16082)
!16108 = !DILocation(line: 9979, column: 10, scope: !16082)
!16109 = !DILocation(line: 9979, column: 9, scope: !16069)
!16110 = !DILocation(line: 9980, column: 22, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 9979, column: 52)
!16112 = !DILocation(line: 9980, column: 9, scope: !16111)
!16113 = !DILocation(line: 9981, column: 40, scope: !16111)
!16114 = !DILocation(line: 9981, column: 29, scope: !16111)
!16115 = !DILocation(line: 9981, column: 27, scope: !16111)
!16116 = !DILocation(line: 9982, column: 5, scope: !16111)
!16117 = !DILocation(line: 9982, column: 17, scope: !16081)
!16118 = !DILocation(line: 9982, column: 16, scope: !16082)
!16119 = !DILocation(line: 9983, column: 22, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 9982, column: 60)
!16121 = !DILocation(line: 9983, column: 9, scope: !16120)
!16122 = !DILocation(line: 9984, column: 41, scope: !16120)
!16123 = !DILocation(line: 9984, column: 30, scope: !16120)
!16124 = !DILocation(line: 9984, column: 28, scope: !16120)
!16125 = !DILocation(line: 9985, column: 5, scope: !16120)
!16126 = !DILocation(line: 9985, column: 17, scope: !16080)
!16127 = !DILocation(line: 9985, column: 16, scope: !16081)
!16128 = !DILocation(line: 9986, column: 22, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16080, file: !3, line: 9985, column: 59)
!16130 = !DILocation(line: 9986, column: 9, scope: !16129)
!16131 = !DILocation(line: 9987, column: 40, scope: !16129)
!16132 = !DILocation(line: 9987, column: 29, scope: !16129)
!16133 = !DILocation(line: 9987, column: 27, scope: !16129)
!16134 = !DILocation(line: 9988, column: 5, scope: !16129)
!16135 = !DILocation(line: 9988, column: 17, scope: !16079)
!16136 = !DILocation(line: 9988, column: 16, scope: !16080)
!16137 = !DILocation(line: 9989, column: 13, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !3, line: 9989, column: 13)
!16139 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 9988, column: 58)
!16140 = !DILocation(line: 9989, column: 42, scope: !16138)
!16141 = !DILocation(line: 9989, column: 55, scope: !16138)
!16142 = !DILocation(line: 9991, column: 26, scope: !16139)
!16143 = !DILocation(line: 9992, column: 5, scope: !16139)
!16144 = !DILocation(line: 9992, column: 17, scope: !16078)
!16145 = !DILocation(line: 9992, column: 16, scope: !16079)
!16146 = !DILocation(line: 9993, column: 13, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16148, file: !3, line: 9993, column: 13)
!16148 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 9992, column: 56)
!16149 = !DILocation(line: 9993, column: 42, scope: !16147)
!16150 = !DILocation(line: 9993, column: 55, scope: !16147)
!16151 = !DILocation(line: 9995, column: 30, scope: !16148)
!16152 = !DILocation(line: 9995, column: 28, scope: !16148)
!16153 = !DILocation(line: 9996, column: 5, scope: !16148)
!16154 = !DILocation(line: 9996, column: 17, scope: !16077)
!16155 = !DILocation(line: 9996, column: 16, scope: !16078)
!16156 = !DILocation(line: 9997, column: 28, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 9997, column: 13)
!16158 = distinct !DILexicalBlock(scope: !16077, file: !3, line: 9996, column: 60)
!16159 = !DILocation(line: 9997, column: 14, scope: !16157)
!16160 = !DILocation(line: 9997, column: 13, scope: !16158)
!16161 = !DILocation(line: 9998, column: 32, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 9997, column: 39)
!16163 = !DILocation(line: 9999, column: 9, scope: !16162)
!16164 = !DILocation(line: 9999, column: 21, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 9999, column: 20)
!16166 = !DILocation(line: 9999, column: 20, scope: !16157)
!16167 = !DILocation(line: 10000, column: 32, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 9999, column: 52)
!16169 = !DILocation(line: 10001, column: 9, scope: !16168)
!16170 = !DILocation(line: 10001, column: 21, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 10001, column: 20)
!16172 = !DILocation(line: 10001, column: 20, scope: !16165)
!16173 = !DILocation(line: 10002, column: 32, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16171, file: !3, line: 10001, column: 50)
!16175 = !DILocation(line: 10006, column: 17, scope: !16076)
!16176 = !DILocation(line: 10006, column: 16, scope: !16077)
!16177 = !DILocation(line: 0, scope: !16075)
!16178 = !DILocation(line: 10008, column: 31, scope: !16075)
!16179 = !DILocation(line: 10008, column: 19, scope: !16075)
!16180 = !DILocation(line: 10010, column: 17, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 10010, column: 13)
!16182 = !DILocation(line: 10010, column: 13, scope: !16075)
!16183 = !DILocation(line: 10007, column: 26, scope: !16075)
!16184 = !DILocation(line: 10011, column: 17, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 10011, column: 13)
!16186 = !DILocation(line: 10011, column: 13, scope: !16075)
!16187 = !DILocation(line: 10012, column: 21, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 10012, column: 17)
!16189 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 10011, column: 25)
!16190 = !DILocation(line: 10012, column: 17, scope: !16189)
!16191 = !DILocation(line: 10013, column: 17, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 10012, column: 27)
!16193 = !DILocation(line: 10014, column: 13, scope: !16192)
!16194 = !DILocation(line: 10015, column: 21, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 10015, column: 21)
!16196 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 10014, column: 20)
!16197 = !DILocation(line: 10015, column: 39, scope: !16195)
!16198 = !DILocation(line: 10015, column: 21, scope: !16196)
!16199 = !DILocation(line: 10016, column: 48, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 10015, column: 53)
!16201 = !DILocation(line: 10016, column: 35, scope: !16200)
!16202 = !DILocation(line: 10016, column: 21, scope: !16200)
!16203 = !DILocation(line: 10018, column: 34, scope: !16200)
!16204 = !DILocation(line: 10018, column: 21, scope: !16200)
!16205 = !DILocation(line: 10023, column: 17, scope: !16086)
!16206 = !DILocation(line: 10023, column: 16, scope: !16076)
!16207 = !DILocation(line: 10024, column: 9, scope: !16085)
!16208 = !DILocation(line: 10025, column: 33, scope: !16085)
!16209 = !DILocation(line: 10025, column: 37, scope: !16085)
!16210 = !DILocation(line: 0, scope: !16085)
!16211 = !DILocation(line: 10025, column: 18, scope: !16085)
!16212 = !DILocation(line: 10030, column: 13, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 10030, column: 13)
!16214 = !DILocation(line: 10030, column: 18, scope: !16213)
!16215 = !DILocation(line: 10030, column: 13, scope: !16085)
!16216 = !DILocation(line: 10034, column: 23, scope: !16091)
!16217 = !DILocation(line: 10034, column: 9, scope: !16092)
!16218 = !DILocation(line: 10031, column: 13, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16213, file: !3, line: 10030, column: 23)
!16220 = !DILocation(line: 10032, column: 13, scope: !16219)
!16221 = !DILocation(line: 10035, column: 13, scope: !16090)
!16222 = !DILocation(line: 10038, column: 27, scope: !16090)
!16223 = !DILocation(line: 0, scope: !16090)
!16224 = !DILocation(line: 10038, column: 19, scope: !16090)
!16225 = !DILocation(line: 10039, column: 17, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16090, file: !3, line: 10039, column: 17)
!16227 = !DILocation(line: 10039, column: 25, scope: !16226)
!16228 = !DILocation(line: 10039, column: 33, scope: !16226)
!16229 = !DILocation(line: 10040, column: 21, scope: !16226)
!16230 = !DILocation(line: 10040, column: 26, scope: !16226)
!16231 = !DILocation(line: 10040, column: 31, scope: !16226)
!16232 = !DILocation(line: 10041, column: 26, scope: !16226)
!16233 = !DILocation(line: 10041, column: 31, scope: !16226)
!16234 = !DILocation(line: 10042, column: 35, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16226, file: !3, line: 10041, column: 44)
!16236 = !DILocation(line: 10042, column: 17, scope: !16235)
!16237 = !DILocation(line: 10045, column: 9, scope: !16091)
!16238 = !DILocation(line: 10034, column: 32, scope: !16091)
!16239 = !DILocation(line: 10034, column: 25, scope: !16091)
!16240 = distinct !{!16240, !16217, !16241}
!16241 = !DILocation(line: 10045, column: 9, scope: !16092)
!16242 = !DILocation(line: 10047, column: 9, scope: !16085)
!16243 = !DILocation(line: 10048, column: 25, scope: !16096)
!16244 = !DILocation(line: 10048, column: 23, scope: !16096)
!16245 = !DILocation(line: 10048, column: 9, scope: !16097)
!16246 = !DILocation(line: 10052, column: 31, scope: !16095)
!16247 = !DILocation(line: 10052, column: 23, scope: !16095)
!16248 = !DILocation(line: 0, scope: !16095)
!16249 = !DILocation(line: 10053, column: 34, scope: !16095)
!16250 = !DILocation(line: 10053, column: 31, scope: !16095)
!16251 = !DILocation(line: 10053, column: 23, scope: !16095)
!16252 = !DILocation(line: 10054, column: 13, scope: !16095)
!16253 = !DILocation(line: 10048, column: 33, scope: !16096)
!16254 = distinct !{!16254, !16245, !16255}
!16255 = !DILocation(line: 10055, column: 9, scope: !16097)
!16256 = !DILocation(line: 10057, column: 5, scope: !16086)
!16257 = !DILocation(line: 10056, column: 9, scope: !16085)
!16258 = !DILocation(line: 10058, column: 36, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 10057, column: 12)
!16260 = !DILocation(line: 10060, column: 23, scope: !16259)
!16261 = !DILocation(line: 10060, column: 20, scope: !16259)
!16262 = !DILocation(line: 10060, column: 32, scope: !16259)
!16263 = !DILocation(line: 10058, column: 23, scope: !16259)
!16264 = !DILocation(line: 10058, column: 9, scope: !16259)
!16265 = !DILocation(line: 10061, column: 22, scope: !16259)
!16266 = !DILocation(line: 10061, column: 9, scope: !16259)
!16267 = !DILocation(line: 10062, column: 9, scope: !16259)
!16268 = !DILocation(line: 10064, column: 18, scope: !16069)
!16269 = !DILocation(line: 10064, column: 5, scope: !16069)
!16270 = !DILocation(line: 10065, column: 23, scope: !16069)
!16271 = !DILocation(line: 10065, column: 5, scope: !16069)
!16272 = !DILocation(line: 10066, column: 5, scope: !16069)
!16273 = !DILocation(line: 10068, column: 1, scope: !16069)
!16274 = !DILocation(line: 10069, column: 32, scope: !16069)
!16275 = !DILocation(line: 10071, column: 23, scope: !16069)
!16276 = !DILocation(line: 10072, column: 23, scope: !16069)
!16277 = !DILocation(line: 10072, column: 20, scope: !16069)
!16278 = !DILocation(line: 10072, column: 32, scope: !16069)
!16279 = !DILocation(line: 10069, column: 19, scope: !16069)
!16280 = !DILocation(line: 10069, column: 5, scope: !16069)
!16281 = !DILocation(line: 10073, column: 18, scope: !16069)
!16282 = !DILocation(line: 10073, column: 5, scope: !16069)
!16283 = !DILocation(line: 10074, column: 1, scope: !16069)
!16284 = distinct !DISubprogram(name: "configGetCommand", scope: !3, file: !3, line: 10076, type: !340, scopeLine: 10076, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16285)
!16285 = !{!16286, !16287, !16288, !16289, !16290, !16291, !16294, !16297, !16300, !16303}
!16286 = !DILocalVariable(name: "c", arg: 1, scope: !16284, file: !3, line: 10076, type: !287)
!16287 = !DILocalVariable(name: "o", scope: !16284, file: !3, line: 10077, type: !145)
!16288 = !DILocalVariable(name: "lenobj", scope: !16284, file: !3, line: 10078, type: !145)
!16289 = !DILocalVariable(name: "pattern", scope: !16284, file: !3, line: 10079, type: !47)
!16290 = !DILocalVariable(name: "matches", scope: !16284, file: !3, line: 10080, type: !45)
!16291 = !DILocalVariable(name: "buf", scope: !16292, file: !3, line: 10101, type: !1247)
!16292 = distinct !DILexicalBlock(scope: !16293, file: !3, line: 10100, column: 45)
!16293 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10100, column: 9)
!16294 = !DILocalVariable(name: "buf", scope: !16295, file: !3, line: 10109, type: !1247)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 10108, column: 43)
!16296 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10108, column: 9)
!16297 = !DILocalVariable(name: "policy", scope: !16298, file: !3, line: 10122, type: !47)
!16298 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 10121, column: 47)
!16299 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10121, column: 9)
!16300 = !DILocalVariable(name: "buf", scope: !16301, file: !3, line: 10135, type: !165)
!16301 = distinct !DILexicalBlock(scope: !16302, file: !3, line: 10134, column: 40)
!16302 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10134, column: 9)
!16303 = !DILocalVariable(name: "j", scope: !16301, file: !3, line: 10136, type: !45)
!16304 = !DILocation(line: 0, scope: !16284)
!16305 = !DILocation(line: 10077, column: 35, scope: !16284)
!16306 = !DILocation(line: 10077, column: 32, scope: !16284)
!16307 = !DILocation(line: 10077, column: 15, scope: !16284)
!16308 = !DILocation(line: 10078, column: 20, scope: !16284)
!16309 = !DILocation(line: 10079, column: 24, scope: !16284)
!16310 = !DILocation(line: 10082, column: 5, scope: !16284)
!16311 = !DILocation(line: 10083, column: 18, scope: !16284)
!16312 = !DILocation(line: 10083, column: 5, scope: !16284)
!16313 = !DILocation(line: 10085, column: 9, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10085, column: 9)
!16315 = !DILocation(line: 10085, column: 9, scope: !16284)
!16316 = !DILocation(line: 10086, column: 9, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 10085, column: 46)
!16318 = !DILocation(line: 10087, column: 38, scope: !16317)
!16319 = !DILocation(line: 10087, column: 9, scope: !16317)
!16320 = !DILocation(line: 10089, column: 5, scope: !16317)
!16321 = !DILocation(line: 10090, column: 9, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10090, column: 9)
!16323 = !DILocation(line: 10090, column: 9, scope: !16284)
!16324 = !DILocation(line: 10091, column: 9, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16322, file: !3, line: 10090, column: 47)
!16326 = !DILocation(line: 10092, column: 38, scope: !16325)
!16327 = !DILocation(line: 10092, column: 9, scope: !16325)
!16328 = !DILocation(line: 10093, column: 16, scope: !16325)
!16329 = !DILocation(line: 10094, column: 5, scope: !16325)
!16330 = !DILocation(line: 10095, column: 9, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10095, column: 9)
!16332 = !DILocation(line: 10095, column: 9, scope: !16284)
!16333 = !DILocation(line: 10096, column: 9, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 10095, column: 46)
!16335 = !DILocation(line: 10097, column: 38, scope: !16334)
!16336 = !DILocation(line: 10097, column: 9, scope: !16334)
!16337 = !DILocation(line: 10098, column: 16, scope: !16334)
!16338 = !DILocation(line: 10099, column: 5, scope: !16334)
!16339 = !DILocation(line: 10100, column: 9, scope: !16293)
!16340 = !DILocation(line: 10100, column: 9, scope: !16284)
!16341 = !DILocation(line: 10101, column: 9, scope: !16292)
!16342 = !DILocation(line: 10101, column: 14, scope: !16292)
!16343 = !DILocation(line: 10103, column: 34, scope: !16292)
!16344 = !DILocation(line: 10103, column: 9, scope: !16292)
!16345 = !DILocation(line: 10104, column: 9, scope: !16292)
!16346 = !DILocation(line: 10105, column: 9, scope: !16292)
!16347 = !DILocation(line: 10106, column: 16, scope: !16292)
!16348 = !DILocation(line: 10107, column: 5, scope: !16293)
!16349 = !DILocation(line: 10107, column: 5, scope: !16292)
!16350 = !DILocation(line: 10108, column: 9, scope: !16296)
!16351 = !DILocation(line: 10108, column: 9, scope: !16284)
!16352 = !DILocation(line: 10109, column: 9, scope: !16295)
!16353 = !DILocation(line: 10109, column: 14, scope: !16295)
!16354 = !DILocation(line: 10111, column: 34, scope: !16295)
!16355 = !DILocation(line: 10111, column: 27, scope: !16295)
!16356 = !DILocation(line: 10111, column: 9, scope: !16295)
!16357 = !DILocation(line: 10112, column: 9, scope: !16295)
!16358 = !DILocation(line: 10113, column: 9, scope: !16295)
!16359 = !DILocation(line: 10114, column: 16, scope: !16295)
!16360 = !DILocation(line: 10115, column: 5, scope: !16296)
!16361 = !DILocation(line: 10115, column: 5, scope: !16295)
!16362 = !DILocation(line: 10116, column: 9, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 10116, column: 9)
!16364 = !DILocation(line: 10116, column: 9, scope: !16284)
!16365 = !DILocation(line: 10117, column: 9, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 10116, column: 46)
!16367 = !DILocation(line: 10118, column: 38, scope: !16366)
!16368 = !DILocation(line: 10118, column: 31, scope: !16366)
!16369 = !DILocation(line: 10118, column: 9, scope: !16366)
!16370 = !DILocation(line: 10119, column: 16, scope: !16366)
!16371 = !DILocation(line: 10120, column: 5, scope: !16366)
!16372 = !DILocation(line: 10121, column: 9, scope: !16299)
!16373 = !DILocation(line: 10121, column: 9, scope: !16284)
!16374 = !DILocation(line: 10124, column: 23, scope: !16298)
!16375 = !DILocation(line: 10124, column: 9, scope: !16298)
!16376 = !DILocation(line: 0, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 10124, column: 36)
!16378 = !DILocation(line: 0, scope: !16298)
!16379 = !DILocation(line: 10130, column: 9, scope: !16298)
!16380 = !DILocation(line: 10131, column: 9, scope: !16298)
!16381 = !DILocation(line: 10132, column: 16, scope: !16298)
!16382 = !DILocation(line: 10133, column: 5, scope: !16298)
!16383 = !DILocation(line: 10134, column: 9, scope: !16302)
!16384 = !DILocation(line: 10134, column: 9, scope: !16284)
!16385 = !DILocation(line: 10135, column: 19, scope: !16301)
!16386 = !DILocation(line: 0, scope: !16301)
!16387 = !DILocation(line: 10138, column: 32, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 10138, column: 9)
!16389 = distinct !DILexicalBlock(scope: !16301, file: !3, line: 10138, column: 9)
!16390 = !{!709, !713, i64 472}
!16391 = !DILocation(line: 10138, column: 23, scope: !16388)
!16392 = !DILocation(line: 10138, column: 9, scope: !16389)
!16393 = !DILocation(line: 10140, column: 28, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 10138, column: 52)
!16395 = !{!709, !714, i64 464}
!16396 = !DILocation(line: 10140, column: 42, scope: !16394)
!16397 = !{!16398, !710, i64 0}
!16398 = !{!"saveparam", !710, i64 0, !713, i64 8}
!16399 = !DILocation(line: 10141, column: 42, scope: !16394)
!16400 = !{!16398, !713, i64 8}
!16401 = !DILocation(line: 10139, column: 19, scope: !16394)
!16402 = !DILocation(line: 10142, column: 29, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 10142, column: 17)
!16404 = !DILocation(line: 10142, column: 42, scope: !16403)
!16405 = !DILocation(line: 10142, column: 19, scope: !16403)
!16406 = !DILocation(line: 10142, column: 17, scope: !16394)
!16407 = !DILocation(line: 10143, column: 23, scope: !16403)
!16408 = !DILocation(line: 10143, column: 17, scope: !16403)
!16409 = !DILocation(line: 0, scope: !16394)
!16410 = !DILocation(line: 10138, column: 48, scope: !16388)
!16411 = distinct !{!16411, !16392, !16412}
!16412 = !DILocation(line: 10144, column: 9, scope: !16389)
!16413 = !DILocation(line: 10145, column: 9, scope: !16301)
!16414 = !DILocation(line: 10146, column: 9, scope: !16301)
!16415 = !DILocation(line: 10147, column: 9, scope: !16301)
!16416 = !DILocation(line: 10148, column: 16, scope: !16301)
!16417 = !DILocation(line: 10149, column: 5, scope: !16301)
!16418 = !DILocation(line: 10150, column: 18, scope: !16284)
!16419 = !DILocation(line: 10150, column: 5, scope: !16284)
!16420 = !DILocation(line: 10151, column: 32, scope: !16284)
!16421 = !DILocation(line: 10151, column: 60, scope: !16284)
!16422 = !DILocation(line: 10151, column: 19, scope: !16284)
!16423 = !DILocation(line: 10151, column: 13, scope: !16284)
!16424 = !DILocation(line: 10151, column: 17, scope: !16284)
!16425 = !DILocation(line: 10152, column: 1, scope: !16284)
!16426 = !DISubprogram(name: "zstrdup", scope: !1470, file: !1470, line: 37, type: !16427, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16427 = !DISubroutineType(types: !16428)
!16428 = !{!47, !741}
!16429 = distinct !DISubprogram(name: "yesnotoi", scope: !3, file: !3, line: 1800, type: !1232, scopeLine: 1800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16430)
!16430 = !{!16431}
!16431 = !DILocalVariable(name: "s", arg: 1, scope: !16429, file: !3, line: 1800, type: !47)
!16432 = !DILocation(line: 0, scope: !16429)
!16433 = !DILocation(line: 1801, column: 10, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16429, file: !3, line: 1801, column: 9)
!16435 = !DILocation(line: 1801, column: 9, scope: !16429)
!16436 = !DILocation(line: 1802, column: 15, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 1802, column: 14)
!16438 = !DILocation(line: 0, scope: !16437)
!16439 = !DILocation(line: 0, scope: !16434)
!16440 = !DILocation(line: 1804, column: 1, scope: !16429)
!16441 = distinct !DISubprogram(name: "stopAppendOnly", scope: !3, file: !3, line: 8812, type: !1747, scopeLine: 8812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16442)
!16442 = !{!16443}
!16443 = !DILocalVariable(name: "statloc", scope: !16444, file: !3, line: 8822, type: !45)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !3, line: 8821, column: 38)
!16445 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 8821, column: 9)
!16446 = !DILocation(line: 8813, column: 5, scope: !16441)
!16447 = !DILocation(line: 8814, column: 18, scope: !16441)
!16448 = !DILocation(line: 8814, column: 5, scope: !16441)
!16449 = !DILocation(line: 8815, column: 18, scope: !16441)
!16450 = !DILocation(line: 8815, column: 5, scope: !16441)
!16451 = !DILocation(line: 8817, column: 21, scope: !16441)
!16452 = !DILocation(line: 8818, column: 24, scope: !16441)
!16453 = !DILocation(line: 8819, column: 23, scope: !16441)
!16454 = !DILocation(line: 8821, column: 16, scope: !16445)
!16455 = !DILocation(line: 8821, column: 31, scope: !16445)
!16456 = !DILocation(line: 8821, column: 9, scope: !16441)
!16457 = !DILocation(line: 8822, column: 9, scope: !16444)
!16458 = !DILocation(line: 8824, column: 13, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16444, file: !3, line: 8824, column: 13)
!16460 = !DILocation(line: 8824, column: 49, scope: !16459)
!16461 = !DILocation(line: 8824, column: 13, scope: !16444)
!16462 = !DILocation(line: 0, scope: !16444)
!16463 = !DILocation(line: 8825, column: 13, scope: !16459)
!16464 = !DILocation(line: 8827, column: 24, scope: !16444)
!16465 = !DILocation(line: 8827, column: 9, scope: !16444)
!16466 = !DILocation(line: 8828, column: 31, scope: !16444)
!16467 = !DILocation(line: 8828, column: 29, scope: !16444)
!16468 = !DILocation(line: 8829, column: 31, scope: !16444)
!16469 = !DILocation(line: 8830, column: 5, scope: !16445)
!16470 = !DILocation(line: 8830, column: 5, scope: !16444)
!16471 = !DILocation(line: 8831, column: 1, scope: !16441)
!16472 = distinct !DISubprogram(name: "startAppendOnly", scope: !3, file: !3, line: 8835, type: !1709, scopeLine: 8835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!16473 = !DILocation(line: 8836, column: 23, scope: !16472)
!16474 = !DILocation(line: 8837, column: 24, scope: !16472)
!16475 = !DILocation(line: 8837, column: 22, scope: !16472)
!16476 = !{!709, !710, i64 416}
!16477 = !DILocation(line: 8838, column: 35, scope: !16472)
!16478 = !DILocation(line: 8838, column: 23, scope: !16472)
!16479 = !DILocation(line: 8838, column: 21, scope: !16472)
!16480 = !DILocation(line: 8839, column: 25, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16472, file: !3, line: 8839, column: 9)
!16482 = !DILocation(line: 8839, column: 9, scope: !16472)
!16483 = !DILocation(line: 8843, column: 9, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16472, file: !3, line: 8843, column: 9)
!16485 = !DILocation(line: 8843, column: 43, scope: !16484)
!16486 = !DILocation(line: 8843, column: 9, scope: !16472)
!16487 = !DILocation(line: 8844, column: 27, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 8843, column: 57)
!16489 = !DILocation(line: 8845, column: 22, scope: !16488)
!16490 = !DILocation(line: 8845, column: 9, scope: !16488)
!16491 = !DILocation(line: 8847, column: 9, scope: !16488)
!16492 = !DILocation(line: 0, scope: !16472)
!16493 = !DILocation(line: 8850, column: 1, scope: !16472)
!16494 = !DISubprogram(name: "sdsfreesplitres", scope: !166, file: !166, line: 68, type: !16495, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16495 = !DISubroutineType(types: !16496)
!16496 = !{null, !1849, !45}
!16497 = distinct !DISubprogram(name: "appendServerSaveParams", scope: !3, file: !3, line: 1654, type: !16498, scopeLine: 1654, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16500)
!16498 = !DISubroutineType(types: !16499)
!16499 = !{null, !49, !45}
!16500 = !{!16501, !16502}
!16501 = !DILocalVariable(name: "seconds", arg: 1, scope: !16497, file: !3, line: 1654, type: !49)
!16502 = !DILocalVariable(name: "changes", arg: 2, scope: !16497, file: !3, line: 1654, type: !45)
!16503 = !DILocation(line: 0, scope: !16497)
!16504 = !DILocation(line: 1655, column: 41, scope: !16497)
!16505 = !DILocation(line: 1655, column: 85, scope: !16497)
!16506 = !DILocation(line: 1655, column: 98, scope: !16497)
!16507 = !DILocation(line: 1655, column: 77, scope: !16497)
!16508 = !DILocation(line: 1655, column: 76, scope: !16497)
!16509 = !DILocation(line: 1655, column: 25, scope: !16497)
!16510 = !DILocation(line: 1655, column: 23, scope: !16497)
!16511 = !DILocation(line: 1656, column: 30, scope: !16497)
!16512 = !DILocation(line: 1656, column: 5, scope: !16497)
!16513 = !DILocation(line: 1656, column: 45, scope: !16497)
!16514 = !DILocation(line: 1656, column: 53, scope: !16497)
!16515 = !DILocation(line: 1657, column: 45, scope: !16497)
!16516 = !DILocation(line: 1657, column: 53, scope: !16497)
!16517 = !DILocation(line: 1658, column: 25, scope: !16497)
!16518 = !DILocation(line: 1659, column: 1, scope: !16497)
!16519 = distinct !DISubprogram(name: "flushAppendOnlyFile", scope: !3, file: !3, line: 8230, type: !1747, scopeLine: 8230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16520)
!16520 = !{!16521, !16522}
!16521 = !DILocalVariable(name: "now", scope: !16519, file: !3, line: 8231, type: !49)
!16522 = !DILocalVariable(name: "nwritten", scope: !16519, file: !3, line: 8232, type: !1089)
!16523 = !DILocation(line: 8234, column: 23, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 8234, column: 9)
!16525 = !DILocation(line: 8234, column: 9, scope: !16524)
!16526 = !DILocation(line: 8234, column: 31, scope: !16524)
!16527 = !DILocation(line: 8234, column: 9, scope: !16519)
!16528 = !DILocation(line: 8241, column: 30, scope: !16519)
!16529 = !DILocation(line: 8241, column: 46, scope: !16519)
!16530 = !DILocation(line: 8241, column: 53, scope: !16519)
!16531 = !DILocation(line: 8241, column: 17, scope: !16519)
!16532 = !DILocation(line: 0, scope: !16519)
!16533 = !DILocation(line: 8242, column: 44, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 8242, column: 10)
!16535 = !DILocation(line: 8242, column: 30, scope: !16534)
!16536 = !DILocation(line: 8242, column: 22, scope: !16534)
!16537 = !DILocation(line: 8242, column: 19, scope: !16534)
!16538 = !DILocation(line: 8242, column: 10, scope: !16519)
!16539 = !DILocation(line: 8246, column: 23, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 8246, column: 14)
!16541 = distinct !DILexicalBlock(scope: !16534, file: !3, line: 8242, column: 53)
!16542 = !DILocation(line: 0, scope: !16540)
!16543 = !DILocation(line: 8251, column: 10, scope: !16541)
!16544 = !DILocation(line: 8253, column: 20, scope: !16519)
!16545 = !DILocation(line: 8253, column: 5, scope: !16519)
!16546 = !DILocation(line: 8254, column: 21, scope: !16519)
!16547 = !DILocation(line: 8254, column: 19, scope: !16519)
!16548 = !DILocation(line: 8257, column: 11, scope: !16519)
!16549 = !DILocation(line: 8258, column: 16, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 8258, column: 9)
!16551 = !DILocation(line: 8258, column: 50, scope: !16550)
!16552 = !DILocation(line: 8260, column: 21, scope: !16550)
!16553 = !DILocation(line: 8260, column: 13, scope: !16550)
!16554 = !DILocation(line: 8260, column: 31, scope: !16550)
!16555 = !DILocation(line: 8258, column: 9, scope: !16519)
!16556 = !DILocation(line: 8264, column: 26, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16550, file: !3, line: 8261, column: 5)
!16558 = !DILocation(line: 8264, column: 9, scope: !16557)
!16559 = !DILocation(line: 8265, column: 26, scope: !16557)
!16560 = !DILocation(line: 8266, column: 5, scope: !16557)
!16561 = !DILocation(line: 8267, column: 1, scope: !16519)
!16562 = !DISubprogram(name: "wait3", scope: !16563, file: !16563, line: 136, type: !16564, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/wait.h", directory: "", checksumkind: CSK_MD5, checksum: "6b7302c12011b4fba722770ed61d7499")
!16564 = !DISubroutineType(types: !16565)
!16565 = !{!541, !3301, !45, !16566}
!16566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16567, size: 64)
!16567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rusage", file: !16568, line: 33, size: 1152, elements: !16569)
!16568 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h", directory: "", checksumkind: CSK_MD5, checksum: "024787487a4541a3a0c5c835b9fb0d40")
!16569 = !{!16570, !16571, !16572, !16577, !16582, !16587, !16592, !16597, !16602, !16607, !16612, !16617, !16622, !16627, !16632, !16637}
!16570 = !DIDerivedType(tag: DW_TAG_member, name: "ru_utime", scope: !16567, file: !16568, line: 36, baseType: !7560, size: 128)
!16571 = !DIDerivedType(tag: DW_TAG_member, name: "ru_stime", scope: !16567, file: !16568, line: 38, baseType: !7560, size: 128, offset: 128)
!16572 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 40, baseType: !16573, size: 64, offset: 256)
!16573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 40, size: 64, elements: !16574)
!16574 = !{!16575, !16576}
!16575 = !DIDerivedType(tag: DW_TAG_member, name: "ru_maxrss", scope: !16573, file: !16568, line: 42, baseType: !53, size: 64)
!16576 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_maxrss_word", scope: !16573, file: !16568, line: 43, baseType: !870, size: 64)
!16577 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 47, baseType: !16578, size: 64, offset: 320)
!16578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 47, size: 64, elements: !16579)
!16579 = !{!16580, !16581}
!16580 = !DIDerivedType(tag: DW_TAG_member, name: "ru_ixrss", scope: !16578, file: !16568, line: 49, baseType: !53, size: 64)
!16581 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_ixrss_word", scope: !16578, file: !16568, line: 50, baseType: !870, size: 64)
!16582 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 53, baseType: !16583, size: 64, offset: 384)
!16583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 53, size: 64, elements: !16584)
!16584 = !{!16585, !16586}
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "ru_idrss", scope: !16583, file: !16568, line: 55, baseType: !53, size: 64)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_idrss_word", scope: !16583, file: !16568, line: 56, baseType: !870, size: 64)
!16587 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 59, baseType: !16588, size: 64, offset: 448)
!16588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 59, size: 64, elements: !16589)
!16589 = !{!16590, !16591}
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "ru_isrss", scope: !16588, file: !16568, line: 61, baseType: !53, size: 64)
!16591 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_isrss_word", scope: !16588, file: !16568, line: 62, baseType: !870, size: 64)
!16592 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 66, baseType: !16593, size: 64, offset: 512)
!16593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 66, size: 64, elements: !16594)
!16594 = !{!16595, !16596}
!16595 = !DIDerivedType(tag: DW_TAG_member, name: "ru_minflt", scope: !16593, file: !16568, line: 68, baseType: !53, size: 64)
!16596 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_minflt_word", scope: !16593, file: !16568, line: 69, baseType: !870, size: 64)
!16597 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 72, baseType: !16598, size: 64, offset: 576)
!16598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 72, size: 64, elements: !16599)
!16599 = !{!16600, !16601}
!16600 = !DIDerivedType(tag: DW_TAG_member, name: "ru_majflt", scope: !16598, file: !16568, line: 74, baseType: !53, size: 64)
!16601 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_majflt_word", scope: !16598, file: !16568, line: 75, baseType: !870, size: 64)
!16602 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 78, baseType: !16603, size: 64, offset: 640)
!16603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 78, size: 64, elements: !16604)
!16604 = !{!16605, !16606}
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nswap", scope: !16603, file: !16568, line: 80, baseType: !53, size: 64)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nswap_word", scope: !16603, file: !16568, line: 81, baseType: !870, size: 64)
!16607 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 85, baseType: !16608, size: 64, offset: 704)
!16608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 85, size: 64, elements: !16609)
!16609 = !{!16610, !16611}
!16610 = !DIDerivedType(tag: DW_TAG_member, name: "ru_inblock", scope: !16608, file: !16568, line: 87, baseType: !53, size: 64)
!16611 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_inblock_word", scope: !16608, file: !16568, line: 88, baseType: !870, size: 64)
!16612 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 91, baseType: !16613, size: 64, offset: 768)
!16613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 91, size: 64, elements: !16614)
!16614 = !{!16615, !16616}
!16615 = !DIDerivedType(tag: DW_TAG_member, name: "ru_oublock", scope: !16613, file: !16568, line: 93, baseType: !53, size: 64)
!16616 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_oublock_word", scope: !16613, file: !16568, line: 94, baseType: !870, size: 64)
!16617 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 97, baseType: !16618, size: 64, offset: 832)
!16618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 97, size: 64, elements: !16619)
!16619 = !{!16620, !16621}
!16620 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgsnd", scope: !16618, file: !16568, line: 99, baseType: !53, size: 64)
!16621 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgsnd_word", scope: !16618, file: !16568, line: 100, baseType: !870, size: 64)
!16622 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 103, baseType: !16623, size: 64, offset: 896)
!16623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 103, size: 64, elements: !16624)
!16624 = !{!16625, !16626}
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgrcv", scope: !16623, file: !16568, line: 105, baseType: !53, size: 64)
!16626 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgrcv_word", scope: !16623, file: !16568, line: 106, baseType: !870, size: 64)
!16627 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 109, baseType: !16628, size: 64, offset: 960)
!16628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 109, size: 64, elements: !16629)
!16629 = !{!16630, !16631}
!16630 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nsignals", scope: !16628, file: !16568, line: 111, baseType: !53, size: 64)
!16631 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nsignals_word", scope: !16628, file: !16568, line: 112, baseType: !870, size: 64)
!16632 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 117, baseType: !16633, size: 64, offset: 1024)
!16633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 117, size: 64, elements: !16634)
!16634 = !{!16635, !16636}
!16635 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nvcsw", scope: !16633, file: !16568, line: 119, baseType: !53, size: 64)
!16636 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nvcsw_word", scope: !16633, file: !16568, line: 120, baseType: !870, size: 64)
!16637 = !DIDerivedType(tag: DW_TAG_member, scope: !16567, file: !16568, line: 124, baseType: !16638, size: 64, offset: 1088)
!16638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16567, file: !16568, line: 124, size: 64, elements: !16639)
!16639 = !{!16640, !16641}
!16640 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nivcsw", scope: !16638, file: !16568, line: 126, baseType: !53, size: 64)
!16641 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nivcsw_word", scope: !16638, file: !16568, line: 127, baseType: !870, size: 64)
!16642 = !DISubprogram(name: "fdatasync", scope: !1086, file: !1086, line: 1115, type: !1096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16643 = distinct !DISubprogram(name: "stringmatch", scope: !3, file: !3, line: 984, type: !16644, scopeLine: 984, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16646)
!16644 = !DISubroutineType(types: !16645)
!16645 = !{!45, !741, !741, !45}
!16646 = !{!16647, !16648, !16649}
!16647 = !DILocalVariable(name: "pattern", arg: 1, scope: !16643, file: !3, line: 984, type: !741)
!16648 = !DILocalVariable(name: "string", arg: 2, scope: !16643, file: !3, line: 984, type: !741)
!16649 = !DILocalVariable(name: "nocase", arg: 3, scope: !16643, file: !3, line: 984, type: !45)
!16650 = !DILocation(line: 0, scope: !16643)
!16651 = !DILocation(line: 985, column: 35, scope: !16643)
!16652 = !DILocation(line: 985, column: 58, scope: !16643)
!16653 = !DILocation(line: 985, column: 12, scope: !16643)
!16654 = !DILocation(line: 985, column: 5, scope: !16643)
!16655 = distinct !DISubprogram(name: "addReplyBulkCString", scope: !3, file: !3, line: 2849, type: !16656, scopeLine: 2849, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{null, !287, !47}
!16658 = !{!16659, !16660, !16661}
!16659 = !DILocalVariable(name: "c", arg: 1, scope: !16655, file: !3, line: 2849, type: !287)
!16660 = !DILocalVariable(name: "s", arg: 2, scope: !16655, file: !3, line: 2849, type: !47)
!16661 = !DILocalVariable(name: "o", scope: !16662, file: !3, line: 2853, type: !145)
!16662 = distinct !DILexicalBlock(scope: !16663, file: !3, line: 2852, column: 12)
!16663 = distinct !DILexicalBlock(scope: !16655, file: !3, line: 2850, column: 9)
!16664 = !DILocation(line: 0, scope: !16655)
!16665 = !DILocation(line: 2850, column: 11, scope: !16663)
!16666 = !DILocation(line: 2850, column: 9, scope: !16655)
!16667 = !DILocation(line: 2851, column: 27, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16663, file: !3, line: 2850, column: 20)
!16669 = !DILocation(line: 2851, column: 9, scope: !16668)
!16670 = !DILocation(line: 2852, column: 5, scope: !16668)
!16671 = !DILocation(line: 2853, column: 40, scope: !16662)
!16672 = !DILocation(line: 2853, column: 19, scope: !16662)
!16673 = !DILocation(line: 0, scope: !16662)
!16674 = !DILocation(line: 2854, column: 9, scope: !16662)
!16675 = !DILocation(line: 2855, column: 22, scope: !16662)
!16676 = !DILocation(line: 2855, column: 9, scope: !16662)
!16677 = !DILocation(line: 2857, column: 1, scope: !16655)
!16678 = distinct !DISubprogram(name: "pubsubPublishMessage", scope: !3, file: !3, line: 10349, type: !6943, scopeLine: 10349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16679)
!16679 = !{!16680, !16681, !16682, !16683, !16684, !16685, !16686, !16689, !16690, !16691, !16693}
!16680 = !DILocalVariable(name: "channel", arg: 1, scope: !16678, file: !3, line: 10349, type: !145)
!16681 = !DILocalVariable(name: "message", arg: 2, scope: !16678, file: !3, line: 10349, type: !145)
!16682 = !DILocalVariable(name: "receivers", scope: !16678, file: !3, line: 10350, type: !45)
!16683 = !DILocalVariable(name: "de", scope: !16678, file: !3, line: 10351, type: !131)
!16684 = !DILocalVariable(name: "ln", scope: !16678, file: !3, line: 10352, type: !64)
!16685 = !DILocalVariable(name: "li", scope: !16678, file: !3, line: 10353, type: !831)
!16686 = !DILocalVariable(name: "list", scope: !16687, file: !3, line: 10358, type: !58)
!16687 = distinct !DILexicalBlock(scope: !16688, file: !3, line: 10357, column: 13)
!16688 = distinct !DILexicalBlock(scope: !16678, file: !3, line: 10357, column: 9)
!16689 = !DILocalVariable(name: "ln", scope: !16687, file: !3, line: 10359, type: !64)
!16690 = !DILocalVariable(name: "li", scope: !16687, file: !3, line: 10360, type: !831)
!16691 = !DILocalVariable(name: "c", scope: !16692, file: !3, line: 10364, type: !287)
!16692 = distinct !DILexicalBlock(scope: !16687, file: !3, line: 10363, column: 46)
!16693 = !DILocalVariable(name: "pat", scope: !16694, file: !3, line: 10378, type: !4364)
!16694 = distinct !DILexicalBlock(scope: !16695, file: !3, line: 10377, column: 46)
!16695 = distinct !DILexicalBlock(scope: !16696, file: !3, line: 10374, column: 45)
!16696 = distinct !DILexicalBlock(scope: !16678, file: !3, line: 10374, column: 9)
!16697 = !DILocation(line: 0, scope: !16678)
!16698 = !DILocation(line: 10353, column: 5, scope: !16678)
!16699 = !DILocation(line: 10353, column: 14, scope: !16678)
!16700 = !DILocation(line: 10356, column: 26, scope: !16678)
!16701 = !DILocation(line: 10356, column: 42, scope: !16678)
!16702 = !DILocation(line: 10356, column: 10, scope: !16678)
!16703 = !DILocation(line: 10357, column: 9, scope: !16688)
!16704 = !DILocation(line: 10357, column: 9, scope: !16678)
!16705 = !DILocation(line: 10358, column: 22, scope: !16687)
!16706 = !DILocation(line: 0, scope: !16687)
!16707 = !DILocation(line: 10360, column: 9, scope: !16687)
!16708 = !DILocation(line: 10360, column: 18, scope: !16687)
!16709 = !DILocation(line: 10362, column: 9, scope: !16687)
!16710 = !DILocation(line: 10363, column: 22, scope: !16687)
!16711 = !DILocation(line: 10363, column: 37, scope: !16687)
!16712 = !DILocation(line: 10363, column: 9, scope: !16687)
!16713 = !DILocation(line: 10364, column: 34, scope: !16692)
!16714 = !DILocation(line: 0, scope: !16692)
!16715 = !DILocation(line: 10366, column: 31, scope: !16692)
!16716 = !DILocation(line: 10366, column: 13, scope: !16692)
!16717 = !DILocation(line: 10367, column: 31, scope: !16692)
!16718 = !{!3571, !714, i64 232}
!16719 = !DILocation(line: 10367, column: 13, scope: !16692)
!16720 = !DILocation(line: 10368, column: 13, scope: !16692)
!16721 = !DILocation(line: 10369, column: 13, scope: !16692)
!16722 = !DILocation(line: 10370, column: 22, scope: !16692)
!16723 = distinct !{!16723, !16712, !16724}
!16724 = !DILocation(line: 10371, column: 9, scope: !16687)
!16725 = !DILocation(line: 10372, column: 5, scope: !16688)
!16726 = !DILocation(line: 10372, column: 5, scope: !16687)
!16727 = !DILocation(line: 10350, column: 9, scope: !16678)
!16728 = !DILocation(line: 10374, column: 9, scope: !16696)
!16729 = !DILocation(line: 10374, column: 9, scope: !16678)
!16730 = !DILocation(line: 10375, column: 9, scope: !16695)
!16731 = !DILocation(line: 10376, column: 19, scope: !16695)
!16732 = !DILocation(line: 10377, column: 22, scope: !16695)
!16733 = !DILocation(line: 10377, column: 37, scope: !16695)
!16734 = !DILocation(line: 10377, column: 9, scope: !16695)
!16735 = !DILocation(line: 10378, column: 38, scope: !16694)
!16736 = !DILocation(line: 0, scope: !16694)
!16737 = !DILocation(line: 10380, column: 44, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16694, file: !3, line: 10380, column: 17)
!16739 = !DILocation(line: 10380, column: 53, scope: !16738)
!16740 = !DILocation(line: 10381, column: 33, scope: !16738)
!16741 = !DILocation(line: 10382, column: 49, scope: !16738)
!16742 = !DILocation(line: 10383, column: 33, scope: !16738)
!16743 = !DILocation(line: 10380, column: 17, scope: !16738)
!16744 = !DILocation(line: 10380, column: 17, scope: !16694)
!16745 = !DILocation(line: 10384, column: 31, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16738, file: !3, line: 10383, column: 58)
!16747 = !DILocation(line: 10384, column: 45, scope: !16746)
!16748 = !{!3571, !714, i64 272}
!16749 = !DILocation(line: 10384, column: 17, scope: !16746)
!16750 = !DILocation(line: 10385, column: 31, scope: !16746)
!16751 = !DILocation(line: 10385, column: 45, scope: !16746)
!16752 = !{!3571, !714, i64 240}
!16753 = !DILocation(line: 10385, column: 17, scope: !16746)
!16754 = !DILocation(line: 10386, column: 35, scope: !16746)
!16755 = !DILocation(line: 10386, column: 47, scope: !16746)
!16756 = !DILocation(line: 10386, column: 17, scope: !16746)
!16757 = !DILocation(line: 10387, column: 35, scope: !16746)
!16758 = !DILocation(line: 10387, column: 17, scope: !16746)
!16759 = !DILocation(line: 10388, column: 35, scope: !16746)
!16760 = !DILocation(line: 10388, column: 17, scope: !16746)
!16761 = !DILocation(line: 10389, column: 26, scope: !16746)
!16762 = !DILocation(line: 10390, column: 13, scope: !16746)
!16763 = distinct !{!16763, !16734, !16764}
!16764 = !DILocation(line: 10391, column: 9, scope: !16695)
!16765 = !DILocation(line: 10392, column: 22, scope: !16695)
!16766 = !DILocation(line: 10392, column: 9, scope: !16695)
!16767 = !DILocation(line: 10393, column: 5, scope: !16695)
!16768 = !DILocation(line: 10395, column: 1, scope: !16678)
!16769 = !DILocation(line: 10394, column: 5, scope: !16678)
!16770 = distinct !DISubprogram(name: "isStringRepresentableAsLong", scope: !3, file: !3, line: 3153, type: !16771, scopeLine: 3153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16773)
!16771 = !DISubroutineType(types: !16772)
!16772 = !{!45, !165, !4921}
!16773 = !{!16774, !16775, !16776, !16777, !16778, !16779}
!16774 = !DILocalVariable(name: "s", arg: 1, scope: !16770, file: !3, line: 3153, type: !165)
!16775 = !DILocalVariable(name: "longval", arg: 2, scope: !16770, file: !3, line: 3153, type: !4921)
!16776 = !DILocalVariable(name: "buf", scope: !16770, file: !3, line: 3154, type: !4256)
!16777 = !DILocalVariable(name: "endptr", scope: !16770, file: !3, line: 3154, type: !47)
!16778 = !DILocalVariable(name: "value", scope: !16770, file: !3, line: 3155, type: !53)
!16779 = !DILocalVariable(name: "slen", scope: !16770, file: !3, line: 3156, type: !45)
!16780 = !DILocation(line: 0, scope: !16770)
!16781 = !DILocation(line: 3154, column: 5, scope: !16770)
!16782 = !DILocation(line: 3154, column: 10, scope: !16770)
!16783 = !DILocation(line: 3158, column: 13, scope: !16770)
!16784 = !DILocation(line: 3159, column: 9, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 3159, column: 9)
!16786 = !DILocation(line: 3159, column: 19, scope: !16785)
!16787 = !DILocation(line: 3159, column: 9, scope: !16770)
!16788 = !DILocation(line: 3160, column: 12, scope: !16770)
!16789 = !DILocation(line: 3164, column: 9, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 3164, column: 9)
!16791 = !DILocation(line: 3164, column: 22, scope: !16790)
!16792 = !DILocation(line: 3164, column: 19, scope: !16790)
!16793 = !DILocation(line: 3164, column: 37, scope: !16790)
!16794 = !DILocation(line: 3164, column: 53, scope: !16790)
!16795 = !DILocation(line: 3164, column: 40, scope: !16790)
!16796 = !DILocation(line: 3164, column: 9, scope: !16770)
!16797 = !DILocation(line: 3165, column: 9, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 3165, column: 9)
!16799 = !DILocation(line: 3165, column: 9, scope: !16770)
!16800 = !DILocation(line: 3165, column: 27, scope: !16798)
!16801 = !DILocation(line: 3165, column: 18, scope: !16798)
!16802 = !DILocation(line: 3167, column: 1, scope: !16770)
!16803 = distinct !DISubprogram(name: "freeStringObject", scope: !3, file: !3, line: 2986, type: !4091, scopeLine: 2986, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16804)
!16804 = !{!16805}
!16805 = !DILocalVariable(name: "o", arg: 1, scope: !16803, file: !3, line: 2986, type: !145)
!16806 = !DILocation(line: 0, scope: !16803)
!16807 = !DILocation(line: 2987, column: 12, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 2987, column: 9)
!16809 = !DILocation(line: 2987, column: 21, scope: !16808)
!16810 = !DILocation(line: 2987, column: 9, scope: !16803)
!16811 = !DILocation(line: 2988, column: 20, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16808, file: !3, line: 2987, column: 44)
!16813 = !DILocation(line: 2988, column: 9, scope: !16812)
!16814 = !DILocation(line: 2989, column: 5, scope: !16812)
!16815 = !DILocation(line: 2990, column: 1, scope: !16803)
!16816 = distinct !DISubprogram(name: "freeListObject", scope: !3, file: !3, line: 2992, type: !4091, scopeLine: 2992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16817)
!16817 = !{!16818}
!16818 = !DILocalVariable(name: "o", arg: 1, scope: !16816, file: !3, line: 2992, type: !145)
!16819 = !DILocation(line: 0, scope: !16816)
!16820 = !DILocation(line: 2993, column: 28, scope: !16816)
!16821 = !DILocation(line: 2993, column: 5, scope: !16816)
!16822 = !DILocation(line: 2994, column: 1, scope: !16816)
!16823 = distinct !DISubprogram(name: "freeSetObject", scope: !3, file: !3, line: 2996, type: !4091, scopeLine: 2996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16824)
!16824 = !{!16825}
!16825 = !DILocalVariable(name: "o", arg: 1, scope: !16823, file: !3, line: 2996, type: !145)
!16826 = !DILocation(line: 0, scope: !16823)
!16827 = !DILocation(line: 2997, column: 28, scope: !16823)
!16828 = !DILocation(line: 2997, column: 5, scope: !16823)
!16829 = !DILocation(line: 2998, column: 1, scope: !16823)
!16830 = distinct !DISubprogram(name: "freeZsetObject", scope: !3, file: !3, line: 3000, type: !4091, scopeLine: 3000, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16831)
!16831 = !{!16832, !16833}
!16832 = !DILocalVariable(name: "o", arg: 1, scope: !16830, file: !3, line: 3000, type: !145)
!16833 = !DILocalVariable(name: "zs", scope: !16830, file: !3, line: 3001, type: !171)
!16834 = !DILocation(line: 0, scope: !16830)
!16835 = !DILocation(line: 3001, column: 19, scope: !16830)
!16836 = !DILocation(line: 3003, column: 21, scope: !16830)
!16837 = !DILocation(line: 3003, column: 5, scope: !16830)
!16838 = !DILocation(line: 3004, column: 17, scope: !16830)
!16839 = !DILocation(line: 3004, column: 5, scope: !16830)
!16840 = !DILocation(line: 3005, column: 5, scope: !16830)
!16841 = !DILocation(line: 3006, column: 1, scope: !16830)
!16842 = distinct !DISubprogram(name: "freeHashObject", scope: !3, file: !3, line: 3008, type: !4091, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16843)
!16843 = !{!16844}
!16844 = !DILocalVariable(name: "o", arg: 1, scope: !16842, file: !3, line: 3008, type: !145)
!16845 = !DILocation(line: 0, scope: !16842)
!16846 = !DILocation(line: 3009, column: 16, scope: !16842)
!16847 = !DILocation(line: 3009, column: 5, scope: !16842)
!16848 = !DILocation(line: 3011, column: 32, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16842, file: !3, line: 3009, column: 26)
!16850 = !DILocation(line: 3011, column: 9, scope: !16849)
!16851 = !DILocation(line: 3012, column: 9, scope: !16849)
!16852 = !DILocation(line: 3014, column: 18, scope: !16849)
!16853 = !DILocation(line: 3014, column: 9, scope: !16849)
!16854 = !DILocation(line: 3015, column: 9, scope: !16849)
!16855 = !DILocation(line: 3017, column: 9, scope: !16849)
!16856 = !DILocation(line: 3020, column: 1, scope: !16842)
!16857 = distinct !DISubprogram(name: "zslFree", scope: !3, file: !3, line: 5481, type: !16858, scopeLine: 5481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16860)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{null, !177}
!16860 = !{!16861, !16862, !16863}
!16861 = !DILocalVariable(name: "zsl", arg: 1, scope: !16857, file: !3, line: 5481, type: !177)
!16862 = !DILocalVariable(name: "node", scope: !16857, file: !3, line: 5482, type: !1121)
!16863 = !DILocalVariable(name: "next", scope: !16857, file: !3, line: 5482, type: !1121)
!16864 = !DILocation(line: 0, scope: !16857)
!16865 = !DILocation(line: 5482, column: 32, scope: !16857)
!16866 = !DILocation(line: 5482, column: 40, scope: !16857)
!16867 = !DILocation(line: 5482, column: 27, scope: !16857)
!16868 = !DILocation(line: 5484, column: 11, scope: !16857)
!16869 = !DILocation(line: 5484, column: 5, scope: !16857)
!16870 = !DILocation(line: 5485, column: 16, scope: !16857)
!16871 = !DILocation(line: 5485, column: 24, scope: !16857)
!16872 = !DILocation(line: 5485, column: 5, scope: !16857)
!16873 = !DILocation(line: 5486, column: 16, scope: !16857)
!16874 = !DILocation(line: 5486, column: 5, scope: !16857)
!16875 = !DILocation(line: 5487, column: 5, scope: !16857)
!16876 = !DILocation(line: 5488, column: 22, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16857, file: !3, line: 5487, column: 17)
!16878 = !DILocation(line: 5488, column: 16, scope: !16877)
!16879 = !DILocation(line: 5489, column: 9, scope: !16877)
!16880 = distinct !{!16880, !16875, !16881}
!16881 = !DILocation(line: 5491, column: 5, scope: !16857)
!16882 = !DILocation(line: 5492, column: 11, scope: !16857)
!16883 = !DILocation(line: 5492, column: 5, scope: !16857)
!16884 = !DILocation(line: 5493, column: 1, scope: !16857)
!16885 = distinct !DISubprogram(name: "initServerConfig", scope: !3, file: !3, line: 1667, type: !1747, scopeLine: 1667, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!16886 = !DILocation(line: 1668, column: 18, scope: !16885)
!16887 = !DILocation(line: 1669, column: 17, scope: !16885)
!16888 = !DILocation(line: 1670, column: 22, scope: !16885)
!16889 = !DILocation(line: 1671, column: 24, scope: !16885)
!16890 = !DILocation(line: 1672, column: 23, scope: !16885)
!16891 = !DILocation(line: 1673, column: 20, scope: !16885)
!16892 = !DILocation(line: 1675, column: 26, scope: !16885)
!16893 = !DILocation(line: 1676, column: 22, scope: !16885)
!16894 = !DILocation(line: 1677, column: 23, scope: !16885)
!16895 = !DILocation(line: 1678, column: 24, scope: !16885)
!16896 = !DILocation(line: 1679, column: 24, scope: !16885)
!16897 = !DILocation(line: 1679, column: 22, scope: !16885)
!16898 = !DILocation(line: 1680, column: 21, scope: !16885)
!16899 = !DILocation(line: 1681, column: 24, scope: !16885)
!16900 = !DILocation(line: 1682, column: 22, scope: !16885)
!16901 = !DILocation(line: 1682, column: 20, scope: !16885)
!16902 = !DILocation(line: 1683, column: 25, scope: !16885)
!16903 = !DILocation(line: 1683, column: 23, scope: !16885)
!16904 = !DILocation(line: 1684, column: 29, scope: !16885)
!16905 = !DILocation(line: 1684, column: 27, scope: !16885)
!16906 = !DILocation(line: 1685, column: 24, scope: !16885)
!16907 = !DILocation(line: 1686, column: 27, scope: !16885)
!16908 = !DILocation(line: 1687, column: 28, scope: !16885)
!16909 = !DILocation(line: 1688, column: 23, scope: !16885)
!16910 = !DILocation(line: 1689, column: 34, scope: !16885)
!16911 = !DILocation(line: 1690, column: 22, scope: !16885)
!16912 = !DILocation(line: 1691, column: 23, scope: !16885)
!16913 = !DILocation(line: 1692, column: 27, scope: !16885)
!16914 = !DILocation(line: 1692, column: 25, scope: !16885)
!16915 = !DILocation(line: 1693, column: 25, scope: !16885)
!16916 = !DILocation(line: 1695, column: 26, scope: !16885)
!16917 = !DILocation(line: 1696, column: 27, scope: !16885)
!16918 = !DILocation(line: 1697, column: 31, scope: !16885)
!16919 = !DILocation(line: 1698, column: 36, scope: !16885)
!16920 = !DILocation(line: 1700, column: 26, scope: !16885)
!16921 = !{!709, !713, i64 412}
!16922 = !DILocation(line: 1702, column: 5, scope: !16885)
!16923 = !DILocation(line: 1704, column: 5, scope: !16885)
!16924 = !DILocation(line: 1705, column: 5, scope: !16885)
!16925 = !DILocation(line: 1706, column: 5, scope: !16885)
!16926 = !DILocation(line: 1708, column: 20, scope: !16885)
!16927 = !{!709, !713, i64 528}
!16928 = !DILocation(line: 1709, column: 23, scope: !16885)
!16929 = !DILocation(line: 1711, column: 23, scope: !16885)
!16930 = !DILocation(line: 1712, column: 19, scope: !16885)
!16931 = !DILocation(line: 1713, column: 22, scope: !16885)
!16932 = !DILocation(line: 1717, column: 14, scope: !16885)
!16933 = !DILocation(line: 1718, column: 14, scope: !16885)
!16934 = !DILocation(line: 1719, column: 11, scope: !16885)
!16935 = !DILocation(line: 1720, column: 1, scope: !16885)
!16936 = distinct !DISubprogram(name: "version", scope: !3, file: !3, line: 10810, type: !1747, scopeLine: 10810, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!16937 = !DILocation(line: 10811, column: 5, scope: !16936)
!16938 = !DILocation(line: 10812, column: 5, scope: !16936)
!16939 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 10815, type: !1747, scopeLine: 10815, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!16940 = !DILocation(line: 10816, column: 13, scope: !16939)
!16941 = !DILocation(line: 10816, column: 5, scope: !16939)
!16942 = !DILocation(line: 10817, column: 13, scope: !16939)
!16943 = !DILocation(line: 10817, column: 5, scope: !16939)
!16944 = !DILocation(line: 10818, column: 5, scope: !16939)
!16945 = distinct !DISubprogram(name: "resetServerSaveParams", scope: !3, file: !3, line: 1661, type: !1747, scopeLine: 1661, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !812)
!16946 = !DILocation(line: 1662, column: 18, scope: !16945)
!16947 = !DILocation(line: 1662, column: 5, scope: !16945)
!16948 = !DILocation(line: 1663, column: 23, scope: !16945)
!16949 = !DILocation(line: 1664, column: 26, scope: !16945)
!16950 = !DILocation(line: 1665, column: 1, scope: !16945)
!16951 = !DISubprogram(name: "sdstrim", scope: !166, file: !166, line: 63, type: !16952, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16952 = !DISubroutineType(types: !16953)
!16953 = !{!165, !165, !741}
!16954 = !DISubprogram(name: "sdstolower", scope: !166, file: !166, line: 69, type: !1103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16955 = !DISubprogram(name: "chdir", scope: !1086, file: !1086, line: 497, type: !2612, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!16956 = distinct !DISubprogram(name: "memtoll", scope: !3, file: !3, line: 994, type: !16957, scopeLine: 994, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16959)
!16957 = !DISubroutineType(types: !16958)
!16958 = !{!54, !741, !3301}
!16959 = !{!16960, !16961, !16962, !16963, !16964, !16965, !16966}
!16960 = !DILocalVariable(name: "p", arg: 1, scope: !16956, file: !3, line: 994, type: !741)
!16961 = !DILocalVariable(name: "err", arg: 2, scope: !16956, file: !3, line: 994, type: !3301)
!16962 = !DILocalVariable(name: "u", scope: !16956, file: !3, line: 995, type: !741)
!16963 = !DILocalVariable(name: "buf", scope: !16956, file: !3, line: 996, type: !1247)
!16964 = !DILocalVariable(name: "mul", scope: !16956, file: !3, line: 997, type: !53)
!16965 = !DILocalVariable(name: "val", scope: !16956, file: !3, line: 998, type: !54)
!16966 = !DILocalVariable(name: "digits", scope: !16956, file: !3, line: 999, type: !7)
!16967 = !DILocation(line: 0, scope: !16956)
!16968 = !DILocation(line: 996, column: 5, scope: !16956)
!16969 = !DILocation(line: 996, column: 10, scope: !16956)
!16970 = !DILocation(line: 1004, column: 9, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 1004, column: 9)
!16972 = !DILocation(line: 1004, column: 12, scope: !16971)
!16973 = !DILocation(line: 1004, column: 9, scope: !16956)
!16974 = !DILocation(line: 1005, column: 11, scope: !16956)
!16975 = !DILocation(line: 1005, column: 14, scope: !16956)
!16976 = !DILocation(line: 1005, column: 17, scope: !16956)
!16977 = !DILocation(line: 1005, column: 5, scope: !16956)
!16978 = !DILocation(line: 1005, column: 31, scope: !16956)
!16979 = distinct !{!16979, !16977, !16978}
!16980 = !DILocation(line: 1006, column: 24, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 1006, column: 9)
!16982 = !DILocation(line: 1006, column: 9, scope: !16956)
!16983 = !DILocation(line: 1008, column: 17, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 1008, column: 16)
!16985 = !DILocation(line: 1008, column: 16, scope: !16981)
!16986 = !DILocation(line: 1010, column: 17, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 1010, column: 16)
!16988 = !DILocation(line: 1010, column: 16, scope: !16984)
!16989 = !DILocation(line: 1012, column: 17, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16987, file: !3, line: 1012, column: 16)
!16991 = !DILocation(line: 1012, column: 16, scope: !16987)
!16992 = !DILocation(line: 1014, column: 17, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1014, column: 16)
!16994 = !DILocation(line: 1014, column: 16, scope: !16990)
!16995 = !DILocation(line: 1016, column: 17, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16993, file: !3, line: 1016, column: 16)
!16997 = !DILocation(line: 1016, column: 16, scope: !16993)
!16998 = !DILocation(line: 1018, column: 17, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16996, file: !3, line: 1018, column: 16)
!17000 = !DILocation(line: 1018, column: 16, scope: !16996)
!17001 = !DILocation(line: 0, scope: !16981)
!17002 = !DILocation(line: 1024, column: 15, scope: !16956)
!17003 = !DILocation(line: 1025, column: 9, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 1025, column: 9)
!17005 = !DILocation(line: 1025, column: 16, scope: !17004)
!17006 = !DILocation(line: 1025, column: 9, scope: !16956)
!17007 = !DILocation(line: 1029, column: 5, scope: !16956)
!17008 = !DILocation(line: 1030, column: 5, scope: !16956)
!17009 = !DILocation(line: 1030, column: 17, scope: !16956)
!17010 = !DILocation(line: 1031, column: 11, scope: !16956)
!17011 = !DILocation(line: 1032, column: 15, scope: !16956)
!17012 = !DILocation(line: 1032, column: 5, scope: !16956)
!17013 = !DILocation(line: 1033, column: 1, scope: !16956)
!17014 = !DISubprogram(name: "setsid", scope: !1086, file: !1086, line: 667, type: !2604, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17015 = !DISubprogram(name: "dup2", scope: !1086, file: !1086, line: 534, type: !17016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17016 = !DISubroutineType(types: !17017)
!17017 = !{!45, !45, !45}
!17018 = distinct !DISubprogram(name: "initServer", scope: !3, file: !3, line: 1722, type: !1747, scopeLine: 1722, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17019)
!17019 = !{!17020}
!17020 = !DILocalVariable(name: "j", scope: !17018, file: !3, line: 1723, type: !45)
!17021 = !DILocation(line: 1725, column: 5, scope: !17018)
!17022 = !DILocation(line: 1726, column: 5, scope: !17018)
!17023 = !DILocation(line: 1727, column: 5, scope: !17018)
!17024 = !DILocation(line: 1729, column: 25, scope: !17018)
!17025 = !DILocation(line: 1729, column: 23, scope: !17018)
!17026 = !DILocation(line: 1730, column: 22, scope: !17018)
!17027 = !DILocation(line: 1730, column: 20, scope: !17018)
!17028 = !{!709, !714, i64 976}
!17029 = !DILocation(line: 1731, column: 24, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1731, column: 9)
!17031 = !DILocation(line: 1731, column: 9, scope: !17018)
!17032 = !DILocation(line: 1732, column: 9, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17030, file: !3, line: 1731, column: 33)
!17034 = !DILocation(line: 1733, column: 9, scope: !17033)
!17035 = !DILocation(line: 1735, column: 22, scope: !17018)
!17036 = !DILocation(line: 1735, column: 20, scope: !17018)
!17037 = !DILocation(line: 1736, column: 21, scope: !17018)
!17038 = !DILocation(line: 1736, column: 19, scope: !17018)
!17039 = !DILocation(line: 1737, column: 23, scope: !17018)
!17040 = !DILocation(line: 1737, column: 21, scope: !17018)
!17041 = !DILocation(line: 1738, column: 26, scope: !17018)
!17042 = !DILocation(line: 1738, column: 24, scope: !17018)
!17043 = !DILocation(line: 1739, column: 5, scope: !17018)
!17044 = !DILocation(line: 1740, column: 17, scope: !17018)
!17045 = !DILocation(line: 1740, column: 15, scope: !17018)
!17046 = !DILocation(line: 1741, column: 48, scope: !17018)
!17047 = !DILocation(line: 1741, column: 41, scope: !17018)
!17048 = !DILocation(line: 1741, column: 40, scope: !17018)
!17049 = !DILocation(line: 1741, column: 17, scope: !17018)
!17050 = !DILocation(line: 1741, column: 15, scope: !17018)
!17051 = !DILocation(line: 1742, column: 53, scope: !17018)
!17052 = !DILocation(line: 1742, column: 66, scope: !17018)
!17053 = !DILocation(line: 1742, column: 17, scope: !17018)
!17054 = !DILocation(line: 1742, column: 15, scope: !17018)
!17055 = !DILocation(line: 1743, column: 19, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1743, column: 9)
!17057 = !DILocation(line: 1743, column: 9, scope: !17018)
!17058 = !DILocation(line: 0, scope: !17018)
!17059 = !DILocation(line: 1747, column: 28, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17061, file: !3, line: 1747, column: 5)
!17061 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1747, column: 5)
!17062 = !DILocation(line: 1747, column: 19, scope: !17060)
!17063 = !DILocation(line: 1747, column: 5, scope: !17061)
!17064 = !DILocation(line: 1744, column: 9, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 1743, column: 26)
!17066 = !DILocation(line: 1745, column: 9, scope: !17065)
!17067 = !DILocation(line: 1748, column: 29, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17060, file: !3, line: 1747, column: 40)
!17069 = !DILocation(line: 1748, column: 16, scope: !17068)
!17070 = !DILocation(line: 1748, column: 22, scope: !17068)
!17071 = !DILocation(line: 1748, column: 27, scope: !17068)
!17072 = !DILocation(line: 1749, column: 32, scope: !17068)
!17073 = !DILocation(line: 1749, column: 16, scope: !17068)
!17074 = !DILocation(line: 1749, column: 22, scope: !17068)
!17075 = !DILocation(line: 1749, column: 30, scope: !17068)
!17076 = !DILocation(line: 1750, column: 37, scope: !17068)
!17077 = !DILocation(line: 1750, column: 16, scope: !17068)
!17078 = !DILocation(line: 1750, column: 22, scope: !17068)
!17079 = !DILocation(line: 1750, column: 35, scope: !17068)
!17080 = !DILocation(line: 1751, column: 20, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 1751, column: 13)
!17082 = !DILocation(line: 1751, column: 13, scope: !17081)
!17083 = !DILocation(line: 1751, column: 13, scope: !17068)
!17084 = !DILocation(line: 1752, column: 36, scope: !17081)
!17085 = !DILocation(line: 1752, column: 20, scope: !17081)
!17086 = !DILocation(line: 1752, column: 26, scope: !17081)
!17087 = !DILocation(line: 1752, column: 34, scope: !17081)
!17088 = !DILocation(line: 1752, column: 13, scope: !17081)
!17089 = !DILocation(line: 1753, column: 16, scope: !17068)
!17090 = !DILocation(line: 1753, column: 22, scope: !17068)
!17091 = !DILocation(line: 1753, column: 25, scope: !17068)
!17092 = !DILocation(line: 1747, column: 36, scope: !17060)
!17093 = distinct !{!17093, !17063, !17094}
!17094 = !DILocation(line: 1754, column: 5, scope: !17061)
!17095 = !DILocation(line: 1755, column: 30, scope: !17018)
!17096 = !DILocation(line: 1755, column: 28, scope: !17018)
!17097 = !DILocation(line: 1756, column: 30, scope: !17018)
!17098 = !DILocation(line: 1756, column: 28, scope: !17018)
!17099 = !DILocation(line: 1757, column: 5, scope: !17018)
!17100 = !DILocation(line: 1758, column: 5, scope: !17018)
!17101 = !{!1359, !714, i64 32}
!17102 = !DILocation(line: 1759, column: 22, scope: !17018)
!17103 = !{!709, !713, i64 328}
!17104 = !DILocation(line: 1760, column: 27, scope: !17018)
!17105 = !DILocation(line: 1761, column: 30, scope: !17018)
!17106 = !DILocation(line: 1762, column: 27, scope: !17018)
!17107 = !DILocation(line: 1762, column: 25, scope: !17018)
!17108 = !DILocation(line: 1763, column: 21, scope: !17018)
!17109 = !DILocation(line: 1763, column: 19, scope: !17018)
!17110 = !DILocation(line: 1764, column: 23, scope: !17018)
!17111 = !DILocation(line: 1764, column: 21, scope: !17018)
!17112 = !DILocation(line: 1765, column: 18, scope: !17018)
!17113 = !DILocation(line: 1766, column: 29, scope: !17018)
!17114 = !DILocation(line: 1768, column: 29, scope: !17018)
!17115 = !DILocation(line: 1769, column: 29, scope: !17018)
!17116 = !DILocation(line: 1769, column: 27, scope: !17018)
!17117 = !DILocation(line: 1770, column: 23, scope: !17018)
!17118 = !DILocation(line: 1770, column: 21, scope: !17018)
!17119 = !DILocation(line: 1771, column: 30, scope: !17018)
!17120 = !DILocation(line: 1771, column: 5, scope: !17018)
!17121 = !DILocation(line: 1772, column: 34, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1772, column: 9)
!17123 = !DILocation(line: 1772, column: 45, scope: !17122)
!17124 = !DILocation(line: 1772, column: 9, scope: !17122)
!17125 = !DILocation(line: 1773, column: 30, scope: !17122)
!17126 = !DILocation(line: 1772, column: 9, scope: !17018)
!17127 = !DILocation(line: 1773, column: 41, scope: !17122)
!17128 = !DILocation(line: 1775, column: 16, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1775, column: 9)
!17130 = !DILocation(line: 1775, column: 9, scope: !17129)
!17131 = !DILocation(line: 1775, column: 9, scope: !17018)
!17132 = !DILocation(line: 1776, column: 39, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17129, file: !3, line: 1775, column: 28)
!17134 = !DILocation(line: 1776, column: 27, scope: !17133)
!17135 = !DILocation(line: 1776, column: 25, scope: !17133)
!17136 = !DILocation(line: 1777, column: 29, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17133, file: !3, line: 1777, column: 13)
!17138 = !DILocation(line: 1777, column: 13, scope: !17133)
!17139 = !DILocation(line: 1779, column: 26, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17137, file: !3, line: 1777, column: 36)
!17141 = !DILocation(line: 1779, column: 17, scope: !17140)
!17142 = !DILocation(line: 1778, column: 13, scope: !17140)
!17143 = !DILocation(line: 1780, column: 13, scope: !17140)
!17144 = !DILocation(line: 1784, column: 16, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 1784, column: 9)
!17146 = !DILocation(line: 1784, column: 9, scope: !17145)
!17147 = !DILocation(line: 1784, column: 9, scope: !17018)
!17148 = !DILocation(line: 1784, column: 28, scope: !17145)
!17149 = !DILocation(line: 1785, column: 1, scope: !17018)
!17150 = !DISubprogram(name: "signal", scope: !200, file: !200, line: 88, type: !17151, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17151 = !DISubroutineType(types: !17152)
!17152 = !{!199, !45, !199}
!17153 = distinct !DISubprogram(name: "setupSigSegvAction", scope: !3, file: !3, line: 10932, type: !1747, scopeLine: 10932, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17154)
!17154 = !{!17155}
!17155 = !DILocalVariable(name: "act", scope: !17153, file: !3, line: 10933, type: !17156)
!17156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !17157, line: 27, size: 1216, elements: !17158)
!17157 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "", checksumkind: CSK_MD5, checksum: "1805cae78f5d4b57699d05e93bbc6a62")
!17158 = !{!17159, !17240, !17241, !17242}
!17159 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !17156, file: !17157, line: 38, baseType: !17160, size: 64)
!17160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17156, file: !17157, line: 31, size: 64, elements: !17161)
!17161 = !{!17162, !17163}
!17162 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !17160, file: !17157, line: 34, baseType: !199, size: 64)
!17163 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !17160, file: !17157, line: 36, baseType: !17164, size: 64)
!17164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17165, size: 64)
!17165 = !DISubroutineType(types: !17166)
!17166 = !{null, !45, !17167, !46}
!17167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17168, size: 64)
!17168 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !17169, line: 124, baseType: !17170)
!17169 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "", checksumkind: CSK_MD5, checksum: "023cf7b0ef843da262cf07900eda0ac5")
!17170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !17169, line: 36, size: 1024, elements: !17171)
!17171 = !{!17172, !17173, !17174, !17175, !17176}
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !17170, file: !17169, line: 38, baseType: !45, size: 32)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !17170, file: !17169, line: 40, baseType: !45, size: 32, offset: 32)
!17174 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !17170, file: !17169, line: 42, baseType: !45, size: 32, offset: 64)
!17175 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17170, file: !17169, line: 48, baseType: !45, size: 32, offset: 96)
!17176 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !17170, file: !17169, line: 123, baseType: !17177, size: 896, offset: 128)
!17177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17170, file: !17169, line: 51, size: 896, elements: !17178)
!17178 = !{!17179, !17183, !17188, !17200, !17206, !17215, !17229, !17234}
!17179 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !17177, file: !17169, line: 53, baseType: !17180, size: 896)
!17180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 896, elements: !17181)
!17181 = !{!17182}
!17182 = !DISubrange(count: 28)
!17183 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !17177, file: !17169, line: 60, baseType: !17184, size: 64)
!17184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 56, size: 64, elements: !17185)
!17185 = !{!17186, !17187}
!17186 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !17184, file: !17169, line: 58, baseType: !541, size: 32)
!17187 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !17184, file: !17169, line: 59, baseType: !854, size: 32, offset: 32)
!17188 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !17177, file: !17169, line: 68, baseType: !17189, size: 128)
!17189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 63, size: 128, elements: !17190)
!17190 = !{!17191, !17192, !17193}
!17191 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !17189, file: !17169, line: 65, baseType: !45, size: 32)
!17192 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !17189, file: !17169, line: 66, baseType: !45, size: 32, offset: 32)
!17193 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !17189, file: !17169, line: 67, baseType: !17194, size: 64, offset: 64)
!17194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !17195, line: 30, baseType: !17196)
!17195 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "", checksumkind: CSK_MD5, checksum: "b8454a73bc9e55d1e2fd22e496f3e023")
!17196 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !17195, line: 24, size: 64, elements: !17197)
!17197 = !{!17198, !17199}
!17198 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !17196, file: !17195, line: 26, baseType: !45, size: 32)
!17199 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !17196, file: !17195, line: 27, baseType: !46, size: 64)
!17200 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !17177, file: !17169, line: 76, baseType: !17201, size: 128)
!17201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 71, size: 128, elements: !17202)
!17202 = !{!17203, !17204, !17205}
!17203 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !17201, file: !17169, line: 73, baseType: !541, size: 32)
!17204 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !17201, file: !17169, line: 74, baseType: !854, size: 32, offset: 32)
!17205 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !17201, file: !17169, line: 75, baseType: !17194, size: 64, offset: 64)
!17206 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !17177, file: !17169, line: 86, baseType: !17207, size: 256)
!17207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 79, size: 256, elements: !17208)
!17208 = !{!17209, !17210, !17211, !17212, !17214}
!17209 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !17207, file: !17169, line: 81, baseType: !541, size: 32)
!17210 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !17207, file: !17169, line: 82, baseType: !854, size: 32, offset: 32)
!17211 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !17207, file: !17169, line: 83, baseType: !45, size: 32, offset: 64)
!17212 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !17207, file: !17169, line: 84, baseType: !17213, size: 64, offset: 128)
!17213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !52, line: 156, baseType: !53)
!17214 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !17207, file: !17169, line: 85, baseType: !17213, size: 64, offset: 192)
!17215 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !17177, file: !17169, line: 105, baseType: !17216, size: 256)
!17216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 89, size: 256, elements: !17217)
!17217 = !{!17218, !17219, !17220}
!17218 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !17216, file: !17169, line: 91, baseType: !46, size: 64)
!17219 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !17216, file: !17169, line: 93, baseType: !142, size: 16, offset: 64)
!17220 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !17216, file: !17169, line: 104, baseType: !17221, size: 128, offset: 128)
!17221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17216, file: !17169, line: 94, size: 128, elements: !17222)
!17222 = !{!17223, !17228}
!17223 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !17221, file: !17169, line: 101, baseType: !17224, size: 128)
!17224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17221, file: !17169, line: 97, size: 128, elements: !17225)
!17225 = !{!17226, !17227}
!17226 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !17224, file: !17169, line: 99, baseType: !46, size: 64)
!17227 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !17224, file: !17169, line: 100, baseType: !46, size: 64, offset: 64)
!17228 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !17221, file: !17169, line: 103, baseType: !244, size: 32)
!17229 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !17177, file: !17169, line: 112, baseType: !17230, size: 128)
!17230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 108, size: 128, elements: !17231)
!17231 = !{!17232, !17233}
!17232 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !17230, file: !17169, line: 110, baseType: !53, size: 64)
!17233 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !17230, file: !17169, line: 111, baseType: !45, size: 32, offset: 64)
!17234 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !17177, file: !17169, line: 121, baseType: !17235, size: 128)
!17235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17177, file: !17169, line: 116, size: 128, elements: !17236)
!17236 = !{!17237, !17238, !17239}
!17237 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !17235, file: !17169, line: 118, baseType: !46, size: 64)
!17238 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !17235, file: !17169, line: 119, baseType: !45, size: 32, offset: 64)
!17239 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !17235, file: !17169, line: 120, baseType: !7, size: 32, offset: 96)
!17240 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !17156, file: !17157, line: 46, baseType: !278, size: 1024, offset: 64)
!17241 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !17156, file: !17157, line: 49, baseType: !45, size: 32, offset: 1088)
!17242 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !17156, file: !17157, line: 52, baseType: !17243, size: 64, offset: 1152)
!17243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!17244 = !DILocation(line: 10933, column: 5, scope: !17153)
!17245 = !DILocation(line: 10933, column: 22, scope: !17153)
!17246 = !DILocation(line: 10935, column: 23, scope: !17153)
!17247 = !DILocation(line: 10935, column: 5, scope: !17153)
!17248 = !DILocation(line: 10938, column: 9, scope: !17153)
!17249 = !DILocation(line: 10938, column: 18, scope: !17153)
!17250 = !{!17251, !713, i64 136}
!17251 = !{!"sigaction", !711, i64 0, !17252, i64 8, !713, i64 136, !714, i64 144}
!17252 = !{!"", !711, i64 0}
!17253 = !DILocation(line: 10939, column: 9, scope: !17153)
!17254 = !DILocation(line: 10939, column: 22, scope: !17153)
!17255 = !DILocation(line: 10940, column: 5, scope: !17153)
!17256 = !DILocation(line: 10941, column: 5, scope: !17153)
!17257 = !DILocation(line: 10942, column: 5, scope: !17153)
!17258 = !DILocation(line: 10943, column: 5, scope: !17153)
!17259 = !DILocation(line: 10944, column: 5, scope: !17153)
!17260 = !DILocation(line: 10946, column: 18, scope: !17153)
!17261 = !DILocation(line: 10947, column: 9, scope: !17153)
!17262 = !DILocation(line: 10947, column: 20, scope: !17153)
!17263 = !DILocation(line: 10948, column: 5, scope: !17153)
!17264 = !DILocation(line: 10950, column: 1, scope: !17153)
!17265 = distinct !DISubprogram(name: "createSharedObjects", scope: !3, file: !3, line: 1603, type: !1747, scopeLine: 1603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17266)
!17266 = !{!17267}
!17267 = !DILocalVariable(name: "j", scope: !17265, file: !3, line: 1604, type: !45)
!17268 = !DILocation(line: 1606, column: 45, scope: !17265)
!17269 = !DILocation(line: 1606, column: 19, scope: !17265)
!17270 = !DILocation(line: 1606, column: 17, scope: !17265)
!17271 = !DILocation(line: 1607, column: 43, scope: !17265)
!17272 = !DILocation(line: 1607, column: 17, scope: !17265)
!17273 = !DILocation(line: 1607, column: 15, scope: !17265)
!17274 = !DILocation(line: 1608, column: 44, scope: !17265)
!17275 = !DILocation(line: 1608, column: 18, scope: !17265)
!17276 = !DILocation(line: 1608, column: 16, scope: !17265)
!17277 = !DILocation(line: 1609, column: 50, scope: !17265)
!17278 = !DILocation(line: 1609, column: 24, scope: !17265)
!17279 = !DILocation(line: 1609, column: 22, scope: !17265)
!17280 = !{!3571, !714, i64 24}
!17281 = !DILocation(line: 1610, column: 46, scope: !17265)
!17282 = !DILocation(line: 1610, column: 20, scope: !17265)
!17283 = !DILocation(line: 1610, column: 18, scope: !17265)
!17284 = !DILocation(line: 1611, column: 45, scope: !17265)
!17285 = !DILocation(line: 1611, column: 19, scope: !17265)
!17286 = !DILocation(line: 1611, column: 17, scope: !17265)
!17287 = !DILocation(line: 1612, column: 49, scope: !17265)
!17288 = !DILocation(line: 1612, column: 23, scope: !17265)
!17289 = !DILocation(line: 1612, column: 21, scope: !17265)
!17290 = !DILocation(line: 1613, column: 54, scope: !17265)
!17291 = !DILocation(line: 1613, column: 28, scope: !17265)
!17292 = !DILocation(line: 1613, column: 26, scope: !17265)
!17293 = !DILocation(line: 1614, column: 55, scope: !17265)
!17294 = !DILocation(line: 1614, column: 29, scope: !17265)
!17295 = !DILocation(line: 1614, column: 27, scope: !17265)
!17296 = !DILocation(line: 1615, column: 45, scope: !17265)
!17297 = !DILocation(line: 1615, column: 19, scope: !17265)
!17298 = !DILocation(line: 1615, column: 17, scope: !17265)
!17299 = !DILocation(line: 1616, column: 47, scope: !17265)
!17300 = !DILocation(line: 1616, column: 21, scope: !17265)
!17301 = !DILocation(line: 1616, column: 19, scope: !17265)
!17302 = !DILocation(line: 1617, column: 53, scope: !17265)
!17303 = !DILocation(line: 1617, column: 27, scope: !17265)
!17304 = !DILocation(line: 1617, column: 25, scope: !17265)
!17305 = !DILocation(line: 1619, column: 49, scope: !17265)
!17306 = !DILocation(line: 1619, column: 23, scope: !17265)
!17307 = !DILocation(line: 1619, column: 21, scope: !17265)
!17308 = !DILocation(line: 1621, column: 50, scope: !17265)
!17309 = !DILocation(line: 1621, column: 24, scope: !17265)
!17310 = !DILocation(line: 1621, column: 22, scope: !17265)
!17311 = !DILocation(line: 1623, column: 54, scope: !17265)
!17312 = !DILocation(line: 1623, column: 28, scope: !17265)
!17313 = !DILocation(line: 1623, column: 26, scope: !17265)
!17314 = !DILocation(line: 1625, column: 54, scope: !17265)
!17315 = !DILocation(line: 1625, column: 28, scope: !17265)
!17316 = !DILocation(line: 1625, column: 26, scope: !17265)
!17317 = !DILocation(line: 1627, column: 46, scope: !17265)
!17318 = !DILocation(line: 1627, column: 20, scope: !17265)
!17319 = !DILocation(line: 1627, column: 18, scope: !17265)
!17320 = !{!3571, !714, i64 56}
!17321 = !DILocation(line: 1628, column: 46, scope: !17265)
!17322 = !DILocation(line: 1628, column: 20, scope: !17265)
!17323 = !DILocation(line: 1628, column: 18, scope: !17265)
!17324 = !DILocation(line: 1629, column: 45, scope: !17265)
!17325 = !DILocation(line: 1629, column: 19, scope: !17265)
!17326 = !DILocation(line: 1629, column: 17, scope: !17265)
!17327 = !{!3571, !714, i64 144}
!17328 = !DILocation(line: 1630, column: 22, scope: !17265)
!17329 = !DILocation(line: 1630, column: 20, scope: !17265)
!17330 = !DILocation(line: 1631, column: 22, scope: !17265)
!17331 = !DILocation(line: 1631, column: 20, scope: !17265)
!17332 = !DILocation(line: 1632, column: 22, scope: !17265)
!17333 = !DILocation(line: 1632, column: 20, scope: !17265)
!17334 = !DILocation(line: 1633, column: 22, scope: !17265)
!17335 = !DILocation(line: 1633, column: 20, scope: !17265)
!17336 = !DILocation(line: 1634, column: 22, scope: !17265)
!17337 = !DILocation(line: 1634, column: 20, scope: !17265)
!17338 = !DILocation(line: 1635, column: 22, scope: !17265)
!17339 = !DILocation(line: 1635, column: 20, scope: !17265)
!17340 = !DILocation(line: 1636, column: 22, scope: !17265)
!17341 = !DILocation(line: 1636, column: 20, scope: !17265)
!17342 = !DILocation(line: 1637, column: 22, scope: !17265)
!17343 = !DILocation(line: 1637, column: 20, scope: !17265)
!17344 = !DILocation(line: 1638, column: 22, scope: !17265)
!17345 = !DILocation(line: 1638, column: 20, scope: !17265)
!17346 = !DILocation(line: 1639, column: 22, scope: !17265)
!17347 = !DILocation(line: 1639, column: 20, scope: !17265)
!17348 = !DILocation(line: 1640, column: 26, scope: !17265)
!17349 = !DILocation(line: 1640, column: 24, scope: !17265)
!17350 = !DILocation(line: 1641, column: 27, scope: !17265)
!17351 = !DILocation(line: 1641, column: 25, scope: !17265)
!17352 = !DILocation(line: 1642, column: 28, scope: !17265)
!17353 = !DILocation(line: 1642, column: 26, scope: !17265)
!17354 = !DILocation(line: 1643, column: 30, scope: !17265)
!17355 = !DILocation(line: 1643, column: 28, scope: !17265)
!17356 = !DILocation(line: 1644, column: 29, scope: !17265)
!17357 = !DILocation(line: 1644, column: 27, scope: !17265)
!17358 = !DILocation(line: 1645, column: 31, scope: !17265)
!17359 = !DILocation(line: 1645, column: 29, scope: !17265)
!17360 = !DILocation(line: 1646, column: 21, scope: !17265)
!17361 = !DILocation(line: 1646, column: 19, scope: !17265)
!17362 = !DILocation(line: 1647, column: 21, scope: !17265)
!17363 = !DILocation(line: 1647, column: 19, scope: !17265)
!17364 = !DILocation(line: 0, scope: !17265)
!17365 = !DILocation(line: 1648, column: 5, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17265, file: !3, line: 1648, column: 5)
!17367 = !DILocation(line: 1649, column: 56, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17369, file: !3, line: 1648, column: 49)
!17369 = distinct !DILexicalBlock(scope: !17366, file: !3, line: 1648, column: 5)
!17370 = !DILocation(line: 1649, column: 30, scope: !17368)
!17371 = !DILocation(line: 1649, column: 9, scope: !17368)
!17372 = !DILocation(line: 1649, column: 28, scope: !17368)
!17373 = !DILocation(line: 1650, column: 29, scope: !17368)
!17374 = !DILocation(line: 1650, column: 38, scope: !17368)
!17375 = !DILocation(line: 1648, column: 45, scope: !17369)
!17376 = !DILocation(line: 1648, column: 19, scope: !17369)
!17377 = distinct !{!17377, !17365, !17378}
!17378 = !DILocation(line: 1651, column: 5, scope: !17366)
!17379 = !DILocation(line: 1652, column: 1, scope: !17265)
!17380 = !DISubprogram(name: "aeCreateEventLoop", scope: !463, file: !463, line: 101, type: !17381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17381 = !DISubroutineType(types: !17382)
!17382 = !{!461}
!17383 = !DISubprogram(name: "anetTcpServer", scope: !17384, file: !17384, line: 42, type: !17385, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17384 = !DIFile(filename: "./anet.h", directory: "/home/xuheng/blackbox/llvm-test/redis", checksumkind: CSK_MD5, checksum: "81285b86a9ecba6646b6ba287bca42c3")
!17385 = !DISubroutineType(types: !17386)
!17386 = !{!45, !47, !45, !47}
!17387 = distinct !DISubprogram(name: "freePubsubPattern", scope: !3, file: !3, line: 10182, type: !79, scopeLine: 10182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17388)
!17388 = !{!17389, !17390}
!17389 = !DILocalVariable(name: "p", arg: 1, scope: !17387, file: !3, line: 10182, type: !46)
!17390 = !DILocalVariable(name: "pat", scope: !17387, file: !3, line: 10183, type: !4364)
!17391 = !DILocation(line: 0, scope: !17387)
!17392 = !DILocation(line: 10185, column: 23, scope: !17387)
!17393 = !DILocation(line: 10185, column: 5, scope: !17387)
!17394 = !DILocation(line: 10186, column: 5, scope: !17387)
!17395 = !DILocation(line: 10187, column: 1, scope: !17387)
!17396 = distinct !DISubprogram(name: "listMatchPubsubPattern", scope: !3, file: !3, line: 10189, type: !83, scopeLine: 10189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17397)
!17397 = !{!17398, !17399, !17400, !17401}
!17398 = !DILocalVariable(name: "a", arg: 1, scope: !17396, file: !3, line: 10189, type: !46)
!17399 = !DILocalVariable(name: "b", arg: 2, scope: !17396, file: !3, line: 10189, type: !46)
!17400 = !DILocalVariable(name: "pa", scope: !17396, file: !3, line: 10190, type: !4364)
!17401 = !DILocalVariable(name: "pb", scope: !17396, file: !3, line: 10190, type: !4364)
!17402 = !DILocation(line: 0, scope: !17396)
!17403 = !DILocation(line: 10192, column: 17, scope: !17396)
!17404 = !DILocation(line: 10192, column: 31, scope: !17396)
!17405 = !DILocation(line: 10192, column: 24, scope: !17396)
!17406 = !DILocation(line: 10192, column: 39, scope: !17396)
!17407 = !DILocation(line: 10193, column: 36, scope: !17396)
!17408 = !DILocation(line: 10193, column: 48, scope: !17396)
!17409 = !DILocation(line: 10193, column: 13, scope: !17396)
!17410 = !DILocation(line: 10192, column: 5, scope: !17396)
!17411 = !DISubprogram(name: "aeCreateTimeEvent", scope: !463, file: !463, line: 107, type: !17412, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17412 = !DISubroutineType(types: !17413)
!17413 = !{!54, !461, !54, !500, !46, !505}
!17414 = distinct !DISubprogram(name: "serverCron", scope: !3, file: !3, line: 1414, type: !502, scopeLine: 1414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17415)
!17415 = !{!17416, !17417, !17418, !17419, !17420, !17421, !17425, !17426, !17427, !17430, !17431, !17433, !17437, !17441, !17442, !17444, !17445, !17447, !17448}
!17416 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !17414, file: !3, line: 1414, type: !479)
!17417 = !DILocalVariable(name: "id", arg: 2, scope: !17414, file: !3, line: 1414, type: !54)
!17418 = !DILocalVariable(name: "clientData", arg: 3, scope: !17414, file: !3, line: 1414, type: !46)
!17419 = !DILocalVariable(name: "j", scope: !17414, file: !3, line: 1415, type: !45)
!17420 = !DILocalVariable(name: "loops", scope: !17414, file: !3, line: 1415, type: !45)
!17421 = !DILocalVariable(name: "size", scope: !17422, file: !3, line: 1435, type: !54)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !3, line: 1434, column: 40)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !3, line: 1434, column: 5)
!17424 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1434, column: 5)
!17425 = !DILocalVariable(name: "used", scope: !17422, file: !3, line: 1435, type: !54)
!17426 = !DILocalVariable(name: "vkeys", scope: !17422, file: !3, line: 1435, type: !54)
!17427 = !DILocalVariable(name: "statloc", scope: !17428, file: !3, line: 1471, type: !45)
!17428 = distinct !DILexicalBlock(scope: !17429, file: !3, line: 1470, column: 72)
!17429 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1470, column: 9)
!17430 = !DILocalVariable(name: "pid", scope: !17428, file: !3, line: 1472, type: !539)
!17431 = !DILocalVariable(name: "now", scope: !17432, file: !3, line: 1485, type: !49)
!17432 = distinct !DILexicalBlock(scope: !17429, file: !3, line: 1482, column: 12)
!17433 = !DILocalVariable(name: "sp", scope: !17434, file: !3, line: 1487, type: !546)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !3, line: 1486, column: 53)
!17435 = distinct !DILexicalBlock(scope: !17436, file: !3, line: 1486, column: 10)
!17436 = distinct !DILexicalBlock(scope: !17432, file: !3, line: 1486, column: 10)
!17437 = !DILocalVariable(name: "expired", scope: !17438, file: !3, line: 1504, type: !45)
!17438 = distinct !DILexicalBlock(scope: !17439, file: !3, line: 1503, column: 40)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !3, line: 1503, column: 5)
!17440 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1503, column: 5)
!17441 = !DILocalVariable(name: "db", scope: !17438, file: !3, line: 1505, type: !293)
!17442 = !DILocalVariable(name: "num", scope: !17443, file: !3, line: 1510, type: !53)
!17443 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 1509, column: 12)
!17444 = !DILocalVariable(name: "now", scope: !17443, file: !3, line: 1511, type: !49)
!17445 = !DILocalVariable(name: "de", scope: !17446, file: !3, line: 1517, type: !124)
!17446 = distinct !DILexicalBlock(scope: !17443, file: !3, line: 1516, column: 27)
!17447 = !DILocalVariable(name: "t", scope: !17446, file: !3, line: 1518, type: !49)
!17448 = !DILocalVariable(name: "retval", scope: !17449, file: !3, line: 1537, type: !45)
!17449 = distinct !DILexicalBlock(scope: !17450, file: !3, line: 1536, column: 9)
!17450 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1533, column: 25)
!17451 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1533, column: 9)
!17452 = !DILocation(line: 0, scope: !17414)
!17453 = !DILocation(line: 1415, column: 36, scope: !17414)
!17454 = !DILocation(line: 1424, column: 23, scope: !17414)
!17455 = !DILocation(line: 1424, column: 21, scope: !17414)
!17456 = !DILocation(line: 1428, column: 16, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1428, column: 9)
!17458 = !DILocation(line: 1428, column: 9, scope: !17457)
!17459 = !DILocation(line: 1428, column: 9, scope: !17414)
!17460 = !DILocation(line: 1429, column: 13, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17462, file: !3, line: 1429, column: 13)
!17462 = distinct !DILexicalBlock(scope: !17457, file: !3, line: 1428, column: 31)
!17463 = !DILocation(line: 1429, column: 34, scope: !17461)
!17464 = !DILocation(line: 1429, column: 13, scope: !17462)
!17465 = !DILocation(line: 1429, column: 47, scope: !17461)
!17466 = !DILocation(line: 1430, column: 9, scope: !17462)
!17467 = !DILocation(line: 1431, column: 5, scope: !17462)
!17468 = !DILocation(line: 1434, column: 28, scope: !17423)
!17469 = !DILocation(line: 1434, column: 19, scope: !17423)
!17470 = !DILocation(line: 1434, column: 5, scope: !17424)
!17471 = !DILocation(line: 1437, column: 16, scope: !17422)
!17472 = !DILocation(line: 0, scope: !17422)
!17473 = !DILocation(line: 1438, column: 16, scope: !17422)
!17474 = !DILocation(line: 1439, column: 17, scope: !17422)
!17475 = !DILocation(line: 1440, column: 27, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17422, file: !3, line: 1440, column: 13)
!17477 = !DILocation(line: 1440, column: 31, scope: !17476)
!17478 = !DILocation(line: 1440, column: 36, scope: !17476)
!17479 = !DILocation(line: 1441, column: 13, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17476, file: !3, line: 1440, column: 47)
!17481 = !DILocation(line: 1443, column: 9, scope: !17480)
!17482 = !DILocation(line: 1434, column: 36, scope: !17423)
!17483 = distinct !{!17483, !17470, !17484}
!17484 = !DILocation(line: 1444, column: 5, scope: !17424)
!17485 = !DILocation(line: 1452, column: 16, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1452, column: 9)
!17487 = !DILocation(line: 1452, column: 31, scope: !17486)
!17488 = !DILocation(line: 1452, column: 37, scope: !17486)
!17489 = !DILocation(line: 1453, column: 21, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17491, file: !3, line: 1453, column: 13)
!17491 = distinct !DILexicalBlock(scope: !17486, file: !3, line: 1452, column: 72)
!17492 = !DILocation(line: 1453, column: 13, scope: !17491)
!17493 = !DILocation(line: 1453, column: 28, scope: !17490)
!17494 = !DILocation(line: 1454, column: 20, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17491, file: !3, line: 1454, column: 13)
!17496 = !DILocation(line: 1454, column: 13, scope: !17495)
!17497 = !DILocation(line: 1454, column: 13, scope: !17491)
!17498 = !DILocation(line: 1454, column: 37, scope: !17495)
!17499 = !DILocation(line: 1458, column: 17, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1458, column: 9)
!17501 = !DILocation(line: 1458, column: 9, scope: !17414)
!17502 = !DILocation(line: 1460, column: 13, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17500, file: !3, line: 1458, column: 24)
!17504 = !DILocation(line: 1460, column: 40, scope: !17503)
!17505 = !DILocation(line: 1460, column: 39, scope: !17503)
!17506 = !DILocation(line: 1462, column: 13, scope: !17503)
!17507 = !DILocation(line: 1459, column: 9, scope: !17503)
!17508 = !DILocation(line: 1463, column: 5, scope: !17503)
!17509 = !DILocation(line: 1466, column: 17, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1466, column: 9)
!17511 = !DILocation(line: 1466, column: 10, scope: !17510)
!17512 = !DILocation(line: 1466, column: 29, scope: !17510)
!17513 = !DILocation(line: 1466, column: 40, scope: !17510)
!17514 = !DILocation(line: 1466, column: 48, scope: !17510)
!17515 = !DILocation(line: 1466, column: 58, scope: !17510)
!17516 = !DILocation(line: 1466, column: 51, scope: !17510)
!17517 = !DILocation(line: 1466, column: 9, scope: !17414)
!17518 = !DILocation(line: 1467, column: 9, scope: !17510)
!17519 = !DILocation(line: 1470, column: 16, scope: !17429)
!17520 = !DILocation(line: 1470, column: 31, scope: !17429)
!17521 = !DILocation(line: 1470, column: 37, scope: !17429)
!17522 = !DILocation(line: 1471, column: 9, scope: !17428)
!17523 = !DILocation(line: 0, scope: !17428)
!17524 = !DILocation(line: 1474, column: 20, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17428, file: !3, line: 1474, column: 13)
!17526 = !DILocation(line: 1474, column: 50, scope: !17525)
!17527 = !DILocation(line: 1474, column: 13, scope: !17428)
!17528 = !DILocation(line: 1475, column: 31, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17530, file: !3, line: 1475, column: 17)
!17530 = distinct !DILexicalBlock(scope: !17525, file: !3, line: 1474, column: 56)
!17531 = !DILocation(line: 1475, column: 21, scope: !17529)
!17532 = !DILocation(line: 0, scope: !17529)
!17533 = !DILocation(line: 1475, column: 17, scope: !17530)
!17534 = !DILocation(line: 1476, column: 17, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17529, file: !3, line: 1475, column: 47)
!17536 = !DILocation(line: 1477, column: 13, scope: !17535)
!17537 = !DILocation(line: 1478, column: 17, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17529, file: !3, line: 1477, column: 20)
!17539 = !DILocation(line: 1480, column: 13, scope: !17530)
!17540 = !DILocation(line: 1481, column: 9, scope: !17530)
!17541 = !DILocation(line: 1482, column: 5, scope: !17429)
!17542 = !DILocation(line: 1482, column: 5, scope: !17428)
!17543 = !DILocation(line: 1485, column: 23, scope: !17432)
!17544 = !DILocation(line: 0, scope: !17432)
!17545 = !DILocation(line: 1486, column: 24, scope: !17435)
!17546 = !DILocation(line: 1486, column: 10, scope: !17436)
!17547 = !DILocation(line: 0, scope: !17434)
!17548 = !DILocation(line: 1489, column: 37, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1489, column: 17)
!17550 = !DILocation(line: 1489, column: 33, scope: !17549)
!17551 = !DILocation(line: 1489, column: 30, scope: !17549)
!17552 = !DILocation(line: 1489, column: 45, scope: !17549)
!17553 = !DILocation(line: 1490, column: 43, scope: !17549)
!17554 = !DILocation(line: 1490, column: 37, scope: !17549)
!17555 = !DILocation(line: 1489, column: 17, scope: !17434)
!17556 = !DILocation(line: 1491, column: 17, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17549, file: !3, line: 1490, column: 52)
!17558 = !DILocation(line: 1493, column: 42, scope: !17557)
!17559 = !DILocation(line: 1493, column: 17, scope: !17557)
!17560 = !DILocation(line: 1486, column: 49, scope: !17435)
!17561 = distinct !{!17561, !17546, !17562}
!17562 = !DILocation(line: 1496, column: 10, scope: !17436)
!17563 = !DILocation(line: 1503, column: 28, scope: !17439)
!17564 = !DILocation(line: 1503, column: 19, scope: !17439)
!17565 = !DILocation(line: 1503, column: 5, scope: !17440)
!17566 = !DILocation(line: 1505, column: 30, scope: !17438)
!17567 = !DILocation(line: 1505, column: 32, scope: !17438)
!17568 = !DILocation(line: 0, scope: !17438)
!17569 = !DILocation(line: 1509, column: 9, scope: !17438)
!17570 = !DILocation(line: 1510, column: 24, scope: !17443)
!17571 = !DILocation(line: 0, scope: !17443)
!17572 = !DILocation(line: 1511, column: 26, scope: !17443)
!17573 = !DILocation(line: 1514, column: 17, scope: !17443)
!17574 = !DILocation(line: 1516, column: 13, scope: !17443)
!17575 = !DILocation(line: 1516, column: 23, scope: !17443)
!17576 = !DILocation(line: 1520, column: 48, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 1520, column: 21)
!17578 = !DILocation(line: 1520, column: 27, scope: !17577)
!17579 = !DILocation(line: 0, scope: !17446)
!17580 = !DILocation(line: 1520, column: 58, scope: !17577)
!17581 = !DILocation(line: 1520, column: 21, scope: !17446)
!17582 = !DILocation(line: 1521, column: 30, scope: !17446)
!17583 = !DILocation(line: 1521, column: 21, scope: !17446)
!17584 = !DILocation(line: 1522, column: 25, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 1522, column: 21)
!17586 = !DILocation(line: 1522, column: 21, scope: !17446)
!17587 = !DILocation(line: 1523, column: 34, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17585, file: !3, line: 1522, column: 30)
!17589 = !DILocation(line: 1523, column: 21, scope: !17588)
!17590 = !DILocation(line: 1524, column: 28, scope: !17588)
!17591 = !DILocation(line: 1525, column: 44, scope: !17588)
!17592 = !DILocation(line: 1526, column: 17, scope: !17588)
!17593 = !DILocation(line: 1513, column: 21, scope: !17443)
!17594 = !DILocation(line: 1528, column: 26, scope: !17438)
!17595 = !DILocation(line: 1528, column: 9, scope: !17443)
!17596 = distinct !{!17596, !17569, !17597}
!17597 = !DILocation(line: 1528, column: 58, scope: !17438)
!17598 = !DILocation(line: 1503, column: 36, scope: !17439)
!17599 = distinct !{!17599, !17565, !17600}
!17600 = !DILocation(line: 1529, column: 5, scope: !17440)
!17601 = !DILocation(line: 1533, column: 9, scope: !17451)
!17602 = !DILocation(line: 1533, column: 9, scope: !17414)
!17603 = !DILocation(line: 1534, column: 9, scope: !17450)
!17604 = !DILocation(line: 1534, column: 37, scope: !17450)
!17605 = !DILocation(line: 1535, column: 24, scope: !17450)
!17606 = !DILocation(line: 1534, column: 59, scope: !17450)
!17607 = !DILocation(line: 1539, column: 17, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 1539, column: 17)
!17609 = !DILocation(line: 1539, column: 48, scope: !17608)
!17610 = !DILocation(line: 1539, column: 17, scope: !17449)
!17611 = distinct !{!17611, !17603, !17612}
!17612 = !DILocation(line: 1554, column: 9, scope: !17450)
!17613 = !DILocation(line: 1540, column: 30, scope: !17449)
!17614 = !DILocation(line: 1540, column: 45, scope: !17449)
!17615 = !DILocation(line: 1540, column: 22, scope: !17449)
!17616 = !DILocation(line: 1541, column: 25, scope: !17449)
!17617 = !DILocation(line: 1542, column: 25, scope: !17449)
!17618 = !DILocation(line: 0, scope: !17449)
!17619 = !DILocation(line: 1543, column: 24, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 1543, column: 17)
!17621 = !DILocation(line: 1543, column: 37, scope: !17620)
!17622 = !DILocation(line: 1544, column: 17, scope: !17620)
!17623 = !DILocation(line: 1545, column: 25, scope: !17620)
!17624 = !DILocation(line: 1545, column: 59, scope: !17620)
!17625 = !DILocation(line: 1545, column: 38, scope: !17620)
!17626 = !DILocation(line: 1544, column: 39, scope: !17620)
!17627 = !DILocation(line: 1543, column: 17, scope: !17449)
!17628 = !DILocation(line: 1547, column: 17, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17620, file: !3, line: 1546, column: 13)
!17630 = !DILocation(line: 1548, column: 13, scope: !17629)
!17631 = !DILocation(line: 1553, column: 37, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 1553, column: 17)
!17633 = !DILocation(line: 0, scope: !17450)
!17634 = !DILocation(line: 1558, column: 16, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 1558, column: 9)
!17636 = !DILocation(line: 1558, column: 26, scope: !17635)
!17637 = !DILocation(line: 1558, column: 48, scope: !17635)
!17638 = !DILocation(line: 1559, column: 9, scope: !17639)
!17639 = distinct !DILexicalBlock(scope: !17635, file: !3, line: 1558, column: 66)
!17640 = !DILocation(line: 1560, column: 13, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17639, file: !3, line: 1560, column: 13)
!17642 = !DILocation(line: 1560, column: 30, scope: !17641)
!17643 = !DILocation(line: 1560, column: 13, scope: !17639)
!17644 = !DILocation(line: 1561, column: 13, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1560, column: 43)
!17646 = !DILocation(line: 1562, column: 24, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17645, file: !3, line: 1562, column: 17)
!17648 = !DILocation(line: 1562, column: 17, scope: !17647)
!17649 = !DILocation(line: 1562, column: 17, scope: !17645)
!17650 = !DILocation(line: 1562, column: 36, scope: !17647)
!17651 = !DILocation(line: 1565, column: 5, scope: !17414)
!17652 = distinct !DISubprogram(name: "acceptHandler", scope: !3, file: !3, line: 2859, type: !2737, scopeLine: 2859, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17653)
!17653 = !{!17654, !17655, !17656, !17657, !17658, !17659, !17660, !17661, !17662}
!17654 = !DILocalVariable(name: "el", arg: 1, scope: !17652, file: !3, line: 2859, type: !461)
!17655 = !DILocalVariable(name: "fd", arg: 2, scope: !17652, file: !3, line: 2859, type: !45)
!17656 = !DILocalVariable(name: "privdata", arg: 3, scope: !17652, file: !3, line: 2859, type: !46)
!17657 = !DILocalVariable(name: "mask", arg: 4, scope: !17652, file: !3, line: 2859, type: !45)
!17658 = !DILocalVariable(name: "cport", scope: !17652, file: !3, line: 2860, type: !45)
!17659 = !DILocalVariable(name: "cfd", scope: !17652, file: !3, line: 2860, type: !45)
!17660 = !DILocalVariable(name: "cip", scope: !17652, file: !3, line: 2861, type: !1247)
!17661 = !DILocalVariable(name: "c", scope: !17652, file: !3, line: 2862, type: !287)
!17662 = !DILocalVariable(name: "err", scope: !17663, file: !3, line: 2883, type: !47)
!17663 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 2882, column: 78)
!17664 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 2882, column: 9)
!17665 = !DILocation(line: 0, scope: !17652)
!17666 = !DILocation(line: 2860, column: 5, scope: !17652)
!17667 = !DILocation(line: 2861, column: 5, scope: !17652)
!17668 = !DILocation(line: 2861, column: 10, scope: !17652)
!17669 = !DILocation(line: 2867, column: 11, scope: !17652)
!17670 = !DILocation(line: 2868, column: 13, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 2868, column: 9)
!17672 = !DILocation(line: 2868, column: 9, scope: !17652)
!17673 = !DILocation(line: 2869, column: 9, scope: !17674)
!17674 = distinct !DILexicalBlock(scope: !17671, file: !3, line: 2868, column: 24)
!17675 = !DILocation(line: 2870, column: 9, scope: !17674)
!17676 = !DILocation(line: 2872, column: 51, scope: !17652)
!17677 = !DILocation(line: 2872, column: 5, scope: !17652)
!17678 = !DILocation(line: 2873, column: 14, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 2873, column: 9)
!17680 = !DILocation(line: 2873, column: 33, scope: !17679)
!17681 = !DILocation(line: 2873, column: 9, scope: !17652)
!17682 = !DILocation(line: 2874, column: 9, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17679, file: !3, line: 2873, column: 42)
!17684 = !DILocation(line: 2875, column: 9, scope: !17683)
!17685 = !DILocation(line: 2876, column: 9, scope: !17683)
!17686 = !DILocation(line: 2882, column: 16, scope: !17664)
!17687 = !DILocation(line: 2882, column: 9, scope: !17664)
!17688 = !DILocation(line: 2882, column: 27, scope: !17664)
!17689 = !DILocation(line: 2882, column: 30, scope: !17664)
!17690 = !DILocation(line: 2882, column: 57, scope: !17664)
!17691 = !DILocation(line: 2882, column: 9, scope: !17652)
!17692 = !DILocation(line: 0, scope: !17663)
!17693 = !DILocation(line: 2886, column: 22, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17663, file: !3, line: 2886, column: 13)
!17695 = !DILocation(line: 2886, column: 29, scope: !17694)
!17696 = !DILocation(line: 2886, column: 13, scope: !17694)
!17697 = !DILocation(line: 2889, column: 9, scope: !17663)
!17698 = !DILocation(line: 2892, column: 31, scope: !17652)
!17699 = !DILocation(line: 2893, column: 1, scope: !17652)
!17700 = distinct !DISubprogram(name: "oom", scope: !3, file: !3, line: 1245, type: !17701, scopeLine: 1245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17703)
!17701 = !DISubroutineType(types: !17702)
!17702 = !{null, !741}
!17703 = !{!17704}
!17704 = !DILocalVariable(name: "msg", arg: 1, scope: !17700, file: !3, line: 1245, type: !741)
!17705 = !DILocation(line: 0, scope: !17700)
!17706 = !DILocation(line: 1246, column: 5, scope: !17700)
!17707 = !DILocation(line: 1247, column: 5, scope: !17700)
!17708 = !DILocation(line: 1248, column: 5, scope: !17700)
!17709 = distinct !DISubprogram(name: "vmInit", scope: !3, file: !3, line: 8854, type: !1747, scopeLine: 8854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17710)
!17710 = !{!17711, !17712, !17714, !17715}
!17711 = !DILocalVariable(name: "totsize", scope: !17709, file: !3, line: 8855, type: !160)
!17712 = !DILocalVariable(name: "pipefds", scope: !17709, file: !3, line: 8856, type: !17713)
!17713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 64, elements: !135)
!17714 = !DILocalVariable(name: "stacksize", scope: !17709, file: !3, line: 8857, type: !196)
!17715 = !DILocalVariable(name: "fl", scope: !17709, file: !3, line: 8858, type: !17716)
!17716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flock", file: !17717, line: 35, size: 256, elements: !17718)
!17717 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "de7230bc4c2eecad91b473306f6d8225")
!17718 = !{!17719, !17720, !17721, !17722, !17723}
!17719 = !DIDerivedType(tag: DW_TAG_member, name: "l_type", scope: !17716, file: !17717, line: 37, baseType: !142, size: 16)
!17720 = !DIDerivedType(tag: DW_TAG_member, name: "l_whence", scope: !17716, file: !17717, line: 38, baseType: !142, size: 16, offset: 16)
!17721 = !DIDerivedType(tag: DW_TAG_member, name: "l_start", scope: !17716, file: !17717, line: 43, baseType: !162, size: 64, offset: 64)
!17722 = !DIDerivedType(tag: DW_TAG_member, name: "l_len", scope: !17716, file: !17717, line: 44, baseType: !162, size: 64, offset: 128)
!17723 = !DIDerivedType(tag: DW_TAG_member, name: "l_pid", scope: !17716, file: !17717, line: 46, baseType: !541, size: 32, offset: 192)
!17724 = !DILocation(line: 8856, column: 5, scope: !17709)
!17725 = !DILocation(line: 8856, column: 9, scope: !17709)
!17726 = !DILocation(line: 8857, column: 5, scope: !17709)
!17727 = !DILocation(line: 8858, column: 5, scope: !17709)
!17728 = !DILocation(line: 8858, column: 18, scope: !17709)
!17729 = !DILocation(line: 8860, column: 16, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8860, column: 9)
!17731 = !DILocation(line: 8860, column: 31, scope: !17730)
!17732 = !DILocation(line: 8860, column: 9, scope: !17709)
!17733 = !DILocation(line: 8861, column: 9, scope: !17730)
!17734 = !DILocation(line: 8863, column: 60, scope: !17709)
!17735 = !DILocation(line: 8863, column: 5, scope: !17709)
!17736 = !DILocation(line: 8865, column: 38, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8865, column: 9)
!17738 = !DILocation(line: 8865, column: 25, scope: !17737)
!17739 = !DILocation(line: 8865, column: 23, scope: !17737)
!17740 = !DILocation(line: 8865, column: 59, scope: !17737)
!17741 = !DILocation(line: 8865, column: 9, scope: !17709)
!17742 = !DILocation(line: 8866, column: 37, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17737, file: !3, line: 8865, column: 68)
!17744 = !DILocation(line: 8866, column: 24, scope: !17743)
!17745 = !DILocation(line: 8866, column: 22, scope: !17743)
!17746 = !DILocation(line: 8868, column: 22, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8868, column: 9)
!17748 = !DILocation(line: 8868, column: 9, scope: !17709)
!17749 = !DILocation(line: 8871, column: 22, scope: !17750)
!17750 = distinct !DILexicalBlock(scope: !17747, file: !3, line: 8868, column: 31)
!17751 = !DILocation(line: 8871, column: 13, scope: !17750)
!17752 = !DILocation(line: 8869, column: 9, scope: !17750)
!17753 = !DILocation(line: 8872, column: 9, scope: !17750)
!17754 = !DILocation(line: 8874, column: 20, scope: !17709)
!17755 = !DILocation(line: 8874, column: 18, scope: !17709)
!17756 = !DILocation(line: 8877, column: 8, scope: !17709)
!17757 = !DILocation(line: 8877, column: 15, scope: !17709)
!17758 = !{!17759, !7662, i64 0}
!17759 = !{!"flock", !7662, i64 0, !7662, i64 2, !710, i64 8, !710, i64 16, !713, i64 24}
!17760 = !DILocation(line: 8878, column: 8, scope: !17709)
!17761 = !DILocation(line: 8878, column: 17, scope: !17709)
!17762 = !{!17759, !7662, i64 2}
!17763 = !DILocation(line: 8879, column: 8, scope: !17709)
!17764 = !DILocation(line: 8879, column: 16, scope: !17709)
!17765 = !DILocation(line: 8880, column: 9, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8880, column: 9)
!17767 = !DILocation(line: 8880, column: 41, scope: !17766)
!17768 = !DILocation(line: 8880, column: 9, scope: !17709)
!17769 = !DILocation(line: 8882, column: 113, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17766, file: !3, line: 8880, column: 48)
!17771 = !DILocation(line: 8882, column: 136, scope: !17770)
!17772 = !DILocation(line: 8882, column: 127, scope: !17770)
!17773 = !DILocation(line: 8881, column: 9, scope: !17770)
!17774 = !DILocation(line: 8883, column: 9, scope: !17770)
!17775 = !DILocation(line: 8886, column: 25, scope: !17709)
!17776 = !DILocation(line: 8888, column: 32, scope: !17709)
!17777 = !DILocation(line: 8890, column: 30, scope: !17709)
!17778 = !DILocation(line: 8892, column: 22, scope: !17709)
!17779 = !DILocation(line: 8892, column: 38, scope: !17709)
!17780 = !DILocation(line: 8892, column: 30, scope: !17709)
!17781 = !DILocation(line: 0, scope: !17709)
!17782 = !DILocation(line: 8893, column: 5, scope: !17709)
!17783 = !DILocation(line: 8894, column: 26, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8894, column: 9)
!17785 = !DILocation(line: 8894, column: 9, scope: !17784)
!17786 = !DILocation(line: 8894, column: 41, scope: !17784)
!17787 = !DILocation(line: 8894, column: 9, scope: !17709)
!17788 = !DILocation(line: 8896, column: 22, scope: !17789)
!17789 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 8894, column: 48)
!17790 = !DILocation(line: 8896, column: 13, scope: !17789)
!17791 = !DILocation(line: 8895, column: 9, scope: !17789)
!17792 = !DILocation(line: 8897, column: 9, scope: !17789)
!17793 = !DILocation(line: 8899, column: 9, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 8898, column: 12)
!17795 = !DILocation(line: 8901, column: 40, scope: !17709)
!17796 = !DILocation(line: 8901, column: 48, scope: !17709)
!17797 = !DILocation(line: 8901, column: 51, scope: !17709)
!17798 = !DILocation(line: 8901, column: 24, scope: !17709)
!17799 = !DILocation(line: 8901, column: 22, scope: !17709)
!17800 = !DILocation(line: 8903, column: 29, scope: !17709)
!17801 = !DILocation(line: 8903, column: 37, scope: !17709)
!17802 = !DILocation(line: 8903, column: 40, scope: !17709)
!17803 = !DILocation(line: 8902, column: 5, scope: !17709)
!17804 = !DILocation(line: 8904, column: 19, scope: !17709)
!17805 = !DILocation(line: 8904, column: 39, scope: !17709)
!17806 = !DILocation(line: 8904, column: 47, scope: !17709)
!17807 = !DILocation(line: 8904, column: 50, scope: !17709)
!17808 = !DILocation(line: 8904, column: 5, scope: !17709)
!17809 = !DILocation(line: 8907, column: 25, scope: !17709)
!17810 = !DILocation(line: 8907, column: 23, scope: !17709)
!17811 = !DILocation(line: 8908, column: 28, scope: !17709)
!17812 = !DILocation(line: 8908, column: 26, scope: !17709)
!17813 = !DILocation(line: 8909, column: 27, scope: !17709)
!17814 = !DILocation(line: 8909, column: 25, scope: !17709)
!17815 = !DILocation(line: 8910, column: 31, scope: !17709)
!17816 = !DILocation(line: 8910, column: 29, scope: !17709)
!17817 = !DILocation(line: 8911, column: 5, scope: !17709)
!17818 = !DILocation(line: 8912, column: 5, scope: !17709)
!17819 = !DILocation(line: 8913, column: 5, scope: !17709)
!17820 = !DILocation(line: 8914, column: 30, scope: !17709)
!17821 = !DILocation(line: 8915, column: 14, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8915, column: 9)
!17823 = !DILocation(line: 8915, column: 9, scope: !17822)
!17824 = !DILocation(line: 8915, column: 23, scope: !17822)
!17825 = !DILocation(line: 8915, column: 9, scope: !17709)
!17826 = !DILocation(line: 8917, column: 23, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17822, file: !3, line: 8915, column: 30)
!17828 = !DILocation(line: 8917, column: 14, scope: !17827)
!17829 = !DILocation(line: 8916, column: 9, scope: !17827)
!17830 = !DILocation(line: 8918, column: 9, scope: !17827)
!17831 = !DILocation(line: 8920, column: 33, scope: !17709)
!17832 = !DILocation(line: 8920, column: 31, scope: !17709)
!17833 = !DILocation(line: 8921, column: 34, scope: !17709)
!17834 = !DILocation(line: 8921, column: 32, scope: !17709)
!17835 = !DILocation(line: 8922, column: 5, scope: !17709)
!17836 = !DILocation(line: 8924, column: 5, scope: !17709)
!17837 = !DILocation(line: 8925, column: 5, scope: !17709)
!17838 = !DILocation(line: 8929, column: 10, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8929, column: 9)
!17840 = !DILocation(line: 8929, column: 9, scope: !17709)
!17841 = !DILocation(line: 8931, column: 22, scope: !17709)
!17842 = !DILocation(line: 8931, column: 5, scope: !17709)
!17843 = !DILocation(line: 8931, column: 59, scope: !17709)
!17844 = distinct !{!17844, !17842, !17845}
!17845 = !DILocation(line: 8931, column: 62, scope: !17709)
!17846 = !DILocation(line: 8931, column: 12, scope: !17709)
!17847 = !DILocation(line: 8932, column: 5, scope: !17709)
!17848 = !DILocation(line: 8934, column: 34, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 8934, column: 9)
!17850 = !DILocation(line: 8934, column: 45, scope: !17849)
!17851 = !DILocation(line: 8934, column: 9, scope: !17849)
!17852 = !DILocation(line: 8935, column: 41, scope: !17849)
!17853 = !DILocation(line: 8934, column: 9, scope: !17709)
!17854 = !DILocation(line: 8936, column: 9, scope: !17849)
!17855 = !DILocation(line: 8937, column: 1, scope: !17709)
!17856 = distinct !DISubprogram(name: "segvHandler", scope: !3, file: !3, line: 10888, type: !17165, scopeLine: 10888, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17857)
!17857 = !{!17858, !17859, !17860, !17861, !17865, !17866, !17867, !17868, !17869, !17870, !17871, !17875}
!17858 = !DILocalVariable(name: "sig", arg: 1, scope: !17856, file: !3, line: 10888, type: !45)
!17859 = !DILocalVariable(name: "info", arg: 2, scope: !17856, file: !3, line: 10888, type: !17167)
!17860 = !DILocalVariable(name: "secret", arg: 3, scope: !17856, file: !3, line: 10888, type: !46)
!17861 = !DILocalVariable(name: "trace", scope: !17856, file: !3, line: 10889, type: !17862)
!17862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 6400, elements: !17863)
!17863 = !{!17864}
!17864 = !DISubrange(count: 100)
!17865 = !DILocalVariable(name: "messages", scope: !17856, file: !3, line: 10890, type: !195)
!17866 = !DILocalVariable(name: "i", scope: !17856, file: !3, line: 10891, type: !45)
!17867 = !DILocalVariable(name: "trace_size", scope: !17856, file: !3, line: 10891, type: !45)
!17868 = !DILocalVariable(name: "offset", scope: !17856, file: !3, line: 10892, type: !55)
!17869 = !DILocalVariable(name: "uc", scope: !17856, file: !3, line: 10893, type: !204)
!17870 = !DILocalVariable(name: "infostring", scope: !17856, file: !3, line: 10894, type: !165)
!17871 = !DILocalVariable(name: "fn", scope: !17872, file: !3, line: 10912, type: !47)
!17872 = distinct !DILexicalBlock(scope: !17873, file: !3, line: 10911, column: 34)
!17873 = distinct !DILexicalBlock(scope: !17874, file: !3, line: 10911, column: 5)
!17874 = distinct !DILexicalBlock(scope: !17856, file: !3, line: 10911, column: 5)
!17875 = !DILocalVariable(name: "p", scope: !17872, file: !3, line: 10912, type: !47)
!17876 = !DILocation(line: 0, scope: !17856)
!17877 = !DILocation(line: 10889, column: 5, scope: !17856)
!17878 = !DILocation(line: 10889, column: 11, scope: !17856)
!17879 = !DILocation(line: 10892, column: 5, scope: !17856)
!17880 = !DILocation(line: 10892, column: 19, scope: !17856)
!17881 = !DILocation(line: 10893, column: 22, scope: !17856)
!17882 = !DILocation(line: 10897, column: 5, scope: !17856)
!17883 = !DILocation(line: 10899, column: 18, scope: !17856)
!17884 = !DILocation(line: 10900, column: 5, scope: !17856)
!17885 = !DILocation(line: 10904, column: 28, scope: !17856)
!17886 = !DILocation(line: 10904, column: 18, scope: !17856)
!17887 = !DILocation(line: 10906, column: 9, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17856, file: !3, line: 10906, column: 9)
!17889 = !DILocation(line: 10906, column: 28, scope: !17888)
!17890 = !DILocation(line: 10906, column: 9, scope: !17856)
!17891 = !DILocation(line: 10907, column: 9, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17888, file: !3, line: 10906, column: 37)
!17893 = !DILocation(line: 10907, column: 18, scope: !17892)
!17894 = !DILocation(line: 10908, column: 5, scope: !17892)
!17895 = !DILocation(line: 10909, column: 16, scope: !17856)
!17896 = !DILocation(line: 10911, column: 16, scope: !17873)
!17897 = !DILocation(line: 10911, column: 5, scope: !17874)
!17898 = !DILocation(line: 10912, column: 33, scope: !17872)
!17899 = !DILocation(line: 10912, column: 20, scope: !17872)
!17900 = !DILocation(line: 0, scope: !17872)
!17901 = !DILocation(line: 10914, column: 20, scope: !17872)
!17902 = !DILocation(line: 10914, column: 13, scope: !17872)
!17903 = !DILocation(line: 10915, column: 14, scope: !17904)
!17904 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 10915, column: 13)
!17905 = !DILocation(line: 10915, column: 17, scope: !17904)
!17906 = !DILocation(line: 10915, column: 21, scope: !17904)
!17907 = !DILocation(line: 10915, column: 23, scope: !17904)
!17908 = !DILocation(line: 10918, column: 97, scope: !17909)
!17909 = distinct !DILexicalBlock(scope: !17904, file: !3, line: 10917, column: 16)
!17910 = !DILocation(line: 10915, column: 50, scope: !17904)
!17911 = !DILocation(line: 10915, column: 42, scope: !17904)
!17912 = !DILocation(line: 10915, column: 65, scope: !17904)
!17913 = !DILocation(line: 10915, column: 63, scope: !17904)
!17914 = !DILocation(line: 10915, column: 13, scope: !17872)
!17915 = !DILocation(line: 10916, column: 42, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17904, file: !3, line: 10915, column: 74)
!17917 = !DILocation(line: 10916, column: 13, scope: !17916)
!17918 = !DILocation(line: 10917, column: 9, scope: !17916)
!17919 = !DILocation(line: 10918, column: 69, scope: !17909)
!17920 = !DILocation(line: 10918, column: 83, scope: !17909)
!17921 = !DILocation(line: 10918, column: 13, scope: !17909)
!17922 = !DILocation(line: 10911, column: 29, scope: !17873)
!17923 = distinct !{!17923, !17897, !17924}
!17924 = !DILocation(line: 10920, column: 5, scope: !17874)
!17925 = !DILocation(line: 10922, column: 5, scope: !17856)
!17926 = !DISubprogram(name: "sigaction", scope: !200, file: !200, line: 240, type: !17927, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17927 = !DISubroutineType(types: !17928)
!17928 = !{!45, !45, !17929, !17932}
!17929 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !17930)
!17930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17931, size: 64)
!17931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17156)
!17932 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !17933)
!17933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17156, size: 64)
!17934 = distinct !DISubprogram(name: "sigtermHandler", scope: !3, file: !3, line: 10925, type: !202, scopeLine: 10925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17935)
!17935 = !{!17936}
!17936 = !DILocalVariable(name: "sig", arg: 1, scope: !17934, file: !3, line: 10925, type: !45)
!17937 = !DILocation(line: 0, scope: !17934)
!17938 = !DILocation(line: 10928, column: 5, scope: !17934)
!17939 = !DILocation(line: 10929, column: 26, scope: !17934)
!17940 = !DILocation(line: 10930, column: 1, scope: !17934)
!17941 = !DISubprogram(name: "backtrace", scope: !17942, file: !17942, line: 27, type: !17943, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17942 = !DIFile(filename: "/usr/include/execinfo.h", directory: "", checksumkind: CSK_MD5, checksum: "db2f1ba476dad61cf4669934bea5798c")
!17943 = !DISubroutineType(types: !17944)
!17944 = !{!45, !17945, !45}
!17945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!17946 = distinct !DISubprogram(name: "getMcontextEip", scope: !3, file: !3, line: 10862, type: !17947, scopeLine: 10862, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17949)
!17947 = !DISubroutineType(types: !17948)
!17948 = !{!46, !204}
!17949 = !{!17950}
!17950 = !DILocalVariable(name: "uc", arg: 1, scope: !17946, file: !3, line: 10862, type: !204)
!17951 = !DILocation(line: 0, scope: !17946)
!17952 = !DILocation(line: 10880, column: 20, scope: !17946)
!17953 = !DILocation(line: 10880, column: 12, scope: !17946)
!17954 = !DILocation(line: 10880, column: 5, scope: !17946)
!17955 = !DISubprogram(name: "backtrace_symbols", scope: !17942, file: !17942, line: 32, type: !17956, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!17956 = !DISubroutineType(types: !17957)
!17957 = !{!195, !17958, !45}
!17958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17959, size: 64)
!17959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !46)
!17960 = distinct !DISubprogram(name: "findFuncName", scope: !3, file: !3, line: 10956, type: !17961, scopeLine: 10956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17964)
!17961 = !DISubroutineType(types: !17962)
!17962 = !{!47, !46, !17963}
!17963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!17964 = !{!17965, !17966, !17967, !17968, !17969, !17970, !17971}
!17965 = !DILocalVariable(name: "pointer", arg: 1, scope: !17960, file: !3, line: 10956, type: !46)
!17966 = !DILocalVariable(name: "offset", arg: 2, scope: !17960, file: !3, line: 10956, type: !17963)
!17967 = !DILocalVariable(name: "i", scope: !17960, file: !3, line: 10957, type: !45)
!17968 = !DILocalVariable(name: "ret", scope: !17960, file: !3, line: 10957, type: !45)
!17969 = !DILocalVariable(name: "off", scope: !17960, file: !3, line: 10958, type: !55)
!17970 = !DILocalVariable(name: "minoff", scope: !17960, file: !3, line: 10958, type: !55)
!17971 = !DILocalVariable(name: "lp", scope: !17972, file: !3, line: 10962, type: !55)
!17972 = distinct !DILexicalBlock(scope: !17973, file: !3, line: 10961, column: 42)
!17973 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 10961, column: 5)
!17974 = distinct !DILexicalBlock(scope: !17960, file: !3, line: 10961, column: 5)
!17975 = !DILocation(line: 0, scope: !17960)
!17976 = !DILocation(line: 10961, column: 5, scope: !17974)
!17977 = !DILocation(line: 0, scope: !17972)
!17978 = !DILocation(line: 10964, column: 37, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17972, file: !3, line: 10964, column: 13)
!17980 = !DILocation(line: 10965, column: 19, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17979, file: !3, line: 10964, column: 68)
!17982 = !DILocation(line: 10966, column: 21, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17981, file: !3, line: 10966, column: 17)
!17984 = !DILocation(line: 10966, column: 25, scope: !17983)
!17985 = !DILocation(line: 10961, column: 38, scope: !17973)
!17986 = !DILocation(line: 10961, column: 28, scope: !17973)
!17987 = !{!17988, !710, i64 8}
!17988 = !{!"redisFunctionSym", !714, i64 0, !710, i64 8}
!17989 = distinct !{!17989, !17976, !17990}
!17990 = !DILocation(line: 10971, column: 5, scope: !17974)
!17991 = !DILocation(line: 10972, column: 13, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17960, file: !3, line: 10972, column: 9)
!17993 = !DILocation(line: 10972, column: 9, scope: !17960)
!17994 = !DILocation(line: 10973, column: 13, scope: !17960)
!17995 = !DILocation(line: 10974, column: 12, scope: !17960)
!17996 = !DILocation(line: 10974, column: 27, scope: !17960)
!17997 = !{!17988, !714, i64 0}
!17998 = !DILocation(line: 10974, column: 5, scope: !17960)
!17999 = !DILocation(line: 10975, column: 1, scope: !17960)
!18000 = distinct !DISubprogram(name: "closeTimedoutClients", scope: !3, file: !3, line: 1252, type: !1747, scopeLine: 1252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18001)
!18001 = !{!18002, !18003, !18004, !18005}
!18002 = !DILocalVariable(name: "c", scope: !18000, file: !3, line: 1253, type: !287)
!18003 = !DILocalVariable(name: "ln", scope: !18000, file: !3, line: 1254, type: !64)
!18004 = !DILocalVariable(name: "now", scope: !18000, file: !3, line: 1255, type: !49)
!18005 = !DILocalVariable(name: "li", scope: !18000, file: !3, line: 1256, type: !831)
!18006 = !DILocation(line: 1255, column: 18, scope: !18000)
!18007 = !DILocation(line: 0, scope: !18000)
!18008 = !DILocation(line: 1256, column: 5, scope: !18000)
!18009 = !DILocation(line: 1256, column: 14, scope: !18000)
!18010 = !DILocation(line: 1258, column: 23, scope: !18000)
!18011 = !DILocation(line: 1258, column: 5, scope: !18000)
!18012 = !DILocation(line: 1259, column: 18, scope: !18000)
!18013 = !DILocation(line: 1259, column: 33, scope: !18000)
!18014 = !DILocation(line: 1259, column: 5, scope: !18000)
!18015 = !DILocation(line: 1260, column: 13, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18000, file: !3, line: 1259, column: 42)
!18017 = !DILocation(line: 1261, column: 20, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18016, file: !3, line: 1261, column: 13)
!18019 = !DILocation(line: 1261, column: 13, scope: !18018)
!18020 = !DILocation(line: 0, scope: !18018)
!18021 = !DILocation(line: 1261, column: 32, scope: !18018)
!18022 = !DILocation(line: 1264, column: 13, scope: !18018)
!18023 = !DILocation(line: 1264, column: 42, scope: !18018)
!18024 = !DILocation(line: 1264, column: 47, scope: !18018)
!18025 = !DILocation(line: 1265, column: 13, scope: !18018)
!18026 = !DILocation(line: 1265, column: 44, scope: !18018)
!18027 = !DILocation(line: 1265, column: 49, scope: !18018)
!18028 = !DILocation(line: 1266, column: 23, scope: !18018)
!18029 = !DILocation(line: 1266, column: 18, scope: !18018)
!18030 = !DILocation(line: 1266, column: 41, scope: !18018)
!18031 = !DILocation(line: 1266, column: 39, scope: !18018)
!18032 = !DILocation(line: 1261, column: 13, scope: !18016)
!18033 = !DILocation(line: 1268, column: 13, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18018, file: !3, line: 1267, column: 9)
!18035 = !DILocation(line: 1269, column: 13, scope: !18034)
!18036 = !DILocation(line: 1270, column: 9, scope: !18034)
!18037 = !DILocation(line: 1270, column: 29, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18018, file: !3, line: 1270, column: 20)
!18039 = !DILocation(line: 1270, column: 20, scope: !18018)
!18040 = !DILocation(line: 1271, column: 20, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18042, file: !3, line: 1271, column: 17)
!18042 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 1270, column: 46)
!18043 = !DILocation(line: 1271, column: 31, scope: !18041)
!18044 = !DILocation(line: 1271, column: 36, scope: !18041)
!18045 = !DILocation(line: 1272, column: 35, scope: !18046)
!18046 = distinct !DILexicalBlock(scope: !18041, file: !3, line: 1271, column: 60)
!18047 = !DILocation(line: 1272, column: 17, scope: !18046)
!18048 = !DILocation(line: 1273, column: 17, scope: !18046)
!18049 = !DILocation(line: 1274, column: 13, scope: !18046)
!18050 = distinct !{!18050, !18014, !18051}
!18051 = !DILocation(line: 1276, column: 5, scope: !18000)
!18052 = !DILocation(line: 1277, column: 1, scope: !18000)
!18053 = distinct !DISubprogram(name: "createClient", scope: !3, file: !3, line: 2714, type: !18054, scopeLine: 2714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18056)
!18054 = !DISubroutineType(types: !18055)
!18055 = !{!287, !45}
!18056 = !{!18057, !18058}
!18057 = !DILocalVariable(name: "fd", arg: 1, scope: !18053, file: !3, line: 2714, type: !45)
!18058 = !DILocalVariable(name: "c", scope: !18053, file: !3, line: 2715, type: !287)
!18059 = !DILocation(line: 0, scope: !18053)
!18060 = !DILocation(line: 2715, column: 22, scope: !18053)
!18061 = !DILocation(line: 2717, column: 5, scope: !18053)
!18062 = !DILocation(line: 2718, column: 5, scope: !18053)
!18063 = !DILocation(line: 2719, column: 10, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18053, file: !3, line: 2719, column: 9)
!18065 = !DILocation(line: 2719, column: 9, scope: !18053)
!18066 = !DILocation(line: 2720, column: 5, scope: !18053)
!18067 = !DILocation(line: 2721, column: 8, scope: !18053)
!18068 = !DILocation(line: 2721, column: 11, scope: !18053)
!18069 = !DILocation(line: 2722, column: 19, scope: !18053)
!18070 = !DILocation(line: 2722, column: 8, scope: !18053)
!18071 = !DILocation(line: 2722, column: 17, scope: !18053)
!18072 = !DILocation(line: 2723, column: 8, scope: !18053)
!18073 = !DILocation(line: 2724, column: 8, scope: !18053)
!18074 = !DILocation(line: 2723, column: 13, scope: !18053)
!18075 = !DILocation(line: 2724, column: 13, scope: !18053)
!18076 = !DILocation(line: 2729, column: 8, scope: !18053)
!18077 = !DILocation(line: 2729, column: 16, scope: !18053)
!18078 = !DILocation(line: 2730, column: 8, scope: !18053)
!18079 = !DILocation(line: 2730, column: 14, scope: !18053)
!18080 = !DILocation(line: 2731, column: 26, scope: !18053)
!18081 = !DILocation(line: 2731, column: 8, scope: !18053)
!18082 = !DILocation(line: 2731, column: 24, scope: !18053)
!18083 = !DILocation(line: 2732, column: 8, scope: !18053)
!18084 = !DILocation(line: 2732, column: 22, scope: !18053)
!18085 = !DILocation(line: 2733, column: 8, scope: !18053)
!18086 = !DILocation(line: 2733, column: 18, scope: !18053)
!18087 = !DILocation(line: 2734, column: 16, scope: !18053)
!18088 = !DILocation(line: 2734, column: 8, scope: !18053)
!18089 = !DILocation(line: 2734, column: 14, scope: !18053)
!18090 = !DILocation(line: 2735, column: 5, scope: !18053)
!18091 = !DILocation(line: 2736, column: 5, scope: !18053)
!18092 = !DILocation(line: 2737, column: 8, scope: !18053)
!18093 = !DILocation(line: 2737, column: 21, scope: !18053)
!18094 = !DILocation(line: 2738, column: 8, scope: !18053)
!18095 = !DILocation(line: 2738, column: 24, scope: !18053)
!18096 = !DILocation(line: 2739, column: 18, scope: !18053)
!18097 = !DILocation(line: 2739, column: 8, scope: !18053)
!18098 = !DILocation(line: 2739, column: 16, scope: !18053)
!18099 = !DILocation(line: 2740, column: 5, scope: !18053)
!18100 = !DILocation(line: 2741, column: 26, scope: !18053)
!18101 = !DILocation(line: 2741, column: 8, scope: !18053)
!18102 = !DILocation(line: 2741, column: 24, scope: !18053)
!18103 = !DILocation(line: 2742, column: 26, scope: !18053)
!18104 = !DILocation(line: 2742, column: 8, scope: !18053)
!18105 = !DILocation(line: 2742, column: 24, scope: !18053)
!18106 = !DILocation(line: 2743, column: 5, scope: !18053)
!18107 = !DILocation(line: 2744, column: 5, scope: !18053)
!18108 = !DILocation(line: 2745, column: 34, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18053, file: !3, line: 2745, column: 9)
!18110 = !DILocation(line: 2745, column: 41, scope: !18109)
!18111 = !DILocation(line: 2745, column: 9, scope: !18109)
!18112 = !DILocation(line: 2746, column: 33, scope: !18109)
!18113 = !DILocation(line: 2745, column: 9, scope: !18053)
!18114 = !DILocation(line: 2747, column: 9, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18109, file: !3, line: 2746, column: 44)
!18116 = !DILocation(line: 2748, column: 9, scope: !18115)
!18117 = !DILocation(line: 2750, column: 28, scope: !18053)
!18118 = !DILocation(line: 2750, column: 5, scope: !18053)
!18119 = !DILocation(line: 2751, column: 5, scope: !18053)
!18120 = !DILocation(line: 2752, column: 5, scope: !18053)
!18121 = !DILocation(line: 2753, column: 1, scope: !18053)
!18122 = distinct !DISubprogram(name: "dictListDestructor", scope: !3, file: !3, line: 1095, type: !113, scopeLine: 1096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18123)
!18123 = !{!18124, !18125}
!18124 = !DILocalVariable(name: "privdata", arg: 1, scope: !18122, file: !3, line: 1095, type: !46)
!18125 = !DILocalVariable(name: "val", arg: 2, scope: !18122, file: !3, line: 1095, type: !46)
!18126 = !DILocation(line: 0, scope: !18122)
!18127 = !DILocation(line: 1098, column: 17, scope: !18122)
!18128 = !DILocation(line: 1098, column: 5, scope: !18122)
!18129 = !DILocation(line: 1099, column: 1, scope: !18122)
!18130 = distinct !DISubprogram(name: "dictObjKeyCompare", scope: !3, file: !3, line: 1121, type: !109, scopeLine: 1123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18131)
!18131 = !{!18132, !18133, !18134, !18135, !18138}
!18132 = !DILocalVariable(name: "privdata", arg: 1, scope: !18130, file: !3, line: 1121, type: !46)
!18133 = !DILocalVariable(name: "key1", arg: 2, scope: !18130, file: !3, line: 1121, type: !100)
!18134 = !DILocalVariable(name: "key2", arg: 3, scope: !18130, file: !3, line: 1122, type: !100)
!18135 = !DILocalVariable(name: "o1", scope: !18130, file: !3, line: 1124, type: !18136)
!18136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18137, size: 64)
!18137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!18138 = !DILocalVariable(name: "o2", scope: !18130, file: !3, line: 1124, type: !18136)
!18139 = !DILocation(line: 0, scope: !18130)
!18140 = !DILocation(line: 1125, column: 43, scope: !18130)
!18141 = !DILocation(line: 1125, column: 51, scope: !18130)
!18142 = !DILocation(line: 1125, column: 12, scope: !18130)
!18143 = !DILocation(line: 1125, column: 5, scope: !18130)
!18144 = distinct !DISubprogram(name: "incrementallyRehash", scope: !3, file: !3, line: 1305, type: !1747, scopeLine: 1305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18145)
!18145 = !{!18146}
!18146 = !DILocalVariable(name: "j", scope: !18144, file: !3, line: 1306, type: !45)
!18147 = !DILocation(line: 0, scope: !18144)
!18148 = !DILocation(line: 1308, column: 19, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18150, file: !3, line: 1308, column: 5)
!18150 = distinct !DILexicalBlock(scope: !18144, file: !3, line: 1308, column: 5)
!18151 = !DILocation(line: 1308, column: 5, scope: !18150)
!18152 = distinct !{!18152, !18151, !18153}
!18153 = !DILocation(line: 1313, column: 5, scope: !18150)
!18154 = !DILocation(line: 1309, column: 13, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18156, file: !3, line: 1309, column: 13)
!18156 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 1308, column: 40)
!18157 = !{!18158, !713, i64 80}
!18158 = !{!"dict", !714, i64 0, !714, i64 8, !711, i64 16, !713, i64 80, !713, i64 84}
!18159 = !DILocation(line: 1308, column: 36, scope: !18149)
!18160 = !DILocation(line: 1309, column: 13, scope: !18156)
!18161 = !DILocation(line: 1310, column: 13, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18155, file: !3, line: 1309, column: 49)
!18163 = !DILocation(line: 1311, column: 13, scope: !18162)
!18164 = !DILocation(line: 1314, column: 1, scope: !18144)
!18165 = distinct !DISubprogram(name: "listMatchObjects", scope: !3, file: !3, line: 2710, type: !83, scopeLine: 2710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18166)
!18166 = !{!18167, !18168}
!18167 = !DILocalVariable(name: "a", arg: 1, scope: !18165, file: !3, line: 2710, type: !46)
!18168 = !DILocalVariable(name: "b", arg: 2, scope: !18165, file: !3, line: 2710, type: !46)
!18169 = !DILocation(line: 0, scope: !18165)
!18170 = !DILocation(line: 2711, column: 31, scope: !18165)
!18171 = !DILocation(line: 2711, column: 33, scope: !18165)
!18172 = !DILocation(line: 2711, column: 12, scope: !18165)
!18173 = !DILocation(line: 2711, column: 5, scope: !18165)
!18174 = distinct !DISubprogram(name: "rdbLoadTime", scope: !3, file: !3, line: 3832, type: !18175, scopeLine: 3832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18177)
!18175 = !DISubroutineType(types: !18176)
!18176 = !{!49, !580}
!18177 = !{!18178, !18179}
!18178 = !DILocalVariable(name: "fp", arg: 1, scope: !18174, file: !3, line: 3832, type: !580)
!18179 = !DILocalVariable(name: "t32", scope: !18174, file: !3, line: 3833, type: !143)
!18180 = !DILocation(line: 0, scope: !18174)
!18181 = !DILocation(line: 3833, column: 5, scope: !18174)
!18182 = !DILocation(line: 3834, column: 9, scope: !18183)
!18183 = distinct !DILexicalBlock(scope: !18174, file: !3, line: 3834, column: 9)
!18184 = !DILocation(line: 3834, column: 28, scope: !18183)
!18185 = !DILocation(line: 3834, column: 9, scope: !18174)
!18186 = !DILocation(line: 3836, column: 1, scope: !18174)
!18187 = distinct !DISubprogram(name: "rdbLoadType", scope: !3, file: !3, line: 3826, type: !1429, scopeLine: 3826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18188)
!18188 = !{!18189, !18190}
!18189 = !DILocalVariable(name: "fp", arg: 1, scope: !18187, file: !3, line: 3826, type: !580)
!18190 = !DILocalVariable(name: "type", scope: !18187, file: !3, line: 3827, type: !151)
!18191 = !DILocation(line: 0, scope: !18187)
!18192 = !DILocation(line: 3827, column: 5, scope: !18187)
!18193 = !DILocation(line: 3828, column: 9, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18187, file: !3, line: 3828, column: 9)
!18195 = !DILocation(line: 3828, column: 29, scope: !18194)
!18196 = !DILocation(line: 3828, column: 9, scope: !18187)
!18197 = !DILocation(line: 3830, column: 1, scope: !18187)
!18198 = distinct !DISubprogram(name: "readQueryFromClient", scope: !3, file: !3, line: 2668, type: !2737, scopeLine: 2668, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18199)
!18199 = !{!18200, !18201, !18202, !18203, !18204, !18205, !18206}
!18200 = !DILocalVariable(name: "el", arg: 1, scope: !18198, file: !3, line: 2668, type: !461)
!18201 = !DILocalVariable(name: "fd", arg: 2, scope: !18198, file: !3, line: 2668, type: !45)
!18202 = !DILocalVariable(name: "privdata", arg: 3, scope: !18198, file: !3, line: 2668, type: !46)
!18203 = !DILocalVariable(name: "mask", arg: 4, scope: !18198, file: !3, line: 2668, type: !45)
!18204 = !DILocalVariable(name: "c", scope: !18198, file: !3, line: 2669, type: !287)
!18205 = !DILocalVariable(name: "buf", scope: !18198, file: !3, line: 2670, type: !2331)
!18206 = !DILocalVariable(name: "nread", scope: !18198, file: !3, line: 2671, type: !45)
!18207 = !DILocation(line: 0, scope: !18198)
!18208 = !DILocation(line: 2669, column: 22, scope: !18198)
!18209 = !DILocation(line: 2670, column: 5, scope: !18198)
!18210 = !DILocation(line: 2670, column: 10, scope: !18198)
!18211 = !DILocation(line: 2675, column: 13, scope: !18198)
!18212 = !DILocation(line: 2676, column: 9, scope: !18198)
!18213 = !DILocation(line: 2677, column: 13, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18215, file: !3, line: 2677, column: 13)
!18215 = distinct !DILexicalBlock(scope: !18216, file: !3, line: 2676, column: 22)
!18216 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2676, column: 9)
!18217 = !DILocation(line: 2677, column: 19, scope: !18214)
!18218 = !DILocation(line: 2677, column: 13, scope: !18215)
!18219 = !DILocation(line: 2680, column: 63, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 2679, column: 16)
!18221 = !DILocation(line: 2680, column: 13, scope: !18220)
!18222 = !DILocation(line: 2681, column: 13, scope: !18220)
!18223 = !DILocation(line: 2682, column: 13, scope: !18220)
!18224 = !DILocation(line: 2685, column: 9, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18226, file: !3, line: 2684, column: 28)
!18226 = distinct !DILexicalBlock(scope: !18216, file: !3, line: 2684, column: 16)
!18227 = !DILocation(line: 2686, column: 9, scope: !18225)
!18228 = !DILocation(line: 2687, column: 9, scope: !18225)
!18229 = !DILocation(line: 2690, column: 36, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18231, file: !3, line: 2689, column: 16)
!18231 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2689, column: 9)
!18232 = !DILocation(line: 2690, column: 51, scope: !18230)
!18233 = !DILocation(line: 2690, column: 23, scope: !18230)
!18234 = !DILocation(line: 2690, column: 21, scope: !18230)
!18235 = !DILocation(line: 2691, column: 30, scope: !18230)
!18236 = !DILocation(line: 2691, column: 12, scope: !18230)
!18237 = !DILocation(line: 2691, column: 28, scope: !18230)
!18238 = !DILocation(line: 2695, column: 5, scope: !18198)
!18239 = !DILocation(line: 2696, column: 1, scope: !18198)
!18240 = distinct !DISubprogram(name: "syncRead", scope: !3, file: !3, line: 7812, type: !18241, scopeLine: 7812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18243)
!18241 = !DISubroutineType(types: !18242)
!18242 = !{!45, !45, !47, !1089, !45}
!18243 = !{!18244, !18245, !18246, !18247, !18248, !18249, !18250}
!18244 = !DILocalVariable(name: "fd", arg: 1, scope: !18240, file: !3, line: 7812, type: !45)
!18245 = !DILocalVariable(name: "ptr", arg: 2, scope: !18240, file: !3, line: 7812, type: !47)
!18246 = !DILocalVariable(name: "size", arg: 3, scope: !18240, file: !3, line: 7812, type: !1089)
!18247 = !DILocalVariable(name: "timeout", arg: 4, scope: !18240, file: !3, line: 7812, type: !45)
!18248 = !DILocalVariable(name: "nread", scope: !18240, file: !3, line: 7813, type: !1089)
!18249 = !DILocalVariable(name: "totread", scope: !18240, file: !3, line: 7813, type: !1089)
!18250 = !DILocalVariable(name: "start", scope: !18240, file: !3, line: 7814, type: !49)
!18251 = !DILocation(line: 0, scope: !18240)
!18252 = !DILocation(line: 7814, column: 20, scope: !18240)
!18253 = !DILocation(line: 7816, column: 12, scope: !18240)
!18254 = !DILocation(line: 7817, column: 5, scope: !18240)
!18255 = !DILocation(line: 7818, column: 13, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18257, file: !3, line: 7818, column: 13)
!18257 = distinct !DILexicalBlock(scope: !18240, file: !3, line: 7817, column: 17)
!18258 = !DILocation(line: 7818, column: 41, scope: !18256)
!18259 = !DILocation(line: 7818, column: 13, scope: !18257)
!18260 = !DILocation(line: 7819, column: 21, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18256, file: !3, line: 7818, column: 56)
!18262 = !DILocation(line: 7820, column: 23, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18261, file: !3, line: 7820, column: 17)
!18264 = !DILocation(line: 7820, column: 17, scope: !18261)
!18265 = !DILocation(line: 7821, column: 17, scope: !18261)
!18266 = !DILocation(line: 7822, column: 18, scope: !18261)
!18267 = !DILocation(line: 7823, column: 21, scope: !18261)
!18268 = !DILocation(line: 7824, column: 9, scope: !18261)
!18269 = !DILocation(line: 7825, column: 14, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18257, file: !3, line: 7825, column: 13)
!18271 = !DILocation(line: 7825, column: 24, scope: !18270)
!18272 = !DILocation(line: 7825, column: 32, scope: !18270)
!18273 = !DILocation(line: 7825, column: 13, scope: !18257)
!18274 = distinct !{!18274, !18254, !18275}
!18275 = !DILocation(line: 7829, column: 5, scope: !18240)
!18276 = !DILocation(line: 7826, column: 13, scope: !18277)
!18277 = distinct !DILexicalBlock(scope: !18270, file: !3, line: 7825, column: 43)
!18278 = !DILocation(line: 7826, column: 19, scope: !18277)
!18279 = !DILocation(line: 7827, column: 13, scope: !18277)
!18280 = !DILocation(line: 7830, column: 12, scope: !18240)
!18281 = !DILocation(line: 7830, column: 5, scope: !18240)
!18282 = !DILocation(line: 7831, column: 1, scope: !18240)
!18283 = distinct !DISubprogram(name: "syncReadLine", scope: !3, file: !3, line: 7833, type: !18241, scopeLine: 7833, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18284)
!18284 = !{!18285, !18286, !18287, !18288, !18289, !18290}
!18285 = !DILocalVariable(name: "fd", arg: 1, scope: !18283, file: !3, line: 7833, type: !45)
!18286 = !DILocalVariable(name: "ptr", arg: 2, scope: !18283, file: !3, line: 7833, type: !47)
!18287 = !DILocalVariable(name: "size", arg: 3, scope: !18283, file: !3, line: 7833, type: !1089)
!18288 = !DILocalVariable(name: "timeout", arg: 4, scope: !18283, file: !3, line: 7833, type: !45)
!18289 = !DILocalVariable(name: "nread", scope: !18283, file: !3, line: 7834, type: !1089)
!18290 = !DILocalVariable(name: "c", scope: !18291, file: !3, line: 7838, type: !48)
!18291 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 7837, column: 17)
!18292 = !DILocation(line: 0, scope: !18283)
!18293 = !DILocation(line: 7837, column: 5, scope: !18283)
!18294 = !DILocation(line: 7838, column: 9, scope: !18291)
!18295 = !DILocation(line: 0, scope: !18291)
!18296 = !DILocation(line: 7840, column: 13, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18291, file: !3, line: 7840, column: 13)
!18298 = !DILocation(line: 7840, column: 39, scope: !18297)
!18299 = !DILocation(line: 7840, column: 13, scope: !18291)
!18300 = !DILocation(line: 7841, column: 13, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18291, file: !3, line: 7841, column: 13)
!18302 = !DILocation(line: 7841, column: 15, scope: !18301)
!18303 = !DILocation(line: 7841, column: 13, scope: !18291)
!18304 = !DILocation(line: 7842, column: 18, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 7841, column: 24)
!18306 = !DILocation(line: 7843, column: 17, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 7843, column: 17)
!18308 = !DILocation(line: 7843, column: 23, scope: !18307)
!18309 = !DILocation(line: 7843, column: 31, scope: !18307)
!18310 = !DILocation(line: 7843, column: 26, scope: !18307)
!18311 = !DILocation(line: 7843, column: 35, scope: !18307)
!18312 = !DILocation(line: 7843, column: 17, scope: !18305)
!18313 = !DILocation(line: 7843, column: 53, scope: !18307)
!18314 = !DILocation(line: 7843, column: 44, scope: !18307)
!18315 = !DILocation(line: 7844, column: 20, scope: !18305)
!18316 = !DILocation(line: 7844, column: 13, scope: !18305)
!18317 = !DILocation(line: 7850, column: 5, scope: !18283)
!18318 = !DILocation(line: 7846, column: 17, scope: !18319)
!18319 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 7845, column: 16)
!18320 = !DILocation(line: 7846, column: 20, scope: !18319)
!18321 = !DILocation(line: 7847, column: 18, scope: !18319)
!18322 = !DILocation(line: 7848, column: 18, scope: !18319)
!18323 = distinct !{!18323, !18293, !18317}
!18324 = !DILocation(line: 7852, column: 1, scope: !18283)
!18325 = distinct !DISubprogram(name: "syncWithMaster", scope: !3, file: !3, line: 8025, type: !1709, scopeLine: 8025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18326)
!18326 = !{!18327, !18328, !18329, !18330, !18331, !18332, !18333, !18334, !18336}
!18327 = !DILocalVariable(name: "buf", scope: !18325, file: !3, line: 8026, type: !2331)
!18328 = !DILocalVariable(name: "tmpfile", scope: !18325, file: !3, line: 8026, type: !457)
!18329 = !DILocalVariable(name: "authcmd", scope: !18325, file: !3, line: 8026, type: !2331)
!18330 = !DILocalVariable(name: "dumpsize", scope: !18325, file: !3, line: 8027, type: !53)
!18331 = !DILocalVariable(name: "fd", scope: !18325, file: !3, line: 8028, type: !45)
!18332 = !DILocalVariable(name: "dfd", scope: !18325, file: !3, line: 8029, type: !45)
!18333 = !DILocalVariable(name: "maxtries", scope: !18325, file: !3, line: 8029, type: !45)
!18334 = !DILocalVariable(name: "nread", scope: !18335, file: !3, line: 8095, type: !45)
!18335 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8094, column: 21)
!18336 = !DILocalVariable(name: "nwritten", scope: !18335, file: !3, line: 8095, type: !45)
!18337 = !DILocation(line: 8026, column: 5, scope: !18325)
!18338 = !DILocation(line: 8026, column: 10, scope: !18325)
!18339 = !DILocation(line: 8026, column: 21, scope: !18325)
!18340 = !DILocation(line: 8026, column: 35, scope: !18325)
!18341 = !DILocation(line: 8028, column: 41, scope: !18325)
!18342 = !DILocation(line: 8028, column: 59, scope: !18325)
!18343 = !DILocation(line: 8028, column: 14, scope: !18325)
!18344 = !DILocation(line: 0, scope: !18325)
!18345 = !DILocation(line: 8031, column: 12, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8031, column: 9)
!18347 = !DILocation(line: 8031, column: 9, scope: !18325)
!18348 = !DILocation(line: 8033, column: 22, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18346, file: !3, line: 8031, column: 19)
!18350 = !DILocation(line: 8033, column: 13, scope: !18349)
!18351 = !DILocation(line: 8032, column: 9, scope: !18349)
!18352 = !DILocation(line: 8034, column: 9, scope: !18349)
!18353 = !DILocation(line: 8038, column: 15, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8038, column: 8)
!18355 = !DILocation(line: 8038, column: 8, scope: !18354)
!18356 = !DILocation(line: 8038, column: 8, scope: !18325)
!18357 = !DILocation(line: 8039, column: 6, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 8038, column: 27)
!18359 = !DILocation(line: 8040, column: 47, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18358, file: !3, line: 8040, column: 10)
!18361 = !DILocation(line: 8040, column: 33, scope: !18360)
!18362 = !DILocation(line: 8040, column: 58, scope: !18360)
!18363 = !DILocation(line: 8040, column: 10, scope: !18360)
!18364 = !DILocation(line: 8040, column: 65, scope: !18360)
!18365 = !DILocation(line: 8040, column: 10, scope: !18358)
!18366 = !DILocation(line: 8041, column: 13, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18360, file: !3, line: 8040, column: 72)
!18368 = !DILocation(line: 8043, column: 26, scope: !18367)
!18369 = !DILocation(line: 8043, column: 17, scope: !18367)
!18370 = !DILocation(line: 8042, column: 13, scope: !18367)
!18371 = !DILocation(line: 8044, column: 13, scope: !18367)
!18372 = !DILocation(line: 8047, column: 13, scope: !18373)
!18373 = distinct !DILexicalBlock(scope: !18358, file: !3, line: 8047, column: 13)
!18374 = !DILocation(line: 8047, column: 44, scope: !18373)
!18375 = !DILocation(line: 8047, column: 13, scope: !18358)
!18376 = !DILocation(line: 8048, column: 13, scope: !18377)
!18377 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 8047, column: 51)
!18378 = !DILocation(line: 8050, column: 26, scope: !18377)
!18379 = !DILocation(line: 8050, column: 17, scope: !18377)
!18380 = !DILocation(line: 8049, column: 13, scope: !18377)
!18381 = !DILocation(line: 8051, column: 13, scope: !18377)
!18382 = !DILocation(line: 8053, column: 13, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18358, file: !3, line: 8053, column: 13)
!18384 = !DILocation(line: 8053, column: 20, scope: !18383)
!18385 = !DILocation(line: 8053, column: 13, scope: !18358)
!18386 = !DILocation(line: 8054, column: 13, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18383, file: !3, line: 8053, column: 28)
!18388 = !DILocation(line: 8055, column: 13, scope: !18387)
!18389 = !DILocation(line: 8056, column: 13, scope: !18387)
!18390 = !DILocation(line: 8061, column: 9, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8061, column: 9)
!18392 = !DILocation(line: 8061, column: 39, scope: !18391)
!18393 = !DILocation(line: 8061, column: 9, scope: !18325)
!18394 = !DILocation(line: 8062, column: 9, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18391, file: !3, line: 8061, column: 46)
!18396 = !DILocation(line: 8064, column: 22, scope: !18395)
!18397 = !DILocation(line: 8064, column: 13, scope: !18395)
!18398 = !DILocation(line: 8063, column: 9, scope: !18395)
!18399 = !DILocation(line: 8065, column: 9, scope: !18395)
!18400 = !DILocation(line: 8068, column: 9, scope: !18401)
!18401 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8068, column: 9)
!18402 = !DILocation(line: 8068, column: 40, scope: !18401)
!18403 = !DILocation(line: 8068, column: 9, scope: !18325)
!18404 = !DILocation(line: 8069, column: 9, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18401, file: !3, line: 8068, column: 47)
!18406 = !DILocation(line: 8071, column: 22, scope: !18405)
!18407 = !DILocation(line: 8071, column: 13, scope: !18405)
!18408 = !DILocation(line: 8070, column: 9, scope: !18405)
!18409 = !DILocation(line: 8072, column: 9, scope: !18405)
!18410 = !DILocation(line: 8074, column: 9, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8074, column: 9)
!18412 = !DILocation(line: 8074, column: 16, scope: !18411)
!18413 = !DILocation(line: 8074, column: 9, scope: !18325)
!18414 = !DILocation(line: 8075, column: 9, scope: !18415)
!18415 = distinct !DILexicalBlock(scope: !18411, file: !3, line: 8074, column: 24)
!18416 = !DILocation(line: 8076, column: 9, scope: !18415)
!18417 = !DILocation(line: 8077, column: 9, scope: !18415)
!18418 = !DILocation(line: 8079, column: 26, scope: !18325)
!18419 = !DILocation(line: 8079, column: 16, scope: !18325)
!18420 = !DILocation(line: 8080, column: 5, scope: !18325)
!18421 = !DILocation(line: 8084, column: 36, scope: !18422)
!18422 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8082, column: 23)
!18423 = !DILocation(line: 8084, column: 31, scope: !18422)
!18424 = !DILocation(line: 8084, column: 57, scope: !18422)
!18425 = !DILocation(line: 8084, column: 47, scope: !18422)
!18426 = !DILocation(line: 8083, column: 9, scope: !18422)
!18427 = !DILocation(line: 8085, column: 15, scope: !18422)
!18428 = !DILocation(line: 8086, column: 17, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18422, file: !3, line: 8086, column: 13)
!18430 = !DILocation(line: 8086, column: 13, scope: !18422)
!18431 = !DILocation(line: 8094, column: 5, scope: !18325)
!18432 = !DILocation(line: 8087, column: 9, scope: !18422)
!18433 = !DILocation(line: 8090, column: 9, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !18435, file: !3, line: 8089, column: 20)
!18435 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8089, column: 9)
!18436 = !DILocation(line: 8091, column: 113, scope: !18434)
!18437 = !DILocation(line: 8091, column: 104, scope: !18434)
!18438 = !DILocation(line: 8091, column: 9, scope: !18434)
!18439 = !DILocation(line: 8092, column: 9, scope: !18434)
!18440 = distinct !{!18440, !18431, !18441}
!18441 = !DILocation(line: 8113, column: 5, scope: !18325)
!18442 = !DILocation(line: 8097, column: 39, scope: !18335)
!18443 = !DILocation(line: 8097, column: 29, scope: !18335)
!18444 = !DILocation(line: 8097, column: 17, scope: !18335)
!18445 = !DILocation(line: 0, scope: !18335)
!18446 = !DILocation(line: 8098, column: 19, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18335, file: !3, line: 8098, column: 13)
!18448 = !DILocation(line: 8098, column: 13, scope: !18335)
!18449 = !DILocation(line: 8100, column: 24, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18447, file: !3, line: 8098, column: 25)
!18451 = !DILocation(line: 8100, column: 17, scope: !18450)
!18452 = !DILocation(line: 8100, column: 42, scope: !18450)
!18453 = !DILocation(line: 8100, column: 33, scope: !18450)
!18454 = !DILocation(line: 8099, column: 13, scope: !18450)
!18455 = !DILocation(line: 8101, column: 13, scope: !18450)
!18456 = !DILocation(line: 8102, column: 13, scope: !18450)
!18457 = !DILocation(line: 8103, column: 13, scope: !18450)
!18458 = !DILocation(line: 8105, column: 34, scope: !18335)
!18459 = !DILocation(line: 8105, column: 20, scope: !18335)
!18460 = !DILocation(line: 8106, column: 22, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18335, file: !3, line: 8106, column: 13)
!18462 = !DILocation(line: 8112, column: 18, scope: !18335)
!18463 = !DILocation(line: 8106, column: 13, scope: !18335)
!18464 = !DILocation(line: 8107, column: 137, scope: !18465)
!18465 = distinct !DILexicalBlock(scope: !18461, file: !3, line: 8106, column: 29)
!18466 = !DILocation(line: 8107, column: 128, scope: !18465)
!18467 = !DILocation(line: 8107, column: 13, scope: !18465)
!18468 = !DILocation(line: 8108, column: 13, scope: !18465)
!18469 = !DILocation(line: 8109, column: 13, scope: !18465)
!18470 = !DILocation(line: 8110, column: 13, scope: !18465)
!18471 = !DILocation(line: 8114, column: 5, scope: !18325)
!18472 = !DILocation(line: 8115, column: 31, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8115, column: 9)
!18474 = !DILocation(line: 8115, column: 9, scope: !18473)
!18475 = !DILocation(line: 8115, column: 43, scope: !18473)
!18476 = !DILocation(line: 8115, column: 9, scope: !18325)
!18477 = !DILocation(line: 8116, column: 134, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18473, file: !3, line: 8115, column: 50)
!18479 = !DILocation(line: 8116, column: 125, scope: !18478)
!18480 = !DILocation(line: 8116, column: 9, scope: !18478)
!18481 = !DILocation(line: 8117, column: 9, scope: !18478)
!18482 = !DILocation(line: 8118, column: 9, scope: !18478)
!18483 = !DILocation(line: 8119, column: 9, scope: !18478)
!18484 = !DILocation(line: 8121, column: 5, scope: !18325)
!18485 = !DILocation(line: 8122, column: 24, scope: !18486)
!18486 = distinct !DILexicalBlock(scope: !18325, file: !3, line: 8122, column: 9)
!18487 = !DILocation(line: 8122, column: 9, scope: !18486)
!18488 = !DILocation(line: 8122, column: 36, scope: !18486)
!18489 = !DILocation(line: 8122, column: 9, scope: !18325)
!18490 = !DILocation(line: 8123, column: 9, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 8122, column: 49)
!18492 = !DILocation(line: 8124, column: 9, scope: !18491)
!18493 = !DILocation(line: 8125, column: 9, scope: !18491)
!18494 = !DILocation(line: 8127, column: 21, scope: !18325)
!18495 = !DILocation(line: 8127, column: 19, scope: !18325)
!18496 = !DILocation(line: 8128, column: 20, scope: !18325)
!18497 = !DILocation(line: 8128, column: 26, scope: !18325)
!18498 = !DILocation(line: 8129, column: 20, scope: !18325)
!18499 = !DILocation(line: 8129, column: 34, scope: !18325)
!18500 = !DILocation(line: 8130, column: 22, scope: !18325)
!18501 = !DILocation(line: 8131, column: 5, scope: !18325)
!18502 = !DILocation(line: 8132, column: 1, scope: !18325)
!18503 = distinct !DISubprogram(name: "syncWrite", scope: !3, file: !3, line: 7792, type: !18241, scopeLine: 7792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18504)
!18504 = !{!18505, !18506, !18507, !18508, !18509, !18510, !18511}
!18505 = !DILocalVariable(name: "fd", arg: 1, scope: !18503, file: !3, line: 7792, type: !45)
!18506 = !DILocalVariable(name: "ptr", arg: 2, scope: !18503, file: !3, line: 7792, type: !47)
!18507 = !DILocalVariable(name: "size", arg: 3, scope: !18503, file: !3, line: 7792, type: !1089)
!18508 = !DILocalVariable(name: "timeout", arg: 4, scope: !18503, file: !3, line: 7792, type: !45)
!18509 = !DILocalVariable(name: "nwritten", scope: !18503, file: !3, line: 7793, type: !1089)
!18510 = !DILocalVariable(name: "ret", scope: !18503, file: !3, line: 7793, type: !1089)
!18511 = !DILocalVariable(name: "start", scope: !18503, file: !3, line: 7794, type: !49)
!18512 = !DILocation(line: 0, scope: !18503)
!18513 = !DILocation(line: 7794, column: 20, scope: !18503)
!18514 = !DILocation(line: 7796, column: 12, scope: !18503)
!18515 = !DILocation(line: 7797, column: 5, scope: !18503)
!18516 = !DILocation(line: 7798, column: 13, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18518, file: !3, line: 7798, column: 13)
!18518 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 7797, column: 17)
!18519 = !DILocation(line: 7798, column: 41, scope: !18517)
!18520 = !DILocation(line: 7798, column: 13, scope: !18518)
!18521 = !DILocation(line: 7799, column: 24, scope: !18522)
!18522 = distinct !DILexicalBlock(scope: !18517, file: !3, line: 7798, column: 56)
!18523 = !DILocation(line: 7800, column: 26, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18522, file: !3, line: 7800, column: 17)
!18525 = !DILocation(line: 7800, column: 17, scope: !18522)
!18526 = !DILocation(line: 7801, column: 17, scope: !18522)
!18527 = !DILocation(line: 7802, column: 18, scope: !18522)
!18528 = !DILocation(line: 7803, column: 9, scope: !18522)
!18529 = !DILocation(line: 7804, column: 14, scope: !18530)
!18530 = distinct !DILexicalBlock(scope: !18518, file: !3, line: 7804, column: 13)
!18531 = !DILocation(line: 7804, column: 24, scope: !18530)
!18532 = !DILocation(line: 7804, column: 32, scope: !18530)
!18533 = !DILocation(line: 7804, column: 13, scope: !18518)
!18534 = distinct !{!18534, !18515, !18535}
!18535 = !DILocation(line: 7808, column: 5, scope: !18503)
!18536 = !DILocation(line: 7805, column: 13, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18530, file: !3, line: 7804, column: 43)
!18538 = !DILocation(line: 7805, column: 19, scope: !18537)
!18539 = !DILocation(line: 7806, column: 13, scope: !18537)
!18540 = !DILocation(line: 7809, column: 12, scope: !18503)
!18541 = !DILocation(line: 7809, column: 5, scope: !18503)
!18542 = !DILocation(line: 7810, column: 1, scope: !18503)
!18543 = distinct !DISubprogram(name: "tryResizeHashTables", scope: !3, file: !3, line: 1290, type: !1747, scopeLine: 1290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18544)
!18544 = !{!18545}
!18545 = !DILocalVariable(name: "j", scope: !18543, file: !3, line: 1291, type: !45)
!18546 = !DILocation(line: 0, scope: !18543)
!18547 = !DILocation(line: 1293, column: 28, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !18549, file: !3, line: 1293, column: 5)
!18549 = distinct !DILexicalBlock(scope: !18543, file: !3, line: 1293, column: 5)
!18550 = !DILocation(line: 1293, column: 19, scope: !18548)
!18551 = !DILocation(line: 1293, column: 5, scope: !18549)
!18552 = !DILocation(line: 1294, column: 34, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18554, file: !3, line: 1294, column: 13)
!18554 = distinct !DILexicalBlock(scope: !18548, file: !3, line: 1293, column: 40)
!18555 = !DILocation(line: 1294, column: 40, scope: !18553)
!18556 = !DILocation(line: 1294, column: 13, scope: !18553)
!18557 = !DILocation(line: 1294, column: 13, scope: !18554)
!18558 = !DILocation(line: 1295, column: 13, scope: !18553)
!18559 = !DILocation(line: 1296, column: 34, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18554, file: !3, line: 1296, column: 13)
!18561 = !DILocation(line: 1296, column: 40, scope: !18560)
!18562 = !DILocation(line: 1296, column: 13, scope: !18560)
!18563 = !DILocation(line: 1296, column: 13, scope: !18554)
!18564 = !DILocation(line: 1297, column: 13, scope: !18560)
!18565 = !DILocation(line: 1293, column: 36, scope: !18548)
!18566 = distinct !{!18566, !18551, !18567}
!18567 = !DILocation(line: 1298, column: 5, scope: !18549)
!18568 = !DILocation(line: 1299, column: 1, scope: !18543)
!18569 = !DISubprogram(name: "anetNonBlock", scope: !17384, file: !17384, line: 45, type: !18570, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18570 = !DISubroutineType(types: !18571)
!18571 = !{!45, !47, !45}
!18572 = !DISubprogram(name: "anetTcpNoDelay", scope: !17384, file: !17384, line: 46, type: !18570, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18573 = !DISubprogram(name: "dictRehashMilliseconds", scope: !88, file: !88, line: 144, type: !18574, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18574 = !DISubroutineType(types: !18575)
!18575 = !{!45, !86, !45}
!18576 = !DISubprogram(name: "aeWait", scope: !463, file: !463, line: 112, type: !18577, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18577 = !DISubroutineType(types: !18578)
!18578 = !{!45, !45, !45, !54}
!18579 = !DISubprogram(name: "anetTcpConnect", scope: !17384, file: !17384, line: 38, type: !18580, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18580 = !DISubroutineType(types: !18581)
!18581 = !{!45, !47, !47, !45}
!18582 = !DISubprogram(name: "sleep", scope: !1086, file: !1086, line: 444, type: !18583, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18583 = !DISubroutineType(types: !18584)
!18584 = !{!7, !7}
!18585 = distinct !DISubprogram(name: "dictObjHash", scope: !3, file: !3, line: 1128, type: !98, scopeLine: 1128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !18586)
!18586 = !{!18587, !18588}
!18587 = !DILocalVariable(name: "key", arg: 1, scope: !18585, file: !3, line: 1128, type: !100)
!18588 = !DILocalVariable(name: "o", scope: !18585, file: !3, line: 1129, type: !18136)
!18589 = !DILocation(line: 0, scope: !18585)
!18590 = !DILocation(line: 1130, column: 35, scope: !18585)
!18591 = !DILocation(line: 1130, column: 40, scope: !18585)
!18592 = !DILocation(line: 1130, column: 12, scope: !18585)
!18593 = !DILocation(line: 1130, column: 5, scope: !18585)
!18594 = !DISubprogram(name: "anetAccept", scope: !17384, file: !17384, line: 43, type: !18595, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18595 = !DISubroutineType(types: !18596)
!18596 = !{!45, !47, !45, !47, !3301}
!18597 = !DISubprogram(name: "abort", scope: !1432, file: !1432, line: 591, type: !1747, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18598 = !DISubprogram(name: "zmalloc_enable_thread_safeness", scope: !1470, file: !1470, line: 39, type: !1747, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18599 = !DISubprogram(name: "fcntl", linkageName: "fcntl64", scope: !1078, file: !1078, line: 151, type: !18600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18600 = !DISubroutineType(types: !18601)
!18601 = !{!45, !45, !45, null}
!18602 = !DISubprogram(name: "ftruncate", linkageName: "ftruncate64", scope: !1086, file: !1086, line: 1017, type: !18603, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18603 = !DISubroutineType(types: !18604)
!18604 = !{!45, !45, !162}
!18605 = !DISubprogram(name: "pthread_mutex_init", scope: !4085, file: !4085, line: 725, type: !18606, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18606 = !DISubroutineType(types: !18607)
!18607 = !{!45, !4088, !18608}
!18608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18609, size: 64)
!18609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18610)
!18610 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutexattr_t", file: !57, line: 36, baseType: !18611)
!18611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !57, line: 32, size: 32, elements: !18612)
!18612 = !{!18613, !18615}
!18613 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !18611, file: !57, line: 34, baseType: !18614, size: 32)
!18614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !252)
!18615 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !18611, file: !57, line: 35, baseType: !45, size: 32)
!18616 = !DISubprogram(name: "pipe", scope: !1086, file: !1086, line: 417, type: !18617, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18617 = !DISubroutineType(types: !18618)
!18618 = !{!45, !3301}
!18619 = !DISubprogram(name: "pthread_attr_init", scope: !4085, file: !4085, line: 263, type: !18620, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18620 = !DISubroutineType(types: !18621)
!18621 = !{!45, !18622}
!18622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!18623 = !DISubprogram(name: "pthread_attr_getstacksize", scope: !4085, file: !4085, line: 344, type: !18624, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18624 = !DISubroutineType(types: !18625)
!18625 = !{!45, !5843, !18626}
!18626 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !18627)
!18627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!18628 = !DISubprogram(name: "pthread_attr_setstacksize", scope: !4085, file: !4085, line: 351, type: !18629, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !812)
!18629 = !DISubroutineType(types: !18630)
!18630 = !{!45, !18622, !196}
