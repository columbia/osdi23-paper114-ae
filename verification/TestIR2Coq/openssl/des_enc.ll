; ModuleID = 'crypto/des/des_enc.c'
source_filename = "crypto/des/des_enc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DES_ks = type { [16 x %union.anon] }
%union.anon = type { [2 x i32] }

@DES_SPtrans = local_unnamed_addr constant [8 x [64 x i32]] [[64 x i32] [i32 34080768, i32 524288, i32 33554434, i32 34080770, i32 33554432, i32 526338, i32 524290, i32 33554434, i32 526338, i32 34080768, i32 34078720, i32 2050, i32 33556482, i32 33554432, i32 0, i32 524290, i32 524288, i32 2, i32 33556480, i32 526336, i32 34080770, i32 34078720, i32 2050, i32 33556480, i32 2, i32 2048, i32 526336, i32 34078722, i32 2048, i32 33556482, i32 34078722, i32 0, i32 0, i32 34080770, i32 33556480, i32 524290, i32 34080768, i32 524288, i32 2050, i32 33556480, i32 34078722, i32 2048, i32 526336, i32 33554434, i32 526338, i32 2, i32 33554434, i32 34078720, i32 34080770, i32 526336, i32 34078720, i32 33556482, i32 33554432, i32 2050, i32 524290, i32 0, i32 524288, i32 33554432, i32 33556482, i32 34080768, i32 2, i32 34078722, i32 2048, i32 526338], [64 x i32] [i32 1074823184, i32 0, i32 1081344, i32 1074790400, i32 1073741840, i32 32784, i32 1073774592, i32 1081344, i32 32768, i32 1074790416, i32 16, i32 1073774592, i32 1048592, i32 1074823168, i32 1074790400, i32 16, i32 1048576, i32 1073774608, i32 1074790416, i32 32768, i32 1081360, i32 1073741824, i32 0, i32 1048592, i32 1073774608, i32 1081360, i32 1074823168, i32 1073741840, i32 1073741824, i32 1048576, i32 32784, i32 1074823184, i32 1048592, i32 1074823168, i32 1073774592, i32 1081360, i32 1074823184, i32 1048592, i32 1073741840, i32 0, i32 1073741824, i32 32784, i32 1048576, i32 1074790416, i32 32768, i32 1073741824, i32 1081360, i32 1073774608, i32 1074823168, i32 32768, i32 0, i32 1073741840, i32 16, i32 1074823184, i32 1081344, i32 1074790400, i32 1074790416, i32 1048576, i32 32784, i32 1073774592, i32 1073774608, i32 16, i32 1074790400, i32 1081344], [64 x i32] [i32 67108865, i32 67371264, i32 256, i32 67109121, i32 262145, i32 67108864, i32 67109121, i32 262400, i32 67109120, i32 262144, i32 67371008, i32 1, i32 67371265, i32 257, i32 1, i32 67371009, i32 0, i32 262145, i32 67371264, i32 256, i32 257, i32 67371265, i32 262144, i32 67108865, i32 67371009, i32 67109120, i32 262401, i32 67371008, i32 262400, i32 0, i32 67108864, i32 262401, i32 67371264, i32 256, i32 1, i32 262144, i32 257, i32 262145, i32 67371008, i32 67109121, i32 0, i32 67371264, i32 262400, i32 67371009, i32 262145, i32 67108864, i32 67371265, i32 1, i32 262401, i32 67108865, i32 67108864, i32 67371265, i32 262144, i32 67109120, i32 67109121, i32 262400, i32 67109120, i32 0, i32 67371009, i32 257, i32 67108865, i32 262401, i32 256, i32 67371008], [64 x i32] [i32 4198408, i32 268439552, i32 8, i32 272633864, i32 0, i32 272629760, i32 268439560, i32 4194312, i32 272633856, i32 268435464, i32 268435456, i32 4104, i32 268435464, i32 4198408, i32 4194304, i32 268435456, i32 272629768, i32 4198400, i32 4096, i32 8, i32 4198400, i32 268439560, i32 272629760, i32 4096, i32 4104, i32 0, i32 4194312, i32 272633856, i32 268439552, i32 272629768, i32 272633864, i32 4194304, i32 272629768, i32 4104, i32 4194304, i32 268435464, i32 4198400, i32 268439552, i32 8, i32 272629760, i32 268439560, i32 0, i32 4096, i32 4194312, i32 0, i32 272629768, i32 272633856, i32 4096, i32 268435456, i32 272633864, i32 4198408, i32 4194304, i32 272633864, i32 8, i32 268439552, i32 4198408, i32 4194312, i32 4198400, i32 272629760, i32 268439560, i32 4104, i32 268435456, i32 268435464, i32 272633856], [64 x i32] [i32 134217728, i32 65536, i32 1024, i32 134284320, i32 134283296, i32 134218752, i32 66592, i32 134283264, i32 65536, i32 32, i32 134217760, i32 66560, i32 134218784, i32 134283296, i32 134284288, i32 0, i32 66560, i32 134217728, i32 65568, i32 1056, i32 134218752, i32 66592, i32 0, i32 134217760, i32 32, i32 134218784, i32 134284320, i32 65568, i32 134283264, i32 1024, i32 1056, i32 134284288, i32 134284288, i32 134218784, i32 65568, i32 134283264, i32 65536, i32 32, i32 134217760, i32 134218752, i32 134217728, i32 66560, i32 134284320, i32 0, i32 66592, i32 134217728, i32 1024, i32 65568, i32 134218784, i32 1024, i32 0, i32 134284320, i32 134283296, i32 134284288, i32 1056, i32 65536, i32 66560, i32 134283296, i32 134218752, i32 1056, i32 32, i32 66592, i32 134283264, i32 134217760], [64 x i32] [i32 -2147483584, i32 2097216, i32 0, i32 -2145378304, i32 2097216, i32 8192, i32 -2147475392, i32 2097152, i32 8256, i32 -2145378240, i32 2105344, i32 -2147483648, i32 -2147475456, i32 -2147483584, i32 -2145386496, i32 2105408, i32 2097152, i32 -2147475392, i32 -2145386432, i32 0, i32 8192, i32 64, i32 -2145378304, i32 -2145386432, i32 -2145378240, i32 -2145386496, i32 -2147483648, i32 8256, i32 64, i32 2105344, i32 2105408, i32 -2147475456, i32 8256, i32 -2147483648, i32 -2147475456, i32 2105408, i32 -2145378304, i32 2097216, i32 0, i32 -2147475456, i32 -2147483648, i32 8192, i32 -2145386432, i32 2097152, i32 2097216, i32 -2145378240, i32 2105344, i32 64, i32 -2145378240, i32 2105344, i32 2097152, i32 -2147475392, i32 -2147483584, i32 -2145386496, i32 2105408, i32 0, i32 8192, i32 -2147483584, i32 -2147475392, i32 -2145378304, i32 -2145386496, i32 8256, i32 64, i32 -2145386432], [64 x i32] [i32 16384, i32 512, i32 16777728, i32 16777220, i32 16794116, i32 16388, i32 16896, i32 0, i32 16777216, i32 16777732, i32 516, i32 16793600, i32 4, i32 16794112, i32 16793600, i32 516, i32 16777732, i32 16384, i32 16388, i32 16794116, i32 0, i32 16777728, i32 16777220, i32 16896, i32 16793604, i32 16900, i32 16794112, i32 4, i32 16900, i32 16793604, i32 512, i32 16777216, i32 16900, i32 16793600, i32 16793604, i32 516, i32 16384, i32 512, i32 16777216, i32 16793604, i32 16777732, i32 16900, i32 16896, i32 0, i32 512, i32 16777220, i32 4, i32 16777728, i32 0, i32 16777732, i32 16777728, i32 16896, i32 516, i32 16384, i32 16794116, i32 16777216, i32 16794112, i32 4, i32 16388, i32 16794116, i32 16777220, i32 16794112, i32 16793600, i32 16388], [64 x i32] [i32 545259648, i32 545390592, i32 131200, i32 0, i32 537001984, i32 8388736, i32 545259520, i32 545390720, i32 128, i32 536870912, i32 8519680, i32 131200, i32 8519808, i32 537002112, i32 536871040, i32 545259520, i32 131072, i32 8519808, i32 8388736, i32 537001984, i32 545390720, i32 536871040, i32 0, i32 8519680, i32 536870912, i32 8388608, i32 537002112, i32 545259648, i32 8388608, i32 131072, i32 545390592, i32 128, i32 8388608, i32 131072, i32 536871040, i32 545390720, i32 131200, i32 536870912, i32 0, i32 8519680, i32 545259648, i32 537002112, i32 537001984, i32 8388736, i32 545390592, i32 128, i32 8388736, i32 537001984, i32 545390720, i32 8388608, i32 545259520, i32 536871040, i32 8519680, i32 131200, i32 537002112, i32 545259520, i32 128, i32 545390592, i32 8519808, i32 0, i32 536870912, i32 545259648, i32 131072, i32 8519808]], align 16

; Function Attrs: noinline nounwind uwtable
define void @DES_encrypt1(i32* nocapture noundef %data, %struct.DES_ks* noundef readonly %ks, i32 noundef %enc) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* %data, align 4, !tbaa !4
  %arrayidx1 = getelementptr inbounds i32, i32* %data, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %shr = lshr i32 %1, 4
  %xor = xor i32 %shr, %0
  %2 = and i32 %xor, 252645135
  %xor3 = xor i32 %2, %0
  %shl = shl nuw i32 %2, 4
  %xor4 = xor i32 %shl, %1
  %shr5 = lshr i32 %xor3, 16
  %xor4.masked = and i32 %xor4, 65535
  %3 = xor i32 %xor4.masked, %shr5
  %xor10 = xor i32 %3, %xor4
  %shl11 = shl nuw i32 %3, 16
  %xor12 = xor i32 %shl11, %xor3
  %shr13 = lshr i32 %xor10, 2
  %xor14 = xor i32 %shr13, %xor12
  %4 = and i32 %xor14, 858993459
  %xor18 = xor i32 %4, %xor12
  %shl19 = shl nuw i32 %4, 2
  %xor20 = xor i32 %shl19, %xor10
  %shr21 = lshr i32 %xor18, 8
  %xor22 = xor i32 %shr21, %xor20
  %5 = and i32 %xor22, 16711935
  %xor26 = xor i32 %5, %xor20
  %shl27 = shl nuw i32 %5, 8
  %xor28 = xor i32 %shl27, %xor18
  %shr29 = lshr i32 %xor26, 1
  %xor30 = xor i32 %shr29, %xor28
  %6 = and i32 %xor30, 1431655765
  %xor34 = xor i32 %6, %xor28
  %shl35 = shl nuw i32 %6, 1
  %xor36 = xor i32 %shl35, %xor26
  %7 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %xor34) #2, !srcloc !8
  %8 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %xor36) #2, !srcloc !9
  %arraydecay46 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 0
  %tobool.not = icmp eq i32 %enc, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %arraydecay46, align 4, !tbaa !4
  %xor48 = xor i32 %9, %7
  %arrayidx49 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 1
  %10 = load i32, i32* %arrayidx49, align 4, !tbaa !4
  %xor50 = xor i32 %10, %7
  %11 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor50) #2, !srcloc !10
  %shr53 = lshr i32 %xor48, 2
  %and54 = and i32 %shr53, 63
  %idxprom = zext i32 %and54 to i64
  %arrayidx55 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom
  %12 = load i32, i32* %arrayidx55, align 4, !tbaa !4
  %shr56 = lshr i32 %xor48, 10
  %and57 = and i32 %shr56, 63
  %idxprom58 = zext i32 %and57 to i64
  %arrayidx59 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom58
  %13 = load i32, i32* %arrayidx59, align 4, !tbaa !4
  %shr61 = lshr i32 %xor48, 18
  %and62 = and i32 %shr61, 63
  %idxprom63 = zext i32 %and62 to i64
  %arrayidx64 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom63
  %14 = load i32, i32* %arrayidx64, align 4, !tbaa !4
  %shr66 = lshr i32 %xor48, 26
  %idxprom68 = zext i32 %shr66 to i64
  %arrayidx69 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom68
  %15 = load i32, i32* %arrayidx69, align 4, !tbaa !4
  %shr71 = lshr i32 %11, 2
  %and72 = and i32 %shr71, 63
  %idxprom73 = zext i32 %and72 to i64
  %arrayidx74 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom73
  %16 = load i32, i32* %arrayidx74, align 4, !tbaa !4
  %shr76 = lshr i32 %11, 10
  %and77 = and i32 %shr76, 63
  %idxprom78 = zext i32 %and77 to i64
  %arrayidx79 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom78
  %17 = load i32, i32* %arrayidx79, align 4, !tbaa !4
  %shr81 = lshr i32 %11, 18
  %and82 = and i32 %shr81, 63
  %idxprom83 = zext i32 %and82 to i64
  %arrayidx84 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom83
  %18 = load i32, i32* %arrayidx84, align 4, !tbaa !4
  %shr86 = lshr i32 %11, 26
  %idxprom88 = zext i32 %shr86 to i64
  %arrayidx89 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom88
  %19 = load i32, i32* %arrayidx89, align 4, !tbaa !4
  %xor60 = xor i32 %12, %8
  %xor65 = xor i32 %xor60, %13
  %xor70 = xor i32 %xor65, %14
  %xor75 = xor i32 %xor70, %15
  %xor80 = xor i32 %xor75, %16
  %xor85 = xor i32 %xor80, %17
  %xor90 = xor i32 %xor85, %18
  %xor91 = xor i32 %xor90, %19
  %arrayidx92 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 2
  %20 = load i32, i32* %arrayidx92, align 4, !tbaa !4
  %xor93 = xor i32 %xor91, %20
  %arrayidx94 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 3
  %21 = load i32, i32* %arrayidx94, align 4, !tbaa !4
  %xor95 = xor i32 %xor91, %21
  %22 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor95) #2, !srcloc !11
  %shr98 = lshr i32 %xor93, 2
  %and99 = and i32 %shr98, 63
  %idxprom100 = zext i32 %and99 to i64
  %arrayidx101 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom100
  %23 = load i32, i32* %arrayidx101, align 4, !tbaa !4
  %shr102 = lshr i32 %xor93, 10
  %and103 = and i32 %shr102, 63
  %idxprom104 = zext i32 %and103 to i64
  %arrayidx105 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom104
  %24 = load i32, i32* %arrayidx105, align 4, !tbaa !4
  %shr107 = lshr i32 %xor93, 18
  %and108 = and i32 %shr107, 63
  %idxprom109 = zext i32 %and108 to i64
  %arrayidx110 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom109
  %25 = load i32, i32* %arrayidx110, align 4, !tbaa !4
  %shr112 = lshr i32 %xor93, 26
  %idxprom114 = zext i32 %shr112 to i64
  %arrayidx115 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom114
  %26 = load i32, i32* %arrayidx115, align 4, !tbaa !4
  %shr117 = lshr i32 %22, 2
  %and118 = and i32 %shr117, 63
  %idxprom119 = zext i32 %and118 to i64
  %arrayidx120 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom119
  %27 = load i32, i32* %arrayidx120, align 4, !tbaa !4
  %shr122 = lshr i32 %22, 10
  %and123 = and i32 %shr122, 63
  %idxprom124 = zext i32 %and123 to i64
  %arrayidx125 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom124
  %28 = load i32, i32* %arrayidx125, align 4, !tbaa !4
  %shr127 = lshr i32 %22, 18
  %and128 = and i32 %shr127, 63
  %idxprom129 = zext i32 %and128 to i64
  %arrayidx130 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom129
  %29 = load i32, i32* %arrayidx130, align 4, !tbaa !4
  %shr132 = lshr i32 %22, 26
  %idxprom134 = zext i32 %shr132 to i64
  %arrayidx135 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom134
  %30 = load i32, i32* %arrayidx135, align 4, !tbaa !4
  %xor106 = xor i32 %23, %7
  %xor111 = xor i32 %xor106, %24
  %xor116 = xor i32 %xor111, %25
  %xor121 = xor i32 %xor116, %26
  %xor126 = xor i32 %xor121, %27
  %xor131 = xor i32 %xor126, %28
  %xor136 = xor i32 %xor131, %29
  %xor137 = xor i32 %xor136, %30
  %arrayidx138 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 4
  %31 = load i32, i32* %arrayidx138, align 4, !tbaa !4
  %xor139 = xor i32 %xor137, %31
  %arrayidx140 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 5
  %32 = load i32, i32* %arrayidx140, align 4, !tbaa !4
  %xor141 = xor i32 %xor137, %32
  %33 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor141) #2, !srcloc !12
  %shr144 = lshr i32 %xor139, 2
  %and145 = and i32 %shr144, 63
  %idxprom146 = zext i32 %and145 to i64
  %arrayidx147 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom146
  %34 = load i32, i32* %arrayidx147, align 4, !tbaa !4
  %shr148 = lshr i32 %xor139, 10
  %and149 = and i32 %shr148, 63
  %idxprom150 = zext i32 %and149 to i64
  %arrayidx151 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom150
  %35 = load i32, i32* %arrayidx151, align 4, !tbaa !4
  %shr153 = lshr i32 %xor139, 18
  %and154 = and i32 %shr153, 63
  %idxprom155 = zext i32 %and154 to i64
  %arrayidx156 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom155
  %36 = load i32, i32* %arrayidx156, align 4, !tbaa !4
  %shr158 = lshr i32 %xor139, 26
  %idxprom160 = zext i32 %shr158 to i64
  %arrayidx161 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom160
  %37 = load i32, i32* %arrayidx161, align 4, !tbaa !4
  %shr163 = lshr i32 %33, 2
  %and164 = and i32 %shr163, 63
  %idxprom165 = zext i32 %and164 to i64
  %arrayidx166 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom165
  %38 = load i32, i32* %arrayidx166, align 4, !tbaa !4
  %shr168 = lshr i32 %33, 10
  %and169 = and i32 %shr168, 63
  %idxprom170 = zext i32 %and169 to i64
  %arrayidx171 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom170
  %39 = load i32, i32* %arrayidx171, align 4, !tbaa !4
  %shr173 = lshr i32 %33, 18
  %and174 = and i32 %shr173, 63
  %idxprom175 = zext i32 %and174 to i64
  %arrayidx176 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom175
  %40 = load i32, i32* %arrayidx176, align 4, !tbaa !4
  %shr178 = lshr i32 %33, 26
  %idxprom180 = zext i32 %shr178 to i64
  %arrayidx181 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom180
  %41 = load i32, i32* %arrayidx181, align 4, !tbaa !4
  %xor152 = xor i32 %34, %xor91
  %xor157 = xor i32 %xor152, %35
  %xor162 = xor i32 %xor157, %36
  %xor167 = xor i32 %xor162, %37
  %xor172 = xor i32 %xor167, %38
  %xor177 = xor i32 %xor172, %39
  %xor182 = xor i32 %xor177, %40
  %xor183 = xor i32 %xor182, %41
  %arrayidx184 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 6
  %42 = load i32, i32* %arrayidx184, align 4, !tbaa !4
  %xor185 = xor i32 %xor183, %42
  %arrayidx186 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 7
  %43 = load i32, i32* %arrayidx186, align 4, !tbaa !4
  %xor187 = xor i32 %xor183, %43
  %44 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor187) #2, !srcloc !13
  %shr190 = lshr i32 %xor185, 2
  %and191 = and i32 %shr190, 63
  %idxprom192 = zext i32 %and191 to i64
  %arrayidx193 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom192
  %45 = load i32, i32* %arrayidx193, align 4, !tbaa !4
  %shr194 = lshr i32 %xor185, 10
  %and195 = and i32 %shr194, 63
  %idxprom196 = zext i32 %and195 to i64
  %arrayidx197 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom196
  %46 = load i32, i32* %arrayidx197, align 4, !tbaa !4
  %shr199 = lshr i32 %xor185, 18
  %and200 = and i32 %shr199, 63
  %idxprom201 = zext i32 %and200 to i64
  %arrayidx202 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom201
  %47 = load i32, i32* %arrayidx202, align 4, !tbaa !4
  %shr204 = lshr i32 %xor185, 26
  %idxprom206 = zext i32 %shr204 to i64
  %arrayidx207 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom206
  %48 = load i32, i32* %arrayidx207, align 4, !tbaa !4
  %shr209 = lshr i32 %44, 2
  %and210 = and i32 %shr209, 63
  %idxprom211 = zext i32 %and210 to i64
  %arrayidx212 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom211
  %49 = load i32, i32* %arrayidx212, align 4, !tbaa !4
  %shr214 = lshr i32 %44, 10
  %and215 = and i32 %shr214, 63
  %idxprom216 = zext i32 %and215 to i64
  %arrayidx217 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom216
  %50 = load i32, i32* %arrayidx217, align 4, !tbaa !4
  %shr219 = lshr i32 %44, 18
  %and220 = and i32 %shr219, 63
  %idxprom221 = zext i32 %and220 to i64
  %arrayidx222 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom221
  %51 = load i32, i32* %arrayidx222, align 4, !tbaa !4
  %shr224 = lshr i32 %44, 26
  %idxprom226 = zext i32 %shr224 to i64
  %arrayidx227 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom226
  %52 = load i32, i32* %arrayidx227, align 4, !tbaa !4
  %xor198 = xor i32 %45, %xor137
  %xor203 = xor i32 %xor198, %46
  %xor208 = xor i32 %xor203, %47
  %xor213 = xor i32 %xor208, %48
  %xor218 = xor i32 %xor213, %49
  %xor223 = xor i32 %xor218, %50
  %xor228 = xor i32 %xor223, %51
  %xor229 = xor i32 %xor228, %52
  %arrayidx230 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 8
  %53 = load i32, i32* %arrayidx230, align 4, !tbaa !4
  %xor231 = xor i32 %xor229, %53
  %arrayidx232 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 9
  %54 = load i32, i32* %arrayidx232, align 4, !tbaa !4
  %xor233 = xor i32 %xor229, %54
  %55 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor233) #2, !srcloc !14
  %shr236 = lshr i32 %xor231, 2
  %and237 = and i32 %shr236, 63
  %idxprom238 = zext i32 %and237 to i64
  %arrayidx239 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom238
  %56 = load i32, i32* %arrayidx239, align 4, !tbaa !4
  %shr240 = lshr i32 %xor231, 10
  %and241 = and i32 %shr240, 63
  %idxprom242 = zext i32 %and241 to i64
  %arrayidx243 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom242
  %57 = load i32, i32* %arrayidx243, align 4, !tbaa !4
  %shr245 = lshr i32 %xor231, 18
  %and246 = and i32 %shr245, 63
  %idxprom247 = zext i32 %and246 to i64
  %arrayidx248 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom247
  %58 = load i32, i32* %arrayidx248, align 4, !tbaa !4
  %shr250 = lshr i32 %xor231, 26
  %idxprom252 = zext i32 %shr250 to i64
  %arrayidx253 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom252
  %59 = load i32, i32* %arrayidx253, align 4, !tbaa !4
  %shr255 = lshr i32 %55, 2
  %and256 = and i32 %shr255, 63
  %idxprom257 = zext i32 %and256 to i64
  %arrayidx258 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom257
  %60 = load i32, i32* %arrayidx258, align 4, !tbaa !4
  %shr260 = lshr i32 %55, 10
  %and261 = and i32 %shr260, 63
  %idxprom262 = zext i32 %and261 to i64
  %arrayidx263 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom262
  %61 = load i32, i32* %arrayidx263, align 4, !tbaa !4
  %shr265 = lshr i32 %55, 18
  %and266 = and i32 %shr265, 63
  %idxprom267 = zext i32 %and266 to i64
  %arrayidx268 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom267
  %62 = load i32, i32* %arrayidx268, align 4, !tbaa !4
  %shr270 = lshr i32 %55, 26
  %idxprom272 = zext i32 %shr270 to i64
  %arrayidx273 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom272
  %63 = load i32, i32* %arrayidx273, align 4, !tbaa !4
  %xor244 = xor i32 %56, %xor183
  %xor249 = xor i32 %xor244, %57
  %xor254 = xor i32 %xor249, %58
  %xor259 = xor i32 %xor254, %59
  %xor264 = xor i32 %xor259, %60
  %xor269 = xor i32 %xor264, %61
  %xor274 = xor i32 %xor269, %62
  %xor275 = xor i32 %xor274, %63
  %arrayidx276 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 10
  %64 = load i32, i32* %arrayidx276, align 4, !tbaa !4
  %xor277 = xor i32 %xor275, %64
  %arrayidx278 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 11
  %65 = load i32, i32* %arrayidx278, align 4, !tbaa !4
  %xor279 = xor i32 %xor275, %65
  %66 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor279) #2, !srcloc !15
  %shr282 = lshr i32 %xor277, 2
  %and283 = and i32 %shr282, 63
  %idxprom284 = zext i32 %and283 to i64
  %arrayidx285 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom284
  %67 = load i32, i32* %arrayidx285, align 4, !tbaa !4
  %shr286 = lshr i32 %xor277, 10
  %and287 = and i32 %shr286, 63
  %idxprom288 = zext i32 %and287 to i64
  %arrayidx289 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom288
  %68 = load i32, i32* %arrayidx289, align 4, !tbaa !4
  %shr291 = lshr i32 %xor277, 18
  %and292 = and i32 %shr291, 63
  %idxprom293 = zext i32 %and292 to i64
  %arrayidx294 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom293
  %69 = load i32, i32* %arrayidx294, align 4, !tbaa !4
  %shr296 = lshr i32 %xor277, 26
  %idxprom298 = zext i32 %shr296 to i64
  %arrayidx299 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom298
  %70 = load i32, i32* %arrayidx299, align 4, !tbaa !4
  %shr301 = lshr i32 %66, 2
  %and302 = and i32 %shr301, 63
  %idxprom303 = zext i32 %and302 to i64
  %arrayidx304 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom303
  %71 = load i32, i32* %arrayidx304, align 4, !tbaa !4
  %shr306 = lshr i32 %66, 10
  %and307 = and i32 %shr306, 63
  %idxprom308 = zext i32 %and307 to i64
  %arrayidx309 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom308
  %72 = load i32, i32* %arrayidx309, align 4, !tbaa !4
  %shr311 = lshr i32 %66, 18
  %and312 = and i32 %shr311, 63
  %idxprom313 = zext i32 %and312 to i64
  %arrayidx314 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom313
  %73 = load i32, i32* %arrayidx314, align 4, !tbaa !4
  %shr316 = lshr i32 %66, 26
  %idxprom318 = zext i32 %shr316 to i64
  %arrayidx319 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom318
  %74 = load i32, i32* %arrayidx319, align 4, !tbaa !4
  %xor290 = xor i32 %67, %xor229
  %xor295 = xor i32 %xor290, %68
  %xor300 = xor i32 %xor295, %69
  %xor305 = xor i32 %xor300, %70
  %xor310 = xor i32 %xor305, %71
  %xor315 = xor i32 %xor310, %72
  %xor320 = xor i32 %xor315, %73
  %xor321 = xor i32 %xor320, %74
  %arrayidx322 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 12
  %75 = load i32, i32* %arrayidx322, align 4, !tbaa !4
  %xor323 = xor i32 %xor321, %75
  %arrayidx324 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 13
  %76 = load i32, i32* %arrayidx324, align 4, !tbaa !4
  %xor325 = xor i32 %xor321, %76
  %77 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor325) #2, !srcloc !16
  %shr328 = lshr i32 %xor323, 2
  %and329 = and i32 %shr328, 63
  %idxprom330 = zext i32 %and329 to i64
  %arrayidx331 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom330
  %78 = load i32, i32* %arrayidx331, align 4, !tbaa !4
  %shr332 = lshr i32 %xor323, 10
  %and333 = and i32 %shr332, 63
  %idxprom334 = zext i32 %and333 to i64
  %arrayidx335 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom334
  %79 = load i32, i32* %arrayidx335, align 4, !tbaa !4
  %shr337 = lshr i32 %xor323, 18
  %and338 = and i32 %shr337, 63
  %idxprom339 = zext i32 %and338 to i64
  %arrayidx340 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom339
  %80 = load i32, i32* %arrayidx340, align 4, !tbaa !4
  %shr342 = lshr i32 %xor323, 26
  %idxprom344 = zext i32 %shr342 to i64
  %arrayidx345 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom344
  %81 = load i32, i32* %arrayidx345, align 4, !tbaa !4
  %shr347 = lshr i32 %77, 2
  %and348 = and i32 %shr347, 63
  %idxprom349 = zext i32 %and348 to i64
  %arrayidx350 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom349
  %82 = load i32, i32* %arrayidx350, align 4, !tbaa !4
  %shr352 = lshr i32 %77, 10
  %and353 = and i32 %shr352, 63
  %idxprom354 = zext i32 %and353 to i64
  %arrayidx355 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom354
  %83 = load i32, i32* %arrayidx355, align 4, !tbaa !4
  %shr357 = lshr i32 %77, 18
  %and358 = and i32 %shr357, 63
  %idxprom359 = zext i32 %and358 to i64
  %arrayidx360 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom359
  %84 = load i32, i32* %arrayidx360, align 4, !tbaa !4
  %shr362 = lshr i32 %77, 26
  %idxprom364 = zext i32 %shr362 to i64
  %arrayidx365 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom364
  %85 = load i32, i32* %arrayidx365, align 4, !tbaa !4
  %xor336 = xor i32 %78, %xor275
  %xor341 = xor i32 %xor336, %79
  %xor346 = xor i32 %xor341, %80
  %xor351 = xor i32 %xor346, %81
  %xor356 = xor i32 %xor351, %82
  %xor361 = xor i32 %xor356, %83
  %xor366 = xor i32 %xor361, %84
  %xor367 = xor i32 %xor366, %85
  %arrayidx368 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 14
  %86 = load i32, i32* %arrayidx368, align 4, !tbaa !4
  %xor369 = xor i32 %xor367, %86
  %arrayidx370 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 15
  %87 = load i32, i32* %arrayidx370, align 4, !tbaa !4
  %xor371 = xor i32 %xor367, %87
  %88 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor371) #2, !srcloc !17
  %shr374 = lshr i32 %xor369, 2
  %and375 = and i32 %shr374, 63
  %idxprom376 = zext i32 %and375 to i64
  %arrayidx377 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom376
  %89 = load i32, i32* %arrayidx377, align 4, !tbaa !4
  %shr378 = lshr i32 %xor369, 10
  %and379 = and i32 %shr378, 63
  %idxprom380 = zext i32 %and379 to i64
  %arrayidx381 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom380
  %90 = load i32, i32* %arrayidx381, align 4, !tbaa !4
  %shr383 = lshr i32 %xor369, 18
  %and384 = and i32 %shr383, 63
  %idxprom385 = zext i32 %and384 to i64
  %arrayidx386 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom385
  %91 = load i32, i32* %arrayidx386, align 4, !tbaa !4
  %shr388 = lshr i32 %xor369, 26
  %idxprom390 = zext i32 %shr388 to i64
  %arrayidx391 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom390
  %92 = load i32, i32* %arrayidx391, align 4, !tbaa !4
  %shr393 = lshr i32 %88, 2
  %and394 = and i32 %shr393, 63
  %idxprom395 = zext i32 %and394 to i64
  %arrayidx396 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom395
  %93 = load i32, i32* %arrayidx396, align 4, !tbaa !4
  %shr398 = lshr i32 %88, 10
  %and399 = and i32 %shr398, 63
  %idxprom400 = zext i32 %and399 to i64
  %arrayidx401 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom400
  %94 = load i32, i32* %arrayidx401, align 4, !tbaa !4
  %shr403 = lshr i32 %88, 18
  %and404 = and i32 %shr403, 63
  %idxprom405 = zext i32 %and404 to i64
  %arrayidx406 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom405
  %95 = load i32, i32* %arrayidx406, align 4, !tbaa !4
  %shr408 = lshr i32 %88, 26
  %idxprom410 = zext i32 %shr408 to i64
  %arrayidx411 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom410
  %96 = load i32, i32* %arrayidx411, align 4, !tbaa !4
  %xor382 = xor i32 %89, %xor321
  %xor387 = xor i32 %xor382, %90
  %xor392 = xor i32 %xor387, %91
  %xor397 = xor i32 %xor392, %92
  %xor402 = xor i32 %xor397, %93
  %xor407 = xor i32 %xor402, %94
  %xor412 = xor i32 %xor407, %95
  %xor413 = xor i32 %xor412, %96
  %arrayidx414 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 16
  %97 = load i32, i32* %arrayidx414, align 4, !tbaa !4
  %xor415 = xor i32 %xor413, %97
  %arrayidx416 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 17
  %98 = load i32, i32* %arrayidx416, align 4, !tbaa !4
  %xor417 = xor i32 %xor413, %98
  %99 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor417) #2, !srcloc !18
  %shr420 = lshr i32 %xor415, 2
  %and421 = and i32 %shr420, 63
  %idxprom422 = zext i32 %and421 to i64
  %arrayidx423 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom422
  %100 = load i32, i32* %arrayidx423, align 4, !tbaa !4
  %shr424 = lshr i32 %xor415, 10
  %and425 = and i32 %shr424, 63
  %idxprom426 = zext i32 %and425 to i64
  %arrayidx427 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom426
  %101 = load i32, i32* %arrayidx427, align 4, !tbaa !4
  %shr429 = lshr i32 %xor415, 18
  %and430 = and i32 %shr429, 63
  %idxprom431 = zext i32 %and430 to i64
  %arrayidx432 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom431
  %102 = load i32, i32* %arrayidx432, align 4, !tbaa !4
  %shr434 = lshr i32 %xor415, 26
  %idxprom436 = zext i32 %shr434 to i64
  %arrayidx437 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom436
  %103 = load i32, i32* %arrayidx437, align 4, !tbaa !4
  %shr439 = lshr i32 %99, 2
  %and440 = and i32 %shr439, 63
  %idxprom441 = zext i32 %and440 to i64
  %arrayidx442 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom441
  %104 = load i32, i32* %arrayidx442, align 4, !tbaa !4
  %shr444 = lshr i32 %99, 10
  %and445 = and i32 %shr444, 63
  %idxprom446 = zext i32 %and445 to i64
  %arrayidx447 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom446
  %105 = load i32, i32* %arrayidx447, align 4, !tbaa !4
  %shr449 = lshr i32 %99, 18
  %and450 = and i32 %shr449, 63
  %idxprom451 = zext i32 %and450 to i64
  %arrayidx452 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom451
  %106 = load i32, i32* %arrayidx452, align 4, !tbaa !4
  %shr454 = lshr i32 %99, 26
  %idxprom456 = zext i32 %shr454 to i64
  %arrayidx457 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom456
  %107 = load i32, i32* %arrayidx457, align 4, !tbaa !4
  %xor428 = xor i32 %100, %xor367
  %xor433 = xor i32 %xor428, %101
  %xor438 = xor i32 %xor433, %102
  %xor443 = xor i32 %xor438, %103
  %xor448 = xor i32 %xor443, %104
  %xor453 = xor i32 %xor448, %105
  %xor458 = xor i32 %xor453, %106
  %xor459 = xor i32 %xor458, %107
  %arrayidx460 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 18
  %108 = load i32, i32* %arrayidx460, align 4, !tbaa !4
  %xor461 = xor i32 %xor459, %108
  %arrayidx462 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 19
  %109 = load i32, i32* %arrayidx462, align 4, !tbaa !4
  %xor463 = xor i32 %xor459, %109
  %110 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor463) #2, !srcloc !19
  %shr466 = lshr i32 %xor461, 2
  %and467 = and i32 %shr466, 63
  %idxprom468 = zext i32 %and467 to i64
  %arrayidx469 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom468
  %111 = load i32, i32* %arrayidx469, align 4, !tbaa !4
  %shr470 = lshr i32 %xor461, 10
  %and471 = and i32 %shr470, 63
  %idxprom472 = zext i32 %and471 to i64
  %arrayidx473 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom472
  %112 = load i32, i32* %arrayidx473, align 4, !tbaa !4
  %shr475 = lshr i32 %xor461, 18
  %and476 = and i32 %shr475, 63
  %idxprom477 = zext i32 %and476 to i64
  %arrayidx478 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom477
  %113 = load i32, i32* %arrayidx478, align 4, !tbaa !4
  %shr480 = lshr i32 %xor461, 26
  %idxprom482 = zext i32 %shr480 to i64
  %arrayidx483 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom482
  %114 = load i32, i32* %arrayidx483, align 4, !tbaa !4
  %shr485 = lshr i32 %110, 2
  %and486 = and i32 %shr485, 63
  %idxprom487 = zext i32 %and486 to i64
  %arrayidx488 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom487
  %115 = load i32, i32* %arrayidx488, align 4, !tbaa !4
  %shr490 = lshr i32 %110, 10
  %and491 = and i32 %shr490, 63
  %idxprom492 = zext i32 %and491 to i64
  %arrayidx493 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom492
  %116 = load i32, i32* %arrayidx493, align 4, !tbaa !4
  %shr495 = lshr i32 %110, 18
  %and496 = and i32 %shr495, 63
  %idxprom497 = zext i32 %and496 to i64
  %arrayidx498 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom497
  %117 = load i32, i32* %arrayidx498, align 4, !tbaa !4
  %shr500 = lshr i32 %110, 26
  %idxprom502 = zext i32 %shr500 to i64
  %arrayidx503 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom502
  %118 = load i32, i32* %arrayidx503, align 4, !tbaa !4
  %xor474 = xor i32 %111, %xor413
  %xor479 = xor i32 %xor474, %112
  %xor484 = xor i32 %xor479, %113
  %xor489 = xor i32 %xor484, %114
  %xor494 = xor i32 %xor489, %115
  %xor499 = xor i32 %xor494, %116
  %xor504 = xor i32 %xor499, %117
  %xor505 = xor i32 %xor504, %118
  %arrayidx506 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 20
  %119 = load i32, i32* %arrayidx506, align 4, !tbaa !4
  %xor507 = xor i32 %xor505, %119
  %arrayidx508 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 21
  %120 = load i32, i32* %arrayidx508, align 4, !tbaa !4
  %xor509 = xor i32 %xor505, %120
  %121 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor509) #2, !srcloc !20
  %shr512 = lshr i32 %xor507, 2
  %and513 = and i32 %shr512, 63
  %idxprom514 = zext i32 %and513 to i64
  %arrayidx515 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom514
  %122 = load i32, i32* %arrayidx515, align 4, !tbaa !4
  %shr516 = lshr i32 %xor507, 10
  %and517 = and i32 %shr516, 63
  %idxprom518 = zext i32 %and517 to i64
  %arrayidx519 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom518
  %123 = load i32, i32* %arrayidx519, align 4, !tbaa !4
  %shr521 = lshr i32 %xor507, 18
  %and522 = and i32 %shr521, 63
  %idxprom523 = zext i32 %and522 to i64
  %arrayidx524 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom523
  %124 = load i32, i32* %arrayidx524, align 4, !tbaa !4
  %shr526 = lshr i32 %xor507, 26
  %idxprom528 = zext i32 %shr526 to i64
  %arrayidx529 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom528
  %125 = load i32, i32* %arrayidx529, align 4, !tbaa !4
  %shr531 = lshr i32 %121, 2
  %and532 = and i32 %shr531, 63
  %idxprom533 = zext i32 %and532 to i64
  %arrayidx534 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom533
  %126 = load i32, i32* %arrayidx534, align 4, !tbaa !4
  %shr536 = lshr i32 %121, 10
  %and537 = and i32 %shr536, 63
  %idxprom538 = zext i32 %and537 to i64
  %arrayidx539 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom538
  %127 = load i32, i32* %arrayidx539, align 4, !tbaa !4
  %shr541 = lshr i32 %121, 18
  %and542 = and i32 %shr541, 63
  %idxprom543 = zext i32 %and542 to i64
  %arrayidx544 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom543
  %128 = load i32, i32* %arrayidx544, align 4, !tbaa !4
  %shr546 = lshr i32 %121, 26
  %idxprom548 = zext i32 %shr546 to i64
  %arrayidx549 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom548
  %129 = load i32, i32* %arrayidx549, align 4, !tbaa !4
  %xor520 = xor i32 %122, %xor459
  %xor525 = xor i32 %xor520, %123
  %xor530 = xor i32 %xor525, %124
  %xor535 = xor i32 %xor530, %125
  %xor540 = xor i32 %xor535, %126
  %xor545 = xor i32 %xor540, %127
  %xor550 = xor i32 %xor545, %128
  %xor551 = xor i32 %xor550, %129
  %arrayidx552 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 22
  %130 = load i32, i32* %arrayidx552, align 4, !tbaa !4
  %xor553 = xor i32 %xor551, %130
  %arrayidx554 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 23
  %131 = load i32, i32* %arrayidx554, align 4, !tbaa !4
  %xor555 = xor i32 %xor551, %131
  %132 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor555) #2, !srcloc !21
  %shr558 = lshr i32 %xor553, 2
  %and559 = and i32 %shr558, 63
  %idxprom560 = zext i32 %and559 to i64
  %arrayidx561 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom560
  %133 = load i32, i32* %arrayidx561, align 4, !tbaa !4
  %shr562 = lshr i32 %xor553, 10
  %and563 = and i32 %shr562, 63
  %idxprom564 = zext i32 %and563 to i64
  %arrayidx565 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom564
  %134 = load i32, i32* %arrayidx565, align 4, !tbaa !4
  %shr567 = lshr i32 %xor553, 18
  %and568 = and i32 %shr567, 63
  %idxprom569 = zext i32 %and568 to i64
  %arrayidx570 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom569
  %135 = load i32, i32* %arrayidx570, align 4, !tbaa !4
  %shr572 = lshr i32 %xor553, 26
  %idxprom574 = zext i32 %shr572 to i64
  %arrayidx575 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom574
  %136 = load i32, i32* %arrayidx575, align 4, !tbaa !4
  %shr577 = lshr i32 %132, 2
  %and578 = and i32 %shr577, 63
  %idxprom579 = zext i32 %and578 to i64
  %arrayidx580 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom579
  %137 = load i32, i32* %arrayidx580, align 4, !tbaa !4
  %shr582 = lshr i32 %132, 10
  %and583 = and i32 %shr582, 63
  %idxprom584 = zext i32 %and583 to i64
  %arrayidx585 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom584
  %138 = load i32, i32* %arrayidx585, align 4, !tbaa !4
  %shr587 = lshr i32 %132, 18
  %and588 = and i32 %shr587, 63
  %idxprom589 = zext i32 %and588 to i64
  %arrayidx590 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom589
  %139 = load i32, i32* %arrayidx590, align 4, !tbaa !4
  %shr592 = lshr i32 %132, 26
  %idxprom594 = zext i32 %shr592 to i64
  %arrayidx595 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom594
  %140 = load i32, i32* %arrayidx595, align 4, !tbaa !4
  %xor566 = xor i32 %133, %xor505
  %xor571 = xor i32 %xor566, %134
  %xor576 = xor i32 %xor571, %135
  %xor581 = xor i32 %xor576, %136
  %xor586 = xor i32 %xor581, %137
  %xor591 = xor i32 %xor586, %138
  %xor596 = xor i32 %xor591, %139
  %xor597 = xor i32 %xor596, %140
  %arrayidx598 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 24
  %141 = load i32, i32* %arrayidx598, align 4, !tbaa !4
  %xor599 = xor i32 %xor597, %141
  %arrayidx600 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 25
  %142 = load i32, i32* %arrayidx600, align 4, !tbaa !4
  %xor601 = xor i32 %xor597, %142
  %143 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor601) #2, !srcloc !22
  %shr604 = lshr i32 %xor599, 2
  %and605 = and i32 %shr604, 63
  %idxprom606 = zext i32 %and605 to i64
  %arrayidx607 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom606
  %144 = load i32, i32* %arrayidx607, align 4, !tbaa !4
  %shr608 = lshr i32 %xor599, 10
  %and609 = and i32 %shr608, 63
  %idxprom610 = zext i32 %and609 to i64
  %arrayidx611 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom610
  %145 = load i32, i32* %arrayidx611, align 4, !tbaa !4
  %shr613 = lshr i32 %xor599, 18
  %and614 = and i32 %shr613, 63
  %idxprom615 = zext i32 %and614 to i64
  %arrayidx616 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom615
  %146 = load i32, i32* %arrayidx616, align 4, !tbaa !4
  %shr618 = lshr i32 %xor599, 26
  %idxprom620 = zext i32 %shr618 to i64
  %arrayidx621 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom620
  %147 = load i32, i32* %arrayidx621, align 4, !tbaa !4
  %shr623 = lshr i32 %143, 2
  %and624 = and i32 %shr623, 63
  %idxprom625 = zext i32 %and624 to i64
  %arrayidx626 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom625
  %148 = load i32, i32* %arrayidx626, align 4, !tbaa !4
  %shr628 = lshr i32 %143, 10
  %and629 = and i32 %shr628, 63
  %idxprom630 = zext i32 %and629 to i64
  %arrayidx631 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom630
  %149 = load i32, i32* %arrayidx631, align 4, !tbaa !4
  %shr633 = lshr i32 %143, 18
  %and634 = and i32 %shr633, 63
  %idxprom635 = zext i32 %and634 to i64
  %arrayidx636 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom635
  %150 = load i32, i32* %arrayidx636, align 4, !tbaa !4
  %shr638 = lshr i32 %143, 26
  %idxprom640 = zext i32 %shr638 to i64
  %arrayidx641 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom640
  %151 = load i32, i32* %arrayidx641, align 4, !tbaa !4
  %xor612 = xor i32 %144, %xor551
  %xor617 = xor i32 %xor612, %145
  %xor622 = xor i32 %xor617, %146
  %xor627 = xor i32 %xor622, %147
  %xor632 = xor i32 %xor627, %148
  %xor637 = xor i32 %xor632, %149
  %xor642 = xor i32 %xor637, %150
  %xor643 = xor i32 %xor642, %151
  %arrayidx644 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 26
  %152 = load i32, i32* %arrayidx644, align 4, !tbaa !4
  %xor645 = xor i32 %xor643, %152
  %arrayidx646 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 27
  %153 = load i32, i32* %arrayidx646, align 4, !tbaa !4
  %xor647 = xor i32 %xor643, %153
  %154 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor647) #2, !srcloc !23
  %shr650 = lshr i32 %xor645, 2
  %and651 = and i32 %shr650, 63
  %idxprom652 = zext i32 %and651 to i64
  %arrayidx653 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom652
  %155 = load i32, i32* %arrayidx653, align 4, !tbaa !4
  %shr654 = lshr i32 %xor645, 10
  %and655 = and i32 %shr654, 63
  %idxprom656 = zext i32 %and655 to i64
  %arrayidx657 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom656
  %156 = load i32, i32* %arrayidx657, align 4, !tbaa !4
  %shr659 = lshr i32 %xor645, 18
  %and660 = and i32 %shr659, 63
  %idxprom661 = zext i32 %and660 to i64
  %arrayidx662 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom661
  %157 = load i32, i32* %arrayidx662, align 4, !tbaa !4
  %shr664 = lshr i32 %xor645, 26
  %idxprom666 = zext i32 %shr664 to i64
  %arrayidx667 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom666
  %158 = load i32, i32* %arrayidx667, align 4, !tbaa !4
  %shr669 = lshr i32 %154, 2
  %and670 = and i32 %shr669, 63
  %idxprom671 = zext i32 %and670 to i64
  %arrayidx672 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom671
  %159 = load i32, i32* %arrayidx672, align 4, !tbaa !4
  %shr674 = lshr i32 %154, 10
  %and675 = and i32 %shr674, 63
  %idxprom676 = zext i32 %and675 to i64
  %arrayidx677 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom676
  %160 = load i32, i32* %arrayidx677, align 4, !tbaa !4
  %shr679 = lshr i32 %154, 18
  %and680 = and i32 %shr679, 63
  %idxprom681 = zext i32 %and680 to i64
  %arrayidx682 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom681
  %161 = load i32, i32* %arrayidx682, align 4, !tbaa !4
  %shr684 = lshr i32 %154, 26
  %idxprom686 = zext i32 %shr684 to i64
  %arrayidx687 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom686
  %162 = load i32, i32* %arrayidx687, align 4, !tbaa !4
  %xor658 = xor i32 %155, %xor597
  %xor663 = xor i32 %xor658, %156
  %xor668 = xor i32 %xor663, %157
  %xor673 = xor i32 %xor668, %158
  %xor678 = xor i32 %xor673, %159
  %xor683 = xor i32 %xor678, %160
  %xor688 = xor i32 %xor683, %161
  %xor689 = xor i32 %xor688, %162
  %arrayidx690 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 28
  %163 = load i32, i32* %arrayidx690, align 4, !tbaa !4
  %xor691 = xor i32 %xor689, %163
  %arrayidx692 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 29
  %164 = load i32, i32* %arrayidx692, align 4, !tbaa !4
  %xor693 = xor i32 %xor689, %164
  %165 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor693) #2, !srcloc !24
  %shr696 = lshr i32 %xor691, 2
  %and697 = and i32 %shr696, 63
  %idxprom698 = zext i32 %and697 to i64
  %arrayidx699 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom698
  %166 = load i32, i32* %arrayidx699, align 4, !tbaa !4
  %shr700 = lshr i32 %xor691, 10
  %and701 = and i32 %shr700, 63
  %idxprom702 = zext i32 %and701 to i64
  %arrayidx703 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom702
  %167 = load i32, i32* %arrayidx703, align 4, !tbaa !4
  %shr705 = lshr i32 %xor691, 18
  %and706 = and i32 %shr705, 63
  %idxprom707 = zext i32 %and706 to i64
  %arrayidx708 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom707
  %168 = load i32, i32* %arrayidx708, align 4, !tbaa !4
  %shr710 = lshr i32 %xor691, 26
  %idxprom712 = zext i32 %shr710 to i64
  %arrayidx713 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom712
  %169 = load i32, i32* %arrayidx713, align 4, !tbaa !4
  %shr715 = lshr i32 %165, 2
  %and716 = and i32 %shr715, 63
  %idxprom717 = zext i32 %and716 to i64
  %arrayidx718 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom717
  %170 = load i32, i32* %arrayidx718, align 4, !tbaa !4
  %shr720 = lshr i32 %165, 10
  %and721 = and i32 %shr720, 63
  %idxprom722 = zext i32 %and721 to i64
  %arrayidx723 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom722
  %171 = load i32, i32* %arrayidx723, align 4, !tbaa !4
  %shr725 = lshr i32 %165, 18
  %and726 = and i32 %shr725, 63
  %idxprom727 = zext i32 %and726 to i64
  %arrayidx728 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom727
  %172 = load i32, i32* %arrayidx728, align 4, !tbaa !4
  %shr730 = lshr i32 %165, 26
  %idxprom732 = zext i32 %shr730 to i64
  %arrayidx733 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom732
  %173 = load i32, i32* %arrayidx733, align 4, !tbaa !4
  %xor704 = xor i32 %166, %xor643
  %xor709 = xor i32 %xor704, %167
  %xor714 = xor i32 %xor709, %168
  %xor719 = xor i32 %xor714, %169
  %xor724 = xor i32 %xor719, %170
  %xor729 = xor i32 %xor724, %171
  %xor734 = xor i32 %xor729, %172
  %xor735 = xor i32 %xor734, %173
  %arrayidx736 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 30
  %174 = load i32, i32* %arrayidx736, align 4, !tbaa !4
  %xor737 = xor i32 %xor735, %174
  %arrayidx738 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 31
  %175 = load i32, i32* %arrayidx738, align 4, !tbaa !4
  %xor739 = xor i32 %xor735, %175
  %176 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor739) #2, !srcloc !25
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx782 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 30
  %177 = load i32, i32* %arrayidx782, align 4, !tbaa !4
  %xor783 = xor i32 %177, %7
  %arrayidx784 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 31
  %178 = load i32, i32* %arrayidx784, align 4, !tbaa !4
  %xor785 = xor i32 %178, %7
  %179 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor785) #2, !srcloc !26
  %shr788 = lshr i32 %xor783, 2
  %and789 = and i32 %shr788, 63
  %idxprom790 = zext i32 %and789 to i64
  %arrayidx791 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom790
  %180 = load i32, i32* %arrayidx791, align 4, !tbaa !4
  %shr792 = lshr i32 %xor783, 10
  %and793 = and i32 %shr792, 63
  %idxprom794 = zext i32 %and793 to i64
  %arrayidx795 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom794
  %181 = load i32, i32* %arrayidx795, align 4, !tbaa !4
  %shr797 = lshr i32 %xor783, 18
  %and798 = and i32 %shr797, 63
  %idxprom799 = zext i32 %and798 to i64
  %arrayidx800 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom799
  %182 = load i32, i32* %arrayidx800, align 4, !tbaa !4
  %shr802 = lshr i32 %xor783, 26
  %idxprom804 = zext i32 %shr802 to i64
  %arrayidx805 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom804
  %183 = load i32, i32* %arrayidx805, align 4, !tbaa !4
  %shr807 = lshr i32 %179, 2
  %and808 = and i32 %shr807, 63
  %idxprom809 = zext i32 %and808 to i64
  %arrayidx810 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom809
  %184 = load i32, i32* %arrayidx810, align 4, !tbaa !4
  %shr812 = lshr i32 %179, 10
  %and813 = and i32 %shr812, 63
  %idxprom814 = zext i32 %and813 to i64
  %arrayidx815 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom814
  %185 = load i32, i32* %arrayidx815, align 4, !tbaa !4
  %shr817 = lshr i32 %179, 18
  %and818 = and i32 %shr817, 63
  %idxprom819 = zext i32 %and818 to i64
  %arrayidx820 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom819
  %186 = load i32, i32* %arrayidx820, align 4, !tbaa !4
  %shr822 = lshr i32 %179, 26
  %idxprom824 = zext i32 %shr822 to i64
  %arrayidx825 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom824
  %187 = load i32, i32* %arrayidx825, align 4, !tbaa !4
  %xor796 = xor i32 %180, %8
  %xor801 = xor i32 %xor796, %181
  %xor806 = xor i32 %xor801, %182
  %xor811 = xor i32 %xor806, %183
  %xor816 = xor i32 %xor811, %184
  %xor821 = xor i32 %xor816, %185
  %xor826 = xor i32 %xor821, %186
  %xor827 = xor i32 %xor826, %187
  %arrayidx828 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 28
  %188 = load i32, i32* %arrayidx828, align 4, !tbaa !4
  %xor829 = xor i32 %xor827, %188
  %arrayidx830 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 29
  %189 = load i32, i32* %arrayidx830, align 4, !tbaa !4
  %xor831 = xor i32 %xor827, %189
  %190 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor831) #2, !srcloc !27
  %shr834 = lshr i32 %xor829, 2
  %and835 = and i32 %shr834, 63
  %idxprom836 = zext i32 %and835 to i64
  %arrayidx837 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom836
  %191 = load i32, i32* %arrayidx837, align 4, !tbaa !4
  %shr838 = lshr i32 %xor829, 10
  %and839 = and i32 %shr838, 63
  %idxprom840 = zext i32 %and839 to i64
  %arrayidx841 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom840
  %192 = load i32, i32* %arrayidx841, align 4, !tbaa !4
  %shr843 = lshr i32 %xor829, 18
  %and844 = and i32 %shr843, 63
  %idxprom845 = zext i32 %and844 to i64
  %arrayidx846 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom845
  %193 = load i32, i32* %arrayidx846, align 4, !tbaa !4
  %shr848 = lshr i32 %xor829, 26
  %idxprom850 = zext i32 %shr848 to i64
  %arrayidx851 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom850
  %194 = load i32, i32* %arrayidx851, align 4, !tbaa !4
  %shr853 = lshr i32 %190, 2
  %and854 = and i32 %shr853, 63
  %idxprom855 = zext i32 %and854 to i64
  %arrayidx856 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom855
  %195 = load i32, i32* %arrayidx856, align 4, !tbaa !4
  %shr858 = lshr i32 %190, 10
  %and859 = and i32 %shr858, 63
  %idxprom860 = zext i32 %and859 to i64
  %arrayidx861 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom860
  %196 = load i32, i32* %arrayidx861, align 4, !tbaa !4
  %shr863 = lshr i32 %190, 18
  %and864 = and i32 %shr863, 63
  %idxprom865 = zext i32 %and864 to i64
  %arrayidx866 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom865
  %197 = load i32, i32* %arrayidx866, align 4, !tbaa !4
  %shr868 = lshr i32 %190, 26
  %idxprom870 = zext i32 %shr868 to i64
  %arrayidx871 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom870
  %198 = load i32, i32* %arrayidx871, align 4, !tbaa !4
  %xor842 = xor i32 %191, %7
  %xor847 = xor i32 %xor842, %192
  %xor852 = xor i32 %xor847, %193
  %xor857 = xor i32 %xor852, %194
  %xor862 = xor i32 %xor857, %195
  %xor867 = xor i32 %xor862, %196
  %xor872 = xor i32 %xor867, %197
  %xor873 = xor i32 %xor872, %198
  %arrayidx874 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 26
  %199 = load i32, i32* %arrayidx874, align 4, !tbaa !4
  %xor875 = xor i32 %xor873, %199
  %arrayidx876 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 27
  %200 = load i32, i32* %arrayidx876, align 4, !tbaa !4
  %xor877 = xor i32 %xor873, %200
  %201 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor877) #2, !srcloc !28
  %shr880 = lshr i32 %xor875, 2
  %and881 = and i32 %shr880, 63
  %idxprom882 = zext i32 %and881 to i64
  %arrayidx883 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom882
  %202 = load i32, i32* %arrayidx883, align 4, !tbaa !4
  %shr884 = lshr i32 %xor875, 10
  %and885 = and i32 %shr884, 63
  %idxprom886 = zext i32 %and885 to i64
  %arrayidx887 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom886
  %203 = load i32, i32* %arrayidx887, align 4, !tbaa !4
  %shr889 = lshr i32 %xor875, 18
  %and890 = and i32 %shr889, 63
  %idxprom891 = zext i32 %and890 to i64
  %arrayidx892 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom891
  %204 = load i32, i32* %arrayidx892, align 4, !tbaa !4
  %shr894 = lshr i32 %xor875, 26
  %idxprom896 = zext i32 %shr894 to i64
  %arrayidx897 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom896
  %205 = load i32, i32* %arrayidx897, align 4, !tbaa !4
  %shr899 = lshr i32 %201, 2
  %and900 = and i32 %shr899, 63
  %idxprom901 = zext i32 %and900 to i64
  %arrayidx902 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom901
  %206 = load i32, i32* %arrayidx902, align 4, !tbaa !4
  %shr904 = lshr i32 %201, 10
  %and905 = and i32 %shr904, 63
  %idxprom906 = zext i32 %and905 to i64
  %arrayidx907 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom906
  %207 = load i32, i32* %arrayidx907, align 4, !tbaa !4
  %shr909 = lshr i32 %201, 18
  %and910 = and i32 %shr909, 63
  %idxprom911 = zext i32 %and910 to i64
  %arrayidx912 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom911
  %208 = load i32, i32* %arrayidx912, align 4, !tbaa !4
  %shr914 = lshr i32 %201, 26
  %idxprom916 = zext i32 %shr914 to i64
  %arrayidx917 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom916
  %209 = load i32, i32* %arrayidx917, align 4, !tbaa !4
  %xor888 = xor i32 %202, %xor827
  %xor893 = xor i32 %xor888, %203
  %xor898 = xor i32 %xor893, %204
  %xor903 = xor i32 %xor898, %205
  %xor908 = xor i32 %xor903, %206
  %xor913 = xor i32 %xor908, %207
  %xor918 = xor i32 %xor913, %208
  %xor919 = xor i32 %xor918, %209
  %arrayidx920 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 24
  %210 = load i32, i32* %arrayidx920, align 4, !tbaa !4
  %xor921 = xor i32 %xor919, %210
  %arrayidx922 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 25
  %211 = load i32, i32* %arrayidx922, align 4, !tbaa !4
  %xor923 = xor i32 %xor919, %211
  %212 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor923) #2, !srcloc !29
  %shr926 = lshr i32 %xor921, 2
  %and927 = and i32 %shr926, 63
  %idxprom928 = zext i32 %and927 to i64
  %arrayidx929 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom928
  %213 = load i32, i32* %arrayidx929, align 4, !tbaa !4
  %shr930 = lshr i32 %xor921, 10
  %and931 = and i32 %shr930, 63
  %idxprom932 = zext i32 %and931 to i64
  %arrayidx933 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom932
  %214 = load i32, i32* %arrayidx933, align 4, !tbaa !4
  %shr935 = lshr i32 %xor921, 18
  %and936 = and i32 %shr935, 63
  %idxprom937 = zext i32 %and936 to i64
  %arrayidx938 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom937
  %215 = load i32, i32* %arrayidx938, align 4, !tbaa !4
  %shr940 = lshr i32 %xor921, 26
  %idxprom942 = zext i32 %shr940 to i64
  %arrayidx943 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom942
  %216 = load i32, i32* %arrayidx943, align 4, !tbaa !4
  %shr945 = lshr i32 %212, 2
  %and946 = and i32 %shr945, 63
  %idxprom947 = zext i32 %and946 to i64
  %arrayidx948 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom947
  %217 = load i32, i32* %arrayidx948, align 4, !tbaa !4
  %shr950 = lshr i32 %212, 10
  %and951 = and i32 %shr950, 63
  %idxprom952 = zext i32 %and951 to i64
  %arrayidx953 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom952
  %218 = load i32, i32* %arrayidx953, align 4, !tbaa !4
  %shr955 = lshr i32 %212, 18
  %and956 = and i32 %shr955, 63
  %idxprom957 = zext i32 %and956 to i64
  %arrayidx958 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom957
  %219 = load i32, i32* %arrayidx958, align 4, !tbaa !4
  %shr960 = lshr i32 %212, 26
  %idxprom962 = zext i32 %shr960 to i64
  %arrayidx963 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom962
  %220 = load i32, i32* %arrayidx963, align 4, !tbaa !4
  %xor934 = xor i32 %213, %xor873
  %xor939 = xor i32 %xor934, %214
  %xor944 = xor i32 %xor939, %215
  %xor949 = xor i32 %xor944, %216
  %xor954 = xor i32 %xor949, %217
  %xor959 = xor i32 %xor954, %218
  %xor964 = xor i32 %xor959, %219
  %xor965 = xor i32 %xor964, %220
  %arrayidx966 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 22
  %221 = load i32, i32* %arrayidx966, align 4, !tbaa !4
  %xor967 = xor i32 %xor965, %221
  %arrayidx968 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 23
  %222 = load i32, i32* %arrayidx968, align 4, !tbaa !4
  %xor969 = xor i32 %xor965, %222
  %223 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor969) #2, !srcloc !30
  %shr972 = lshr i32 %xor967, 2
  %and973 = and i32 %shr972, 63
  %idxprom974 = zext i32 %and973 to i64
  %arrayidx975 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom974
  %224 = load i32, i32* %arrayidx975, align 4, !tbaa !4
  %shr976 = lshr i32 %xor967, 10
  %and977 = and i32 %shr976, 63
  %idxprom978 = zext i32 %and977 to i64
  %arrayidx979 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom978
  %225 = load i32, i32* %arrayidx979, align 4, !tbaa !4
  %shr981 = lshr i32 %xor967, 18
  %and982 = and i32 %shr981, 63
  %idxprom983 = zext i32 %and982 to i64
  %arrayidx984 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom983
  %226 = load i32, i32* %arrayidx984, align 4, !tbaa !4
  %shr986 = lshr i32 %xor967, 26
  %idxprom988 = zext i32 %shr986 to i64
  %arrayidx989 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom988
  %227 = load i32, i32* %arrayidx989, align 4, !tbaa !4
  %shr991 = lshr i32 %223, 2
  %and992 = and i32 %shr991, 63
  %idxprom993 = zext i32 %and992 to i64
  %arrayidx994 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom993
  %228 = load i32, i32* %arrayidx994, align 4, !tbaa !4
  %shr996 = lshr i32 %223, 10
  %and997 = and i32 %shr996, 63
  %idxprom998 = zext i32 %and997 to i64
  %arrayidx999 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom998
  %229 = load i32, i32* %arrayidx999, align 4, !tbaa !4
  %shr1001 = lshr i32 %223, 18
  %and1002 = and i32 %shr1001, 63
  %idxprom1003 = zext i32 %and1002 to i64
  %arrayidx1004 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1003
  %230 = load i32, i32* %arrayidx1004, align 4, !tbaa !4
  %shr1006 = lshr i32 %223, 26
  %idxprom1008 = zext i32 %shr1006 to i64
  %arrayidx1009 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1008
  %231 = load i32, i32* %arrayidx1009, align 4, !tbaa !4
  %xor980 = xor i32 %224, %xor919
  %xor985 = xor i32 %xor980, %225
  %xor990 = xor i32 %xor985, %226
  %xor995 = xor i32 %xor990, %227
  %xor1000 = xor i32 %xor995, %228
  %xor1005 = xor i32 %xor1000, %229
  %xor1010 = xor i32 %xor1005, %230
  %xor1011 = xor i32 %xor1010, %231
  %arrayidx1012 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 20
  %232 = load i32, i32* %arrayidx1012, align 4, !tbaa !4
  %xor1013 = xor i32 %xor1011, %232
  %arrayidx1014 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 21
  %233 = load i32, i32* %arrayidx1014, align 4, !tbaa !4
  %xor1015 = xor i32 %xor1011, %233
  %234 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1015) #2, !srcloc !31
  %shr1018 = lshr i32 %xor1013, 2
  %and1019 = and i32 %shr1018, 63
  %idxprom1020 = zext i32 %and1019 to i64
  %arrayidx1021 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1020
  %235 = load i32, i32* %arrayidx1021, align 4, !tbaa !4
  %shr1022 = lshr i32 %xor1013, 10
  %and1023 = and i32 %shr1022, 63
  %idxprom1024 = zext i32 %and1023 to i64
  %arrayidx1025 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1024
  %236 = load i32, i32* %arrayidx1025, align 4, !tbaa !4
  %shr1027 = lshr i32 %xor1013, 18
  %and1028 = and i32 %shr1027, 63
  %idxprom1029 = zext i32 %and1028 to i64
  %arrayidx1030 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1029
  %237 = load i32, i32* %arrayidx1030, align 4, !tbaa !4
  %shr1032 = lshr i32 %xor1013, 26
  %idxprom1034 = zext i32 %shr1032 to i64
  %arrayidx1035 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1034
  %238 = load i32, i32* %arrayidx1035, align 4, !tbaa !4
  %shr1037 = lshr i32 %234, 2
  %and1038 = and i32 %shr1037, 63
  %idxprom1039 = zext i32 %and1038 to i64
  %arrayidx1040 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1039
  %239 = load i32, i32* %arrayidx1040, align 4, !tbaa !4
  %shr1042 = lshr i32 %234, 10
  %and1043 = and i32 %shr1042, 63
  %idxprom1044 = zext i32 %and1043 to i64
  %arrayidx1045 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1044
  %240 = load i32, i32* %arrayidx1045, align 4, !tbaa !4
  %shr1047 = lshr i32 %234, 18
  %and1048 = and i32 %shr1047, 63
  %idxprom1049 = zext i32 %and1048 to i64
  %arrayidx1050 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1049
  %241 = load i32, i32* %arrayidx1050, align 4, !tbaa !4
  %shr1052 = lshr i32 %234, 26
  %idxprom1054 = zext i32 %shr1052 to i64
  %arrayidx1055 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1054
  %242 = load i32, i32* %arrayidx1055, align 4, !tbaa !4
  %xor1026 = xor i32 %235, %xor965
  %xor1031 = xor i32 %xor1026, %236
  %xor1036 = xor i32 %xor1031, %237
  %xor1041 = xor i32 %xor1036, %238
  %xor1046 = xor i32 %xor1041, %239
  %xor1051 = xor i32 %xor1046, %240
  %xor1056 = xor i32 %xor1051, %241
  %xor1057 = xor i32 %xor1056, %242
  %arrayidx1058 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 18
  %243 = load i32, i32* %arrayidx1058, align 4, !tbaa !4
  %xor1059 = xor i32 %xor1057, %243
  %arrayidx1060 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 19
  %244 = load i32, i32* %arrayidx1060, align 4, !tbaa !4
  %xor1061 = xor i32 %xor1057, %244
  %245 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1061) #2, !srcloc !32
  %shr1064 = lshr i32 %xor1059, 2
  %and1065 = and i32 %shr1064, 63
  %idxprom1066 = zext i32 %and1065 to i64
  %arrayidx1067 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1066
  %246 = load i32, i32* %arrayidx1067, align 4, !tbaa !4
  %shr1068 = lshr i32 %xor1059, 10
  %and1069 = and i32 %shr1068, 63
  %idxprom1070 = zext i32 %and1069 to i64
  %arrayidx1071 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1070
  %247 = load i32, i32* %arrayidx1071, align 4, !tbaa !4
  %shr1073 = lshr i32 %xor1059, 18
  %and1074 = and i32 %shr1073, 63
  %idxprom1075 = zext i32 %and1074 to i64
  %arrayidx1076 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1075
  %248 = load i32, i32* %arrayidx1076, align 4, !tbaa !4
  %shr1078 = lshr i32 %xor1059, 26
  %idxprom1080 = zext i32 %shr1078 to i64
  %arrayidx1081 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1080
  %249 = load i32, i32* %arrayidx1081, align 4, !tbaa !4
  %shr1083 = lshr i32 %245, 2
  %and1084 = and i32 %shr1083, 63
  %idxprom1085 = zext i32 %and1084 to i64
  %arrayidx1086 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1085
  %250 = load i32, i32* %arrayidx1086, align 4, !tbaa !4
  %shr1088 = lshr i32 %245, 10
  %and1089 = and i32 %shr1088, 63
  %idxprom1090 = zext i32 %and1089 to i64
  %arrayidx1091 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1090
  %251 = load i32, i32* %arrayidx1091, align 4, !tbaa !4
  %shr1093 = lshr i32 %245, 18
  %and1094 = and i32 %shr1093, 63
  %idxprom1095 = zext i32 %and1094 to i64
  %arrayidx1096 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1095
  %252 = load i32, i32* %arrayidx1096, align 4, !tbaa !4
  %shr1098 = lshr i32 %245, 26
  %idxprom1100 = zext i32 %shr1098 to i64
  %arrayidx1101 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1100
  %253 = load i32, i32* %arrayidx1101, align 4, !tbaa !4
  %xor1072 = xor i32 %246, %xor1011
  %xor1077 = xor i32 %xor1072, %247
  %xor1082 = xor i32 %xor1077, %248
  %xor1087 = xor i32 %xor1082, %249
  %xor1092 = xor i32 %xor1087, %250
  %xor1097 = xor i32 %xor1092, %251
  %xor1102 = xor i32 %xor1097, %252
  %xor1103 = xor i32 %xor1102, %253
  %arrayidx1104 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 16
  %254 = load i32, i32* %arrayidx1104, align 4, !tbaa !4
  %xor1105 = xor i32 %xor1103, %254
  %arrayidx1106 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 17
  %255 = load i32, i32* %arrayidx1106, align 4, !tbaa !4
  %xor1107 = xor i32 %xor1103, %255
  %256 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1107) #2, !srcloc !33
  %shr1110 = lshr i32 %xor1105, 2
  %and1111 = and i32 %shr1110, 63
  %idxprom1112 = zext i32 %and1111 to i64
  %arrayidx1113 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1112
  %257 = load i32, i32* %arrayidx1113, align 4, !tbaa !4
  %shr1114 = lshr i32 %xor1105, 10
  %and1115 = and i32 %shr1114, 63
  %idxprom1116 = zext i32 %and1115 to i64
  %arrayidx1117 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1116
  %258 = load i32, i32* %arrayidx1117, align 4, !tbaa !4
  %shr1119 = lshr i32 %xor1105, 18
  %and1120 = and i32 %shr1119, 63
  %idxprom1121 = zext i32 %and1120 to i64
  %arrayidx1122 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1121
  %259 = load i32, i32* %arrayidx1122, align 4, !tbaa !4
  %shr1124 = lshr i32 %xor1105, 26
  %idxprom1126 = zext i32 %shr1124 to i64
  %arrayidx1127 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1126
  %260 = load i32, i32* %arrayidx1127, align 4, !tbaa !4
  %shr1129 = lshr i32 %256, 2
  %and1130 = and i32 %shr1129, 63
  %idxprom1131 = zext i32 %and1130 to i64
  %arrayidx1132 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1131
  %261 = load i32, i32* %arrayidx1132, align 4, !tbaa !4
  %shr1134 = lshr i32 %256, 10
  %and1135 = and i32 %shr1134, 63
  %idxprom1136 = zext i32 %and1135 to i64
  %arrayidx1137 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1136
  %262 = load i32, i32* %arrayidx1137, align 4, !tbaa !4
  %shr1139 = lshr i32 %256, 18
  %and1140 = and i32 %shr1139, 63
  %idxprom1141 = zext i32 %and1140 to i64
  %arrayidx1142 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1141
  %263 = load i32, i32* %arrayidx1142, align 4, !tbaa !4
  %shr1144 = lshr i32 %256, 26
  %idxprom1146 = zext i32 %shr1144 to i64
  %arrayidx1147 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1146
  %264 = load i32, i32* %arrayidx1147, align 4, !tbaa !4
  %xor1118 = xor i32 %257, %xor1057
  %xor1123 = xor i32 %xor1118, %258
  %xor1128 = xor i32 %xor1123, %259
  %xor1133 = xor i32 %xor1128, %260
  %xor1138 = xor i32 %xor1133, %261
  %xor1143 = xor i32 %xor1138, %262
  %xor1148 = xor i32 %xor1143, %263
  %xor1149 = xor i32 %xor1148, %264
  %arrayidx1150 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 14
  %265 = load i32, i32* %arrayidx1150, align 4, !tbaa !4
  %xor1151 = xor i32 %xor1149, %265
  %arrayidx1152 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 15
  %266 = load i32, i32* %arrayidx1152, align 4, !tbaa !4
  %xor1153 = xor i32 %xor1149, %266
  %267 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1153) #2, !srcloc !34
  %shr1156 = lshr i32 %xor1151, 2
  %and1157 = and i32 %shr1156, 63
  %idxprom1158 = zext i32 %and1157 to i64
  %arrayidx1159 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1158
  %268 = load i32, i32* %arrayidx1159, align 4, !tbaa !4
  %shr1160 = lshr i32 %xor1151, 10
  %and1161 = and i32 %shr1160, 63
  %idxprom1162 = zext i32 %and1161 to i64
  %arrayidx1163 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1162
  %269 = load i32, i32* %arrayidx1163, align 4, !tbaa !4
  %shr1165 = lshr i32 %xor1151, 18
  %and1166 = and i32 %shr1165, 63
  %idxprom1167 = zext i32 %and1166 to i64
  %arrayidx1168 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1167
  %270 = load i32, i32* %arrayidx1168, align 4, !tbaa !4
  %shr1170 = lshr i32 %xor1151, 26
  %idxprom1172 = zext i32 %shr1170 to i64
  %arrayidx1173 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1172
  %271 = load i32, i32* %arrayidx1173, align 4, !tbaa !4
  %shr1175 = lshr i32 %267, 2
  %and1176 = and i32 %shr1175, 63
  %idxprom1177 = zext i32 %and1176 to i64
  %arrayidx1178 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1177
  %272 = load i32, i32* %arrayidx1178, align 4, !tbaa !4
  %shr1180 = lshr i32 %267, 10
  %and1181 = and i32 %shr1180, 63
  %idxprom1182 = zext i32 %and1181 to i64
  %arrayidx1183 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1182
  %273 = load i32, i32* %arrayidx1183, align 4, !tbaa !4
  %shr1185 = lshr i32 %267, 18
  %and1186 = and i32 %shr1185, 63
  %idxprom1187 = zext i32 %and1186 to i64
  %arrayidx1188 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1187
  %274 = load i32, i32* %arrayidx1188, align 4, !tbaa !4
  %shr1190 = lshr i32 %267, 26
  %idxprom1192 = zext i32 %shr1190 to i64
  %arrayidx1193 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1192
  %275 = load i32, i32* %arrayidx1193, align 4, !tbaa !4
  %xor1164 = xor i32 %268, %xor1103
  %xor1169 = xor i32 %xor1164, %269
  %xor1174 = xor i32 %xor1169, %270
  %xor1179 = xor i32 %xor1174, %271
  %xor1184 = xor i32 %xor1179, %272
  %xor1189 = xor i32 %xor1184, %273
  %xor1194 = xor i32 %xor1189, %274
  %xor1195 = xor i32 %xor1194, %275
  %arrayidx1196 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 12
  %276 = load i32, i32* %arrayidx1196, align 4, !tbaa !4
  %xor1197 = xor i32 %xor1195, %276
  %arrayidx1198 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 13
  %277 = load i32, i32* %arrayidx1198, align 4, !tbaa !4
  %xor1199 = xor i32 %xor1195, %277
  %278 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1199) #2, !srcloc !35
  %shr1202 = lshr i32 %xor1197, 2
  %and1203 = and i32 %shr1202, 63
  %idxprom1204 = zext i32 %and1203 to i64
  %arrayidx1205 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1204
  %279 = load i32, i32* %arrayidx1205, align 4, !tbaa !4
  %shr1206 = lshr i32 %xor1197, 10
  %and1207 = and i32 %shr1206, 63
  %idxprom1208 = zext i32 %and1207 to i64
  %arrayidx1209 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1208
  %280 = load i32, i32* %arrayidx1209, align 4, !tbaa !4
  %shr1211 = lshr i32 %xor1197, 18
  %and1212 = and i32 %shr1211, 63
  %idxprom1213 = zext i32 %and1212 to i64
  %arrayidx1214 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1213
  %281 = load i32, i32* %arrayidx1214, align 4, !tbaa !4
  %shr1216 = lshr i32 %xor1197, 26
  %idxprom1218 = zext i32 %shr1216 to i64
  %arrayidx1219 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1218
  %282 = load i32, i32* %arrayidx1219, align 4, !tbaa !4
  %shr1221 = lshr i32 %278, 2
  %and1222 = and i32 %shr1221, 63
  %idxprom1223 = zext i32 %and1222 to i64
  %arrayidx1224 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1223
  %283 = load i32, i32* %arrayidx1224, align 4, !tbaa !4
  %shr1226 = lshr i32 %278, 10
  %and1227 = and i32 %shr1226, 63
  %idxprom1228 = zext i32 %and1227 to i64
  %arrayidx1229 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1228
  %284 = load i32, i32* %arrayidx1229, align 4, !tbaa !4
  %shr1231 = lshr i32 %278, 18
  %and1232 = and i32 %shr1231, 63
  %idxprom1233 = zext i32 %and1232 to i64
  %arrayidx1234 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1233
  %285 = load i32, i32* %arrayidx1234, align 4, !tbaa !4
  %shr1236 = lshr i32 %278, 26
  %idxprom1238 = zext i32 %shr1236 to i64
  %arrayidx1239 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1238
  %286 = load i32, i32* %arrayidx1239, align 4, !tbaa !4
  %xor1210 = xor i32 %279, %xor1149
  %xor1215 = xor i32 %xor1210, %280
  %xor1220 = xor i32 %xor1215, %281
  %xor1225 = xor i32 %xor1220, %282
  %xor1230 = xor i32 %xor1225, %283
  %xor1235 = xor i32 %xor1230, %284
  %xor1240 = xor i32 %xor1235, %285
  %xor1241 = xor i32 %xor1240, %286
  %arrayidx1242 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 10
  %287 = load i32, i32* %arrayidx1242, align 4, !tbaa !4
  %xor1243 = xor i32 %xor1241, %287
  %arrayidx1244 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 11
  %288 = load i32, i32* %arrayidx1244, align 4, !tbaa !4
  %xor1245 = xor i32 %xor1241, %288
  %289 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1245) #2, !srcloc !36
  %shr1248 = lshr i32 %xor1243, 2
  %and1249 = and i32 %shr1248, 63
  %idxprom1250 = zext i32 %and1249 to i64
  %arrayidx1251 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1250
  %290 = load i32, i32* %arrayidx1251, align 4, !tbaa !4
  %shr1252 = lshr i32 %xor1243, 10
  %and1253 = and i32 %shr1252, 63
  %idxprom1254 = zext i32 %and1253 to i64
  %arrayidx1255 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1254
  %291 = load i32, i32* %arrayidx1255, align 4, !tbaa !4
  %shr1257 = lshr i32 %xor1243, 18
  %and1258 = and i32 %shr1257, 63
  %idxprom1259 = zext i32 %and1258 to i64
  %arrayidx1260 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1259
  %292 = load i32, i32* %arrayidx1260, align 4, !tbaa !4
  %shr1262 = lshr i32 %xor1243, 26
  %idxprom1264 = zext i32 %shr1262 to i64
  %arrayidx1265 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1264
  %293 = load i32, i32* %arrayidx1265, align 4, !tbaa !4
  %shr1267 = lshr i32 %289, 2
  %and1268 = and i32 %shr1267, 63
  %idxprom1269 = zext i32 %and1268 to i64
  %arrayidx1270 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1269
  %294 = load i32, i32* %arrayidx1270, align 4, !tbaa !4
  %shr1272 = lshr i32 %289, 10
  %and1273 = and i32 %shr1272, 63
  %idxprom1274 = zext i32 %and1273 to i64
  %arrayidx1275 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1274
  %295 = load i32, i32* %arrayidx1275, align 4, !tbaa !4
  %shr1277 = lshr i32 %289, 18
  %and1278 = and i32 %shr1277, 63
  %idxprom1279 = zext i32 %and1278 to i64
  %arrayidx1280 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1279
  %296 = load i32, i32* %arrayidx1280, align 4, !tbaa !4
  %shr1282 = lshr i32 %289, 26
  %idxprom1284 = zext i32 %shr1282 to i64
  %arrayidx1285 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1284
  %297 = load i32, i32* %arrayidx1285, align 4, !tbaa !4
  %xor1256 = xor i32 %290, %xor1195
  %xor1261 = xor i32 %xor1256, %291
  %xor1266 = xor i32 %xor1261, %292
  %xor1271 = xor i32 %xor1266, %293
  %xor1276 = xor i32 %xor1271, %294
  %xor1281 = xor i32 %xor1276, %295
  %xor1286 = xor i32 %xor1281, %296
  %xor1287 = xor i32 %xor1286, %297
  %arrayidx1288 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 8
  %298 = load i32, i32* %arrayidx1288, align 4, !tbaa !4
  %xor1289 = xor i32 %xor1287, %298
  %arrayidx1290 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 9
  %299 = load i32, i32* %arrayidx1290, align 4, !tbaa !4
  %xor1291 = xor i32 %xor1287, %299
  %300 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1291) #2, !srcloc !37
  %shr1294 = lshr i32 %xor1289, 2
  %and1295 = and i32 %shr1294, 63
  %idxprom1296 = zext i32 %and1295 to i64
  %arrayidx1297 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1296
  %301 = load i32, i32* %arrayidx1297, align 4, !tbaa !4
  %shr1298 = lshr i32 %xor1289, 10
  %and1299 = and i32 %shr1298, 63
  %idxprom1300 = zext i32 %and1299 to i64
  %arrayidx1301 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1300
  %302 = load i32, i32* %arrayidx1301, align 4, !tbaa !4
  %shr1303 = lshr i32 %xor1289, 18
  %and1304 = and i32 %shr1303, 63
  %idxprom1305 = zext i32 %and1304 to i64
  %arrayidx1306 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1305
  %303 = load i32, i32* %arrayidx1306, align 4, !tbaa !4
  %shr1308 = lshr i32 %xor1289, 26
  %idxprom1310 = zext i32 %shr1308 to i64
  %arrayidx1311 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1310
  %304 = load i32, i32* %arrayidx1311, align 4, !tbaa !4
  %shr1313 = lshr i32 %300, 2
  %and1314 = and i32 %shr1313, 63
  %idxprom1315 = zext i32 %and1314 to i64
  %arrayidx1316 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1315
  %305 = load i32, i32* %arrayidx1316, align 4, !tbaa !4
  %shr1318 = lshr i32 %300, 10
  %and1319 = and i32 %shr1318, 63
  %idxprom1320 = zext i32 %and1319 to i64
  %arrayidx1321 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1320
  %306 = load i32, i32* %arrayidx1321, align 4, !tbaa !4
  %shr1323 = lshr i32 %300, 18
  %and1324 = and i32 %shr1323, 63
  %idxprom1325 = zext i32 %and1324 to i64
  %arrayidx1326 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1325
  %307 = load i32, i32* %arrayidx1326, align 4, !tbaa !4
  %shr1328 = lshr i32 %300, 26
  %idxprom1330 = zext i32 %shr1328 to i64
  %arrayidx1331 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1330
  %308 = load i32, i32* %arrayidx1331, align 4, !tbaa !4
  %xor1302 = xor i32 %301, %xor1241
  %xor1307 = xor i32 %xor1302, %302
  %xor1312 = xor i32 %xor1307, %303
  %xor1317 = xor i32 %xor1312, %304
  %xor1322 = xor i32 %xor1317, %305
  %xor1327 = xor i32 %xor1322, %306
  %xor1332 = xor i32 %xor1327, %307
  %xor1333 = xor i32 %xor1332, %308
  %arrayidx1334 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 6
  %309 = load i32, i32* %arrayidx1334, align 4, !tbaa !4
  %xor1335 = xor i32 %xor1333, %309
  %arrayidx1336 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 7
  %310 = load i32, i32* %arrayidx1336, align 4, !tbaa !4
  %xor1337 = xor i32 %xor1333, %310
  %311 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1337) #2, !srcloc !38
  %shr1340 = lshr i32 %xor1335, 2
  %and1341 = and i32 %shr1340, 63
  %idxprom1342 = zext i32 %and1341 to i64
  %arrayidx1343 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1342
  %312 = load i32, i32* %arrayidx1343, align 4, !tbaa !4
  %shr1344 = lshr i32 %xor1335, 10
  %and1345 = and i32 %shr1344, 63
  %idxprom1346 = zext i32 %and1345 to i64
  %arrayidx1347 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1346
  %313 = load i32, i32* %arrayidx1347, align 4, !tbaa !4
  %shr1349 = lshr i32 %xor1335, 18
  %and1350 = and i32 %shr1349, 63
  %idxprom1351 = zext i32 %and1350 to i64
  %arrayidx1352 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1351
  %314 = load i32, i32* %arrayidx1352, align 4, !tbaa !4
  %shr1354 = lshr i32 %xor1335, 26
  %idxprom1356 = zext i32 %shr1354 to i64
  %arrayidx1357 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1356
  %315 = load i32, i32* %arrayidx1357, align 4, !tbaa !4
  %shr1359 = lshr i32 %311, 2
  %and1360 = and i32 %shr1359, 63
  %idxprom1361 = zext i32 %and1360 to i64
  %arrayidx1362 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1361
  %316 = load i32, i32* %arrayidx1362, align 4, !tbaa !4
  %shr1364 = lshr i32 %311, 10
  %and1365 = and i32 %shr1364, 63
  %idxprom1366 = zext i32 %and1365 to i64
  %arrayidx1367 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1366
  %317 = load i32, i32* %arrayidx1367, align 4, !tbaa !4
  %shr1369 = lshr i32 %311, 18
  %and1370 = and i32 %shr1369, 63
  %idxprom1371 = zext i32 %and1370 to i64
  %arrayidx1372 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1371
  %318 = load i32, i32* %arrayidx1372, align 4, !tbaa !4
  %shr1374 = lshr i32 %311, 26
  %idxprom1376 = zext i32 %shr1374 to i64
  %arrayidx1377 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1376
  %319 = load i32, i32* %arrayidx1377, align 4, !tbaa !4
  %xor1348 = xor i32 %312, %xor1287
  %xor1353 = xor i32 %xor1348, %313
  %xor1358 = xor i32 %xor1353, %314
  %xor1363 = xor i32 %xor1358, %315
  %xor1368 = xor i32 %xor1363, %316
  %xor1373 = xor i32 %xor1368, %317
  %xor1378 = xor i32 %xor1373, %318
  %xor1379 = xor i32 %xor1378, %319
  %arrayidx1380 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 4
  %320 = load i32, i32* %arrayidx1380, align 4, !tbaa !4
  %xor1381 = xor i32 %xor1379, %320
  %arrayidx1382 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 5
  %321 = load i32, i32* %arrayidx1382, align 4, !tbaa !4
  %xor1383 = xor i32 %xor1379, %321
  %322 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1383) #2, !srcloc !39
  %shr1386 = lshr i32 %xor1381, 2
  %and1387 = and i32 %shr1386, 63
  %idxprom1388 = zext i32 %and1387 to i64
  %arrayidx1389 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1388
  %323 = load i32, i32* %arrayidx1389, align 4, !tbaa !4
  %shr1390 = lshr i32 %xor1381, 10
  %and1391 = and i32 %shr1390, 63
  %idxprom1392 = zext i32 %and1391 to i64
  %arrayidx1393 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1392
  %324 = load i32, i32* %arrayidx1393, align 4, !tbaa !4
  %shr1395 = lshr i32 %xor1381, 18
  %and1396 = and i32 %shr1395, 63
  %idxprom1397 = zext i32 %and1396 to i64
  %arrayidx1398 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1397
  %325 = load i32, i32* %arrayidx1398, align 4, !tbaa !4
  %shr1400 = lshr i32 %xor1381, 26
  %idxprom1402 = zext i32 %shr1400 to i64
  %arrayidx1403 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1402
  %326 = load i32, i32* %arrayidx1403, align 4, !tbaa !4
  %shr1405 = lshr i32 %322, 2
  %and1406 = and i32 %shr1405, 63
  %idxprom1407 = zext i32 %and1406 to i64
  %arrayidx1408 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1407
  %327 = load i32, i32* %arrayidx1408, align 4, !tbaa !4
  %shr1410 = lshr i32 %322, 10
  %and1411 = and i32 %shr1410, 63
  %idxprom1412 = zext i32 %and1411 to i64
  %arrayidx1413 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1412
  %328 = load i32, i32* %arrayidx1413, align 4, !tbaa !4
  %shr1415 = lshr i32 %322, 18
  %and1416 = and i32 %shr1415, 63
  %idxprom1417 = zext i32 %and1416 to i64
  %arrayidx1418 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1417
  %329 = load i32, i32* %arrayidx1418, align 4, !tbaa !4
  %shr1420 = lshr i32 %322, 26
  %idxprom1422 = zext i32 %shr1420 to i64
  %arrayidx1423 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1422
  %330 = load i32, i32* %arrayidx1423, align 4, !tbaa !4
  %xor1394 = xor i32 %323, %xor1333
  %xor1399 = xor i32 %xor1394, %324
  %xor1404 = xor i32 %xor1399, %325
  %xor1409 = xor i32 %xor1404, %326
  %xor1414 = xor i32 %xor1409, %327
  %xor1419 = xor i32 %xor1414, %328
  %xor1424 = xor i32 %xor1419, %329
  %xor1425 = xor i32 %xor1424, %330
  %arrayidx1426 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 2
  %331 = load i32, i32* %arrayidx1426, align 4, !tbaa !4
  %xor1427 = xor i32 %xor1425, %331
  %arrayidx1428 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 3
  %332 = load i32, i32* %arrayidx1428, align 4, !tbaa !4
  %xor1429 = xor i32 %xor1425, %332
  %333 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1429) #2, !srcloc !40
  %shr1432 = lshr i32 %xor1427, 2
  %and1433 = and i32 %shr1432, 63
  %idxprom1434 = zext i32 %and1433 to i64
  %arrayidx1435 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1434
  %334 = load i32, i32* %arrayidx1435, align 4, !tbaa !4
  %shr1436 = lshr i32 %xor1427, 10
  %and1437 = and i32 %shr1436, 63
  %idxprom1438 = zext i32 %and1437 to i64
  %arrayidx1439 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1438
  %335 = load i32, i32* %arrayidx1439, align 4, !tbaa !4
  %shr1441 = lshr i32 %xor1427, 18
  %and1442 = and i32 %shr1441, 63
  %idxprom1443 = zext i32 %and1442 to i64
  %arrayidx1444 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1443
  %336 = load i32, i32* %arrayidx1444, align 4, !tbaa !4
  %shr1446 = lshr i32 %xor1427, 26
  %idxprom1448 = zext i32 %shr1446 to i64
  %arrayidx1449 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1448
  %337 = load i32, i32* %arrayidx1449, align 4, !tbaa !4
  %shr1451 = lshr i32 %333, 2
  %and1452 = and i32 %shr1451, 63
  %idxprom1453 = zext i32 %and1452 to i64
  %arrayidx1454 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1453
  %338 = load i32, i32* %arrayidx1454, align 4, !tbaa !4
  %shr1456 = lshr i32 %333, 10
  %and1457 = and i32 %shr1456, 63
  %idxprom1458 = zext i32 %and1457 to i64
  %arrayidx1459 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1458
  %339 = load i32, i32* %arrayidx1459, align 4, !tbaa !4
  %shr1461 = lshr i32 %333, 18
  %and1462 = and i32 %shr1461, 63
  %idxprom1463 = zext i32 %and1462 to i64
  %arrayidx1464 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1463
  %340 = load i32, i32* %arrayidx1464, align 4, !tbaa !4
  %shr1466 = lshr i32 %333, 26
  %idxprom1468 = zext i32 %shr1466 to i64
  %arrayidx1469 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1468
  %341 = load i32, i32* %arrayidx1469, align 4, !tbaa !4
  %xor1440 = xor i32 %334, %xor1379
  %xor1445 = xor i32 %xor1440, %335
  %xor1450 = xor i32 %xor1445, %336
  %xor1455 = xor i32 %xor1450, %337
  %xor1460 = xor i32 %xor1455, %338
  %xor1465 = xor i32 %xor1460, %339
  %xor1470 = xor i32 %xor1465, %340
  %xor1471 = xor i32 %xor1470, %341
  %342 = load i32, i32* %arraydecay46, align 4, !tbaa !4
  %xor1473 = xor i32 %xor1471, %342
  %arrayidx1474 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 1
  %343 = load i32, i32* %arrayidx1474, align 4, !tbaa !4
  %xor1475 = xor i32 %xor1471, %343
  %344 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1475) #2, !srcloc !41
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %xor1473.sink2136 = phi i32 [ %xor1473, %if.else ], [ %xor737, %if.then ]
  %.sink2133 = phi i32 [ %344, %if.else ], [ %176, %if.then ]
  %xor1425.sink = phi i32 [ %xor1425, %if.else ], [ %xor689, %if.then ]
  %l.0 = phi i32 [ %xor1471, %if.else ], [ %xor735, %if.then ]
  %shr1478 = lshr i32 %xor1473.sink2136, 2
  %and1479 = and i32 %shr1478, 63
  %idxprom1480 = zext i32 %and1479 to i64
  %arrayidx1481 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1480
  %345 = load i32, i32* %arrayidx1481, align 4, !tbaa !4
  %shr1482 = lshr i32 %xor1473.sink2136, 10
  %and1483 = and i32 %shr1482, 63
  %idxprom1484 = zext i32 %and1483 to i64
  %arrayidx1485 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1484
  %346 = load i32, i32* %arrayidx1485, align 4, !tbaa !4
  %shr1487 = lshr i32 %xor1473.sink2136, 18
  %and1488 = and i32 %shr1487, 63
  %idxprom1489 = zext i32 %and1488 to i64
  %arrayidx1490 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1489
  %347 = load i32, i32* %arrayidx1490, align 4, !tbaa !4
  %shr1492 = lshr i32 %xor1473.sink2136, 26
  %idxprom1494 = zext i32 %shr1492 to i64
  %arrayidx1495 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1494
  %348 = load i32, i32* %arrayidx1495, align 4, !tbaa !4
  %shr1497 = lshr i32 %.sink2133, 2
  %and1498 = and i32 %shr1497, 63
  %idxprom1499 = zext i32 %and1498 to i64
  %arrayidx1500 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1499
  %349 = load i32, i32* %arrayidx1500, align 4, !tbaa !4
  %shr1502 = lshr i32 %.sink2133, 10
  %and1503 = and i32 %shr1502, 63
  %idxprom1504 = zext i32 %and1503 to i64
  %arrayidx1505 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1504
  %350 = load i32, i32* %arrayidx1505, align 4, !tbaa !4
  %shr1507 = lshr i32 %.sink2133, 18
  %and1508 = and i32 %shr1507, 63
  %idxprom1509 = zext i32 %and1508 to i64
  %arrayidx1510 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1509
  %351 = load i32, i32* %arrayidx1510, align 4, !tbaa !4
  %shr1512 = lshr i32 %.sink2133, 26
  %idxprom1514 = zext i32 %shr1512 to i64
  %arrayidx1515 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1514
  %352 = load i32, i32* %arrayidx1515, align 4, !tbaa !4
  %xor1486 = xor i32 %345, %xor1425.sink
  %xor1491 = xor i32 %xor1486, %346
  %xor1496 = xor i32 %xor1491, %347
  %xor1501 = xor i32 %xor1496, %348
  %xor1506 = xor i32 %xor1501, %349
  %xor1511 = xor i32 %xor1506, %350
  %xor1516 = xor i32 %xor1511, %351
  %xor1517 = xor i32 %xor1516, %352
  %353 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %l.0) #2, !srcloc !42
  %354 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %xor1517) #2, !srcloc !43
  %shr1529 = lshr i32 %354, 1
  %xor1530 = xor i32 %shr1529, %353
  %355 = and i32 %xor1530, 1431655765
  %xor1534 = xor i32 %355, %353
  %shl1535 = shl nuw i32 %355, 1
  %xor1536 = xor i32 %shl1535, %354
  %shr1537 = lshr i32 %xor1534, 8
  %xor1538 = xor i32 %shr1537, %xor1536
  %356 = and i32 %xor1538, 16711935
  %xor1542 = xor i32 %356, %xor1536
  %shl1543 = shl nuw i32 %356, 8
  %xor1544 = xor i32 %shl1543, %xor1534
  %shr1545 = lshr i32 %xor1542, 2
  %xor1546 = xor i32 %shr1545, %xor1544
  %357 = and i32 %xor1546, 858993459
  %xor1550 = xor i32 %357, %xor1544
  %shl1551 = shl nuw i32 %357, 2
  %xor1552 = xor i32 %shl1551, %xor1542
  %shr1553 = lshr i32 %xor1550, 16
  %xor1552.masked = and i32 %xor1552, 65535
  %358 = xor i32 %xor1552.masked, %shr1553
  %xor1558 = xor i32 %358, %xor1552
  %shl1559 = shl nuw i32 %358, 16
  %xor1560 = xor i32 %shl1559, %xor1550
  %shr1561 = lshr i32 %xor1558, 4
  %xor1562 = xor i32 %shr1561, %xor1560
  %359 = and i32 %xor1562, 252645135
  %xor1566 = xor i32 %359, %xor1560
  %shl1567 = shl nuw i32 %359, 4
  %xor1568 = xor i32 %shl1567, %xor1558
  store i32 %xor1566, i32* %data, align 4, !tbaa !4
  store i32 %xor1568, i32* %arrayidx1, align 4, !tbaa !4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline nounwind uwtable
define void @DES_encrypt2(i32* nocapture noundef %data, %struct.DES_ks* noundef readonly %ks, i32 noundef %enc) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* %data, align 4, !tbaa !4
  %arrayidx1 = getelementptr inbounds i32, i32* %data, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %2 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %0) #2, !srcloc !44
  %3 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 29, i32 %1) #2, !srcloc !45
  %arraydecay9 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 0
  %tobool.not = icmp eq i32 %enc, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %arraydecay9, align 4, !tbaa !4
  %xor = xor i32 %4, %2
  %arrayidx11 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 1
  %5 = load i32, i32* %arrayidx11, align 4, !tbaa !4
  %xor12 = xor i32 %5, %2
  %6 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor12) #2, !srcloc !46
  %shr = lshr i32 %xor, 2
  %and15 = and i32 %shr, 63
  %idxprom = zext i32 %and15 to i64
  %arrayidx16 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom
  %7 = load i32, i32* %arrayidx16, align 4, !tbaa !4
  %shr17 = lshr i32 %xor, 10
  %and18 = and i32 %shr17, 63
  %idxprom19 = zext i32 %and18 to i64
  %arrayidx20 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom19
  %8 = load i32, i32* %arrayidx20, align 4, !tbaa !4
  %shr22 = lshr i32 %xor, 18
  %and23 = and i32 %shr22, 63
  %idxprom24 = zext i32 %and23 to i64
  %arrayidx25 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom24
  %9 = load i32, i32* %arrayidx25, align 4, !tbaa !4
  %shr27 = lshr i32 %xor, 26
  %idxprom29 = zext i32 %shr27 to i64
  %arrayidx30 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom29
  %10 = load i32, i32* %arrayidx30, align 4, !tbaa !4
  %shr32 = lshr i32 %6, 2
  %and33 = and i32 %shr32, 63
  %idxprom34 = zext i32 %and33 to i64
  %arrayidx35 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom34
  %11 = load i32, i32* %arrayidx35, align 4, !tbaa !4
  %shr37 = lshr i32 %6, 10
  %and38 = and i32 %shr37, 63
  %idxprom39 = zext i32 %and38 to i64
  %arrayidx40 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom39
  %12 = load i32, i32* %arrayidx40, align 4, !tbaa !4
  %shr42 = lshr i32 %6, 18
  %and43 = and i32 %shr42, 63
  %idxprom44 = zext i32 %and43 to i64
  %arrayidx45 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom44
  %13 = load i32, i32* %arrayidx45, align 4, !tbaa !4
  %shr47 = lshr i32 %6, 26
  %idxprom49 = zext i32 %shr47 to i64
  %arrayidx50 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom49
  %14 = load i32, i32* %arrayidx50, align 4, !tbaa !4
  %xor21 = xor i32 %7, %3
  %xor26 = xor i32 %xor21, %8
  %xor31 = xor i32 %xor26, %9
  %xor36 = xor i32 %xor31, %10
  %xor41 = xor i32 %xor36, %11
  %xor46 = xor i32 %xor41, %12
  %xor51 = xor i32 %xor46, %13
  %xor52 = xor i32 %xor51, %14
  %arrayidx53 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 2
  %15 = load i32, i32* %arrayidx53, align 4, !tbaa !4
  %xor54 = xor i32 %xor52, %15
  %arrayidx55 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 3
  %16 = load i32, i32* %arrayidx55, align 4, !tbaa !4
  %xor56 = xor i32 %xor52, %16
  %17 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor56) #2, !srcloc !47
  %shr59 = lshr i32 %xor54, 2
  %and60 = and i32 %shr59, 63
  %idxprom61 = zext i32 %and60 to i64
  %arrayidx62 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom61
  %18 = load i32, i32* %arrayidx62, align 4, !tbaa !4
  %shr63 = lshr i32 %xor54, 10
  %and64 = and i32 %shr63, 63
  %idxprom65 = zext i32 %and64 to i64
  %arrayidx66 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom65
  %19 = load i32, i32* %arrayidx66, align 4, !tbaa !4
  %shr68 = lshr i32 %xor54, 18
  %and69 = and i32 %shr68, 63
  %idxprom70 = zext i32 %and69 to i64
  %arrayidx71 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom70
  %20 = load i32, i32* %arrayidx71, align 4, !tbaa !4
  %shr73 = lshr i32 %xor54, 26
  %idxprom75 = zext i32 %shr73 to i64
  %arrayidx76 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom75
  %21 = load i32, i32* %arrayidx76, align 4, !tbaa !4
  %shr78 = lshr i32 %17, 2
  %and79 = and i32 %shr78, 63
  %idxprom80 = zext i32 %and79 to i64
  %arrayidx81 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom80
  %22 = load i32, i32* %arrayidx81, align 4, !tbaa !4
  %shr83 = lshr i32 %17, 10
  %and84 = and i32 %shr83, 63
  %idxprom85 = zext i32 %and84 to i64
  %arrayidx86 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom85
  %23 = load i32, i32* %arrayidx86, align 4, !tbaa !4
  %shr88 = lshr i32 %17, 18
  %and89 = and i32 %shr88, 63
  %idxprom90 = zext i32 %and89 to i64
  %arrayidx91 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom90
  %24 = load i32, i32* %arrayidx91, align 4, !tbaa !4
  %shr93 = lshr i32 %17, 26
  %idxprom95 = zext i32 %shr93 to i64
  %arrayidx96 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom95
  %25 = load i32, i32* %arrayidx96, align 4, !tbaa !4
  %xor67 = xor i32 %18, %2
  %xor72 = xor i32 %xor67, %19
  %xor77 = xor i32 %xor72, %20
  %xor82 = xor i32 %xor77, %21
  %xor87 = xor i32 %xor82, %22
  %xor92 = xor i32 %xor87, %23
  %xor97 = xor i32 %xor92, %24
  %xor98 = xor i32 %xor97, %25
  %arrayidx99 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 4
  %26 = load i32, i32* %arrayidx99, align 4, !tbaa !4
  %xor100 = xor i32 %xor98, %26
  %arrayidx101 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 5
  %27 = load i32, i32* %arrayidx101, align 4, !tbaa !4
  %xor102 = xor i32 %xor98, %27
  %28 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor102) #2, !srcloc !48
  %shr105 = lshr i32 %xor100, 2
  %and106 = and i32 %shr105, 63
  %idxprom107 = zext i32 %and106 to i64
  %arrayidx108 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom107
  %29 = load i32, i32* %arrayidx108, align 4, !tbaa !4
  %shr109 = lshr i32 %xor100, 10
  %and110 = and i32 %shr109, 63
  %idxprom111 = zext i32 %and110 to i64
  %arrayidx112 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom111
  %30 = load i32, i32* %arrayidx112, align 4, !tbaa !4
  %shr114 = lshr i32 %xor100, 18
  %and115 = and i32 %shr114, 63
  %idxprom116 = zext i32 %and115 to i64
  %arrayidx117 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom116
  %31 = load i32, i32* %arrayidx117, align 4, !tbaa !4
  %shr119 = lshr i32 %xor100, 26
  %idxprom121 = zext i32 %shr119 to i64
  %arrayidx122 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom121
  %32 = load i32, i32* %arrayidx122, align 4, !tbaa !4
  %shr124 = lshr i32 %28, 2
  %and125 = and i32 %shr124, 63
  %idxprom126 = zext i32 %and125 to i64
  %arrayidx127 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom126
  %33 = load i32, i32* %arrayidx127, align 4, !tbaa !4
  %shr129 = lshr i32 %28, 10
  %and130 = and i32 %shr129, 63
  %idxprom131 = zext i32 %and130 to i64
  %arrayidx132 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom131
  %34 = load i32, i32* %arrayidx132, align 4, !tbaa !4
  %shr134 = lshr i32 %28, 18
  %and135 = and i32 %shr134, 63
  %idxprom136 = zext i32 %and135 to i64
  %arrayidx137 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom136
  %35 = load i32, i32* %arrayidx137, align 4, !tbaa !4
  %shr139 = lshr i32 %28, 26
  %idxprom141 = zext i32 %shr139 to i64
  %arrayidx142 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom141
  %36 = load i32, i32* %arrayidx142, align 4, !tbaa !4
  %xor113 = xor i32 %29, %xor52
  %xor118 = xor i32 %xor113, %30
  %xor123 = xor i32 %xor118, %31
  %xor128 = xor i32 %xor123, %32
  %xor133 = xor i32 %xor128, %33
  %xor138 = xor i32 %xor133, %34
  %xor143 = xor i32 %xor138, %35
  %xor144 = xor i32 %xor143, %36
  %arrayidx145 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 6
  %37 = load i32, i32* %arrayidx145, align 4, !tbaa !4
  %xor146 = xor i32 %xor144, %37
  %arrayidx147 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 7
  %38 = load i32, i32* %arrayidx147, align 4, !tbaa !4
  %xor148 = xor i32 %xor144, %38
  %39 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor148) #2, !srcloc !49
  %shr151 = lshr i32 %xor146, 2
  %and152 = and i32 %shr151, 63
  %idxprom153 = zext i32 %and152 to i64
  %arrayidx154 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom153
  %40 = load i32, i32* %arrayidx154, align 4, !tbaa !4
  %shr155 = lshr i32 %xor146, 10
  %and156 = and i32 %shr155, 63
  %idxprom157 = zext i32 %and156 to i64
  %arrayidx158 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom157
  %41 = load i32, i32* %arrayidx158, align 4, !tbaa !4
  %shr160 = lshr i32 %xor146, 18
  %and161 = and i32 %shr160, 63
  %idxprom162 = zext i32 %and161 to i64
  %arrayidx163 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom162
  %42 = load i32, i32* %arrayidx163, align 4, !tbaa !4
  %shr165 = lshr i32 %xor146, 26
  %idxprom167 = zext i32 %shr165 to i64
  %arrayidx168 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom167
  %43 = load i32, i32* %arrayidx168, align 4, !tbaa !4
  %shr170 = lshr i32 %39, 2
  %and171 = and i32 %shr170, 63
  %idxprom172 = zext i32 %and171 to i64
  %arrayidx173 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom172
  %44 = load i32, i32* %arrayidx173, align 4, !tbaa !4
  %shr175 = lshr i32 %39, 10
  %and176 = and i32 %shr175, 63
  %idxprom177 = zext i32 %and176 to i64
  %arrayidx178 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom177
  %45 = load i32, i32* %arrayidx178, align 4, !tbaa !4
  %shr180 = lshr i32 %39, 18
  %and181 = and i32 %shr180, 63
  %idxprom182 = zext i32 %and181 to i64
  %arrayidx183 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom182
  %46 = load i32, i32* %arrayidx183, align 4, !tbaa !4
  %shr185 = lshr i32 %39, 26
  %idxprom187 = zext i32 %shr185 to i64
  %arrayidx188 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom187
  %47 = load i32, i32* %arrayidx188, align 4, !tbaa !4
  %xor159 = xor i32 %40, %xor98
  %xor164 = xor i32 %xor159, %41
  %xor169 = xor i32 %xor164, %42
  %xor174 = xor i32 %xor169, %43
  %xor179 = xor i32 %xor174, %44
  %xor184 = xor i32 %xor179, %45
  %xor189 = xor i32 %xor184, %46
  %xor190 = xor i32 %xor189, %47
  %arrayidx191 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 8
  %48 = load i32, i32* %arrayidx191, align 4, !tbaa !4
  %xor192 = xor i32 %xor190, %48
  %arrayidx193 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 9
  %49 = load i32, i32* %arrayidx193, align 4, !tbaa !4
  %xor194 = xor i32 %xor190, %49
  %50 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor194) #2, !srcloc !50
  %shr197 = lshr i32 %xor192, 2
  %and198 = and i32 %shr197, 63
  %idxprom199 = zext i32 %and198 to i64
  %arrayidx200 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom199
  %51 = load i32, i32* %arrayidx200, align 4, !tbaa !4
  %shr201 = lshr i32 %xor192, 10
  %and202 = and i32 %shr201, 63
  %idxprom203 = zext i32 %and202 to i64
  %arrayidx204 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom203
  %52 = load i32, i32* %arrayidx204, align 4, !tbaa !4
  %shr206 = lshr i32 %xor192, 18
  %and207 = and i32 %shr206, 63
  %idxprom208 = zext i32 %and207 to i64
  %arrayidx209 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom208
  %53 = load i32, i32* %arrayidx209, align 4, !tbaa !4
  %shr211 = lshr i32 %xor192, 26
  %idxprom213 = zext i32 %shr211 to i64
  %arrayidx214 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom213
  %54 = load i32, i32* %arrayidx214, align 4, !tbaa !4
  %shr216 = lshr i32 %50, 2
  %and217 = and i32 %shr216, 63
  %idxprom218 = zext i32 %and217 to i64
  %arrayidx219 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom218
  %55 = load i32, i32* %arrayidx219, align 4, !tbaa !4
  %shr221 = lshr i32 %50, 10
  %and222 = and i32 %shr221, 63
  %idxprom223 = zext i32 %and222 to i64
  %arrayidx224 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom223
  %56 = load i32, i32* %arrayidx224, align 4, !tbaa !4
  %shr226 = lshr i32 %50, 18
  %and227 = and i32 %shr226, 63
  %idxprom228 = zext i32 %and227 to i64
  %arrayidx229 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom228
  %57 = load i32, i32* %arrayidx229, align 4, !tbaa !4
  %shr231 = lshr i32 %50, 26
  %idxprom233 = zext i32 %shr231 to i64
  %arrayidx234 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom233
  %58 = load i32, i32* %arrayidx234, align 4, !tbaa !4
  %xor205 = xor i32 %51, %xor144
  %xor210 = xor i32 %xor205, %52
  %xor215 = xor i32 %xor210, %53
  %xor220 = xor i32 %xor215, %54
  %xor225 = xor i32 %xor220, %55
  %xor230 = xor i32 %xor225, %56
  %xor235 = xor i32 %xor230, %57
  %xor236 = xor i32 %xor235, %58
  %arrayidx237 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 10
  %59 = load i32, i32* %arrayidx237, align 4, !tbaa !4
  %xor238 = xor i32 %xor236, %59
  %arrayidx239 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 11
  %60 = load i32, i32* %arrayidx239, align 4, !tbaa !4
  %xor240 = xor i32 %xor236, %60
  %61 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor240) #2, !srcloc !51
  %shr243 = lshr i32 %xor238, 2
  %and244 = and i32 %shr243, 63
  %idxprom245 = zext i32 %and244 to i64
  %arrayidx246 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom245
  %62 = load i32, i32* %arrayidx246, align 4, !tbaa !4
  %shr247 = lshr i32 %xor238, 10
  %and248 = and i32 %shr247, 63
  %idxprom249 = zext i32 %and248 to i64
  %arrayidx250 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom249
  %63 = load i32, i32* %arrayidx250, align 4, !tbaa !4
  %shr252 = lshr i32 %xor238, 18
  %and253 = and i32 %shr252, 63
  %idxprom254 = zext i32 %and253 to i64
  %arrayidx255 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom254
  %64 = load i32, i32* %arrayidx255, align 4, !tbaa !4
  %shr257 = lshr i32 %xor238, 26
  %idxprom259 = zext i32 %shr257 to i64
  %arrayidx260 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom259
  %65 = load i32, i32* %arrayidx260, align 4, !tbaa !4
  %shr262 = lshr i32 %61, 2
  %and263 = and i32 %shr262, 63
  %idxprom264 = zext i32 %and263 to i64
  %arrayidx265 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom264
  %66 = load i32, i32* %arrayidx265, align 4, !tbaa !4
  %shr267 = lshr i32 %61, 10
  %and268 = and i32 %shr267, 63
  %idxprom269 = zext i32 %and268 to i64
  %arrayidx270 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom269
  %67 = load i32, i32* %arrayidx270, align 4, !tbaa !4
  %shr272 = lshr i32 %61, 18
  %and273 = and i32 %shr272, 63
  %idxprom274 = zext i32 %and273 to i64
  %arrayidx275 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom274
  %68 = load i32, i32* %arrayidx275, align 4, !tbaa !4
  %shr277 = lshr i32 %61, 26
  %idxprom279 = zext i32 %shr277 to i64
  %arrayidx280 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom279
  %69 = load i32, i32* %arrayidx280, align 4, !tbaa !4
  %xor251 = xor i32 %62, %xor190
  %xor256 = xor i32 %xor251, %63
  %xor261 = xor i32 %xor256, %64
  %xor266 = xor i32 %xor261, %65
  %xor271 = xor i32 %xor266, %66
  %xor276 = xor i32 %xor271, %67
  %xor281 = xor i32 %xor276, %68
  %xor282 = xor i32 %xor281, %69
  %arrayidx283 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 12
  %70 = load i32, i32* %arrayidx283, align 4, !tbaa !4
  %xor284 = xor i32 %xor282, %70
  %arrayidx285 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 13
  %71 = load i32, i32* %arrayidx285, align 4, !tbaa !4
  %xor286 = xor i32 %xor282, %71
  %72 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor286) #2, !srcloc !52
  %shr289 = lshr i32 %xor284, 2
  %and290 = and i32 %shr289, 63
  %idxprom291 = zext i32 %and290 to i64
  %arrayidx292 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom291
  %73 = load i32, i32* %arrayidx292, align 4, !tbaa !4
  %shr293 = lshr i32 %xor284, 10
  %and294 = and i32 %shr293, 63
  %idxprom295 = zext i32 %and294 to i64
  %arrayidx296 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom295
  %74 = load i32, i32* %arrayidx296, align 4, !tbaa !4
  %shr298 = lshr i32 %xor284, 18
  %and299 = and i32 %shr298, 63
  %idxprom300 = zext i32 %and299 to i64
  %arrayidx301 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom300
  %75 = load i32, i32* %arrayidx301, align 4, !tbaa !4
  %shr303 = lshr i32 %xor284, 26
  %idxprom305 = zext i32 %shr303 to i64
  %arrayidx306 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom305
  %76 = load i32, i32* %arrayidx306, align 4, !tbaa !4
  %shr308 = lshr i32 %72, 2
  %and309 = and i32 %shr308, 63
  %idxprom310 = zext i32 %and309 to i64
  %arrayidx311 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom310
  %77 = load i32, i32* %arrayidx311, align 4, !tbaa !4
  %shr313 = lshr i32 %72, 10
  %and314 = and i32 %shr313, 63
  %idxprom315 = zext i32 %and314 to i64
  %arrayidx316 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom315
  %78 = load i32, i32* %arrayidx316, align 4, !tbaa !4
  %shr318 = lshr i32 %72, 18
  %and319 = and i32 %shr318, 63
  %idxprom320 = zext i32 %and319 to i64
  %arrayidx321 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom320
  %79 = load i32, i32* %arrayidx321, align 4, !tbaa !4
  %shr323 = lshr i32 %72, 26
  %idxprom325 = zext i32 %shr323 to i64
  %arrayidx326 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom325
  %80 = load i32, i32* %arrayidx326, align 4, !tbaa !4
  %xor297 = xor i32 %73, %xor236
  %xor302 = xor i32 %xor297, %74
  %xor307 = xor i32 %xor302, %75
  %xor312 = xor i32 %xor307, %76
  %xor317 = xor i32 %xor312, %77
  %xor322 = xor i32 %xor317, %78
  %xor327 = xor i32 %xor322, %79
  %xor328 = xor i32 %xor327, %80
  %arrayidx329 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 14
  %81 = load i32, i32* %arrayidx329, align 4, !tbaa !4
  %xor330 = xor i32 %xor328, %81
  %arrayidx331 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 15
  %82 = load i32, i32* %arrayidx331, align 4, !tbaa !4
  %xor332 = xor i32 %xor328, %82
  %83 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor332) #2, !srcloc !53
  %shr335 = lshr i32 %xor330, 2
  %and336 = and i32 %shr335, 63
  %idxprom337 = zext i32 %and336 to i64
  %arrayidx338 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom337
  %84 = load i32, i32* %arrayidx338, align 4, !tbaa !4
  %shr339 = lshr i32 %xor330, 10
  %and340 = and i32 %shr339, 63
  %idxprom341 = zext i32 %and340 to i64
  %arrayidx342 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom341
  %85 = load i32, i32* %arrayidx342, align 4, !tbaa !4
  %shr344 = lshr i32 %xor330, 18
  %and345 = and i32 %shr344, 63
  %idxprom346 = zext i32 %and345 to i64
  %arrayidx347 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom346
  %86 = load i32, i32* %arrayidx347, align 4, !tbaa !4
  %shr349 = lshr i32 %xor330, 26
  %idxprom351 = zext i32 %shr349 to i64
  %arrayidx352 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom351
  %87 = load i32, i32* %arrayidx352, align 4, !tbaa !4
  %shr354 = lshr i32 %83, 2
  %and355 = and i32 %shr354, 63
  %idxprom356 = zext i32 %and355 to i64
  %arrayidx357 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom356
  %88 = load i32, i32* %arrayidx357, align 4, !tbaa !4
  %shr359 = lshr i32 %83, 10
  %and360 = and i32 %shr359, 63
  %idxprom361 = zext i32 %and360 to i64
  %arrayidx362 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom361
  %89 = load i32, i32* %arrayidx362, align 4, !tbaa !4
  %shr364 = lshr i32 %83, 18
  %and365 = and i32 %shr364, 63
  %idxprom366 = zext i32 %and365 to i64
  %arrayidx367 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom366
  %90 = load i32, i32* %arrayidx367, align 4, !tbaa !4
  %shr369 = lshr i32 %83, 26
  %idxprom371 = zext i32 %shr369 to i64
  %arrayidx372 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom371
  %91 = load i32, i32* %arrayidx372, align 4, !tbaa !4
  %xor343 = xor i32 %84, %xor282
  %xor348 = xor i32 %xor343, %85
  %xor353 = xor i32 %xor348, %86
  %xor358 = xor i32 %xor353, %87
  %xor363 = xor i32 %xor358, %88
  %xor368 = xor i32 %xor363, %89
  %xor373 = xor i32 %xor368, %90
  %xor374 = xor i32 %xor373, %91
  %arrayidx375 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 16
  %92 = load i32, i32* %arrayidx375, align 4, !tbaa !4
  %xor376 = xor i32 %xor374, %92
  %arrayidx377 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 17
  %93 = load i32, i32* %arrayidx377, align 4, !tbaa !4
  %xor378 = xor i32 %xor374, %93
  %94 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor378) #2, !srcloc !54
  %shr381 = lshr i32 %xor376, 2
  %and382 = and i32 %shr381, 63
  %idxprom383 = zext i32 %and382 to i64
  %arrayidx384 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom383
  %95 = load i32, i32* %arrayidx384, align 4, !tbaa !4
  %shr385 = lshr i32 %xor376, 10
  %and386 = and i32 %shr385, 63
  %idxprom387 = zext i32 %and386 to i64
  %arrayidx388 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom387
  %96 = load i32, i32* %arrayidx388, align 4, !tbaa !4
  %shr390 = lshr i32 %xor376, 18
  %and391 = and i32 %shr390, 63
  %idxprom392 = zext i32 %and391 to i64
  %arrayidx393 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom392
  %97 = load i32, i32* %arrayidx393, align 4, !tbaa !4
  %shr395 = lshr i32 %xor376, 26
  %idxprom397 = zext i32 %shr395 to i64
  %arrayidx398 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom397
  %98 = load i32, i32* %arrayidx398, align 4, !tbaa !4
  %shr400 = lshr i32 %94, 2
  %and401 = and i32 %shr400, 63
  %idxprom402 = zext i32 %and401 to i64
  %arrayidx403 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom402
  %99 = load i32, i32* %arrayidx403, align 4, !tbaa !4
  %shr405 = lshr i32 %94, 10
  %and406 = and i32 %shr405, 63
  %idxprom407 = zext i32 %and406 to i64
  %arrayidx408 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom407
  %100 = load i32, i32* %arrayidx408, align 4, !tbaa !4
  %shr410 = lshr i32 %94, 18
  %and411 = and i32 %shr410, 63
  %idxprom412 = zext i32 %and411 to i64
  %arrayidx413 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom412
  %101 = load i32, i32* %arrayidx413, align 4, !tbaa !4
  %shr415 = lshr i32 %94, 26
  %idxprom417 = zext i32 %shr415 to i64
  %arrayidx418 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom417
  %102 = load i32, i32* %arrayidx418, align 4, !tbaa !4
  %xor389 = xor i32 %95, %xor328
  %xor394 = xor i32 %xor389, %96
  %xor399 = xor i32 %xor394, %97
  %xor404 = xor i32 %xor399, %98
  %xor409 = xor i32 %xor404, %99
  %xor414 = xor i32 %xor409, %100
  %xor419 = xor i32 %xor414, %101
  %xor420 = xor i32 %xor419, %102
  %arrayidx421 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 18
  %103 = load i32, i32* %arrayidx421, align 4, !tbaa !4
  %xor422 = xor i32 %xor420, %103
  %arrayidx423 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 19
  %104 = load i32, i32* %arrayidx423, align 4, !tbaa !4
  %xor424 = xor i32 %xor420, %104
  %105 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor424) #2, !srcloc !55
  %shr427 = lshr i32 %xor422, 2
  %and428 = and i32 %shr427, 63
  %idxprom429 = zext i32 %and428 to i64
  %arrayidx430 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom429
  %106 = load i32, i32* %arrayidx430, align 4, !tbaa !4
  %shr431 = lshr i32 %xor422, 10
  %and432 = and i32 %shr431, 63
  %idxprom433 = zext i32 %and432 to i64
  %arrayidx434 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom433
  %107 = load i32, i32* %arrayidx434, align 4, !tbaa !4
  %shr436 = lshr i32 %xor422, 18
  %and437 = and i32 %shr436, 63
  %idxprom438 = zext i32 %and437 to i64
  %arrayidx439 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom438
  %108 = load i32, i32* %arrayidx439, align 4, !tbaa !4
  %shr441 = lshr i32 %xor422, 26
  %idxprom443 = zext i32 %shr441 to i64
  %arrayidx444 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom443
  %109 = load i32, i32* %arrayidx444, align 4, !tbaa !4
  %shr446 = lshr i32 %105, 2
  %and447 = and i32 %shr446, 63
  %idxprom448 = zext i32 %and447 to i64
  %arrayidx449 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom448
  %110 = load i32, i32* %arrayidx449, align 4, !tbaa !4
  %shr451 = lshr i32 %105, 10
  %and452 = and i32 %shr451, 63
  %idxprom453 = zext i32 %and452 to i64
  %arrayidx454 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom453
  %111 = load i32, i32* %arrayidx454, align 4, !tbaa !4
  %shr456 = lshr i32 %105, 18
  %and457 = and i32 %shr456, 63
  %idxprom458 = zext i32 %and457 to i64
  %arrayidx459 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom458
  %112 = load i32, i32* %arrayidx459, align 4, !tbaa !4
  %shr461 = lshr i32 %105, 26
  %idxprom463 = zext i32 %shr461 to i64
  %arrayidx464 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom463
  %113 = load i32, i32* %arrayidx464, align 4, !tbaa !4
  %xor435 = xor i32 %106, %xor374
  %xor440 = xor i32 %xor435, %107
  %xor445 = xor i32 %xor440, %108
  %xor450 = xor i32 %xor445, %109
  %xor455 = xor i32 %xor450, %110
  %xor460 = xor i32 %xor455, %111
  %xor465 = xor i32 %xor460, %112
  %xor466 = xor i32 %xor465, %113
  %arrayidx467 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 20
  %114 = load i32, i32* %arrayidx467, align 4, !tbaa !4
  %xor468 = xor i32 %xor466, %114
  %arrayidx469 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 21
  %115 = load i32, i32* %arrayidx469, align 4, !tbaa !4
  %xor470 = xor i32 %xor466, %115
  %116 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor470) #2, !srcloc !56
  %shr473 = lshr i32 %xor468, 2
  %and474 = and i32 %shr473, 63
  %idxprom475 = zext i32 %and474 to i64
  %arrayidx476 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom475
  %117 = load i32, i32* %arrayidx476, align 4, !tbaa !4
  %shr477 = lshr i32 %xor468, 10
  %and478 = and i32 %shr477, 63
  %idxprom479 = zext i32 %and478 to i64
  %arrayidx480 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom479
  %118 = load i32, i32* %arrayidx480, align 4, !tbaa !4
  %shr482 = lshr i32 %xor468, 18
  %and483 = and i32 %shr482, 63
  %idxprom484 = zext i32 %and483 to i64
  %arrayidx485 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom484
  %119 = load i32, i32* %arrayidx485, align 4, !tbaa !4
  %shr487 = lshr i32 %xor468, 26
  %idxprom489 = zext i32 %shr487 to i64
  %arrayidx490 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom489
  %120 = load i32, i32* %arrayidx490, align 4, !tbaa !4
  %shr492 = lshr i32 %116, 2
  %and493 = and i32 %shr492, 63
  %idxprom494 = zext i32 %and493 to i64
  %arrayidx495 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom494
  %121 = load i32, i32* %arrayidx495, align 4, !tbaa !4
  %shr497 = lshr i32 %116, 10
  %and498 = and i32 %shr497, 63
  %idxprom499 = zext i32 %and498 to i64
  %arrayidx500 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom499
  %122 = load i32, i32* %arrayidx500, align 4, !tbaa !4
  %shr502 = lshr i32 %116, 18
  %and503 = and i32 %shr502, 63
  %idxprom504 = zext i32 %and503 to i64
  %arrayidx505 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom504
  %123 = load i32, i32* %arrayidx505, align 4, !tbaa !4
  %shr507 = lshr i32 %116, 26
  %idxprom509 = zext i32 %shr507 to i64
  %arrayidx510 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom509
  %124 = load i32, i32* %arrayidx510, align 4, !tbaa !4
  %xor481 = xor i32 %117, %xor420
  %xor486 = xor i32 %xor481, %118
  %xor491 = xor i32 %xor486, %119
  %xor496 = xor i32 %xor491, %120
  %xor501 = xor i32 %xor496, %121
  %xor506 = xor i32 %xor501, %122
  %xor511 = xor i32 %xor506, %123
  %xor512 = xor i32 %xor511, %124
  %arrayidx513 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 22
  %125 = load i32, i32* %arrayidx513, align 4, !tbaa !4
  %xor514 = xor i32 %xor512, %125
  %arrayidx515 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 23
  %126 = load i32, i32* %arrayidx515, align 4, !tbaa !4
  %xor516 = xor i32 %xor512, %126
  %127 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor516) #2, !srcloc !57
  %shr519 = lshr i32 %xor514, 2
  %and520 = and i32 %shr519, 63
  %idxprom521 = zext i32 %and520 to i64
  %arrayidx522 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom521
  %128 = load i32, i32* %arrayidx522, align 4, !tbaa !4
  %shr523 = lshr i32 %xor514, 10
  %and524 = and i32 %shr523, 63
  %idxprom525 = zext i32 %and524 to i64
  %arrayidx526 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom525
  %129 = load i32, i32* %arrayidx526, align 4, !tbaa !4
  %shr528 = lshr i32 %xor514, 18
  %and529 = and i32 %shr528, 63
  %idxprom530 = zext i32 %and529 to i64
  %arrayidx531 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom530
  %130 = load i32, i32* %arrayidx531, align 4, !tbaa !4
  %shr533 = lshr i32 %xor514, 26
  %idxprom535 = zext i32 %shr533 to i64
  %arrayidx536 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom535
  %131 = load i32, i32* %arrayidx536, align 4, !tbaa !4
  %shr538 = lshr i32 %127, 2
  %and539 = and i32 %shr538, 63
  %idxprom540 = zext i32 %and539 to i64
  %arrayidx541 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom540
  %132 = load i32, i32* %arrayidx541, align 4, !tbaa !4
  %shr543 = lshr i32 %127, 10
  %and544 = and i32 %shr543, 63
  %idxprom545 = zext i32 %and544 to i64
  %arrayidx546 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom545
  %133 = load i32, i32* %arrayidx546, align 4, !tbaa !4
  %shr548 = lshr i32 %127, 18
  %and549 = and i32 %shr548, 63
  %idxprom550 = zext i32 %and549 to i64
  %arrayidx551 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom550
  %134 = load i32, i32* %arrayidx551, align 4, !tbaa !4
  %shr553 = lshr i32 %127, 26
  %idxprom555 = zext i32 %shr553 to i64
  %arrayidx556 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom555
  %135 = load i32, i32* %arrayidx556, align 4, !tbaa !4
  %xor527 = xor i32 %128, %xor466
  %xor532 = xor i32 %xor527, %129
  %xor537 = xor i32 %xor532, %130
  %xor542 = xor i32 %xor537, %131
  %xor547 = xor i32 %xor542, %132
  %xor552 = xor i32 %xor547, %133
  %xor557 = xor i32 %xor552, %134
  %xor558 = xor i32 %xor557, %135
  %arrayidx559 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 24
  %136 = load i32, i32* %arrayidx559, align 4, !tbaa !4
  %xor560 = xor i32 %xor558, %136
  %arrayidx561 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 25
  %137 = load i32, i32* %arrayidx561, align 4, !tbaa !4
  %xor562 = xor i32 %xor558, %137
  %138 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor562) #2, !srcloc !58
  %shr565 = lshr i32 %xor560, 2
  %and566 = and i32 %shr565, 63
  %idxprom567 = zext i32 %and566 to i64
  %arrayidx568 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom567
  %139 = load i32, i32* %arrayidx568, align 4, !tbaa !4
  %shr569 = lshr i32 %xor560, 10
  %and570 = and i32 %shr569, 63
  %idxprom571 = zext i32 %and570 to i64
  %arrayidx572 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom571
  %140 = load i32, i32* %arrayidx572, align 4, !tbaa !4
  %shr574 = lshr i32 %xor560, 18
  %and575 = and i32 %shr574, 63
  %idxprom576 = zext i32 %and575 to i64
  %arrayidx577 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom576
  %141 = load i32, i32* %arrayidx577, align 4, !tbaa !4
  %shr579 = lshr i32 %xor560, 26
  %idxprom581 = zext i32 %shr579 to i64
  %arrayidx582 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom581
  %142 = load i32, i32* %arrayidx582, align 4, !tbaa !4
  %shr584 = lshr i32 %138, 2
  %and585 = and i32 %shr584, 63
  %idxprom586 = zext i32 %and585 to i64
  %arrayidx587 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom586
  %143 = load i32, i32* %arrayidx587, align 4, !tbaa !4
  %shr589 = lshr i32 %138, 10
  %and590 = and i32 %shr589, 63
  %idxprom591 = zext i32 %and590 to i64
  %arrayidx592 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom591
  %144 = load i32, i32* %arrayidx592, align 4, !tbaa !4
  %shr594 = lshr i32 %138, 18
  %and595 = and i32 %shr594, 63
  %idxprom596 = zext i32 %and595 to i64
  %arrayidx597 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom596
  %145 = load i32, i32* %arrayidx597, align 4, !tbaa !4
  %shr599 = lshr i32 %138, 26
  %idxprom601 = zext i32 %shr599 to i64
  %arrayidx602 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom601
  %146 = load i32, i32* %arrayidx602, align 4, !tbaa !4
  %xor573 = xor i32 %139, %xor512
  %xor578 = xor i32 %xor573, %140
  %xor583 = xor i32 %xor578, %141
  %xor588 = xor i32 %xor583, %142
  %xor593 = xor i32 %xor588, %143
  %xor598 = xor i32 %xor593, %144
  %xor603 = xor i32 %xor598, %145
  %xor604 = xor i32 %xor603, %146
  %arrayidx605 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 26
  %147 = load i32, i32* %arrayidx605, align 4, !tbaa !4
  %xor606 = xor i32 %xor604, %147
  %arrayidx607 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 27
  %148 = load i32, i32* %arrayidx607, align 4, !tbaa !4
  %xor608 = xor i32 %xor604, %148
  %149 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor608) #2, !srcloc !59
  %shr611 = lshr i32 %xor606, 2
  %and612 = and i32 %shr611, 63
  %idxprom613 = zext i32 %and612 to i64
  %arrayidx614 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom613
  %150 = load i32, i32* %arrayidx614, align 4, !tbaa !4
  %shr615 = lshr i32 %xor606, 10
  %and616 = and i32 %shr615, 63
  %idxprom617 = zext i32 %and616 to i64
  %arrayidx618 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom617
  %151 = load i32, i32* %arrayidx618, align 4, !tbaa !4
  %shr620 = lshr i32 %xor606, 18
  %and621 = and i32 %shr620, 63
  %idxprom622 = zext i32 %and621 to i64
  %arrayidx623 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom622
  %152 = load i32, i32* %arrayidx623, align 4, !tbaa !4
  %shr625 = lshr i32 %xor606, 26
  %idxprom627 = zext i32 %shr625 to i64
  %arrayidx628 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom627
  %153 = load i32, i32* %arrayidx628, align 4, !tbaa !4
  %shr630 = lshr i32 %149, 2
  %and631 = and i32 %shr630, 63
  %idxprom632 = zext i32 %and631 to i64
  %arrayidx633 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom632
  %154 = load i32, i32* %arrayidx633, align 4, !tbaa !4
  %shr635 = lshr i32 %149, 10
  %and636 = and i32 %shr635, 63
  %idxprom637 = zext i32 %and636 to i64
  %arrayidx638 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom637
  %155 = load i32, i32* %arrayidx638, align 4, !tbaa !4
  %shr640 = lshr i32 %149, 18
  %and641 = and i32 %shr640, 63
  %idxprom642 = zext i32 %and641 to i64
  %arrayidx643 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom642
  %156 = load i32, i32* %arrayidx643, align 4, !tbaa !4
  %shr645 = lshr i32 %149, 26
  %idxprom647 = zext i32 %shr645 to i64
  %arrayidx648 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom647
  %157 = load i32, i32* %arrayidx648, align 4, !tbaa !4
  %xor619 = xor i32 %150, %xor558
  %xor624 = xor i32 %xor619, %151
  %xor629 = xor i32 %xor624, %152
  %xor634 = xor i32 %xor629, %153
  %xor639 = xor i32 %xor634, %154
  %xor644 = xor i32 %xor639, %155
  %xor649 = xor i32 %xor644, %156
  %xor650 = xor i32 %xor649, %157
  %arrayidx651 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 28
  %158 = load i32, i32* %arrayidx651, align 4, !tbaa !4
  %xor652 = xor i32 %xor650, %158
  %arrayidx653 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 29
  %159 = load i32, i32* %arrayidx653, align 4, !tbaa !4
  %xor654 = xor i32 %xor650, %159
  %160 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor654) #2, !srcloc !60
  %shr657 = lshr i32 %xor652, 2
  %and658 = and i32 %shr657, 63
  %idxprom659 = zext i32 %and658 to i64
  %arrayidx660 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom659
  %161 = load i32, i32* %arrayidx660, align 4, !tbaa !4
  %shr661 = lshr i32 %xor652, 10
  %and662 = and i32 %shr661, 63
  %idxprom663 = zext i32 %and662 to i64
  %arrayidx664 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom663
  %162 = load i32, i32* %arrayidx664, align 4, !tbaa !4
  %shr666 = lshr i32 %xor652, 18
  %and667 = and i32 %shr666, 63
  %idxprom668 = zext i32 %and667 to i64
  %arrayidx669 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom668
  %163 = load i32, i32* %arrayidx669, align 4, !tbaa !4
  %shr671 = lshr i32 %xor652, 26
  %idxprom673 = zext i32 %shr671 to i64
  %arrayidx674 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom673
  %164 = load i32, i32* %arrayidx674, align 4, !tbaa !4
  %shr676 = lshr i32 %160, 2
  %and677 = and i32 %shr676, 63
  %idxprom678 = zext i32 %and677 to i64
  %arrayidx679 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom678
  %165 = load i32, i32* %arrayidx679, align 4, !tbaa !4
  %shr681 = lshr i32 %160, 10
  %and682 = and i32 %shr681, 63
  %idxprom683 = zext i32 %and682 to i64
  %arrayidx684 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom683
  %166 = load i32, i32* %arrayidx684, align 4, !tbaa !4
  %shr686 = lshr i32 %160, 18
  %and687 = and i32 %shr686, 63
  %idxprom688 = zext i32 %and687 to i64
  %arrayidx689 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom688
  %167 = load i32, i32* %arrayidx689, align 4, !tbaa !4
  %shr691 = lshr i32 %160, 26
  %idxprom693 = zext i32 %shr691 to i64
  %arrayidx694 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom693
  %168 = load i32, i32* %arrayidx694, align 4, !tbaa !4
  %xor665 = xor i32 %161, %xor604
  %xor670 = xor i32 %xor665, %162
  %xor675 = xor i32 %xor670, %163
  %xor680 = xor i32 %xor675, %164
  %xor685 = xor i32 %xor680, %165
  %xor690 = xor i32 %xor685, %166
  %xor695 = xor i32 %xor690, %167
  %xor696 = xor i32 %xor695, %168
  %arrayidx697 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 30
  %169 = load i32, i32* %arrayidx697, align 4, !tbaa !4
  %xor698 = xor i32 %xor696, %169
  %arrayidx699 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 31
  %170 = load i32, i32* %arrayidx699, align 4, !tbaa !4
  %xor700 = xor i32 %xor696, %170
  %171 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor700) #2, !srcloc !61
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx743 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 30
  %172 = load i32, i32* %arrayidx743, align 4, !tbaa !4
  %xor744 = xor i32 %172, %2
  %arrayidx745 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 31
  %173 = load i32, i32* %arrayidx745, align 4, !tbaa !4
  %xor746 = xor i32 %173, %2
  %174 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor746) #2, !srcloc !62
  %shr749 = lshr i32 %xor744, 2
  %and750 = and i32 %shr749, 63
  %idxprom751 = zext i32 %and750 to i64
  %arrayidx752 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom751
  %175 = load i32, i32* %arrayidx752, align 4, !tbaa !4
  %shr753 = lshr i32 %xor744, 10
  %and754 = and i32 %shr753, 63
  %idxprom755 = zext i32 %and754 to i64
  %arrayidx756 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom755
  %176 = load i32, i32* %arrayidx756, align 4, !tbaa !4
  %shr758 = lshr i32 %xor744, 18
  %and759 = and i32 %shr758, 63
  %idxprom760 = zext i32 %and759 to i64
  %arrayidx761 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom760
  %177 = load i32, i32* %arrayidx761, align 4, !tbaa !4
  %shr763 = lshr i32 %xor744, 26
  %idxprom765 = zext i32 %shr763 to i64
  %arrayidx766 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom765
  %178 = load i32, i32* %arrayidx766, align 4, !tbaa !4
  %shr768 = lshr i32 %174, 2
  %and769 = and i32 %shr768, 63
  %idxprom770 = zext i32 %and769 to i64
  %arrayidx771 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom770
  %179 = load i32, i32* %arrayidx771, align 4, !tbaa !4
  %shr773 = lshr i32 %174, 10
  %and774 = and i32 %shr773, 63
  %idxprom775 = zext i32 %and774 to i64
  %arrayidx776 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom775
  %180 = load i32, i32* %arrayidx776, align 4, !tbaa !4
  %shr778 = lshr i32 %174, 18
  %and779 = and i32 %shr778, 63
  %idxprom780 = zext i32 %and779 to i64
  %arrayidx781 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom780
  %181 = load i32, i32* %arrayidx781, align 4, !tbaa !4
  %shr783 = lshr i32 %174, 26
  %idxprom785 = zext i32 %shr783 to i64
  %arrayidx786 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom785
  %182 = load i32, i32* %arrayidx786, align 4, !tbaa !4
  %xor757 = xor i32 %175, %3
  %xor762 = xor i32 %xor757, %176
  %xor767 = xor i32 %xor762, %177
  %xor772 = xor i32 %xor767, %178
  %xor777 = xor i32 %xor772, %179
  %xor782 = xor i32 %xor777, %180
  %xor787 = xor i32 %xor782, %181
  %xor788 = xor i32 %xor787, %182
  %arrayidx789 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 28
  %183 = load i32, i32* %arrayidx789, align 4, !tbaa !4
  %xor790 = xor i32 %xor788, %183
  %arrayidx791 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 29
  %184 = load i32, i32* %arrayidx791, align 4, !tbaa !4
  %xor792 = xor i32 %xor788, %184
  %185 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor792) #2, !srcloc !63
  %shr795 = lshr i32 %xor790, 2
  %and796 = and i32 %shr795, 63
  %idxprom797 = zext i32 %and796 to i64
  %arrayidx798 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom797
  %186 = load i32, i32* %arrayidx798, align 4, !tbaa !4
  %shr799 = lshr i32 %xor790, 10
  %and800 = and i32 %shr799, 63
  %idxprom801 = zext i32 %and800 to i64
  %arrayidx802 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom801
  %187 = load i32, i32* %arrayidx802, align 4, !tbaa !4
  %shr804 = lshr i32 %xor790, 18
  %and805 = and i32 %shr804, 63
  %idxprom806 = zext i32 %and805 to i64
  %arrayidx807 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom806
  %188 = load i32, i32* %arrayidx807, align 4, !tbaa !4
  %shr809 = lshr i32 %xor790, 26
  %idxprom811 = zext i32 %shr809 to i64
  %arrayidx812 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom811
  %189 = load i32, i32* %arrayidx812, align 4, !tbaa !4
  %shr814 = lshr i32 %185, 2
  %and815 = and i32 %shr814, 63
  %idxprom816 = zext i32 %and815 to i64
  %arrayidx817 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom816
  %190 = load i32, i32* %arrayidx817, align 4, !tbaa !4
  %shr819 = lshr i32 %185, 10
  %and820 = and i32 %shr819, 63
  %idxprom821 = zext i32 %and820 to i64
  %arrayidx822 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom821
  %191 = load i32, i32* %arrayidx822, align 4, !tbaa !4
  %shr824 = lshr i32 %185, 18
  %and825 = and i32 %shr824, 63
  %idxprom826 = zext i32 %and825 to i64
  %arrayidx827 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom826
  %192 = load i32, i32* %arrayidx827, align 4, !tbaa !4
  %shr829 = lshr i32 %185, 26
  %idxprom831 = zext i32 %shr829 to i64
  %arrayidx832 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom831
  %193 = load i32, i32* %arrayidx832, align 4, !tbaa !4
  %xor803 = xor i32 %186, %2
  %xor808 = xor i32 %xor803, %187
  %xor813 = xor i32 %xor808, %188
  %xor818 = xor i32 %xor813, %189
  %xor823 = xor i32 %xor818, %190
  %xor828 = xor i32 %xor823, %191
  %xor833 = xor i32 %xor828, %192
  %xor834 = xor i32 %xor833, %193
  %arrayidx835 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 26
  %194 = load i32, i32* %arrayidx835, align 4, !tbaa !4
  %xor836 = xor i32 %xor834, %194
  %arrayidx837 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 27
  %195 = load i32, i32* %arrayidx837, align 4, !tbaa !4
  %xor838 = xor i32 %xor834, %195
  %196 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor838) #2, !srcloc !64
  %shr841 = lshr i32 %xor836, 2
  %and842 = and i32 %shr841, 63
  %idxprom843 = zext i32 %and842 to i64
  %arrayidx844 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom843
  %197 = load i32, i32* %arrayidx844, align 4, !tbaa !4
  %shr845 = lshr i32 %xor836, 10
  %and846 = and i32 %shr845, 63
  %idxprom847 = zext i32 %and846 to i64
  %arrayidx848 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom847
  %198 = load i32, i32* %arrayidx848, align 4, !tbaa !4
  %shr850 = lshr i32 %xor836, 18
  %and851 = and i32 %shr850, 63
  %idxprom852 = zext i32 %and851 to i64
  %arrayidx853 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom852
  %199 = load i32, i32* %arrayidx853, align 4, !tbaa !4
  %shr855 = lshr i32 %xor836, 26
  %idxprom857 = zext i32 %shr855 to i64
  %arrayidx858 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom857
  %200 = load i32, i32* %arrayidx858, align 4, !tbaa !4
  %shr860 = lshr i32 %196, 2
  %and861 = and i32 %shr860, 63
  %idxprom862 = zext i32 %and861 to i64
  %arrayidx863 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom862
  %201 = load i32, i32* %arrayidx863, align 4, !tbaa !4
  %shr865 = lshr i32 %196, 10
  %and866 = and i32 %shr865, 63
  %idxprom867 = zext i32 %and866 to i64
  %arrayidx868 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom867
  %202 = load i32, i32* %arrayidx868, align 4, !tbaa !4
  %shr870 = lshr i32 %196, 18
  %and871 = and i32 %shr870, 63
  %idxprom872 = zext i32 %and871 to i64
  %arrayidx873 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom872
  %203 = load i32, i32* %arrayidx873, align 4, !tbaa !4
  %shr875 = lshr i32 %196, 26
  %idxprom877 = zext i32 %shr875 to i64
  %arrayidx878 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom877
  %204 = load i32, i32* %arrayidx878, align 4, !tbaa !4
  %xor849 = xor i32 %197, %xor788
  %xor854 = xor i32 %xor849, %198
  %xor859 = xor i32 %xor854, %199
  %xor864 = xor i32 %xor859, %200
  %xor869 = xor i32 %xor864, %201
  %xor874 = xor i32 %xor869, %202
  %xor879 = xor i32 %xor874, %203
  %xor880 = xor i32 %xor879, %204
  %arrayidx881 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 24
  %205 = load i32, i32* %arrayidx881, align 4, !tbaa !4
  %xor882 = xor i32 %xor880, %205
  %arrayidx883 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 25
  %206 = load i32, i32* %arrayidx883, align 4, !tbaa !4
  %xor884 = xor i32 %xor880, %206
  %207 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor884) #2, !srcloc !65
  %shr887 = lshr i32 %xor882, 2
  %and888 = and i32 %shr887, 63
  %idxprom889 = zext i32 %and888 to i64
  %arrayidx890 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom889
  %208 = load i32, i32* %arrayidx890, align 4, !tbaa !4
  %shr891 = lshr i32 %xor882, 10
  %and892 = and i32 %shr891, 63
  %idxprom893 = zext i32 %and892 to i64
  %arrayidx894 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom893
  %209 = load i32, i32* %arrayidx894, align 4, !tbaa !4
  %shr896 = lshr i32 %xor882, 18
  %and897 = and i32 %shr896, 63
  %idxprom898 = zext i32 %and897 to i64
  %arrayidx899 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom898
  %210 = load i32, i32* %arrayidx899, align 4, !tbaa !4
  %shr901 = lshr i32 %xor882, 26
  %idxprom903 = zext i32 %shr901 to i64
  %arrayidx904 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom903
  %211 = load i32, i32* %arrayidx904, align 4, !tbaa !4
  %shr906 = lshr i32 %207, 2
  %and907 = and i32 %shr906, 63
  %idxprom908 = zext i32 %and907 to i64
  %arrayidx909 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom908
  %212 = load i32, i32* %arrayidx909, align 4, !tbaa !4
  %shr911 = lshr i32 %207, 10
  %and912 = and i32 %shr911, 63
  %idxprom913 = zext i32 %and912 to i64
  %arrayidx914 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom913
  %213 = load i32, i32* %arrayidx914, align 4, !tbaa !4
  %shr916 = lshr i32 %207, 18
  %and917 = and i32 %shr916, 63
  %idxprom918 = zext i32 %and917 to i64
  %arrayidx919 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom918
  %214 = load i32, i32* %arrayidx919, align 4, !tbaa !4
  %shr921 = lshr i32 %207, 26
  %idxprom923 = zext i32 %shr921 to i64
  %arrayidx924 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom923
  %215 = load i32, i32* %arrayidx924, align 4, !tbaa !4
  %xor895 = xor i32 %208, %xor834
  %xor900 = xor i32 %xor895, %209
  %xor905 = xor i32 %xor900, %210
  %xor910 = xor i32 %xor905, %211
  %xor915 = xor i32 %xor910, %212
  %xor920 = xor i32 %xor915, %213
  %xor925 = xor i32 %xor920, %214
  %xor926 = xor i32 %xor925, %215
  %arrayidx927 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 22
  %216 = load i32, i32* %arrayidx927, align 4, !tbaa !4
  %xor928 = xor i32 %xor926, %216
  %arrayidx929 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 23
  %217 = load i32, i32* %arrayidx929, align 4, !tbaa !4
  %xor930 = xor i32 %xor926, %217
  %218 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor930) #2, !srcloc !66
  %shr933 = lshr i32 %xor928, 2
  %and934 = and i32 %shr933, 63
  %idxprom935 = zext i32 %and934 to i64
  %arrayidx936 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom935
  %219 = load i32, i32* %arrayidx936, align 4, !tbaa !4
  %shr937 = lshr i32 %xor928, 10
  %and938 = and i32 %shr937, 63
  %idxprom939 = zext i32 %and938 to i64
  %arrayidx940 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom939
  %220 = load i32, i32* %arrayidx940, align 4, !tbaa !4
  %shr942 = lshr i32 %xor928, 18
  %and943 = and i32 %shr942, 63
  %idxprom944 = zext i32 %and943 to i64
  %arrayidx945 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom944
  %221 = load i32, i32* %arrayidx945, align 4, !tbaa !4
  %shr947 = lshr i32 %xor928, 26
  %idxprom949 = zext i32 %shr947 to i64
  %arrayidx950 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom949
  %222 = load i32, i32* %arrayidx950, align 4, !tbaa !4
  %shr952 = lshr i32 %218, 2
  %and953 = and i32 %shr952, 63
  %idxprom954 = zext i32 %and953 to i64
  %arrayidx955 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom954
  %223 = load i32, i32* %arrayidx955, align 4, !tbaa !4
  %shr957 = lshr i32 %218, 10
  %and958 = and i32 %shr957, 63
  %idxprom959 = zext i32 %and958 to i64
  %arrayidx960 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom959
  %224 = load i32, i32* %arrayidx960, align 4, !tbaa !4
  %shr962 = lshr i32 %218, 18
  %and963 = and i32 %shr962, 63
  %idxprom964 = zext i32 %and963 to i64
  %arrayidx965 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom964
  %225 = load i32, i32* %arrayidx965, align 4, !tbaa !4
  %shr967 = lshr i32 %218, 26
  %idxprom969 = zext i32 %shr967 to i64
  %arrayidx970 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom969
  %226 = load i32, i32* %arrayidx970, align 4, !tbaa !4
  %xor941 = xor i32 %219, %xor880
  %xor946 = xor i32 %xor941, %220
  %xor951 = xor i32 %xor946, %221
  %xor956 = xor i32 %xor951, %222
  %xor961 = xor i32 %xor956, %223
  %xor966 = xor i32 %xor961, %224
  %xor971 = xor i32 %xor966, %225
  %xor972 = xor i32 %xor971, %226
  %arrayidx973 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 20
  %227 = load i32, i32* %arrayidx973, align 4, !tbaa !4
  %xor974 = xor i32 %xor972, %227
  %arrayidx975 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 21
  %228 = load i32, i32* %arrayidx975, align 4, !tbaa !4
  %xor976 = xor i32 %xor972, %228
  %229 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor976) #2, !srcloc !67
  %shr979 = lshr i32 %xor974, 2
  %and980 = and i32 %shr979, 63
  %idxprom981 = zext i32 %and980 to i64
  %arrayidx982 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom981
  %230 = load i32, i32* %arrayidx982, align 4, !tbaa !4
  %shr983 = lshr i32 %xor974, 10
  %and984 = and i32 %shr983, 63
  %idxprom985 = zext i32 %and984 to i64
  %arrayidx986 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom985
  %231 = load i32, i32* %arrayidx986, align 4, !tbaa !4
  %shr988 = lshr i32 %xor974, 18
  %and989 = and i32 %shr988, 63
  %idxprom990 = zext i32 %and989 to i64
  %arrayidx991 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom990
  %232 = load i32, i32* %arrayidx991, align 4, !tbaa !4
  %shr993 = lshr i32 %xor974, 26
  %idxprom995 = zext i32 %shr993 to i64
  %arrayidx996 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom995
  %233 = load i32, i32* %arrayidx996, align 4, !tbaa !4
  %shr998 = lshr i32 %229, 2
  %and999 = and i32 %shr998, 63
  %idxprom1000 = zext i32 %and999 to i64
  %arrayidx1001 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1000
  %234 = load i32, i32* %arrayidx1001, align 4, !tbaa !4
  %shr1003 = lshr i32 %229, 10
  %and1004 = and i32 %shr1003, 63
  %idxprom1005 = zext i32 %and1004 to i64
  %arrayidx1006 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1005
  %235 = load i32, i32* %arrayidx1006, align 4, !tbaa !4
  %shr1008 = lshr i32 %229, 18
  %and1009 = and i32 %shr1008, 63
  %idxprom1010 = zext i32 %and1009 to i64
  %arrayidx1011 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1010
  %236 = load i32, i32* %arrayidx1011, align 4, !tbaa !4
  %shr1013 = lshr i32 %229, 26
  %idxprom1015 = zext i32 %shr1013 to i64
  %arrayidx1016 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1015
  %237 = load i32, i32* %arrayidx1016, align 4, !tbaa !4
  %xor987 = xor i32 %230, %xor926
  %xor992 = xor i32 %xor987, %231
  %xor997 = xor i32 %xor992, %232
  %xor1002 = xor i32 %xor997, %233
  %xor1007 = xor i32 %xor1002, %234
  %xor1012 = xor i32 %xor1007, %235
  %xor1017 = xor i32 %xor1012, %236
  %xor1018 = xor i32 %xor1017, %237
  %arrayidx1019 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 18
  %238 = load i32, i32* %arrayidx1019, align 4, !tbaa !4
  %xor1020 = xor i32 %xor1018, %238
  %arrayidx1021 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 19
  %239 = load i32, i32* %arrayidx1021, align 4, !tbaa !4
  %xor1022 = xor i32 %xor1018, %239
  %240 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1022) #2, !srcloc !68
  %shr1025 = lshr i32 %xor1020, 2
  %and1026 = and i32 %shr1025, 63
  %idxprom1027 = zext i32 %and1026 to i64
  %arrayidx1028 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1027
  %241 = load i32, i32* %arrayidx1028, align 4, !tbaa !4
  %shr1029 = lshr i32 %xor1020, 10
  %and1030 = and i32 %shr1029, 63
  %idxprom1031 = zext i32 %and1030 to i64
  %arrayidx1032 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1031
  %242 = load i32, i32* %arrayidx1032, align 4, !tbaa !4
  %shr1034 = lshr i32 %xor1020, 18
  %and1035 = and i32 %shr1034, 63
  %idxprom1036 = zext i32 %and1035 to i64
  %arrayidx1037 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1036
  %243 = load i32, i32* %arrayidx1037, align 4, !tbaa !4
  %shr1039 = lshr i32 %xor1020, 26
  %idxprom1041 = zext i32 %shr1039 to i64
  %arrayidx1042 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1041
  %244 = load i32, i32* %arrayidx1042, align 4, !tbaa !4
  %shr1044 = lshr i32 %240, 2
  %and1045 = and i32 %shr1044, 63
  %idxprom1046 = zext i32 %and1045 to i64
  %arrayidx1047 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1046
  %245 = load i32, i32* %arrayidx1047, align 4, !tbaa !4
  %shr1049 = lshr i32 %240, 10
  %and1050 = and i32 %shr1049, 63
  %idxprom1051 = zext i32 %and1050 to i64
  %arrayidx1052 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1051
  %246 = load i32, i32* %arrayidx1052, align 4, !tbaa !4
  %shr1054 = lshr i32 %240, 18
  %and1055 = and i32 %shr1054, 63
  %idxprom1056 = zext i32 %and1055 to i64
  %arrayidx1057 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1056
  %247 = load i32, i32* %arrayidx1057, align 4, !tbaa !4
  %shr1059 = lshr i32 %240, 26
  %idxprom1061 = zext i32 %shr1059 to i64
  %arrayidx1062 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1061
  %248 = load i32, i32* %arrayidx1062, align 4, !tbaa !4
  %xor1033 = xor i32 %241, %xor972
  %xor1038 = xor i32 %xor1033, %242
  %xor1043 = xor i32 %xor1038, %243
  %xor1048 = xor i32 %xor1043, %244
  %xor1053 = xor i32 %xor1048, %245
  %xor1058 = xor i32 %xor1053, %246
  %xor1063 = xor i32 %xor1058, %247
  %xor1064 = xor i32 %xor1063, %248
  %arrayidx1065 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 16
  %249 = load i32, i32* %arrayidx1065, align 4, !tbaa !4
  %xor1066 = xor i32 %xor1064, %249
  %arrayidx1067 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 17
  %250 = load i32, i32* %arrayidx1067, align 4, !tbaa !4
  %xor1068 = xor i32 %xor1064, %250
  %251 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1068) #2, !srcloc !69
  %shr1071 = lshr i32 %xor1066, 2
  %and1072 = and i32 %shr1071, 63
  %idxprom1073 = zext i32 %and1072 to i64
  %arrayidx1074 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1073
  %252 = load i32, i32* %arrayidx1074, align 4, !tbaa !4
  %shr1075 = lshr i32 %xor1066, 10
  %and1076 = and i32 %shr1075, 63
  %idxprom1077 = zext i32 %and1076 to i64
  %arrayidx1078 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1077
  %253 = load i32, i32* %arrayidx1078, align 4, !tbaa !4
  %shr1080 = lshr i32 %xor1066, 18
  %and1081 = and i32 %shr1080, 63
  %idxprom1082 = zext i32 %and1081 to i64
  %arrayidx1083 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1082
  %254 = load i32, i32* %arrayidx1083, align 4, !tbaa !4
  %shr1085 = lshr i32 %xor1066, 26
  %idxprom1087 = zext i32 %shr1085 to i64
  %arrayidx1088 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1087
  %255 = load i32, i32* %arrayidx1088, align 4, !tbaa !4
  %shr1090 = lshr i32 %251, 2
  %and1091 = and i32 %shr1090, 63
  %idxprom1092 = zext i32 %and1091 to i64
  %arrayidx1093 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1092
  %256 = load i32, i32* %arrayidx1093, align 4, !tbaa !4
  %shr1095 = lshr i32 %251, 10
  %and1096 = and i32 %shr1095, 63
  %idxprom1097 = zext i32 %and1096 to i64
  %arrayidx1098 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1097
  %257 = load i32, i32* %arrayidx1098, align 4, !tbaa !4
  %shr1100 = lshr i32 %251, 18
  %and1101 = and i32 %shr1100, 63
  %idxprom1102 = zext i32 %and1101 to i64
  %arrayidx1103 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1102
  %258 = load i32, i32* %arrayidx1103, align 4, !tbaa !4
  %shr1105 = lshr i32 %251, 26
  %idxprom1107 = zext i32 %shr1105 to i64
  %arrayidx1108 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1107
  %259 = load i32, i32* %arrayidx1108, align 4, !tbaa !4
  %xor1079 = xor i32 %252, %xor1018
  %xor1084 = xor i32 %xor1079, %253
  %xor1089 = xor i32 %xor1084, %254
  %xor1094 = xor i32 %xor1089, %255
  %xor1099 = xor i32 %xor1094, %256
  %xor1104 = xor i32 %xor1099, %257
  %xor1109 = xor i32 %xor1104, %258
  %xor1110 = xor i32 %xor1109, %259
  %arrayidx1111 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 14
  %260 = load i32, i32* %arrayidx1111, align 4, !tbaa !4
  %xor1112 = xor i32 %xor1110, %260
  %arrayidx1113 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 15
  %261 = load i32, i32* %arrayidx1113, align 4, !tbaa !4
  %xor1114 = xor i32 %xor1110, %261
  %262 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1114) #2, !srcloc !70
  %shr1117 = lshr i32 %xor1112, 2
  %and1118 = and i32 %shr1117, 63
  %idxprom1119 = zext i32 %and1118 to i64
  %arrayidx1120 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1119
  %263 = load i32, i32* %arrayidx1120, align 4, !tbaa !4
  %shr1121 = lshr i32 %xor1112, 10
  %and1122 = and i32 %shr1121, 63
  %idxprom1123 = zext i32 %and1122 to i64
  %arrayidx1124 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1123
  %264 = load i32, i32* %arrayidx1124, align 4, !tbaa !4
  %shr1126 = lshr i32 %xor1112, 18
  %and1127 = and i32 %shr1126, 63
  %idxprom1128 = zext i32 %and1127 to i64
  %arrayidx1129 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1128
  %265 = load i32, i32* %arrayidx1129, align 4, !tbaa !4
  %shr1131 = lshr i32 %xor1112, 26
  %idxprom1133 = zext i32 %shr1131 to i64
  %arrayidx1134 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1133
  %266 = load i32, i32* %arrayidx1134, align 4, !tbaa !4
  %shr1136 = lshr i32 %262, 2
  %and1137 = and i32 %shr1136, 63
  %idxprom1138 = zext i32 %and1137 to i64
  %arrayidx1139 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1138
  %267 = load i32, i32* %arrayidx1139, align 4, !tbaa !4
  %shr1141 = lshr i32 %262, 10
  %and1142 = and i32 %shr1141, 63
  %idxprom1143 = zext i32 %and1142 to i64
  %arrayidx1144 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1143
  %268 = load i32, i32* %arrayidx1144, align 4, !tbaa !4
  %shr1146 = lshr i32 %262, 18
  %and1147 = and i32 %shr1146, 63
  %idxprom1148 = zext i32 %and1147 to i64
  %arrayidx1149 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1148
  %269 = load i32, i32* %arrayidx1149, align 4, !tbaa !4
  %shr1151 = lshr i32 %262, 26
  %idxprom1153 = zext i32 %shr1151 to i64
  %arrayidx1154 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1153
  %270 = load i32, i32* %arrayidx1154, align 4, !tbaa !4
  %xor1125 = xor i32 %263, %xor1064
  %xor1130 = xor i32 %xor1125, %264
  %xor1135 = xor i32 %xor1130, %265
  %xor1140 = xor i32 %xor1135, %266
  %xor1145 = xor i32 %xor1140, %267
  %xor1150 = xor i32 %xor1145, %268
  %xor1155 = xor i32 %xor1150, %269
  %xor1156 = xor i32 %xor1155, %270
  %arrayidx1157 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 12
  %271 = load i32, i32* %arrayidx1157, align 4, !tbaa !4
  %xor1158 = xor i32 %xor1156, %271
  %arrayidx1159 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 13
  %272 = load i32, i32* %arrayidx1159, align 4, !tbaa !4
  %xor1160 = xor i32 %xor1156, %272
  %273 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1160) #2, !srcloc !71
  %shr1163 = lshr i32 %xor1158, 2
  %and1164 = and i32 %shr1163, 63
  %idxprom1165 = zext i32 %and1164 to i64
  %arrayidx1166 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1165
  %274 = load i32, i32* %arrayidx1166, align 4, !tbaa !4
  %shr1167 = lshr i32 %xor1158, 10
  %and1168 = and i32 %shr1167, 63
  %idxprom1169 = zext i32 %and1168 to i64
  %arrayidx1170 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1169
  %275 = load i32, i32* %arrayidx1170, align 4, !tbaa !4
  %shr1172 = lshr i32 %xor1158, 18
  %and1173 = and i32 %shr1172, 63
  %idxprom1174 = zext i32 %and1173 to i64
  %arrayidx1175 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1174
  %276 = load i32, i32* %arrayidx1175, align 4, !tbaa !4
  %shr1177 = lshr i32 %xor1158, 26
  %idxprom1179 = zext i32 %shr1177 to i64
  %arrayidx1180 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1179
  %277 = load i32, i32* %arrayidx1180, align 4, !tbaa !4
  %shr1182 = lshr i32 %273, 2
  %and1183 = and i32 %shr1182, 63
  %idxprom1184 = zext i32 %and1183 to i64
  %arrayidx1185 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1184
  %278 = load i32, i32* %arrayidx1185, align 4, !tbaa !4
  %shr1187 = lshr i32 %273, 10
  %and1188 = and i32 %shr1187, 63
  %idxprom1189 = zext i32 %and1188 to i64
  %arrayidx1190 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1189
  %279 = load i32, i32* %arrayidx1190, align 4, !tbaa !4
  %shr1192 = lshr i32 %273, 18
  %and1193 = and i32 %shr1192, 63
  %idxprom1194 = zext i32 %and1193 to i64
  %arrayidx1195 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1194
  %280 = load i32, i32* %arrayidx1195, align 4, !tbaa !4
  %shr1197 = lshr i32 %273, 26
  %idxprom1199 = zext i32 %shr1197 to i64
  %arrayidx1200 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1199
  %281 = load i32, i32* %arrayidx1200, align 4, !tbaa !4
  %xor1171 = xor i32 %274, %xor1110
  %xor1176 = xor i32 %xor1171, %275
  %xor1181 = xor i32 %xor1176, %276
  %xor1186 = xor i32 %xor1181, %277
  %xor1191 = xor i32 %xor1186, %278
  %xor1196 = xor i32 %xor1191, %279
  %xor1201 = xor i32 %xor1196, %280
  %xor1202 = xor i32 %xor1201, %281
  %arrayidx1203 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 10
  %282 = load i32, i32* %arrayidx1203, align 4, !tbaa !4
  %xor1204 = xor i32 %xor1202, %282
  %arrayidx1205 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 11
  %283 = load i32, i32* %arrayidx1205, align 4, !tbaa !4
  %xor1206 = xor i32 %xor1202, %283
  %284 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1206) #2, !srcloc !72
  %shr1209 = lshr i32 %xor1204, 2
  %and1210 = and i32 %shr1209, 63
  %idxprom1211 = zext i32 %and1210 to i64
  %arrayidx1212 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1211
  %285 = load i32, i32* %arrayidx1212, align 4, !tbaa !4
  %shr1213 = lshr i32 %xor1204, 10
  %and1214 = and i32 %shr1213, 63
  %idxprom1215 = zext i32 %and1214 to i64
  %arrayidx1216 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1215
  %286 = load i32, i32* %arrayidx1216, align 4, !tbaa !4
  %shr1218 = lshr i32 %xor1204, 18
  %and1219 = and i32 %shr1218, 63
  %idxprom1220 = zext i32 %and1219 to i64
  %arrayidx1221 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1220
  %287 = load i32, i32* %arrayidx1221, align 4, !tbaa !4
  %shr1223 = lshr i32 %xor1204, 26
  %idxprom1225 = zext i32 %shr1223 to i64
  %arrayidx1226 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1225
  %288 = load i32, i32* %arrayidx1226, align 4, !tbaa !4
  %shr1228 = lshr i32 %284, 2
  %and1229 = and i32 %shr1228, 63
  %idxprom1230 = zext i32 %and1229 to i64
  %arrayidx1231 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1230
  %289 = load i32, i32* %arrayidx1231, align 4, !tbaa !4
  %shr1233 = lshr i32 %284, 10
  %and1234 = and i32 %shr1233, 63
  %idxprom1235 = zext i32 %and1234 to i64
  %arrayidx1236 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1235
  %290 = load i32, i32* %arrayidx1236, align 4, !tbaa !4
  %shr1238 = lshr i32 %284, 18
  %and1239 = and i32 %shr1238, 63
  %idxprom1240 = zext i32 %and1239 to i64
  %arrayidx1241 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1240
  %291 = load i32, i32* %arrayidx1241, align 4, !tbaa !4
  %shr1243 = lshr i32 %284, 26
  %idxprom1245 = zext i32 %shr1243 to i64
  %arrayidx1246 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1245
  %292 = load i32, i32* %arrayidx1246, align 4, !tbaa !4
  %xor1217 = xor i32 %285, %xor1156
  %xor1222 = xor i32 %xor1217, %286
  %xor1227 = xor i32 %xor1222, %287
  %xor1232 = xor i32 %xor1227, %288
  %xor1237 = xor i32 %xor1232, %289
  %xor1242 = xor i32 %xor1237, %290
  %xor1247 = xor i32 %xor1242, %291
  %xor1248 = xor i32 %xor1247, %292
  %arrayidx1249 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 8
  %293 = load i32, i32* %arrayidx1249, align 4, !tbaa !4
  %xor1250 = xor i32 %xor1248, %293
  %arrayidx1251 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 9
  %294 = load i32, i32* %arrayidx1251, align 4, !tbaa !4
  %xor1252 = xor i32 %xor1248, %294
  %295 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1252) #2, !srcloc !73
  %shr1255 = lshr i32 %xor1250, 2
  %and1256 = and i32 %shr1255, 63
  %idxprom1257 = zext i32 %and1256 to i64
  %arrayidx1258 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1257
  %296 = load i32, i32* %arrayidx1258, align 4, !tbaa !4
  %shr1259 = lshr i32 %xor1250, 10
  %and1260 = and i32 %shr1259, 63
  %idxprom1261 = zext i32 %and1260 to i64
  %arrayidx1262 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1261
  %297 = load i32, i32* %arrayidx1262, align 4, !tbaa !4
  %shr1264 = lshr i32 %xor1250, 18
  %and1265 = and i32 %shr1264, 63
  %idxprom1266 = zext i32 %and1265 to i64
  %arrayidx1267 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1266
  %298 = load i32, i32* %arrayidx1267, align 4, !tbaa !4
  %shr1269 = lshr i32 %xor1250, 26
  %idxprom1271 = zext i32 %shr1269 to i64
  %arrayidx1272 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1271
  %299 = load i32, i32* %arrayidx1272, align 4, !tbaa !4
  %shr1274 = lshr i32 %295, 2
  %and1275 = and i32 %shr1274, 63
  %idxprom1276 = zext i32 %and1275 to i64
  %arrayidx1277 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1276
  %300 = load i32, i32* %arrayidx1277, align 4, !tbaa !4
  %shr1279 = lshr i32 %295, 10
  %and1280 = and i32 %shr1279, 63
  %idxprom1281 = zext i32 %and1280 to i64
  %arrayidx1282 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1281
  %301 = load i32, i32* %arrayidx1282, align 4, !tbaa !4
  %shr1284 = lshr i32 %295, 18
  %and1285 = and i32 %shr1284, 63
  %idxprom1286 = zext i32 %and1285 to i64
  %arrayidx1287 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1286
  %302 = load i32, i32* %arrayidx1287, align 4, !tbaa !4
  %shr1289 = lshr i32 %295, 26
  %idxprom1291 = zext i32 %shr1289 to i64
  %arrayidx1292 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1291
  %303 = load i32, i32* %arrayidx1292, align 4, !tbaa !4
  %xor1263 = xor i32 %296, %xor1202
  %xor1268 = xor i32 %xor1263, %297
  %xor1273 = xor i32 %xor1268, %298
  %xor1278 = xor i32 %xor1273, %299
  %xor1283 = xor i32 %xor1278, %300
  %xor1288 = xor i32 %xor1283, %301
  %xor1293 = xor i32 %xor1288, %302
  %xor1294 = xor i32 %xor1293, %303
  %arrayidx1295 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 6
  %304 = load i32, i32* %arrayidx1295, align 4, !tbaa !4
  %xor1296 = xor i32 %xor1294, %304
  %arrayidx1297 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 7
  %305 = load i32, i32* %arrayidx1297, align 4, !tbaa !4
  %xor1298 = xor i32 %xor1294, %305
  %306 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1298) #2, !srcloc !74
  %shr1301 = lshr i32 %xor1296, 2
  %and1302 = and i32 %shr1301, 63
  %idxprom1303 = zext i32 %and1302 to i64
  %arrayidx1304 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1303
  %307 = load i32, i32* %arrayidx1304, align 4, !tbaa !4
  %shr1305 = lshr i32 %xor1296, 10
  %and1306 = and i32 %shr1305, 63
  %idxprom1307 = zext i32 %and1306 to i64
  %arrayidx1308 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1307
  %308 = load i32, i32* %arrayidx1308, align 4, !tbaa !4
  %shr1310 = lshr i32 %xor1296, 18
  %and1311 = and i32 %shr1310, 63
  %idxprom1312 = zext i32 %and1311 to i64
  %arrayidx1313 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1312
  %309 = load i32, i32* %arrayidx1313, align 4, !tbaa !4
  %shr1315 = lshr i32 %xor1296, 26
  %idxprom1317 = zext i32 %shr1315 to i64
  %arrayidx1318 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1317
  %310 = load i32, i32* %arrayidx1318, align 4, !tbaa !4
  %shr1320 = lshr i32 %306, 2
  %and1321 = and i32 %shr1320, 63
  %idxprom1322 = zext i32 %and1321 to i64
  %arrayidx1323 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1322
  %311 = load i32, i32* %arrayidx1323, align 4, !tbaa !4
  %shr1325 = lshr i32 %306, 10
  %and1326 = and i32 %shr1325, 63
  %idxprom1327 = zext i32 %and1326 to i64
  %arrayidx1328 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1327
  %312 = load i32, i32* %arrayidx1328, align 4, !tbaa !4
  %shr1330 = lshr i32 %306, 18
  %and1331 = and i32 %shr1330, 63
  %idxprom1332 = zext i32 %and1331 to i64
  %arrayidx1333 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1332
  %313 = load i32, i32* %arrayidx1333, align 4, !tbaa !4
  %shr1335 = lshr i32 %306, 26
  %idxprom1337 = zext i32 %shr1335 to i64
  %arrayidx1338 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1337
  %314 = load i32, i32* %arrayidx1338, align 4, !tbaa !4
  %xor1309 = xor i32 %307, %xor1248
  %xor1314 = xor i32 %xor1309, %308
  %xor1319 = xor i32 %xor1314, %309
  %xor1324 = xor i32 %xor1319, %310
  %xor1329 = xor i32 %xor1324, %311
  %xor1334 = xor i32 %xor1329, %312
  %xor1339 = xor i32 %xor1334, %313
  %xor1340 = xor i32 %xor1339, %314
  %arrayidx1341 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 4
  %315 = load i32, i32* %arrayidx1341, align 4, !tbaa !4
  %xor1342 = xor i32 %xor1340, %315
  %arrayidx1343 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 5
  %316 = load i32, i32* %arrayidx1343, align 4, !tbaa !4
  %xor1344 = xor i32 %xor1340, %316
  %317 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1344) #2, !srcloc !75
  %shr1347 = lshr i32 %xor1342, 2
  %and1348 = and i32 %shr1347, 63
  %idxprom1349 = zext i32 %and1348 to i64
  %arrayidx1350 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1349
  %318 = load i32, i32* %arrayidx1350, align 4, !tbaa !4
  %shr1351 = lshr i32 %xor1342, 10
  %and1352 = and i32 %shr1351, 63
  %idxprom1353 = zext i32 %and1352 to i64
  %arrayidx1354 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1353
  %319 = load i32, i32* %arrayidx1354, align 4, !tbaa !4
  %shr1356 = lshr i32 %xor1342, 18
  %and1357 = and i32 %shr1356, 63
  %idxprom1358 = zext i32 %and1357 to i64
  %arrayidx1359 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1358
  %320 = load i32, i32* %arrayidx1359, align 4, !tbaa !4
  %shr1361 = lshr i32 %xor1342, 26
  %idxprom1363 = zext i32 %shr1361 to i64
  %arrayidx1364 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1363
  %321 = load i32, i32* %arrayidx1364, align 4, !tbaa !4
  %shr1366 = lshr i32 %317, 2
  %and1367 = and i32 %shr1366, 63
  %idxprom1368 = zext i32 %and1367 to i64
  %arrayidx1369 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1368
  %322 = load i32, i32* %arrayidx1369, align 4, !tbaa !4
  %shr1371 = lshr i32 %317, 10
  %and1372 = and i32 %shr1371, 63
  %idxprom1373 = zext i32 %and1372 to i64
  %arrayidx1374 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1373
  %323 = load i32, i32* %arrayidx1374, align 4, !tbaa !4
  %shr1376 = lshr i32 %317, 18
  %and1377 = and i32 %shr1376, 63
  %idxprom1378 = zext i32 %and1377 to i64
  %arrayidx1379 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1378
  %324 = load i32, i32* %arrayidx1379, align 4, !tbaa !4
  %shr1381 = lshr i32 %317, 26
  %idxprom1383 = zext i32 %shr1381 to i64
  %arrayidx1384 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1383
  %325 = load i32, i32* %arrayidx1384, align 4, !tbaa !4
  %xor1355 = xor i32 %318, %xor1294
  %xor1360 = xor i32 %xor1355, %319
  %xor1365 = xor i32 %xor1360, %320
  %xor1370 = xor i32 %xor1365, %321
  %xor1375 = xor i32 %xor1370, %322
  %xor1380 = xor i32 %xor1375, %323
  %xor1385 = xor i32 %xor1380, %324
  %xor1386 = xor i32 %xor1385, %325
  %arrayidx1387 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 2
  %326 = load i32, i32* %arrayidx1387, align 4, !tbaa !4
  %xor1388 = xor i32 %xor1386, %326
  %arrayidx1389 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 3
  %327 = load i32, i32* %arrayidx1389, align 4, !tbaa !4
  %xor1390 = xor i32 %xor1386, %327
  %328 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1390) #2, !srcloc !76
  %shr1393 = lshr i32 %xor1388, 2
  %and1394 = and i32 %shr1393, 63
  %idxprom1395 = zext i32 %and1394 to i64
  %arrayidx1396 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1395
  %329 = load i32, i32* %arrayidx1396, align 4, !tbaa !4
  %shr1397 = lshr i32 %xor1388, 10
  %and1398 = and i32 %shr1397, 63
  %idxprom1399 = zext i32 %and1398 to i64
  %arrayidx1400 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1399
  %330 = load i32, i32* %arrayidx1400, align 4, !tbaa !4
  %shr1402 = lshr i32 %xor1388, 18
  %and1403 = and i32 %shr1402, 63
  %idxprom1404 = zext i32 %and1403 to i64
  %arrayidx1405 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1404
  %331 = load i32, i32* %arrayidx1405, align 4, !tbaa !4
  %shr1407 = lshr i32 %xor1388, 26
  %idxprom1409 = zext i32 %shr1407 to i64
  %arrayidx1410 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1409
  %332 = load i32, i32* %arrayidx1410, align 4, !tbaa !4
  %shr1412 = lshr i32 %328, 2
  %and1413 = and i32 %shr1412, 63
  %idxprom1414 = zext i32 %and1413 to i64
  %arrayidx1415 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1414
  %333 = load i32, i32* %arrayidx1415, align 4, !tbaa !4
  %shr1417 = lshr i32 %328, 10
  %and1418 = and i32 %shr1417, 63
  %idxprom1419 = zext i32 %and1418 to i64
  %arrayidx1420 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1419
  %334 = load i32, i32* %arrayidx1420, align 4, !tbaa !4
  %shr1422 = lshr i32 %328, 18
  %and1423 = and i32 %shr1422, 63
  %idxprom1424 = zext i32 %and1423 to i64
  %arrayidx1425 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1424
  %335 = load i32, i32* %arrayidx1425, align 4, !tbaa !4
  %shr1427 = lshr i32 %328, 26
  %idxprom1429 = zext i32 %shr1427 to i64
  %arrayidx1430 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1429
  %336 = load i32, i32* %arrayidx1430, align 4, !tbaa !4
  %xor1401 = xor i32 %329, %xor1340
  %xor1406 = xor i32 %xor1401, %330
  %xor1411 = xor i32 %xor1406, %331
  %xor1416 = xor i32 %xor1411, %332
  %xor1421 = xor i32 %xor1416, %333
  %xor1426 = xor i32 %xor1421, %334
  %xor1431 = xor i32 %xor1426, %335
  %xor1432 = xor i32 %xor1431, %336
  %337 = load i32, i32* %arraydecay9, align 4, !tbaa !4
  %xor1434 = xor i32 %xor1432, %337
  %arrayidx1435 = getelementptr inbounds %struct.DES_ks, %struct.DES_ks* %ks, i64 0, i32 0, i64 0, i32 0, i64 1
  %338 = load i32, i32* %arrayidx1435, align 4, !tbaa !4
  %xor1436 = xor i32 %xor1432, %338
  %339 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 4, i32 %xor1436) #2, !srcloc !77
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %xor1434.sink1994 = phi i32 [ %xor1434, %if.else ], [ %xor698, %if.then ]
  %.sink1991 = phi i32 [ %339, %if.else ], [ %171, %if.then ]
  %xor1386.sink = phi i32 [ %xor1386, %if.else ], [ %xor650, %if.then ]
  %l.0 = phi i32 [ %xor1432, %if.else ], [ %xor696, %if.then ]
  %shr1439 = lshr i32 %xor1434.sink1994, 2
  %and1440 = and i32 %shr1439, 63
  %idxprom1441 = zext i32 %and1440 to i64
  %arrayidx1442 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 0, i64 %idxprom1441
  %340 = load i32, i32* %arrayidx1442, align 4, !tbaa !4
  %shr1443 = lshr i32 %xor1434.sink1994, 10
  %and1444 = and i32 %shr1443, 63
  %idxprom1445 = zext i32 %and1444 to i64
  %arrayidx1446 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 2, i64 %idxprom1445
  %341 = load i32, i32* %arrayidx1446, align 4, !tbaa !4
  %shr1448 = lshr i32 %xor1434.sink1994, 18
  %and1449 = and i32 %shr1448, 63
  %idxprom1450 = zext i32 %and1449 to i64
  %arrayidx1451 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 4, i64 %idxprom1450
  %342 = load i32, i32* %arrayidx1451, align 4, !tbaa !4
  %shr1453 = lshr i32 %xor1434.sink1994, 26
  %idxprom1455 = zext i32 %shr1453 to i64
  %arrayidx1456 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 6, i64 %idxprom1455
  %343 = load i32, i32* %arrayidx1456, align 4, !tbaa !4
  %shr1458 = lshr i32 %.sink1991, 2
  %and1459 = and i32 %shr1458, 63
  %idxprom1460 = zext i32 %and1459 to i64
  %arrayidx1461 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 1, i64 %idxprom1460
  %344 = load i32, i32* %arrayidx1461, align 4, !tbaa !4
  %shr1463 = lshr i32 %.sink1991, 10
  %and1464 = and i32 %shr1463, 63
  %idxprom1465 = zext i32 %and1464 to i64
  %arrayidx1466 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 3, i64 %idxprom1465
  %345 = load i32, i32* %arrayidx1466, align 4, !tbaa !4
  %shr1468 = lshr i32 %.sink1991, 18
  %and1469 = and i32 %shr1468, 63
  %idxprom1470 = zext i32 %and1469 to i64
  %arrayidx1471 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 5, i64 %idxprom1470
  %346 = load i32, i32* %arrayidx1471, align 4, !tbaa !4
  %shr1473 = lshr i32 %.sink1991, 26
  %idxprom1475 = zext i32 %shr1473 to i64
  %arrayidx1476 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @DES_SPtrans, i64 0, i64 7, i64 %idxprom1475
  %347 = load i32, i32* %arrayidx1476, align 4, !tbaa !4
  %xor1447 = xor i32 %340, %xor1386.sink
  %xor1452 = xor i32 %xor1447, %341
  %xor1457 = xor i32 %xor1452, %342
  %xor1462 = xor i32 %xor1457, %343
  %xor1467 = xor i32 %xor1462, %344
  %xor1472 = xor i32 %xor1467, %345
  %xor1477 = xor i32 %xor1472, %346
  %xor1478 = xor i32 %xor1477, %347
  %348 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %l.0) #2, !srcloc !78
  store i32 %348, i32* %data, align 4, !tbaa !4
  %349 = tail call i32 asm "rorl $1,$0", "=r,I,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 3, i32 %xor1478) #2, !srcloc !79
  store i32 %349, i32* %arrayidx1, align 4, !tbaa !4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @DES_encrypt3(i32* nocapture noundef %data, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* %data, align 4, !tbaa !4
  %arrayidx1 = getelementptr inbounds i32, i32* %data, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %shr = lshr i32 %1, 4
  %xor = xor i32 %shr, %0
  %2 = and i32 %xor, 252645135
  %xor3 = xor i32 %2, %0
  %shl = shl nuw i32 %2, 4
  %xor4 = xor i32 %shl, %1
  %shr5 = lshr i32 %xor3, 16
  %xor4.masked = and i32 %xor4, 65535
  %3 = xor i32 %xor4.masked, %shr5
  %xor10 = xor i32 %3, %xor4
  %shl11 = shl nuw i32 %3, 16
  %xor12 = xor i32 %shl11, %xor3
  %shr13 = lshr i32 %xor10, 2
  %xor14 = xor i32 %shr13, %xor12
  %4 = and i32 %xor14, 858993459
  %xor18 = xor i32 %4, %xor12
  %shl19 = shl nuw i32 %4, 2
  %xor20 = xor i32 %shl19, %xor10
  %shr21 = lshr i32 %xor18, 8
  %xor22 = xor i32 %shr21, %xor20
  %5 = and i32 %xor22, 16711935
  %xor26 = xor i32 %5, %xor20
  %shl27 = shl nuw i32 %5, 8
  %xor28 = xor i32 %shl27, %xor18
  %shr29 = lshr i32 %xor26, 1
  %xor30 = xor i32 %shr29, %xor28
  %6 = and i32 %xor30, 1431655765
  %xor34 = xor i32 %6, %xor28
  %shl35 = shl nuw i32 %6, 1
  %xor36 = xor i32 %shl35, %xor26
  store i32 %xor34, i32* %data, align 4, !tbaa !4
  store i32 %xor36, i32* %arrayidx1, align 4, !tbaa !4
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks1, i32 noundef 1) #3
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks2, i32 noundef 0) #3
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks3, i32 noundef 1) #3
  %7 = load i32, i32* %data, align 4, !tbaa !4
  %8 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %shr42 = lshr i32 %8, 1
  %xor43 = xor i32 %shr42, %7
  %9 = and i32 %xor43, 1431655765
  %xor47 = xor i32 %9, %7
  %shl48 = shl nuw i32 %9, 1
  %xor49 = xor i32 %shl48, %8
  %shr50 = lshr i32 %xor47, 8
  %xor51 = xor i32 %shr50, %xor49
  %10 = and i32 %xor51, 16711935
  %xor55 = xor i32 %10, %xor49
  %shl56 = shl nuw i32 %10, 8
  %xor57 = xor i32 %shl56, %xor47
  %shr58 = lshr i32 %xor55, 2
  %xor59 = xor i32 %shr58, %xor57
  %11 = and i32 %xor59, 858993459
  %xor63 = xor i32 %11, %xor57
  %shl64 = shl nuw i32 %11, 2
  %xor65 = xor i32 %shl64, %xor55
  %shr66 = lshr i32 %xor63, 16
  %xor65.masked = and i32 %xor65, 65535
  %12 = xor i32 %xor65.masked, %shr66
  %xor71 = xor i32 %12, %xor65
  %shl72 = shl nuw i32 %12, 16
  %xor73 = xor i32 %shl72, %xor63
  %shr74 = lshr i32 %xor71, 4
  %xor75 = xor i32 %shr74, %xor73
  %13 = and i32 %xor75, 252645135
  %xor79 = xor i32 %13, %xor73
  %shl80 = shl nuw i32 %13, 4
  %xor81 = xor i32 %shl80, %xor71
  store i32 %xor79, i32* %data, align 4, !tbaa !4
  store i32 %xor81, i32* %arrayidx1, align 4, !tbaa !4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @DES_decrypt3(i32* nocapture noundef %data, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* %data, align 4, !tbaa !4
  %arrayidx1 = getelementptr inbounds i32, i32* %data, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %shr = lshr i32 %1, 4
  %xor = xor i32 %shr, %0
  %2 = and i32 %xor, 252645135
  %xor3 = xor i32 %2, %0
  %shl = shl nuw i32 %2, 4
  %xor4 = xor i32 %shl, %1
  %shr5 = lshr i32 %xor3, 16
  %xor4.masked = and i32 %xor4, 65535
  %3 = xor i32 %xor4.masked, %shr5
  %xor10 = xor i32 %3, %xor4
  %shl11 = shl nuw i32 %3, 16
  %xor12 = xor i32 %shl11, %xor3
  %shr13 = lshr i32 %xor10, 2
  %xor14 = xor i32 %shr13, %xor12
  %4 = and i32 %xor14, 858993459
  %xor18 = xor i32 %4, %xor12
  %shl19 = shl nuw i32 %4, 2
  %xor20 = xor i32 %shl19, %xor10
  %shr21 = lshr i32 %xor18, 8
  %xor22 = xor i32 %shr21, %xor20
  %5 = and i32 %xor22, 16711935
  %xor26 = xor i32 %5, %xor20
  %shl27 = shl nuw i32 %5, 8
  %xor28 = xor i32 %shl27, %xor18
  %shr29 = lshr i32 %xor26, 1
  %xor30 = xor i32 %shr29, %xor28
  %6 = and i32 %xor30, 1431655765
  %xor34 = xor i32 %6, %xor28
  %shl35 = shl nuw i32 %6, 1
  %xor36 = xor i32 %shl35, %xor26
  store i32 %xor34, i32* %data, align 4, !tbaa !4
  store i32 %xor36, i32* %arrayidx1, align 4, !tbaa !4
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks3, i32 noundef 0) #3
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks2, i32 noundef 1) #3
  tail call void @DES_encrypt2(i32* noundef nonnull %data, %struct.DES_ks* noundef %ks1, i32 noundef 0) #3
  %7 = load i32, i32* %data, align 4, !tbaa !4
  %8 = load i32, i32* %arrayidx1, align 4, !tbaa !4
  %shr42 = lshr i32 %8, 1
  %xor43 = xor i32 %shr42, %7
  %9 = and i32 %xor43, 1431655765
  %xor47 = xor i32 %9, %7
  %shl48 = shl nuw i32 %9, 1
  %xor49 = xor i32 %shl48, %8
  %shr50 = lshr i32 %xor47, 8
  %xor51 = xor i32 %shr50, %xor49
  %10 = and i32 %xor51, 16711935
  %xor55 = xor i32 %10, %xor49
  %shl56 = shl nuw i32 %10, 8
  %xor57 = xor i32 %shl56, %xor47
  %shr58 = lshr i32 %xor55, 2
  %xor59 = xor i32 %shr58, %xor57
  %11 = and i32 %xor59, 858993459
  %xor63 = xor i32 %11, %xor57
  %shl64 = shl nuw i32 %11, 2
  %xor65 = xor i32 %shl64, %xor55
  %shr66 = lshr i32 %xor63, 16
  %xor65.masked = and i32 %xor65, 65535
  %12 = xor i32 %xor65.masked, %shr66
  %xor71 = xor i32 %12, %xor65
  %shl72 = shl nuw i32 %12, 16
  %xor73 = xor i32 %shl72, %xor63
  %shr74 = lshr i32 %xor71, 4
  %xor75 = xor i32 %shr74, %xor73
  %13 = and i32 %xor75, 252645135
  %xor79 = xor i32 %13, %xor73
  %shl80 = shl nuw i32 %13, 4
  %xor81 = xor i32 %shl80, %xor71
  store i32 %xor79, i32* %data, align 4, !tbaa !4
  store i32 %xor81, i32* %arrayidx1, align 4, !tbaa !4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @DES_ncbc_encrypt(i8* nocapture noundef readonly %in, i8* nocapture noundef writeonly %out, i64 noundef %length, %struct.DES_ks* noundef %_schedule, [8 x i8]* nocapture noundef %ivec, i32 noundef %enc) local_unnamed_addr #0 {
entry:
  %tin = alloca [2 x i32], align 4
  %0 = bitcast [2 x i32]* %tin to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #4
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 0
  %tobool.not = icmp eq i32 %enc, 0
  %incdec.ptr195 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !80
  %conv196 = zext i8 %1 to i32
  %incdec.ptr197 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 2
  %2 = load i8, i8* %incdec.ptr195, align 1, !tbaa !80
  %conv198 = zext i8 %2 to i32
  %shl199 = shl nuw nsw i32 %conv198, 8
  %or200 = or i32 %shl199, %conv196
  %incdec.ptr201 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 3
  %3 = load i8, i8* %incdec.ptr197, align 1, !tbaa !80
  %conv202 = zext i8 %3 to i32
  %shl203 = shl nuw nsw i32 %conv202, 16
  %or204 = or i32 %or200, %shl203
  %incdec.ptr205 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 4
  %4 = load i8, i8* %incdec.ptr201, align 1, !tbaa !80
  %conv206 = zext i8 %4 to i32
  %shl207 = shl nuw i32 %conv206, 24
  %or208 = or i32 %or204, %shl207
  %incdec.ptr209 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 5
  %5 = load i8, i8* %incdec.ptr205, align 1, !tbaa !80
  %conv210 = zext i8 %5 to i32
  %incdec.ptr211 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 6
  %6 = load i8, i8* %incdec.ptr209, align 1, !tbaa !80
  %conv212 = zext i8 %6 to i32
  %shl213 = shl nuw nsw i32 %conv212, 8
  %or214 = or i32 %shl213, %conv210
  %incdec.ptr215 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 7
  %7 = load i8, i8* %incdec.ptr211, align 1, !tbaa !80
  %conv216 = zext i8 %7 to i32
  %shl217 = shl nuw nsw i32 %conv216, 16
  %or218 = or i32 %or214, %shl217
  %8 = load i8, i8* %incdec.ptr215, align 1, !tbaa !80
  %conv220 = zext i8 %8 to i32
  %shl221 = shl nuw i32 %conv220, 24
  %or222 = or i32 %or218, %shl221
  %cmp225642 = icmp sgt i64 %length, 7
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br i1 %cmp225642, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %l.0.in637 = phi i64 [ %length, %for.body.lr.ph ], [ %l.0, %for.body ]
  %tout1.0636 = phi i32 [ %or222, %for.body.lr.ph ], [ %18, %for.body ]
  %tout0.0635 = phi i32 [ %or208, %for.body.lr.ph ], [ %17, %for.body ]
  %in.addr.0634 = phi i8* [ %in, %for.body.lr.ph ], [ %incdec.ptr50, %for.body ]
  %out.addr.0633 = phi i8* [ %out, %for.body.lr.ph ], [ %incdec.ptr86, %for.body ]
  %l.0 = add nsw i64 %l.0.in637, -8
  %incdec.ptr26 = getelementptr inbounds i8, i8* %in.addr.0634, i64 1
  %9 = load i8, i8* %in.addr.0634, align 1, !tbaa !80
  %conv27 = zext i8 %9 to i32
  %incdec.ptr28 = getelementptr inbounds i8, i8* %in.addr.0634, i64 2
  %10 = load i8, i8* %incdec.ptr26, align 1, !tbaa !80
  %conv29 = zext i8 %10 to i32
  %shl30 = shl nuw nsw i32 %conv29, 8
  %or31 = or i32 %shl30, %conv27
  %incdec.ptr32 = getelementptr inbounds i8, i8* %in.addr.0634, i64 3
  %11 = load i8, i8* %incdec.ptr28, align 1, !tbaa !80
  %conv33 = zext i8 %11 to i32
  %shl34 = shl nuw nsw i32 %conv33, 16
  %or35 = or i32 %or31, %shl34
  %incdec.ptr36 = getelementptr inbounds i8, i8* %in.addr.0634, i64 4
  %12 = load i8, i8* %incdec.ptr32, align 1, !tbaa !80
  %conv37 = zext i8 %12 to i32
  %shl38 = shl nuw i32 %conv37, 24
  %or39 = or i32 %or35, %shl38
  %incdec.ptr40 = getelementptr inbounds i8, i8* %in.addr.0634, i64 5
  %13 = load i8, i8* %incdec.ptr36, align 1, !tbaa !80
  %conv41 = zext i8 %13 to i32
  %incdec.ptr42 = getelementptr inbounds i8, i8* %in.addr.0634, i64 6
  %14 = load i8, i8* %incdec.ptr40, align 1, !tbaa !80
  %conv43 = zext i8 %14 to i32
  %shl44 = shl nuw nsw i32 %conv43, 8
  %or45 = or i32 %shl44, %conv41
  %incdec.ptr46 = getelementptr inbounds i8, i8* %in.addr.0634, i64 7
  %15 = load i8, i8* %incdec.ptr42, align 1, !tbaa !80
  %conv47 = zext i8 %15 to i32
  %shl48 = shl nuw nsw i32 %conv47, 16
  %or49 = or i32 %or45, %shl48
  %incdec.ptr50 = getelementptr inbounds i8, i8* %in.addr.0634, i64 8
  %16 = load i8, i8* %incdec.ptr46, align 1, !tbaa !80
  %conv51 = zext i8 %16 to i32
  %shl52 = shl nuw i32 %conv51, 24
  %or53 = or i32 %or49, %shl52
  %xor = xor i32 %or39, %tout0.0635
  store i32 %xor, i32* %arrayidx54, align 4, !tbaa !4
  %xor55 = xor i32 %or53, %tout1.0636
  store i32 %xor55, i32* %arrayidx56, align 4, !tbaa !4
  call void @DES_encrypt1(i32* noundef nonnull %arrayidx54, %struct.DES_ks* noundef %_schedule, i32 noundef 1) #3
  %17 = load i32, i32* %arrayidx54, align 4, !tbaa !4
  %conv58 = trunc i32 %17 to i8
  %incdec.ptr59 = getelementptr inbounds i8, i8* %out.addr.0633, i64 1
  store i8 %conv58, i8* %out.addr.0633, align 1, !tbaa !80
  %shr = lshr i32 %17, 8
  %conv61 = trunc i32 %shr to i8
  %incdec.ptr62 = getelementptr inbounds i8, i8* %out.addr.0633, i64 2
  store i8 %conv61, i8* %incdec.ptr59, align 1, !tbaa !80
  %shr63 = lshr i32 %17, 16
  %conv65 = trunc i32 %shr63 to i8
  %incdec.ptr66 = getelementptr inbounds i8, i8* %out.addr.0633, i64 3
  store i8 %conv65, i8* %incdec.ptr62, align 1, !tbaa !80
  %shr67 = lshr i32 %17, 24
  %conv69 = trunc i32 %shr67 to i8
  %incdec.ptr70 = getelementptr inbounds i8, i8* %out.addr.0633, i64 4
  store i8 %conv69, i8* %incdec.ptr66, align 1, !tbaa !80
  %18 = load i32, i32* %arrayidx56, align 4, !tbaa !4
  %conv73 = trunc i32 %18 to i8
  %incdec.ptr74 = getelementptr inbounds i8, i8* %out.addr.0633, i64 5
  store i8 %conv73, i8* %incdec.ptr70, align 1, !tbaa !80
  %shr75 = lshr i32 %18, 8
  %conv77 = trunc i32 %shr75 to i8
  %incdec.ptr78 = getelementptr inbounds i8, i8* %out.addr.0633, i64 6
  store i8 %conv77, i8* %incdec.ptr74, align 1, !tbaa !80
  %shr79 = lshr i32 %18, 16
  %conv81 = trunc i32 %shr79 to i8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %out.addr.0633, i64 7
  store i8 %conv81, i8* %incdec.ptr78, align 1, !tbaa !80
  %shr83 = lshr i32 %18, 24
  %conv85 = trunc i32 %shr83 to i8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %out.addr.0633, i64 8
  store i8 %conv85, i8* %incdec.ptr82, align 1, !tbaa !80
  %cmp = icmp ugt i64 %l.0.in637, 15
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !81

for.end:                                          ; preds = %for.body, %if.then
  %out.addr.0.lcssa = phi i8* [ %out, %if.then ], [ %incdec.ptr86, %for.body ]
  %in.addr.0.lcssa = phi i8* [ %in, %if.then ], [ %incdec.ptr50, %for.body ]
  %tout0.0.lcssa = phi i32 [ %or208, %if.then ], [ %17, %for.body ]
  %tout1.0.lcssa = phi i32 [ %or222, %if.then ], [ %18, %for.body ]
  %l.0.in.lcssa = phi i64 [ %length, %if.then ], [ %l.0, %for.body ]
  %cmp88.not = icmp eq i64 %l.0.in.lcssa, 0
  br i1 %cmp88.not, label %for.end.if.end_crit_edge, label %if.then90

for.end.if.end_crit_edge:                         ; preds = %for.end
  %.pre = trunc i32 %tout0.0.lcssa to i8
  %.pre654 = lshr i32 %tout0.0.lcssa, 8
  %.pre655 = trunc i32 %.pre654 to i8
  %.pre656 = lshr i32 %tout0.0.lcssa, 16
  %.pre657 = trunc i32 %.pre656 to i8
  %.pre658 = lshr i32 %tout0.0.lcssa, 24
  %.pre659 = trunc i32 %.pre658 to i8
  %.pre660 = trunc i32 %tout1.0.lcssa to i8
  %.pre661 = lshr i32 %tout1.0.lcssa, 8
  %.pre662 = trunc i32 %.pre661 to i8
  %.pre663 = lshr i32 %tout1.0.lcssa, 16
  %.pre664 = trunc i32 %.pre663 to i8
  %.pre665 = lshr i32 %tout1.0.lcssa, 24
  %.pre666 = trunc i32 %.pre665 to i8
  br label %if.end

if.then90:                                        ; preds = %for.end
  %add.ptr = getelementptr inbounds i8, i8* %in.addr.0.lcssa, i64 %l.0.in.lcssa
  switch i64 %l.0.in.lcssa, label %sw.epilog [
    i64 1, label %sw.bb123
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
  ]

sw.bb95:                                          ; preds = %if.then90
  %incdec.ptr96 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %19 = load i8, i8* %incdec.ptr96, align 1, !tbaa !80
  %conv97 = zext i8 %19 to i32
  %shl98 = shl nuw nsw i32 %conv97, 16
  br label %sw.bb100

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %in.addr.2 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr96, %sw.bb95 ]
  %tin1.1 = phi i32 [ 0, %if.then90 ], [ %shl98, %sw.bb95 ]
  %incdec.ptr101 = getelementptr inbounds i8, i8* %in.addr.2, i64 -1
  %20 = load i8, i8* %incdec.ptr101, align 1, !tbaa !80
  %conv102 = zext i8 %20 to i32
  %shl103 = shl nuw nsw i32 %conv102, 8
  %or104 = or i32 %shl103, %tin1.1
  br label %sw.bb105

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %in.addr.3 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr101, %sw.bb100 ]
  %tin1.2 = phi i32 [ 0, %if.then90 ], [ %or104, %sw.bb100 ]
  %incdec.ptr106 = getelementptr inbounds i8, i8* %in.addr.3, i64 -1
  %21 = load i8, i8* %incdec.ptr106, align 1, !tbaa !80
  %conv107 = zext i8 %21 to i32
  %or108 = or i32 %tin1.2, %conv107
  br label %sw.bb109

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %in.addr.4 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr106, %sw.bb105 ]
  %tin1.3 = phi i32 [ 0, %if.then90 ], [ %or108, %sw.bb105 ]
  %incdec.ptr110 = getelementptr inbounds i8, i8* %in.addr.4, i64 -1
  %22 = load i8, i8* %incdec.ptr110, align 1, !tbaa !80
  %conv111 = zext i8 %22 to i32
  %shl112 = shl nuw i32 %conv111, 24
  br label %sw.bb113

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %in.addr.5 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr110, %sw.bb109 ]
  %tin0.0 = phi i32 [ 0, %if.then90 ], [ %shl112, %sw.bb109 ]
  %tin1.4 = phi i32 [ 0, %if.then90 ], [ %tin1.3, %sw.bb109 ]
  %incdec.ptr114 = getelementptr inbounds i8, i8* %in.addr.5, i64 -1
  %23 = load i8, i8* %incdec.ptr114, align 1, !tbaa !80
  %conv115 = zext i8 %23 to i32
  %shl116 = shl nuw nsw i32 %conv115, 16
  %or117 = or i32 %shl116, %tin0.0
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %in.addr.6 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr114, %sw.bb113 ]
  %tin0.1 = phi i32 [ 0, %if.then90 ], [ %or117, %sw.bb113 ]
  %tin1.5 = phi i32 [ 0, %if.then90 ], [ %tin1.4, %sw.bb113 ]
  %incdec.ptr119 = getelementptr inbounds i8, i8* %in.addr.6, i64 -1
  %24 = load i8, i8* %incdec.ptr119, align 1, !tbaa !80
  %conv120 = zext i8 %24 to i32
  %shl121 = shl nuw nsw i32 %conv120, 8
  %or122 = or i32 %shl121, %tin0.1
  br label %sw.bb123

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %in.addr.7 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr119, %sw.bb118 ]
  %tin0.2 = phi i32 [ 0, %if.then90 ], [ %or122, %sw.bb118 ]
  %tin1.6 = phi i32 [ 0, %if.then90 ], [ %tin1.5, %sw.bb118 ]
  %incdec.ptr124 = getelementptr inbounds i8, i8* %in.addr.7, i64 -1
  %25 = load i8, i8* %incdec.ptr124, align 1, !tbaa !80
  %conv125 = zext i8 %25 to i32
  %or126 = or i32 %tin0.2, %conv125
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %tin0.3 = phi i32 [ 0, %if.then90 ], [ %or126, %sw.bb123 ]
  %tin1.7 = phi i32 [ 0, %if.then90 ], [ %tin1.6, %sw.bb123 ]
  %xor127 = xor i32 %tin0.3, %tout0.0.lcssa
  %arrayidx128 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %xor127, i32* %arrayidx128, align 4, !tbaa !4
  %xor129 = xor i32 %tin1.7, %tout1.0.lcssa
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %xor129, i32* %arrayidx130, align 4, !tbaa !4
  call void @DES_encrypt1(i32* noundef nonnull %arrayidx128, %struct.DES_ks* noundef %_schedule, i32 noundef 1) #3
  %26 = load i32, i32* %arrayidx128, align 4, !tbaa !4
  %conv134 = trunc i32 %26 to i8
  %incdec.ptr135 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 1
  store i8 %conv134, i8* %out.addr.0.lcssa, align 1, !tbaa !80
  %shr136 = lshr i32 %26, 8
  %conv138 = trunc i32 %shr136 to i8
  %incdec.ptr139 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 2
  store i8 %conv138, i8* %incdec.ptr135, align 1, !tbaa !80
  %shr140 = lshr i32 %26, 16
  %conv142 = trunc i32 %shr140 to i8
  %incdec.ptr143 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 3
  store i8 %conv142, i8* %incdec.ptr139, align 1, !tbaa !80
  %shr144 = lshr i32 %26, 24
  %conv146 = trunc i32 %shr144 to i8
  %incdec.ptr147 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 4
  store i8 %conv146, i8* %incdec.ptr143, align 1, !tbaa !80
  %27 = load i32, i32* %arrayidx130, align 4, !tbaa !4
  %conv150 = trunc i32 %27 to i8
  %incdec.ptr151 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 5
  store i8 %conv150, i8* %incdec.ptr147, align 1, !tbaa !80
  %shr152 = lshr i32 %27, 8
  %conv154 = trunc i32 %shr152 to i8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 6
  store i8 %conv154, i8* %incdec.ptr151, align 1, !tbaa !80
  %shr156 = lshr i32 %27, 16
  %conv158 = trunc i32 %shr156 to i8
  %incdec.ptr159 = getelementptr inbounds i8, i8* %out.addr.0.lcssa, i64 7
  store i8 %conv158, i8* %incdec.ptr155, align 1, !tbaa !80
  %shr160 = lshr i32 %27, 24
  %conv162 = trunc i32 %shr160 to i8
  store i8 %conv162, i8* %incdec.ptr159, align 1, !tbaa !80
  br label %if.end

if.end:                                           ; preds = %for.end.if.end_crit_edge, %sw.epilog
  %conv193.pre-phi = phi i8 [ %.pre666, %for.end.if.end_crit_edge ], [ %conv162, %sw.epilog ]
  %conv189.pre-phi = phi i8 [ %.pre664, %for.end.if.end_crit_edge ], [ %conv158, %sw.epilog ]
  %conv185.pre-phi = phi i8 [ %.pre662, %for.end.if.end_crit_edge ], [ %conv154, %sw.epilog ]
  %conv181.pre-phi = phi i8 [ %.pre660, %for.end.if.end_crit_edge ], [ %conv150, %sw.epilog ]
  %conv178.pre-phi = phi i8 [ %.pre659, %for.end.if.end_crit_edge ], [ %conv146, %sw.epilog ]
  %conv174.pre-phi = phi i8 [ %.pre657, %for.end.if.end_crit_edge ], [ %conv142, %sw.epilog ]
  %conv170.pre-phi = phi i8 [ %.pre655, %for.end.if.end_crit_edge ], [ %conv138, %sw.epilog ]
  %conv166.pre-phi = phi i8 [ %.pre, %for.end.if.end_crit_edge ], [ %conv134, %sw.epilog ]
  store i8 %conv166.pre-phi, i8* %arrayidx, align 1, !tbaa !80
  store i8 %conv170.pre-phi, i8* %incdec.ptr195, align 1, !tbaa !80
  store i8 %conv174.pre-phi, i8* %incdec.ptr197, align 1, !tbaa !80
  store i8 %conv178.pre-phi, i8* %incdec.ptr201, align 1, !tbaa !80
  store i8 %conv181.pre-phi, i8* %incdec.ptr205, align 1, !tbaa !80
  store i8 %conv185.pre-phi, i8* %incdec.ptr209, align 1, !tbaa !80
  store i8 %conv189.pre-phi, i8* %incdec.ptr211, align 1, !tbaa !80
  br label %if.end408

if.else:                                          ; preds = %entry
  br i1 %cmp225642, label %for.body227.lr.ph, label %for.end295

for.body227.lr.ph:                                ; preds = %if.else
  %arrayidx242 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  br label %for.body227

for.body227:                                      ; preds = %for.body227.lr.ph, %for.body227
  %l.1.in647 = phi i64 [ %length, %for.body227.lr.ph ], [ %l.1, %for.body227 ]
  %xor1.0646 = phi i32 [ %or222, %for.body227.lr.ph ], [ %or256, %for.body227 ]
  %xor0.0645 = phi i32 [ %or208, %for.body227.lr.ph ], [ %or241, %for.body227 ]
  %in.addr.8644 = phi i8* [ %in, %for.body227.lr.ph ], [ %incdec.ptr253, %for.body227 ]
  %out.addr.1643 = phi i8* [ %out, %for.body227.lr.ph ], [ %incdec.ptr292, %for.body227 ]
  %l.1 = add nsw i64 %l.1.in647, -8
  %incdec.ptr228 = getelementptr inbounds i8, i8* %in.addr.8644, i64 1
  %28 = load i8, i8* %in.addr.8644, align 1, !tbaa !80
  %conv229 = zext i8 %28 to i32
  %incdec.ptr230 = getelementptr inbounds i8, i8* %in.addr.8644, i64 2
  %29 = load i8, i8* %incdec.ptr228, align 1, !tbaa !80
  %conv231 = zext i8 %29 to i32
  %shl232 = shl nuw nsw i32 %conv231, 8
  %or233 = or i32 %shl232, %conv229
  %incdec.ptr234 = getelementptr inbounds i8, i8* %in.addr.8644, i64 3
  %30 = load i8, i8* %incdec.ptr230, align 1, !tbaa !80
  %conv235 = zext i8 %30 to i32
  %shl236 = shl nuw nsw i32 %conv235, 16
  %or237 = or i32 %or233, %shl236
  %incdec.ptr238 = getelementptr inbounds i8, i8* %in.addr.8644, i64 4
  %31 = load i8, i8* %incdec.ptr234, align 1, !tbaa !80
  %conv239 = zext i8 %31 to i32
  %shl240 = shl nuw i32 %conv239, 24
  %or241 = or i32 %or237, %shl240
  store i32 %or241, i32* %arrayidx242, align 4, !tbaa !4
  %incdec.ptr243 = getelementptr inbounds i8, i8* %in.addr.8644, i64 5
  %32 = load i8, i8* %incdec.ptr238, align 1, !tbaa !80
  %conv244 = zext i8 %32 to i32
  %incdec.ptr245 = getelementptr inbounds i8, i8* %in.addr.8644, i64 6
  %33 = load i8, i8* %incdec.ptr243, align 1, !tbaa !80
  %conv246 = zext i8 %33 to i32
  %shl247 = shl nuw nsw i32 %conv246, 8
  %or248 = or i32 %shl247, %conv244
  %incdec.ptr249 = getelementptr inbounds i8, i8* %in.addr.8644, i64 7
  %34 = load i8, i8* %incdec.ptr245, align 1, !tbaa !80
  %conv250 = zext i8 %34 to i32
  %shl251 = shl nuw nsw i32 %conv250, 16
  %or252 = or i32 %or248, %shl251
  %incdec.ptr253 = getelementptr inbounds i8, i8* %in.addr.8644, i64 8
  %35 = load i8, i8* %incdec.ptr249, align 1, !tbaa !80
  %conv254 = zext i8 %35 to i32
  %shl255 = shl nuw i32 %conv254, 24
  %or256 = or i32 %or252, %shl255
  store i32 %or256, i32* %arrayidx257, align 4, !tbaa !4
  call void @DES_encrypt1(i32* noundef nonnull %arrayidx242, %struct.DES_ks* noundef %_schedule, i32 noundef 0) #3
  %36 = load i32, i32* %arrayidx242, align 4, !tbaa !4
  %xor260 = xor i32 %36, %xor0.0645
  %37 = load i32, i32* %arrayidx257, align 4, !tbaa !4
  %xor262 = xor i32 %37, %xor1.0646
  %conv264 = trunc i32 %xor260 to i8
  %incdec.ptr265 = getelementptr inbounds i8, i8* %out.addr.1643, i64 1
  store i8 %conv264, i8* %out.addr.1643, align 1, !tbaa !80
  %shr266 = lshr i32 %xor260, 8
  %conv268 = trunc i32 %shr266 to i8
  %incdec.ptr269 = getelementptr inbounds i8, i8* %out.addr.1643, i64 2
  store i8 %conv268, i8* %incdec.ptr265, align 1, !tbaa !80
  %shr270 = lshr i32 %xor260, 16
  %conv272 = trunc i32 %shr270 to i8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %out.addr.1643, i64 3
  store i8 %conv272, i8* %incdec.ptr269, align 1, !tbaa !80
  %shr274 = lshr i32 %xor260, 24
  %conv276 = trunc i32 %shr274 to i8
  %incdec.ptr277 = getelementptr inbounds i8, i8* %out.addr.1643, i64 4
  store i8 %conv276, i8* %incdec.ptr273, align 1, !tbaa !80
  %conv279 = trunc i32 %xor262 to i8
  %incdec.ptr280 = getelementptr inbounds i8, i8* %out.addr.1643, i64 5
  store i8 %conv279, i8* %incdec.ptr277, align 1, !tbaa !80
  %shr281 = lshr i32 %xor262, 8
  %conv283 = trunc i32 %shr281 to i8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %out.addr.1643, i64 6
  store i8 %conv283, i8* %incdec.ptr280, align 1, !tbaa !80
  %shr285 = lshr i32 %xor262, 16
  %conv287 = trunc i32 %shr285 to i8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %out.addr.1643, i64 7
  store i8 %conv287, i8* %incdec.ptr284, align 1, !tbaa !80
  %shr289 = lshr i32 %xor262, 24
  %conv291 = trunc i32 %shr289 to i8
  %incdec.ptr292 = getelementptr inbounds i8, i8* %out.addr.1643, i64 8
  store i8 %conv291, i8* %incdec.ptr288, align 1, !tbaa !80
  %cmp225 = icmp ugt i64 %l.1.in647, 15
  br i1 %cmp225, label %for.body227, label %for.end295, !llvm.loop !83

for.end295:                                       ; preds = %for.body227, %if.else
  %out.addr.1.lcssa = phi i8* [ %out, %if.else ], [ %incdec.ptr292, %for.body227 ]
  %in.addr.8.lcssa = phi i8* [ %in, %if.else ], [ %incdec.ptr253, %for.body227 ]
  %xor0.0.lcssa = phi i32 [ %or208, %if.else ], [ %or241, %for.body227 ]
  %xor1.0.lcssa = phi i32 [ %or222, %if.else ], [ %or256, %for.body227 ]
  %l.1.in.lcssa = phi i64 [ %length, %if.else ], [ %l.1, %for.body227 ]
  %cmp296.not = icmp eq i64 %l.1.in.lcssa, 0
  br i1 %cmp296.not, label %if.end376, label %if.then298

if.then298:                                       ; preds = %for.end295
  %incdec.ptr299 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 1
  %38 = load i8, i8* %in.addr.8.lcssa, align 1, !tbaa !80
  %conv300 = zext i8 %38 to i32
  %incdec.ptr301 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 2
  %39 = load i8, i8* %incdec.ptr299, align 1, !tbaa !80
  %conv302 = zext i8 %39 to i32
  %shl303 = shl nuw nsw i32 %conv302, 8
  %or304 = or i32 %shl303, %conv300
  %incdec.ptr305 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 3
  %40 = load i8, i8* %incdec.ptr301, align 1, !tbaa !80
  %conv306 = zext i8 %40 to i32
  %shl307 = shl nuw nsw i32 %conv306, 16
  %or308 = or i32 %or304, %shl307
  %incdec.ptr309 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 4
  %41 = load i8, i8* %incdec.ptr305, align 1, !tbaa !80
  %conv310 = zext i8 %41 to i32
  %shl311 = shl nuw i32 %conv310, 24
  %or312 = or i32 %or308, %shl311
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %or312, i32* %arrayidx313, align 4, !tbaa !4
  %incdec.ptr314 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 5
  %42 = load i8, i8* %incdec.ptr309, align 1, !tbaa !80
  %conv315 = zext i8 %42 to i32
  %incdec.ptr316 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 6
  %43 = load i8, i8* %incdec.ptr314, align 1, !tbaa !80
  %conv317 = zext i8 %43 to i32
  %shl318 = shl nuw nsw i32 %conv317, 8
  %or319 = or i32 %shl318, %conv315
  %incdec.ptr320 = getelementptr inbounds i8, i8* %in.addr.8.lcssa, i64 7
  %44 = load i8, i8* %incdec.ptr316, align 1, !tbaa !80
  %conv321 = zext i8 %44 to i32
  %shl322 = shl nuw nsw i32 %conv321, 16
  %or323 = or i32 %or319, %shl322
  %45 = load i8, i8* %incdec.ptr320, align 1, !tbaa !80
  %conv325 = zext i8 %45 to i32
  %shl326 = shl nuw i32 %conv325, 24
  %or327 = or i32 %or323, %shl326
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %or327, i32* %arrayidx328, align 4, !tbaa !4
  call void @DES_encrypt1(i32* noundef nonnull %arrayidx313, %struct.DES_ks* noundef %_schedule, i32 noundef 0) #3
  %46 = load i32, i32* %arrayidx313, align 4, !tbaa !4
  %xor331 = xor i32 %46, %xor0.0.lcssa
  %47 = load i32, i32* %arrayidx328, align 4, !tbaa !4
  %xor333 = xor i32 %47, %xor1.0.lcssa
  %add.ptr335 = getelementptr inbounds i8, i8* %out.addr.1.lcssa, i64 %l.1.in.lcssa
  switch i64 %l.1.in.lcssa, label %if.end376 [
    i64 1, label %sw.bb371
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
  ]

sw.bb342:                                         ; preds = %if.then298
  %shr343 = lshr i32 %xor333, 16
  %conv345 = trunc i32 %shr343 to i8
  %incdec.ptr346 = getelementptr inbounds i8, i8* %add.ptr335, i64 -1
  store i8 %conv345, i8* %incdec.ptr346, align 1, !tbaa !80
  br label %sw.bb347

sw.bb347:                                         ; preds = %if.then298, %sw.bb342
  %out.addr.3 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr346, %sw.bb342 ]
  %shr348 = lshr i32 %xor333, 8
  %conv350 = trunc i32 %shr348 to i8
  %incdec.ptr351 = getelementptr inbounds i8, i8* %out.addr.3, i64 -1
  store i8 %conv350, i8* %incdec.ptr351, align 1, !tbaa !80
  br label %sw.bb352

sw.bb352:                                         ; preds = %if.then298, %sw.bb347
  %out.addr.4 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr351, %sw.bb347 ]
  %conv354 = trunc i32 %xor333 to i8
  %incdec.ptr355 = getelementptr inbounds i8, i8* %out.addr.4, i64 -1
  store i8 %conv354, i8* %incdec.ptr355, align 1, !tbaa !80
  br label %sw.bb356

sw.bb356:                                         ; preds = %if.then298, %sw.bb352
  %out.addr.5 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr355, %sw.bb352 ]
  %shr357 = lshr i32 %xor331, 24
  %conv359 = trunc i32 %shr357 to i8
  %incdec.ptr360 = getelementptr inbounds i8, i8* %out.addr.5, i64 -1
  store i8 %conv359, i8* %incdec.ptr360, align 1, !tbaa !80
  br label %sw.bb361

sw.bb361:                                         ; preds = %if.then298, %sw.bb356
  %out.addr.6 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr360, %sw.bb356 ]
  %shr362 = lshr i32 %xor331, 16
  %conv364 = trunc i32 %shr362 to i8
  %incdec.ptr365 = getelementptr inbounds i8, i8* %out.addr.6, i64 -1
  store i8 %conv364, i8* %incdec.ptr365, align 1, !tbaa !80
  br label %sw.bb366

sw.bb366:                                         ; preds = %if.then298, %sw.bb361
  %out.addr.7 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr365, %sw.bb361 ]
  %shr367 = lshr i32 %xor331, 8
  %conv369 = trunc i32 %shr367 to i8
  %incdec.ptr370 = getelementptr inbounds i8, i8* %out.addr.7, i64 -1
  store i8 %conv369, i8* %incdec.ptr370, align 1, !tbaa !80
  br label %sw.bb371

sw.bb371:                                         ; preds = %if.then298, %sw.bb366
  %out.addr.8 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr370, %sw.bb366 ]
  %conv373 = trunc i32 %xor331 to i8
  %incdec.ptr374 = getelementptr inbounds i8, i8* %out.addr.8, i64 -1
  store i8 %conv373, i8* %incdec.ptr374, align 1, !tbaa !80
  br label %if.end376

if.end376:                                        ; preds = %if.then298, %sw.bb371, %for.end295
  %xor0.1 = phi i32 [ %xor0.0.lcssa, %for.end295 ], [ %or312, %sw.bb371 ], [ %or312, %if.then298 ]
  %xor1.1 = phi i32 [ %xor1.0.lcssa, %for.end295 ], [ %or327, %sw.bb371 ], [ %or327, %if.then298 ]
  %conv379 = trunc i32 %xor0.1 to i8
  store i8 %conv379, i8* %arrayidx, align 1, !tbaa !80
  %shr381 = lshr i32 %xor0.1, 8
  %conv383 = trunc i32 %shr381 to i8
  store i8 %conv383, i8* %incdec.ptr195, align 1, !tbaa !80
  %shr385 = lshr i32 %xor0.1, 16
  %conv387 = trunc i32 %shr385 to i8
  store i8 %conv387, i8* %incdec.ptr197, align 1, !tbaa !80
  %shr389 = lshr i32 %xor0.1, 24
  %conv391 = trunc i32 %shr389 to i8
  store i8 %conv391, i8* %incdec.ptr201, align 1, !tbaa !80
  %conv394 = trunc i32 %xor1.1 to i8
  store i8 %conv394, i8* %incdec.ptr205, align 1, !tbaa !80
  %shr396 = lshr i32 %xor1.1, 8
  %conv398 = trunc i32 %shr396 to i8
  store i8 %conv398, i8* %incdec.ptr209, align 1, !tbaa !80
  %shr400 = lshr i32 %xor1.1, 16
  %conv402 = trunc i32 %shr400 to i8
  store i8 %conv402, i8* %incdec.ptr211, align 1, !tbaa !80
  %shr404 = lshr i32 %xor1.1, 24
  %conv406 = trunc i32 %shr404 to i8
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  %conv406.sink = phi i8 [ %conv406, %if.end376 ], [ %conv193.pre-phi, %if.end ]
  store i8 %conv406.sink, i8* %incdec.ptr215, align 1, !tbaa !80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @DES_ede3_cbc_encrypt(i8* nocapture noundef readonly %input, i8* nocapture noundef writeonly %output, i64 noundef %length, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3, [8 x i8]* nocapture noundef %ivec, i32 noundef %enc) local_unnamed_addr #0 {
entry:
  %tin = alloca [2 x i32], align 4
  %0 = bitcast [2 x i32]* %tin to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #4
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 0
  %tobool.not = icmp eq i32 %enc, 0
  %incdec.ptr195 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !80
  %conv196 = zext i8 %1 to i32
  %incdec.ptr197 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 2
  %2 = load i8, i8* %incdec.ptr195, align 1, !tbaa !80
  %conv198 = zext i8 %2 to i32
  %shl199 = shl nuw nsw i32 %conv198, 8
  %or200 = or i32 %shl199, %conv196
  %incdec.ptr201 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 3
  %3 = load i8, i8* %incdec.ptr197, align 1, !tbaa !80
  %conv202 = zext i8 %3 to i32
  %shl203 = shl nuw nsw i32 %conv202, 16
  %or204 = or i32 %or200, %shl203
  %incdec.ptr205 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 4
  %4 = load i8, i8* %incdec.ptr201, align 1, !tbaa !80
  %conv206 = zext i8 %4 to i32
  %shl207 = shl nuw i32 %conv206, 24
  %or208 = or i32 %or204, %shl207
  %incdec.ptr209 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 5
  %5 = load i8, i8* %incdec.ptr205, align 1, !tbaa !80
  %conv210 = zext i8 %5 to i32
  %incdec.ptr211 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 6
  %6 = load i8, i8* %incdec.ptr209, align 1, !tbaa !80
  %conv212 = zext i8 %6 to i32
  %shl213 = shl nuw nsw i32 %conv212, 8
  %or214 = or i32 %shl213, %conv210
  %incdec.ptr215 = getelementptr inbounds [8 x i8], [8 x i8]* %ivec, i64 0, i64 7
  %7 = load i8, i8* %incdec.ptr211, align 1, !tbaa !80
  %conv216 = zext i8 %7 to i32
  %shl217 = shl nuw nsw i32 %conv216, 16
  %or218 = or i32 %or214, %shl217
  %8 = load i8, i8* %incdec.ptr215, align 1, !tbaa !80
  %conv220 = zext i8 %8 to i32
  %shl221 = shl nuw i32 %conv220, 24
  %or222 = or i32 %or218, %shl221
  %cmp225658 = icmp sgt i64 %length, 7
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br i1 %cmp225658, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %arrayidx55 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %l.0.in653 = phi i64 [ %length, %for.body.lr.ph ], [ %l.0, %for.body ]
  %out.0652 = phi i8* [ %output, %for.body.lr.ph ], [ %incdec.ptr86, %for.body ]
  %in.0651 = phi i8* [ %input, %for.body.lr.ph ], [ %incdec.ptr50, %for.body ]
  %tout1.0650 = phi i32 [ %or222, %for.body.lr.ph ], [ %18, %for.body ]
  %tout0.0649 = phi i32 [ %or208, %for.body.lr.ph ], [ %17, %for.body ]
  %l.0 = add nsw i64 %l.0.in653, -8
  %incdec.ptr26 = getelementptr inbounds i8, i8* %in.0651, i64 1
  %9 = load i8, i8* %in.0651, align 1, !tbaa !80
  %conv27 = zext i8 %9 to i32
  %incdec.ptr28 = getelementptr inbounds i8, i8* %in.0651, i64 2
  %10 = load i8, i8* %incdec.ptr26, align 1, !tbaa !80
  %conv29 = zext i8 %10 to i32
  %shl30 = shl nuw nsw i32 %conv29, 8
  %or31 = or i32 %shl30, %conv27
  %incdec.ptr32 = getelementptr inbounds i8, i8* %in.0651, i64 3
  %11 = load i8, i8* %incdec.ptr28, align 1, !tbaa !80
  %conv33 = zext i8 %11 to i32
  %shl34 = shl nuw nsw i32 %conv33, 16
  %or35 = or i32 %or31, %shl34
  %incdec.ptr36 = getelementptr inbounds i8, i8* %in.0651, i64 4
  %12 = load i8, i8* %incdec.ptr32, align 1, !tbaa !80
  %conv37 = zext i8 %12 to i32
  %shl38 = shl nuw i32 %conv37, 24
  %or39 = or i32 %or35, %shl38
  %incdec.ptr40 = getelementptr inbounds i8, i8* %in.0651, i64 5
  %13 = load i8, i8* %incdec.ptr36, align 1, !tbaa !80
  %conv41 = zext i8 %13 to i32
  %incdec.ptr42 = getelementptr inbounds i8, i8* %in.0651, i64 6
  %14 = load i8, i8* %incdec.ptr40, align 1, !tbaa !80
  %conv43 = zext i8 %14 to i32
  %shl44 = shl nuw nsw i32 %conv43, 8
  %or45 = or i32 %shl44, %conv41
  %incdec.ptr46 = getelementptr inbounds i8, i8* %in.0651, i64 7
  %15 = load i8, i8* %incdec.ptr42, align 1, !tbaa !80
  %conv47 = zext i8 %15 to i32
  %shl48 = shl nuw nsw i32 %conv47, 16
  %or49 = or i32 %or45, %shl48
  %incdec.ptr50 = getelementptr inbounds i8, i8* %in.0651, i64 8
  %16 = load i8, i8* %incdec.ptr46, align 1, !tbaa !80
  %conv51 = zext i8 %16 to i32
  %shl52 = shl nuw i32 %conv51, 24
  %or53 = or i32 %or49, %shl52
  %xor = xor i32 %or39, %tout0.0649
  %xor54 = xor i32 %or53, %tout1.0650
  store i32 %xor, i32* %arrayidx55, align 4, !tbaa !4
  store i32 %xor54, i32* %arrayidx56, align 4, !tbaa !4
  call void @DES_encrypt3(i32* noundef nonnull %arrayidx55, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) #3
  %17 = load i32, i32* %arrayidx55, align 4, !tbaa !4
  %18 = load i32, i32* %arrayidx56, align 4, !tbaa !4
  %conv59 = trunc i32 %17 to i8
  %incdec.ptr60 = getelementptr inbounds i8, i8* %out.0652, i64 1
  store i8 %conv59, i8* %out.0652, align 1, !tbaa !80
  %shr = lshr i32 %17, 8
  %conv62 = trunc i32 %shr to i8
  %incdec.ptr63 = getelementptr inbounds i8, i8* %out.0652, i64 2
  store i8 %conv62, i8* %incdec.ptr60, align 1, !tbaa !80
  %shr64 = lshr i32 %17, 16
  %conv66 = trunc i32 %shr64 to i8
  %incdec.ptr67 = getelementptr inbounds i8, i8* %out.0652, i64 3
  store i8 %conv66, i8* %incdec.ptr63, align 1, !tbaa !80
  %shr68 = lshr i32 %17, 24
  %conv70 = trunc i32 %shr68 to i8
  %incdec.ptr71 = getelementptr inbounds i8, i8* %out.0652, i64 4
  store i8 %conv70, i8* %incdec.ptr67, align 1, !tbaa !80
  %conv73 = trunc i32 %18 to i8
  %incdec.ptr74 = getelementptr inbounds i8, i8* %out.0652, i64 5
  store i8 %conv73, i8* %incdec.ptr71, align 1, !tbaa !80
  %shr75 = lshr i32 %18, 8
  %conv77 = trunc i32 %shr75 to i8
  %incdec.ptr78 = getelementptr inbounds i8, i8* %out.0652, i64 6
  store i8 %conv77, i8* %incdec.ptr74, align 1, !tbaa !80
  %shr79 = lshr i32 %18, 16
  %conv81 = trunc i32 %shr79 to i8
  %incdec.ptr82 = getelementptr inbounds i8, i8* %out.0652, i64 7
  store i8 %conv81, i8* %incdec.ptr78, align 1, !tbaa !80
  %shr83 = lshr i32 %18, 24
  %conv85 = trunc i32 %shr83 to i8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %out.0652, i64 8
  store i8 %conv85, i8* %incdec.ptr82, align 1, !tbaa !80
  %cmp = icmp ugt i64 %l.0.in653, 15
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !84

for.end:                                          ; preds = %for.body, %if.then
  %tout0.0.lcssa = phi i32 [ %or208, %if.then ], [ %17, %for.body ]
  %tout1.0.lcssa = phi i32 [ %or222, %if.then ], [ %18, %for.body ]
  %in.0.lcssa = phi i8* [ %input, %if.then ], [ %incdec.ptr50, %for.body ]
  %out.0.lcssa = phi i8* [ %output, %if.then ], [ %incdec.ptr86, %for.body ]
  %l.0.in.lcssa = phi i64 [ %length, %if.then ], [ %l.0, %for.body ]
  %cmp88.not = icmp eq i64 %l.0.in.lcssa, 0
  br i1 %cmp88.not, label %for.end.if.end_crit_edge, label %if.then90

for.end.if.end_crit_edge:                         ; preds = %for.end
  %.pre = trunc i32 %tout0.0.lcssa to i8
  %.pre670 = lshr i32 %tout0.0.lcssa, 8
  %.pre671 = trunc i32 %.pre670 to i8
  %.pre672 = lshr i32 %tout0.0.lcssa, 16
  %.pre673 = trunc i32 %.pre672 to i8
  %.pre674 = lshr i32 %tout0.0.lcssa, 24
  %.pre675 = trunc i32 %.pre674 to i8
  %.pre676 = trunc i32 %tout1.0.lcssa to i8
  %.pre677 = lshr i32 %tout1.0.lcssa, 8
  %.pre678 = trunc i32 %.pre677 to i8
  %.pre679 = lshr i32 %tout1.0.lcssa, 16
  %.pre680 = trunc i32 %.pre679 to i8
  %.pre681 = lshr i32 %tout1.0.lcssa, 24
  %.pre682 = trunc i32 %.pre681 to i8
  br label %if.end

if.then90:                                        ; preds = %for.end
  %add.ptr = getelementptr inbounds i8, i8* %in.0.lcssa, i64 %l.0.in.lcssa
  switch i64 %l.0.in.lcssa, label %sw.epilog [
    i64 1, label %sw.bb123
    i64 7, label %sw.bb95
    i64 6, label %sw.bb100
    i64 5, label %sw.bb105
    i64 4, label %sw.bb109
    i64 3, label %sw.bb113
    i64 2, label %sw.bb118
  ]

sw.bb95:                                          ; preds = %if.then90
  %incdec.ptr96 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %19 = load i8, i8* %incdec.ptr96, align 1, !tbaa !80
  %conv97 = zext i8 %19 to i32
  %shl98 = shl nuw nsw i32 %conv97, 16
  br label %sw.bb100

sw.bb100:                                         ; preds = %if.then90, %sw.bb95
  %tin1.1 = phi i32 [ 0, %if.then90 ], [ %shl98, %sw.bb95 ]
  %in.2 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr96, %sw.bb95 ]
  %incdec.ptr101 = getelementptr inbounds i8, i8* %in.2, i64 -1
  %20 = load i8, i8* %incdec.ptr101, align 1, !tbaa !80
  %conv102 = zext i8 %20 to i32
  %shl103 = shl nuw nsw i32 %conv102, 8
  %or104 = or i32 %shl103, %tin1.1
  br label %sw.bb105

sw.bb105:                                         ; preds = %if.then90, %sw.bb100
  %tin1.2 = phi i32 [ 0, %if.then90 ], [ %or104, %sw.bb100 ]
  %in.3 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr101, %sw.bb100 ]
  %incdec.ptr106 = getelementptr inbounds i8, i8* %in.3, i64 -1
  %21 = load i8, i8* %incdec.ptr106, align 1, !tbaa !80
  %conv107 = zext i8 %21 to i32
  %or108 = or i32 %tin1.2, %conv107
  br label %sw.bb109

sw.bb109:                                         ; preds = %if.then90, %sw.bb105
  %tin1.3 = phi i32 [ 0, %if.then90 ], [ %or108, %sw.bb105 ]
  %in.4 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr106, %sw.bb105 ]
  %incdec.ptr110 = getelementptr inbounds i8, i8* %in.4, i64 -1
  %22 = load i8, i8* %incdec.ptr110, align 1, !tbaa !80
  %conv111 = zext i8 %22 to i32
  %shl112 = shl nuw i32 %conv111, 24
  br label %sw.bb113

sw.bb113:                                         ; preds = %if.then90, %sw.bb109
  %tin0.0 = phi i32 [ 0, %if.then90 ], [ %shl112, %sw.bb109 ]
  %tin1.4 = phi i32 [ 0, %if.then90 ], [ %tin1.3, %sw.bb109 ]
  %in.5 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr110, %sw.bb109 ]
  %incdec.ptr114 = getelementptr inbounds i8, i8* %in.5, i64 -1
  %23 = load i8, i8* %incdec.ptr114, align 1, !tbaa !80
  %conv115 = zext i8 %23 to i32
  %shl116 = shl nuw nsw i32 %conv115, 16
  %or117 = or i32 %shl116, %tin0.0
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.then90, %sw.bb113
  %tin0.1 = phi i32 [ 0, %if.then90 ], [ %or117, %sw.bb113 ]
  %tin1.5 = phi i32 [ 0, %if.then90 ], [ %tin1.4, %sw.bb113 ]
  %in.6 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr114, %sw.bb113 ]
  %incdec.ptr119 = getelementptr inbounds i8, i8* %in.6, i64 -1
  %24 = load i8, i8* %incdec.ptr119, align 1, !tbaa !80
  %conv120 = zext i8 %24 to i32
  %shl121 = shl nuw nsw i32 %conv120, 8
  %or122 = or i32 %shl121, %tin0.1
  br label %sw.bb123

sw.bb123:                                         ; preds = %if.then90, %sw.bb118
  %tin0.2 = phi i32 [ 0, %if.then90 ], [ %or122, %sw.bb118 ]
  %tin1.6 = phi i32 [ 0, %if.then90 ], [ %tin1.5, %sw.bb118 ]
  %in.7 = phi i8* [ %add.ptr, %if.then90 ], [ %incdec.ptr119, %sw.bb118 ]
  %incdec.ptr124 = getelementptr inbounds i8, i8* %in.7, i64 -1
  %25 = load i8, i8* %incdec.ptr124, align 1, !tbaa !80
  %conv125 = zext i8 %25 to i32
  %or126 = or i32 %tin0.2, %conv125
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb123, %if.then90
  %tin0.3 = phi i32 [ 0, %if.then90 ], [ %or126, %sw.bb123 ]
  %tin1.7 = phi i32 [ 0, %if.then90 ], [ %tin1.6, %sw.bb123 ]
  %xor127 = xor i32 %tin0.3, %tout0.0.lcssa
  %xor128 = xor i32 %tin1.7, %tout1.0.lcssa
  %arrayidx129 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %xor127, i32* %arrayidx129, align 4, !tbaa !4
  %arrayidx130 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %xor128, i32* %arrayidx130, align 4, !tbaa !4
  call void @DES_encrypt3(i32* noundef nonnull %arrayidx129, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) #3
  %26 = load i32, i32* %arrayidx129, align 4, !tbaa !4
  %27 = load i32, i32* %arrayidx130, align 4, !tbaa !4
  %conv135 = trunc i32 %26 to i8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 1
  store i8 %conv135, i8* %out.0.lcssa, align 1, !tbaa !80
  %shr137 = lshr i32 %26, 8
  %conv139 = trunc i32 %shr137 to i8
  %incdec.ptr140 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 2
  store i8 %conv139, i8* %incdec.ptr136, align 1, !tbaa !80
  %shr141 = lshr i32 %26, 16
  %conv143 = trunc i32 %shr141 to i8
  %incdec.ptr144 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 3
  store i8 %conv143, i8* %incdec.ptr140, align 1, !tbaa !80
  %shr145 = lshr i32 %26, 24
  %conv147 = trunc i32 %shr145 to i8
  %incdec.ptr148 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 4
  store i8 %conv147, i8* %incdec.ptr144, align 1, !tbaa !80
  %conv150 = trunc i32 %27 to i8
  %incdec.ptr151 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 5
  store i8 %conv150, i8* %incdec.ptr148, align 1, !tbaa !80
  %shr152 = lshr i32 %27, 8
  %conv154 = trunc i32 %shr152 to i8
  %incdec.ptr155 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 6
  store i8 %conv154, i8* %incdec.ptr151, align 1, !tbaa !80
  %shr156 = lshr i32 %27, 16
  %conv158 = trunc i32 %shr156 to i8
  %incdec.ptr159 = getelementptr inbounds i8, i8* %out.0.lcssa, i64 7
  store i8 %conv158, i8* %incdec.ptr155, align 1, !tbaa !80
  %shr160 = lshr i32 %27, 24
  %conv162 = trunc i32 %shr160 to i8
  store i8 %conv162, i8* %incdec.ptr159, align 1, !tbaa !80
  br label %if.end

if.end:                                           ; preds = %for.end.if.end_crit_edge, %sw.epilog
  %conv193.pre-phi = phi i8 [ %.pre682, %for.end.if.end_crit_edge ], [ %conv162, %sw.epilog ]
  %conv189.pre-phi = phi i8 [ %.pre680, %for.end.if.end_crit_edge ], [ %conv158, %sw.epilog ]
  %conv185.pre-phi = phi i8 [ %.pre678, %for.end.if.end_crit_edge ], [ %conv154, %sw.epilog ]
  %conv181.pre-phi = phi i8 [ %.pre676, %for.end.if.end_crit_edge ], [ %conv150, %sw.epilog ]
  %conv178.pre-phi = phi i8 [ %.pre675, %for.end.if.end_crit_edge ], [ %conv147, %sw.epilog ]
  %conv174.pre-phi = phi i8 [ %.pre673, %for.end.if.end_crit_edge ], [ %conv143, %sw.epilog ]
  %conv170.pre-phi = phi i8 [ %.pre671, %for.end.if.end_crit_edge ], [ %conv139, %sw.epilog ]
  %conv166.pre-phi = phi i8 [ %.pre, %for.end.if.end_crit_edge ], [ %conv135, %sw.epilog ]
  store i8 %conv166.pre-phi, i8* %arrayidx, align 1, !tbaa !80
  store i8 %conv170.pre-phi, i8* %incdec.ptr195, align 1, !tbaa !80
  store i8 %conv174.pre-phi, i8* %incdec.ptr197, align 1, !tbaa !80
  store i8 %conv178.pre-phi, i8* %incdec.ptr201, align 1, !tbaa !80
  store i8 %conv181.pre-phi, i8* %incdec.ptr205, align 1, !tbaa !80
  store i8 %conv185.pre-phi, i8* %incdec.ptr209, align 1, !tbaa !80
  store i8 %conv189.pre-phi, i8* %incdec.ptr211, align 1, !tbaa !80
  br label %if.end408

if.else:                                          ; preds = %entry
  br i1 %cmp225658, label %for.body227.lr.ph, label %for.end295

for.body227.lr.ph:                                ; preds = %if.else
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  br label %for.body227

for.body227:                                      ; preds = %for.body227.lr.ph, %for.body227
  %l.1.in663 = phi i64 [ %length, %for.body227.lr.ph ], [ %l.1, %for.body227 ]
  %out.1662 = phi i8* [ %output, %for.body227.lr.ph ], [ %incdec.ptr292, %for.body227 ]
  %in.8661 = phi i8* [ %input, %for.body227.lr.ph ], [ %incdec.ptr252, %for.body227 ]
  %xor1.0660 = phi i32 [ %or222, %for.body227.lr.ph ], [ %or255, %for.body227 ]
  %xor0.0659 = phi i32 [ %or208, %for.body227.lr.ph ], [ %or241, %for.body227 ]
  %l.1 = add nsw i64 %l.1.in663, -8
  %incdec.ptr228 = getelementptr inbounds i8, i8* %in.8661, i64 1
  %28 = load i8, i8* %in.8661, align 1, !tbaa !80
  %conv229 = zext i8 %28 to i32
  %incdec.ptr230 = getelementptr inbounds i8, i8* %in.8661, i64 2
  %29 = load i8, i8* %incdec.ptr228, align 1, !tbaa !80
  %conv231 = zext i8 %29 to i32
  %shl232 = shl nuw nsw i32 %conv231, 8
  %or233 = or i32 %shl232, %conv229
  %incdec.ptr234 = getelementptr inbounds i8, i8* %in.8661, i64 3
  %30 = load i8, i8* %incdec.ptr230, align 1, !tbaa !80
  %conv235 = zext i8 %30 to i32
  %shl236 = shl nuw nsw i32 %conv235, 16
  %or237 = or i32 %or233, %shl236
  %incdec.ptr238 = getelementptr inbounds i8, i8* %in.8661, i64 4
  %31 = load i8, i8* %incdec.ptr234, align 1, !tbaa !80
  %conv239 = zext i8 %31 to i32
  %shl240 = shl nuw i32 %conv239, 24
  %or241 = or i32 %or237, %shl240
  %incdec.ptr242 = getelementptr inbounds i8, i8* %in.8661, i64 5
  %32 = load i8, i8* %incdec.ptr238, align 1, !tbaa !80
  %conv243 = zext i8 %32 to i32
  %incdec.ptr244 = getelementptr inbounds i8, i8* %in.8661, i64 6
  %33 = load i8, i8* %incdec.ptr242, align 1, !tbaa !80
  %conv245 = zext i8 %33 to i32
  %shl246 = shl nuw nsw i32 %conv245, 8
  %or247 = or i32 %shl246, %conv243
  %incdec.ptr248 = getelementptr inbounds i8, i8* %in.8661, i64 7
  %34 = load i8, i8* %incdec.ptr244, align 1, !tbaa !80
  %conv249 = zext i8 %34 to i32
  %shl250 = shl nuw nsw i32 %conv249, 16
  %or251 = or i32 %or247, %shl250
  %incdec.ptr252 = getelementptr inbounds i8, i8* %in.8661, i64 8
  %35 = load i8, i8* %incdec.ptr248, align 1, !tbaa !80
  %conv253 = zext i8 %35 to i32
  %shl254 = shl nuw i32 %conv253, 24
  %or255 = or i32 %or251, %shl254
  store i32 %or241, i32* %arrayidx256, align 4, !tbaa !4
  store i32 %or255, i32* %arrayidx257, align 4, !tbaa !4
  call void @DES_decrypt3(i32* noundef nonnull %arrayidx256, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) #3
  %36 = load i32, i32* %arrayidx256, align 4, !tbaa !4
  %37 = load i32, i32* %arrayidx257, align 4, !tbaa !4
  %xor261 = xor i32 %36, %xor0.0659
  %xor262 = xor i32 %37, %xor1.0660
  %conv264 = trunc i32 %xor261 to i8
  %incdec.ptr265 = getelementptr inbounds i8, i8* %out.1662, i64 1
  store i8 %conv264, i8* %out.1662, align 1, !tbaa !80
  %shr266 = lshr i32 %xor261, 8
  %conv268 = trunc i32 %shr266 to i8
  %incdec.ptr269 = getelementptr inbounds i8, i8* %out.1662, i64 2
  store i8 %conv268, i8* %incdec.ptr265, align 1, !tbaa !80
  %shr270 = lshr i32 %xor261, 16
  %conv272 = trunc i32 %shr270 to i8
  %incdec.ptr273 = getelementptr inbounds i8, i8* %out.1662, i64 3
  store i8 %conv272, i8* %incdec.ptr269, align 1, !tbaa !80
  %shr274 = lshr i32 %xor261, 24
  %conv276 = trunc i32 %shr274 to i8
  %incdec.ptr277 = getelementptr inbounds i8, i8* %out.1662, i64 4
  store i8 %conv276, i8* %incdec.ptr273, align 1, !tbaa !80
  %conv279 = trunc i32 %xor262 to i8
  %incdec.ptr280 = getelementptr inbounds i8, i8* %out.1662, i64 5
  store i8 %conv279, i8* %incdec.ptr277, align 1, !tbaa !80
  %shr281 = lshr i32 %xor262, 8
  %conv283 = trunc i32 %shr281 to i8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %out.1662, i64 6
  store i8 %conv283, i8* %incdec.ptr280, align 1, !tbaa !80
  %shr285 = lshr i32 %xor262, 16
  %conv287 = trunc i32 %shr285 to i8
  %incdec.ptr288 = getelementptr inbounds i8, i8* %out.1662, i64 7
  store i8 %conv287, i8* %incdec.ptr284, align 1, !tbaa !80
  %shr289 = lshr i32 %xor262, 24
  %conv291 = trunc i32 %shr289 to i8
  %incdec.ptr292 = getelementptr inbounds i8, i8* %out.1662, i64 8
  store i8 %conv291, i8* %incdec.ptr288, align 1, !tbaa !80
  %cmp225 = icmp ugt i64 %l.1.in663, 15
  br i1 %cmp225, label %for.body227, label %for.end295, !llvm.loop !85

for.end295:                                       ; preds = %for.body227, %if.else
  %xor0.0.lcssa = phi i32 [ %or208, %if.else ], [ %or241, %for.body227 ]
  %xor1.0.lcssa = phi i32 [ %or222, %if.else ], [ %or255, %for.body227 ]
  %in.8.lcssa = phi i8* [ %input, %if.else ], [ %incdec.ptr252, %for.body227 ]
  %out.1.lcssa = phi i8* [ %output, %if.else ], [ %incdec.ptr292, %for.body227 ]
  %l.1.in.lcssa = phi i64 [ %length, %if.else ], [ %l.1, %for.body227 ]
  %cmp296.not = icmp eq i64 %l.1.in.lcssa, 0
  br i1 %cmp296.not, label %if.end376, label %if.then298

if.then298:                                       ; preds = %for.end295
  %incdec.ptr299 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 1
  %38 = load i8, i8* %in.8.lcssa, align 1, !tbaa !80
  %conv300 = zext i8 %38 to i32
  %incdec.ptr301 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 2
  %39 = load i8, i8* %incdec.ptr299, align 1, !tbaa !80
  %conv302 = zext i8 %39 to i32
  %shl303 = shl nuw nsw i32 %conv302, 8
  %or304 = or i32 %shl303, %conv300
  %incdec.ptr305 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 3
  %40 = load i8, i8* %incdec.ptr301, align 1, !tbaa !80
  %conv306 = zext i8 %40 to i32
  %shl307 = shl nuw nsw i32 %conv306, 16
  %or308 = or i32 %or304, %shl307
  %incdec.ptr309 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 4
  %41 = load i8, i8* %incdec.ptr305, align 1, !tbaa !80
  %conv310 = zext i8 %41 to i32
  %shl311 = shl nuw i32 %conv310, 24
  %or312 = or i32 %or308, %shl311
  %incdec.ptr313 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 5
  %42 = load i8, i8* %incdec.ptr309, align 1, !tbaa !80
  %conv314 = zext i8 %42 to i32
  %incdec.ptr315 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 6
  %43 = load i8, i8* %incdec.ptr313, align 1, !tbaa !80
  %conv316 = zext i8 %43 to i32
  %shl317 = shl nuw nsw i32 %conv316, 8
  %or318 = or i32 %shl317, %conv314
  %incdec.ptr319 = getelementptr inbounds i8, i8* %in.8.lcssa, i64 7
  %44 = load i8, i8* %incdec.ptr315, align 1, !tbaa !80
  %conv320 = zext i8 %44 to i32
  %shl321 = shl nuw nsw i32 %conv320, 16
  %or322 = or i32 %or318, %shl321
  %45 = load i8, i8* %incdec.ptr319, align 1, !tbaa !80
  %conv324 = zext i8 %45 to i32
  %shl325 = shl nuw i32 %conv324, 24
  %or326 = or i32 %or322, %shl325
  %arrayidx327 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 0
  store i32 %or312, i32* %arrayidx327, align 4, !tbaa !4
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %tin, i64 0, i64 1
  store i32 %or326, i32* %arrayidx328, align 4, !tbaa !4
  call void @DES_decrypt3(i32* noundef nonnull %arrayidx327, %struct.DES_ks* noundef %ks1, %struct.DES_ks* noundef %ks2, %struct.DES_ks* noundef %ks3) #3
  %46 = load i32, i32* %arrayidx327, align 4, !tbaa !4
  %47 = load i32, i32* %arrayidx328, align 4, !tbaa !4
  %xor332 = xor i32 %46, %xor0.0.lcssa
  %xor333 = xor i32 %47, %xor1.0.lcssa
  %add.ptr335 = getelementptr inbounds i8, i8* %out.1.lcssa, i64 %l.1.in.lcssa
  switch i64 %l.1.in.lcssa, label %if.end376 [
    i64 1, label %sw.bb371
    i64 7, label %sw.bb342
    i64 6, label %sw.bb347
    i64 5, label %sw.bb352
    i64 4, label %sw.bb356
    i64 3, label %sw.bb361
    i64 2, label %sw.bb366
  ]

sw.bb342:                                         ; preds = %if.then298
  %shr343 = lshr i32 %xor333, 16
  %conv345 = trunc i32 %shr343 to i8
  %incdec.ptr346 = getelementptr inbounds i8, i8* %add.ptr335, i64 -1
  store i8 %conv345, i8* %incdec.ptr346, align 1, !tbaa !80
  br label %sw.bb347

sw.bb347:                                         ; preds = %if.then298, %sw.bb342
  %out.3 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr346, %sw.bb342 ]
  %shr348 = lshr i32 %xor333, 8
  %conv350 = trunc i32 %shr348 to i8
  %incdec.ptr351 = getelementptr inbounds i8, i8* %out.3, i64 -1
  store i8 %conv350, i8* %incdec.ptr351, align 1, !tbaa !80
  br label %sw.bb352

sw.bb352:                                         ; preds = %if.then298, %sw.bb347
  %out.4 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr351, %sw.bb347 ]
  %conv354 = trunc i32 %xor333 to i8
  %incdec.ptr355 = getelementptr inbounds i8, i8* %out.4, i64 -1
  store i8 %conv354, i8* %incdec.ptr355, align 1, !tbaa !80
  br label %sw.bb356

sw.bb356:                                         ; preds = %if.then298, %sw.bb352
  %out.5 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr355, %sw.bb352 ]
  %shr357 = lshr i32 %xor332, 24
  %conv359 = trunc i32 %shr357 to i8
  %incdec.ptr360 = getelementptr inbounds i8, i8* %out.5, i64 -1
  store i8 %conv359, i8* %incdec.ptr360, align 1, !tbaa !80
  br label %sw.bb361

sw.bb361:                                         ; preds = %if.then298, %sw.bb356
  %out.6 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr360, %sw.bb356 ]
  %shr362 = lshr i32 %xor332, 16
  %conv364 = trunc i32 %shr362 to i8
  %incdec.ptr365 = getelementptr inbounds i8, i8* %out.6, i64 -1
  store i8 %conv364, i8* %incdec.ptr365, align 1, !tbaa !80
  br label %sw.bb366

sw.bb366:                                         ; preds = %if.then298, %sw.bb361
  %out.7 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr365, %sw.bb361 ]
  %shr367 = lshr i32 %xor332, 8
  %conv369 = trunc i32 %shr367 to i8
  %incdec.ptr370 = getelementptr inbounds i8, i8* %out.7, i64 -1
  store i8 %conv369, i8* %incdec.ptr370, align 1, !tbaa !80
  br label %sw.bb371

sw.bb371:                                         ; preds = %if.then298, %sw.bb366
  %out.8 = phi i8* [ %add.ptr335, %if.then298 ], [ %incdec.ptr370, %sw.bb366 ]
  %conv373 = trunc i32 %xor332 to i8
  %incdec.ptr374 = getelementptr inbounds i8, i8* %out.8, i64 -1
  store i8 %conv373, i8* %incdec.ptr374, align 1, !tbaa !80
  br label %if.end376

if.end376:                                        ; preds = %if.then298, %sw.bb371, %for.end295
  %xor0.1 = phi i32 [ %xor0.0.lcssa, %for.end295 ], [ %or312, %sw.bb371 ], [ %or312, %if.then298 ]
  %xor1.1 = phi i32 [ %xor1.0.lcssa, %for.end295 ], [ %or326, %sw.bb371 ], [ %or326, %if.then298 ]
  %conv379 = trunc i32 %xor0.1 to i8
  store i8 %conv379, i8* %arrayidx, align 1, !tbaa !80
  %shr381 = lshr i32 %xor0.1, 8
  %conv383 = trunc i32 %shr381 to i8
  store i8 %conv383, i8* %incdec.ptr195, align 1, !tbaa !80
  %shr385 = lshr i32 %xor0.1, 16
  %conv387 = trunc i32 %shr385 to i8
  store i8 %conv387, i8* %incdec.ptr197, align 1, !tbaa !80
  %shr389 = lshr i32 %xor0.1, 24
  %conv391 = trunc i32 %shr389 to i8
  store i8 %conv391, i8* %incdec.ptr201, align 1, !tbaa !80
  %conv394 = trunc i32 %xor1.1 to i8
  store i8 %conv394, i8* %incdec.ptr205, align 1, !tbaa !80
  %shr396 = lshr i32 %xor1.1, 8
  %conv398 = trunc i32 %shr396 to i8
  store i8 %conv398, i8* %incdec.ptr209, align 1, !tbaa !80
  %shr400 = lshr i32 %xor1.1, 16
  %conv402 = trunc i32 %shr400 to i8
  store i8 %conv402, i8* %incdec.ptr211, align 1, !tbaa !80
  %shr404 = lshr i32 %xor1.1, 24
  %conv406 = trunc i32 %shr404 to i8
  br label %if.end408

if.end408:                                        ; preds = %if.end376, %if.end
  %conv406.sink = phi i8 [ %conv406, %if.end376 ], [ %conv193.pre-phi, %if.end ]
  store i8 %conv406.sink, i8* %incdec.ptr215, align 1, !tbaa !80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #4
  ret void
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind readnone }
attributes #3 = { nobuiltin "no-builtins" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{!"clang version 14.0.0"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{i64 2148179511}
!9 = !{i64 2148179867}
!10 = !{i64 2148180757}
!11 = !{i64 2148181646}
!12 = !{i64 2148182535}
!13 = !{i64 2148183424}
!14 = !{i64 2148184313}
!15 = !{i64 2148185206}
!16 = !{i64 2148186099}
!17 = !{i64 2148186992}
!18 = !{i64 2148187885}
!19 = !{i64 2148188778}
!20 = !{i64 2148189671}
!21 = !{i64 2148190564}
!22 = !{i64 2148191457}
!23 = !{i64 2148192350}
!24 = !{i64 2148193243}
!25 = !{i64 2148194136}
!26 = !{i64 2148195029}
!27 = !{i64 2148195922}
!28 = !{i64 2148196815}
!29 = !{i64 2148197708}
!30 = !{i64 2148198601}
!31 = !{i64 2148199494}
!32 = !{i64 2148200387}
!33 = !{i64 2148201280}
!34 = !{i64 2148202173}
!35 = !{i64 2148203066}
!36 = !{i64 2148203959}
!37 = !{i64 2148204848}
!38 = !{i64 2148205737}
!39 = !{i64 2148206626}
!40 = !{i64 2148207515}
!41 = !{i64 2148208404}
!42 = !{i64 2148208759}
!43 = !{i64 2148209114}
!44 = !{i64 2148210282}
!45 = !{i64 2148210638}
!46 = !{i64 2148211528}
!47 = !{i64 2148212417}
!48 = !{i64 2148213306}
!49 = !{i64 2148214195}
!50 = !{i64 2148215084}
!51 = !{i64 2148215977}
!52 = !{i64 2148216870}
!53 = !{i64 2148217763}
!54 = !{i64 2148218656}
!55 = !{i64 2148219549}
!56 = !{i64 2148220442}
!57 = !{i64 2148221335}
!58 = !{i64 2148222228}
!59 = !{i64 2148223121}
!60 = !{i64 2148224014}
!61 = !{i64 2148224907}
!62 = !{i64 2148225800}
!63 = !{i64 2148226693}
!64 = !{i64 2148227586}
!65 = !{i64 2148228479}
!66 = !{i64 2148229372}
!67 = !{i64 2148230265}
!68 = !{i64 2148231158}
!69 = !{i64 2148232051}
!70 = !{i64 2148232944}
!71 = !{i64 2148233837}
!72 = !{i64 2148234730}
!73 = !{i64 2148235619}
!74 = !{i64 2148236508}
!75 = !{i64 2148237397}
!76 = !{i64 2148238286}
!77 = !{i64 2148239175}
!78 = !{i64 2148239530}
!79 = !{i64 2148239885}
!80 = !{!6, !6, i64 0}
!81 = distinct !{!81, !82}
!82 = !{!"llvm.loop.mustprogress"}
!83 = distinct !{!83, !82}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !82}
