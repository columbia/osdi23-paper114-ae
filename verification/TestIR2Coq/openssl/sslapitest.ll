; ModuleID = 'test/sslapitest.c'
source_filename = "test/sslapitest.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.options_st = type { i8*, i32, i32, i8* }
%struct.ossl_lib_ctx_st = type opaque
%struct.ossl_provider_st = type opaque
%struct.evp_pkey_st = type opaque
%struct.x509_st = type opaque
%struct.ssl_session_st = type { i32, i64, [64 x i8], [512 x i8], i64, [32 x i8], i64, [32 x i8], i8*, i8*, i32, %struct.x509_st*, %struct.stack_st_X509*, i64, i32, i64, i64, i64, i32, i32, %struct.ssl_cipher_st*, i64, i32, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %struct.anon.1, i8*, i8*, i64, i32, %struct.ssl_ctx_st*, i8* }
%struct.stack_st_X509 = type opaque
%struct.ssl_cipher_st = type { i32, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.crypto_ex_data_st = type { %struct.ossl_lib_ctx_st*, %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.anon.1 = type { i8*, i8*, i64, i64, i32, i32, i8*, i64, i8 }
%struct.ssl_ctx_st = type { %struct.ossl_lib_ctx_st*, %struct.ssl_method_st*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i64, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, %struct.anon.2, i32, i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, i32 (%struct.ssl_st*, i8*, i32*)*, i32 (%struct.ssl_st*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i64*)*, i32 (%struct.ssl_st*, i8*, i64)*, %struct.crypto_ex_data_st, %struct.evp_md_st*, %struct.evp_md_st*, %struct.stack_st_X509*, %struct.stack_st_SSL_COMP*, void (%struct.ssl_st*, i32, i32)*, %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME*, i64, i32, i32, i32, i64, %struct.cert_st*, i32, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, i64, [32 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*, i32*)*, %struct.X509_VERIFY_PARAM_st*, i32, %struct.ctlog_store_st*, i32 (%struct.ct_policy_eval_ctx_st*, %struct.stack_st_SCT*, i8*)*, i8*, i64, i64, i64, i64, %struct.engine_st*, i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %struct.anon.3, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)*, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)*, %struct.srp_ctx_st, %struct.dane_ctx_st, %struct.stack_st_SRTP_PROTECTION_PROFILE*, i32 (%struct.ssl_st*, i32)*, i8*, void (%struct.ssl_st*, i8*)*, i32, i32, i64 (%struct.ssl_st*, i32, i64, i8*)*, i8*, i64, i32 (%struct.ssl_st*, i8*)*, i32 (%struct.ssl_st*, %struct.ssl_session_st*, i8*, i64, i32, i8*)*, i8*, i64, i32 (%struct.ssl_st*, i8*)*, i8*, i32, i32 (%struct.ssl_st*, i8*)*, i8*, i8*, [14 x i32], [24 x %struct.evp_cipher_st*], [14 x %struct.evp_md_st*], [14 x i64], %struct.sigalg_lookup_st*, %struct.tls_group_info_st*, i64, i64, i32, i32, i32, i32 }
%struct.ssl_method_st = type { i32, i32, i64, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64, i64*)*, i32 (%struct.ssl_st*, i8*, i64, i64*)*, i32 (%struct.ssl_st*, i8*, i64, i64*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32)*, i32 (%struct.ssl_st*, i32, i32*, i8*, i64, i32, i64*)*, i32 (%struct.ssl_st*, i32, i8*, i64, i64*)*, i32 (%struct.ssl_st*)*, i64 (%struct.ssl_st*, i32, i64, i8*)*, i64 (%struct.ssl_ctx_st*, i32, i64, i8*)*, %struct.ssl_cipher_st* (i8*)*, i32 (%struct.ssl_cipher_st*, %struct.wpacket_st*, i64*)*, i64 (%struct.ssl_st*)*, i32 ()*, %struct.ssl_cipher_st* (i32)*, i64 ()*, %struct.ssl3_enc_method*, i32 ()*, i64 (%struct.ssl_st*, i32, void ()*)*, i64 (%struct.ssl_ctx_st*, i32, void ()*)* }
%struct.ssl_st = type { i32, %struct.ssl_method_st*, %struct.bio_st*, %struct.bio_st*, %struct.bio_st*, i32, {}*, i32, i32, i32, i32, %struct.ossl_statem_st, i32, %struct.buf_mem_st*, i8*, i64, i64, %struct.anon, %struct.dtls1_state_st*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, %struct.X509_VERIFY_PARAM_st*, %struct.ssl_dane_st, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER*, i32, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], %struct.evp_cipher_ctx_st*, [16 x i8], %struct.evp_md_ctx_st*, %struct.comp_ctx_st*, %struct.comp_ctx_st*, %struct.evp_cipher_ctx_st*, [16 x i8], %struct.evp_md_ctx_st*, %struct.cert_st*, [64 x i8], i64, i32, i64, [32 x i8], %struct.ssl_session_st*, %struct.ssl_session_st*, i8*, i64, i32 (%struct.ssl_st*, i8*, i32*)*, [32 x i8], i64, i32, i32 (i32, %struct.x509_store_ctx_st*)*, void (%struct.ssl_st*, i32, i32)*, i32, i32, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)*, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)*, %struct.ssl_ctx_st*, %struct.stack_st_X509*, i64, %struct.crypto_ex_data_st, %struct.stack_st_X509_NAME*, %struct.stack_st_X509_NAME*, i32, i64, i32, i32, i32, i64, i32, i32, i64, i64, i64, %struct.anon.4, %struct.CLIENTHELLO_MSG*, i32, i32 (%struct.ct_policy_eval_ctx_st*, %struct.stack_st_SCT*, i8*)*, i8*, %struct.stack_st_SCT*, i32, %struct.ssl_ctx_st*, %struct.stack_st_SRTP_PROTECTION_PROFILE*, %struct.srtp_protection_profile_st*, i32, i32, i32, i32, i8*, i64, i32, %struct.evp_md_ctx_st*, %struct.srp_ctx_st, i32 (%struct.ssl_st*, i32)*, %struct.record_layer_st, i32 (i8*, i32, i32, i8*)*, i8*, %struct.async_job_st*, %struct.async_wait_ctx_st*, i64, i32, i32, i32, i64 (%struct.ssl_st*, i32, i64, i8*)*, i8*, i64, i8*, i64, i64, i64, i32 (%struct.ssl_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i8*, %struct.sigalg_lookup_st**, i64 }
%struct.bio_st = type opaque
%struct.ossl_statem_st = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.buf_mem_st = type { i64, i8*, i64, i64 }
%struct.anon = type { i64, i64, [64 x i8], i64, [64 x i8], [32 x i8], [32 x i8], i32, i32, %struct.bio_st*, %struct.evp_md_ctx_st*, i32, i32, i32, i32, [2 x i8], i32, i32, i32, i32, %struct.anon.0, [64 x i8], i64, [64 x i8], i64, i32, i32, i8*, i64, i8*, i64, i32, i8, i8, i16, %struct.evp_pkey_st* }
%struct.anon.0 = type { [128 x i8], i64, [128 x i8], i64, i64, i32, %struct.ssl_cipher_st*, %struct.evp_pkey_st*, i32, i8*, i64, %struct.stack_st_X509_NAME*, i64, i8*, %struct.evp_cipher_st*, %struct.evp_md_st*, i32, i64, %struct.ssl_comp_st*, i32, i8*, i64, i8*, i64, i8*, i64, %struct.sigalg_lookup_st*, %struct.cert_pkey_st*, i16*, i16*, i64, i64, %struct.sigalg_lookup_st*, [9 x i32], i32, i32, i32, i32 }
%struct.evp_cipher_st = type opaque
%struct.ssl_comp_st = type { i32, i8*, %struct.comp_method_st* }
%struct.comp_method_st = type opaque
%struct.cert_pkey_st = type { %struct.x509_st*, %struct.evp_pkey_st*, %struct.stack_st_X509*, i8*, i64 }
%struct.dtls1_state_st = type { [255 x i8], i64, i32, i16, i16, i16, %struct.pqueue_st*, %struct.pqueue_st*, i64, i64, %struct.hm_header_st, %struct.hm_header_st, i32, %struct.timeval, i32, i32, i32 (%struct.ssl_st*, i32)* }
%struct.pqueue_st = type opaque
%struct.hm_header_st = type { i8, i64, i16, i64, i64, i32, %struct.dtls1_retransmit_state }
%struct.dtls1_retransmit_state = type { %struct.evp_cipher_ctx_st*, %struct.evp_md_ctx_st*, %struct.comp_ctx_st*, %struct.ssl_session_st*, i16 }
%struct.timeval = type { i64, i64 }
%struct.ssl_dane_st = type { %struct.dane_ctx_st*, %struct.stack_st_danetls_record*, %struct.stack_st_X509*, %struct.danetls_record_st*, %struct.x509_st*, i32, i32, i32, i64 }
%struct.stack_st_danetls_record = type opaque
%struct.danetls_record_st = type { i8, i8, i8, i8*, i64, %struct.evp_pkey_st* }
%struct.comp_ctx_st = type opaque
%struct.evp_cipher_ctx_st = type opaque
%struct.anon.4 = type { [26 x i8], void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)*, i8*, i8*, i32, i8*, i16, i32, %struct.anon.5, i32, i32, i64, i8*, i64, i8*, i64, i16*, i64, i16*, %struct.tls_session_ticket_ext_st*, i32 (%struct.ssl_st*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8*, i32*, %struct.stack_st_SSL_CIPHER*, %struct.ssl_cipher_st**, i8*)*, i8*, i8*, i64, i8*, i64, i32, i32, i32, i32, i8*, i64, i32, i8, i32 }
%struct.anon.5 = type { %struct.stack_st_OCSP_RESPID*, %struct.stack_st_X509_EXTENSION*, i8*, i64 }
%struct.stack_st_OCSP_RESPID = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.tls_session_ticket_ext_st = type { i16, i8* }
%struct.CLIENTHELLO_MSG = type { i32, i32, [32 x i8], i64, [32 x i8], i64, [255 x i8], %struct.PACKET, i64, [255 x i8], %struct.PACKET, i64, %struct.raw_extension_st* }
%struct.PACKET = type { i8*, i64 }
%struct.raw_extension_st = type { %struct.PACKET, i32, i32, i32, i64 }
%struct.stack_st_SCT = type opaque
%struct.srtp_protection_profile_st = type { i8*, i64 }
%struct.evp_md_ctx_st = type opaque
%struct.record_layer_st = type { %struct.ssl_st*, i32, i32, i64, i64, %struct.ssl3_buffer_st, [32 x %struct.ssl3_buffer_st], [32 x %struct.ssl3_record_st], i8*, i64, i64, [4 x i8], i64, i64, i64, i32, i64, i8*, [8 x i8], [8 x i8], i32, i32, %struct.dtls_record_layer_st* }
%struct.ssl3_buffer_st = type { i8*, i64, i64, i64, i64, i32 }
%struct.ssl3_record_st = type { i32, i32, i64, i64, i64, i8*, i8*, i8*, i32, i64, [8 x i8] }
%struct.dtls_record_layer_st = type { i16, i16, %struct.dtls1_bitmap_st, %struct.dtls1_bitmap_st, %struct.record_pqueue_st, %struct.record_pqueue_st, %struct.record_pqueue_st, [8 x i8], [8 x i8] }
%struct.dtls1_bitmap_st = type { i64, [8 x i8] }
%struct.record_pqueue_st = type { i16, %struct.pqueue_st* }
%struct.async_job_st = type opaque
%struct.async_wait_ctx_st = type opaque
%struct.wpacket_st = type { %struct.buf_mem_st*, i8*, i64, i64, i64, %struct.wpacket_sub*, i8 }
%struct.wpacket_sub = type { %struct.wpacket_sub*, i64, i64, i64, i32 }
%struct.ssl3_enc_method = type { i32 (%struct.ssl_st*, %struct.ssl3_record_st*, i64, i32, %struct.ssl_mac_buf_st*, i64)*, i32 (%struct.ssl_st*, %struct.ssl3_record_st*, i8*, i32)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i8*, i64, i64*)*, i32 (%struct.ssl_st*, i32)*, i64 (%struct.ssl_st*, i8*, i64, i8*)*, i8*, i64, i8*, i64, i32 (i32)*, i32 (%struct.ssl_st*, i8*, i64, i8*, i64, i8*, i64, i32)*, i32, i32 (%struct.ssl_st*, %struct.wpacket_st*, i32)*, i32 (%struct.ssl_st*, %struct.wpacket_st*, i32)*, i32 (%struct.ssl_st*)* }
%struct.ssl_mac_buf_st = type { i8*, i32 }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.x509_store_st = type opaque
%struct.lhash_st_SSL_SESSION = type { %union.lh_SSL_SESSION_dummy }
%union.lh_SSL_SESSION_dummy = type { i8* }
%struct.anon.2 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.x509_store_ctx_st = type opaque
%struct.evp_md_st = type opaque
%struct.stack_st_SSL_COMP = type opaque
%struct.stack_st_X509_NAME = type opaque
%struct.cert_st = type { %struct.cert_pkey_st*, %struct.evp_pkey_st*, %struct.dh_st* (%struct.ssl_st*, i32, i32)*, i32, i32, [9 x %struct.cert_pkey_st], i8*, i64, i16*, i64, i16*, i64, i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %struct.x509_store_st*, %struct.custom_ext_methods, i32 (%struct.ssl_st*, %struct.ssl_ctx_st*, i32, i32, i32, i8*, i8*)*, i32, i8*, i8*, i32, i8* }
%struct.dh_st = type opaque
%struct.custom_ext_methods = type { %struct.custom_ext_method*, i64 }
%struct.custom_ext_method = type { i16, i32, i32, i32, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)*, void (%struct.ssl_st*, i32, i32, i8*, i8*)*, i8*, i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)*, i8* }
%struct.X509_VERIFY_PARAM_st = type opaque
%struct.ctlog_store_st = type opaque
%struct.ct_policy_eval_ctx_st = type opaque
%struct.engine_st = type opaque
%struct.anon.3 = type { i32 (%struct.ssl_st*, i32*, i8*)*, i8*, [16 x i8], %struct.ssl_ctx_ext_secure_st*, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.evp_mac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*)*, i8*, i32, i8, i64, i8*, i64, i16*, i16*, i64, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i8*, i64, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, [32 x i8] }
%struct.ssl_ctx_ext_secure_st = type { [32 x i8], [32 x i8] }
%struct.hmac_ctx_st = type opaque
%struct.evp_mac_ctx_st = type opaque
%struct.srp_ctx_st = type { i8*, i32 (%struct.ssl_st*, i32*, i8*)*, i32 (%struct.ssl_st*, i8*)*, i8* (%struct.ssl_st*, i8*)*, i8*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, i64 }
%struct.bignum_st = type opaque
%struct.dane_ctx_st = type { %struct.evp_md_st**, i8*, i8, i64 }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%struct.sigalg_lookup_st = type { i8*, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.tls_group_info_st = type { i8*, i8*, i8*, i32, i16, i32, i32, i32, i32, i8 }
%struct.sigalgs_list = type { i32*, i64, i8*, i32, i32 }
%struct.anon.6 = type { i8*, i32 }
%struct.SRP_VBASE_st = type { %struct.stack_st_SRP_user_pwd*, %struct.stack_st_SRP_gN_cache*, i8*, %struct.bignum_st*, %struct.bignum_st* }
%struct.stack_st_SRP_user_pwd = type opaque
%struct.stack_st_SRP_gN_cache = type opaque
%struct.info_cb_states_st = type { i32, i8* }
%struct.anon.7 = type { i32, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ossl_core_handle_st = type opaque
%struct.ossl_dispatch_st = type { i32, void ()* }
%struct.ocsp_responder_id_st = type opaque
%struct.stack_st = type opaque
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i64, i64*)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i64, i64*)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i32 (%struct.bio_st*, i32, i32)*)* }
%struct.sslapitest_log_counts = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ssl_conf_ctx_st = type opaque
%struct.SRP_gN_st = type { i8*, %struct.bignum_st*, %struct.bignum_st* }
%struct.SRP_user_pwd_st = type { i8*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i8* }
%struct.txt_db_st = type { i32, %struct.stack_st_OPENSSL_PSTRING*, %struct.lhash_st_OPENSSL_STRING**, i32 (i8**)**, i64, i64, i64, i8** }
%struct.stack_st_OPENSSL_PSTRING = type opaque
%struct.lhash_st_OPENSSL_STRING = type { %union.lh_OPENSSL_STRING_dummy }
%union.lh_OPENSSL_STRING_dummy = type { i8* }
%struct.ossl_param_st = type { i8*, i32, i8*, i64, i64 }
%struct.X509_name_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.ossl_param_bld_st = type opaque

@test_get_options.options = internal constant [9 x %struct.options_st] [%struct.options_st { i8* getelementptr inbounds ([0 x i8], [0 x i8]* @OPT_HELP_STR, i32 0, i32 0), i32 1, i32 45, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([0 x i8], [0 x i8]* @OPT_HELP_STR, i32 0, i32 0), i32 1, i32 45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 500, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 501, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 502, i32 115, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 503, i32 110, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i32 504, i32 112, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 505, i32 110, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i32 0, i32 0) }, %struct.options_st zeroinitializer], align 16
@OPT_HELP_STR = external dso_local constant [0 x i8], align 1
@.str = private unnamed_addr constant [75 x i8] c"Usage: %s [options] certfile privkeyfile srpvfile tmpfile provider config\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Valid options are:\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"Display this summary\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Display the list of tests available\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Run a single test by id or name\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"iter\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Run a single iteration of a test\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"indent\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"Number of tabs added to output\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"seed\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"Seed value to randomize tests with\00", align 1
@libctx = internal unnamed_addr global %struct.ossl_lib_ctx_st* null, align 8
@.str.14 = private unnamed_addr constant [18 x i8] c"test/sslapitest.c\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"libctx\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@defctxnull = internal unnamed_addr global %struct.ossl_provider_st* null, align 8
@.str.17 = private unnamed_addr constant [41 x i8] c"OSSL_PROVIDER_available(NULL, \22default\22)\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"OSSL_PROVIDER_available(NULL, \22fips\22)\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"fips\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"Error parsing test options\0A\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"certsdir = test_get_argument(0)\00", align 1
@certsdir = internal unnamed_addr global i8* null, align 8
@.str.23 = private unnamed_addr constant [32 x i8] c"srpvfile = test_get_argument(1)\00", align 1
@srpvfile = internal unnamed_addr global i8* null, align 8
@.str.24 = private unnamed_addr constant [35 x i8] c"tmpfilename = test_get_argument(2)\00", align 1
@tmpfilename = internal unnamed_addr global i8* null, align 8
@.str.25 = private unnamed_addr constant [34 x i8] c"modulename = test_get_argument(3)\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"configfile = test_get_argument(4)\00", align 1
@.str.27 = private unnamed_addr constant [45 x i8] c"OSSL_LIB_CTX_load_config(libctx, configfile)\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"OSSL_PROVIDER_available(libctx, modulename)\00", align 1
@.str.29 = private unnamed_addr constant [43 x i8] c"OSSL_PROVIDER_available(libctx, \22default\22)\00", align 1
@is_fips = internal unnamed_addr global i1 false, align 4
@.str.30 = private unnamed_addr constant [69 x i8] c"OSSL_PROVIDER_add_builtin(libctx, \22tls-provider\22, tls_provider_init)\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"tls-provider\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"OPENSSL_TEST_GETCOUNTS\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"not supported in this build\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"servercert.pem\00", align 1
@cert = internal unnamed_addr global i8* null, align 8
@.str.35 = private unnamed_addr constant [14 x i8] c"serverkey.pem\00", align 1
@privkey = internal unnamed_addr global i8* null, align 8
@.str.36 = private unnamed_addr constant [22 x i8] c"server-ecdsa-cert.pem\00", align 1
@cert2 = internal unnamed_addr global i8* null, align 8
@.str.37 = private unnamed_addr constant [21 x i8] c"server-ecdsa-key.pem\00", align 1
@privkey2 = internal unnamed_addr global i8* null, align 8
@.str.38 = private unnamed_addr constant [17 x i8] c"ee-cert-1024.pem\00", align 1
@cert1024 = internal unnamed_addr global i8* null, align 8
@.str.39 = private unnamed_addr constant [16 x i8] c"ee-key-1024.pem\00", align 1
@privkey1024 = internal unnamed_addr global i8* null, align 8
@.str.40 = private unnamed_addr constant [17 x i8] c"ee-cert-3072.pem\00", align 1
@cert3072 = internal unnamed_addr global i8* null, align 8
@.str.41 = private unnamed_addr constant [16 x i8] c"ee-key-3072.pem\00", align 1
@privkey3072 = internal unnamed_addr global i8* null, align 8
@.str.42 = private unnamed_addr constant [17 x i8] c"ee-cert-4096.pem\00", align 1
@cert4096 = internal unnamed_addr global i8* null, align 8
@.str.43 = private unnamed_addr constant [16 x i8] c"ee-key-4096.pem\00", align 1
@privkey4096 = internal unnamed_addr global i8* null, align 8
@.str.44 = private unnamed_addr constant [17 x i8] c"ee-cert-8192.pem\00", align 1
@cert8192 = internal unnamed_addr global i8* null, align 8
@.str.45 = private unnamed_addr constant [16 x i8] c"ee-key-8192.pem\00", align 1
@privkey8192 = internal unnamed_addr global i8* null, align 8
@.str.46 = private unnamed_addr constant [23 x i8] c"test_large_message_tls\00", align 1
@.str.47 = private unnamed_addr constant [34 x i8] c"test_large_message_tls_read_ahead\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"test_large_message_dtls\00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"test_cleanse_plaintext\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"test_tlsext_status_type\00", align 1
@.str.51 = private unnamed_addr constant [33 x i8] c"test_session_with_only_int_cache\00", align 1
@.str.52 = private unnamed_addr constant [33 x i8] c"test_session_with_only_ext_cache\00", align 1
@.str.53 = private unnamed_addr constant [29 x i8] c"test_session_with_both_cache\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"test_session_wo_ca_names\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"test_stateful_tickets\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"test_stateless_tickets\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"test_psk_tickets\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"test_extra_tickets\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"test_ssl_set_bio\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"test_ssl_bio_pop_next_bio\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"test_ssl_bio_pop_ssl_bio\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"test_ssl_bio_change_rbio\00", align 1
@.str.63 = private unnamed_addr constant [25 x i8] c"test_ssl_bio_change_wbio\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"test_set_sigalgs\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"test_keylog\00", align 1
@.str.66 = private unnamed_addr constant [26 x i8] c"test_keylog_no_master_key\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"test_client_cert_verify_cb\00", align 1
@.str.68 = private unnamed_addr constant [26 x i8] c"test_ssl_build_cert_chain\00", align 1
@.str.69 = private unnamed_addr constant [30 x i8] c"test_ssl_ctx_build_cert_chain\00", align 1
@.str.70 = private unnamed_addr constant [21 x i8] c"test_client_hello_cb\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"test_no_ems\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"test_ccs_change_cipher\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"test_early_data_read_write\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"test_early_data_replay\00", align 1
@.str.75 = private unnamed_addr constant [21 x i8] c"test_early_data_skip\00", align 1
@.str.76 = private unnamed_addr constant [25 x i8] c"test_early_data_skip_hrr\00", align 1
@.str.77 = private unnamed_addr constant [30 x i8] c"test_early_data_skip_hrr_fail\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"test_early_data_skip_abort\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"test_early_data_not_sent\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"test_early_data_psk\00", align 1
@.str.81 = private unnamed_addr constant [37 x i8] c"test_early_data_psk_with_all_ciphers\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"test_early_data_not_expected\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"test_early_data_tls1_2\00", align 1
@.str.84 = private unnamed_addr constant [21 x i8] c"test_set_ciphersuite\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"test_ciphersuite_change\00", align 1
@.str.86 = private unnamed_addr constant [23 x i8] c"test_tls13_ciphersuite\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"test_tls13_psk\00", align 1
@.str.88 = private unnamed_addr constant [18 x i8] c"test_key_exchange\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"test_negotiated_group\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"test_custom_exts\00", align 1
@.str.91 = private unnamed_addr constant [15 x i8] c"test_stateless\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"test_pha_key_update\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"test_serverinfo\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"test_export_key_mat\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"test_export_key_mat_early\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"test_key_update\00", align 1
@.str.97 = private unnamed_addr constant [30 x i8] c"test_key_update_peer_in_write\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"test_key_update_peer_in_read\00", align 1
@.str.99 = private unnamed_addr constant [31 x i8] c"test_key_update_local_in_write\00", align 1
@.str.100 = private unnamed_addr constant [30 x i8] c"test_key_update_local_in_read\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"test_ssl_clear\00", align 1
@.str.102 = private unnamed_addr constant [26 x i8] c"test_max_fragment_len_ext\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"test_srp\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"test_info_callback\00", align 1
@.str.105 = private unnamed_addr constant [17 x i8] c"test_ssl_pending\00", align 1
@.str.106 = private unnamed_addr constant [28 x i8] c"test_ssl_get_shared_ciphers\00", align 1
@.str.107 = private unnamed_addr constant [22 x i8] c"test_ticket_callbacks\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"test_shutdown\00", align 1
@.str.109 = private unnamed_addr constant [24 x i8] c"test_incorrect_shutdown\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"test_cert_cb\00", align 1
@.str.111 = private unnamed_addr constant [20 x i8] c"test_client_cert_cb\00", align 1
@.str.112 = private unnamed_addr constant [14 x i8] c"test_ca_names\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"test_multiblock_write\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"test_servername\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"test_sigalgs_available\00", align 1
@.str.116 = private unnamed_addr constant [21 x i8] c"test_pluggable_group\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"test_ssl_dup\00", align 1
@.str.118 = private unnamed_addr constant [16 x i8] c"test_set_tmp_dh\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"test_dh_auto\00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"test_sni_tls13\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"test_inherit_verify_param\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"test_set_alpn\00", align 1
@.str.123 = private unnamed_addr constant [21 x i8] c"test_session_timeout\00", align 1
@tmp_dh_params = internal unnamed_addr global %struct.evp_pkey_st* null, align 8
@.str.124 = private unnamed_addr constant [34 x i8] c"certbio = BIO_new_file(cert, \22r\22)\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.126 = private unnamed_addr constant [38 x i8] c"chaincert = X509_new_ex(libctx, NULL)\00", align 1
@.str.127 = private unnamed_addr constant [97 x i8] c"create_ssl_ctx_pair(libctx, smeth, cmeth, min_version, max_version, &sctx, &cctx, cert, privkey)\00", align 1
@.str.128 = private unnamed_addr constant [81 x i8] c"assertion failed: certlen * NUM_EXTRA_CERTS > (SSL3_RT_MAX_PLAIN_LENGTH * 4) / 3\00", align 1
@.str.129 = private unnamed_addr constant [67 x i8] c"create_ssl_objects(sctx, cctx, &serverssl, &clientssl, NULL, NULL)\00", align 1
@.str.130 = private unnamed_addr constant [60 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_NONE)\00", align 1
@.str.131 = private unnamed_addr constant [21 x i8] c"SSL_clear(serverssl)\00", align 1
@.str.132 = private unnamed_addr constant [100 x i8] c"execute_cleanse_plaintext(TLS_server_method(), TLS_client_method(), TLS1_2_VERSION, TLS1_2_VERSION)\00", align 1
@.str.133 = private unnamed_addr constant [100 x i8] c"execute_cleanse_plaintext(TLS_server_method(), TLS_client_method(), TLS1_3_VERSION, TLS1_3_VERSION)\00", align 1
@.str.134 = private unnamed_addr constant [88 x i8] c"execute_cleanse_plaintext(DTLS_server_method(), DTLS_client_method(), DTLS1_VERSION, 0)\00", align 1
@execute_cleanse_plaintext.cbuf = internal global [16000 x i8] zeroinitializer, align 16
@execute_cleanse_plaintext.sbuf = internal global [16000 x i8] zeroinitializer, align 16
@.str.135 = private unnamed_addr constant [53 x i8] c"SSL_set_options(serverssl, SSL_OP_CLEANSE_PLAINTEXT)\00", align 1
@.str.136 = private unnamed_addr constant [41 x i8] c"SSL_write(clientssl, cbuf, sizeof(cbuf))\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"sizeof(cbuf)\00", align 1
@.str.138 = private unnamed_addr constant [41 x i8] c"SSL_peek(serverssl, &sbuf, sizeof(sbuf))\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c"sizeof(sbuf)\00", align 1
@.str.140 = private unnamed_addr constant [5 x i8] c"cbuf\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"sbuf\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"rr->length\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"zbuf\00", align 1
@.str.144 = private unnamed_addr constant [41 x i8] c"SSL_read(serverssl, &sbuf, sizeof(sbuf))\00", align 1
@.str.145 = private unnamed_addr constant [38 x i8] c"SSL_get_tlsext_status_type(clientssl)\00", align 1
@.str.146 = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.147 = private unnamed_addr constant [62 x i8] c"SSL_set_tlsext_status_type(clientssl, TLSEXT_STATUSTYPE_ocsp)\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"TLSEXT_STATUSTYPE_ocsp\00", align 1
@cdummyarg = internal global i32 1, align 4
@.str.149 = private unnamed_addr constant [19 x i8] c"ocsp_client_called\00", align 1
@ocsp_client_called = internal unnamed_addr global i1 false, align 4
@.str.150 = private unnamed_addr constant [19 x i8] c"ocsp_server_called\00", align 1
@ocsp_server_called = internal unnamed_addr global i1 false, align 4
@.str.151 = private unnamed_addr constant [23 x i8] c"id = OCSP_RESPID_new()\00", align 1
@.str.152 = private unnamed_addr constant [32 x i8] c"ids = sk_OCSP_RESPID_new_null()\00", align 1
@.str.153 = private unnamed_addr constant [37 x i8] c"ocspcert = X509_new_ex(libctx, NULL)\00", align 1
@ocspcert = internal global %struct.x509_st* null, align 8
@.str.154 = private unnamed_addr constant [50 x i8] c"PEM_read_bio_X509(certbio, &ocspcert, NULL, NULL)\00", align 1
@.str.155 = private unnamed_addr constant [54 x i8] c"OCSP_RESPID_set_by_key_ex(id, ocspcert, libctx, NULL)\00", align 1
@.str.156 = private unnamed_addr constant [29 x i8] c"sk_OCSP_RESPID_push(ids, id)\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"orespder\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"respderin\00", align 1
@orespder = internal constant [20 x i8] c"Dummy OCSP Response\00", align 16
@.str.159 = private unnamed_addr constant [50 x i8] c"copy = OPENSSL_memdup(orespder, sizeof(orespder))\00", align 1
@.str.160 = private unnamed_addr constant [59 x i8] c"SSL_set_tlsext_status_ocsp_resp(s, copy, sizeof(orespder))\00", align 1
@remove_called = internal unnamed_addr global i32 0, align 4
@new_called = internal unnamed_addr global i32 0, align 4
@.str.161 = private unnamed_addr constant [116 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, 0, &sctx, &cctx, cert, privkey)\00", align 1
@.str.162 = private unnamed_addr constant [69 x i8] c"create_ssl_objects(sctx, cctx, &serverssl1, &clientssl1, NULL, NULL)\00", align 1
@.str.163 = private unnamed_addr constant [62 x i8] c"create_ssl_connection(serverssl1, clientssl1, SSL_ERROR_NONE)\00", align 1
@.str.164 = private unnamed_addr constant [37 x i8] c"sess1 = SSL_get1_session(clientssl1)\00", align 1
@.str.165 = private unnamed_addr constant [33 x i8] c"SSL_CTX_add_session(cctx, sess1)\00", align 1
@.str.166 = private unnamed_addr constant [11 x i8] c"new_called\00", align 1
@.str.167 = private unnamed_addr constant [15 x i8] c"numnewsesstick\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"remove_called\00", align 1
@.str.169 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.170 = private unnamed_addr constant [69 x i8] c"create_ssl_objects(sctx, cctx, &serverssl2, &clientssl2, NULL, NULL)\00", align 1
@.str.171 = private unnamed_addr constant [35 x i8] c"SSL_set_session(clientssl2, sess1)\00", align 1
@.str.172 = private unnamed_addr constant [62 x i8] c"create_ssl_connection(serverssl2, clientssl2, SSL_ERROR_NONE)\00", align 1
@.str.173 = private unnamed_addr constant [31 x i8] c"SSL_session_reused(clientssl2)\00", align 1
@.str.174 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.175 = private unnamed_addr constant [37 x i8] c"sess1 = SSL_get1_session(clientssl2)\00", align 1
@.str.176 = private unnamed_addr constant [37 x i8] c"sess2 = SSL_get1_session(clientssl2)\00", align 1
@.str.177 = private unnamed_addr constant [28 x i8] c"SSL_get_session(clientssl2)\00", align 1
@.str.178 = private unnamed_addr constant [6 x i8] c"sess1\00", align 1
@.str.179 = private unnamed_addr constant [33 x i8] c"SSL_CTX_add_session(cctx, sess2)\00", align 1
@.str.180 = private unnamed_addr constant [36 x i8] c"SSL_CTX_remove_session(cctx, sess2)\00", align 1
@.str.181 = private unnamed_addr constant [69 x i8] c"create_ssl_objects(sctx, cctx, &serverssl3, &clientssl3, NULL, NULL)\00", align 1
@.str.182 = private unnamed_addr constant [35 x i8] c"SSL_set_session(clientssl3, sess1)\00", align 1
@.str.183 = private unnamed_addr constant [62 x i8] c"create_ssl_connection(serverssl3, clientssl3, SSL_ERROR_NONE)\00", align 1
@get_sess_val = internal unnamed_addr global %struct.ssl_session_st* null, align 8
@get_called = internal unnamed_addr global i32 0, align 4
@.str.184 = private unnamed_addr constant [37 x i8] c"sess2 = SSL_get1_session(serverssl1)\00", align 1
@.str.185 = private unnamed_addr constant [36 x i8] c"SSL_CTX_remove_session(sctx, sess2)\00", align 1
@.str.186 = private unnamed_addr constant [33 x i8] c"SSL_CTX_add_session(sctx, sess2)\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"get_called\00", align 1
@.str.188 = private unnamed_addr constant [29 x i8] c"tmp = SSL_SESSION_dup(sess2)\00", align 1
@do_cache = internal unnamed_addr global i1 false, align 4
@.str.189 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.190 = private unnamed_addr constant [8 x i8] c"idx * 2\00", align 1
@sesscache = internal unnamed_addr global [6 x %struct.ssl_session_st*] zeroinitializer, align 16
@.str.191 = private unnamed_addr constant [114 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, 0, sctx, cctx, cert, privkey)\00", align 1
@.str.192 = private unnamed_addr constant [36 x i8] c"SSL_CTX_set_num_tickets(*sctx, idx)\00", align 1
@.str.193 = private unnamed_addr constant [81 x i8] c"SSL_CTX_set_session_id_context(*sctx, (void *)&sess_id_ctx, sizeof(sess_id_ctx))\00", align 1
@.str.194 = private unnamed_addr constant [41 x i8] c"SSL_set_session(clientssl, sesscache[i])\00", align 1
@.str.195 = private unnamed_addr constant [30 x i8] c"SSL_session_reused(clientssl)\00", align 1
@.str.196 = private unnamed_addr constant [39 x i8] c"SSL_verify_client_post_handshake(sssl)\00", align 1
@.str.197 = private unnamed_addr constant [23 x i8] c"SSL_do_handshake(sssl)\00", align 1
@.str.198 = private unnamed_addr constant [24 x i8] c"SSL_read(cssl, NULL, 0)\00", align 1
@.str.199 = private unnamed_addr constant [24 x i8] c"SSL_read(sssl, NULL, 0)\00", align 1
@.str.200 = private unnamed_addr constant [50 x i8] c"create_ssl_connection(sssl, cssl, SSL_ERROR_NONE)\00", align 1
@.str.201 = private unnamed_addr constant [113 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, 0, &sctx, &cctx, NULL, NULL)\00", align 1
@.str.202 = private unnamed_addr constant [80 x i8] c"SSL_CTX_set_session_id_context(sctx, (void *)&sess_id_ctx, sizeof(sess_id_ctx))\00", align 1
@use_session_cb_cnt = internal unnamed_addr global i32 0, align 4
@find_session_cb_cnt = internal unnamed_addr global i32 0, align 4
@srvid = internal unnamed_addr global i8* null, align 8
@serverpsk = internal unnamed_addr global %struct.ssl_session_st* null, align 8
@clientpsk = internal unnamed_addr global %struct.ssl_session_st* null, align 8
@.str.203 = private unnamed_addr constant [10 x i8] c"clientpsk\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"find_session_cb_cnt\00", align 1
@.str.205 = private unnamed_addr constant [19 x i8] c"use_session_cb_cnt\00", align 1
@.str.206 = private unnamed_addr constant [9 x i8] c"Identity\00", align 1
@.str.207 = private unnamed_addr constant [3 x i8] c"\13\02\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"sess\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str.210 = private unnamed_addr constant [52 x i8] c"SSL_SESSION_set1_master_key(sess, key, sizeof(key))\00", align 1
@.str.211 = private unnamed_addr constant [37 x i8] c"SSL_SESSION_set_cipher(sess, cipher)\00", align 1
@.str.212 = private unnamed_addr constant [55 x i8] c"SSL_SESSION_set_protocol_version(sess, TLS1_3_VERSION)\00", align 1
@.str.213 = private unnamed_addr constant [7 x i8] c"bretry\00", align 1
@.str.214 = private unnamed_addr constant [34 x i8] c"SSL_new_session_ticket(serverssl)\00", align 1
@.str.215 = private unnamed_addr constant [40 x i8] c"SSL_write_ex(serverssl, &c, 1, &nbytes)\00", align 1
@.str.216 = private unnamed_addr constant [7 x i8] c"nbytes\00", align 1
@.str.217 = private unnamed_addr constant [12 x i8] c"idx * 2 + 2\00", align 1
@.str.218 = private unnamed_addr constant [50 x i8] c"SSL_read_ex(clientssl, buf, sizeof(buf), &nbytes)\00", align 1
@.str.219 = private unnamed_addr constant [12 x i8] c"idx * 2 + 4\00", align 1
@.str.220 = private unnamed_addr constant [12 x i8] c"sizeof(buf)\00", align 1
@.str.221 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"buf[0]\00", align 1
@.str.223 = private unnamed_addr constant [48 x i8] c"SSL_write_ex(serverssl, &c, sizeof(c), &nbytes)\00", align 1
@.str.224 = private unnamed_addr constant [10 x i8] c"sizeof(c)\00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.226 = private unnamed_addr constant [40 x i8] c"SSL_write_ex(serverssl, &c, 0, &nbytes)\00", align 1
@.str.227 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"SSL_do_handshake(serverssl)\00", align 1
@.str.229 = private unnamed_addr constant [4 x i8] c"tmp\00", align 1
@.str.230 = private unnamed_addr constant [16 x i8] c"BIO_up_ref(tmp)\00", align 1
@.str.231 = private unnamed_addr constant [28 x i8] c"SSL_get_error(serverssl, 0)\00", align 1
@.str.232 = private unnamed_addr constant [21 x i8] c"SSL_ERROR_WANT_WRITE\00", align 1
@.str.233 = private unnamed_addr constant [28 x i8] c"bio1 = BIO_new(BIO_s_mem())\00", align 1
@.str.234 = private unnamed_addr constant [28 x i8] c"bio2 = BIO_new(BIO_s_mem())\00", align 1
@.str.235 = private unnamed_addr constant [105 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_NONE) == (conntype == CONNTYPE_CONNECTION_SUCCESS)\00", align 1
@.str.236 = private unnamed_addr constant [49 x i8] c"ctx = SSL_CTX_new_ex(libctx, NULL, TLS_method())\00", align 1
@.str.237 = private unnamed_addr constant [19 x i8] c"ssl = SSL_new(ctx)\00", align 1
@.str.238 = private unnamed_addr constant [30 x i8] c"sslbio = BIO_new(BIO_f_ssl())\00", align 1
@.str.239 = private unnamed_addr constant [31 x i8] c"membio1 = BIO_new(BIO_s_mem())\00", align 1
@.str.240 = private unnamed_addr constant [31 x i8] c"membio2 = BIO_new(BIO_s_mem())\00", align 1
@.str.241 = private unnamed_addr constant [12 x i8] c"(size_t)idx\00", align 1
@.str.242 = private unnamed_addr constant [28 x i8] c"OSSL_NELEM(testsigalgs) * 2\00", align 1
@testsigalgs = internal unnamed_addr constant [14 x %struct.sigalgs_list] [%struct.sigalgs_list { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @validlist1, i32 0, i32 0), i64 2, i8* null, i32 1, i32 1 }, %struct.sigalgs_list { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @validlist2, i32 0, i32 0), i64 4, i8* null, i32 1, i32 1 }, %struct.sigalgs_list { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @validlist3, i32 0, i32 0), i64 2, i8* null, i32 1, i32 0 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.247, i32 0, i32 0), i32 1, i32 1 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.248, i32 0, i32 0), i32 1, i32 1 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.249, i32 0, i32 0), i32 1, i32 0 }, %struct.sigalgs_list { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @invalidlist1, i32 0, i32 0), i64 2, i8* null, i32 0, i32 0 }, %struct.sigalgs_list { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @invalidlist2, i32 0, i32 0), i64 2, i8* null, i32 0, i32 0 }, %struct.sigalgs_list { i32* getelementptr inbounds ([3 x i32], [3 x i32]* @invalidlist3, i32 0, i32 0), i64 3, i8* null, i32 0, i32 0 }, %struct.sigalgs_list { i32* getelementptr inbounds ([1 x i32], [1 x i32]* @invalidlist4, i32 0, i32 0), i64 1, i8* null, i32 0, i32 0 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i32 0, i32 0 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0), i32 0, i32 0 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.252, i32 0, i32 0), i32 0, i32 0 }, %struct.sigalgs_list { i32* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.253, i32 0, i32 0), i32 0, i32 0 }], align 16
@.str.243 = private unnamed_addr constant [41 x i8] c"Failure setting sigalgs in SSL_CTX (%d)\0A\00", align 1
@.str.244 = private unnamed_addr constant [44 x i8] c"Not-failed setting sigalgs in SSL_CTX (%d)\0A\00", align 1
@.str.245 = private unnamed_addr constant [37 x i8] c"Failure setting sigalgs in SSL (%d)\0A\00", align 1
@.str.246 = private unnamed_addr constant [18 x i8] c"curr->connsuccess\00", align 1
@validlist1 = internal constant [2 x i32] [i32 672, i32 6], align 4
@validlist2 = internal constant [4 x i32] [i32 672, i32 6, i32 674, i32 408], align 16
@validlist3 = internal constant [2 x i32] [i32 674, i32 408], align 4
@.str.247 = private unnamed_addr constant [11 x i8] c"RSA+SHA256\00", align 1
@.str.248 = private unnamed_addr constant [24 x i8] c"RSA+SHA256:ECDSA+SHA512\00", align 1
@.str.249 = private unnamed_addr constant [13 x i8] c"ECDSA+SHA512\00", align 1
@invalidlist1 = internal constant [2 x i32] [i32 0, i32 6], align 4
@invalidlist2 = internal constant [2 x i32] [i32 672, i32 0], align 4
@invalidlist3 = internal constant [3 x i32] [i32 672, i32 6, i32 672], align 4
@invalidlist4 = internal constant [1 x i32] [i32 672], align 4
@.str.250 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@.str.251 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@.str.252 = private unnamed_addr constant [18 x i8] c"RSA+SHA256:SHA256\00", align 1
@.str.253 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1
@client_log_buffer = internal global [2049 x i8] zeroinitializer, align 16
@server_log_buffer = internal global [2049 x i8] zeroinitializer, align 16
@client_log_buffer_index = internal unnamed_addr global i64 0, align 8
@server_log_buffer_index = internal unnamed_addr global i64 0, align 8
@error_writing_log = internal unnamed_addr global i1 false, align 4
@.str.254 = private unnamed_addr constant [37 x i8] c"SSL_CTX_set_cipher_list(cctx, \22RSA\22)\00", align 1
@.str.255 = private unnamed_addr constant [42 x i8] c"SSL_CTX_get_keylog_callback(cctx) == NULL\00", align 1
@.str.256 = private unnamed_addr constant [42 x i8] c"SSL_CTX_get_keylog_callback(sctx) == NULL\00", align 1
@.str.257 = private unnamed_addr constant [60 x i8] c"SSL_CTX_get_keylog_callback(cctx) == client_keylog_callback\00", align 1
@.str.258 = private unnamed_addr constant [60 x i8] c"SSL_CTX_get_keylog_callback(sctx) == server_keylog_callback\00", align 1
@.str.259 = private unnamed_addr constant [18 x i8] c"error_writing_log\00", align 1
@.str.260 = private unnamed_addr constant [24 x i8] c"client_log_buffer_index\00", align 1
@.str.261 = private unnamed_addr constant [24 x i8] c"server_log_buffer_index\00", align 1
@.str.262 = private unnamed_addr constant [88 x i8] c"test_keylog_output(client_log_buffer, clientssl, SSL_get_session(clientssl), &expected)\00", align 1
@.str.263 = private unnamed_addr constant [88 x i8] c"test_keylog_output(server_log_buffer, serverssl, SSL_get_session(serverssl), &expected)\00", align 1
@.str.264 = private unnamed_addr constant [20 x i8] c"Client log too full\00", align 1
@.str.265 = private unnamed_addr constant [20 x i8] c"Server log too full\00", align 1
@.str.266 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@.str.267 = private unnamed_addr constant [28 x i8] c"token = strtok(NULL, \22 \\n\22)\00", align 1
@.str.268 = private unnamed_addr constant [14 x i8] c"strlen(token)\00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"16\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CLIENT_RANDOM\00", align 1
@.str.271 = private unnamed_addr constant [19 x i8] c"client_random_size\00", align 1
@.str.272 = private unnamed_addr constant [17 x i8] c"SSL3_RANDOM_SIZE\00", align 1
@.str.273 = private unnamed_addr constant [3 x i8] c"64\00", align 1
@.str.274 = private unnamed_addr constant [80 x i8] c"compare_hex_encoded_buffer(token, 64, actual_client_random, client_random_size)\00", align 1
@.str.275 = private unnamed_addr constant [16 x i8] c"master_key_size\00", align 1
@.str.276 = private unnamed_addr constant [85 x i8] c"compare_hex_encoded_buffer(token, strlen(token), actual_master_key, master_key_size)\00", align 1
@.str.277 = private unnamed_addr constant [28 x i8] c"CLIENT_EARLY_TRAFFIC_SECRET\00", align 1
@.str.278 = private unnamed_addr constant [32 x i8] c"CLIENT_HANDSHAKE_TRAFFIC_SECRET\00", align 1
@.str.279 = private unnamed_addr constant [32 x i8] c"SERVER_HANDSHAKE_TRAFFIC_SECRET\00", align 1
@.str.280 = private unnamed_addr constant [24 x i8] c"CLIENT_TRAFFIC_SECRET_0\00", align 1
@.str.281 = private unnamed_addr constant [24 x i8] c"SERVER_TRAFFIC_SECRET_0\00", align 1
@.str.282 = private unnamed_addr constant [22 x i8] c"EARLY_EXPORTER_SECRET\00", align 1
@.str.283 = private unnamed_addr constant [16 x i8] c"EXPORTER_SECRET\00", align 1
@.str.284 = private unnamed_addr constant [21 x i8] c"Unexpected token %s\0A\00", align 1
@.str.285 = private unnamed_addr constant [23 x i8] c"rsa_key_exchange_count\00", align 1
@.str.286 = private unnamed_addr constant [33 x i8] c"expected->rsa_key_exchange_count\00", align 1
@.str.287 = private unnamed_addr constant [20 x i8] c"master_secret_count\00", align 1
@.str.288 = private unnamed_addr constant [30 x i8] c"expected->master_secret_count\00", align 1
@.str.289 = private unnamed_addr constant [26 x i8] c"client_early_secret_count\00", align 1
@.str.290 = private unnamed_addr constant [36 x i8] c"expected->client_early_secret_count\00", align 1
@.str.291 = private unnamed_addr constant [30 x i8] c"client_handshake_secret_count\00", align 1
@.str.292 = private unnamed_addr constant [40 x i8] c"expected->client_handshake_secret_count\00", align 1
@.str.293 = private unnamed_addr constant [30 x i8] c"server_handshake_secret_count\00", align 1
@.str.294 = private unnamed_addr constant [40 x i8] c"expected->server_handshake_secret_count\00", align 1
@.str.295 = private unnamed_addr constant [32 x i8] c"client_application_secret_count\00", align 1
@.str.296 = private unnamed_addr constant [42 x i8] c"expected->client_application_secret_count\00", align 1
@.str.297 = private unnamed_addr constant [32 x i8] c"server_application_secret_count\00", align 1
@.str.298 = private unnamed_addr constant [42 x i8] c"expected->server_application_secret_count\00", align 1
@.str.299 = private unnamed_addr constant [28 x i8] c"early_exporter_secret_count\00", align 1
@.str.300 = private unnamed_addr constant [38 x i8] c"expected->early_exporter_secret_count\00", align 1
@.str.301 = private unnamed_addr constant [22 x i8] c"exporter_secret_count\00", align 1
@.str.302 = private unnamed_addr constant [32 x i8] c"expected->exporter_secret_count\00", align 1
@.str.303 = private unnamed_addr constant [15 x i8] c"raw_length * 2\00", align 1
@.str.304 = private unnamed_addr constant [11 x i8] c"hex_length\00", align 1
@.str.305 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.306 = private unnamed_addr constant [9 x i8] c"hexed[0]\00", align 1
@.str.307 = private unnamed_addr constant [15 x i8] c"hex_encoded[j]\00", align 1
@.str.308 = private unnamed_addr constant [9 x i8] c"hexed[1]\00", align 1
@.str.309 = private unnamed_addr constant [19 x i8] c"hex_encoded[j + 1]\00", align 1
@.str.310 = private unnamed_addr constant [59 x i8] c"SSL_CTX_set_max_early_data(sctx, SSL3_RT_MAX_PLAIN_LENGTH)\00", align 1
@.str.311 = private unnamed_addr constant [33 x i8] c"SSL_set_session(clientssl, sess)\00", align 1
@.str.312 = private unnamed_addr constant [51 x i8] c"SSL_write_early_data(clientssl, NULL, 0, &written)\00", align 1
@.str.313 = private unnamed_addr constant [61 x i8] c"SSL_read_early_data(serverssl, buf, sizeof(buf), &readbytes)\00", align 1
@.str.314 = private unnamed_addr constant [26 x i8] c"SSL_READ_EARLY_DATA_ERROR\00", align 1
@.str.315 = private unnamed_addr constant [37 x i8] c"SSL_get_early_data_status(serverssl)\00", align 1
@.str.316 = private unnamed_addr constant [24 x i8] c"SSL_EARLY_DATA_ACCEPTED\00", align 1
@.str.317 = private unnamed_addr constant [9 x i8] c"leaf.key\00", align 1
@.str.318 = private unnamed_addr constant [9 x i8] c"leaf.pem\00", align 1
@.str.319 = private unnamed_addr constant [15 x i8] c"subinterCA.pem\00", align 1
@.str.320 = private unnamed_addr constant [12 x i8] c"interCA.pem\00", align 1
@.str.321 = private unnamed_addr constant [11 x i8] c"rootCA.pem\00", align 1
@.str.322 = private unnamed_addr constant [47 x i8] c"SSL_CTX_use_certificate_chain_file(sctx, leaf)\00", align 1
@.str.323 = private unnamed_addr constant [58 x i8] c"SSL_CTX_use_PrivateKey_file(sctx, skey, SSL_FILETYPE_PEM)\00", align 1
@.str.324 = private unnamed_addr constant [32 x i8] c"SSL_CTX_check_private_key(sctx)\00", align 1
@.str.325 = private unnamed_addr constant [48 x i8] c"SSL_CTX_load_verify_locations(cctx, root, NULL)\00", align 1
@.str.326 = private unnamed_addr constant [73 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_WANT_RETRY_VERIFY)\00", align 1
@.str.327 = private unnamed_addr constant [37 x i8] c"(crt1 = load_cert_pem(int1, libctx))\00", align 1
@.str.328 = private unnamed_addr constant [37 x i8] c"(crt2 = load_cert_pem(int2, libctx))\00", align 1
@.str.329 = private unnamed_addr constant [52 x i8] c"(server_chain = SSL_get_peer_cert_chain(clientssl))\00", align 1
@.str.330 = private unnamed_addr constant [33 x i8] c"sk_X509_push(server_chain, crt1)\00", align 1
@.str.331 = private unnamed_addr constant [33 x i8] c"sk_X509_push(server_chain, crt2)\00", align 1
@.str.332 = private unnamed_addr constant [15 x i8] c"leaf-chain.pem\00", align 1
@.str.333 = private unnamed_addr constant [60 x i8] c"ssl_ctx = SSL_CTX_new_ex(libctx, NULL, TLS_server_method())\00", align 1
@.str.334 = private unnamed_addr constant [23 x i8] c"ssl = SSL_new(ssl_ctx)\00", align 1
@.str.335 = private unnamed_addr constant [48 x i8] c"SSL_use_certificate_chain_file(ssl, leaf_chain)\00", align 1
@.str.336 = private unnamed_addr constant [53 x i8] c"SSL_use_PrivateKey_file(ssl, skey, SSL_FILETYPE_PEM)\00", align 1
@.str.337 = private unnamed_addr constant [27 x i8] c"SSL_check_private_key(ssl)\00", align 1
@.str.338 = private unnamed_addr constant [85 x i8] c"SSL_build_cert_chain(ssl, SSL_BUILD_CHAIN_FLAG_NO_ROOT | SSL_BUILD_CHAIN_FLAG_CHECK)\00", align 1
@.str.339 = private unnamed_addr constant [56 x i8] c"ctx = SSL_CTX_new_ex(libctx, NULL, TLS_server_method())\00", align 1
@.str.340 = private unnamed_addr constant [52 x i8] c"SSL_CTX_use_certificate_chain_file(ctx, leaf_chain)\00", align 1
@.str.341 = private unnamed_addr constant [57 x i8] c"SSL_CTX_use_PrivateKey_file(ctx, skey, SSL_FILETYPE_PEM)\00", align 1
@.str.342 = private unnamed_addr constant [31 x i8] c"SSL_CTX_check_private_key(ctx)\00", align 1
@.str.343 = private unnamed_addr constant [89 x i8] c"SSL_CTX_build_cert_chain(ctx, SSL_BUILD_CHAIN_FLAG_NO_ROOT | SSL_BUILD_CHAIN_FLAG_CHECK)\00", align 1
@.str.344 = private unnamed_addr constant [81 x i8] c"SSL_CTX_set_cipher_list(cctx, \22AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384\22)\00", align 1
@.str.345 = private unnamed_addr constant [48 x i8] c"AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384\00", align 1
@.str.346 = private unnamed_addr constant [76 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_WANT_CLIENT_HELLO_CB)\00", align 1
@.str.347 = private unnamed_addr constant [29 x i8] c"SSL_get_error(serverssl, -1)\00", align 1
@.str.348 = private unnamed_addr constant [31 x i8] c"SSL_ERROR_WANT_CLIENT_HELLO_CB\00", align 1
@__const.full_client_hello_callback.expected_ciphers = private unnamed_addr constant [6 x i8] c"\00\9D\C0,\00\FF", align 1
@__const.full_client_hello_callback.expected_extensions = private unnamed_addr constant [6 x i32] [i32 11, i32 10, i32 35, i32 22, i32 23, i32 13], align 16
@.str.349 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.350 = private unnamed_addr constant [17 x i8] c"expected_ciphers\00", align 1
@.str.351 = private unnamed_addr constant [49 x i8] c"SSL_client_hello_get0_compression_methods(s, &p)\00", align 1
@.str.352 = private unnamed_addr constant [3 x i8] c"*p\00", align 1
@.str.353 = private unnamed_addr constant [51 x i8] c"ClientHello callback expected extensions mismatch\0A\00", align 1
@.str.354 = private unnamed_addr constant [31 x i8] c"Unable to create SSL_CTX pair\0A\00", align 1
@.str.355 = private unnamed_addr constant [30 x i8] c"Unable to create SSL objects\0A\00", align 1
@.str.356 = private unnamed_addr constant [32 x i8] c"Creating SSL connection failed\0A\00", align 1
@.str.357 = private unnamed_addr constant [47 x i8] c"Server reports Extended Master Secret support\0A\00", align 1
@.str.358 = private unnamed_addr constant [47 x i8] c"Client reports Extended Master Secret support\0A\00", align 1
@.str.359 = private unnamed_addr constant [129 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, TLS1_2_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.360 = private unnamed_addr constant [44 x i8] c"SSL_CTX_set_options(sctx, SSL_OP_NO_TICKET)\00", align 1
@.str.361 = private unnamed_addr constant [52 x i8] c"SSL_set_cipher_list(clientssl, \22AES128-GCM-SHA256\22)\00", align 1
@.str.362 = private unnamed_addr constant [18 x i8] c"AES128-GCM-SHA256\00", align 1
@.str.363 = private unnamed_addr constant [38 x i8] c"sesspre = SSL_get0_session(serverssl)\00", align 1
@.str.364 = private unnamed_addr constant [35 x i8] c"sess = SSL_get1_session(clientssl)\00", align 1
@.str.365 = private unnamed_addr constant [70 x i8] c"SSL_set_cipher_list(clientssl, \22AES256-GCM-SHA384:AES128-GCM-SHA256\22)\00", align 1
@.str.366 = private unnamed_addr constant [36 x i8] c"AES256-GCM-SHA384:AES128-GCM-SHA256\00", align 1
@.str.367 = private unnamed_addr constant [30 x i8] c"SSL_session_reused(serverssl)\00", align 1
@.str.368 = private unnamed_addr constant [39 x i8] c"sesspost = SSL_get0_session(serverssl)\00", align 1
@.str.369 = private unnamed_addr constant [8 x i8] c"sesspre\00", align 1
@.str.370 = private unnamed_addr constant [9 x i8] c"sesspost\00", align 1
@.str.371 = private unnamed_addr constant [36 x i8] c"TLS1_CK_RSA_WITH_AES_128_GCM_SHA256\00", align 1
@.str.372 = private unnamed_addr constant [53 x i8] c"SSL_CIPHER_get_id(SSL_get_current_cipher(clientssl))\00", align 1
@.str.373 = private unnamed_addr constant [52 x i8] c"SSL_set_cipher_list(clientssl, \22AES256-GCM-SHA384\22)\00", align 1
@.str.374 = private unnamed_addr constant [18 x i8] c"AES256-GCM-SHA384\00", align 1
@.str.375 = private unnamed_addr constant [27 x i8] c"SSL_renegotiate(clientssl)\00", align 1
@.str.376 = private unnamed_addr constant [35 x i8] c"SSL_renegotiate_pending(clientssl)\00", align 1
@.str.377 = private unnamed_addr constant [10 x i8] c"readbytes\00", align 1
@.str.378 = private unnamed_addr constant [28 x i8] c"SSL_get_error(clientssl, 0)\00", align 1
@.str.379 = private unnamed_addr constant [20 x i8] c"SSL_ERROR_WANT_READ\00", align 1
@.str.380 = private unnamed_addr constant [36 x i8] c"TLS1_CK_RSA_WITH_AES_256_GCM_SHA384\00", align 1
@.str.381 = private unnamed_addr constant [71 x i8] c"setupearly_data_test(&cctx, &sctx, &clientssl, &serverssl, &sess, idx)\00", align 1
@.str.382 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(clientssl, MSG1, strlen(MSG1), &written)\00", align 1
@.str.383 = private unnamed_addr constant [6 x i8] c"Hello\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"written\00", align 1
@.str.385 = private unnamed_addr constant [13 x i8] c"strlen(MSG1)\00", align 1
@.str.386 = private unnamed_addr constant [28 x i8] c"SSL_READ_EARLY_DATA_SUCCESS\00", align 1
@.str.387 = private unnamed_addr constant [5 x i8] c"MSG1\00", align 1
@.str.388 = private unnamed_addr constant [4 x i8] c"buf\00", align 1
@.str.389 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(serverssl, MSG2, strlen(MSG2), &written)\00", align 1
@.str.390 = private unnamed_addr constant [7 x i8] c"World.\00", align 1
@.str.391 = private unnamed_addr constant [13 x i8] c"strlen(MSG2)\00", align 1
@.str.392 = private unnamed_addr constant [53 x i8] c"SSL_read_ex(clientssl, buf, sizeof(buf), &readbytes)\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"MSG2\00", align 1
@.str.394 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(clientssl, MSG3, strlen(MSG3), &written)\00", align 1
@.str.395 = private unnamed_addr constant [5 x i8] c"This\00", align 1
@.str.396 = private unnamed_addr constant [13 x i8] c"strlen(MSG3)\00", align 1
@.str.397 = private unnamed_addr constant [5 x i8] c"MSG3\00", align 1
@.str.398 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(serverssl, MSG4, strlen(MSG4), &written)\00", align 1
@.str.399 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.400 = private unnamed_addr constant [13 x i8] c"strlen(MSG4)\00", align 1
@.str.401 = private unnamed_addr constant [5 x i8] c"MSG4\00", align 1
@.str.402 = private unnamed_addr constant [54 x i8] c"SSL_write_ex(clientssl, MSG5, strlen(MSG5), &written)\00", align 1
@.str.403 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.404 = private unnamed_addr constant [13 x i8] c"strlen(MSG5)\00", align 1
@.str.405 = private unnamed_addr constant [37 x i8] c"SSL_get_early_data_status(clientssl)\00", align 1
@.str.406 = private unnamed_addr constant [48 x i8] c"BIO_read_ex(rbio, data, sizeof(data), &rawread)\00", align 1
@.str.407 = private unnamed_addr constant [8 x i8] c"rawread\00", align 1
@.str.408 = private unnamed_addr constant [13 x i8] c"sizeof(data)\00", align 1
@.str.409 = private unnamed_addr constant [22 x i8] c"SSL3_RT_HEADER_LENGTH\00", align 1
@.str.410 = private unnamed_addr constant [47 x i8] c"BIO_write_ex(rbio, data, eoedlen, &rawwritten)\00", align 1
@.str.411 = private unnamed_addr constant [11 x i8] c"rawwritten\00", align 1
@.str.412 = private unnamed_addr constant [8 x i8] c"eoedlen\00", align 1
@.str.413 = private unnamed_addr constant [27 x i8] c"SSL_READ_EARLY_DATA_FINISH\00", align 1
@.str.414 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(serverssl, MSG6, strlen(MSG6), &written)\00", align 1
@.str.415 = private unnamed_addr constant [13 x i8] c"strlen(MSG6)\00", align 1
@.str.416 = private unnamed_addr constant [67 x i8] c"BIO_write_ex(rbio, data + eoedlen, rawread - eoedlen, &rawwritten)\00", align 1
@.str.417 = private unnamed_addr constant [18 x i8] c"rawread - eoedlen\00", align 1
@.str.418 = private unnamed_addr constant [53 x i8] c"SSL_read_ex(serverssl, buf, sizeof(buf), &readbytes)\00", align 1
@.str.419 = private unnamed_addr constant [62 x i8] c"SSL_write_early_data(clientssl, MSG6, strlen(MSG6), &written)\00", align 1
@.str.420 = private unnamed_addr constant [5 x i8] c"MSG6\00", align 1
@.str.421 = private unnamed_addr constant [54 x i8] c"SSL_write_ex(serverssl, MSG7, strlen(MSG7), &written)\00", align 1
@.str.422 = private unnamed_addr constant [9 x i8] c"message.\00", align 1
@.str.423 = private unnamed_addr constant [13 x i8] c"strlen(MSG7)\00", align 1
@.str.424 = private unnamed_addr constant [5 x i8] c"MSG7\00", align 1
@.str.425 = private unnamed_addr constant [23 x i8] c"SSL_connect(clientssl)\00", align 1
@.str.426 = private unnamed_addr constant [22 x i8] c"SSL_accept(serverssl)\00", align 1
@.str.427 = private unnamed_addr constant [60 x i8] c"SSL_CTX_set_max_early_data(*sctx, SSL3_RT_MAX_PLAIN_LENGTH)\00", align 1
@.str.428 = private unnamed_addr constant [67 x i8] c"create_ssl_objects(*sctx, *cctx, serverssl, clientssl, NULL, NULL)\00", align 1
@.str.429 = private unnamed_addr constant [50 x i8] c"SSL_set_tlsext_host_name(*clientssl, \22localhost\22)\00", align 1
@.str.430 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.431 = private unnamed_addr constant [49 x i8] c"SSL_SESSION_set_max_early_data(clientpsk, 0x100)\00", align 1
@.str.432 = private unnamed_addr constant [30 x i8] c"SSL_SESSION_up_ref(clientpsk)\00", align 1
@.str.433 = private unnamed_addr constant [62 x i8] c"create_ssl_connection(*serverssl, *clientssl, SSL_ERROR_NONE)\00", align 1
@.str.434 = private unnamed_addr constant [35 x i8] c"SSL_set_session(*clientssl, *sess)\00", align 1
@allow_ed_cb_called = internal unnamed_addr global i32 0, align 4
@.str.435 = private unnamed_addr constant [8 x i8] c"confctx\00", align 1
@.str.436 = private unnamed_addr constant [48 x i8] c"SSL_CONF_cmd(confctx, \22Options\22, \22-AntiReplay\22)\00", align 1
@.str.437 = private unnamed_addr constant [8 x i8] c"Options\00", align 1
@.str.438 = private unnamed_addr constant [12 x i8] c"-AntiReplay\00", align 1
@.str.439 = private unnamed_addr constant [24 x i8] c"SSL_EARLY_DATA_REJECTED\00", align 1
@.str.440 = private unnamed_addr constant [20 x i8] c"(usecb > 0) ? 1 : 0\00", align 1
@.str.441 = private unnamed_addr constant [19 x i8] c"allow_ed_cb_called\00", align 1
@.str.442 = private unnamed_addr constant [18 x i8] c"usecb > 0 ? 1 : 0\00", align 1
@.str.443 = private unnamed_addr constant [41 x i8] c"SSL_set1_groups_list(serverssl, \22P-256\22)\00", align 1
@.str.444 = private unnamed_addr constant [6 x i8] c"P-256\00", align 1
@.str.445 = private unnamed_addr constant [15 x i8] c"Dummy Identity\00", align 1
@.str.446 = private unnamed_addr constant [52 x i8] c"SSL_SESSION_set_time(sess, (long)(time(NULL) - 20))\00", align 1
@.str.447 = private unnamed_addr constant [42 x i8] c"SSL_set_recv_max_early_data(serverssl, 0)\00", align 1
@.str.448 = private unnamed_addr constant [54 x i8] c"SSL_write_ex(clientssl, MSG2, strlen(MSG2), &written)\00", align 1
@__const.early_data_skip_helper.bad_early_data = private unnamed_addr constant [6 x i8] c"\17\03\03\00\01\00", align 1
@.str.449 = private unnamed_addr constant [69 x i8] c"BIO_write_ex(wbio, bad_early_data, sizeof(bad_early_data), &written)\00", align 1
@.str.450 = private unnamed_addr constant [14 x i8] c"SSL_ERROR_SSL\00", align 1
@.str.451 = private unnamed_addr constant [18 x i8] c"Invalid test type\00", align 1
@.str.452 = private unnamed_addr constant [54 x i8] c"SSL_write_ex(clientssl, MSG1, strlen(MSG1), &written)\00", align 1
@.str.453 = private unnamed_addr constant [24 x i8] c"SSL_EARLY_DATA_NOT_SENT\00", align 1
@__const.test_early_data_psk.alpnlist = private unnamed_addr constant [17 x i8] c"\08goodalpn\07badalpn", align 16
@.str.454 = private unnamed_addr constant [69 x i8] c"setupearly_data_test(&cctx, &sctx, &clientssl, &serverssl, &sess, 2)\00", align 1
@.str.455 = private unnamed_addr constant [9 x i8] c"goodalpn\00", align 1
@servalpn = internal unnamed_addr global i8* null, align 8
@.str.456 = private unnamed_addr constant [44 x i8] c"SSL_SESSION_set1_hostname(sess, \22goodhost\22)\00", align 1
@.str.457 = private unnamed_addr constant [9 x i8] c"goodhost\00", align 1
@.str.458 = private unnamed_addr constant [47 x i8] c"SSL_set_tlsext_host_name(clientssl, \22badhost\22)\00", align 1
@.str.459 = private unnamed_addr constant [8 x i8] c"badhost\00", align 1
@.str.460 = private unnamed_addr constant [60 x i8] c"SSL_SESSION_set1_alpn_selected(sess, GOODALPN, GOODALPNLEN)\00", align 1
@.str.461 = private unnamed_addr constant [52 x i8] c"SSL_set_alpn_protos(clientssl, BADALPN, BADALPNLEN)\00", align 1
@.str.462 = private unnamed_addr constant [55 x i8] c"SSL_SESSION_set_protocol_version(sess, TLS1_2_VERSION)\00", align 1
@.str.463 = private unnamed_addr constant [10 x i8] c"serverpsk\00", align 1
@.str.464 = private unnamed_addr constant [48 x i8] c"SSL_SESSION_set1_hostname(serverpsk, \22badhost\22)\00", align 1
@.str.465 = private unnamed_addr constant [48 x i8] c"SSL_set_tlsext_host_name(clientssl, \22goodhost\22)\00", align 1
@.str.466 = private unnamed_addr constant [58 x i8] c"SSL_CTX_set_tlsext_servername_callback(sctx, hostname_cb)\00", align 1
@.str.467 = private unnamed_addr constant [8 x i8] c"badalpn\00", align 1
@.str.468 = private unnamed_addr constant [68 x i8] c"SSL_SESSION_set1_alpn_selected(sess, GOODALPN + 1, GOODALPNLEN - 1)\00", align 1
@.str.469 = private unnamed_addr constant [54 x i8] c"SSL_set_alpn_protos(clientssl, GOODALPN, GOODALPNLEN)\00", align 1
@.str.470 = private unnamed_addr constant [71 x i8] c"SSL_SESSION_set1_alpn_selected(clientpsk, BADALPN + 1, BADALPNLEN - 1)\00", align 1
@.str.471 = private unnamed_addr constant [73 x i8] c"SSL_SESSION_set1_alpn_selected(serverpsk, GOODALPN + 1, GOODALPNLEN - 1)\00", align 1
@.str.472 = private unnamed_addr constant [59 x i8] c"SSL_set_alpn_protos(clientssl, alpnlist, sizeof(alpnlist))\00", align 1
@.str.473 = private unnamed_addr constant [15 x i8] c"Bad test index\00", align 1
@.str.474 = private unnamed_addr constant [32 x i8] c"ERR_GET_REASON(ERR_get_error())\00", align 1
@.str.475 = private unnamed_addr constant [4 x i8] c"err\00", align 1
@.str.476 = private unnamed_addr constant [13 x i8] c"readearlyres\00", align 1
@.str.477 = private unnamed_addr constant [9 x i8] c"edstatus\00", align 1
@.str.478 = private unnamed_addr constant [11 x i8] c"connectres\00", align 1
@.str.479 = private unnamed_addr constant [12 x i8] c"altgoodhost\00", align 1
@.str.480 = private unnamed_addr constant [23 x i8] c"TLS_AES_128_GCM_SHA256\00", align 1
@.str.481 = private unnamed_addr constant [23 x i8] c"TLS_AES_256_GCM_SHA384\00", align 1
@.str.482 = private unnamed_addr constant [29 x i8] c"TLS_CHACHA20_POLY1305_SHA256\00", align 1
@.str.483 = private unnamed_addr constant [23 x i8] c"TLS_AES_128_CCM_SHA256\00", align 1
@.str.484 = private unnamed_addr constant [25 x i8] c"TLS_AES_128_CCM_8_SHA256\00", align 1
@.str.485 = private unnamed_addr constant [3 x i8] c"\13\01\00", align 1
@.str.486 = private unnamed_addr constant [3 x i8] c"\13\03\00", align 1
@.str.487 = private unnamed_addr constant [3 x i8] c"\13\04\00", align 1
@.str.488 = private unnamed_addr constant [3 x i8] c"\13\05\00", align 1
@.str.489 = private unnamed_addr constant [49 x i8] c"SSL_set_ciphersuites(clientssl, cipher_str[idx])\00", align 1
@.str.490 = private unnamed_addr constant [49 x i8] c"SSL_set_ciphersuites(serverssl, cipher_str[idx])\00", align 1
@.str.491 = private unnamed_addr constant [70 x i8] c"setupearly_data_test(&cctx, &sctx, &clientssl, &serverssl, NULL, idx)\00", align 1
@.str.492 = private unnamed_addr constant [54 x i8] c"SSL_write_ex(serverssl, MSG2, strlen(MSG2), &written)\00", align 1
@.str.493 = private unnamed_addr constant [80 x i8] c"SSL_CTX_set_ciphersuites(sctx, \22TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_SHA256\22)\00", align 1
@.str.494 = private unnamed_addr constant [46 x i8] c"TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_SHA256\00", align 1
@.str.495 = private unnamed_addr constant [51 x i8] c"SSL_CTX_set_cipher_list(cctx, \22AES256-GCM-SHA384\22)\00", align 1
@.str.496 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_ciphersuites(cctx, \22TLS_AES_128_GCM_SHA256\22)\00", align 1
@.str.497 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_ciphersuites(cctx, \22TLS_AES_128_CCM_SHA256\22)\00", align 1
@.str.498 = private unnamed_addr constant [58 x i8] c"SSL_set_ciphersuites(clientssl, \22TLS_AES_128_GCM_SHA256\22)\00", align 1
@.str.499 = private unnamed_addr constant [58 x i8] c"SSL_set_ciphersuites(clientssl, \22TLS_AES_128_CCM_SHA256\22)\00", align 1
@.str.500 = private unnamed_addr constant [109 x i8] c"SSL_CTX_set_ciphersuites(sctx, \22TLS_AES_128_GCM_SHA256:\22 \22TLS_AES_256_GCM_SHA384:\22 \22TLS_AES_128_CCM_SHA256\22)\00", align 1
@.str.501 = private unnamed_addr constant [69 x i8] c"TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256\00", align 1
@.str.502 = private unnamed_addr constant [37 x i8] c"SSL_set_session(clientssl, clntsess)\00", align 1
@.str.503 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_ciphersuites(cctx, \22TLS_AES_256_GCM_SHA384\22)\00", align 1
@.str.504 = private unnamed_addr constant [59 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_SSL)\00", align 1
@.str.505 = private unnamed_addr constant [80 x i8] c"SSL_CTX_set_ciphersuites(cctx, \22TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384\22)\00", align 1
@.str.506 = private unnamed_addr constant [46 x i8] c"TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384\00", align 1
@.str.507 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_ciphersuites(sctx, \22TLS_AES_256_GCM_SHA384\22)\00", align 1
@.str.508 = private unnamed_addr constant [65 x i8] c"create_ssl_connection(serverssl, clientssl, SSL_ERROR_WANT_READ)\00", align 1
@.str.509 = private unnamed_addr constant [37 x i8] c"SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED\00", align 1
@test_tls13_ciphersuite.t13_ciphers = internal unnamed_addr constant [6 x %struct.anon.6] [%struct.anon.6 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i32 0, i32 0), i32 1 }, %struct.anon.6 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i32 0, i32 0), i32 1 }, %struct.anon.6 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.483, i32 0, i32 0), i32 1 }, %struct.anon.6 { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.482, i32 0, i32 0), i32 0 }, %struct.anon.6 { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.510, i32 0, i32 0), i32 0 }, %struct.anon.6 { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.511, i32 0, i32 0), i32 1 }], align 16
@.str.510 = private unnamed_addr constant [52 x i8] c"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\00", align 1
@.str.511 = private unnamed_addr constant [48 x i8] c"TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256\00", align 1
@.str.512 = private unnamed_addr constant [14 x i8] c"AES128-SHA256\00", align 1
@.str.513 = private unnamed_addr constant [122 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, max_ver, &sctx, &cctx, cert, privkey)\00", align 1
@.str.514 = private unnamed_addr constant [43 x i8] c"SSL_CTX_set_ciphersuites(sctx, t13_cipher)\00", align 1
@.str.515 = private unnamed_addr constant [43 x i8] c"SSL_CTX_set_ciphersuites(cctx, t13_cipher)\00", align 1
@.str.516 = private unnamed_addr constant [42 x i8] c"SSL_CTX_set_cipher_list(sctx, t12_cipher)\00", align 1
@.str.517 = private unnamed_addr constant [42 x i8] c"SSL_CTX_set_cipher_list(cctx, t12_cipher)\00", align 1
@.str.518 = private unnamed_addr constant [44 x i8] c"SSL_set_ciphersuites(serverssl, t13_cipher)\00", align 1
@.str.519 = private unnamed_addr constant [44 x i8] c"SSL_set_ciphersuites(clientssl, t13_cipher)\00", align 1
@.str.520 = private unnamed_addr constant [43 x i8] c"SSL_set_cipher_list(serverssl, t12_cipher)\00", align 1
@.str.521 = private unnamed_addr constant [43 x i8] c"SSL_set_cipher_list(clientssl, t12_cipher)\00", align 1
@.str.522 = private unnamed_addr constant [19 x i8] c"negotiated_scipher\00", align 1
@.str.523 = private unnamed_addr constant [19 x i8] c"negotiated_ccipher\00", align 1
@.str.524 = private unnamed_addr constant [11 x i8] c"t13_cipher\00", align 1
@.str.525 = private unnamed_addr constant [11 x i8] c"t12_cipher\00", align 1
@__const.test_tls13_psk.key = private unnamed_addr constant [48 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./", align 16
@.str.526 = private unnamed_addr constant [152 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, 0, &sctx, &cctx, idx == 3 ? NULL : cert, idx == 3 ? NULL : privkey)\00", align 1
@.str.527 = private unnamed_addr constant [83 x i8] c"SSL_CTX_set_ciphersuites(cctx, \22TLS_AES_256_GCM_SHA384:\22 \22TLS_AES_128_GCM_SHA256\22)\00", align 1
@.str.528 = private unnamed_addr constant [46 x i8] c"TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256\00", align 1
@psk_client_cb_cnt = internal unnamed_addr global i32 0, align 4
@psk_server_cb_cnt = internal unnamed_addr global i32 0, align 4
@.str.529 = private unnamed_addr constant [24 x i8] c"use_session_cb_cnt == 1\00", align 1
@.str.530 = private unnamed_addr constant [25 x i8] c"find_session_cb_cnt == 0\00", align 1
@.str.531 = private unnamed_addr constant [25 x i8] c"psk_client_cb_cnt == idx\00", align 1
@.str.532 = private unnamed_addr constant [23 x i8] c"psk_server_cb_cnt == 0\00", align 1
@.str.533 = private unnamed_addr constant [24 x i8] c"use_session_cb_cnt == 0\00", align 1
@.str.534 = private unnamed_addr constant [23 x i8] c"psk_client_cb_cnt == 1\00", align 1
@.str.535 = private unnamed_addr constant [57 x i8] c"SSL_SESSION_set1_master_key(clientpsk, key, sizeof(key))\00", align 1
@.str.536 = private unnamed_addr constant [42 x i8] c"SSL_SESSION_set_cipher(clientpsk, cipher)\00", align 1
@.str.537 = private unnamed_addr constant [60 x i8] c"SSL_SESSION_set_protocol_version(clientpsk, TLS1_3_VERSION)\00", align 1
@.str.538 = private unnamed_addr constant [25 x i8] c"find_session_cb_cnt == 1\00", align 1
@.str.539 = private unnamed_addr constant [23 x i8] c"psk_client_cb_cnt == 0\00", align 1
@.str.540 = private unnamed_addr constant [23 x i8] c"psk_server_cb_cnt == 1\00", align 1
@.str.541 = private unnamed_addr constant [24 x i8] c"use_session_cb_cnt == 2\00", align 1
@.str.542 = private unnamed_addr constant [25 x i8] c"find_session_cb_cnt == 2\00", align 1
@.str.543 = private unnamed_addr constant [23 x i8] c"psk_client_cb_cnt == 2\00", align 1
@.str.544 = private unnamed_addr constant [23 x i8] c"psk_server_cb_cnt == 2\00", align 1
@.str.545 = private unnamed_addr constant [25 x i8] c"psk_server_cb_cnt == idx\00", align 1
@ecdhe_kexch_groups = internal global [5 x i32] [i32 415, i32 715, i32 716, i32 1034, i32 1035], align 16
@.str.546 = private unnamed_addr constant [10 x i8] c"secp256r1\00", align 1
@.str.547 = private unnamed_addr constant [10 x i8] c"secp384r1\00", align 1
@.str.548 = private unnamed_addr constant [10 x i8] c"secp521r1\00", align 1
@.str.549 = private unnamed_addr constant [7 x i8] c"x25519\00", align 1
@.str.550 = private unnamed_addr constant [5 x i8] c"x448\00", align 1
@.str.551 = private unnamed_addr constant [10 x i8] c"ffdhe2048\00", align 1
@ffdhe_kexch_groups = internal global [5 x i32] [i32 1126, i32 1127, i32 1128, i32 1129, i32 1130], align 16
@.str.552 = private unnamed_addr constant [10 x i8] c"ffdhe3072\00", align 1
@.str.553 = private unnamed_addr constant [10 x i8] c"ffdhe4096\00", align 1
@.str.554 = private unnamed_addr constant [10 x i8] c"ffdhe6144\00", align 1
@.str.555 = private unnamed_addr constant [10 x i8] c"ffdhe8192\00", align 1
@.str.556 = private unnamed_addr constant [126 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, max_version, &sctx, &cctx, cert, privkey)\00", align 1
@.str.557 = private unnamed_addr constant [62 x i8] c"SSL_CTX_set_ciphersuites(sctx, TLS1_3_RFC_AES_128_GCM_SHA256)\00", align 1
@.str.558 = private unnamed_addr constant [62 x i8] c"SSL_CTX_set_ciphersuites(cctx, TLS1_3_RFC_AES_128_GCM_SHA256)\00", align 1
@.str.559 = private unnamed_addr constant [119 x i8] c"SSL_CTX_set_cipher_list(sctx, TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \22:\22 TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256)\00", align 1
@.str.560 = private unnamed_addr constant [54 x i8] c"ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256\00", align 1
@.str.561 = private unnamed_addr constant [29 x i8] c"SSL_CTX_set_dh_auto(sctx, 1)\00", align 1
@.str.562 = private unnamed_addr constant [119 x i8] c"SSL_CTX_set_cipher_list(cctx, TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \22:\22 TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256)\00", align 1
@.str.563 = private unnamed_addr constant [60 x i8] c"SSL_set1_groups(serverssl, kexch_groups, kexch_groups_size)\00", align 1
@.str.564 = private unnamed_addr constant [60 x i8] c"SSL_set1_groups(clientssl, kexch_groups, kexch_groups_size)\00", align 1
@.str.565 = private unnamed_addr constant [35 x i8] c"SSL_get_shared_group(serverssl, 0)\00", align 1
@.str.566 = private unnamed_addr constant [32 x i8] c"idx == 13 ? 0 : kexch_groups[0]\00", align 1
@.str.567 = private unnamed_addr constant [46 x i8] c"SSL_group_to_name(serverssl, kexch_groups[0])\00", align 1
@.str.568 = private unnamed_addr constant [12 x i8] c"kexch_name0\00", align 1
@.str.569 = private unnamed_addr constant [36 x i8] c"SSL_get_negotiated_group(serverssl)\00", align 1
@.str.570 = private unnamed_addr constant [16 x i8] c"kexch_groups[0]\00", align 1
@.str.571 = private unnamed_addr constant [36 x i8] c"SSL_get_negotiated_group(clientssl)\00", align 1
@.str.572 = private unnamed_addr constant [64 x i8] c"set_ssl_groups(serverssl, clientssl, clientmulti, isecdhe, idx)\00", align 1
@.str.573 = private unnamed_addr constant [12 x i8] c"expectednid\00", align 1
@.str.574 = private unnamed_addr constant [41 x i8] c"(origsess = SSL_get1_session(clientssl))\00", align 1
@.str.575 = private unnamed_addr constant [37 x i8] c"SSL_set_session(clientssl, origsess)\00", align 1
@.str.576 = private unnamed_addr constant [10 x i8] c"kexch_alg\00", align 1
@.str.577 = private unnamed_addr constant [44 x i8] c"SSL_set1_groups(serverssl, kexch_groups, 1)\00", align 1
@.str.578 = private unnamed_addr constant [54 x i8] c"SSL_set1_groups(clientssl, ecdhe_kexch_groups, numec)\00", align 1
@.str.579 = private unnamed_addr constant [54 x i8] c"SSL_set1_groups(clientssl, ffdhe_kexch_groups, numff)\00", align 1
@.str.580 = private unnamed_addr constant [44 x i8] c"SSL_set1_groups(clientssl, kexch_groups, 1)\00", align 1
@.str.581 = private unnamed_addr constant [54 x i8] c"SSL_set1_groups(serverssl, ecdhe_kexch_groups, numec)\00", align 1
@.str.582 = private unnamed_addr constant [54 x i8] c"SSL_set1_groups(serverssl, ffdhe_kexch_groups, numff)\00", align 1
@test_custom_exts.server = internal global i32 1, align 4
@test_custom_exts.client = internal global i32 0, align 4
@srvparseoldcb = internal unnamed_addr global i32 0, align 4
@srvaddoldcb = internal unnamed_addr global i32 0, align 4
@clntparseoldcb = internal unnamed_addr global i32 0, align 4
@clntaddoldcb = internal unnamed_addr global i32 0, align 4
@srvparsenewcb = internal unnamed_addr global i32 0, align 4
@srvaddnewcb = internal unnamed_addr global i32 0, align 4
@clntparsenewcb = internal unnamed_addr global i32 0, align 4
@clntaddnewcb = internal unnamed_addr global i32 0, align 4
@snicb = internal unnamed_addr global i32 0, align 4
@.str.583 = private unnamed_addr constant [101 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), NULL, TLS1_VERSION, 0, &sctx2, NULL, cert, privkey)\00", align 1
@.str.584 = private unnamed_addr constant [109 x i8] c"SSL_CTX_add_client_custom_ext(cctx, TEST_EXT_TYPE1, old_add_cb, old_free_cb, &client, old_parse_cb, &client)\00", align 1
@.str.585 = private unnamed_addr constant [111 x i8] c"SSL_CTX_add_custom_ext(cctx, TEST_EXT_TYPE1, context, new_add_cb, new_free_cb, &client, new_parse_cb, &client)\00", align 1
@.str.586 = private unnamed_addr constant [109 x i8] c"SSL_CTX_add_server_custom_ext(sctx, TEST_EXT_TYPE1, old_add_cb, old_free_cb, &server, old_parse_cb, &server)\00", align 1
@.str.587 = private unnamed_addr constant [111 x i8] c"SSL_CTX_add_custom_ext(sctx, TEST_EXT_TYPE1, context, new_add_cb, new_free_cb, &server, new_parse_cb, &server)\00", align 1
@.str.588 = private unnamed_addr constant [112 x i8] c"SSL_CTX_add_custom_ext(sctx2, TEST_EXT_TYPE1, context, new_add_cb, new_free_cb, &server, new_parse_cb, &server)\00", align 1
@.str.589 = private unnamed_addr constant [53 x i8] c"SSL_CTX_set_tlsext_servername_callback(sctx, sni_cb)\00", align 1
@.str.590 = private unnamed_addr constant [47 x i8] c"SSL_CTX_set_tlsext_servername_arg(sctx, sctx2)\00", align 1
@.str.591 = private unnamed_addr constant [25 x i8] c"SSL_stateless(serverssl)\00", align 1
@cookie_magic_value = internal global [13 x i8] c"cookie magic\00", align 1
@.str.592 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_min_proto_version(sctx, TLS1_3_VERSION)\00", align 1
@.str.593 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_max_proto_version(sctx, TLS1_3_VERSION)\00", align 1
@.str.594 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_min_proto_version(cctx, TLS1_3_VERSION)\00", align 1
@.str.595 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_max_proto_version(cctx, TLS1_3_VERSION)\00", align 1
@.str.596 = private unnamed_addr constant [44 x i8] c"SSL_verify_client_post_handshake(serverssl)\00", align 1
@.str.597 = private unnamed_addr constant [56 x i8] c"SSL_key_update(clientssl, SSL_KEY_UPDATE_NOT_REQUESTED)\00", align 1
@.str.598 = private unnamed_addr constant [4 x i8] c"ctx\00", align 1
@serverinfov2 = internal global [9 x i8] c"\00\00\00\80\FF\FF\00\01\FF", align 1
@serverinfov1 = internal global [5 x i8] c"\FF\FF\00\01\FF", align 1
@.str.599 = private unnamed_addr constant [16 x i8] c"ret == expected\00", align 1
@__const.test_export_key_mat.label = private unnamed_addr constant [250 x i8] c"test labelalign 16
@__const.test_export_key_mat.protocols = private unnamed_addr constant [6 x i32] [i32 769, i32 770, i32 771, i32 772, i32 772, i32 772], align 16
@.str.600 = private unnamed_addr constant [66 x i8] c"assertion failed: tst >= 0 && (size_t)tst < OSSL_NELEM(protocols)\00", align 1
@.str.601 = private unnamed_addr constant [20 x i8] c"DEFAULT:@SECLEVEL=0\00", align 1
@.str.602 = private unnamed_addr constant [127 x i8] c"SSL_export_keying_material(clientssl, ckeymat1, sizeof(ckeymat1), label, SMALL_LABEL_LEN + 1, context, sizeof(context) - 1, 1)\00", align 1
@.str.603 = private unnamed_addr constant [126 x i8] c"SSL_export_keying_material(clientssl, ckeymat1, sizeof(ckeymat1), label, LONG_LABEL_LEN + 1, context, sizeof(context) - 1, 1)\00", align 1
@.str.604 = private unnamed_addr constant [116 x i8] c"SSL_export_keying_material(clientssl, ckeymat1, sizeof(ckeymat1), label, labellen, context, sizeof(context) - 1, 1)\00", align 1
@.str.605 = private unnamed_addr constant [103 x i8] c"SSL_export_keying_material(clientssl, ckeymat2, sizeof(ckeymat2), label, labellen, emptycontext, 0, 1)\00", align 1
@.str.606 = private unnamed_addr constant [95 x i8] c"SSL_export_keying_material(clientssl, ckeymat3, sizeof(ckeymat3), label, labellen, NULL, 0, 0)\00", align 1
@.str.607 = private unnamed_addr constant [115 x i8] c"SSL_export_keying_material(serverssl, skeymat1, sizeof(skeymat1), label, labellen, context, sizeof(context) -1, 1)\00", align 1
@.str.608 = private unnamed_addr constant [103 x i8] c"SSL_export_keying_material(serverssl, skeymat2, sizeof(skeymat2), label, labellen, emptycontext, 0, 1)\00", align 1
@.str.609 = private unnamed_addr constant [95 x i8] c"SSL_export_keying_material(serverssl, skeymat3, sizeof(skeymat3), label, labellen, NULL, 0, 0)\00", align 1
@.str.610 = private unnamed_addr constant [9 x i8] c"ckeymat1\00", align 1
@.str.611 = private unnamed_addr constant [9 x i8] c"skeymat1\00", align 1
@.str.612 = private unnamed_addr constant [9 x i8] c"ckeymat2\00", align 1
@.str.613 = private unnamed_addr constant [9 x i8] c"skeymat2\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"ckeymat3\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"skeymat3\00", align 1
@test_export_key_mat_early.label = internal constant [11 x i8] c"test label\00", align 1
@test_export_key_mat_early.context = internal constant [8 x i8] c"context\00", align 1
@.str.616 = private unnamed_addr constant [129 x i8] c"SSL_export_keying_material_early( clientssl, ckeymat1, sizeof(ckeymat1), label, sizeof(label) - 1, context, sizeof(context) - 1)\00", align 1
@.str.617 = private unnamed_addr constant [116 x i8] c"SSL_export_keying_material_early( clientssl, ckeymat2, sizeof(ckeymat2), label, sizeof(label) - 1, emptycontext, 0)\00", align 1
@.str.618 = private unnamed_addr constant [129 x i8] c"SSL_export_keying_material_early( serverssl, skeymat1, sizeof(skeymat1), label, sizeof(label) - 1, context, sizeof(context) - 1)\00", align 1
@.str.619 = private unnamed_addr constant [116 x i8] c"SSL_export_keying_material_early( serverssl, skeymat2, sizeof(skeymat2), label, sizeof(label) - 1, emptycontext, 0)\00", align 1
@.str.621 = private unnamed_addr constant [118 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_3_VERSION, 0, &sctx, &cctx, cert, privkey)\00", align 1
@.str.622 = private unnamed_addr constant [94 x i8] c"SSL_key_update(clientssl, (j == 0) ? SSL_KEY_UPDATE_NOT_REQUESTED : SSL_KEY_UPDATE_REQUESTED)\00", align 1
@.str.623 = private unnamed_addr constant [28 x i8] c"SSL_do_handshake(clientssl)\00", align 1
@.str.624 = private unnamed_addr constant [41 x i8] c"SSL_write(clientssl, mess, strlen(mess))\00", align 1
@.str.625 = private unnamed_addr constant [13 x i8] c"strlen(mess)\00", align 1
@.str.626 = private unnamed_addr constant [38 x i8] c"SSL_read(serverssl, buf, sizeof(buf))\00", align 1
@.str.627 = private unnamed_addr constant [41 x i8] c"SSL_write(serverssl, mess, strlen(mess))\00", align 1
@.str.628 = private unnamed_addr constant [38 x i8] c"SSL_read(clientssl, buf, sizeof(buf))\00", align 1
@.str.629 = private unnamed_addr constant [53 x i8] c"SSL_key_update(peerupdate, SSL_KEY_UPDATE_REQUESTED)\00", align 1
@.str.630 = private unnamed_addr constant [29 x i8] c"SSL_do_handshake(peerupdate)\00", align 1
@.str.631 = private unnamed_addr constant [41 x i8] c"SSL_write(peerwrite, mess, strlen(mess))\00", align 1
@.str.632 = private unnamed_addr constant [28 x i8] c"SSL_get_error(peerwrite, 0)\00", align 1
@.str.633 = private unnamed_addr constant [38 x i8] c"SSL_read(peerwrite, buf, sizeof(buf))\00", align 1
@.str.634 = private unnamed_addr constant [39 x i8] c"SSL_read(peerupdate, buf, sizeof(buf))\00", align 1
@.str.635 = private unnamed_addr constant [41 x i8] c"BIO_new_bio_pair(&lbio, 512, &pbio, 512)\00", align 1
@.str.636 = private unnamed_addr constant [48 x i8] c"SSL_key_update(local, SSL_KEY_UPDATE_REQUESTED)\00", align 1
@.str.637 = private unnamed_addr constant [39 x i8] c"SSL_write(local, lwbuf, sizeof(lwbuf))\00", align 1
@.str.638 = private unnamed_addr constant [25 x i8] c"SSL_get_error(local, -1)\00", align 1
@.str.639 = private unnamed_addr constant [37 x i8] c"SSL_read(peer, prbuf, sizeof(prbuf))\00", align 1
@.str.640 = private unnamed_addr constant [24 x i8] c"SSL_get_error(peer, -1)\00", align 1
@.str.641 = private unnamed_addr constant [36 x i8] c"SSL_write(peer, mess, strlen(mess))\00", align 1
@.str.642 = private unnamed_addr constant [14 x i8] c"sizeof(lwbuf)\00", align 1
@.str.643 = private unnamed_addr constant [14 x i8] c"sizeof(prbuf)\00", align 1
@.str.644 = private unnamed_addr constant [37 x i8] c"SSL_write(local, mess, strlen(mess))\00", align 1
@.str.645 = private unnamed_addr constant [33 x i8] c"ERR_GET_REASON(ERR_peek_error())\00", align 1
@.str.646 = private unnamed_addr constant [22 x i8] c"SSL_R_BAD_WRITE_RETRY\00", align 1
@.str.647 = private unnamed_addr constant [24 x i8] c"SSL_do_handshake(local)\00", align 1
@.str.648 = private unnamed_addr constant [33 x i8] c"SSL_read(peer, buf, sizeof(buf))\00", align 1
@.str.649 = private unnamed_addr constant [34 x i8] c"SSL_read(local, buf, sizeof(buf))\00", align 1
@.str.650 = private unnamed_addr constant [38 x i8] c"SSL_write(peer, pwbuf, sizeof(pwbuf))\00", align 1
@.str.651 = private unnamed_addr constant [38 x i8] c"SSL_read(local, lrbuf, sizeof(lrbuf))\00", align 1
@.str.652 = private unnamed_addr constant [14 x i8] c"sizeof(pwbuf)\00", align 1
@.str.653 = private unnamed_addr constant [14 x i8] c"sizeof(lrbuf)\00", align 1
@.str.654 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_max_proto_version(cctx, TLS1_2_VERSION)\00", align 1
@.str.655 = private unnamed_addr constant [21 x i8] c"SSL_clear(clientssl)\00", align 1
@.str.656 = private unnamed_addr constant [96 x i8] c"create_ssl_ctx_pair(libctx, NULL, TLS_client_method(), TLS1_VERSION, 0, NULL, &ctx, NULL, NULL)\00", align 1
@.str.657 = private unnamed_addr constant [77 x i8] c"SSL_CTX_set_tlsext_max_fragment_length( ctx, max_fragment_len_test[idx_tst])\00", align 1
@max_fragment_len_test = internal unnamed_addr constant [4 x i8] c"\01\02\03\04", align 1
@.str.658 = private unnamed_addr constant [4 x i8] c"con\00", align 1
@.str.659 = private unnamed_addr constant [5 x i8] c"rbio\00", align 1
@.str.660 = private unnamed_addr constant [5 x i8] c"wbio\00", align 1
@.str.661 = private unnamed_addr constant [17 x i8] c"SSL_connect(con)\00", align 1
@.str.662 = private unnamed_addr constant [43 x i8] c"get_MFL_from_client_hello(wbio, &MFL_mode)\00", align 1
@.str.663 = private unnamed_addr constant [43 x i8] c"max_fragment_len_test[idx_tst] == MFL_mode\00", align 1
@.str.664 = private unnamed_addr constant [47 x i8] c"len = BIO_get_mem_data( bio, (char **) &data )\00", align 1
@.str.665 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.666 = private unnamed_addr constant [35 x i8] c"PACKET_buf_init( &pkt, data, len )\00", align 1
@.str.667 = private unnamed_addr constant [44 x i8] c"PACKET_forward(&pkt, SSL3_HM_HEADER_LENGTH)\00", align 1
@.str.668 = private unnamed_addr constant [60 x i8] c"PACKET_forward(&pkt, CLIENT_VERSION_LEN + SSL3_RANDOM_SIZE)\00", align 1
@.str.669 = private unnamed_addr constant [42 x i8] c"PACKET_get_length_prefixed_1(&pkt, &pkt2)\00", align 1
@.str.670 = private unnamed_addr constant [42 x i8] c"PACKET_get_length_prefixed_2(&pkt, &pkt2)\00", align 1
@.str.671 = private unnamed_addr constant [41 x i8] c"PACKET_as_length_prefixed_2(&pkt, &pkt2)\00", align 1
@.str.672 = private unnamed_addr constant [31 x i8] c"PACKET_get_net_2(&pkt2, &type)\00", align 1
@.str.673 = private unnamed_addr constant [43 x i8] c"PACKET_get_length_prefixed_2(&pkt2, &pkt3)\00", align 1
@.str.674 = private unnamed_addr constant [24 x i8] c"PACKET_remaining(&pkt3)\00", align 1
@.str.675 = private unnamed_addr constant [31 x i8] c"PACKET_get_1(&pkt3, &MFL_code)\00", align 1
@.str.676 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@vbase = internal unnamed_addr global %struct.SRP_VBASE_st* null, align 8
@.str.677 = private unnamed_addr constant [6 x i8] c"vbase\00", align 1
@.str.678 = private unnamed_addr constant [35 x i8] c"create_new_vbase(userid, password)\00", align 1
@.str.679 = private unnamed_addr constant [48 x i8] c"create_new_vfile(userid, password, tmpfilename)\00", align 1
@.str.680 = private unnamed_addr constant [34 x i8] c"SRP_VBASE_init(vbase, tstsrpfile)\00", align 1
@.str.681 = private unnamed_addr constant [13 x i8] c"SRP_NO_ERROR\00", align 1
@.str.682 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_srp_username_callback(sctx, ssl_srp_cb)\00", align 1
@.str.683 = private unnamed_addr constant [53 x i8] c"SSL_CTX_set_cipher_list(cctx, \22SRP-AES-128-CBC-SHA\22)\00", align 1
@.str.684 = private unnamed_addr constant [20 x i8] c"SRP-AES-128-CBC-SHA\00", align 1
@.str.685 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_max_proto_version(sctx, TLS1_2_VERSION)\00", align 1
@.str.686 = private unnamed_addr constant [39 x i8] c"SSL_CTX_set_srp_username(cctx, userid)\00", align 1
@.str.687 = private unnamed_addr constant [42 x i8] c"SSL_CTX_set_srp_password(cctx, \22badpass\22)\00", align 1
@.str.688 = private unnamed_addr constant [8 x i8] c"badpass\00", align 1
@.str.689 = private unnamed_addr constant [41 x i8] c"SSL_CTX_set_srp_password(cctx, password)\00", align 1
@.str.690 = private unnamed_addr constant [13 x i8] c"tst % 2 == 0\00", align 1
@.str.691 = private unnamed_addr constant [13 x i8] c"tst % 2 == 1\00", align 1
@.str.692 = private unnamed_addr constant [4 x i8] c"lgN\00", align 1
@.str.693 = private unnamed_addr constant [92 x i8] c"SRP_create_verifier_BN_ex(userid, password, &salt, &verifier, lgN->N, lgN->g, libctx, NULL)\00", align 1
@.str.694 = private unnamed_addr constant [9 x i8] c"user_pwd\00", align 1
@.str.695 = private unnamed_addr constant [13 x i8] c"user_pwd->id\00", align 1
@.str.696 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.697 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.698 = private unnamed_addr constant [4 x i8] c"row\00", align 1
@.str.699 = private unnamed_addr constant [5 x i8] c"gNid\00", align 1
@.str.700 = private unnamed_addr constant [3 x i8] c"db\00", align 1
@.str.701 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.702 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.703 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.704 = private unnamed_addr constant [14 x i8] c"row[DB_srpid]\00", align 1
@.str.705 = private unnamed_addr constant [16 x i8] c"row[DB_srptype]\00", align 1
@.str.706 = private unnamed_addr constant [14 x i8] c"row[DB_srpgN]\00", align 1
@.str.707 = private unnamed_addr constant [23 x i8] c"TXT_DB_insert(db, row)\00", align 1
@info_cb_failed = internal unnamed_addr global i1 false, align 4
@info_cb_this_state = internal unnamed_addr global i32 -1, align 4
@info_cb_offset = internal unnamed_addr global i32 0, align 4
@.str.708 = private unnamed_addr constant [69 x i8] c"setupearly_data_test(&cctx, &sctx, &clientssl, &serverssl, &sess, 0)\00", align 1
@.str.709 = private unnamed_addr constant [15 x i8] c"info_cb_failed\00", align 1
@.str.710 = private unnamed_addr constant [117 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), tlsvers, tlsvers, &sctx, &cctx, cert, privkey)\00", align 1
@.str.711 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.712 = private unnamed_addr constant [52 x i8] c"(SSL_is_server(s) && (where & SSL_ST_CONNECT) != 0)\00", align 1
@.str.713 = private unnamed_addr constant [50 x i8] c"!SSL_is_server(s) && (where & SSL_ST_ACCEPT) != 0\00", align 1
@.str.714 = private unnamed_addr constant [34 x i8] c"state[++info_cb_this_state].where\00", align 1
@.str.715 = private unnamed_addr constant [47 x i8] c"(where & state[info_cb_this_state].where) != 0\00", align 1
@.str.716 = private unnamed_addr constant [64 x i8] c"strcmp(SSL_state_string(s), state[info_cb_this_state].statestr)\00", align 1
@.str.717 = private unnamed_addr constant [6 x i8] c"PINIT\00", align 1
@.str.718 = private unnamed_addr constant [5 x i8] c"TRCH\00", align 1
@.str.719 = private unnamed_addr constant [5 x i8] c"TWSH\00", align 1
@.str.720 = private unnamed_addr constant [5 x i8] c"TWSC\00", align 1
@.str.721 = private unnamed_addr constant [6 x i8] c"TWSKE\00", align 1
@.str.722 = private unnamed_addr constant [5 x i8] c"TWSD\00", align 1
@.str.723 = private unnamed_addr constant [6 x i8] c"TRCKE\00", align 1
@.str.724 = private unnamed_addr constant [6 x i8] c"TRCCS\00", align 1
@.str.725 = private unnamed_addr constant [6 x i8] c"TRFIN\00", align 1
@.str.726 = private unnamed_addr constant [5 x i8] c"TWST\00", align 1
@.str.727 = private unnamed_addr constant [6 x i8] c"TWCCS\00", align 1
@.str.728 = private unnamed_addr constant [6 x i8] c"TWFIN\00", align 1
@.str.729 = private unnamed_addr constant [5 x i8] c"TWCH\00", align 1
@.str.730 = private unnamed_addr constant [5 x i8] c"TRSH\00", align 1
@.str.731 = private unnamed_addr constant [5 x i8] c"TRSC\00", align 1
@.str.732 = private unnamed_addr constant [6 x i8] c"TRSKE\00", align 1
@.str.733 = private unnamed_addr constant [5 x i8] c"TRSD\00", align 1
@.str.734 = private unnamed_addr constant [6 x i8] c"TWCKE\00", align 1
@.str.735 = private unnamed_addr constant [5 x i8] c"TRST\00", align 1
@.str.736 = private unnamed_addr constant [5 x i8] c"TWEE\00", align 1
@.str.737 = private unnamed_addr constant [6 x i8] c"TWSCV\00", align 1
@.str.738 = private unnamed_addr constant [4 x i8] c"TED\00", align 1
@.str.739 = private unnamed_addr constant [5 x i8] c"TREE\00", align 1
@.str.740 = private unnamed_addr constant [6 x i8] c"TRSCV\00", align 1
@.str.741 = private unnamed_addr constant [6 x i8] c"SSLOK\00", align 1
@.str.742 = private unnamed_addr constant [7 x i8] c"TWEOED\00", align 1
@.str.743 = private unnamed_addr constant [6 x i8] c"TPEDE\00", align 1
@info_cb_states = internal unnamed_addr constant <{ <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [34 x %struct.info_cb_states_st], [26 x %struct.info_cb_states_st] }>, <{ [39 x %struct.info_cb_states_st], [21 x %struct.info_cb_states_st] }>, <{ [18 x %struct.info_cb_states_st], [42 x %struct.info_cb_states_st] }>, <{ [21 x %struct.info_cb_states_st], [39 x %struct.info_cb_states_st] }>, [60 x %struct.info_cb_states_st] }> <{ <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }> <{ [32 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.720, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.721, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.722, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.722, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.723, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.724, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.726, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16384, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.724, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }], [28 x %struct.info_cb_states_st] zeroinitializer }>, <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }> <{ [32 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.731, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.732, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.733, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.734, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.735, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.724, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16384, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.724, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }], [28 x %struct.info_cb_states_st] zeroinitializer }>, <{ [34 x %struct.info_cb_states_st], [26 x %struct.info_cb_states_st] }> <{ [34 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.720, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.737, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.726, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.726, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16384, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.726, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }], [26 x %struct.info_cb_states_st] zeroinitializer }>, <{ [39 x %struct.info_cb_states_st], [21 x %struct.info_cb_states_st] }> <{ [39 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.739, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.731, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.740, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.735, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.735, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16384, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.739, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.735, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }], [21 x %struct.info_cb_states_st] zeroinitializer }>, <{ [18 x %struct.info_cb_states_st], [42 x %struct.info_cb_states_st] }> <{ [18 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.719, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.742, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.726, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }], [42 x %struct.info_cb_states_st] zeroinitializer }>, <{ [21 x %struct.info_cb_states_st], [39 x %struct.info_cb_states_st] }> <{ [21 x %struct.info_cb_states_st] [%struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.717, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.729, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.727, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 16, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.738, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.730, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.739, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.725, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.743, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.742, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.728, i32 0, i32 0) }, %struct.info_cb_states_st { i32 32, i8* null }, %struct.info_cb_states_st { i32 2, i8* null }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.741, i32 0, i32 0) }, %struct.info_cb_states_st { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.735, i32 0, i32 0) }, %struct.info_cb_states_st { i32 2, i8* null }], [39 x %struct.info_cb_states_st] zeroinitializer }>, [60 x %struct.info_cb_states_st] zeroinitializer }>, align 16
@.str.745 = private unnamed_addr constant [119 x i8] c"create_ssl_ctx_pair(libctx, DTLS_server_method(), DTLS_client_method(), DTLS1_VERSION, 0, &sctx, &cctx, cert, privkey)\00", align 1
@.str.746 = private unnamed_addr constant [23 x i8] c"SSL_pending(clientssl)\00", align 1
@.str.747 = private unnamed_addr constant [27 x i8] c"SSL_has_pending(clientssl)\00", align 1
@.str.748 = private unnamed_addr constant [23 x i8] c"SSL_pending(serverssl)\00", align 1
@.str.749 = private unnamed_addr constant [27 x i8] c"SSL_has_pending(serverssl)\00", align 1
@.str.750 = private unnamed_addr constant [52 x i8] c"SSL_write_ex(serverssl, msg, sizeof(msg), &written)\00", align 1
@.str.751 = private unnamed_addr constant [12 x i8] c"sizeof(msg)\00", align 1
@.str.752 = private unnamed_addr constant [27 x i8] c"(int)(written - readbytes)\00", align 1
@.str.753 = private unnamed_addr constant [10 x i8] c"tmplibctx\00", align 1
@.str.754 = private unnamed_addr constant [5 x i8] c"cctx\00", align 1
@.str.755 = private unnamed_addr constant [5 x i8] c"sctx\00", align 1
@.str.756 = private unnamed_addr constant [147 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, shared_ciphers_data[tst].maxprot, &sctx, &cctx, cert, privkey)\00", align 1
@shared_ciphers_data = internal unnamed_addr constant [6 x %struct.anon.7] [%struct.anon.7 { i32 771, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.764, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.765, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.766, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.766, i32 0, i32 0) }, %struct.anon.7 { i32 771, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.767, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.767, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.767, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0) }, %struct.anon.7 { i32 771, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.769, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.770, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.764, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.764, i32 0, i32 0) }, %struct.anon.7 { i32 771, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.764, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.771, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0) }, %struct.anon.7 { i32 772, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.764, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.772, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.773, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.774, i32 0, i32 0) }, %struct.anon.7 { i32 772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.766, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i32 0, i32 0) }], align 16
@.str.757 = private unnamed_addr constant [68 x i8] c"SSL_CTX_set_cipher_list(cctx, shared_ciphers_data[tst].clntciphers)\00", align 1
@.str.758 = private unnamed_addr constant [74 x i8] c"SSL_CTX_set_ciphersuites(cctx, shared_ciphers_data[tst].clnttls13ciphers)\00", align 1
@.str.759 = private unnamed_addr constant [68 x i8] c"SSL_CTX_set_cipher_list(sctx, shared_ciphers_data[tst].srvrciphers)\00", align 1
@.str.760 = private unnamed_addr constant [74 x i8] c"SSL_CTX_set_ciphersuites(sctx, shared_ciphers_data[tst].srvrtls13ciphers)\00", align 1
@.str.761 = private unnamed_addr constant [52 x i8] c"SSL_get_shared_ciphers(serverssl, buf, sizeof(buf))\00", align 1
@.str.762 = private unnamed_addr constant [93 x i8] c"strcmp(buf, is_fips ? shared_ciphers_data[tst].fipsshared : shared_ciphers_data[tst].shared)\00", align 1
@.str.763 = private unnamed_addr constant [24 x i8] c"Shared ciphers are: %s\0A\00", align 1
@.str.764 = private unnamed_addr constant [22 x i8] c"AES128-SHA:AES256-SHA\00", align 1
@.str.765 = private unnamed_addr constant [30 x i8] c"AES256-SHA:DHE-RSA-AES128-SHA\00", align 1
@.str.766 = private unnamed_addr constant [11 x i8] c"AES256-SHA\00", align 1
@.str.767 = private unnamed_addr constant [39 x i8] c"AES128-SHA:ECDHE-RSA-CHACHA20-POLY1305\00", align 1
@.str.768 = private unnamed_addr constant [11 x i8] c"AES128-SHA\00", align 1
@.str.769 = private unnamed_addr constant [41 x i8] c"AES128-SHA:DHE-RSA-AES128-SHA:AES256-SHA\00", align 1
@.str.770 = private unnamed_addr constant [41 x i8] c"AES128-SHA:DHE-RSA-AES256-SHA:AES256-SHA\00", align 1
@.str.771 = private unnamed_addr constant [30 x i8] c"AES128-SHA:DHE-RSA-AES128-SHA\00", align 1
@.str.772 = private unnamed_addr constant [25 x i8] c"AES256-SHA:AES128-SHA256\00", align 1
@.str.773 = private unnamed_addr constant [86 x i8] c"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:AES256-SHA\00", align 1
@.str.774 = private unnamed_addr constant [57 x i8] c"TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:AES256-SHA\00", align 1
@tick_key_cb_called = internal unnamed_addr global i1 false, align 4
@dec_tick_called = internal unnamed_addr global i1 false, align 4
@gen_tick_called = internal unnamed_addr global i1 false, align 4
@tick_key_renew = internal unnamed_addr global i1 false, align 4
@tick_dec_ret = internal unnamed_addr global i32 0, align 4
@.str.775 = private unnamed_addr constant [165 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, ((tst % 2) == 0) ? TLS1_2_VERSION : TLS1_3_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.776 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_session_cache_mode(sctx, SSL_SESS_CACHE_OFF)\00", align 1
@.str.777 = private unnamed_addr constant [68 x i8] c"SSL_CTX_set_session_ticket_cb(sctx, gen_tick_cb, dec_tick_cb, NULL)\00", align 1
@.str.778 = private unnamed_addr constant [60 x i8] c"SSL_CTX_set_tlsext_ticket_key_evp_cb(sctx, tick_key_evp_cb)\00", align 1
@.str.779 = private unnamed_addr constant [52 x i8] c"SSL_CTX_set_tlsext_ticket_key_cb(sctx, tick_key_cb)\00", align 1
@.str.780 = private unnamed_addr constant [16 x i8] c"gen_tick_called\00", align 1
@.str.781 = private unnamed_addr constant [16 x i8] c"dec_tick_called\00", align 1
@.str.782 = private unnamed_addr constant [25 x i8] c"((tst % 2) == 0) ? 1 : 0\00", align 1
@.str.783 = private unnamed_addr constant [122 x i8] c"(tick_key_renew || tick_dec_ret == SSL_TICKET_RETURN_IGNORE_RENEW || tick_dec_ret == SSL_TICKET_RETURN_USE_RENEW) ? 1 : 0\00", align 1
@.str.784 = private unnamed_addr constant [12 x i8] c"Hello World\00", align 1
@.str.785 = private unnamed_addr constant [67 x i8] c"status == SSL_TICKET_SUCCESS || status == SSL_TICKET_SUCCESS_RENEW\00", align 1
@.str.786 = private unnamed_addr constant [58 x i8] c"SSL_SESSION_get0_ticket_appdata(ss, &tickdata, &tickdlen)\00", align 1
@.str.787 = private unnamed_addr constant [9 x i8] c"tickdlen\00", align 1
@.str.788 = private unnamed_addr constant [16 x i8] c"strlen(appdata)\00", align 1
@.str.789 = private unnamed_addr constant [36 x i8] c"memcmp(tickdata, appdata, tickdlen)\00", align 1
@.str.790 = private unnamed_addr constant [12 x i8] c"AES-128-CBC\00", align 1
@.str.791 = private unnamed_addr constant [7 x i8] c"digest\00", align 1
@__const.tick_key_cb.tick_hmac_key = private unnamed_addr constant [16 x i8] c"0123456789abcdef", align 16
@.str.792 = private unnamed_addr constant [8 x i8] c"SHA-256\00", align 1
@__const.test_shutdown.msg = private unnamed_addr constant [15 x i8] c"A test message\00", align 1
@.str.793 = private unnamed_addr constant [159 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, (tst <= 1) ? TLS1_2_VERSION : TLS1_3_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.794 = private unnamed_addr constant [68 x i8] c"create_bare_ssl_connection(serverssl, clientssl, SSL_ERROR_NONE, 1)\00", align 1
@.str.795 = private unnamed_addr constant [34 x i8] c"sess = SSL_get_session(clientssl)\00", align 1
@.str.796 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.797 = private unnamed_addr constant [31 x i8] c"SSL_SESSION_is_resumable(sess)\00", align 1
@.str.798 = private unnamed_addr constant [24 x i8] c"SSL_shutdown(clientssl)\00", align 1
@.str.799 = private unnamed_addr constant [22 x i8] c"SSL_ERROR_ZERO_RETURN\00", align 1
@.str.800 = private unnamed_addr constant [28 x i8] c"SSL_get_shutdown(serverssl)\00", align 1
@.str.801 = private unnamed_addr constant [22 x i8] c"SSL_RECEIVED_SHUTDOWN\00", align 1
@.str.802 = private unnamed_addr constant [39 x i8] c"SSL_write(serverssl, msg, sizeof(msg))\00", align 1
@.str.803 = private unnamed_addr constant [52 x i8] c"SSL_key_update(serverssl, SSL_KEY_UPDATE_REQUESTED)\00", align 1
@.str.804 = private unnamed_addr constant [24 x i8] c"SSL_shutdown(serverssl)\00", align 1
@.str.805 = private unnamed_addr constant [28 x i8] c"memcmp(msg, buf, readbytes)\00", align 1
@.str.806 = private unnamed_addr constant [52 x i8] c"SSL_write_ex(clientssl, msg, sizeof(msg), &written)\00", align 1
@.str.807 = private unnamed_addr constant [29 x i8] c"SSL_get_error(clientssl, -1)\00", align 1
@.str.808 = private unnamed_addr constant [105 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), 0, 0, &sctx, &cctx, cert, privkey)\00", align 1
@.str.809 = private unnamed_addr constant [116 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, prot, &sctx, &cctx, NULL, NULL)\00", align 1
@cert_cb_cnt = internal unnamed_addr global i32 0, align 4
@.str.810 = private unnamed_addr constant [59 x i8] c"SSL_set1_sigalgs_list(clientssl, \22ecdsa_secp256r1_sha256\22)\00", align 1
@.str.811 = private unnamed_addr constant [23 x i8] c"ecdsa_secp256r1_sha256\00", align 1
@.str.812 = private unnamed_addr constant [73 x i8] c"SSL_set1_sigalgs_list(clientssl, \22rsa_pss_rsae_sha256:rsa_pkcs1_sha256\22)\00", align 1
@.str.813 = private unnamed_addr constant [37 x i8] c"rsa_pss_rsae_sha256:rsa_pkcs1_sha256\00", align 1
@.str.814 = private unnamed_addr constant [46 x i8] c"tst == 0 || tst == 4 || tst == 5 ? !ret : ret\00", align 1
@.str.815 = private unnamed_addr constant [38 x i8] c"(cert_cb_cnt - 2) * (cert_cb_cnt - 3)\00", align 1
@.str.816 = private unnamed_addr constant [24 x i8] c"SSL_set_SSL_CTX(s, ctx)\00", align 1
@.str.817 = private unnamed_addr constant [52 x i8] c"SSL_use_certificate_file(s, cert, SSL_FILETYPE_PEM)\00", align 1
@.str.818 = private unnamed_addr constant [54 x i8] c"SSL_use_PrivateKey_file(s, privkey, SSL_FILETYPE_PEM)\00", align 1
@.str.819 = private unnamed_addr constant [25 x i8] c"SSL_check_private_key(s)\00", align 1
@.str.820 = private unnamed_addr constant [13 x i8] c"rootcert.pem\00", align 1
@.str.821 = private unnamed_addr constant [9 x i8] c"rootfile\00", align 1
@.str.822 = private unnamed_addr constant [10 x i8] c"ecdsacert\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"ecdsakey\00", align 1
@.str.824 = private unnamed_addr constant [6 x i8] c"chain\00", align 1
@.str.825 = private unnamed_addr constant [27 x i8] c"in = BIO_new(BIO_s_file())\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"BIO_read_filename(in, rootfile)\00", align 1
@.str.827 = private unnamed_addr constant [34 x i8] c"rootx = X509_new_ex(libctx, NULL)\00", align 1
@.str.828 = private unnamed_addr constant [42 x i8] c"PEM_read_bio_X509(in, &rootx, NULL, NULL)\00", align 1
@.str.829 = private unnamed_addr constant [27 x i8] c"sk_X509_push(chain, rootx)\00", align 1
@.str.830 = private unnamed_addr constant [33 x i8] c"BIO_read_filename(in, ecdsacert)\00", align 1
@.str.831 = private unnamed_addr constant [33 x i8] c"x509 = X509_new_ex(libctx, NULL)\00", align 1
@.str.832 = private unnamed_addr constant [41 x i8] c"PEM_read_bio_X509(in, &x509, NULL, NULL)\00", align 1
@.str.833 = private unnamed_addr constant [32 x i8] c"BIO_read_filename(in, ecdsakey)\00", align 1
@.str.834 = private unnamed_addr constant [70 x i8] c"pkey = PEM_read_bio_PrivateKey_ex(in, NULL, NULL, NULL, libctx, NULL)\00", align 1
@.str.835 = private unnamed_addr constant [157 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, tst == 0 ? TLS1_2_VERSION : TLS1_3_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.836 = private unnamed_addr constant [31 x i8] c"SSL_get0_peer_certificate(ssl)\00", align 1
@.str.837 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.838 = private unnamed_addr constant [34 x i8] c"xcert = X509_new_ex(libctx, NULL)\00", align 1
@.str.839 = private unnamed_addr constant [42 x i8] c"PEM_read_bio_X509(in, &xcert, NULL, NULL)\00", align 1
@.str.840 = private unnamed_addr constant [37 x i8] c"priv_in = BIO_new_file(privkey, \22r\22)\00", align 1
@.str.841 = private unnamed_addr constant [79 x i8] c"privpkey = PEM_read_bio_PrivateKey_ex(priv_in, NULL, NULL, NULL, libctx, NULL)\00", align 1
@.str.842 = private unnamed_addr constant [5 x i8] c"Jack\00", align 1
@.str.843 = private unnamed_addr constant [5 x i8] c"Jill\00", align 1
@.str.844 = private unnamed_addr constant [5 x i8] c"John\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"Joanne\00", align 1
@.str.846 = private unnamed_addr constant [8 x i8] c"name[i]\00", align 1
@.str.847 = private unnamed_addr constant [98 x i8] c"X509_NAME_add_entry_by_txt(name[i], \22CN\22, MBSTRING_ASC, (unsigned char *) strnames[i], -1, -1, 0)\00", align 1
@.str.848 = private unnamed_addr constant [3 x i8] c"CN\00", align 1
@.str.849 = private unnamed_addr constant [119 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, prot, &sctx, &cctx, cert, privkey)\00", align 1
@.str.850 = private unnamed_addr constant [30 x i8] c"sk1 = sk_X509_NAME_new_null()\00", align 1
@.str.851 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk1, X509_NAME_dup(name[0]))\00", align 1
@.str.852 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk1, X509_NAME_dup(name[1]))\00", align 1
@.str.853 = private unnamed_addr constant [30 x i8] c"sk2 = sk_X509_NAME_new_null()\00", align 1
@.str.854 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk2, X509_NAME_dup(name[0]))\00", align 1
@.str.855 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk2, X509_NAME_dup(name[1]))\00", align 1
@.str.856 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk1, X509_NAME_dup(name[2]))\00", align 1
@.str.857 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk1, X509_NAME_dup(name[3]))\00", align 1
@.str.858 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk2, X509_NAME_dup(name[2]))\00", align 1
@.str.859 = private unnamed_addr constant [47 x i8] c"sk_X509_NAME_push(sk2, X509_NAME_dup(name[3]))\00", align 1
@.str.860 = private unnamed_addr constant [6 x i8] c"sktmp\00", align 1
@.str.861 = private unnamed_addr constant [24 x i8] c"sk_X509_NAME_num(sktmp)\00", align 1
@.str.862 = private unnamed_addr constant [53 x i8] c"X509_NAME_cmp(sk_X509_NAME_value(sktmp, 0), name[0])\00", align 1
@.str.863 = private unnamed_addr constant [53 x i8] c"X509_NAME_cmp(sk_X509_NAME_value(sktmp, 1), name[1])\00", align 1
@.str.864 = private unnamed_addr constant [68 x i8] c"X509_NAME_cmp(sk_X509_NAME_value(sktmp, 0), name[tst == 0 ? 0 : 2])\00", align 1
@.str.865 = private unnamed_addr constant [68 x i8] c"X509_NAME_cmp(sk_X509_NAME_value(sktmp, 1), name[tst == 0 ? 1 : 3])\00", align 1
@test_multiblock_write.fetchable_ciphers = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.866, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.867, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.868, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.869, i32 0, i32 0)], align 16
@.str.866 = private unnamed_addr constant [22 x i8] c"AES-128-CBC-HMAC-SHA1\00", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"AES-128-CBC-HMAC-SHA256\00", align 1
@.str.868 = private unnamed_addr constant [22 x i8] c"AES-256-CBC-HMAC-SHA1\00", align 1
@.str.869 = private unnamed_addr constant [24 x i8] c"AES-256-CBC-HMAC-SHA256\00", align 1
@multiblock_cipherlist_data = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.768, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.766, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.875, i32 0, i32 0)], align 16
@.str.870 = private unnamed_addr constant [42 x i8] c"Multiblock cipher is not available for %s\00", align 1
@.str.871 = private unnamed_addr constant [57 x i8] c"SSL_CTX_set_max_send_fragment(sctx, MULTIBLOCK_FRAGSIZE)\00", align 1
@.str.872 = private unnamed_addr constant [42 x i8] c"SSL_CTX_set_cipher_list(cctx, cipherlist)\00", align 1
@.str.873 = private unnamed_addr constant [59 x i8] c"SSL_read_ex(clientssl, p, MULTIBLOCK_FRAGSIZE, &readbytes)\00", align 1
@.str.874 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.875 = private unnamed_addr constant [14 x i8] c"AES256-SHA256\00", align 1
@.str.876 = private unnamed_addr constant [159 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, (tst <= 4) ? TLS1_2_VERSION : TLS1_3_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.877 = private unnamed_addr constant [57 x i8] c"SSL_get_servername(clientssl, TLSEXT_NAMETYPE_host_name)\00", align 1
@.str.878 = private unnamed_addr constant [14 x i8] c"cexpectedhost\00", align 1
@.str.879 = private unnamed_addr constant [57 x i8] c"SSL_get_servername(serverssl, TLSEXT_NAMETYPE_host_name)\00", align 1
@.str.880 = private unnamed_addr constant [14 x i8] c"sexpectedhost\00", align 1
@.str.881 = private unnamed_addr constant [51 x i8] c"SSL_set_tlsext_host_name(clientssl, \22altgoodhost\22)\00", align 1
@.str.882 = private unnamed_addr constant [14 x i8] c"\22altgoodhost\22\00", align 1
@.str.883 = private unnamed_addr constant [11 x i8] c"\22goodhost\22\00", align 1
@.str.884 = private unnamed_addr constant [7 x i8] c"tmpctx\00", align 1
@.str.885 = private unnamed_addr constant [66 x i8] c"OSSL_PROVIDER_add_builtin(tmpctx, \22filter\22, filter_provider_init)\00", align 1
@.str.886 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.887 = private unnamed_addr constant [11 x i8] c"filterprov\00", align 1
@.str.888 = private unnamed_addr constant [60 x i8] c"filter_provider_set_filter(OSSL_OP_DIGEST, \22SHA2-256:SHA1\22)\00", align 1
@.str.889 = private unnamed_addr constant [14 x i8] c"SHA2-256:SHA1\00", align 1
@.str.890 = private unnamed_addr constant [55 x i8] c"filter_provider_set_filter(OSSL_OP_SIGNATURE, \22ECDSA\22)\00", align 1
@.str.891 = private unnamed_addr constant [6 x i8] c"ECDSA\00", align 1
@.str.892 = private unnamed_addr constant [62 x i8] c"filter_provider_set_filter(OSSL_OP_KEYMGMT, \22EC:X25519:X448\22)\00", align 1
@.str.893 = private unnamed_addr constant [15 x i8] c"EC:X25519:X448\00", align 1
@.str.894 = private unnamed_addr constant [118 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_VERSION, 0, &sctx, &cctx, cert2, privkey2)\00", align 1
@.str.895 = private unnamed_addr constant [61 x i8] c"SSL_CTX_set_cipher_list(cctx, \22ECDHE-RSA-AES128-GCM-SHA256\22)\00", align 1
@.str.896 = private unnamed_addr constant [28 x i8] c"ECDHE-RSA-AES128-GCM-SHA256\00", align 1
@.str.897 = private unnamed_addr constant [63 x i8] c"SSL_CTX_set_cipher_list(cctx, \22ECDHE-ECDSA-AES128-GCM-SHA256\22)\00", align 1
@.str.898 = private unnamed_addr constant [30 x i8] c"ECDHE-ECDSA-AES128-GCM-SHA256\00", align 1
@.str.899 = private unnamed_addr constant [40 x i8] c"rsa_pss_rsae_sha384:rsa_pss_rsae_sha256\00", align 1
@.str.900 = private unnamed_addr constant [33 x i8] c"rsa_pss_rsae_sha256:ECDSA+SHA256\00", align 1
@.str.901 = private unnamed_addr constant [60 x i8] c"SSL_CTX_use_certificate_file(sctx, cert2, SSL_FILETYPE_PEM)\00", align 1
@.str.902 = private unnamed_addr constant [62 x i8] c"SSL_CTX_use_PrivateKey_file(sctx, privkey2, SSL_FILETYPE_PEM)\00", align 1
@.str.903 = private unnamed_addr constant [68 x i8] c"SSL_get_shared_sigalgs(serverssl, 0, &sig, &hash, NULL, NULL, NULL)\00", align 1
@.str.904 = private unnamed_addr constant [31 x i8] c"(idx == 0 || idx == 3) ? 2 : 1\00", align 1
@.str.905 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.906 = private unnamed_addr constant [35 x i8] c"idx == 0 ? NID_sha384 : NID_sha256\00", align 1
@.str.907 = private unnamed_addr constant [4 x i8] c"sig\00", align 1
@.str.908 = private unnamed_addr constant [53 x i8] c"(idx == 4 || idx == 5) ? EVP_PKEY_EC : NID_rsassaPss\00", align 1
@.str.909 = private unnamed_addr constant [7 x i8] c"legacy\00", align 1
@.str.910 = private unnamed_addr constant [9 x i8] c"xorgroup\00", align 1
@.str.911 = private unnamed_addr constant [12 x i8] c"xorkemgroup\00", align 1
@.str.912 = private unnamed_addr constant [8 x i8] c"tlsprov\00", align 1
@.str.913 = private unnamed_addr constant [131 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_3_VERSION, TLS1_3_VERSION, &sctx, &cctx, cert, privkey)\00", align 1
@.str.914 = private unnamed_addr constant [44 x i8] c"SSL_set1_groups_list(serverssl, group_name)\00", align 1
@.str.915 = private unnamed_addr constant [44 x i8] c"SSL_set1_groups_list(clientssl, group_name)\00", align 1
@.str.916 = private unnamed_addr constant [11 x i8] c"group_name\00", align 1
@.str.917 = private unnamed_addr constant [65 x i8] c"SSL_group_to_name(serverssl, SSL_get_shared_group(serverssl, 0))\00", align 1
@.str.918 = private unnamed_addr constant [53 x i8] c"SSL_set_min_proto_version(clientssl, TLS1_2_VERSION)\00", align 1
@.str.919 = private unnamed_addr constant [53 x i8] c"SSL_set_max_proto_version(clientssl, TLS1_2_VERSION)\00", align 1
@.str.920 = private unnamed_addr constant [17 x i8] c"BIO_up_ref(rbio)\00", align 1
@.str.921 = private unnamed_addr constant [17 x i8] c"BIO_up_ref(wbio)\00", align 1
@.str.922 = private unnamed_addr constant [11 x i8] c"client2ssl\00", align 1
@.str.923 = private unnamed_addr constant [10 x i8] c"clientssl\00", align 1
@.str.924 = private unnamed_addr constant [38 x i8] c"SSL_get_min_proto_version(client2ssl)\00", align 1
@.str.925 = private unnamed_addr constant [15 x i8] c"TLS1_2_VERSION\00", align 1
@.str.926 = private unnamed_addr constant [38 x i8] c"SSL_get_max_proto_version(client2ssl)\00", align 1
@.str.927 = private unnamed_addr constant [61 x i8] c"create_ssl_connection(serverssl, client2ssl, SSL_ERROR_NONE)\00", align 1
@.str.928 = private unnamed_addr constant [7 x i8] c"dhpkey\00", align 1
@.str.929 = private unnamed_addr constant [3 x i8] c"dh\00", align 1
@.str.930 = private unnamed_addr constant [34 x i8] c"SSL_CTX_set_dh_auto(sctx, dhauto)\00", align 1
@.str.931 = private unnamed_addr constant [39 x i8] c"SSL_CTX_set0_tmp_dh_pkey(sctx, dhpkey)\00", align 1
@.str.932 = private unnamed_addr constant [29 x i8] c"SSL_CTX_set_tmp_dh(sctx, dh)\00", align 1
@.str.933 = private unnamed_addr constant [35 x i8] c"SSL_set_dh_auto(serverssl, dhauto)\00", align 1
@.str.934 = private unnamed_addr constant [40 x i8] c"SSL_set0_tmp_dh_pkey(serverssl, dhpkey)\00", align 1
@.str.935 = private unnamed_addr constant [30 x i8] c"SSL_set_tmp_dh(serverssl, dh)\00", align 1
@.str.936 = private unnamed_addr constant [53 x i8] c"SSL_set_min_proto_version(serverssl, TLS1_2_VERSION)\00", align 1
@.str.937 = private unnamed_addr constant [53 x i8] c"SSL_set_max_proto_version(serverssl, TLS1_2_VERSION)\00", align 1
@.str.938 = private unnamed_addr constant [53 x i8] c"SSL_set_cipher_list(serverssl, \22DHE-RSA-AES128-SHA\22)\00", align 1
@.str.939 = private unnamed_addr constant [19 x i8] c"DHE-RSA-AES128-SHA\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"expected\00", align 1
@.str.941 = private unnamed_addr constant [3 x i8] c"DH\00", align 1
@.str.942 = private unnamed_addr constant [5 x i8] c"pctx\00", align 1
@.str.943 = private unnamed_addr constant [29 x i8] c"EVP_PKEY_fromdata_init(pctx)\00", align 1
@.str.944 = private unnamed_addr constant [5 x i8] c"tmpl\00", align 1
@.str.945 = private unnamed_addr constant [55 x i8] c"OSSL_PARAM_BLD_push_BN(tmpl, OSSL_PKEY_PARAM_FFC_P, p)\00", align 1
@.str.946 = private unnamed_addr constant [57 x i8] c"OSSL_PARAM_BLD_push_uint(tmpl, OSSL_PKEY_PARAM_FFC_G, 2)\00", align 1
@.str.947 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.948 = private unnamed_addr constant [7 x i8] c"params\00", align 1
@.str.949 = private unnamed_addr constant [66 x i8] c"EVP_PKEY_fromdata(pctx, &dhpkey, EVP_PKEY_KEY_PARAMETERS, params)\00", align 1
@.str.950 = private unnamed_addr constant [30 x i8] c"ADH-AES128-SHA256:@SECLEVEL=0\00", align 1
@.str.951 = private unnamed_addr constant [30 x i8] c"ADH-AES256-SHA256:@SECLEVEL=0\00", align 1
@.str.952 = private unnamed_addr constant [19 x i8] c"Invalid text index\00", align 1
@.str.953 = private unnamed_addr constant [109 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), 0, 0, &sctx, &cctx, thiscert, thiskey)\00", align 1
@.str.954 = private unnamed_addr constant [30 x i8] c"SSL_set_dh_auto(serverssl, 1)\00", align 1
@.str.955 = private unnamed_addr constant [44 x i8] c"SSL_set_cipher_list(serverssl, ciphersuite)\00", align 1
@.str.956 = private unnamed_addr constant [44 x i8] c"SSL_set_cipher_list(clientssl, ciphersuite)\00", align 1
@.str.957 = private unnamed_addr constant [36 x i8] c"SSL_get_tmp_key(serverssl, &tmpkey)\00", align 1
@.str.958 = private unnamed_addr constant [26 x i8] c"EVP_PKEY_get_bits(tmpkey)\00", align 1
@.str.959 = private unnamed_addr constant [10 x i8] c"expdhsize\00", align 1
@.str.960 = private unnamed_addr constant [119 x i8] c"create_ssl_ctx_pair(libctx, TLS_server_method(), TLS_client_method(), TLS1_3_VERSION, 0, &sctx2, &cctx, cert, privkey)\00", align 1
@.str.961 = private unnamed_addr constant [6 x i8] c"snicb\00", align 1
@.str.962 = private unnamed_addr constant [3 x i8] c"cp\00", align 1
@.str.963 = private unnamed_addr constant [36 x i8] c"X509_VERIFY_PARAM_get_hostflags(cp)\00", align 1
@.str.964 = private unnamed_addr constant [4 x i8] c"ssl\00", align 1
@.str.965 = private unnamed_addr constant [3 x i8] c"sp\00", align 1
@.str.966 = private unnamed_addr constant [36 x i8] c"X509_VERIFY_PARAM_get_hostflags(sp)\00", align 1
@.str.967 = private unnamed_addr constant [10 x i8] c"hostflags\00", align 1
@__const.test_set_alpn.good = private unnamed_addr constant [5 x i8] c"\04good", align 1
@__const.test_set_alpn.bad2 = private unnamed_addr constant [5 x i8] c"\03bad\00", align 1
@.str.968 = private unnamed_addr constant [38 x i8] c"SSL_CTX_set_alpn_protos(ctx, NULL, 2)\00", align 1
@.str.969 = private unnamed_addr constant [38 x i8] c"SSL_CTX_set_alpn_protos(ctx, good, 0)\00", align 1
@.str.970 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, good, sizeof(good))\00", align 1
@.str.971 = private unnamed_addr constant [38 x i8] c"SSL_CTX_set_alpn_protos(ctx, good, 1)\00", align 1
@.str.972 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, bad0, sizeof(bad0))\00", align 1
@.str.973 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, bad1, sizeof(bad1))\00", align 1
@.str.974 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, bad2, sizeof(bad2))\00", align 1
@.str.975 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, bad3, sizeof(bad3))\00", align 1
@.str.976 = private unnamed_addr constant [49 x i8] c"SSL_CTX_set_alpn_protos(ctx, bad4, sizeof(bad4))\00", align 1
@.str.977 = private unnamed_addr constant [34 x i8] c"SSL_set_alpn_protos(ssl, NULL, 2)\00", align 1
@.str.978 = private unnamed_addr constant [34 x i8] c"SSL_set_alpn_protos(ssl, good, 0)\00", align 1
@.str.979 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, good, sizeof(good))\00", align 1
@.str.980 = private unnamed_addr constant [34 x i8] c"SSL_set_alpn_protos(ssl, good, 1)\00", align 1
@.str.981 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, bad0, sizeof(bad0))\00", align 1
@.str.982 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, bad1, sizeof(bad1))\00", align 1
@.str.983 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, bad2, sizeof(bad2))\00", align 1
@.str.984 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, bad3, sizeof(bad3))\00", align 1
@.str.985 = private unnamed_addr constant [45 x i8] c"SSL_set_alpn_protos(ssl, bad4, sizeof(bad4))\00", align 1
@.str.986 = private unnamed_addr constant [26 x i8] c"early = SSL_SESSION_new()\00", align 1
@.str.987 = private unnamed_addr constant [27 x i8] c"middle = SSL_SESSION_new()\00", align 1
@.str.988 = private unnamed_addr constant [25 x i8] c"late = SSL_SESSION_new()\00", align 1
@.str.989 = private unnamed_addr constant [32 x i8] c"SSL_CTX_add_session(ctx, early)\00", align 1
@.str.990 = private unnamed_addr constant [33 x i8] c"SSL_CTX_add_session(ctx, middle)\00", align 1
@.str.991 = private unnamed_addr constant [31 x i8] c"SSL_CTX_add_session(ctx, late)\00", align 1
@.str.992 = private unnamed_addr constant [12 x i8] c"early->prev\00", align 1
@.str.993 = private unnamed_addr constant [13 x i8] c"middle->prev\00", align 1
@.str.994 = private unnamed_addr constant [11 x i8] c"late->prev\00", align 1
@.str.995 = private unnamed_addr constant [38 x i8] c"SSL_SESSION_set_time(early, now - 10)\00", align 1
@.str.996 = private unnamed_addr constant [34 x i8] c"SSL_SESSION_set_time(middle, now)\00", align 1
@.str.997 = private unnamed_addr constant [37 x i8] c"SSL_SESSION_set_time(late, now + 10)\00", align 1
@.str.998 = private unnamed_addr constant [40 x i8] c"SSL_SESSION_set_timeout(early, TIMEOUT)\00", align 1
@.str.999 = private unnamed_addr constant [41 x i8] c"SSL_SESSION_set_timeout(middle, TIMEOUT)\00", align 1
@.str.1000 = private unnamed_addr constant [39 x i8] c"SSL_SESSION_set_timeout(late, TIMEOUT)\00", align 1
@.str.1001 = private unnamed_addr constant [11 x i8] c"late->next\00", align 1
@.str.1002 = private unnamed_addr constant [7 x i8] c"middle\00", align 1
@.str.1003 = private unnamed_addr constant [13 x i8] c"middle->next\00", align 1
@.str.1004 = private unnamed_addr constant [6 x i8] c"early\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"late\00", align 1
@.str.1006 = private unnamed_addr constant [33 x i8] c"SSL_SESSION_set_time(early, now)\00", align 1
@.str.1007 = private unnamed_addr constant [28 x i8] c"SSL_SESSION_get_time(early)\00", align 1
@.str.1008 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@switch.table.test_ticket_callbacks = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4], align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define dso_local %struct.options_st* @test_get_options() local_unnamed_addr #0 {
entry:
  ret %struct.options_st* getelementptr inbounds ([9 x %struct.options_st], [9 x %struct.options_st]* @test_get_options.options, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @setup_tests() local_unnamed_addr #1 {
entry:
  %call = tail call %struct.ossl_lib_ctx_st* @OSSL_LIB_CTX_new() #16
  store %struct.ossl_lib_ctx_st* %call, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %0 = bitcast %struct.ossl_lib_ctx_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9454, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8* noundef %0) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = tail call %struct.ossl_provider_st* @OSSL_PROVIDER_load(%struct.ossl_lib_ctx_st* noundef null, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #16
  store %struct.ossl_provider_st* %call2, %struct.ossl_provider_st** @defctxnull, align 8, !tbaa !3
  %call3 = tail call i32 @OSSL_PROVIDER_available(%struct.ossl_lib_ctx_st* noundef null, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #16
  %cmp = icmp ne i32 %call3, 0
  %conv = zext i1 %cmp to i32
  %call4 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9463, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0), i32 noundef %conv) #16
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call6 = tail call i32 @OSSL_PROVIDER_available(%struct.ossl_lib_ctx_st* noundef null, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #16
  %cmp7 = icmp ne i32 %call6, 0
  %conv8 = zext i1 %cmp7 to i32
  %call9 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9464, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %cleanup, label %if.end12

if.end12:                                         ; preds = %lor.lhs.false
  %call13 = tail call i32 @test_skip_common_options() #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end12
  tail call void (i8*, i32, i8*, ...) @test_error(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9468, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0)) #16
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  %call17 = tail call i8* @test_get_argument(i64 noundef 0) #16
  store i8* %call17, i8** @certsdir, align 8, !tbaa !3
  %call18 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9472, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), i8* noundef %call17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %cleanup, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %if.end16
  %call21 = tail call i8* @test_get_argument(i64 noundef 1) #16
  store i8* %call21, i8** @srpvfile, align 8, !tbaa !3
  %call22 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9473, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i8* noundef %call21) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %cleanup, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false20
  %call25 = tail call i8* @test_get_argument(i64 noundef 2) #16
  store i8* %call25, i8** @tmpfilename, align 8, !tbaa !3
  %call26 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9474, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0), i8* noundef %call25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %cleanup, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %call29 = tail call i8* @test_get_argument(i64 noundef 3) #16
  %call30 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9475, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0), i8* noundef %call29) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %cleanup, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %call33 = tail call i8* @test_get_argument(i64 noundef 4) #16
  %call34 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9476, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), i8* noundef %call33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %cleanup, label %if.end37

if.end37:                                         ; preds = %lor.lhs.false32
  %1 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call38 = tail call i32 @OSSL_LIB_CTX_load_config(%struct.ossl_lib_ctx_st* noundef %1, i8* noundef %call33) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9479, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %cleanup, label %if.end44

if.end44:                                         ; preds = %if.end37
  %2 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call45 = tail call i32 @OSSL_PROVIDER_available(%struct.ossl_lib_ctx_st* noundef %2, i8* noundef %call29) #16
  %cmp46 = icmp ne i32 %call45, 0
  %conv47 = zext i1 %cmp46 to i32
  %call48 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9483, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i32 noundef %conv47) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %cleanup, label %if.end51

if.end51:                                         ; preds = %if.end44
  %call52 = tail call i32 @strcmp(i8* noundef %call29, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #17
  %cmp53.not = icmp eq i32 %call52, 0
  br i1 %cmp53.not, label %if.end61, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end51
  %3 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call55 = tail call i32 @OSSL_PROVIDER_available(%struct.ossl_lib_ctx_st* noundef %3, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #16
  %cmp56 = icmp ne i32 %call55, 0
  %conv57 = zext i1 %cmp56 to i32
  %call58 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9488, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29, i64 0, i64 0), i32 noundef %conv57) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %cleanup, label %if.end61

if.end61:                                         ; preds = %land.lhs.true, %if.end51
  %call62 = tail call i32 @strcmp(i8* noundef %call29, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #17
  %cmp63 = icmp eq i32 %call62, 0
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end61
  store i1 true, i1* @is_fips, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.end61
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call67 = tail call i32 @OSSL_PROVIDER_add_builtin(%struct.ossl_lib_ctx_st* noundef %4, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i32 (%struct.ossl_core_handle_st*, %struct.ossl_dispatch_st*, %struct.ossl_dispatch_st**, i8**)* noundef nonnull @tls_provider_init) #16
  %cmp68 = icmp ne i32 %call67, 0
  %conv69 = zext i1 %cmp68 to i32
  %call70 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9499, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i64 0, i64 0), i32 noundef %conv69) #16
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %cleanup, label %if.end73

if.end73:                                         ; preds = %if.end66
  %call74 = tail call i8* @getenv(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  %cmp75.not = icmp eq i8* %call74, null
  br i1 %cmp75.not, label %if.end78, label %if.then77

if.then77:                                        ; preds = %if.end73
  tail call void (i8*, i32, i8*, ...) @test_error(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9505, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0)) #16
  br label %cleanup

if.end78:                                         ; preds = %if.end73
  %5 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call79 = tail call i8* @test_mk_file_path(i8* noundef %5, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)) #16
  store i8* %call79, i8** @cert, align 8, !tbaa !3
  %cmp80 = icmp eq i8* %call79, null
  br i1 %cmp80, label %err, label %if.end83

if.end83:                                         ; preds = %if.end78
  %6 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call84 = tail call i8* @test_mk_file_path(i8* noundef %6, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0)) #16
  store i8* %call84, i8** @privkey, align 8, !tbaa !3
  %cmp85 = icmp eq i8* %call84, null
  br i1 %cmp85, label %err, label %if.end88

if.end88:                                         ; preds = %if.end83
  %7 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call89 = tail call i8* @test_mk_file_path(i8* noundef %7, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #16
  store i8* %call89, i8** @cert2, align 8, !tbaa !3
  %cmp90 = icmp eq i8* %call89, null
  br i1 %cmp90, label %err, label %if.end93

if.end93:                                         ; preds = %if.end88
  %8 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call94 = tail call i8* @test_mk_file_path(i8* noundef %8, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #16
  store i8* %call94, i8** @privkey2, align 8, !tbaa !3
  %cmp95 = icmp eq i8* %call94, null
  br i1 %cmp95, label %err, label %if.end98

if.end98:                                         ; preds = %if.end93
  %9 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call99 = tail call i8* @test_mk_file_path(i8* noundef %9, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #16
  store i8* %call99, i8** @cert1024, align 8, !tbaa !3
  %cmp100 = icmp eq i8* %call99, null
  br i1 %cmp100, label %err, label %if.end103

if.end103:                                        ; preds = %if.end98
  %10 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call104 = tail call i8* @test_mk_file_path(i8* noundef %10, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i64 0, i64 0)) #16
  store i8* %call104, i8** @privkey1024, align 8, !tbaa !3
  %cmp105 = icmp eq i8* %call104, null
  br i1 %cmp105, label %err, label %if.end108

if.end108:                                        ; preds = %if.end103
  %11 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call109 = tail call i8* @test_mk_file_path(i8* noundef %11, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #16
  store i8* %call109, i8** @cert3072, align 8, !tbaa !3
  %cmp110 = icmp eq i8* %call109, null
  br i1 %cmp110, label %err, label %if.end113

if.end113:                                        ; preds = %if.end108
  %12 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call114 = tail call i8* @test_mk_file_path(i8* noundef %12, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0)) #16
  store i8* %call114, i8** @privkey3072, align 8, !tbaa !3
  %cmp115 = icmp eq i8* %call114, null
  br i1 %cmp115, label %err, label %if.end118

if.end118:                                        ; preds = %if.end113
  %13 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call119 = tail call i8* @test_mk_file_path(i8* noundef %13, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0)) #16
  store i8* %call119, i8** @cert4096, align 8, !tbaa !3
  %cmp120 = icmp eq i8* %call119, null
  br i1 %cmp120, label %err, label %if.end123

if.end123:                                        ; preds = %if.end118
  %14 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call124 = tail call i8* @test_mk_file_path(i8* noundef %14, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0)) #16
  store i8* %call124, i8** @privkey4096, align 8, !tbaa !3
  %cmp125 = icmp eq i8* %call124, null
  br i1 %cmp125, label %err, label %if.end128

if.end128:                                        ; preds = %if.end123
  %15 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call129 = tail call i8* @test_mk_file_path(i8* noundef %15, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0)) #16
  store i8* %call129, i8** @cert8192, align 8, !tbaa !3
  %cmp130 = icmp eq i8* %call129, null
  br i1 %cmp130, label %err, label %if.end133

if.end133:                                        ; preds = %if.end128
  %16 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call134 = tail call i8* @test_mk_file_path(i8* noundef %16, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0)) #16
  store i8* %call134, i8** @privkey8192, align 8, !tbaa !3
  %cmp135 = icmp eq i8* %call134, null
  br i1 %cmp135, label %err, label %if.end138

if.end138:                                        ; preds = %if.end133
  tail call void @add_test(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i32 ()* noundef nonnull @test_large_message_tls) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.47, i64 0, i64 0), i32 ()* noundef nonnull @test_large_message_tls_read_ahead) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i64 0, i64 0), i32 ()* noundef nonnull @test_large_message_dtls) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0), i32 ()* noundef nonnull @test_cleanse_plaintext) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i32 ()* noundef nonnull @test_tlsext_status_type) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0), i32 ()* noundef nonnull @test_session_with_only_int_cache) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52, i64 0, i64 0), i32 ()* noundef nonnull @test_session_with_only_ext_cache) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.53, i64 0, i64 0), i32 ()* noundef nonnull @test_session_with_both_cache) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i64 0, i64 0), i32 ()* noundef nonnull @test_session_wo_ca_names) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0), i32 (i32)* noundef nonnull @test_stateful_tickets, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0), i32 (i32)* noundef nonnull @test_stateless_tickets, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i32 ()* noundef nonnull @test_psk_tickets) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), i32 (i32)* noundef nonnull @test_extra_tickets, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ssl_set_bio, i32 noundef 89, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_bio_pop_next_bio) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_bio_pop_ssl_bio) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_bio_change_rbio) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_bio_change_wbio) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0), i32 (i32)* noundef nonnull @test_set_sigalgs, i32 noundef 28, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i64 0, i64 0), i32 ()* noundef nonnull @test_keylog) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.66, i64 0, i64 0), i32 ()* noundef nonnull @test_keylog_no_master_key) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i32 ()* noundef nonnull @test_client_cert_verify_cb) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_build_cert_chain) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.69, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_ctx_build_cert_chain) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70, i64 0, i64 0), i32 ()* noundef nonnull @test_client_hello_cb) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i32 ()* noundef nonnull @test_no_ems) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0), i32 ()* noundef nonnull @test_ccs_change_cipher) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_read_write, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_replay, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.75, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_skip, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.76, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_skip_hrr, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_skip_hrr_fail, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_skip_abort, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_not_sent, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_psk, i32 noundef 8, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.81, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_psk_with_all_ciphers, i32 noundef 5, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_not_expected, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i64 0, i64 0), i32 (i32)* noundef nonnull @test_early_data_tls1_2, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i64 0, i64 0), i32 (i32)* noundef nonnull @test_set_ciphersuite, i32 noundef 10, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0), i32 ()* noundef nonnull @test_ciphersuite_change) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.86, i64 0, i64 0), i32 (i32)* noundef nonnull @test_tls13_ciphersuite, i32 noundef 4, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i64 0, i64 0), i32 (i32)* noundef nonnull @test_tls13_psk, i32 noundef 4, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i64 0, i64 0), i32 (i32)* noundef nonnull @test_key_exchange, i32 noundef 14, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.89, i64 0, i64 0), i32 (i32)* noundef nonnull @test_negotiated_group, i32 noundef 40, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0), i32 (i32)* noundef nonnull @test_custom_exts, i32 noundef 5, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.91, i64 0, i64 0), i32 ()* noundef nonnull @test_stateless) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i32 ()* noundef nonnull @test_pha_key_update) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i64 0, i64 0), i32 (i32)* noundef nonnull @test_serverinfo, i32 noundef 8, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i64 0, i64 0), i32 (i32)* noundef nonnull @test_export_key_mat, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i32 (i32)* noundef nonnull @test_export_key_mat_early, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i64 0, i64 0), i32 ()* noundef nonnull @test_key_update) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.97, i64 0, i64 0), i32 (i32)* noundef nonnull @test_key_update_peer_in_write, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0), i32 (i32)* noundef nonnull @test_key_update_peer_in_read, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.99, i64 0, i64 0), i32 (i32)* noundef nonnull @test_key_update_local_in_write, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.100, i64 0, i64 0), i32 (i32)* noundef nonnull @test_key_update_local_in_read, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ssl_clear, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.102, i64 0, i64 0), i32 (i32)* noundef nonnull @test_max_fragment_len_ext, i32 noundef 4, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i64 0, i64 0), i32 (i32)* noundef nonnull @test_srp, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.104, i64 0, i64 0), i32 (i32)* noundef nonnull @test_info_callback, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ssl_pending, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ssl_get_shared_ciphers, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.107, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ticket_callbacks, i32 noundef 16, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i64 0, i64 0), i32 (i32)* noundef nonnull @test_shutdown, i32 noundef 7, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.109, i64 0, i64 0), i32 (i32)* noundef nonnull @test_incorrect_shutdown, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i64 0, i64 0), i32 (i32)* noundef nonnull @test_cert_cb, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.111, i64 0, i64 0), i32 (i32)* noundef nonnull @test_client_cert_cb, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.112, i64 0, i64 0), i32 (i32)* noundef nonnull @test_ca_names, i32 noundef 3, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0), i32 (i32)* noundef nonnull @test_multiblock_write, i32 noundef 4, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0), i32 (i32)* noundef nonnull @test_servername, i32 noundef 10, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i64 0, i64 0), i32 (i32)* noundef nonnull @test_sigalgs_available, i32 noundef 6, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0), i32 (i32)* noundef nonnull @test_pluggable_group, i32 noundef 2, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i64 0, i64 0), i32 ()* noundef nonnull @test_ssl_dup) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.118, i64 0, i64 0), i32 (i32)* noundef nonnull @test_set_tmp_dh, i32 noundef 11, i32 noundef 1) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i64 0, i64 0), i32 (i32)* noundef nonnull @test_dh_auto, i32 noundef 7, i32 noundef 1) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0), i32 ()* noundef nonnull @test_sni_tls13) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i32 ()* noundef nonnull @test_inherit_verify_param) #16
  tail call void @add_test(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i64 0, i64 0), i32 ()* noundef nonnull @test_set_alpn) #16
  tail call void @add_all_tests(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.123, i64 0, i64 0), i32 (i32)* noundef nonnull @test_session_timeout, i32 noundef 1, i32 noundef 1) #16
  br label %cleanup

err:                                              ; preds = %if.end133, %if.end128, %if.end123, %if.end118, %if.end113, %if.end108, %if.end103, %if.end98, %if.end93, %if.end88, %if.end83, %if.end78
  %17 = load i8*, i8** @cert, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %17, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9709) #16
  %18 = load i8*, i8** @privkey, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %18, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9710) #16
  %19 = load i8*, i8** @cert2, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %19, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9711) #16
  %20 = load i8*, i8** @privkey2, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %20, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9712) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end66, %land.lhs.true, %if.end44, %if.end37, %if.end16, %lor.lhs.false20, %lor.lhs.false24, %lor.lhs.false28, %lor.lhs.false32, %if.end, %lor.lhs.false, %entry, %err, %if.end138, %if.then77, %if.then15
  %retval.0 = phi i32 [ 0, %if.then77 ], [ 0, %err ], [ 1, %if.end138 ], [ 0, %if.then15 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %lor.lhs.false32 ], [ 0, %lor.lhs.false28 ], [ 0, %lor.lhs.false24 ], [ 0, %lor.lhs.false20 ], [ 0, %if.end16 ], [ 0, %if.end37 ], [ 0, %if.end44 ], [ 0, %land.lhs.true ], [ 0, %if.end66 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local %struct.ossl_lib_ctx_st* @OSSL_LIB_CTX_new() local_unnamed_addr #3

declare dso_local i32 @test_ptr(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.ossl_provider_st* @OSSL_PROVIDER_load(%struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @test_false(i8* noundef, i32 noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @OSSL_PROVIDER_available(%struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @test_skip_common_options() local_unnamed_addr #3

declare dso_local void @test_error(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #3

declare dso_local i8* @test_get_argument(i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_true(i8* noundef, i32 noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @OSSL_LIB_CTX_load_config(%struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #4

declare dso_local i32 @OSSL_PROVIDER_add_builtin(%struct.ossl_lib_ctx_st* noundef, i8* noundef, i32 (%struct.ossl_core_handle_st*, %struct.ossl_dispatch_st*, %struct.ossl_dispatch_st**, i8**)* noundef) local_unnamed_addr #3

declare dso_local i32 @tls_provider_init(%struct.ossl_core_handle_st* noundef, %struct.ossl_dispatch_st* noundef, %struct.ossl_dispatch_st** noundef, i8** noundef) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8* noundef) local_unnamed_addr #5

declare dso_local i8* @test_mk_file_path(i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @add_test(i8* noundef, i32 ()* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_large_message_tls() #1 {
entry:
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call2 = tail call fastcc i32 @execute_test_large_message(%struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0) #18
  ret i32 %call2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_large_message_tls_read_ahead() #1 {
entry:
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call2 = tail call fastcc i32 @execute_test_large_message(%struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 1) #18
  ret i32 %call2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_large_message_dtls() #1 {
entry:
  %call = tail call %struct.ssl_method_st* @DTLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @DTLS_client_method() #16
  %call2 = tail call fastcc i32 @execute_test_large_message(%struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 65279, i32 noundef 0) #18
  ret i32 %call2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_cleanse_plaintext() #1 {
entry:
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call2 = tail call fastcc i32 @execute_cleanse_plaintext(%struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 771, i32 noundef 771) #18
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1600, i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.132, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call4 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call5 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call6 = tail call fastcc i32 @execute_cleanse_plaintext(%struct.ssl_method_st* noundef %call4, %struct.ssl_method_st* noundef %call5, i32 noundef 772, i32 noundef 772) #18
  %cmp7 = icmp ne i32 %call6, 0
  %conv8 = zext i1 %cmp7 to i32
  %call9 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1609, i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.133, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %return, label %if.end12

if.end12:                                         ; preds = %if.end
  %call13 = tail call %struct.ssl_method_st* @DTLS_server_method() #16
  %call14 = tail call %struct.ssl_method_st* @DTLS_client_method() #16
  %call15 = tail call fastcc i32 @execute_cleanse_plaintext(%struct.ssl_method_st* noundef %call13, %struct.ssl_method_st* noundef %call14, i32 noundef 65279, i32 noundef 0) #18
  %cmp16 = icmp ne i32 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1618, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.134, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp ne i32 %call18, 0
  %. = zext i1 %tobool19.not to i32
  br label %return

return:                                           ; preds = %if.end12, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end ], [ %., %if.end12 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_tlsext_status_type() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call3 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 127, i64 noundef 0, i8* noundef null) #16
  %cmp.not = icmp eq i64 %call3, -1
  br i1 %cmp.not, label %if.end5, label %end

if.end5:                                          ; preds = %if.end
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call6 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %8) #16
  store %struct.ssl_st* %call6, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call7 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %call6, i32 noundef 127, i64 noundef 0, i8* noundef null) #16
  %conv = trunc i64 %call7 to i32
  %call8 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1694, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.145, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %conv, i32 noundef -1) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end5
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %9, i32 noundef 65, i64 noundef 1, i8* noundef null) #16
  %cmp11 = icmp ne i64 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1696, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.147, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 127, i64 noundef 0, i8* noundef null) #16
  %conv17 = trunc i64 %call16 to i32
  %call18 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1698, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.145, i64 0, i64 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0), i32 noundef %conv17, i32 noundef 1) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end21

if.end21:                                         ; preds = %lor.lhs.false15
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %11) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call22 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %12, i32 noundef 65, i64 noundef 1, i8* noundef null) #16
  %tobool23.not = icmp eq i64 %call22, 0
  br i1 %tobool23.not, label %end, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %if.end21
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call25 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %13, i32 noundef 127, i64 noundef 0, i8* noundef null) #16
  %cmp26.not = icmp eq i64 %call25, 1
  br i1 %cmp26.not, label %if.end29, label %end

if.end29:                                         ; preds = %lor.lhs.false24
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call30 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %14) #16
  store %struct.ssl_st* %call30, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call31 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %call30, i32 noundef 127, i64 noundef 0, i8* noundef null) #16
  %cmp32.not = icmp eq i64 %call31, 1
  br i1 %cmp32.not, label %if.end35, label %end

if.end35:                                         ; preds = %if.end29
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %15) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call36 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %16, i32 noundef 63, void ()* noundef bitcast (i32 (%struct.ssl_st*, i8*)* @ocsp_client_cb to void ()*)) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call37 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %17, i32 noundef 64, i64 noundef 0, i8* noundef bitcast (i32* @cdummyarg to i8*)) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call38 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %18, i32 noundef 63, void ()* noundef bitcast (i32 (%struct.ssl_st*, i8*)* @ocsp_server_cb to void ()*)) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call39 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %19, i32 noundef 64, i64 noundef 0, i8* noundef bitcast (i32* @cdummyarg to i8*)) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call40 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %20, %struct.ssl_ctx_st* noundef %21, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1723, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.end35
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call46 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %cmp47 = icmp ne i32 %call46, 0
  %conv48 = zext i1 %cmp47 to i32
  %call49 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1725, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv48) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false45
  %.b168 = load i1, i1* @ocsp_client_called, align 4
  %conv53 = zext i1 %.b168 to i32
  %call54 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1726, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false51
  %.b171 = load i1, i1* @ocsp_server_called, align 4
  %conv58 = zext i1 %.b171 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1727, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.150, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %if.end62

if.end62:                                         ; preds = %lor.lhs.false56
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store i1 false, i1* @ocsp_client_called, align 4
  store i1 false, i1* @ocsp_server_called, align 4
  store i32 0, i32* @cdummyarg, align 4, !tbaa !7
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call63 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %26, %struct.ssl_ctx_st* noundef %27, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1739, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %if.end62
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call69 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %28, %struct.ssl_st* noundef %29, i32 noundef 0) #16
  %cmp70 = icmp ne i32 %call69, 0
  %conv71 = zext i1 %cmp70 to i32
  %call72 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1742, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv71) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false68
  %.b167 = load i1, i1* @ocsp_client_called, align 4
  %conv76 = zext i1 %.b167 to i32
  %call77 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1743, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i32 noundef %conv76) #16
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %end, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %lor.lhs.false74
  %.b170 = load i1, i1* @ocsp_server_called, align 4
  %conv81 = zext i1 %.b170 to i32
  %call82 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1744, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.150, i64 0, i64 0), i32 noundef %conv81) #16
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %end, label %if.end85

if.end85:                                         ; preds = %lor.lhs.false79
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %30) #16
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %31) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store i1 false, i1* @ocsp_client_called, align 4
  store i1 false, i1* @ocsp_server_called, align 4
  store i32 2, i32* @cdummyarg, align 4, !tbaa !7
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call86 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %32, %struct.ssl_ctx_st* noundef %33, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp87 = icmp ne i32 %call86, 0
  %conv88 = zext i1 %cmp87 to i32
  %call89 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1759, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv88) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %if.end92

if.end92:                                         ; preds = %if.end85
  %34 = load i8*, i8** @cert, align 8, !tbaa !3
  %call93 = call %struct.bio_st* @BIO_new_file(i8* noundef %34, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0)) #16
  %35 = bitcast %struct.bio_st* %call93 to i8*
  %call94 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1766, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.124, i64 0, i64 0), i8* noundef %35) #16
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %end, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %if.end92
  %call97 = call %struct.ocsp_responder_id_st* @OCSP_RESPID_new() #16
  %36 = bitcast %struct.ocsp_responder_id_st* %call97 to i8*
  %call98 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1767, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0), i8* noundef %36) #16
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %end, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false96
  %call101 = call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %37 = bitcast %struct.stack_st* %call101 to %struct.stack_st_OCSP_RESPID*
  %38 = bitcast %struct.stack_st* %call101 to i8*
  %call102 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1768, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.152, i64 0, i64 0), i8* noundef %38) #16
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %end, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %lor.lhs.false100
  %39 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call105 = call %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef %39, i8* noundef null) #16
  store %struct.x509_st* %call105, %struct.x509_st** @ocspcert, align 8, !tbaa !3
  %40 = bitcast %struct.x509_st* %call105 to i8*
  %call106 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1769, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.153, i64 0, i64 0), i8* noundef %40) #16
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %end, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false104
  %call109 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef %call93, %struct.x509_st** noundef nonnull @ocspcert, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null) #16
  %41 = bitcast %struct.x509_st* %call109 to i8*
  %call110 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1770, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.154, i64 0, i64 0), i8* noundef %41) #16
  %tobool111.not = icmp eq i32 %call110, 0
  br i1 %tobool111.not, label %end, label %lor.lhs.false112

lor.lhs.false112:                                 ; preds = %lor.lhs.false108
  %42 = load %struct.x509_st*, %struct.x509_st** @ocspcert, align 8, !tbaa !3
  %43 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call113 = call i32 @OCSP_RESPID_set_by_key_ex(%struct.ocsp_responder_id_st* noundef %call97, %struct.x509_st* noundef %42, %struct.ossl_lib_ctx_st* noundef %43, i8* noundef null) #16
  %cmp114 = icmp ne i32 %call113, 0
  %conv115 = zext i1 %cmp114 to i32
  %call116 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1771, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.155, i64 0, i64 0), i32 noundef %conv115) #16
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %end, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false112
  %call119 = call fastcc %struct.stack_st* @ossl_check_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef %37) #18
  %call121 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call119, i8* noundef %36) #16
  %cmp122 = icmp ne i32 %call121, 0
  %conv123 = zext i1 %cmp122 to i32
  %call124 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1772, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i64 0, i64 0), i32 noundef %conv123) #16
  %tobool125.not = icmp eq i32 %call124, 0
  br i1 %tobool125.not, label %end, label %if.end127

if.end127:                                        ; preds = %lor.lhs.false118
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call128 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %44, i32 noundef 69, i64 noundef 0, i8* noundef %38) #16
  %call129 = call i32 @BIO_free(%struct.bio_st* noundef %call93) #16
  %45 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call130 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %45, %struct.ssl_st* noundef %46, i32 noundef 0) #16
  %cmp131 = icmp ne i32 %call130, 0
  %conv132 = zext i1 %cmp131 to i32
  %call133 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1783, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv132) #16
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %end, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %if.end127
  %.b = load i1, i1* @ocsp_client_called, align 4
  %conv137 = zext i1 %.b to i32
  %call138 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1784, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i32 noundef %conv137) #16
  %tobool139.not = icmp eq i32 %call138, 0
  br i1 %tobool139.not, label %end, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %lor.lhs.false135
  %.b169 = load i1, i1* @ocsp_server_called, align 4
  %conv142 = zext i1 %.b169 to i32
  %call143 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1785, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.150, i64 0, i64 0), i32 noundef %conv142) #16
  %tobool144.not = icmp ne i32 %call143, 0
  %spec.select = zext i1 %tobool144.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false140, %if.end127, %lor.lhs.false135, %if.end92, %lor.lhs.false96, %lor.lhs.false100, %lor.lhs.false104, %lor.lhs.false108, %lor.lhs.false112, %lor.lhs.false118, %if.end85, %if.end62, %lor.lhs.false68, %lor.lhs.false74, %lor.lhs.false79, %if.end35, %lor.lhs.false45, %lor.lhs.false51, %lor.lhs.false56, %if.end29, %if.end21, %lor.lhs.false24, %if.end5, %lor.lhs.false, %lor.lhs.false15, %if.end
  %testresult.0 = phi i32 [ 0, %if.end ], [ 0, %lor.lhs.false24 ], [ 0, %if.end29 ], [ 0, %lor.lhs.false135 ], [ 0, %if.end127 ], [ 0, %lor.lhs.false118 ], [ 0, %lor.lhs.false112 ], [ 0, %lor.lhs.false108 ], [ 0, %lor.lhs.false104 ], [ 0, %lor.lhs.false100 ], [ 0, %lor.lhs.false96 ], [ 0, %if.end92 ], [ 0, %if.end85 ], [ 0, %lor.lhs.false79 ], [ 0, %lor.lhs.false74 ], [ 0, %lor.lhs.false68 ], [ 0, %if.end62 ], [ 0, %lor.lhs.false56 ], [ 0, %lor.lhs.false51 ], [ 0, %lor.lhs.false45 ], [ 0, %if.end35 ], [ 0, %if.end21 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end5 ], [ %spec.select, %lor.lhs.false140 ]
  %ids.0 = phi %struct.stack_st_OCSP_RESPID* [ null, %if.end ], [ null, %lor.lhs.false24 ], [ null, %if.end29 ], [ null, %lor.lhs.false135 ], [ null, %if.end127 ], [ %37, %lor.lhs.false118 ], [ %37, %lor.lhs.false112 ], [ %37, %lor.lhs.false108 ], [ %37, %lor.lhs.false104 ], [ %37, %lor.lhs.false100 ], [ null, %lor.lhs.false96 ], [ null, %if.end92 ], [ null, %if.end85 ], [ null, %lor.lhs.false79 ], [ null, %lor.lhs.false74 ], [ null, %lor.lhs.false68 ], [ null, %if.end62 ], [ null, %lor.lhs.false56 ], [ null, %lor.lhs.false51 ], [ null, %lor.lhs.false45 ], [ null, %if.end35 ], [ null, %if.end21 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false ], [ null, %if.end5 ], [ null, %lor.lhs.false140 ]
  %id.0 = phi %struct.ocsp_responder_id_st* [ null, %if.end ], [ null, %lor.lhs.false24 ], [ null, %if.end29 ], [ null, %lor.lhs.false135 ], [ null, %if.end127 ], [ %call97, %lor.lhs.false118 ], [ %call97, %lor.lhs.false112 ], [ %call97, %lor.lhs.false108 ], [ %call97, %lor.lhs.false104 ], [ %call97, %lor.lhs.false100 ], [ %call97, %lor.lhs.false96 ], [ null, %if.end92 ], [ null, %if.end85 ], [ null, %lor.lhs.false79 ], [ null, %lor.lhs.false74 ], [ null, %lor.lhs.false68 ], [ null, %if.end62 ], [ null, %lor.lhs.false56 ], [ null, %lor.lhs.false51 ], [ null, %lor.lhs.false45 ], [ null, %if.end35 ], [ null, %if.end21 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false ], [ null, %if.end5 ], [ null, %lor.lhs.false140 ]
  %certbio.0 = phi %struct.bio_st* [ null, %if.end ], [ null, %lor.lhs.false24 ], [ null, %if.end29 ], [ null, %lor.lhs.false135 ], [ null, %if.end127 ], [ %call93, %lor.lhs.false118 ], [ %call93, %lor.lhs.false112 ], [ %call93, %lor.lhs.false108 ], [ %call93, %lor.lhs.false104 ], [ %call93, %lor.lhs.false100 ], [ %call93, %lor.lhs.false96 ], [ %call93, %if.end92 ], [ null, %if.end85 ], [ null, %lor.lhs.false79 ], [ null, %lor.lhs.false74 ], [ null, %lor.lhs.false68 ], [ null, %if.end62 ], [ null, %lor.lhs.false56 ], [ null, %lor.lhs.false51 ], [ null, %lor.lhs.false45 ], [ null, %if.end35 ], [ null, %if.end21 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false ], [ null, %if.end5 ], [ null, %lor.lhs.false140 ]
  %47 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %47) #16
  %48 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %48) #16
  %49 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %49) #16
  %50 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %50) #16
  %call147 = call fastcc %struct.stack_st* @ossl_check_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef %ids.0) #18
  call void @OPENSSL_sk_pop_free(%struct.stack_st* noundef %call147, void (i8*)* noundef bitcast (void (%struct.ocsp_responder_id_st*)* @OCSP_RESPID_free to void (i8*)*)) #16
  call void @OCSP_RESPID_free(%struct.ocsp_responder_id_st* noundef %id.0) #16
  %call149 = call i32 @BIO_free(%struct.bio_st* noundef %certbio.0) #16
  %51 = load %struct.x509_st*, %struct.x509_st** @ocspcert, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %51) #16
  store %struct.x509_st* null, %struct.x509_st** @ocspcert, align 8, !tbaa !3
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_session_with_only_int_cache() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_session(i32 noundef 772, i32 noundef 1, i32 noundef 0, i64 noundef 0) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @execute_test_session(i32 noundef 771, i32 noundef 1, i32 noundef 0, i64 noundef 0) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_session_with_only_ext_cache() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_session(i32 noundef 772, i32 noundef 0, i32 noundef 1, i64 noundef 0) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @execute_test_session(i32 noundef 771, i32 noundef 0, i32 noundef 1, i64 noundef 0) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_session_with_both_cache() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_session(i32 noundef 772, i32 noundef 1, i32 noundef 1, i64 noundef 0) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @execute_test_session(i32 noundef 771, i32 noundef 1, i32 noundef 1, i64 noundef 0) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_session_wo_ca_names() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_session(i32 noundef 772, i32 noundef 1, i32 noundef 0, i64 noundef 512) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @execute_test_session(i32 noundef 771, i32 noundef 1, i32 noundef 0, i64 noundef 512) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare dso_local void @add_all_tests(i8* noundef, i32 (i32)* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_stateful_tickets(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @test_tickets(i32 noundef 1, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_stateless_tickets(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @test_tickets(i32 noundef 0, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_psk_tickets() #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %sess_id_ctx = alloca i32, align 4
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = bitcast i32* %sess_id_ctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  store i32 1, i32* %sess_id_ctx, align 4, !tbaa !7
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef null, i8* noundef null) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2421, i8* noundef getelementptr inbounds ([113 x i8], [113 x i8]* @.str.201, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* noundef %6, i8* noundef nonnull %4, i32 noundef 4) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2424, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.202, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 44, i64 noundef 513, i8* noundef null) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st* noundef %8, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)* noundef nonnull @use_session_cb) #16
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st* noundef %9, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)* noundef nonnull @find_session_cb) #16
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %10, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_session_cb) #16
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %11, %struct.ssl_ctx_st* noundef %12, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2438, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end16

if.end16:                                         ; preds = %if.end
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call17 = call fastcc %struct.ssl_session_st* @create_a_psk(%struct.ssl_st* noundef %13) #18
  store %struct.ssl_session_st* %call17, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* %call17, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %14 = bitcast %struct.ssl_session_st* %call17 to i8*
  %call18 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2441, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i64 0, i64 0), i8* noundef %14) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end21

if.end21:                                         ; preds = %if.end16
  %15 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call22 = call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef %15) #16
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call23 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %16, %struct.ssl_st* noundef %17, i32 noundef 0) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2446, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %if.end21
  %18 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %call29 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2447, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0), i32 noundef 1, i32 noundef %18) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false28
  %19 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  %call32 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2448, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i64 0, i64 0), i32 noundef 1, i32 noundef %19) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %lor.lhs.false31
  %20 = load i32, i32* @new_called, align 4, !tbaa !7
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2450, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 1, i32 noundef %20) #16
  %tobool36.not = icmp ne i32 %call35, 0
  %spec.select = zext i1 %tobool36.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false34, %if.end21, %lor.lhs.false28, %lor.lhs.false31, %if.end16, %if.end, %entry, %lor.lhs.false
  %testresult.0 = phi i32 [ 0, %lor.lhs.false31 ], [ 0, %lor.lhs.false28 ], [ 0, %if.end21 ], [ 0, %if.end16 ], [ 0, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %lor.lhs.false34 ]
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %22) #16
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %23) #16
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %24) #16
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %25) #16
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %26) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_extra_tickets(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %nbytes = alloca i64, align 8
  %c = alloca i8, align 1
  %buf = alloca [1 x i8], align 1
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call = tail call %struct.bio_method_st* @bio_s_always_retry() #16
  %call1 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call) #16
  %4 = bitcast i64* %nbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #19
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #19
  store i32 0, i32* @new_called, align 4, !tbaa !7
  store i1 true, i1* @do_cache, align 4
  %cmp = icmp sgt i32 %idx, 2
  %sub = add nsw i32 %idx, -3
  %spec.select = select i1 %cmp, i32 %sub, i32 %idx
  %6 = bitcast %struct.bio_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2486, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i64 0, i64 0), i8* noundef %6) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %spec.select344 = zext i1 %cmp to i32
  %call3 = call fastcc i32 @setup_ticket_test(i32 noundef %spec.select344, i32 noundef %spec.select, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx) #18
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %end, label %if.end6

if.end6:                                          ; preds = %lor.lhs.false
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %7, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_session_cb) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %8, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_session_cb) #16
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call7 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp8 = icmp ne i32 %call7, 0
  %conv = zext i1 %cmp8 to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2493, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %if.end12

if.end12:                                         ; preds = %if.end6
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call13 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp14 = icmp ne i32 %call13, 0
  %conv15 = zext i1 %cmp14 to i32
  %call16 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2501, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv15) #16
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %end, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.end12
  %mul = shl nsw i32 %spec.select, 1
  %13 = load i32, i32* @new_called, align 4, !tbaa !7
  %call19 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2503, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.190, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %mul, i32 noundef %13) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false18
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call22 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %14) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2504, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false21
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call28 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %15) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2505, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %lor.lhs.false27
  %16 = load i32, i32* @new_called, align 4, !tbaa !7
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2506, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.190, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %mul, i32 noundef %16) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %lor.lhs.false33
  store i8 49, i8* %c, align 1, !tbaa !9
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call39 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %17, i8* noundef nonnull %c, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2511, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.215, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.end38
  %18 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call45 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2512, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 1, i64 noundef %18) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %lor.lhs.false44
  %add = add nsw i32 %mul, 2
  %19 = load i32, i32* @new_called, align 4, !tbaa !7
  %call49 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2513, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.217, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %add, i32 noundef %19) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call52 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %20, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp53 = icmp ne i32 %call52, 0
  %conv54 = zext i1 %cmp53 to i32
  %call55 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2514, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv54) #16
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %end, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %lor.lhs.false51
  %add59 = add nsw i32 %mul, 4
  %21 = load i32, i32* @new_called, align 4, !tbaa !7
  %call60 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2515, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.219, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %add59, i32 noundef %21) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %lor.lhs.false57
  %22 = load i64, i64* %nbytes, align 8, !tbaa !10
  %conv63 = trunc i64 %22 to i32
  %call64 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2516, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i32 noundef 1, i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %lor.lhs.false62
  %23 = load i8, i8* %c, align 1, !tbaa !9
  %conv67 = zext i8 %23 to i32
  %24 = load i8, i8* %5, align 1, !tbaa !9
  %conv68 = zext i8 %24 to i32
  %call69 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2517, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i64 0, i64 0), i32 noundef %conv67, i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %lor.lhs.false66
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call73 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %25, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2518, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.end79

if.end79:                                         ; preds = %lor.lhs.false71
  store i8 50, i8* %c, align 1, !tbaa !9
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call80 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %26) #16
  %cmp81 = icmp ne i32 %call80, 0
  %conv82 = zext i1 %cmp81 to i32
  %call83 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2524, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv82) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %if.end79
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call86 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %27, i8* noundef nonnull %c, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp87 = icmp ne i32 %call86, 0
  %conv88 = zext i1 %cmp87 to i32
  %call89 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2525, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.223, i64 0, i64 0), i32 noundef %conv88) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %lor.lhs.false85
  %28 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call92 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2526, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 1, i64 noundef %28) #16
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %end, label %lor.lhs.false94

lor.lhs.false94:                                  ; preds = %lor.lhs.false91
  %29 = load i32, i32* @new_called, align 4, !tbaa !7
  %call95 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2527, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 1, i32 noundef %29) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %lor.lhs.false94
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call99 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %30, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp100 = icmp ne i32 %call99, 0
  %conv101 = zext i1 %cmp100 to i32
  %call102 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2528, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv101) #16
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %end, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %lor.lhs.false97
  %31 = load i32, i32* @new_called, align 4, !tbaa !7
  %call105 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2529, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 2, i32 noundef %31) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %lor.lhs.false104
  %32 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call108 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2530, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 1, i64 noundef %32) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false107
  %33 = load i8, i8* %c, align 1, !tbaa !9
  %conv111 = zext i8 %33 to i32
  %34 = load i8, i8* %5, align 1, !tbaa !9
  %conv113 = zext i8 %34 to i32
  %call114 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2531, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i64 0, i64 0), i32 noundef %conv111, i32 noundef %conv113) #16
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %end, label %if.end117

if.end117:                                        ; preds = %lor.lhs.false110
  store i8 51, i8* %c, align 1, !tbaa !9
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %35 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call118 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %35) #16
  %cmp119 = icmp ne i32 %call118, 0
  %conv120 = zext i1 %cmp119 to i32
  %call121 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2537, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv120) #16
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %end, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %if.end117
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call124 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %36) #16
  %cmp125 = icmp ne i32 %call124, 0
  %conv126 = zext i1 %cmp125 to i32
  %call127 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2538, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv126) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %lor.lhs.false123
  %37 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call130 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %37, i8* noundef nonnull %c, i64 noundef 0, i64* noundef nonnull %nbytes) #16
  %cmp131 = icmp ne i32 %call130, 0
  %conv132 = zext i1 %cmp131 to i32
  %call133 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2539, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0), i32 noundef %conv132) #16
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %end, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %lor.lhs.false129
  %38 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call136 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2540, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 0, i64 noundef %38) #16
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %end, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %lor.lhs.false135
  %39 = load i32, i32* @new_called, align 4, !tbaa !7
  %call139 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2541, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 2, i32 noundef %39) #16
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %end, label %lor.lhs.false141

lor.lhs.false141:                                 ; preds = %lor.lhs.false138
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call143 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %40, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp144 = icmp ne i32 %call143, 0
  %conv145 = zext i1 %cmp144 to i32
  %call146 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2542, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv145) #16
  %tobool147.not = icmp eq i32 %call146, 0
  br i1 %tobool147.not, label %end, label %lor.lhs.false148

lor.lhs.false148:                                 ; preds = %lor.lhs.false141
  %41 = load i32, i32* @new_called, align 4, !tbaa !7
  %call149 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2543, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.227, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 4, i32 noundef %41) #16
  %tobool150.not = icmp eq i32 %call149, 0
  br i1 %tobool150.not, label %end, label %if.end152

if.end152:                                        ; preds = %lor.lhs.false148
  store i8 52, i8* %c, align 1, !tbaa !9
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %42 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call153 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %42) #16
  %cmp154 = icmp ne i32 %call153, 0
  %conv155 = zext i1 %cmp154 to i32
  %call156 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2549, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv155) #16
  %tobool157.not = icmp eq i32 %call156, 0
  br i1 %tobool157.not, label %end, label %lor.lhs.false158

lor.lhs.false158:                                 ; preds = %if.end152
  %43 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call159 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %43) #16
  %cmp160 = icmp ne i32 %call159, 0
  %conv161 = zext i1 %cmp160 to i32
  %call162 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2550, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv161) #16
  %tobool163.not = icmp eq i32 %call162, 0
  br i1 %tobool163.not, label %end, label %lor.lhs.false164

lor.lhs.false164:                                 ; preds = %lor.lhs.false158
  %44 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call165 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %44) #16
  %cmp166 = icmp ne i32 %call165, 0
  %conv167 = zext i1 %cmp166 to i32
  %call168 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2551, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.228, i64 0, i64 0), i32 noundef %conv167) #16
  %tobool169.not = icmp eq i32 %call168, 0
  br i1 %tobool169.not, label %end, label %lor.lhs.false170

lor.lhs.false170:                                 ; preds = %lor.lhs.false164
  %45 = load i32, i32* @new_called, align 4, !tbaa !7
  %call171 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2552, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 2, i32 noundef %45) #16
  %tobool172.not = icmp eq i32 %call171, 0
  br i1 %tobool172.not, label %end, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false170
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call175 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %46, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp176 = icmp ne i32 %call175, 0
  %conv177 = zext i1 %cmp176 to i32
  %call178 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2553, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv177) #16
  %tobool179.not = icmp eq i32 %call178, 0
  br i1 %tobool179.not, label %end, label %lor.lhs.false180

lor.lhs.false180:                                 ; preds = %lor.lhs.false173
  %47 = load i32, i32* @new_called, align 4, !tbaa !7
  %call181 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2554, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.227, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 4, i32 noundef %47) #16
  %tobool182.not = icmp eq i32 %call181, 0
  br i1 %tobool182.not, label %end, label %if.end184

if.end184:                                        ; preds = %lor.lhs.false180
  store i8 53, i8* %c, align 1, !tbaa !9
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %48 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call185 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef %48) #16
  %49 = bitcast %struct.bio_st* %call185 to i8*
  %call186 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2564, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.229, i64 0, i64 0), i8* noundef %49) #16
  %tobool187.not = icmp eq i32 %call186, 0
  br i1 %tobool187.not, label %end, label %lor.lhs.false188

lor.lhs.false188:                                 ; preds = %if.end184
  %call189 = call i32 @BIO_up_ref(%struct.bio_st* noundef %call185) #16
  %cmp190 = icmp ne i32 %call189, 0
  %conv191 = zext i1 %cmp190 to i32
  %call192 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2564, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.230, i64 0, i64 0), i32 noundef %conv191) #16
  %tobool193.not = icmp eq i32 %call192, 0
  br i1 %tobool193.not, label %end, label %if.end195

if.end195:                                        ; preds = %lor.lhs.false188
  %50 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %50, %struct.bio_st* noundef %call1) #16
  %51 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call196 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %51, i8* noundef nonnull %c, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp197 = icmp ne i32 %call196, 0
  %conv198 = zext i1 %cmp197 to i32
  %call199 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2570, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.215, i64 0, i64 0), i32 noundef %conv198) #16
  %tobool200.not = icmp eq i32 %call199, 0
  br i1 %tobool200.not, label %end, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %if.end195
  %52 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call202 = call i32 @SSL_get_error(%struct.ssl_st* noundef %52, i32 noundef 0) #16
  %call203 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2571, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), i32 noundef %call202, i32 noundef 3) #16
  %tobool204.not = icmp eq i32 %call203, 0
  br i1 %tobool204.not, label %end, label %lor.lhs.false205

lor.lhs.false205:                                 ; preds = %lor.lhs.false201
  %53 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call206 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2572, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %53, i64 noundef 0) #16
  %tobool207.not = icmp eq i32 %call206, 0
  br i1 %tobool207.not, label %end, label %if.end209

if.end209:                                        ; preds = %lor.lhs.false205
  %54 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %54, %struct.bio_st* noundef %call185) #16
  %55 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call210 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %55) #16
  %cmp211 = icmp ne i32 %call210, 0
  %conv212 = zext i1 %cmp211 to i32
  %call213 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2581, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv212) #16
  %tobool214.not = icmp eq i32 %call213, 0
  br i1 %tobool214.not, label %end, label %lor.lhs.false215

lor.lhs.false215:                                 ; preds = %if.end209
  %56 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call216 = call i32 @SSL_new_session_ticket(%struct.ssl_st* noundef %56) #16
  %cmp217 = icmp ne i32 %call216, 0
  %conv218 = zext i1 %cmp217 to i32
  %call219 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2582, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214, i64 0, i64 0), i32 noundef %conv218) #16
  %tobool220.not = icmp eq i32 %call219, 0
  br i1 %tobool220.not, label %end, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %lor.lhs.false215
  %57 = load i32, i32* @new_called, align 4, !tbaa !7
  %call222 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2583, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 0, i32 noundef %57) #16
  %tobool223.not = icmp eq i32 %call222, 0
  br i1 %tobool223.not, label %end, label %lor.lhs.false224

lor.lhs.false224:                                 ; preds = %lor.lhs.false221
  %58 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call225 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %58) #16
  %cmp226 = icmp ne i32 %call225, 0
  %conv227 = zext i1 %cmp226 to i32
  %call228 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2584, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.228, i64 0, i64 0), i32 noundef %conv227) #16
  %tobool229.not = icmp eq i32 %call228, 0
  br i1 %tobool229.not, label %end, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %lor.lhs.false224
  %59 = load i32, i32* @new_called, align 4, !tbaa !7
  %call231 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2585, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 0, i32 noundef %59) #16
  %tobool232.not = icmp eq i32 %call231, 0
  br i1 %tobool232.not, label %end, label %if.end234

if.end234:                                        ; preds = %lor.lhs.false230
  %60 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call235 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %60, i8* noundef nonnull %c, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp236 = icmp ne i32 %call235, 0
  %conv237 = zext i1 %cmp236 to i32
  %call238 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2588, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.215, i64 0, i64 0), i32 noundef %conv237) #16
  %tobool239.not = icmp eq i32 %call238, 0
  br i1 %tobool239.not, label %end, label %lor.lhs.false240

lor.lhs.false240:                                 ; preds = %if.end234
  %61 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call241 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2589, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 1, i64 noundef %61) #16
  %tobool242.not = icmp eq i32 %call241, 0
  br i1 %tobool242.not, label %end, label %lor.lhs.false243

lor.lhs.false243:                                 ; preds = %lor.lhs.false240
  %62 = load i32, i32* @new_called, align 4, !tbaa !7
  %call244 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2590, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 0, i32 noundef %62) #16
  %tobool245.not = icmp eq i32 %call244, 0
  br i1 %tobool245.not, label %end, label %lor.lhs.false246

lor.lhs.false246:                                 ; preds = %lor.lhs.false243
  %63 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call248 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %63, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp249 = icmp ne i32 %call248, 0
  %conv250 = zext i1 %cmp249 to i32
  %call251 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2591, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv250) #16
  %tobool252.not = icmp eq i32 %call251, 0
  br i1 %tobool252.not, label %end, label %lor.lhs.false253

lor.lhs.false253:                                 ; preds = %lor.lhs.false246
  %64 = load i32, i32* @new_called, align 4, !tbaa !7
  %call254 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2592, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 0, i32 noundef %64) #16
  %tobool255.not = icmp eq i32 %call254, 0
  br i1 %tobool255.not, label %end, label %lor.lhs.false256

lor.lhs.false256:                                 ; preds = %lor.lhs.false253
  %65 = load i64, i64* %nbytes, align 8, !tbaa !10
  %conv257 = trunc i64 %65 to i32
  %call258 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2593, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i32 noundef 1, i32 noundef %conv257) #16
  %tobool259.not = icmp eq i32 %call258, 0
  br i1 %tobool259.not, label %end, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %lor.lhs.false256
  %66 = load i8, i8* %c, align 1, !tbaa !9
  %conv261 = zext i8 %66 to i32
  %67 = load i8, i8* %5, align 1, !tbaa !9
  %conv263 = zext i8 %67 to i32
  %call264 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2594, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i64 0, i64 0), i32 noundef %conv261, i32 noundef %conv263) #16
  %tobool265.not = icmp eq i32 %call264, 0
  br i1 %tobool265.not, label %end, label %lor.lhs.false266

lor.lhs.false266:                                 ; preds = %lor.lhs.false260
  %68 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call268 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %68, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp269 = icmp ne i32 %call268, 0
  %conv270 = zext i1 %cmp269 to i32
  %call271 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2595, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv270) #16
  %tobool272.not = icmp eq i32 %call271, 0
  br i1 %tobool272.not, label %end, label %if.end274

if.end274:                                        ; preds = %lor.lhs.false266
  %69 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call275 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %69) #16
  %cmp276 = icmp ne i32 %call275, 0
  %conv277 = zext i1 %cmp276 to i32
  %call278 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2598, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.228, i64 0, i64 0), i32 noundef %conv277) #16
  %tobool279.not = icmp eq i32 %call278, 0
  br i1 %tobool279.not, label %end, label %lor.lhs.false280

lor.lhs.false280:                                 ; preds = %if.end274
  %70 = load i32, i32* @new_called, align 4, !tbaa !7
  %call281 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2599, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 0, i32 noundef %70) #16
  %tobool282.not = icmp eq i32 %call281, 0
  br i1 %tobool282.not, label %end, label %if.end284

if.end284:                                        ; preds = %lor.lhs.false280
  store i8 54, i8* %c, align 1, !tbaa !9
  %71 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call285 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %71, i8* noundef nonnull %c, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp286 = icmp ne i32 %call285, 0
  %conv287 = zext i1 %cmp286 to i32
  %call288 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2603, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.215, i64 0, i64 0), i32 noundef %conv287) #16
  %tobool289.not = icmp eq i32 %call288, 0
  br i1 %tobool289.not, label %end, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %if.end284
  %72 = load i64, i64* %nbytes, align 8, !tbaa !10
  %call291 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2604, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i64 noundef 1, i64 noundef %72) #16
  %tobool292.not = icmp eq i32 %call291, 0
  br i1 %tobool292.not, label %end, label %lor.lhs.false293

lor.lhs.false293:                                 ; preds = %lor.lhs.false290
  %73 = load i32, i32* @new_called, align 4, !tbaa !7
  %call294 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2605, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 2, i32 noundef %73) #16
  %tobool295.not = icmp eq i32 %call294, 0
  br i1 %tobool295.not, label %end, label %lor.lhs.false296

lor.lhs.false296:                                 ; preds = %lor.lhs.false293
  %74 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call298 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %74, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp299 = icmp ne i32 %call298, 0
  %conv300 = zext i1 %cmp299 to i32
  %call301 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2606, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv300) #16
  %tobool302.not = icmp eq i32 %call301, 0
  br i1 %tobool302.not, label %end, label %lor.lhs.false303

lor.lhs.false303:                                 ; preds = %lor.lhs.false296
  %75 = load i32, i32* @new_called, align 4, !tbaa !7
  %call304 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2607, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.227, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef 4, i32 noundef %75) #16
  %tobool305.not = icmp eq i32 %call304, 0
  br i1 %tobool305.not, label %end, label %lor.lhs.false306

lor.lhs.false306:                                 ; preds = %lor.lhs.false303
  %76 = load i64, i64* %nbytes, align 8, !tbaa !10
  %conv307 = trunc i64 %76 to i32
  %call308 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2608, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i32 noundef 1, i32 noundef %conv307) #16
  %tobool309.not = icmp eq i32 %call308, 0
  br i1 %tobool309.not, label %end, label %lor.lhs.false310

lor.lhs.false310:                                 ; preds = %lor.lhs.false306
  %77 = load i8, i8* %c, align 1, !tbaa !9
  %conv311 = zext i8 %77 to i32
  %78 = load i8, i8* %5, align 1, !tbaa !9
  %conv313 = zext i8 %78 to i32
  %call314 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2609, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i64 0, i64 0), i32 noundef %conv311, i32 noundef %conv313) #16
  %tobool315.not = icmp eq i32 %call314, 0
  br i1 %tobool315.not, label %end, label %lor.lhs.false316

lor.lhs.false316:                                 ; preds = %lor.lhs.false310
  %79 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call318 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %79, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %nbytes) #16
  %cmp319 = icmp ne i32 %call318, 0
  %conv320 = zext i1 %cmp319 to i32
  %call321 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2610, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.218, i64 0, i64 0), i32 noundef %conv320) #16
  %tobool322.not = icmp eq i32 %call321, 0
  br i1 %tobool322.not, label %end, label %if.end324

if.end324:                                        ; preds = %lor.lhs.false316
  %80 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call325 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %80) #16
  %81 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call326 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %81) #16
  br label %end

end:                                              ; preds = %if.end184, %lor.lhs.false188, %if.end284, %lor.lhs.false290, %lor.lhs.false293, %lor.lhs.false296, %lor.lhs.false303, %lor.lhs.false306, %lor.lhs.false310, %lor.lhs.false316, %if.end274, %lor.lhs.false280, %if.end234, %lor.lhs.false240, %lor.lhs.false243, %lor.lhs.false246, %lor.lhs.false253, %lor.lhs.false256, %lor.lhs.false260, %lor.lhs.false266, %if.end209, %lor.lhs.false215, %lor.lhs.false221, %lor.lhs.false224, %lor.lhs.false230, %if.end195, %lor.lhs.false201, %lor.lhs.false205, %if.end152, %lor.lhs.false158, %lor.lhs.false164, %lor.lhs.false170, %lor.lhs.false173, %lor.lhs.false180, %if.end117, %lor.lhs.false123, %lor.lhs.false129, %lor.lhs.false135, %lor.lhs.false138, %lor.lhs.false141, %lor.lhs.false148, %if.end79, %lor.lhs.false85, %lor.lhs.false91, %lor.lhs.false94, %lor.lhs.false97, %lor.lhs.false104, %lor.lhs.false107, %lor.lhs.false110, %if.end38, %lor.lhs.false44, %lor.lhs.false47, %lor.lhs.false51, %lor.lhs.false57, %lor.lhs.false62, %lor.lhs.false66, %lor.lhs.false71, %if.end12, %lor.lhs.false18, %lor.lhs.false21, %lor.lhs.false27, %lor.lhs.false33, %if.end6, %entry, %lor.lhs.false, %if.end324
  %bretry.0 = phi %struct.bio_st* [ null, %if.end324 ], [ null, %lor.lhs.false316 ], [ null, %lor.lhs.false310 ], [ null, %lor.lhs.false306 ], [ null, %lor.lhs.false303 ], [ null, %lor.lhs.false296 ], [ null, %lor.lhs.false293 ], [ null, %lor.lhs.false290 ], [ null, %if.end284 ], [ null, %lor.lhs.false280 ], [ null, %if.end274 ], [ null, %lor.lhs.false266 ], [ null, %lor.lhs.false260 ], [ null, %lor.lhs.false256 ], [ null, %lor.lhs.false253 ], [ null, %lor.lhs.false246 ], [ null, %lor.lhs.false243 ], [ null, %lor.lhs.false240 ], [ null, %if.end234 ], [ null, %lor.lhs.false230 ], [ null, %lor.lhs.false224 ], [ null, %lor.lhs.false221 ], [ null, %lor.lhs.false215 ], [ null, %if.end209 ], [ null, %lor.lhs.false205 ], [ null, %lor.lhs.false201 ], [ null, %if.end195 ], [ %call1, %lor.lhs.false180 ], [ %call1, %lor.lhs.false173 ], [ %call1, %lor.lhs.false170 ], [ %call1, %lor.lhs.false164 ], [ %call1, %lor.lhs.false158 ], [ %call1, %if.end152 ], [ %call1, %lor.lhs.false148 ], [ %call1, %lor.lhs.false141 ], [ %call1, %lor.lhs.false138 ], [ %call1, %lor.lhs.false135 ], [ %call1, %lor.lhs.false129 ], [ %call1, %lor.lhs.false123 ], [ %call1, %if.end117 ], [ %call1, %lor.lhs.false110 ], [ %call1, %lor.lhs.false107 ], [ %call1, %lor.lhs.false104 ], [ %call1, %lor.lhs.false97 ], [ %call1, %lor.lhs.false94 ], [ %call1, %lor.lhs.false91 ], [ %call1, %lor.lhs.false85 ], [ %call1, %if.end79 ], [ %call1, %lor.lhs.false71 ], [ %call1, %lor.lhs.false66 ], [ %call1, %lor.lhs.false62 ], [ %call1, %lor.lhs.false57 ], [ %call1, %lor.lhs.false51 ], [ %call1, %lor.lhs.false47 ], [ %call1, %lor.lhs.false44 ], [ %call1, %if.end38 ], [ %call1, %lor.lhs.false33 ], [ %call1, %lor.lhs.false27 ], [ %call1, %lor.lhs.false21 ], [ %call1, %lor.lhs.false18 ], [ %call1, %if.end12 ], [ %call1, %if.end6 ], [ %call1, %lor.lhs.false ], [ %call1, %entry ], [ %call1, %lor.lhs.false188 ], [ %call1, %if.end184 ]
  %tmp.0 = phi %struct.bio_st* [ null, %if.end324 ], [ null, %lor.lhs.false316 ], [ null, %lor.lhs.false310 ], [ null, %lor.lhs.false306 ], [ null, %lor.lhs.false303 ], [ null, %lor.lhs.false296 ], [ null, %lor.lhs.false293 ], [ null, %lor.lhs.false290 ], [ null, %if.end284 ], [ null, %lor.lhs.false280 ], [ null, %if.end274 ], [ null, %lor.lhs.false266 ], [ null, %lor.lhs.false260 ], [ null, %lor.lhs.false256 ], [ null, %lor.lhs.false253 ], [ null, %lor.lhs.false246 ], [ null, %lor.lhs.false243 ], [ null, %lor.lhs.false240 ], [ null, %if.end234 ], [ null, %lor.lhs.false230 ], [ null, %lor.lhs.false224 ], [ null, %lor.lhs.false221 ], [ null, %lor.lhs.false215 ], [ null, %if.end209 ], [ %call185, %lor.lhs.false205 ], [ %call185, %lor.lhs.false201 ], [ %call185, %if.end195 ], [ null, %lor.lhs.false180 ], [ null, %lor.lhs.false173 ], [ null, %lor.lhs.false170 ], [ null, %lor.lhs.false164 ], [ null, %lor.lhs.false158 ], [ null, %if.end152 ], [ null, %lor.lhs.false148 ], [ null, %lor.lhs.false141 ], [ null, %lor.lhs.false138 ], [ null, %lor.lhs.false135 ], [ null, %lor.lhs.false129 ], [ null, %lor.lhs.false123 ], [ null, %if.end117 ], [ null, %lor.lhs.false110 ], [ null, %lor.lhs.false107 ], [ null, %lor.lhs.false104 ], [ null, %lor.lhs.false97 ], [ null, %lor.lhs.false94 ], [ null, %lor.lhs.false91 ], [ null, %lor.lhs.false85 ], [ null, %if.end79 ], [ null, %lor.lhs.false71 ], [ null, %lor.lhs.false66 ], [ null, %lor.lhs.false62 ], [ null, %lor.lhs.false57 ], [ null, %lor.lhs.false51 ], [ null, %lor.lhs.false47 ], [ null, %lor.lhs.false44 ], [ null, %if.end38 ], [ null, %lor.lhs.false33 ], [ null, %lor.lhs.false27 ], [ null, %lor.lhs.false21 ], [ null, %lor.lhs.false18 ], [ null, %if.end12 ], [ null, %if.end6 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false188 ], [ null, %if.end184 ]
  %testresult.0 = phi i32 [ 1, %if.end324 ], [ 0, %lor.lhs.false316 ], [ 0, %lor.lhs.false310 ], [ 0, %lor.lhs.false306 ], [ 0, %lor.lhs.false303 ], [ 0, %lor.lhs.false296 ], [ 0, %lor.lhs.false293 ], [ 0, %lor.lhs.false290 ], [ 0, %if.end284 ], [ 0, %lor.lhs.false280 ], [ 0, %if.end274 ], [ 0, %lor.lhs.false266 ], [ 0, %lor.lhs.false260 ], [ 0, %lor.lhs.false256 ], [ 0, %lor.lhs.false253 ], [ 0, %lor.lhs.false246 ], [ 0, %lor.lhs.false243 ], [ 0, %lor.lhs.false240 ], [ 0, %if.end234 ], [ 0, %lor.lhs.false230 ], [ 0, %lor.lhs.false224 ], [ 0, %lor.lhs.false221 ], [ 0, %lor.lhs.false215 ], [ 0, %if.end209 ], [ 0, %lor.lhs.false205 ], [ 0, %lor.lhs.false201 ], [ 0, %if.end195 ], [ 0, %lor.lhs.false180 ], [ 0, %lor.lhs.false173 ], [ 0, %lor.lhs.false170 ], [ 0, %lor.lhs.false164 ], [ 0, %lor.lhs.false158 ], [ 0, %if.end152 ], [ 0, %lor.lhs.false148 ], [ 0, %lor.lhs.false141 ], [ 0, %lor.lhs.false138 ], [ 0, %lor.lhs.false135 ], [ 0, %lor.lhs.false129 ], [ 0, %lor.lhs.false123 ], [ 0, %if.end117 ], [ 0, %lor.lhs.false110 ], [ 0, %lor.lhs.false107 ], [ 0, %lor.lhs.false104 ], [ 0, %lor.lhs.false97 ], [ 0, %lor.lhs.false94 ], [ 0, %lor.lhs.false91 ], [ 0, %lor.lhs.false85 ], [ 0, %if.end79 ], [ 0, %lor.lhs.false71 ], [ 0, %lor.lhs.false66 ], [ 0, %lor.lhs.false62 ], [ 0, %lor.lhs.false57 ], [ 0, %lor.lhs.false51 ], [ 0, %lor.lhs.false47 ], [ 0, %lor.lhs.false44 ], [ 0, %if.end38 ], [ 0, %lor.lhs.false33 ], [ 0, %lor.lhs.false27 ], [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false18 ], [ 0, %if.end12 ], [ 0, %if.end6 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false188 ], [ 0, %if.end184 ]
  %call327 = call i32 @BIO_free(%struct.bio_st* noundef %bretry.0) #16
  %call328 = call i32 @BIO_free(%struct.bio_st* noundef %tmp.0) #16
  %82 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %82) #16
  %83 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %83) #16
  %84 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %84) #16
  %85 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %85) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_set_bio(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %irbio = alloca %struct.bio_st*, align 8
  %iwbio = alloca %struct.bio_st*, align 8
  %nrbio = alloca %struct.bio_st*, align 8
  %nwbio = alloca %struct.bio_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.bio_st** %irbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.bio_st* null, %struct.bio_st** %irbio, align 8, !tbaa !3
  %3 = bitcast %struct.bio_st** %iwbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.bio_st* null, %struct.bio_st** %iwbio, align 8, !tbaa !3
  %4 = bitcast %struct.bio_st** %nrbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.bio_st* null, %struct.bio_st** %nrbio, align 8, !tbaa !3
  %5 = bitcast %struct.bio_st** %nwbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store %struct.bio_st* null, %struct.bio_st** %nwbio, align 8, !tbaa !3
  %6 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %7 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %cmp = icmp slt i32 %idx, 81
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %rem = srem i32 %idx, 3
  %div = sdiv i32 %idx, 3
  %rem1 = srem i32 %div, 3
  %div2 = sdiv i32 %idx, 9
  %rem3 = srem i32 %div2, 3
  %div4 = sdiv i32 %idx, 27
  %rem5 = srem i32 %div4, 3
  br label %if.end

if.else:                                          ; preds = %entry
  %sub = add nsw i32 %idx, -81
  %rem6185 = and i32 %sub, 1
  %div7186 = lshr i32 %sub, 1
  %rem8187 = and i32 %div7186, 1
  %div9188 = lshr i32 %sub, 2
  %rem10189 = and i32 %div9188, 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %initrbio.0 = phi i32 [ %rem, %if.then ], [ 3, %if.else ]
  %initwbio.0 = phi i32 [ %rem1, %if.then ], [ 3, %if.else ]
  %newrbio.0 = phi i32 [ %rem3, %if.then ], [ %rem6185, %if.else ]
  %newwbio.0 = phi i32 [ %rem5, %if.then ], [ %rem8187, %if.else ]
  %conntype.0 = phi i32 [ 2, %if.then ], [ %rem10189, %if.else ]
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call11 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call12 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call11, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp13 = icmp ne i32 %call12, 0
  %conv = zext i1 %cmp13 to i32
  %call14 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2709, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call14, 0
  br i1 %tobool.not, label %end, label %if.end16

if.end16:                                         ; preds = %if.end
  %cmp17 = icmp eq i32 %conntype.0, 1
  br i1 %cmp17, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end16
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call20 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %11, i32 noundef 123, i64 noundef 772, i8* noundef null) #16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call21 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %12, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.end16
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call23 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %13, %struct.ssl_ctx_st* noundef %14, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2724, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end29

if.end29:                                         ; preds = %if.end22
  %cmp30 = icmp eq i32 %initrbio.0, 1
  %cmp32 = icmp eq i32 %initwbio.0, 1
  %or.cond = or i1 %cmp30, %cmp32
  %cmp35 = icmp eq i32 %newrbio.0, 1
  %or.cond130 = select i1 %or.cond, i1 true, i1 %cmp35
  %cmp38 = icmp eq i32 %newwbio.0, 1
  %or.cond131 = select i1 %or.cond130, i1 true, i1 %cmp38
  br i1 %or.cond131, label %if.then40, label %if.end47

if.then40:                                        ; preds = %if.end29
  %call41 = call %struct.bio_method_st* @BIO_s_mem() #16
  %call42 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call41) #16
  %15 = bitcast %struct.bio_st* %call42 to i8*
  %call43 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2731, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.233, i64 0, i64 0), i8* noundef %15) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end47

if.end47:                                         ; preds = %if.then40, %if.end29
  %bio1.0 = phi %struct.bio_st* [ %call42, %if.then40 ], [ null, %if.end29 ]
  %cmp48 = icmp eq i32 %initrbio.0, 2
  %cmp51 = icmp eq i32 %initwbio.0, 2
  %or.cond132 = or i1 %cmp48, %cmp51
  %cmp54 = icmp eq i32 %newrbio.0, 2
  %or.cond133 = select i1 %or.cond132, i1 true, i1 %cmp54
  %cmp57 = icmp eq i32 %newwbio.0, 2
  %or.cond134 = select i1 %or.cond133, i1 true, i1 %cmp57
  br i1 %or.cond134, label %if.then59, label %if.end66

if.then59:                                        ; preds = %if.end47
  %call60 = call %struct.bio_method_st* @BIO_s_mem() #16
  %call61 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call60) #16
  %16 = bitcast %struct.bio_st* %call61 to i8*
  %call62 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2739, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.234, i64 0, i64 0), i8* noundef %16) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %if.end66

if.end66:                                         ; preds = %if.then59, %if.end47
  %bio2.0 = phi %struct.bio_st* [ %call61, %if.then59 ], [ null, %if.end47 ]
  %cmp67.not = icmp eq i32 %initrbio.0, 3
  br i1 %cmp67.not, label %if.end82, label %if.then69

if.then69:                                        ; preds = %if.end66
  call fastcc void @setupbio(%struct.bio_st** noundef nonnull %irbio, %struct.bio_st* noundef %bio1.0, %struct.bio_st* noundef %bio2.0, i32 noundef %initrbio.0) #18
  call fastcc void @setupbio(%struct.bio_st** noundef nonnull %iwbio, %struct.bio_st* noundef %bio1.0, %struct.bio_st* noundef %bio2.0, i32 noundef %initwbio.0) #18
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %18 = load %struct.bio_st*, %struct.bio_st** %irbio, align 8, !tbaa !3
  %19 = load %struct.bio_st*, %struct.bio_st** %iwbio, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %17, %struct.bio_st* noundef %18, %struct.bio_st* noundef %19) #16
  %cmp70.not = icmp eq %struct.bio_st* %18, null
  br i1 %cmp70.not, label %if.end74, label %if.then72

if.then72:                                        ; preds = %if.then69
  %call73 = call i32 @BIO_up_ref(%struct.bio_st* noundef nonnull %18) #16
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.then69
  %cmp75.not = icmp eq %struct.bio_st* %19, null
  %cmp77.not = icmp eq %struct.bio_st* %19, %18
  %or.cond180 = or i1 %cmp75.not, %cmp77.not
  br i1 %or.cond180, label %if.end82, label %if.then79

if.then79:                                        ; preds = %if.end74
  %call80 = call i32 @BIO_up_ref(%struct.bio_st* noundef nonnull %19) #16
  br label %if.end82

if.end82:                                         ; preds = %if.end74, %if.then79, %if.end66
  %20 = phi %struct.bio_st* [ %19, %if.end74 ], [ %19, %if.then79 ], [ null, %if.end66 ]
  %21 = phi %struct.bio_st* [ %18, %if.end74 ], [ %18, %if.then79 ], [ null, %if.end66 ]
  %cmp83.not = icmp eq i32 %conntype.0, 2
  br i1 %cmp83.not, label %if.end96, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %if.end82
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call86 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %cmp87 = icmp eq i32 %conntype.0, 0
  %conv88 = zext i1 %cmp87 to i32
  %cmp89 = icmp eq i32 %call86, %conv88
  %conv90 = zext i1 %cmp89 to i32
  %call93 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2762, i8* noundef getelementptr inbounds ([105 x i8], [105 x i8]* @.str.235, i64 0, i64 0), i32 noundef %conv90) #16
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %end, label %if.end96

if.end96:                                         ; preds = %land.lhs.true85, %if.end82
  call fastcc void @setupbio(%struct.bio_st** noundef nonnull %nrbio, %struct.bio_st* noundef %bio1.0, %struct.bio_st* noundef %bio2.0, i32 noundef %newrbio.0) #18
  call fastcc void @setupbio(%struct.bio_st** noundef nonnull %nwbio, %struct.bio_st* noundef %bio1.0, %struct.bio_st* noundef %bio2.0, i32 noundef %newwbio.0) #18
  %24 = load %struct.bio_st*, %struct.bio_st** %nrbio, align 8, !tbaa !3
  %cmp97.not = icmp eq %struct.bio_st* %24, null
  %cmp100.not = icmp eq %struct.bio_st* %24, %21
  %or.cond181 = or i1 %cmp97.not, %cmp100.not
  %.pre = load %struct.bio_st*, %struct.bio_st** %nwbio, align 8, !tbaa !3
  br i1 %or.cond181, label %if.end110, label %land.lhs.true102

land.lhs.true102:                                 ; preds = %if.end96
  %cmp103.not = icmp eq %struct.bio_st* %.pre, %20
  %cmp106.not = icmp eq %struct.bio_st* %24, %.pre
  %or.cond182 = select i1 %cmp103.not, i1 %cmp106.not, i1 false
  br i1 %or.cond182, label %if.end127, label %if.then108

if.then108:                                       ; preds = %land.lhs.true102
  %call109 = call i32 @BIO_up_ref(%struct.bio_st* noundef nonnull %24) #16
  br label %if.end110

if.end110:                                        ; preds = %if.end96, %if.then108
  %cmp111.not = icmp eq %struct.bio_st* %.pre, null
  %cmp114.not = icmp eq %struct.bio_st* %.pre, %24
  %or.cond183 = select i1 %cmp111.not, i1 true, i1 %cmp114.not
  br i1 %or.cond183, label %if.end127, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %if.end110
  %cmp117.not = icmp ne %struct.bio_st* %.pre, %20
  %cmp123 = icmp eq %struct.bio_st* %21, %20
  %or.cond184 = or i1 %cmp117.not, %cmp123
  br i1 %or.cond184, label %if.then125, label %if.end127

if.then125:                                       ; preds = %land.lhs.true116
  %call126 = call i32 @BIO_up_ref(%struct.bio_st* noundef nonnull %.pre) #16
  br label %if.end127

if.end127:                                        ; preds = %land.lhs.true102, %land.lhs.true116, %if.then125, %if.end110
  %25 = phi %struct.bio_st* [ %.pre, %land.lhs.true116 ], [ %.pre, %if.then125 ], [ %.pre, %if.end110 ], [ %24, %land.lhs.true102 ]
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %26, %struct.bio_st* noundef %24, %struct.bio_st* noundef %25) #16
  br label %end

end:                                              ; preds = %land.lhs.true85, %if.then59, %if.then40, %if.end22, %if.end, %if.end127
  %bio1.1 = phi %struct.bio_st* [ %bio1.0, %if.end127 ], [ %bio1.0, %land.lhs.true85 ], [ %bio1.0, %if.then59 ], [ %call42, %if.then40 ], [ null, %if.end22 ], [ null, %if.end ]
  %bio2.1 = phi %struct.bio_st* [ %bio2.0, %if.end127 ], [ %bio2.0, %land.lhs.true85 ], [ %call61, %if.then59 ], [ null, %if.then40 ], [ null, %if.end22 ], [ null, %if.end ]
  %testresult.0 = phi i32 [ 1, %if.end127 ], [ 0, %land.lhs.true85 ], [ 0, %if.then59 ], [ 0, %if.then40 ], [ 0, %if.end22 ], [ 0, %if.end ]
  %call128 = call i32 @BIO_free(%struct.bio_st* noundef %bio1.1) #16
  %call129 = call i32 @BIO_free(%struct.bio_st* noundef %bio2.1) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %27) #16
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %29) #16
  %30 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %30) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_bio_pop_next_bio() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_ssl_bio(i32 noundef 0, i32 noundef 0) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_bio_pop_ssl_bio() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_ssl_bio(i32 noundef 1, i32 noundef 0) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_bio_change_rbio() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_ssl_bio(i32 noundef 0, i32 noundef 1) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_bio_change_wbio() #1 {
entry:
  %call = tail call fastcc i32 @execute_test_ssl_bio(i32 noundef 0, i32 noundef 2) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_set_sigalgs(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %conv = sext i32 %idx to i64
  %call = tail call i32 @test_size_t_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2925, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.241, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.242, i64 0, i64 0), i64 noundef %conv, i64 noundef 28) #16
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup83, label %if.end

if.end:                                           ; preds = %entry
  %cmp = icmp ult i32 %idx, 14
  %sub = add nsw i64 %conv, -14
  %conv.pn = select i1 %cmp, i64 %conv, i64 %sub
  %cond = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call6 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call7 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call8 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call6, %struct.ssl_method_st* noundef %call7, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv10 = zext i1 %cmp9 to i32
  %call11 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2934, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv10) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %cleanup83, label %if.end14

if.end14:                                         ; preds = %if.end
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call15 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  br i1 %cmp, label %if.then17, label %if.end38

if.then17:                                        ; preds = %if.end14
  %list = getelementptr inbounds %struct.sigalgs_list, %struct.sigalgs_list* %cond, i64 0, i32 0
  %8 = load i32*, i32** %list, align 16, !tbaa !12
  %cmp18.not = icmp eq i32* %8, null
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  br i1 %cmp18.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.then17
  %listlen = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn, i32 1
  %10 = load i64, i64* %listlen, align 8, !tbaa !14
  %11 = bitcast i32* %8 to i8*
  %call22 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %9, i32 noundef 97, i64 noundef %10, i8* noundef nonnull %11) #16
  br label %if.end26

if.else:                                          ; preds = %if.then17
  %liststr = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn, i32 2
  %12 = load i8*, i8** %liststr, align 16, !tbaa !15
  %call24 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %9, i32 noundef 98, i64 noundef 0, i8* noundef %12) #16
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then20
  %ret.0.in = phi i64 [ %call22, %if.then20 ], [ %call24, %if.else ]
  %ret.0 = trunc i64 %ret.0.in to i32
  %tobool27.not = icmp eq i32 %ret.0, 0
  %13 = add nsw i64 %conv.pn, -6
  %tobool29.not = icmp ult i64 %13, 8
  br i1 %tobool27.not, label %if.then28, label %if.end33

if.then28:                                        ; preds = %if.end26
  br i1 %tobool29.not, label %end, label %if.then30

if.then30:                                        ; preds = %if.then28
  call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2949, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.243, i64 0, i64 0), i32 noundef %idx) #16
  br label %end

if.end33:                                         ; preds = %if.end26
  br i1 %tobool29.not, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end33
  call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2955, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.244, i64 0, i64 0), i32 noundef %idx) #16
  br label %end

if.end38:                                         ; preds = %if.end33, %if.end14
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call39 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %14, %struct.ssl_ctx_st* noundef %15, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2961, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %if.end38
  br i1 %cmp, label %if.end77, label %if.then47

if.then47:                                        ; preds = %if.end45
  %list49 = getelementptr inbounds %struct.sigalgs_list, %struct.sigalgs_list* %cond, i64 0, i32 0
  %16 = load i32*, i32** %list49, align 16, !tbaa !12
  %cmp50.not = icmp eq i32* %16, null
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  br i1 %cmp50.not, label %if.else57, label %if.then52

if.then52:                                        ; preds = %if.then47
  %listlen53 = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn, i32 1
  %18 = load i64, i64* %listlen53, align 8, !tbaa !14
  %19 = bitcast i32* %16 to i8*
  %call55 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %17, i32 noundef 97, i64 noundef %18, i8* noundef nonnull %19) #16
  br label %if.end61

if.else57:                                        ; preds = %if.then47
  %liststr58 = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn, i32 2
  %20 = load i8*, i8** %liststr58, align 16, !tbaa !15
  %call59 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %17, i32 noundef 98, i64 noundef 0, i8* noundef %20) #16
  br label %if.end61

if.end61:                                         ; preds = %if.else57, %if.then52
  %ret48.0.in = phi i64 [ %call55, %if.then52 ], [ %call59, %if.else57 ]
  %ret48.0 = trunc i64 %ret48.0.in to i32
  %tobool62.not = icmp eq i32 %ret48.0, 0
  %21 = add nsw i64 %conv.pn, -6
  %tobool65.not = icmp ult i64 %21, 8
  br i1 %tobool62.not, label %if.then63, label %if.end69

if.then63:                                        ; preds = %if.end61
  br i1 %tobool65.not, label %end, label %if.then66

if.then66:                                        ; preds = %if.then63
  call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2973, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.245, i64 0, i64 0), i32 noundef %idx) #16
  br label %end

if.end69:                                         ; preds = %if.end61
  br i1 %tobool65.not, label %end, label %if.end77

if.end77:                                         ; preds = %if.end69, %if.end45
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call78 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %connsuccess = getelementptr inbounds [14 x %struct.sigalgs_list], [14 x %struct.sigalgs_list]* @testsigalgs, i64 0, i64 %conv.pn, i32 4
  %24 = load i32, i32* %connsuccess, align 4, !tbaa !16
  %call79 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2984, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.246, i64 0, i64 0), i32 noundef %call78, i32 noundef %24) #16
  %tobool80.not = icmp ne i32 %call79, 0
  %spec.select = zext i1 %tobool80.not to i32
  br label %end

end:                                              ; preds = %if.end69, %if.then66, %if.then63, %if.then30, %if.then28, %if.then36, %if.end77, %if.end38
  %testresult.6 = phi i32 [ 0, %if.end38 ], [ %spec.select, %if.end77 ], [ 1, %if.then28 ], [ 0, %if.then30 ], [ 0, %if.then36 ], [ 1, %if.then63 ], [ 0, %if.then66 ], [ 0, %if.end69 ]
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  br label %cleanup83

cleanup83:                                        ; preds = %if.end, %entry, %end
  %retval.0 = phi i32 [ %testresult.6, %end ], [ 0, %entry ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_keylog() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %expected = alloca %struct.sslapitest_log_counts, align 4
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.sslapitest_log_counts* %expected to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %4) #19
  %call = call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i64 noundef 36) #16
  %call1 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  %call2 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  store i64 0, i64* @client_log_buffer_index, align 8, !tbaa !10
  store i64 0, i64* @server_log_buffer_index, align 8, !tbaa !10
  store i1 false, i1* @error_writing_log, align 4
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = call %struct.ssl_method_st* @TLS_server_method() #16
  %call4 = call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call3, %struct.ssl_method_st* noundef %call4, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 378, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call7 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %8, i64 noundef 536870912) #16
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call8 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %9, i64 noundef 536870912) #16
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %10, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i64 0, i64 0)) #16
  %cmp10 = icmp ne i32 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 386, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.254, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call16 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %11) #16
  %cmp17 = icmp eq void (%struct.ssl_st*, i8*)* %call16, null
  %conv18 = zext i1 %cmp17 to i32
  %call21 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 389, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.255, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end15
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call23 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %12) #16
  %cmp24 = icmp eq void (%struct.ssl_st*, i8*)* %call23, null
  %conv25 = zext i1 %cmp24 to i32
  %call28 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 390, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.256, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %if.end31

if.end31:                                         ; preds = %lor.lhs.false
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* noundef %13, void (%struct.ssl_st*, i8*)* noundef nonnull @client_keylog_callback) #16
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call32 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %14) #16
  %cmp33 = icmp eq void (%struct.ssl_st*, i8*)* %call32, @client_keylog_callback
  %conv34 = zext i1 %cmp33 to i32
  %call37 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 394, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.257, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %end, label %if.end40

if.end40:                                         ; preds = %if.end31
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* noundef %15, void (%struct.ssl_st*, i8*)* noundef nonnull @server_keylog_callback) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call41 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %16) #16
  %cmp42 = icmp eq void (%struct.ssl_st*, i8*)* %call41, @server_keylog_callback
  %conv43 = zext i1 %cmp42 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 398, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.258, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %if.end40
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call50 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %17, %struct.ssl_ctx_st* noundef %18, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 403, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %if.end49
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call56 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %19, %struct.ssl_st* noundef %20, i32 noundef 0) #16
  %cmp57 = icmp ne i32 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 405, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %.b = load i1, i1* @error_writing_log, align 4
  %conv63 = zext i1 %.b to i32
  %call64 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 406, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.259, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %lor.lhs.false61
  %21 = load i64, i64* @client_log_buffer_index, align 8, !tbaa !10
  %conv67 = trunc i64 %21 to i32
  %call68 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.260, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv67, i32 noundef 0) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %lor.lhs.false66
  %22 = load i64, i64* @server_log_buffer_index, align 8, !tbaa !10
  %conv71 = trunc i64 %22 to i32
  %call72 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 408, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.261, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv71, i32 noundef 0) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %if.end75

if.end75:                                         ; preds = %lor.lhs.false70
  %rsa_key_exchange_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 0
  store i32 1, i32* %rsa_key_exchange_count, align 4, !tbaa !17
  %master_secret_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 1
  store i32 1, i32* %master_secret_count, align 4, !tbaa !19
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call76 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %23) #16
  %call77 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %23, %struct.ssl_session_st* noundef %call76, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp78 = icmp ne i32 %call77, 0
  %conv79 = zext i1 %cmp78 to i32
  %call80 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 420, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.262, i64 0, i64 0), i32 noundef %conv79) #16
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %end, label %if.end83

if.end83:                                         ; preds = %if.end75
  store i32 0, i32* %rsa_key_exchange_count, align 4, !tbaa !17
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call85 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %24) #16
  %call86 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %24, %struct.ssl_session_st* noundef %call85, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp87 = icmp ne i32 %call86, 0
  %conv88 = zext i1 %cmp87 to i32
  %call89 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 425, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.263, i64 0, i64 0), i32 noundef %conv88) #16
  %tobool90.not = icmp ne i32 %call89, 0
  %spec.select = zext i1 %tobool90.not to i32
  br label %end

end:                                              ; preds = %if.end83, %if.end75, %if.end49, %lor.lhs.false55, %lor.lhs.false61, %lor.lhs.false66, %lor.lhs.false70, %if.end40, %if.end31, %if.end15, %lor.lhs.false, %if.end
  %testresult.0 = phi i32 [ 0, %if.end75 ], [ 0, %lor.lhs.false70 ], [ 0, %lor.lhs.false66 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false55 ], [ 0, %if.end49 ], [ 0, %if.end40 ], [ 0, %if.end31 ], [ 0, %lor.lhs.false ], [ 0, %if.end15 ], [ 0, %if.end ], [ %spec.select, %if.end83 ]
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_keylog_no_master_key() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %expected = alloca %struct.sslapitest_log_counts, align 4
  %buf = alloca [1 x i8], align 1
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.sslapitest_log_counts* %expected to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %4) #19
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %call = call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i64 noundef 36) #16
  %call1 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  %call2 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  store i64 0, i64* @client_log_buffer_index, align 8, !tbaa !10
  store i64 0, i64* @server_log_buffer_index, align 8, !tbaa !10
  store i1 false, i1* @error_writing_log, align 4
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = call %struct.ssl_method_st* @TLS_server_method() #16
  %call4 = call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call3, %struct.ssl_method_st* noundef %call4, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 461, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call7 = call i32 @SSL_CTX_set_max_early_data(%struct.ssl_ctx_st* noundef %11, i32 noundef 16384) #16
  %cmp8 = icmp ne i32 %call7, 0
  %conv9 = zext i1 %cmp8 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 463, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.310, i64 0, i64 0), i32 noundef %conv9) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call12 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %12) #16
  %cmp13 = icmp eq void (%struct.ssl_st*, i8*)* %call12, null
  %conv14 = zext i1 %cmp13 to i32
  %call17 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 466, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.255, i64 0, i64 0), i32 noundef %conv14) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %if.end
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call20 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %13) #16
  %cmp21 = icmp eq void (%struct.ssl_st*, i8*)* %call20, null
  %conv22 = zext i1 %cmp21 to i32
  %call25 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 467, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.256, i64 0, i64 0), i32 noundef %conv22) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %if.end28

if.end28:                                         ; preds = %lor.lhs.false19
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* noundef %14, void (%struct.ssl_st*, i8*)* noundef nonnull @client_keylog_callback) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call29 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %15) #16
  %cmp30 = icmp eq void (%struct.ssl_st*, i8*)* %call29, @client_keylog_callback
  %conv31 = zext i1 %cmp30 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 472, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.257, i64 0, i64 0), i32 noundef %conv31) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %if.end37

if.end37:                                         ; preds = %if.end28
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* noundef %16, void (%struct.ssl_st*, i8*)* noundef nonnull @server_keylog_callback) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call38 = call void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef %17) #16
  %cmp39 = icmp eq void (%struct.ssl_st*, i8*)* %call38, @server_keylog_callback
  %conv40 = zext i1 %cmp39 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 477, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.258, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %if.end37
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call47 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %18, %struct.ssl_ctx_st* noundef %19, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 482, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.end46
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %20, %struct.ssl_st* noundef %21, i32 noundef 0) #16
  %cmp54 = icmp ne i32 %call53, 0
  %conv55 = zext i1 %cmp54 to i32
  %call56 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 484, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %.b = load i1, i1* @error_writing_log, align 4
  %conv60 = zext i1 %.b to i32
  %call61 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 485, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.259, i64 0, i64 0), i32 noundef %conv60) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %end, label %if.end64

if.end64:                                         ; preds = %lor.lhs.false58
  %client_handshake_secret_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 3
  %22 = bitcast i32* %client_handshake_secret_count to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %22, align 4, !tbaa !7
  %exporter_secret_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 8
  store i32 1, i32* %exporter_secret_count, align 4, !tbaa !20
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call65 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %23) #16
  %call66 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %23, %struct.ssl_session_st* noundef %call65, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp67 = icmp ne i32 %call66, 0
  %conv68 = zext i1 %cmp67 to i32
  %call69 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 499, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.262, i64 0, i64 0), i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %if.end64
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call72 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %24) #16
  %call73 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %24, %struct.ssl_session_st* noundef %call72, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 502, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.263, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.end79

if.end79:                                         ; preds = %lor.lhs.false71
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call80 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call81 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call82 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %27) #16
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call83 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  %call84 = call i8* @memset(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), i32 noundef 0, i64 noundef 2049) #16
  store i64 0, i64* @client_log_buffer_index, align 8, !tbaa !10
  store i64 0, i64* @server_log_buffer_index, align 8, !tbaa !10
  %30 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call85 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %30, %struct.ssl_ctx_st* noundef %31, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp86 = icmp ne i32 %call85, 0
  %conv87 = zext i1 %cmp86 to i32
  %call88 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 520, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv87) #16
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %end, label %lor.lhs.false90

lor.lhs.false90:                                  ; preds = %if.end79
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call91 = call i32 @SSL_set_session(%struct.ssl_st* noundef %32, %struct.ssl_session_st* noundef %call80) #16
  %cmp92 = icmp ne i32 %call91, 0
  %conv93 = zext i1 %cmp92 to i32
  %call94 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 521, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv93) #16
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %end, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %lor.lhs.false90
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call97 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %33, i8* noundef null, i64 noundef 0, i64* noundef nonnull %written) #16
  %cmp98 = icmp ne i32 %call97, 0
  %conv99 = zext i1 %cmp98 to i32
  %call100 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 523, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.312, i64 0, i64 0), i32 noundef %conv99) #16
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %end, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %lor.lhs.false96
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call103 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %34, i8* noundef nonnull %5, i64 noundef 1, i64* noundef nonnull %readbytes) #16
  %call104 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 526, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i64 0, i64 0), i32 noundef %call103, i32 noundef 0) #16
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %end, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %lor.lhs.false102
  %35 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call107 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %35) #16
  %call108 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 528, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call107, i32 noundef 2) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false106
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call111 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %36, %struct.ssl_st* noundef %37, i32 noundef 0) #16
  %cmp112 = icmp ne i32 %call111, 0
  %conv113 = zext i1 %cmp112 to i32
  %call114 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 530, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv113) #16
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %end, label %lor.lhs.false116

lor.lhs.false116:                                 ; preds = %lor.lhs.false110
  %38 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call117 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %38) #16
  %cmp118 = icmp ne i32 %call117, 0
  %conv119 = zext i1 %cmp118 to i32
  %call120 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 531, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv119) #16
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %end, label %if.end123

if.end123:                                        ; preds = %lor.lhs.false116
  %client_early_secret_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 2
  store i32 1, i32* %client_early_secret_count, align 4, !tbaa !21
  %early_exporter_secret_count = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 7
  store i32 1, i32* %early_exporter_secret_count, align 4, !tbaa !22
  %39 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call124 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %39) #16
  %call125 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %39, %struct.ssl_session_st* noundef %call124, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp126 = icmp ne i32 %call125, 0
  %conv127 = zext i1 %cmp126 to i32
  %call128 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 538, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.262, i64 0, i64 0), i32 noundef %conv127) #16
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %end, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %if.end123
  %40 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call131 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %40) #16
  %call132 = call fastcc i32 @test_keylog_output(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), %struct.ssl_st* noundef %40, %struct.ssl_session_st* noundef %call131, %struct.sslapitest_log_counts* noundef nonnull %expected) #18
  %cmp133 = icmp ne i32 %call132, 0
  %conv134 = zext i1 %cmp133 to i32
  %call135 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 541, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.263, i64 0, i64 0), i32 noundef %conv134) #16
  %tobool136.not = icmp ne i32 %call135, 0
  %spec.select = zext i1 %tobool136.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false130, %if.end123, %if.end79, %lor.lhs.false90, %lor.lhs.false96, %lor.lhs.false102, %lor.lhs.false106, %lor.lhs.false110, %lor.lhs.false116, %if.end64, %lor.lhs.false71, %if.end46, %lor.lhs.false52, %lor.lhs.false58, %if.end37, %if.end28, %if.end, %lor.lhs.false19
  %sess.0 = phi %struct.ssl_session_st* [ %call80, %if.end123 ], [ %call80, %lor.lhs.false116 ], [ %call80, %lor.lhs.false110 ], [ %call80, %lor.lhs.false106 ], [ %call80, %lor.lhs.false102 ], [ %call80, %lor.lhs.false96 ], [ %call80, %lor.lhs.false90 ], [ %call80, %if.end79 ], [ null, %lor.lhs.false71 ], [ null, %if.end64 ], [ null, %lor.lhs.false58 ], [ null, %lor.lhs.false52 ], [ null, %if.end46 ], [ null, %if.end37 ], [ null, %if.end28 ], [ null, %lor.lhs.false19 ], [ null, %if.end ], [ %call80, %lor.lhs.false130 ]
  %testresult.0 = phi i32 [ 0, %if.end123 ], [ 0, %lor.lhs.false116 ], [ 0, %lor.lhs.false110 ], [ 0, %lor.lhs.false106 ], [ 0, %lor.lhs.false102 ], [ 0, %lor.lhs.false96 ], [ 0, %lor.lhs.false90 ], [ 0, %if.end79 ], [ 0, %lor.lhs.false71 ], [ 0, %if.end64 ], [ 0, %lor.lhs.false58 ], [ 0, %lor.lhs.false52 ], [ 0, %if.end46 ], [ 0, %if.end37 ], [ 0, %if.end28 ], [ 0, %lor.lhs.false19 ], [ 0, %if.end ], [ %spec.select, %lor.lhs.false130 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess.0) #16
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %41) #16
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %42) #16
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %43) #16
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %44) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_client_cert_verify_cb() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call = tail call i8* @test_mk_file_path(i8* noundef %0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i64 0, i64 0)) #16
  %1 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call1 = tail call i8* @test_mk_file_path(i8* noundef %1, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.318, i64 0, i64 0)) #16
  %2 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call2 = tail call i8* @test_mk_file_path(i8* noundef %2, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.319, i64 0, i64 0)) #16
  %3 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call3 = tail call i8* @test_mk_file_path(i8* noundef %3, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.320, i64 0, i64 0)) #16
  %4 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call4 = tail call i8* @test_mk_file_path(i8* noundef %4, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.321, i64 0, i64 0)) #16
  %5 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %6 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %7 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %8 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %9 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call5 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call6 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call7 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %9, %struct.ssl_method_st* noundef %call5, %struct.ssl_method_st* noundef %call6, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef null, i8* noundef null) #16
  %cmp = icmp ne i32 %call7, 0
  %conv = zext i1 %cmp to i32
  %call8 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 583, i8* noundef getelementptr inbounds ([113 x i8], [113 x i8]* @.str.201, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call8, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call9 = call i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st* noundef %10, i8* noundef %call1) #16
  %call10 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 585, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.322, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call9, i32 noundef 1) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call12 = call i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st* noundef %11, i8* noundef %call, i32 noundef 1) #16
  %call13 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 587, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.323, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call12, i32 noundef 1) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call16 = call i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* noundef %12) #16
  %call17 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 588, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.324, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call16, i32 noundef 1) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %if.end20

if.end20:                                         ; preds = %lor.lhs.false15
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call21 = call i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st* noundef %13, i8* noundef %call4, i8* noundef null) #16
  %cmp22 = icmp ne i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 590, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.325, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %if.end20
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* noundef %14, i32 noundef 1, i32 (i32, %struct.x509_store_ctx_st*)* noundef null) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_cert_verify_callback(%struct.ssl_ctx_st* noundef %15, i32 (%struct.x509_store_ctx_st*, i8*)* noundef nonnull @verify_retry_cb, i8* noundef null) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call28 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 595, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %if.end27
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call35 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 12) #16
  %cmp36 = icmp ne i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  %call38 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 600, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.326, i64 0, i64 0), i32 noundef %conv37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %if.end41

if.end41:                                         ; preds = %if.end34
  %20 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call42 = call %struct.x509_st* @load_cert_pem(i8* noundef %call3, %struct.ossl_lib_ctx_st* noundef %20) #16
  %21 = bitcast %struct.x509_st* %call42 to i8*
  %call43 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 604, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.327, i64 0, i64 0), i8* noundef %21) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.end41
  %22 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call46 = call %struct.x509_st* @load_cert_pem(i8* noundef %call2, %struct.ossl_lib_ctx_st* noundef %22) #16
  %23 = bitcast %struct.x509_st* %call46 to i8*
  %call47 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 605, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.328, i64 0, i64 0), i8* noundef %23) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call50 = call %struct.stack_st_X509* @SSL_get_peer_cert_chain(%struct.ssl_st* noundef %24) #16
  %25 = bitcast %struct.stack_st_X509* %call50 to i8*
  %call51 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 606, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.329, i64 0, i64 0), i8* noundef %25) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %if.end54

if.end54:                                         ; preds = %lor.lhs.false49
  %call55 = call fastcc %struct.stack_st* @ossl_check_X509_sk_type(%struct.stack_st_X509* noundef %call50) #18
  %call57 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call55, i8* noundef %21) #16
  %cmp58 = icmp ne i32 %call57, 0
  %conv59 = zext i1 %cmp58 to i32
  %call60 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 609, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.330, i64 0, i64 0), i32 noundef %conv59) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %if.end63

if.end63:                                         ; preds = %if.end54
  %call66 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call55, i8* noundef %23) #16
  %cmp67 = icmp ne i32 %call66, 0
  %conv68 = zext i1 %cmp67 to i32
  %call69 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 612, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.331, i64 0, i64 0), i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %if.end72

if.end72:                                         ; preds = %if.end63
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call73 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %26, %struct.ssl_st* noundef %27, i32 noundef 0) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 618, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp ne i32 %call76, 0
  %spec.select = zext i1 %tobool77.not to i32
  br label %end

end:                                              ; preds = %if.end72, %if.end63, %if.end54, %if.end41, %lor.lhs.false45, %lor.lhs.false49, %if.end34, %if.end27, %if.end20, %if.end, %lor.lhs.false, %lor.lhs.false15, %entry
  %crt2.0 = phi %struct.x509_st* [ %call46, %if.end63 ], [ %call46, %if.end54 ], [ %call46, %lor.lhs.false49 ], [ %call46, %lor.lhs.false45 ], [ null, %if.end41 ], [ null, %if.end34 ], [ null, %if.end27 ], [ null, %if.end20 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %entry ], [ null, %if.end72 ]
  %crt1.0 = phi %struct.x509_st* [ null, %if.end63 ], [ %call42, %if.end54 ], [ %call42, %lor.lhs.false49 ], [ %call42, %lor.lhs.false45 ], [ %call42, %if.end41 ], [ null, %if.end34 ], [ null, %if.end27 ], [ null, %if.end20 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %entry ], [ null, %if.end72 ]
  %testresult.0 = phi i32 [ 0, %if.end63 ], [ 0, %if.end54 ], [ 0, %lor.lhs.false49 ], [ 0, %lor.lhs.false45 ], [ 0, %if.end41 ], [ 0, %if.end34 ], [ 0, %if.end27 ], [ 0, %if.end20 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end72 ]
  call void @X509_free(%struct.x509_st* noundef %crt1.0) #16
  call void @X509_free(%struct.x509_st* noundef %crt2.0) #16
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %cmp80.not = icmp eq %struct.ssl_st* %28, null
  br i1 %cmp80.not, label %if.end84, label %if.then82

if.then82:                                        ; preds = %end
  %call83 = call i32 @SSL_shutdown(%struct.ssl_st* noundef nonnull %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %end
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %cmp85.not = icmp eq %struct.ssl_st* %30, null
  br i1 %cmp85.not, label %if.end89, label %if.then87

if.then87:                                        ; preds = %if.end84
  %call88 = call i32 @SSL_shutdown(%struct.ssl_st* noundef nonnull %30) #16
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %31) #16
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %if.end84
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %32) #16
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %33) #16
  call void @CRYPTO_free(i8* noundef %call, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 637) #16
  call void @CRYPTO_free(i8* noundef %call1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 638) #16
  call void @CRYPTO_free(i8* noundef %call2, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 639) #16
  call void @CRYPTO_free(i8* noundef %call3, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 640) #16
  call void @CRYPTO_free(i8* noundef %call4, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 641) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_build_cert_chain() #1 {
entry:
  %0 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call = tail call i8* @test_mk_file_path(i8* noundef %0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i64 0, i64 0)) #16
  %1 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call1 = tail call i8* @test_mk_file_path(i8* noundef %1, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.332, i64 0, i64 0)) #16
  %2 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call2 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call3 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %2, i8* noundef null, %struct.ssl_method_st* noundef %call2) #16
  %3 = bitcast %struct.ssl_ctx_st* %call3 to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 654, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.333, i64 0, i64 0), i8* noundef %3) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %call5 = tail call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %call3) #16
  %4 = bitcast %struct.ssl_st* %call5 to i8*
  %call6 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 656, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.334, i64 0, i64 0), i8* noundef %4) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.end
  %call10 = tail call i32 @SSL_use_certificate_chain_file(%struct.ssl_st* noundef %call5, i8* noundef %call1) #16
  %call11 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 659, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.335, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call10, i32 noundef 1) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %call13 = tail call i32 @SSL_use_PrivateKey_file(%struct.ssl_st* noundef %call5, i8* noundef %call, i32 noundef 1) #16
  %call14 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 660, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.336, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call13, i32 noundef 1) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %call17 = tail call i32 @SSL_check_private_key(%struct.ssl_st* noundef %call5) #16
  %call18 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 661, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.337, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call17, i32 noundef 1) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end21

if.end21:                                         ; preds = %lor.lhs.false16
  %call22 = tail call i64 @SSL_ctrl(%struct.ssl_st* noundef %call5, i32 noundef 105, i64 noundef 6, i8* noundef null) #16
  %cmp = icmp ne i64 %call22, 0
  %conv = zext i1 %cmp to i32
  %call23 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 664, i8* noundef getelementptr inbounds ([85 x i8], [85 x i8]* @.str.338, i64 0, i64 0), i32 noundef %conv) #16
  %tobool24.not = icmp ne i32 %call23, 0
  %spec.select = zext i1 %tobool24.not to i32
  br label %end

end:                                              ; preds = %if.end21, %if.end9, %lor.lhs.false, %lor.lhs.false16, %if.end, %entry
  %ssl.0 = phi %struct.ssl_st* [ %call5, %lor.lhs.false16 ], [ %call5, %lor.lhs.false ], [ %call5, %if.end9 ], [ %call5, %if.end ], [ null, %entry ], [ %call5, %if.end21 ]
  %ret.0 = phi i32 [ 0, %lor.lhs.false16 ], [ 0, %lor.lhs.false ], [ 0, %if.end9 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end21 ]
  tail call void @SSL_free(%struct.ssl_st* noundef %ssl.0) #16
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call3) #16
  tail call void @CRYPTO_free(i8* noundef %call1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 670) #16
  tail call void @CRYPTO_free(i8* noundef %call, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 671) #16
  ret i32 %ret.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_ctx_build_cert_chain() #1 {
entry:
  %0 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call = tail call i8* @test_mk_file_path(i8* noundef %0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i64 0, i64 0)) #16
  %1 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call1 = tail call i8* @test_mk_file_path(i8* noundef %1, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.332, i64 0, i64 0)) #16
  %2 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call2 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call3 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %2, i8* noundef null, %struct.ssl_method_st* noundef %call2) #16
  %3 = bitcast %struct.ssl_ctx_st* %call3 to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 682, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.339, i64 0, i64 0), i8* noundef %3) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st* noundef %call3, i8* noundef %call1) #16
  %call6 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 685, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.340, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call5, i32 noundef 1) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call8 = tail call i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st* noundef %call3, i8* noundef %call, i32 noundef 1) #16
  %call9 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 687, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.341, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call8, i32 noundef 1) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %call12 = tail call i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* noundef %call3) #16
  %call13 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 688, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.342, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call12, i32 noundef 1) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end16

if.end16:                                         ; preds = %lor.lhs.false11
  %call17 = tail call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %call3, i32 noundef 105, i64 noundef 6, i8* noundef null) #16
  %cmp = icmp ne i64 %call17, 0
  %conv = zext i1 %cmp to i32
  %call18 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 691, i8* noundef getelementptr inbounds ([89 x i8], [89 x i8]* @.str.343, i64 0, i64 0), i32 noundef %conv) #16
  %tobool19.not = icmp ne i32 %call18, 0
  %spec.select = zext i1 %tobool19.not to i32
  br label %end

end:                                              ; preds = %if.end16, %if.end, %lor.lhs.false, %lor.lhs.false11, %entry
  %ret.0 = phi i32 [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end16 ]
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call3) #16
  tail call void @CRYPTO_free(i8* noundef %call1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 696) #16
  tail call void @CRYPTO_free(i8* noundef %call, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 697) #16
  ret i32 %ret.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_client_hello_cb() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %testctr = alloca i32, align 4
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast i32* %testctr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  store i32 0, i32* %testctr, align 4, !tbaa !7
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 751, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_client_hello_cb(%struct.ssl_ctx_st* noundef %8, i32 (%struct.ssl_st*, i32*, i8*)* noundef nonnull @full_client_hello_callback, i8* noundef nonnull %4) #16
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %9, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call5 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %10, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.345, i64 0, i64 0)) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 759, i8* noundef getelementptr inbounds ([81 x i8], [81 x i8]* @.str.344, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %11, %struct.ssl_ctx_st* noundef %12, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 761, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %13, %struct.ssl_st* noundef %14, i32 noundef 11) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 763, i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.346, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call22 = call i32 @SSL_get_error(%struct.ssl_st* noundef %15, i32 noundef -1) #16
  %call23 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 769, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i64 0, i64 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.348, i64 0, i64 0), i32 noundef %call22, i32 noundef 11) #16
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %end, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %lor.lhs.false21
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call26 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %16, %struct.ssl_st* noundef %17, i32 noundef 0) #16
  %cmp27 = icmp ne i32 %call26, 0
  %conv28 = zext i1 %cmp27 to i32
  %call29 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 771, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv28) #16
  %tobool30.not = icmp ne i32 %call29, 0
  %spec.select = zext i1 %tobool30.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false25, %if.end, %lor.lhs.false, %lor.lhs.false15, %lor.lhs.false21, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false25 ]
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %18) #16
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %19) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %20) #16
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %21) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_no_ems() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 771, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end.sink.split, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %7, i64 noundef 1) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %8, %struct.ssl_ctx_st* noundef %9, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end.sink.split, label %if.end9

if.end9:                                          ; preds = %if.end
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11, i32 noundef 0) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end.sink.split, label %if.end14

if.end14:                                         ; preds = %if.end9
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call15 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %12, i32 noundef 122, i64 noundef 0, i8* noundef null) #16
  %tobool16.not = icmp eq i64 %call15, 0
  br i1 %tobool16.not, label %if.end19, label %end.sink.split

if.end19:                                         ; preds = %if.end14
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call20 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %13, i32 noundef 122, i64 noundef 0, i8* noundef null) #16
  %tobool21.not = icmp eq i64 %call20, 0
  br i1 %tobool21.not, label %end, label %end.sink.split

end.sink.split:                                   ; preds = %if.end19, %if.end14, %if.end9, %if.end, %entry
  %.sink = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.354, i64 0, i64 0), %entry ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.355, i64 0, i64 0), %if.end ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.356, i64 0, i64 0), %if.end9 ], [ getelementptr inbounds ([47 x i8], [47 x i8]* @.str.357, i64 0, i64 0), %if.end14 ], [ getelementptr inbounds ([47 x i8], [47 x i8]* @.str.358, i64 0, i64 0), %if.end19 ]
  %call23 = call i32 (i8*, ...) @printf(i8* noundef %.sink) #16
  br label %end

end:                                              ; preds = %end.sink.split, %if.end19
  %testresult.0 = phi i32 [ 1, %if.end19 ], [ 0, %end.sink.split ]
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %14) #16
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %15) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %16) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ccs_change_cipher() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca i8, align 1
  %readbytes = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %buf) #19
  %4 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 771, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 853, i8* noundef getelementptr inbounds ([129 x i8], [129 x i8]* @.str.359, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %8, i64 noundef 16384) #16
  %cmp5 = icmp ne i64 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 854, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.360, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 856, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false9
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %11, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.362, i64 0, i64 0)) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 857, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.361, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call22 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %12, %struct.ssl_st* noundef %13, i32 noundef 0) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 859, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false21
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call28 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %14) #16
  %15 = bitcast %struct.ssl_session_st* %call28 to i8*
  %call29 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 860, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.363, i64 0, i64 0), i8* noundef %15) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call32 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %16) #16
  %17 = bitcast %struct.ssl_session_st* %call32 to i8*
  %call33 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 861, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.364, i64 0, i64 0), i8* noundef %17) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false31
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call35 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %20, %struct.ssl_ctx_st* noundef %21, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp36 = icmp ne i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  %call38 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 870, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %if.end
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call41 = call i32 @SSL_set_session(%struct.ssl_st* noundef %22, %struct.ssl_session_st* noundef %call32) #16
  %cmp42 = icmp ne i32 %call41, 0
  %conv43 = zext i1 %cmp42 to i32
  %call44 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 871, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %end, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %lor.lhs.false40
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call47 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %23, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.366, i64 0, i64 0)) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 872, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.365, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %24, %struct.ssl_st* noundef %25, i32 noundef 0) #16
  %cmp54 = icmp ne i32 %call53, 0
  %conv55 = zext i1 %cmp54 to i32
  %call56 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 874, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call59 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %26) #16
  %cmp60 = icmp ne i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  %call62 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 875, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv61) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call65 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %27) #16
  %cmp66 = icmp ne i32 %call65, 0
  %conv67 = zext i1 %cmp66 to i32
  %call68 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 876, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv67) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %lor.lhs.false64
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call71 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %28) #16
  %29 = bitcast %struct.ssl_session_st* %call71 to i8*
  %call72 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 877, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.368, i64 0, i64 0), i8* noundef %29) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %call75 = call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 878, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.369, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.370, i64 0, i64 0), i8* noundef %15, i8* noundef %29) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %lor.lhs.false74
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call78 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* noundef %30) #16
  %call79 = call i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* noundef %call78) #16
  %call80 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 880, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.371, i64 0, i64 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.372, i64 0, i64 0), i32 noundef 50331804, i32 noundef %call79) #16
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %end, label %if.end83

if.end83:                                         ; preds = %lor.lhs.false77
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %31, %struct.ssl_st* noundef %32) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call84 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %33, %struct.ssl_ctx_st* noundef %34, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp85 = icmp ne i32 %call84, 0
  %conv86 = zext i1 %cmp85 to i32
  %call87 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 890, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv86) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %end, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end83
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call90 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %35, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.362, i64 0, i64 0)) #16
  %cmp91 = icmp ne i32 %call90, 0
  %conv92 = zext i1 %cmp91 to i32
  %call93 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 891, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.361, i64 0, i64 0), i32 noundef %conv92) #16
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %end, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %lor.lhs.false89
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call96 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %36, %struct.ssl_st* noundef %37, i32 noundef 0) #16
  %cmp97 = icmp ne i32 %call96, 0
  %conv98 = zext i1 %cmp97 to i32
  %call99 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 893, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv98) #16
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %end, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %lor.lhs.false95
  %38 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call102 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %38) #16
  %39 = bitcast %struct.ssl_session_st* %call102 to i8*
  %call103 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 894, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.363, i64 0, i64 0), i8* noundef %39) #16
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %end, label %lor.lhs.false105

lor.lhs.false105:                                 ; preds = %lor.lhs.false101
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call106 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %40, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.374, i64 0, i64 0)) #16
  %cmp107 = icmp ne i32 %call106, 0
  %conv108 = zext i1 %cmp107 to i32
  %call109 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 895, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.373, i64 0, i64 0), i32 noundef %conv108) #16
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %end, label %lor.lhs.false111

lor.lhs.false111:                                 ; preds = %lor.lhs.false105
  %41 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call112 = call i32 @SSL_renegotiate(%struct.ssl_st* noundef %41) #16
  %cmp113 = icmp ne i32 %call112, 0
  %conv114 = zext i1 %cmp113 to i32
  %call115 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 896, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.375, i64 0, i64 0), i32 noundef %conv114) #16
  %tobool116.not = icmp eq i32 %call115, 0
  br i1 %tobool116.not, label %end, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %lor.lhs.false111
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call118 = call i32 @SSL_renegotiate_pending(%struct.ssl_st* noundef %42) #16
  %cmp119 = icmp ne i32 %call118, 0
  %conv120 = zext i1 %cmp119 to i32
  %call121 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 897, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.376, i64 0, i64 0), i32 noundef %conv120) #16
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %end, label %for.body

for.body:                                         ; preds = %lor.lhs.false117, %for.inc
  %i.0196 = phi i32 [ %inc, %for.inc ], [ 0, %lor.lhs.false117 ]
  %43 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call127 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %43, i8* noundef nonnull %buf, i64 noundef 1, i64* noundef nonnull %readbytes) #16
  %cmp128 = icmp sgt i32 %call127, 0
  br i1 %cmp128, label %if.then130, label %if.else

if.then130:                                       ; preds = %for.body
  %44 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call131 = call i32 @test_ulong_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 902, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %44, i64 noundef 0) #16
  %tobool132.not = icmp eq i32 %call131, 0
  br i1 %tobool132.not, label %end, label %if.end140

if.else:                                          ; preds = %for.body
  %45 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call135 = call i32 @SSL_get_error(%struct.ssl_st* noundef %45, i32 noundef 0) #16
  %call136 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 905, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.378, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0), i32 noundef %call135, i32 noundef 2) #16
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %end, label %if.end140

if.end140:                                        ; preds = %if.else, %if.then130
  %46 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call141 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %46, i8* noundef nonnull %buf, i64 noundef 1, i64* noundef nonnull %readbytes) #16
  %cmp142 = icmp sgt i32 %call141, 0
  br i1 %cmp142, label %if.then144, label %if.else149

if.then144:                                       ; preds = %if.end140
  %47 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call145 = call i32 @test_ulong_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 909, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %47, i64 noundef 0) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %end, label %for.inc

if.else149:                                       ; preds = %if.end140
  %48 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call150 = call i32 @SSL_get_error(%struct.ssl_st* noundef %48, i32 noundef 0) #16
  %call151 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 912, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0), i32 noundef %call150, i32 noundef 2) #16
  %tobool152.not = icmp eq i32 %call151, 0
  br i1 %tobool152.not, label %end, label %for.inc

for.inc:                                          ; preds = %if.then144, %if.else149
  %inc = add nuw nsw i32 %i.0196, 1
  %exitcond.not = icmp eq i32 %inc, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !23

for.end:                                          ; preds = %for.inc
  %49 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call156 = call i32 @SSL_renegotiate_pending(%struct.ssl_st* noundef %49) #16
  %cmp157 = icmp ne i32 %call156, 0
  %conv158 = zext i1 %cmp157 to i32
  %call159 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 917, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.376, i64 0, i64 0), i32 noundef %conv158) #16
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %end, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %for.end
  %50 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call162 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %50) #16
  %cmp163 = icmp ne i32 %call162, 0
  %conv164 = zext i1 %cmp163 to i32
  %call165 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 918, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv164) #16
  %tobool166.not = icmp eq i32 %call165, 0
  br i1 %tobool166.not, label %end, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %lor.lhs.false161
  %51 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call168 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %51) #16
  %cmp169 = icmp ne i32 %call168, 0
  %conv170 = zext i1 %cmp169 to i32
  %call171 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 919, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv170) #16
  %tobool172.not = icmp eq i32 %call171, 0
  br i1 %tobool172.not, label %end, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false167
  %52 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call174 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %52) #16
  %53 = bitcast %struct.ssl_session_st* %call174 to i8*
  %call175 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 920, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.368, i64 0, i64 0), i8* noundef %53) #16
  %tobool176.not = icmp eq i32 %call175, 0
  br i1 %tobool176.not, label %end, label %lor.lhs.false177

lor.lhs.false177:                                 ; preds = %lor.lhs.false173
  %call178 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 921, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.369, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.370, i64 0, i64 0), i8* noundef %39, i8* noundef %53) #16
  %tobool179.not = icmp eq i32 %call178, 0
  br i1 %tobool179.not, label %end, label %lor.lhs.false180

lor.lhs.false180:                                 ; preds = %lor.lhs.false177
  %54 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call181 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* noundef %54) #16
  %call182 = call i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* noundef %call181) #16
  %call183 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 923, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.380, i64 0, i64 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.372, i64 0, i64 0), i32 noundef 50331805, i32 noundef %call182) #16
  %tobool184.not = icmp eq i32 %call183, 0
  br i1 %tobool184.not, label %end, label %if.end186

if.end186:                                        ; preds = %lor.lhs.false180
  %55 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %56 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %55, %struct.ssl_st* noundef %56) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  br label %end

end:                                              ; preds = %if.else149, %if.then144, %if.else, %if.then130, %for.end, %lor.lhs.false161, %lor.lhs.false167, %lor.lhs.false173, %lor.lhs.false177, %lor.lhs.false180, %if.end83, %lor.lhs.false89, %lor.lhs.false95, %lor.lhs.false101, %lor.lhs.false105, %lor.lhs.false111, %lor.lhs.false117, %if.end, %lor.lhs.false40, %lor.lhs.false46, %lor.lhs.false52, %lor.lhs.false58, %lor.lhs.false64, %lor.lhs.false70, %lor.lhs.false74, %lor.lhs.false77, %entry, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false15, %lor.lhs.false21, %lor.lhs.false27, %lor.lhs.false31, %if.end186
  %sess.0 = phi %struct.ssl_session_st* [ %call32, %if.end186 ], [ %call32, %lor.lhs.false180 ], [ %call32, %lor.lhs.false177 ], [ %call32, %lor.lhs.false173 ], [ %call32, %lor.lhs.false167 ], [ %call32, %lor.lhs.false161 ], [ %call32, %for.end ], [ %call32, %lor.lhs.false117 ], [ %call32, %lor.lhs.false111 ], [ %call32, %lor.lhs.false105 ], [ %call32, %lor.lhs.false101 ], [ %call32, %lor.lhs.false95 ], [ %call32, %lor.lhs.false89 ], [ %call32, %if.end83 ], [ %call32, %lor.lhs.false77 ], [ %call32, %lor.lhs.false74 ], [ %call32, %lor.lhs.false70 ], [ %call32, %lor.lhs.false64 ], [ %call32, %lor.lhs.false58 ], [ %call32, %lor.lhs.false52 ], [ %call32, %lor.lhs.false46 ], [ %call32, %lor.lhs.false40 ], [ %call32, %if.end ], [ %call32, %lor.lhs.false31 ], [ null, %lor.lhs.false27 ], [ null, %lor.lhs.false21 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call32, %if.then130 ], [ %call32, %if.else ], [ %call32, %if.then144 ], [ %call32, %if.else149 ]
  %testresult.0 = phi i32 [ 1, %if.end186 ], [ 0, %lor.lhs.false180 ], [ 0, %lor.lhs.false177 ], [ 0, %lor.lhs.false173 ], [ 0, %lor.lhs.false167 ], [ 0, %lor.lhs.false161 ], [ 0, %for.end ], [ 0, %lor.lhs.false117 ], [ 0, %lor.lhs.false111 ], [ 0, %lor.lhs.false105 ], [ 0, %lor.lhs.false101 ], [ 0, %lor.lhs.false95 ], [ 0, %lor.lhs.false89 ], [ 0, %if.end83 ], [ 0, %lor.lhs.false77 ], [ 0, %lor.lhs.false74 ], [ 0, %lor.lhs.false70 ], [ 0, %lor.lhs.false64 ], [ 0, %lor.lhs.false58 ], [ 0, %lor.lhs.false52 ], [ 0, %lor.lhs.false46 ], [ 0, %lor.lhs.false40 ], [ 0, %if.end ], [ 0, %lor.lhs.false31 ], [ 0, %lor.lhs.false27 ], [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false9 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.then130 ], [ 0, %if.else ], [ 0, %if.then144 ], [ 0, %if.else149 ]
  %57 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %57) #16
  %58 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %58) #16
  %59 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %59) #16
  %60 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %60) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess.0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %buf) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_read_write(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %buf = alloca [20 x i8], align 16
  %data = alloca [1024 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %rawread = alloca i64, align 8
  %rawwritten = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #19
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #19
  %7 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %9 = bitcast i64* %rawread to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = bitcast i64* %rawwritten to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3267, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call2 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call3 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %11, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call2, i64* noundef nonnull %written) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3272, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv5) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i64, i64* %written, align 8, !tbaa !10
  %call8 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call9 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3273, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %12, i64 noundef %call8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call12 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %13, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call13 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3276, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call12, i32 noundef 1) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %14 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call17 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call18 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3277, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %14, i8* noundef nonnull %5, i64 noundef %call17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false15
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call21 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %15) #16
  %call22 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3279, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call21, i32 noundef 2) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %if.end25

if.end25:                                         ; preds = %lor.lhs.false20
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call26 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call27 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %16, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call26, i64* noundef nonnull %written) #16
  %cmp28 = icmp ne i32 %call27, 0
  %conv29 = zext i1 %cmp28 to i32
  %call30 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3287, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.389, i64 0, i64 0), i32 noundef %conv29) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %end, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.end25
  %17 = load i64, i64* %written, align 8, !tbaa !10
  %call33 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call34 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3288, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %17, i64 noundef %call33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call38 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %18, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3289, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %lor.lhs.false36
  %19 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call45 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call46 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3290, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %19, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call45) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %lor.lhs.false43
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call50 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0)) #17
  %call51 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %20, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0), i64 noundef %call50, i64* noundef nonnull %written) #16
  %cmp52 = icmp ne i32 %call51, 0
  %conv53 = zext i1 %cmp52 to i32
  %call54 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3295, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.394, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %if.end49
  %21 = load i64, i64* %written, align 8, !tbaa !10
  %call57 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0)) #17
  %call58 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3296, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.396, i64 0, i64 0), i64 noundef %21, i64 noundef %call57) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %if.end61

if.end61:                                         ; preds = %lor.lhs.false56
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call63 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %22, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call64 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3302, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call63, i32 noundef 1) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.end61
  %23 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call68 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0)) #17
  %call69 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3303, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.397, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %23, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0), i64 noundef %call68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %if.end72

if.end72:                                         ; preds = %lor.lhs.false66
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call73 = call i64 @strlen(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.399, i64 0, i64 0)) #17
  %call74 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %24, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.399, i64 0, i64 0), i64 noundef %call73, i64* noundef nonnull %written) #16
  %cmp75 = icmp ne i32 %call74, 0
  %conv76 = zext i1 %cmp75 to i32
  %call77 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3308, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.398, i64 0, i64 0), i32 noundef %conv76) #16
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %end, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %if.end72
  %25 = load i64, i64* %written, align 8, !tbaa !10
  %call80 = call i64 @strlen(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.399, i64 0, i64 0)) #17
  %call81 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3309, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.400, i64 0, i64 0), i64 noundef %25, i64 noundef %call80) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %end, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %lor.lhs.false79
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call85 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %26, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp86 = icmp ne i32 %call85, 0
  %conv87 = zext i1 %cmp86 to i32
  %call88 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3310, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv87) #16
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %end, label %lor.lhs.false90

lor.lhs.false90:                                  ; preds = %lor.lhs.false83
  %27 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call92 = call i64 @strlen(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.399, i64 0, i64 0)) #17
  %call93 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3311, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.401, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %27, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.399, i64 0, i64 0), i64 noundef %call92) #16
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %end, label %if.end96

if.end96:                                         ; preds = %lor.lhs.false90
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call97 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call98 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %28, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0), i64 noundef %call97, i64* noundef nonnull %written) #16
  %cmp99 = icmp ne i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  %call101 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3318, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.402, i64 0, i64 0), i32 noundef %conv100) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %if.end96
  %29 = load i64, i64* %written, align 8, !tbaa !10
  %call104 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call105 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3319, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.404, i64 0, i64 0), i64 noundef %29, i64 noundef %call104) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %lor.lhs.false103
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call108 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %30) #16
  %call109 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3321, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call108, i32 noundef 2) #16
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %end, label %if.end112

if.end112:                                        ; preds = %lor.lhs.false107
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call113 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* noundef %31) #16
  %call115 = call i32 @BIO_read_ex(%struct.bio_st* noundef %call113, i8* noundef nonnull %6, i64 noundef 1024, i64* noundef nonnull %rawread) #16
  %cmp116 = icmp ne i32 %call115, 0
  %conv117 = zext i1 %cmp116 to i32
  %call118 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3331, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.406, i64 0, i64 0), i32 noundef %conv117) #16
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %end, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %if.end112
  %32 = load i64, i64* %rawread, align 8, !tbaa !10
  %call121 = call i32 @test_size_t_lt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3332, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.407, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.408, i64 0, i64 0), i64 noundef %32, i64 noundef 1024) #16
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %end, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %lor.lhs.false120
  %33 = load i64, i64* %rawread, align 8, !tbaa !10
  %call124 = call i32 @test_size_t_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3333, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.407, i64 0, i64 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.409, i64 0, i64 0), i64 noundef %33, i64 noundef 5) #16
  %tobool125.not = icmp eq i32 %call124, 0
  br i1 %tobool125.not, label %end, label %if.end127

if.end127:                                        ; preds = %lor.lhs.false123
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 3
  %34 = load i8, i8* %arrayidx, align 1, !tbaa !9
  %conv128 = zext i8 %34 to i64
  %shl = shl nuw nsw i64 %conv128, 8
  %arrayidx129 = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 4
  %35 = load i8, i8* %arrayidx129, align 4, !tbaa !9
  %conv130 = zext i8 %35 to i64
  %or = or i64 %shl, %conv130
  %add = add nuw nsw i64 %or, 5
  %call133 = call i32 @BIO_write_ex(%struct.bio_st* noundef %call113, i8* noundef nonnull %6, i64 noundef %add, i64* noundef nonnull %rawwritten) #16
  %cmp134 = icmp ne i32 %call133, 0
  %conv135 = zext i1 %cmp134 to i32
  %call136 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3338, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.410, i64 0, i64 0), i32 noundef %conv135) #16
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %end, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %if.end127
  %36 = load i64, i64* %rawwritten, align 8, !tbaa !10
  %call139 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3339, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.412, i64 0, i64 0), i64 noundef %36, i64 noundef %add) #16
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %end, label %if.end142

if.end142:                                        ; preds = %lor.lhs.false138
  %37 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call144 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %37, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call145 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3345, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call144, i32 noundef 2) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %end, label %lor.lhs.false147

lor.lhs.false147:                                 ; preds = %if.end142
  %38 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call148 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3346, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %38, i64 noundef 0) #16
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %end, label %if.end151

if.end151:                                        ; preds = %lor.lhs.false147
  %39 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call152 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #17
  %call153 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %39, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 noundef %call152, i64* noundef nonnull %written) #16
  %cmp154 = icmp ne i32 %call153, 0
  %conv155 = zext i1 %cmp154 to i32
  %call156 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3354, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.414, i64 0, i64 0), i32 noundef %conv155) #16
  %tobool157.not = icmp eq i32 %call156, 0
  br i1 %tobool157.not, label %end, label %lor.lhs.false158

lor.lhs.false158:                                 ; preds = %if.end151
  %40 = load i64, i64* %written, align 8, !tbaa !10
  %call159 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #17
  %call160 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3355, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.415, i64 0, i64 0), i64 noundef %40, i64 noundef %call159) #16
  %tobool161.not = icmp eq i32 %call160, 0
  br i1 %tobool161.not, label %end, label %if.end163

if.end163:                                        ; preds = %lor.lhs.false158
  %add.ptr = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 %add
  %41 = load i64, i64* %rawread, align 8, !tbaa !10
  %sub = sub i64 %41, %add
  %call165 = call i32 @BIO_write_ex(%struct.bio_st* noundef %call113, i8* noundef nonnull %add.ptr, i64 noundef %sub, i64* noundef nonnull %rawwritten) #16
  %cmp166 = icmp ne i32 %call165, 0
  %conv167 = zext i1 %cmp166 to i32
  %call168 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3360, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.416, i64 0, i64 0), i32 noundef %conv167) #16
  %tobool169.not = icmp eq i32 %call168, 0
  br i1 %tobool169.not, label %end, label %lor.lhs.false170

lor.lhs.false170:                                 ; preds = %if.end163
  %42 = load i64, i64* %rawwritten, align 8, !tbaa !10
  %43 = load i64, i64* %rawread, align 8, !tbaa !10
  %sub171 = sub i64 %43, %add
  %call172 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3361, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.417, i64 0, i64 0), i64 noundef %42, i64 noundef %sub171) #16
  %tobool173.not = icmp eq i32 %call172, 0
  br i1 %tobool173.not, label %end, label %if.end175

if.end175:                                        ; preds = %lor.lhs.false170
  %44 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call177 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %44, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp178 = icmp ne i32 %call177, 0
  %conv179 = zext i1 %cmp178 to i32
  %call180 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3365, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv179) #16
  %tobool181.not = icmp eq i32 %call180, 0
  br i1 %tobool181.not, label %end, label %lor.lhs.false182

lor.lhs.false182:                                 ; preds = %if.end175
  %45 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call183 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call184 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3366, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.404, i64 0, i64 0), i64 noundef %45, i64 noundef %call183) #16
  %tobool185.not = icmp eq i32 %call184, 0
  br i1 %tobool185.not, label %end, label %if.end187

if.end187:                                        ; preds = %lor.lhs.false182
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call188 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #17
  %call189 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %46, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 noundef %call188, i64* noundef nonnull %written) #16
  %cmp190 = icmp ne i32 %call189, 0
  %conv191 = zext i1 %cmp190 to i32
  %call192 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3371, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.419, i64 0, i64 0), i32 noundef %conv191) #16
  %tobool193.not = icmp eq i32 %call192, 0
  br i1 %tobool193.not, label %end, label %if.end195

if.end195:                                        ; preds = %if.end187
  call void @ERR_clear_error() #16
  %47 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call197 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %47, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call198 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3376, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i64 0, i64 0), i32 noundef %call197, i32 noundef 0) #16
  %tobool199.not = icmp eq i32 %call198, 0
  br i1 %tobool199.not, label %end, label %if.end201

if.end201:                                        ; preds = %if.end195
  call void @ERR_clear_error() #16
  %48 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call203 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %48, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp204 = icmp ne i32 %call203, 0
  %conv205 = zext i1 %cmp204 to i32
  %call206 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3381, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv205) #16
  %tobool207.not = icmp eq i32 %call206, 0
  br i1 %tobool207.not, label %end, label %lor.lhs.false208

lor.lhs.false208:                                 ; preds = %if.end201
  %49 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call210 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #17
  %call211 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3382, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.420, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %49, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 noundef %call210) #16
  %tobool212.not = icmp eq i32 %call211, 0
  br i1 %tobool212.not, label %end, label %if.end214

if.end214:                                        ; preds = %lor.lhs.false208
  %50 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call216 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %50, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp217 = icmp ne i32 %call216, 0
  %conv218 = zext i1 %cmp217 to i32
  %call219 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3390, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv218) #16
  %tobool220.not = icmp eq i32 %call219, 0
  br i1 %tobool220.not, label %end, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %if.end214
  %51 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call223 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %51, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp224 = icmp ne i32 %call223, 0
  %conv225 = zext i1 %cmp224 to i32
  %call226 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3392, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv225) #16
  %tobool227.not = icmp eq i32 %call226, 0
  br i1 %tobool227.not, label %end, label %if.end229

if.end229:                                        ; preds = %lor.lhs.false221
  %52 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call230 = call i64 @strlen(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0)) #17
  %call231 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %52, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i64 noundef %call230, i64* noundef nonnull %written) #16
  %cmp232 = icmp ne i32 %call231, 0
  %conv233 = zext i1 %cmp232 to i32
  %call234 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3396, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.421, i64 0, i64 0), i32 noundef %conv233) #16
  %tobool235.not = icmp eq i32 %call234, 0
  br i1 %tobool235.not, label %end, label %lor.lhs.false236

lor.lhs.false236:                                 ; preds = %if.end229
  %53 = load i64, i64* %written, align 8, !tbaa !10
  %call237 = call i64 @strlen(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0)) #17
  %call238 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3397, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.423, i64 0, i64 0), i64 noundef %53, i64 noundef %call237) #16
  %tobool239.not = icmp eq i32 %call238, 0
  br i1 %tobool239.not, label %end, label %lor.lhs.false240

lor.lhs.false240:                                 ; preds = %lor.lhs.false236
  %54 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call242 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %54, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp243 = icmp ne i32 %call242, 0
  %conv244 = zext i1 %cmp243 to i32
  %call245 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3398, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv244) #16
  %tobool246.not = icmp eq i32 %call245, 0
  br i1 %tobool246.not, label %end, label %lor.lhs.false247

lor.lhs.false247:                                 ; preds = %lor.lhs.false240
  %55 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call249 = call i64 @strlen(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0)) #17
  %call250 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3399, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.424, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %55, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i64 noundef %call249) #16
  %tobool251.not = icmp eq i32 %call250, 0
  br i1 %tobool251.not, label %end, label %if.end253

if.end253:                                        ; preds = %lor.lhs.false247
  %56 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %56) #16
  %57 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call254 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %57) #16
  store %struct.ssl_session_st* %call254, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %58 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call255 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %58) #16
  %59 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call256 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %59) #16
  %60 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %60) #16
  %61 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %61) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %62 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %63 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call257 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %62, %struct.ssl_ctx_st* noundef %63, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp258 = icmp ne i32 %call257, 0
  %conv259 = zext i1 %cmp258 to i32
  %call260 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3413, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv259) #16
  %tobool261.not = icmp eq i32 %call260, 0
  br i1 %tobool261.not, label %end, label %lor.lhs.false262

lor.lhs.false262:                                 ; preds = %if.end253
  %64 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %65 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call263 = call i32 @SSL_set_session(%struct.ssl_st* noundef %64, %struct.ssl_session_st* noundef %65) #16
  %cmp264 = icmp ne i32 %call263, 0
  %conv265 = zext i1 %cmp264 to i32
  %call266 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3414, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv265) #16
  %tobool267.not = icmp eq i32 %call266, 0
  br i1 %tobool267.not, label %end, label %if.end269

if.end269:                                        ; preds = %lor.lhs.false262
  %66 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call270 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call271 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %66, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call270, i64* noundef nonnull %written) #16
  %cmp272 = icmp ne i32 %call271, 0
  %conv273 = zext i1 %cmp272 to i32
  %call274 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3419, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv273) #16
  %tobool275.not = icmp eq i32 %call274, 0
  br i1 %tobool275.not, label %end, label %lor.lhs.false276

lor.lhs.false276:                                 ; preds = %if.end269
  %67 = load i64, i64* %written, align 8, !tbaa !10
  %call277 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call278 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3420, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %67, i64 noundef %call277) #16
  %tobool279.not = icmp eq i32 %call278, 0
  br i1 %tobool279.not, label %end, label %lor.lhs.false280

lor.lhs.false280:                                 ; preds = %lor.lhs.false276
  %68 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call282 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %68, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call283 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3423, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call282, i32 noundef 1) #16
  %tobool284.not = icmp eq i32 %call283, 0
  br i1 %tobool284.not, label %end, label %lor.lhs.false285

lor.lhs.false285:                                 ; preds = %lor.lhs.false280
  %69 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call287 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call288 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3424, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %69, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call287) #16
  %tobool289.not = icmp eq i32 %call288, 0
  br i1 %tobool289.not, label %end, label %if.end291

if.end291:                                        ; preds = %lor.lhs.false285
  %70 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call292 = call i32 @SSL_connect(%struct.ssl_st* noundef %70) #16
  %call293 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3427, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call292, i32 noundef 0) #16
  %tobool294.not = icmp eq i32 %call293, 0
  br i1 %tobool294.not, label %end, label %lor.lhs.false295

lor.lhs.false295:                                 ; preds = %if.end291
  %71 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call296 = call i32 @SSL_accept(%struct.ssl_st* noundef %71) #16
  %call297 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3428, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call296, i32 noundef 0) #16
  %tobool298.not = icmp eq i32 %call297, 0
  br i1 %tobool298.not, label %end, label %if.end300

if.end300:                                        ; preds = %lor.lhs.false295
  %72 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call301 = call i64 @strlen(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #17
  %call302 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %72, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 noundef %call301, i64* noundef nonnull %written) #16
  %cmp303 = icmp ne i32 %call302, 0
  %conv304 = zext i1 %cmp303 to i32
  %call305 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3433, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.419, i64 0, i64 0), i32 noundef %conv304) #16
  %tobool306.not = icmp eq i32 %call305, 0
  br i1 %tobool306.not, label %end, label %if.end308

if.end308:                                        ; preds = %if.end300
  call void @ERR_clear_error() #16
  %73 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call310 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %73, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call311 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3438, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i64 0, i64 0), i32 noundef %call310, i32 noundef 0) #16
  %tobool312.not = icmp eq i32 %call311, 0
  br i1 %tobool312.not, label %end, label %if.end314

if.end314:                                        ; preds = %if.end308
  call void @ERR_clear_error() #16
  %74 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call315 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call316 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %74, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0), i64 noundef %call315, i64* noundef nonnull %written) #16
  %cmp317 = icmp ne i32 %call316, 0
  %conv318 = zext i1 %cmp317 to i32
  %call319 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3443, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.402, i64 0, i64 0), i32 noundef %conv318) #16
  %tobool320.not = icmp eq i32 %call319, 0
  br i1 %tobool320.not, label %end, label %lor.lhs.false321

lor.lhs.false321:                                 ; preds = %if.end314
  %75 = load i64, i64* %written, align 8, !tbaa !10
  %call322 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call323 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3444, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.404, i64 0, i64 0), i64 noundef %75, i64 noundef %call322) #16
  %tobool324.not = icmp eq i32 %call323, 0
  br i1 %tobool324.not, label %end, label %lor.lhs.false325

lor.lhs.false325:                                 ; preds = %lor.lhs.false321
  %76 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call327 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %76, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp328 = icmp ne i32 %call327, 0
  %conv329 = zext i1 %cmp328 to i32
  %call330 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3445, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv329) #16
  %tobool331.not = icmp eq i32 %call330, 0
  br i1 %tobool331.not, label %end, label %lor.lhs.false332

lor.lhs.false332:                                 ; preds = %lor.lhs.false325
  %77 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call333 = call i64 @strlen(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.403, i64 0, i64 0)) #17
  %call334 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3446, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.404, i64 0, i64 0), i64 noundef %77, i64 noundef %call333) #16
  %tobool335.not = icmp ne i32 %call334, 0
  %spec.select = zext i1 %tobool335.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false332, %if.end314, %lor.lhs.false321, %lor.lhs.false325, %if.end308, %if.end300, %if.end291, %lor.lhs.false295, %if.end269, %lor.lhs.false276, %lor.lhs.false280, %lor.lhs.false285, %if.end253, %lor.lhs.false262, %if.end229, %lor.lhs.false236, %lor.lhs.false240, %lor.lhs.false247, %if.end214, %lor.lhs.false221, %if.end201, %lor.lhs.false208, %if.end195, %if.end187, %if.end175, %lor.lhs.false182, %if.end163, %lor.lhs.false170, %if.end151, %lor.lhs.false158, %if.end142, %lor.lhs.false147, %if.end127, %lor.lhs.false138, %if.end112, %lor.lhs.false120, %lor.lhs.false123, %if.end96, %lor.lhs.false103, %lor.lhs.false107, %if.end72, %lor.lhs.false79, %lor.lhs.false83, %lor.lhs.false90, %if.end61, %lor.lhs.false66, %if.end49, %lor.lhs.false56, %if.end25, %lor.lhs.false32, %lor.lhs.false36, %lor.lhs.false43, %if.end, %lor.lhs.false, %lor.lhs.false11, %lor.lhs.false15, %lor.lhs.false20, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false325 ], [ 0, %lor.lhs.false321 ], [ 0, %if.end314 ], [ 0, %if.end308 ], [ 0, %if.end300 ], [ 0, %lor.lhs.false295 ], [ 0, %if.end291 ], [ 0, %lor.lhs.false285 ], [ 0, %lor.lhs.false280 ], [ 0, %lor.lhs.false276 ], [ 0, %if.end269 ], [ 0, %lor.lhs.false262 ], [ 0, %if.end253 ], [ 0, %lor.lhs.false247 ], [ 0, %lor.lhs.false240 ], [ 0, %lor.lhs.false236 ], [ 0, %if.end229 ], [ 0, %lor.lhs.false221 ], [ 0, %if.end214 ], [ 0, %lor.lhs.false208 ], [ 0, %if.end201 ], [ 0, %if.end195 ], [ 0, %if.end187 ], [ 0, %lor.lhs.false182 ], [ 0, %if.end175 ], [ 0, %lor.lhs.false170 ], [ 0, %if.end163 ], [ 0, %lor.lhs.false158 ], [ 0, %if.end151 ], [ 0, %lor.lhs.false147 ], [ 0, %if.end142 ], [ 0, %lor.lhs.false138 ], [ 0, %if.end127 ], [ 0, %lor.lhs.false123 ], [ 0, %lor.lhs.false120 ], [ 0, %if.end112 ], [ 0, %lor.lhs.false107 ], [ 0, %lor.lhs.false103 ], [ 0, %if.end96 ], [ 0, %lor.lhs.false90 ], [ 0, %lor.lhs.false83 ], [ 0, %lor.lhs.false79 ], [ 0, %if.end72 ], [ 0, %lor.lhs.false66 ], [ 0, %if.end61 ], [ 0, %lor.lhs.false56 ], [ 0, %if.end49 ], [ 0, %lor.lhs.false43 ], [ 0, %lor.lhs.false36 ], [ 0, %lor.lhs.false32 ], [ 0, %if.end25 ], [ 0, %lor.lhs.false20 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false332 ]
  %78 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %78) #16
  %79 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %79) #16
  %80 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %80) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %81 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %81) #16
  %82 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %82) #16
  %83 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %83) #16
  %84 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %84) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_replay(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 0, i32 noundef 0) #18
  %and = and i32 %call, 1
  %call.1 = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 0, i32 noundef 1) #18
  %and.1 = and i32 %call.1, %and
  %call.119 = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 1, i32 noundef 0) #18
  %and.120 = and i32 %call.119, %and.1
  %call.1.1 = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 1, i32 noundef 1) #18
  %and.1.1 = and i32 %call.1.1, %and.120
  %call.2 = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 2, i32 noundef 0) #18
  %and.2 = and i32 %call.2, %and.1.1
  %call.1.2 = tail call fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef 2, i32 noundef 1) #18
  %and.1.2 = and i32 %call.1.2, %and.2
  ret i32 %and.1.2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_skip(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @early_data_skip_helper(i32 noundef 0, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_skip_hrr(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @early_data_skip_helper(i32 noundef 1, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_skip_hrr_fail(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @early_data_skip_helper(i32 noundef 2, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_skip_abort(i32 noundef %idx) #1 {
entry:
  %call = tail call fastcc i32 @early_data_skip_helper(i32 noundef 3, i32 noundef %idx) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_not_sent(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3819, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %8 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_connect_state(%struct.ssl_st* noundef %8) #16
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call2 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call3 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %9, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call2, i64* noundef nonnull %written) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  %call6 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3824, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i64 0, i64 0), i32 noundef %conv5) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.end
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call10 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %10, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call11 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3830, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call10, i32 noundef 2) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %11 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call13 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3831, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %11, i64 noundef 0) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call16 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %12) #16
  %call17 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3833, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.453, i64 0, i64 0), i32 noundef %call16, i32 noundef 0) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call20 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %13) #16
  %call21 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3835, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.453, i64 0, i64 0), i32 noundef %call20, i32 noundef 0) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end24

if.end24:                                         ; preds = %lor.lhs.false19
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call25 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call26 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %14, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call25, i64* noundef nonnull %written) #16
  %cmp27 = icmp ne i32 %call26, 0
  %conv28 = zext i1 %cmp27 to i32
  %call29 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3839, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i64 0, i64 0), i32 noundef %conv28) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.end24
  %15 = load i64, i64* %written, align 8, !tbaa !10
  %call32 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call33 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3840, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %15, i64 noundef %call32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %lor.lhs.false35

lor.lhs.false35:                                  ; preds = %lor.lhs.false31
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call37 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %16, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp38 = icmp ne i32 %call37, 0
  %conv39 = zext i1 %cmp38 to i32
  %call40 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3841, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv39) #16
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %end, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %lor.lhs.false35
  %17 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call44 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call45 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3842, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %17, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %lor.lhs.false42
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call48 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call49 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %18, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call48, i64* noundef nonnull %written) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %19 = load i64, i64* %written, align 8, !tbaa !10
  %call52 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call53 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3844, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %19, i64 noundef %call52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %if.end56

if.end56:                                         ; preds = %lor.lhs.false51
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call58 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %20, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp59 = icmp ne i32 %call58, 0
  %conv60 = zext i1 %cmp59 to i32
  %call61 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3847, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv60) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %end, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %if.end56
  %21 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call65 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call66 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3848, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %21, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call65) #16
  %tobool67.not = icmp ne i32 %call66, 0
  %spec.select = zext i1 %tobool67.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false63, %if.end56, %if.end24, %lor.lhs.false31, %lor.lhs.false35, %lor.lhs.false42, %lor.lhs.false47, %lor.lhs.false51, %if.end9, %lor.lhs.false, %lor.lhs.false15, %lor.lhs.false19, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %if.end56 ], [ 0, %lor.lhs.false51 ], [ 0, %lor.lhs.false47 ], [ 0, %lor.lhs.false42 ], [ 0, %lor.lhs.false35 ], [ 0, %lor.lhs.false31 ], [ 0, %if.end24 ], [ 0, %lor.lhs.false19 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end9 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false63 ]
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %22) #16
  %23 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %23) #16
  %24 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %24) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_psk(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %alpnlist = alloca [17 x i8], align 16
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [17 x i8], [17 x i8]* %alpnlist, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %5) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(17) %5, i8* noundef nonnull align 16 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const.test_early_data_psk.alpnlist, i64 0, i64 0), i64 17, i1 false)
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #19
  %7 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef 2) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3913, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.454, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.455, i64 0, i64 0), i8** @servalpn, align 8, !tbaa !3
  switch i32 %idx, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb29
    i32 3, label %sw.bb37
    i32 4, label %sw.bb49
    i32 5, label %sw.bb69
    i32 6, label %sw.bb70
    i32 7, label %sw.bb87
  ]

sw.bb:                                            ; preds = %if.end
  %9 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call2 = call i32 @SSL_SESSION_set1_hostname(%struct.ssl_session_st* noundef %9, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv4 = zext i1 %cmp3 to i32
  %call5 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3928, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.456, i64 0, i64 0), i32 noundef %conv4) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call7 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i64 0, i64 0)) #16
  %cmp8 = icmp ne i64 %call7, 0
  %conv9 = zext i1 %cmp8 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3929, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.458, i64 0, i64 0), i32 noundef %conv9) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end, label %if.then119

sw.bb14:                                          ; preds = %if.end
  %11 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call15 = call i32 @SSL_SESSION_set1_alpn_selected(%struct.ssl_session_st* noundef %11, i8* noundef nonnull %5, i64 noundef 9) #16
  %cmp16 = icmp ne i32 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3938, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.460, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %sw.bb14
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %add.ptr = getelementptr inbounds [17 x i8], [17 x i8]* %alpnlist, i64 0, i64 9
  %call22 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %12, i8* noundef nonnull %add.ptr, i32 noundef 8) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3940, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.461, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %if.then119

sw.bb29:                                          ; preds = %if.end
  %13 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call30 = call i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* noundef %13, i32 noundef 771) #16
  %cmp31 = icmp ne i32 %call30, 0
  %conv32 = zext i1 %cmp31 to i32
  %call33 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3951, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.462, i64 0, i64 0), i32 noundef %conv32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.then119

sw.bb37:                                          ; preds = %if.end
  %14 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %14) #16
  %15 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call38 = call %struct.ssl_session_st* @SSL_SESSION_dup(%struct.ssl_session_st* noundef %15) #16
  store %struct.ssl_session_st* %call38, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %16 = bitcast %struct.ssl_session_st* %call38 to i8*
  %call39 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3964, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.463, i64 0, i64 0), i8* noundef %16) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %sw.bb37
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %call42 = call i32 @SSL_SESSION_set1_hostname(%struct.ssl_session_st* noundef %17, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.459, i64 0, i64 0)) #16
  %cmp43 = icmp ne i32 %call42, 0
  %conv44 = zext i1 %cmp43 to i32
  %call45 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3965, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.464, i64 0, i64 0), i32 noundef %conv44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %sw.bb49

sw.bb49:                                          ; preds = %lor.lhs.false41, %if.end
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call50 = call i32 @SSL_SESSION_set1_hostname(%struct.ssl_session_st* noundef %18, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3970, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.456, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %sw.bb49
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call56 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %19, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %cmp57 = icmp ne i64 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3971, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.465, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call62 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %20, i32 noundef 53, void ()* noundef bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @hostname_cb to void ()*)) #16
  %cmp63 = icmp ne i64 %call62, 0
  %conv64 = zext i1 %cmp63 to i32
  %call65 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3973, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.466, i64 0, i64 0), i32 noundef %conv64) #16
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %end, label %if.else

sw.bb69:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.467, i64 0, i64 0), i8** @servalpn, align 8, !tbaa !3
  br label %sw.bb70

sw.bb70:                                          ; preds = %if.end, %sw.bb69
  %readearlyres.0 = phi i32 [ 1, %if.end ], [ 2, %sw.bb69 ]
  %edstatus.0 = phi i32 [ 2, %if.end ], [ 1, %sw.bb69 ]
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %add.ptr72 = getelementptr inbounds [17 x i8], [17 x i8]* %alpnlist, i64 0, i64 1
  %call73 = call i32 @SSL_SESSION_set1_alpn_selected(%struct.ssl_session_st* noundef %21, i8* noundef nonnull %add.ptr72, i64 noundef 8) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3995, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.468, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %sw.bb70
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call80 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %22, i8* noundef nonnull %5, i32 noundef 9) #16
  %cmp81 = icmp ne i32 %call80, 0
  %conv82 = zext i1 %cmp81 to i32
  %call83 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3997, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.469, i64 0, i64 0), i32 noundef %conv82) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %if.else.sink.split

sw.bb87:                                          ; preds = %if.end
  %23 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %23) #16
  %24 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call88 = call %struct.ssl_session_st* @SSL_SESSION_dup(%struct.ssl_session_st* noundef %24) #16
  store %struct.ssl_session_st* %call88, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %25 = bitcast %struct.ssl_session_st* %call88 to i8*
  %call89 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4007, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.463, i64 0, i64 0), i8* noundef %25) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %sw.bb87
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %add.ptr94 = getelementptr inbounds [17 x i8], [17 x i8]* %alpnlist, i64 0, i64 10
  %call95 = call i32 @SSL_SESSION_set1_alpn_selected(%struct.ssl_session_st* noundef %26, i8* noundef nonnull %add.ptr94, i64 noundef 7) #16
  %cmp96 = icmp ne i32 %call95, 0
  %conv97 = zext i1 %cmp96 to i32
  %call98 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4010, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.470, i64 0, i64 0), i32 noundef %conv97) #16
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %end, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false91
  %27 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %add.ptr102 = getelementptr inbounds [17 x i8], [17 x i8]* %alpnlist, i64 0, i64 1
  %call103 = call i32 @SSL_SESSION_set1_alpn_selected(%struct.ssl_session_st* noundef %27, i8* noundef nonnull %add.ptr102, i64 noundef 8) #16
  %cmp104 = icmp ne i32 %call103, 0
  %conv105 = zext i1 %cmp104 to i32
  %call106 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4013, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.471, i64 0, i64 0), i32 noundef %conv105) #16
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %end, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false100
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call110 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %28, i8* noundef nonnull %5, i32 noundef 17) #16
  %cmp111 = icmp ne i32 %call110, 0
  %conv112 = zext i1 %cmp111 to i32
  %call113 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4015, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.472, i64 0, i64 0), i32 noundef %conv112) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %end, label %if.else.sink.split

sw.default:                                       ; preds = %if.end
  call void (i8*, i32, i8*, ...) @test_error(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4025, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.473, i64 0, i64 0)) #16
  br label %end

if.then119:                                       ; preds = %lor.lhs.false, %lor.lhs.false20, %sw.bb29
  %err.0 = phi i32 [ 219, %sw.bb29 ], [ 222, %lor.lhs.false20 ], [ 231, %lor.lhs.false ]
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_connect_state(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call120 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call121 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %30, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call120, i64* noundef nonnull %written) #16
  %cmp122 = icmp ne i32 %call121, 0
  %conv123 = zext i1 %cmp122 to i32
  %call124 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4032, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv123) #16
  %tobool125.not = icmp eq i32 %call124, 0
  br i1 %tobool125.not, label %end, label %lor.lhs.false126

lor.lhs.false126:                                 ; preds = %if.then119
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call127 = call i32 @SSL_get_error(%struct.ssl_st* noundef %31, i32 noundef 0) #16
  %call128 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4033, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.378, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i64 0, i64 0), i32 noundef %call127, i32 noundef 1) #16
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %end, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %lor.lhs.false126
  %call131 = call i64 @ERR_get_error() #16
  %call132 = call fastcc i32 @ERR_GET_REASON(i64 noundef %call131) #18, !range !25
  %call133 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4034, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.474, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i64 0, i64 0), i32 noundef %call132, i32 noundef %err.0) #16
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %end, label %if.end166

if.else.sink.split:                               ; preds = %lor.lhs.false108, %lor.lhs.false78
  %readearlyres.1.ph.ph = phi i32 [ %readearlyres.0, %lor.lhs.false78 ], [ 1, %lor.lhs.false108 ]
  %connectres.0.ph.ph = phi i32 [ 1, %lor.lhs.false78 ], [ -1, %lor.lhs.false108 ]
  %edstatus.1.ph.ph = phi i32 [ %edstatus.0, %lor.lhs.false78 ], [ 2, %lor.lhs.false108 ]
  %.sink = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st* noundef %.sink, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* noundef nonnull @alpn_select_cb, i8* noundef null) #16
  br label %if.else

if.else:                                          ; preds = %if.else.sink.split, %lor.lhs.false61
  %readearlyres.1.ph = phi i32 [ 1, %lor.lhs.false61 ], [ %readearlyres.1.ph.ph, %if.else.sink.split ]
  %connectres.0.ph = phi i32 [ 1, %lor.lhs.false61 ], [ %connectres.0.ph.ph, %if.else.sink.split ]
  %edstatus.1.ph = phi i32 [ 2, %lor.lhs.false61 ], [ %edstatus.1.ph.ph, %if.else.sink.split ]
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_connect_state(%struct.ssl_st* noundef %32) #16
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call137 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call138 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %33, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call137, i64* noundef nonnull %written) #16
  %cmp139 = icmp ne i32 %call138, 0
  %conv140 = zext i1 %cmp139 to i32
  %call141 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4038, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv140) #16
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %end, label %if.end144

if.end144:                                        ; preds = %if.else
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call146 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %34, i8* noundef nonnull %6, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call147 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4042, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.476, i64 0, i64 0), i32 noundef %call146, i32 noundef %readearlyres.1.ph) #16
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %end, label %lor.lhs.false149

lor.lhs.false149:                                 ; preds = %if.end144
  %cmp150 = icmp eq i32 %readearlyres.1.ph, 1
  br i1 %cmp150, label %land.lhs.true, label %lor.lhs.false156

land.lhs.true:                                    ; preds = %lor.lhs.false149
  %35 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call153 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call154 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4044, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef nonnull %6, i64 noundef %35, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call153) #16
  %tobool155.not = icmp eq i32 %call154, 0
  br i1 %tobool155.not, label %end, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %land.lhs.true, %lor.lhs.false149
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call157 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %36) #16
  %call158 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4045, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.477, i64 0, i64 0), i32 noundef %call157, i32 noundef %edstatus.1.ph) #16
  %tobool159.not = icmp eq i32 %call158, 0
  br i1 %tobool159.not, label %end, label %lor.lhs.false160

lor.lhs.false160:                                 ; preds = %lor.lhs.false156
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call161 = call i32 @SSL_connect(%struct.ssl_st* noundef %37) #16
  %call162 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4046, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.478, i64 0, i64 0), i32 noundef %call161, i32 noundef %connectres.0.ph) #16
  %tobool163.not = icmp eq i32 %call162, 0
  br i1 %tobool163.not, label %end, label %if.end166

if.end166:                                        ; preds = %lor.lhs.false160, %lor.lhs.false130
  br label %end

end:                                              ; preds = %if.end144, %land.lhs.true, %lor.lhs.false156, %lor.lhs.false160, %if.else, %if.then119, %lor.lhs.false126, %lor.lhs.false130, %sw.bb87, %lor.lhs.false91, %lor.lhs.false100, %lor.lhs.false108, %sw.bb70, %lor.lhs.false78, %sw.bb49, %lor.lhs.false55, %lor.lhs.false61, %sw.bb37, %lor.lhs.false41, %sw.bb29, %sw.bb14, %lor.lhs.false20, %sw.bb, %lor.lhs.false, %entry, %if.end166, %sw.default
  %testresult.0 = phi i32 [ 0, %sw.default ], [ 1, %if.end166 ], [ 0, %lor.lhs.false130 ], [ 0, %lor.lhs.false126 ], [ 0, %if.then119 ], [ 0, %lor.lhs.false160 ], [ 0, %lor.lhs.false156 ], [ 0, %land.lhs.true ], [ 0, %if.end144 ], [ 0, %if.else ], [ 0, %lor.lhs.false108 ], [ 0, %lor.lhs.false100 ], [ 0, %lor.lhs.false91 ], [ 0, %sw.bb87 ], [ 0, %lor.lhs.false78 ], [ 0, %sw.bb70 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false55 ], [ 0, %sw.bb49 ], [ 0, %lor.lhs.false41 ], [ 0, %sw.bb37 ], [ 0, %sw.bb29 ], [ 0, %lor.lhs.false20 ], [ 0, %sw.bb14 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb ], [ 0, %entry ]
  %38 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %38) #16
  %39 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %39) #16
  %40 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %40) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %41) #16
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %42) #16
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %43) #16
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %44) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_psk_with_all_ciphers(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %cipher_str = alloca [5 x i8*], align 16
  %cipher_bytes = alloca [5 x i8*], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = bitcast [5 x i8*]* %cipher_str to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #19
  %9 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0), i8** %9, align 16
  %10 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i64 0, i64 0), i8** %10, align 8
  %11 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 2
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.482, i64 0, i64 0), i8** %11, align 16
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 3
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.483, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 4
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.484, i64 0, i64 0), i8** %13, align 16
  %14 = bitcast [5 x i8*]* %cipher_bytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #19
  %15 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.485, i64 0, i64 0), i8** %15, align 16
  %16 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 2
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.486, i64 0, i64 0), i8** %17, align 16
  %18 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.487, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 4
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.488, i64 0, i64 0), i8** %19, align 16
  %idxprom = sext i32 %idx to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_str, i64 0, i64 %idxprom
  %20 = load i8*, i8** %arrayidx, align 8, !tbaa !3
  %cmp = icmp eq i8* %20, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i32 %idx, 2
  %.b = load i1, i1* @is_fips, align 4
  %or.cond = select i1 %cmp1, i1 %.b, i1 false
  br i1 %or.cond, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef 2) #18
  %cmp5 = icmp ne i32 %call, 0
  %conv = zext i1 %cmp5 to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4112, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.454, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %end, label %if.end8

if.end8:                                          ; preds = %if.end4
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call11 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %21, i8* noundef nonnull %20) #16
  %cmp12 = icmp ne i32 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  %call14 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4115, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.489, i64 0, i64 0), i32 noundef %conv13) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end8
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call18 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %22, i8* noundef nonnull %20) #16
  %cmp19 = icmp ne i32 %call18, 0
  %conv20 = zext i1 %cmp19 to i32
  %call21 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4116, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.490, i64 0, i64 0), i32 noundef %conv20) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end24

if.end24:                                         ; preds = %lor.lhs.false
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %arrayidx26 = getelementptr inbounds [5 x i8*], [5 x i8*]* %cipher_bytes, i64 0, i64 %idxprom
  %24 = load i8*, i8** %arrayidx26, align 8, !tbaa !3
  %call27 = call %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* noundef %23, i8* noundef %24) #16
  %25 = bitcast %struct.ssl_cipher_st* %call27 to i8*
  %call28 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4127, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i64 0, i64 0), i8* noundef %25) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %if.end24
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call31 = call i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* noundef %26, %struct.ssl_cipher_st* noundef %call27) #16
  %cmp32 = icmp ne i32 %call31, 0
  %conv33 = zext i1 %cmp32 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4127, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.211, i64 0, i64 0), i32 noundef %conv33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %if.end37

if.end37:                                         ; preds = %lor.lhs.false30
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_connect_state(%struct.ssl_st* noundef %27) #16
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call38 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call39 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %28, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call38, i64* noundef nonnull %written) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4132, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %if.end37
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call46 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %29, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call47 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4137, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call46, i32 noundef 1) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %if.end45
  %30 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call51 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call52 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4138, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %30, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call51) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %end, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false49
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call55 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %31) #16
  %call56 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4140, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call55, i32 noundef 2) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false54
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call59 = call i32 @SSL_connect(%struct.ssl_st* noundef %32) #16
  %call60 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call59, i32 noundef 1) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %33 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call63 = call i32 @SSL_accept(%struct.ssl_st* noundef %33) #16
  %call64 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4142, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call63, i32 noundef 1) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %if.end67

if.end67:                                         ; preds = %lor.lhs.false62
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call68 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call69 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %34, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call68, i64* noundef nonnull %written) #16
  %cmp70 = icmp ne i32 %call69, 0
  %conv71 = zext i1 %cmp70 to i32
  %call72 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4146, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.448, i64 0, i64 0), i32 noundef %conv71) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %if.end67
  %35 = load i64, i64* %written, align 8, !tbaa !10
  %call75 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call76 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4147, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %35, i64 noundef %call75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.end79

if.end79:                                         ; preds = %lor.lhs.false74
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call81 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %36, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp82 = icmp ne i32 %call81, 0
  %conv83 = zext i1 %cmp82 to i32
  %call84 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4150, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv83) #16
  %tobool85.not = icmp eq i32 %call84, 0
  br i1 %tobool85.not, label %end, label %lor.lhs.false86

lor.lhs.false86:                                  ; preds = %if.end79
  %37 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call88 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call89 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4151, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %37, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call88) #16
  %tobool90.not = icmp ne i32 %call89, 0
  %spec.select = zext i1 %tobool90.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false86, %if.end79, %if.end67, %lor.lhs.false74, %if.end45, %lor.lhs.false49, %lor.lhs.false54, %lor.lhs.false58, %lor.lhs.false62, %if.end37, %if.end24, %lor.lhs.false30, %if.end8, %lor.lhs.false, %if.end4
  %testresult.0 = phi i32 [ 0, %if.end79 ], [ 0, %lor.lhs.false74 ], [ 0, %if.end67 ], [ 0, %lor.lhs.false62 ], [ 0, %lor.lhs.false58 ], [ 0, %lor.lhs.false54 ], [ 0, %lor.lhs.false49 ], [ 0, %if.end45 ], [ 0, %if.end37 ], [ 0, %lor.lhs.false30 ], [ 0, %if.end24 ], [ 0, %lor.lhs.false ], [ 0, %if.end8 ], [ 0, %if.end4 ], [ %spec.select, %lor.lhs.false86 ]
  %38 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %38) #16
  %39 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %39) #16
  %40 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %40) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %41 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %cmp93.not = icmp eq %struct.ssl_st* %41, null
  br i1 %cmp93.not, label %if.end97, label %if.then95

if.then95:                                        ; preds = %end
  %call96 = call i32 @SSL_shutdown(%struct.ssl_st* noundef nonnull %41) #16
  br label %if.end97

if.end97:                                         ; preds = %if.then95, %end
  %42 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %cmp98.not = icmp eq %struct.ssl_st* %42, null
  br i1 %cmp98.not, label %if.end102, label %if.then100

if.then100:                                       ; preds = %if.end97
  %call101 = call i32 @SSL_shutdown(%struct.ssl_st* noundef nonnull %42) #16
  %.pre = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %if.end97
  %43 = phi %struct.ssl_st* [ %.pre, %if.then100 ], [ null, %if.end97 ]
  call void @SSL_free(%struct.ssl_st* noundef %43) #16
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %44) #16
  %45 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %45) #16
  %46 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %46) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry, %if.end102
  %retval.0 = phi i32 [ %testresult.0, %if.end102 ], [ 1, %entry ], [ 1, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_not_expected(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4185, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %8 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call2 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call3 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %8, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call2, i64* noundef nonnull %written) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4190, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv5) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.end
  %9 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call10 = call i32 @SSL_accept(%struct.ssl_st* noundef %9) #16
  %call11 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4197, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call10, i32 noundef 0) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call13 = call i32 @SSL_connect(%struct.ssl_st* noundef %10) #16
  %call14 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4198, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call13, i32 noundef 0) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call17 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %11) #16
  %call18 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4200, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.439, i64 0, i64 0), i32 noundef %call17, i32 noundef 1) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call21 = call i32 @SSL_accept(%struct.ssl_st* noundef %12) #16
  %call22 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4201, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call21, i32 noundef 0) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false20
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call25 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %13) #16
  %call26 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4203, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.439, i64 0, i64 0), i32 noundef %call25, i32 noundef 1) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end29

if.end29:                                         ; preds = %lor.lhs.false24
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call30 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call31 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %14, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call30, i64* noundef nonnull %written) #16
  %cmp32 = icmp ne i32 %call31, 0
  %conv33 = zext i1 %cmp32 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4207, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.448, i64 0, i64 0), i32 noundef %conv33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end29
  %15 = load i64, i64* %written, align 8, !tbaa !10
  %call37 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call38 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4208, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %15, i64 noundef %call37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %if.end41

if.end41:                                         ; preds = %lor.lhs.false36
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call42 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %16, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp43 = icmp ne i32 %call42, 0
  %conv44 = zext i1 %cmp43 to i32
  %call45 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4211, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end41
  %17 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call49 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call50 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4212, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %17, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call49) #16
  %tobool51.not = icmp ne i32 %call50, 0
  %spec.select = zext i1 %tobool51.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false47, %if.end41, %if.end29, %lor.lhs.false36, %if.end9, %lor.lhs.false, %lor.lhs.false16, %lor.lhs.false20, %lor.lhs.false24, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %if.end41 ], [ 0, %lor.lhs.false36 ], [ 0, %if.end29 ], [ 0, %lor.lhs.false24 ], [ 0, %lor.lhs.false20 ], [ 0, %lor.lhs.false16 ], [ 0, %lor.lhs.false ], [ 0, %if.end9 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false47 ]
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %18) #16
  %19 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %19) #16
  %20 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %20) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %22) #16
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %23) #16
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %24) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_early_data_tls1_2(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #19
  %5 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef null, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4244, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.491, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call2 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %7, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %8 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_connect_state(%struct.ssl_st* noundef %8) #16
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call3 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call4 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %9, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call3, i64* noundef nonnull %written) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4250, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %if.end10

if.end10:                                         ; preds = %if.end
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call11 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %10, i8* noundef nonnull %4, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call12 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4260, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i64 0, i64 0), i32 noundef %call11, i32 noundef 0) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end10
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call17 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %11, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call16, i64* noundef nonnull %written) #16
  %cmp18 = icmp ne i32 %call17, 0
  %conv19 = zext i1 %cmp18 to i32
  %call20 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4267, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i64 0, i64 0), i32 noundef %conv19) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end15
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call23 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %12, i8* noundef nonnull %4, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call24 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4270, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call23, i32 noundef 2) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %13 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call27 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4271, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %13, i64 noundef 0) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %end, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false26
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call30 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %14) #16
  %call31 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4273, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.453, i64 0, i64 0), i32 noundef %call30, i32 noundef 0) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %lor.lhs.false29
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call35 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call36 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %15, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call35, i64* noundef nonnull %written) #16
  %cmp37 = icmp ne i32 %call36, 0
  %conv38 = zext i1 %cmp37 to i32
  %call39 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4277, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.452, i64 0, i64 0), i32 noundef %conv38) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %if.end34
  %16 = load i64, i64* %written, align 8, !tbaa !10
  %call42 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call43 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4278, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %16, i64 noundef %call42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call46 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %17) #16
  %call47 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4280, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.453, i64 0, i64 0), i32 noundef %call46, i32 noundef 0) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call51 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %18, i8* noundef nonnull %4, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp52 = icmp ne i32 %call51, 0
  %conv53 = zext i1 %cmp52 to i32
  %call54 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4281, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false49
  %19 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call58 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call59 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4282, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef nonnull %4, i64 noundef %19, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false56
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call62 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call63 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %20, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call62, i64* noundef nonnull %written) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4283, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.492, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %lor.lhs.false61
  %21 = load i64, i64* %written, align 8, !tbaa !10
  %call69 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call70 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4284, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %21, i64 noundef %call69) #16
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %end, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %lor.lhs.false68
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call74 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %22, i8* noundef nonnull %4, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %lor.lhs.false72
  %23 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call78 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call79 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4286, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %4, i64 noundef %23, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call78) #16
  %tobool80.not = icmp ne i32 %call79, 0
  %spec.select = zext i1 %tobool80.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false76, %if.end34, %lor.lhs.false41, %lor.lhs.false45, %lor.lhs.false49, %lor.lhs.false56, %lor.lhs.false61, %lor.lhs.false68, %lor.lhs.false72, %if.end15, %lor.lhs.false, %lor.lhs.false26, %lor.lhs.false29, %if.end10, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false72 ], [ 0, %lor.lhs.false68 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false56 ], [ 0, %lor.lhs.false49 ], [ 0, %lor.lhs.false45 ], [ 0, %lor.lhs.false41 ], [ 0, %if.end34 ], [ 0, %lor.lhs.false29 ], [ 0, %lor.lhs.false26 ], [ 0, %lor.lhs.false ], [ 0, %if.end15 ], [ 0, %if.end10 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false76 ]
  %24 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %24) #16
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %25) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %29) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_set_ciphersuite(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4326, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %7, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.494, i64 0, i64 0)) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4328, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.493, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %8 = and i32 %idx, -4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %if.then13, label %if.end21

if.then13:                                        ; preds = %if.end
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call14 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %10, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.374, i64 0, i64 0)) #16
  %cmp15 = icmp ne i32 %call14, 0
  %conv16 = zext i1 %cmp15 to i32
  %call17 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4333, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.495, i64 0, i64 0), i32 noundef %conv16) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %if.end21

if.end21:                                         ; preds = %if.then13, %if.end
  %11 = and i32 %idx, -5
  switch i32 %11, label %if.end49 [
    i32 0, label %if.then27
    i32 1, label %if.then40
  ]

if.then27:                                        ; preds = %if.end21
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call28 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %12, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4340, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.496, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end49

if.then40:                                        ; preds = %if.end21
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call41 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %13, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.483, i64 0, i64 0)) #16
  %cmp42 = icmp ne i32 %call41, 0
  %conv43 = zext i1 %cmp42 to i32
  %call44 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4345, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.497, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %end, label %if.end49

if.end49:                                         ; preds = %if.end21, %if.then40, %if.then27
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call50 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %14, %struct.ssl_ctx_st* noundef %15, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4350, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %if.end56

if.end56:                                         ; preds = %if.end49
  %16 = and i32 %idx, -2
  %17 = icmp eq i32 %16, 8
  br i1 %17, label %if.then62, label %if.end70

if.then62:                                        ; preds = %if.end56
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call63 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %18, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.374, i64 0, i64 0)) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4355, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.373, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end70

if.end70:                                         ; preds = %if.then62, %if.end56
  switch i32 %idx, label %if.end105 [
    i32 8, label %if.then79
    i32 6, label %if.then79
    i32 2, label %if.then79
    i32 9, label %if.then96
    i32 7, label %if.then96
    i32 3, label %if.then96
  ]

if.then79:                                        ; preds = %if.end70, %if.end70, %if.end70
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call80 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %19, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp81 = icmp ne i32 %call80, 0
  %conv82 = zext i1 %cmp81 to i32
  %call83 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4362, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.498, i64 0, i64 0), i32 noundef %conv82) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %if.end105

if.then96:                                        ; preds = %if.end70, %if.end70, %if.end70
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call97 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %20, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.483, i64 0, i64 0)) #16
  %cmp98 = icmp ne i32 %call97, 0
  %conv99 = zext i1 %cmp98 to i32
  %call100 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4367, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.499, i64 0, i64 0), i32 noundef %conv99) #16
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %end, label %if.end105

if.end105:                                        ; preds = %if.end70, %if.then96, %if.then79
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call106 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %21, %struct.ssl_st* noundef %22, i32 noundef 0) #16
  %cmp107 = icmp ne i32 %call106, 0
  %conv108 = zext i1 %cmp107 to i32
  %call109 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4371, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv108) #16
  %tobool110.not = icmp ne i32 %call109, 0
  %spec.select = zext i1 %tobool110.not to i32
  br label %end

end:                                              ; preds = %if.end105, %if.then96, %if.then79, %if.then62, %if.end49, %if.then40, %if.then27, %if.then13, %entry, %lor.lhs.false
  %testresult.0 = phi i32 [ 0, %if.then79 ], [ 0, %if.then96 ], [ 0, %if.then62 ], [ 0, %if.end49 ], [ 0, %if.then27 ], [ 0, %if.then40 ], [ 0, %if.then13 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %if.end105 ]
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %25) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ciphersuite_change() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4396, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %7, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.501, i64 0, i64 0)) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4400, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.500, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call10 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %8, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4402, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.496, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false9
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4404, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call22 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4406, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false21
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call27 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %13) #16
  %call28 = call %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st* noundef %call27) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call29 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %14) #16
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call30 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %15) #16
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call31 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %18, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.483, i64 0, i64 0)) #16
  %cmp32 = icmp ne i32 %call31, 0
  %conv33 = zext i1 %cmp32 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4420, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.497, i64 0, i64 0), i32 noundef %conv33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call37 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %19, %struct.ssl_ctx_st* noundef %20, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp38 = icmp ne i32 %call37, 0
  %conv39 = zext i1 %cmp38 to i32
  %call40 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4422, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv39) #16
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %end, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call43 = call i32 @SSL_set_session(%struct.ssl_st* noundef %21, %struct.ssl_session_st* noundef %call27) #16
  %cmp44 = icmp ne i32 %call43, 0
  %conv45 = zext i1 %cmp44 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4423, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.502, i64 0, i64 0), i32 noundef %conv45) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %lor.lhs.false42
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call49 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %cmp50 = icmp ne i32 %call49, 0
  %conv51 = zext i1 %cmp50 to i32
  %call52 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4425, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv51) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %end, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call55 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %24) #16
  %cmp56 = icmp ne i32 %call55, 0
  %conv57 = zext i1 %cmp56 to i32
  %call58 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4426, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv57) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %if.end61

if.end61:                                         ; preds = %lor.lhs.false54
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call27) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call62 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call63 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call64 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %27) #16
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %30 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call65 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %30, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i64 0, i64 0)) #16
  %cmp66 = icmp ne i32 %call65, 0
  %conv67 = zext i1 %cmp66 to i32
  %call68 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4441, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.503, i64 0, i64 0), i32 noundef %conv67) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %if.end61
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call71 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %31, %struct.ssl_ctx_st* noundef %32, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp72 = icmp ne i32 %call71, 0
  %conv73 = zext i1 %cmp72 to i32
  %call74 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4443, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv73) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %lor.lhs.false70
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call77 = call i32 @SSL_set_session(%struct.ssl_st* noundef %33, %struct.ssl_session_st* noundef %call62) #16
  %cmp78 = icmp ne i32 %call77, 0
  %conv79 = zext i1 %cmp78 to i32
  %call80 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4444, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.502, i64 0, i64 0), i32 noundef %conv79) #16
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %end, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false76
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call83 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %34, %struct.ssl_st* noundef %35, i32 noundef 1) #16
  %cmp84 = icmp ne i32 %call83, 0
  %conv85 = zext i1 %cmp84 to i32
  %call86 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4446, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.504, i64 0, i64 0), i32 noundef %conv85) #16
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %end, label %lor.lhs.false88

lor.lhs.false88:                                  ; preds = %lor.lhs.false82
  %36 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call89 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %36) #16
  %cmp90 = icmp ne i32 %call89, 0
  %conv91 = zext i1 %cmp90 to i32
  %call92 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv91) #16
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %end, label %if.end95

if.end95:                                         ; preds = %lor.lhs.false88
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call62) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call96 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %37) #16
  %38 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call97 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %38) #16
  %39 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %39) #16
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %40) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %41 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call98 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %41, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i64 0, i64 0)) #16
  %cmp99 = icmp ne i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  %call101 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4459, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.503, i64 0, i64 0), i32 noundef %conv100) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %if.end95
  %42 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call104 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %42, %struct.ssl_ctx_st* noundef %43, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp105 = icmp ne i32 %call104, 0
  %conv106 = zext i1 %cmp105 to i32
  %call107 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4461, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv106) #16
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %end, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %lor.lhs.false103
  %44 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %45 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call110 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %44, %struct.ssl_st* noundef %45, i32 noundef 0) #16
  %cmp111 = icmp ne i32 %call110, 0
  %conv112 = zext i1 %cmp111 to i32
  %call113 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4463, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv112) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %end, label %if.end116

if.end116:                                        ; preds = %lor.lhs.false109
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call117 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %46) #16
  %47 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call118 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %47) #16
  %48 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call119 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %48) #16
  %49 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %49) #16
  %50 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %50) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %51 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call120 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %51, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.506, i64 0, i64 0)) #16
  %cmp121 = icmp ne i32 %call120, 0
  %conv122 = zext i1 %cmp121 to i32
  %call123 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4474, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.505, i64 0, i64 0), i32 noundef %conv122) #16
  %tobool124.not = icmp eq i32 %call123, 0
  br i1 %tobool124.not, label %end, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %if.end116
  %52 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call126 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %52, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.481, i64 0, i64 0)) #16
  %cmp127 = icmp ne i32 %call126, 0
  %conv128 = zext i1 %cmp127 to i32
  %call129 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4476, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.507, i64 0, i64 0), i32 noundef %conv128) #16
  %tobool130.not = icmp eq i32 %call129, 0
  br i1 %tobool130.not, label %end, label %lor.lhs.false131

lor.lhs.false131:                                 ; preds = %lor.lhs.false125
  %53 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %54 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call132 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %53, %struct.ssl_ctx_st* noundef %54, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp133 = icmp ne i32 %call132, 0
  %conv134 = zext i1 %cmp133 to i32
  %call135 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4478, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv134) #16
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %end, label %lor.lhs.false137

lor.lhs.false137:                                 ; preds = %lor.lhs.false131
  %55 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call138 = call i32 @SSL_set_session(%struct.ssl_st* noundef %55, %struct.ssl_session_st* noundef %call117) #16
  %cmp139 = icmp ne i32 %call138, 0
  %conv140 = zext i1 %cmp139 to i32
  %call141 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4479, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.502, i64 0, i64 0), i32 noundef %conv140) #16
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %end, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %lor.lhs.false137
  %56 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %57 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call144 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %56, %struct.ssl_st* noundef %57, i32 noundef 2) #16
  %cmp145 = icmp ne i32 %call144, 0
  %conv146 = zext i1 %cmp145 to i32
  %call147 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4486, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.508, i64 0, i64 0), i32 noundef %conv146) #16
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %end, label %if.end150

if.end150:                                        ; preds = %lor.lhs.false143
  %cipher = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call117, i64 0, i32 20
  store %struct.ssl_cipher_st* %call28, %struct.ssl_cipher_st** %cipher, align 8, !tbaa !26
  %id = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %call28, i64 0, i32 3
  %58 = load i32, i32* %id, align 8, !tbaa !30
  %conv152 = zext i32 %58 to i64
  %cipher_id = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call117, i64 0, i32 21
  store i64 %conv152, i64* %cipher_id, align 8, !tbaa !32
  %59 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %60 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call153 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %59, %struct.ssl_st* noundef %60, i32 noundef 1) #16
  %cmp154 = icmp ne i32 %call153, 0
  %conv155 = zext i1 %cmp154 to i32
  %call156 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4499, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.504, i64 0, i64 0), i32 noundef %conv155) #16
  %tobool157.not = icmp eq i32 %call156, 0
  br i1 %tobool157.not, label %end, label %lor.lhs.false158

lor.lhs.false158:                                 ; preds = %if.end150
  %call159 = call i64 @ERR_get_error() #16
  %call160 = call fastcc i32 @ERR_GET_REASON(i64 noundef %call159) #18, !range !25
  %call161 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4501, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.474, i64 0, i64 0), i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.509, i64 0, i64 0), i32 noundef %call160, i32 noundef 218) #16
  %tobool162.not = icmp ne i32 %call161, 0
  %spec.select = zext i1 %tobool162.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false158, %if.end150, %if.end116, %lor.lhs.false125, %lor.lhs.false131, %lor.lhs.false137, %lor.lhs.false143, %if.end95, %lor.lhs.false103, %lor.lhs.false109, %if.end61, %lor.lhs.false70, %lor.lhs.false76, %lor.lhs.false82, %lor.lhs.false88, %if.end, %lor.lhs.false36, %lor.lhs.false42, %lor.lhs.false48, %lor.lhs.false54, %entry, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false15, %lor.lhs.false21
  %clntsess.0 = phi %struct.ssl_session_st* [ %call117, %if.end150 ], [ %call117, %lor.lhs.false143 ], [ %call117, %lor.lhs.false137 ], [ %call117, %lor.lhs.false131 ], [ %call117, %lor.lhs.false125 ], [ %call117, %if.end116 ], [ null, %lor.lhs.false109 ], [ null, %lor.lhs.false103 ], [ null, %if.end95 ], [ %call62, %lor.lhs.false88 ], [ %call62, %lor.lhs.false82 ], [ %call62, %lor.lhs.false76 ], [ %call62, %lor.lhs.false70 ], [ %call62, %if.end61 ], [ %call27, %lor.lhs.false54 ], [ %call27, %lor.lhs.false48 ], [ %call27, %lor.lhs.false42 ], [ %call27, %lor.lhs.false36 ], [ %call27, %if.end ], [ null, %lor.lhs.false21 ], [ null, %lor.lhs.false15 ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call117, %lor.lhs.false158 ]
  %testresult.0 = phi i32 [ 0, %if.end150 ], [ 0, %lor.lhs.false143 ], [ 0, %lor.lhs.false137 ], [ 0, %lor.lhs.false131 ], [ 0, %lor.lhs.false125 ], [ 0, %if.end116 ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false103 ], [ 0, %if.end95 ], [ 0, %lor.lhs.false88 ], [ 0, %lor.lhs.false82 ], [ 0, %lor.lhs.false76 ], [ 0, %lor.lhs.false70 ], [ 0, %if.end61 ], [ 0, %lor.lhs.false54 ], [ 0, %lor.lhs.false48 ], [ 0, %lor.lhs.false42 ], [ 0, %lor.lhs.false36 ], [ 0, %if.end ], [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false9 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %lor.lhs.false158 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %clntsess.0) #16
  %61 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %61) #16
  %62 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %62) #16
  %63 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %63) #16
  %64 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %64) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_tls13_ciphersuite(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  switch i32 %idx, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %cmp115 = phi i1 [ false, %entry ], [ true, %sw.bb3 ], [ true, %sw.bb2 ], [ false, %sw.bb1 ], [ false, %sw.bb ]
  %cmp70.not = phi i1 [ true, %entry ], [ false, %sw.bb3 ], [ false, %sw.bb2 ], [ true, %sw.bb1 ], [ true, %sw.bb ]
  %t12_cipher.0 = phi i8* [ null, %entry ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.512, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.512, i64 0, i64 0), %sw.bb2 ], [ null, %sw.bb1 ], [ null, %sw.bb ]
  %tobool16.not = phi i1 [ true, %entry ], [ true, %sw.bb3 ], [ false, %sw.bb2 ], [ true, %sw.bb1 ], [ false, %sw.bb ]
  %tobool55.not = phi i1 [ true, %entry ], [ false, %sw.bb3 ], [ true, %sw.bb2 ], [ false, %sw.bb1 ], [ true, %sw.bb ]
  %.b.pre166.pre = load i1, i1* @is_fips, align 4
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %sw.epilog, %for.inc122
  %.b.pre166 = phi i1 [ %.b.pre166.pre, %sw.epilog ], [ %.b.pre166169, %for.inc122 ]
  %max_ver.0163 = phi i32 [ 771, %sw.epilog ], [ %inc123, %for.inc122 ]
  %cmp103 = icmp eq i32 %max_ver.0163, 772
  %cmp112 = icmp eq i32 %max_ver.0163, 771
  %or.cond = and i1 %cmp115, %cmp112
  br label %for.body6

for.body6:                                        ; preds = %for.cond4.preheader, %for.inc
  %.b.pre166170 = phi i1 [ %.b.pre166, %for.cond4.preheader ], [ %.b.pre166169, %for.inc ]
  %.b = phi i1 [ %.b.pre166, %for.cond4.preheader ], [ %.b167, %for.inc ]
  %i.0161 = phi i64 [ 0, %for.cond4.preheader ], [ %inc, %for.inc ]
  %4 = add nsw i64 %i.0161, -3
  %5 = icmp ult i64 %4, 2
  %or.cond157 = select i1 %.b, i1 %5, i1 false
  br i1 %or.cond157, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body6
  %ciphername = getelementptr inbounds [6 x %struct.anon.6], [6 x %struct.anon.6]* @test_tls13_ciphersuite.t13_ciphers, i64 0, i64 %i.0161, i32 0
  %6 = load i8*, i8** %ciphername, align 16, !tbaa !33
  %7 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = call %struct.ssl_method_st* @TLS_server_method() #16
  %call9 = call %struct.ssl_method_st* @TLS_client_method() #16
  %8 = load i8*, i8** @cert, align 8, !tbaa !3
  %9 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %7, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call9, i32 noundef 769, i32 noundef %max_ver.0163, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %8, i8* noundef %9) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv = zext i1 %cmp11 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4981, i8* noundef getelementptr inbounds ([122 x i8], [122 x i8]* @.str.513, i64 0, i64 0), i32 noundef %conv) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end
  br i1 %tobool16.not, label %if.end47, label %if.then17

if.then17:                                        ; preds = %if.end15
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call18 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %10, i8* noundef %6) #16
  %cmp19 = icmp ne i32 %call18, 0
  %conv20 = zext i1 %cmp19 to i32
  %call21 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4985, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.514, i64 0, i64 0), i32 noundef %conv20) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then17
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call23 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %11, i8* noundef %6) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4986, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.515, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end29

if.end29:                                         ; preds = %lor.lhs.false
  br i1 %cmp70.not, label %if.end47, label %if.then32

if.then32:                                        ; preds = %if.end29
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call33 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %12, i8* noundef %t12_cipher.0) #16
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4989, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.516, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %if.then32
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call39 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %13, i8* noundef %t12_cipher.0) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4991, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.517, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end47

if.end47:                                         ; preds = %if.end29, %lor.lhs.false38, %if.end15
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call48 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %14, %struct.ssl_ctx_st* noundef %15, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp49 = icmp ne i32 %call48, 0
  %conv50 = zext i1 %cmp49 to i32
  %call51 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4997, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv50) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %if.end54

if.end54:                                         ; preds = %if.end47
  br i1 %tobool55.not, label %if.end87, label %if.then56

if.then56:                                        ; preds = %if.end54
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call57 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %16, i8* noundef %6) #16
  %cmp58 = icmp ne i32 %call57, 0
  %conv59 = zext i1 %cmp58 to i32
  %call60 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5001, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.518, i64 0, i64 0), i32 noundef %conv59) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.then56
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call63 = call i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef %17, i8* noundef %6) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5002, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.519, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end69

if.end69:                                         ; preds = %lor.lhs.false62
  br i1 %cmp70.not, label %if.end87, label %if.then72

if.then72:                                        ; preds = %if.end69
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call73 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %18, i8* noundef %t12_cipher.0) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5005, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.520, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %if.then72
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call79 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %19, i8* noundef %t12_cipher.0) #16
  %cmp80 = icmp ne i32 %call79, 0
  %conv81 = zext i1 %cmp80 to i32
  %call82 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5007, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.521, i64 0, i64 0), i32 noundef %conv81) #16
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %end, label %if.end87

if.end87:                                         ; preds = %if.end69, %lor.lhs.false78, %if.end54
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call88 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %20, %struct.ssl_st* noundef %21, i32 noundef 0) #16
  %cmp89 = icmp ne i32 %call88, 0
  %conv90 = zext i1 %cmp89 to i32
  %call91 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5013, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv90) #16
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %end, label %if.end94

if.end94:                                         ; preds = %if.end87
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call95 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* noundef %22) #16
  %call96 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* noundef %call95) #16
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call97 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* noundef %23) #16
  %call98 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* noundef %call97) #16
  %call99 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5020, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.522, i64 0, i64 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.523, i64 0, i64 0), i8* noundef %call96, i8* noundef %call98) #16
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %end, label %if.end102

if.end102:                                        ; preds = %if.end94
  br i1 %cmp103, label %land.lhs.true105, label %if.end111

land.lhs.true105:                                 ; preds = %if.end102
  %call106 = call i64 @strlen(i8* noundef %call96) #17
  %call108 = call i32 @test_strn_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5029, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.524, i64 0, i64 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.522, i64 0, i64 0), i8* noundef %6, i64 noundef %call106, i8* noundef %call96, i64 noundef %call106) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %if.end121

if.end111:                                        ; preds = %if.end102
  br i1 %or.cond, label %land.lhs.true117, label %if.end121

land.lhs.true117:                                 ; preds = %if.end111
  %call118 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5035, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.525, i64 0, i64 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.522, i64 0, i64 0), i8* noundef %t12_cipher.0, i8* noundef %call96) #16
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %end, label %if.end121

if.end121:                                        ; preds = %land.lhs.true105, %land.lhs.true117, %if.end111
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %.b.pre = load i1, i1* @is_fips, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body6, %if.end121
  %.b.pre166169 = phi i1 [ %.b.pre166170, %for.body6 ], [ %.b.pre, %if.end121 ]
  %.b167 = phi i1 [ true, %for.body6 ], [ %.b.pre, %if.end121 ]
  %inc = add nuw nsw i64 %i.0161, 1
  %exitcond.not = icmp eq i64 %inc, 6
  br i1 %exitcond.not, label %for.inc122, label %for.body6, !llvm.loop !35

for.inc122:                                       ; preds = %for.inc
  %inc123 = add nuw nsw i32 %max_ver.0163, 1
  %exitcond165.not = icmp eq i32 %inc123, 773
  br i1 %exitcond165.not, label %end, label %for.cond4.preheader, !llvm.loop !36

end:                                              ; preds = %for.inc122, %land.lhs.true117, %land.lhs.true105, %if.end94, %if.end87, %if.then72, %lor.lhs.false78, %if.then56, %lor.lhs.false62, %if.end47, %if.then32, %lor.lhs.false38, %if.then17, %lor.lhs.false, %if.end
  %testresult.0 = phi i32 [ 0, %if.end ], [ 0, %lor.lhs.false ], [ 0, %if.then17 ], [ 0, %lor.lhs.false38 ], [ 0, %if.then32 ], [ 0, %if.end47 ], [ 0, %lor.lhs.false62 ], [ 0, %if.then56 ], [ 0, %lor.lhs.false78 ], [ 0, %if.then72 ], [ 0, %if.end87 ], [ 0, %if.end94 ], [ 0, %land.lhs.true105 ], [ 0, %land.lhs.true117 ], [ 1, %for.inc122 ]
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %30) #16
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %31) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_tls13_psk(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %key = alloca [48 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [48 x i8], [48 x i8]* %key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %4, i8* noundef nonnull align 16 dereferenceable(48) getelementptr inbounds ([48 x i8], [48 x i8]* @__const.test_tls13_psk.key, i64 0, i64 0), i64 48, i1 false)
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %cmp = icmp eq i32 %idx, 3
  %6 = load i8*, i8** @cert, align 8
  %cond = select i1 %cmp, i8* null, i8* %6
  %7 = load i8*, i8** @privkey, align 8
  %cond6 = select i1 %cmp, i8* null, i8* %7
  %call7 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %cond, i8* noundef %cond6) #16
  %cmp8 = icmp ne i32 %call7, 0
  %conv = zext i1 %cmp8 to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5082, i8* noundef getelementptr inbounds ([152 x i8], [152 x i8]* @.str.526, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  br i1 %cmp, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end
  %call13 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %8, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp14 = icmp ne i32 %call13, 0
  %conv15 = zext i1 %cmp14 to i32
  %call16 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5093, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.496, i64 0, i64 0), i32 noundef %conv15) #16
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %end, label %if.end27

if.else:                                          ; preds = %if.end
  %call20 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %8, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.528, i64 0, i64 0)) #16
  %cmp21 = icmp ne i32 %call20, 0
  %conv22 = zext i1 %cmp21 to i32
  %call23 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5103, i8* noundef getelementptr inbounds ([83 x i8], [83 x i8]* @.str.527, i64 0, i64 0), i32 noundef %conv22) #16
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %end, label %if.end37

if.end27:                                         ; preds = %if.then12
  %9 = icmp ult i32 %idx, 2
  br i1 %9, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end27
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st* noundef %10, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)* noundef nonnull @use_session_cb) #16
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st* noundef %11, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)* noundef nonnull @find_session_cb) #16
  br label %if.end33

if.end33:                                         ; preds = %if.end27, %if.then32
  %cmp34 = icmp sgt i32 %idx, 0
  br i1 %cmp34, label %if.end37, label %if.end37.thread

if.end37.thread:                                  ; preds = %if.end33
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  br label %if.then40

if.end37:                                         ; preds = %if.else, %if.end33
  %12 = phi i1 [ %9, %if.end33 ], [ false, %if.else ]
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st* noundef %13, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)* noundef nonnull @psk_client_cb) #16
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st* noundef %14, i32 (%struct.ssl_st*, i8*, i8*, i32)* noundef nonnull @psk_server_cb) #16
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  br i1 %cmp, label %if.end132, label %if.then40

if.then40:                                        ; preds = %if.end37.thread, %if.end37
  %15 = phi i1 [ %9, %if.end37.thread ], [ %12, %if.end37 ]
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call41 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp42 = icmp ne i32 %call41, 0
  %conv43 = zext i1 %cmp42 to i32
  %call44 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5134, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %end, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %if.then40
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call47 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 0) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5136, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %20) #16
  %cmp54 = icmp ne i32 %call53, 0
  %conv55 = zext i1 %cmp54 to i32
  %call56 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5137, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call59 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %21) #16
  %cmp60 = icmp ne i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  %call62 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5138, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv61) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %if.end65

if.end65:                                         ; preds = %lor.lhs.false58
  %22 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  br i1 %15, label %if.then71, label %if.else101

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp eq i32 %22, 1
  %conv73 = zext i1 %cmp72 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5142, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.529, i64 0, i64 0), i32 noundef %conv73) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %if.then71
  %23 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp79 = icmp eq i32 %23, 0
  %conv80 = zext i1 %cmp79 to i32
  %call83 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5143, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.530, i64 0, i64 0), i32 noundef %conv80) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %lor.lhs.false78
  %24 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp86 = icmp eq i32 %24, %idx
  %conv87 = zext i1 %cmp86 to i32
  %call90 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5148, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.531, i64 0, i64 0), i32 noundef %conv87) #16
  %tobool91.not = icmp eq i32 %call90, 0
  br i1 %tobool91.not, label %end, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %lor.lhs.false85
  %25 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp93 = icmp eq i32 %25, 0
  %conv94 = zext i1 %cmp93 to i32
  %call97 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5149, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.532, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool98.not = icmp eq i32 %call97, 0
  br i1 %tobool98.not, label %end, label %if.end131

if.else101:                                       ; preds = %if.end65
  %cmp102 = icmp eq i32 %22, 0
  %conv103 = zext i1 %cmp102 to i32
  %call106 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5152, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.533, i64 0, i64 0), i32 noundef %conv103) #16
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %end, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %if.else101
  %26 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp109 = icmp eq i32 %26, 0
  %conv110 = zext i1 %cmp109 to i32
  %call113 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5153, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.530, i64 0, i64 0), i32 noundef %conv110) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %end, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %lor.lhs.false108
  %27 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp116 = icmp eq i32 %27, 1
  %conv117 = zext i1 %cmp116 to i32
  %call120 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5154, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.534, i64 0, i64 0), i32 noundef %conv117) #16
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %end, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %lor.lhs.false115
  %28 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp123 = icmp eq i32 %28, 0
  %conv124 = zext i1 %cmp123 to i32
  %call127 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5155, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.532, i64 0, i64 0), i32 noundef %conv124) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %if.end131

if.end131:                                        ; preds = %lor.lhs.false122, %lor.lhs.false92
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %29, %struct.ssl_st* noundef %30) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i32 0, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end37
  %31 = phi i1 [ %15, %if.end131 ], [ %12, %if.end37 ]
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call133 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %32, %struct.ssl_ctx_st* noundef %33, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp134 = icmp ne i32 %call133, 0
  %conv135 = zext i1 %cmp134 to i32
  %call136 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5165, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv135) #16
  %tobool137.not = icmp eq i32 %call136, 0
  br i1 %tobool137.not, label %end, label %if.end139

if.end139:                                        ; preds = %if.end132
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call140 = call %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* noundef %34, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.485, i64 0, i64 0)) #16
  %call141 = call %struct.ssl_session_st* @SSL_SESSION_new() #16
  store %struct.ssl_session_st* %call141, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %35 = bitcast %struct.ssl_session_st* %call141 to i8*
  %call142 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5171, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i64 0, i64 0), i8* noundef %35) #16
  %tobool143.not = icmp eq i32 %call142, 0
  br i1 %tobool143.not, label %end, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %if.end139
  %36 = bitcast %struct.ssl_cipher_st* %call140 to i8*
  %call145 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5172, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i64 0, i64 0), i8* noundef %36) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %end, label %lor.lhs.false147

lor.lhs.false147:                                 ; preds = %lor.lhs.false144
  %37 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call148 = call i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st* noundef %37, i8* noundef nonnull %4, i64 noundef 48) #16
  %cmp149 = icmp ne i32 %call148, 0
  %conv150 = zext i1 %cmp149 to i32
  %call151 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5174, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.535, i64 0, i64 0), i32 noundef %conv150) #16
  %tobool152.not = icmp eq i32 %call151, 0
  br i1 %tobool152.not, label %end, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %lor.lhs.false147
  %38 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call154 = call i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* noundef %38, %struct.ssl_cipher_st* noundef %call140) #16
  %cmp155 = icmp ne i32 %call154, 0
  %conv156 = zext i1 %cmp155 to i32
  %call157 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5175, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.536, i64 0, i64 0), i32 noundef %conv156) #16
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %end, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %lor.lhs.false153
  %39 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call160 = call i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* noundef %39, i32 noundef 772) #16
  %cmp161 = icmp ne i32 %call160, 0
  %conv162 = zext i1 %cmp161 to i32
  %call163 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5177, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.537, i64 0, i64 0), i32 noundef %conv162) #16
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %end, label %lor.lhs.false165

lor.lhs.false165:                                 ; preds = %lor.lhs.false159
  %40 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call166 = call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef %40) #16
  %cmp167 = icmp ne i32 %call166, 0
  %conv168 = zext i1 %cmp167 to i32
  %call169 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5178, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.432, i64 0, i64 0), i32 noundef %conv168) #16
  %tobool170.not = icmp eq i32 %call169, 0
  br i1 %tobool170.not, label %end, label %if.end172

if.end172:                                        ; preds = %lor.lhs.false165
  %41 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* %41, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %42 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %43 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call173 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %42, %struct.ssl_st* noundef %43, i32 noundef 0) #16
  %cmp174 = icmp ne i32 %call173, 0
  %conv175 = zext i1 %cmp174 to i32
  %call176 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5183, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv175) #16
  %tobool177.not = icmp eq i32 %call176, 0
  br i1 %tobool177.not, label %end, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.end172
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call179 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %44) #16
  %cmp180 = icmp ne i32 %call179, 0
  %conv181 = zext i1 %cmp180 to i32
  %call182 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5184, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv181) #16
  %tobool183.not = icmp eq i32 %call182, 0
  br i1 %tobool183.not, label %end, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %lor.lhs.false178
  %45 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call185 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %45) #16
  %cmp186 = icmp ne i32 %call185, 0
  %conv187 = zext i1 %cmp186 to i32
  %call188 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5185, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv187) #16
  %tobool189.not = icmp eq i32 %call188, 0
  br i1 %tobool189.not, label %end, label %if.end191

if.end191:                                        ; preds = %lor.lhs.false184
  %46 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  br i1 %31, label %if.then197, label %if.else227

if.then197:                                       ; preds = %if.end191
  %cmp198 = icmp eq i32 %46, 1
  %conv199 = zext i1 %cmp198 to i32
  %call202 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5189, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.529, i64 0, i64 0), i32 noundef %conv199) #16
  %tobool203.not = icmp eq i32 %call202, 0
  br i1 %tobool203.not, label %end, label %lor.lhs.false204

lor.lhs.false204:                                 ; preds = %if.then197
  %47 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp205 = icmp eq i32 %47, 1
  %conv206 = zext i1 %cmp205 to i32
  %call209 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5190, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.538, i64 0, i64 0), i32 noundef %conv206) #16
  %tobool210.not = icmp eq i32 %call209, 0
  br i1 %tobool210.not, label %end, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %lor.lhs.false204
  %48 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp212 = icmp eq i32 %48, 0
  %conv213 = zext i1 %cmp212 to i32
  %call216 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5191, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.539, i64 0, i64 0), i32 noundef %conv213) #16
  %tobool217.not = icmp eq i32 %call216, 0
  br i1 %tobool217.not, label %end, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %lor.lhs.false211
  %49 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp219 = icmp eq i32 %49, 0
  %conv220 = zext i1 %cmp219 to i32
  %call223 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5192, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.532, i64 0, i64 0), i32 noundef %conv220) #16
  %tobool224.not = icmp eq i32 %call223, 0
  br i1 %tobool224.not, label %end, label %if.end257

if.else227:                                       ; preds = %if.end191
  %cmp228 = icmp eq i32 %46, 0
  %conv229 = zext i1 %cmp228 to i32
  %call232 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5195, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.533, i64 0, i64 0), i32 noundef %conv229) #16
  %tobool233.not = icmp eq i32 %call232, 0
  br i1 %tobool233.not, label %end, label %lor.lhs.false234

lor.lhs.false234:                                 ; preds = %if.else227
  %50 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp235 = icmp eq i32 %50, 0
  %conv236 = zext i1 %cmp235 to i32
  %call239 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5196, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.530, i64 0, i64 0), i32 noundef %conv236) #16
  %tobool240.not = icmp eq i32 %call239, 0
  br i1 %tobool240.not, label %end, label %lor.lhs.false241

lor.lhs.false241:                                 ; preds = %lor.lhs.false234
  %51 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp242 = icmp eq i32 %51, 1
  %conv243 = zext i1 %cmp242 to i32
  %call246 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5197, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.534, i64 0, i64 0), i32 noundef %conv243) #16
  %tobool247.not = icmp eq i32 %call246, 0
  br i1 %tobool247.not, label %end, label %lor.lhs.false248

lor.lhs.false248:                                 ; preds = %lor.lhs.false241
  %52 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp249 = icmp eq i32 %52, 1
  %conv250 = zext i1 %cmp249 to i32
  %call253 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5198, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.540, i64 0, i64 0), i32 noundef %conv250) #16
  %tobool254.not = icmp eq i32 %call253, 0
  br i1 %tobool254.not, label %end, label %if.end257

if.end257:                                        ; preds = %lor.lhs.false248, %lor.lhs.false218
  %53 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %54 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %53, %struct.ssl_st* noundef %54) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %55 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %56 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call258 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %55, %struct.ssl_ctx_st* noundef %56, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp259 = icmp ne i32 %call258, 0
  %conv260 = zext i1 %cmp259 to i32
  %call261 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5208, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv260) #16
  %tobool262.not = icmp eq i32 %call261, 0
  br i1 %tobool262.not, label %end, label %if.end264

if.end264:                                        ; preds = %if.end257
  %57 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call265 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %57, i32 noundef 92, i64 noundef 0, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.444, i64 0, i64 0)) #16
  %cmp266 = icmp ne i64 %call265, 0
  %conv267 = zext i1 %cmp266 to i32
  %call268 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5216, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.443, i64 0, i64 0), i32 noundef %conv267) #16
  %tobool269.not = icmp eq i32 %call268, 0
  br i1 %tobool269.not, label %end, label %if.end271

if.end271:                                        ; preds = %if.end264
  %58 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %59 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call272 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %58, %struct.ssl_st* noundef %59, i32 noundef 0) #16
  %cmp273 = icmp ne i32 %call272, 0
  %conv274 = zext i1 %cmp273 to i32
  %call275 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5224, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv274) #16
  %tobool276.not = icmp eq i32 %call275, 0
  br i1 %tobool276.not, label %end, label %lor.lhs.false277

lor.lhs.false277:                                 ; preds = %if.end271
  %60 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call278 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %60) #16
  %cmp279 = icmp ne i32 %call278, 0
  %conv280 = zext i1 %cmp279 to i32
  %call281 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5225, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv280) #16
  %tobool282.not = icmp eq i32 %call281, 0
  br i1 %tobool282.not, label %end, label %lor.lhs.false283

lor.lhs.false283:                                 ; preds = %lor.lhs.false277
  %61 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call284 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %61) #16
  %cmp285 = icmp ne i32 %call284, 0
  %conv286 = zext i1 %cmp285 to i32
  %call287 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5226, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv286) #16
  %tobool288.not = icmp eq i32 %call287, 0
  br i1 %tobool288.not, label %end, label %if.end290

if.end290:                                        ; preds = %lor.lhs.false283
  %62 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  br i1 %31, label %if.then296, label %if.else326

if.then296:                                       ; preds = %if.end290
  %cmp297 = icmp eq i32 %62, 2
  %conv298 = zext i1 %cmp297 to i32
  %call301 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5230, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.541, i64 0, i64 0), i32 noundef %conv298) #16
  %tobool302.not = icmp eq i32 %call301, 0
  br i1 %tobool302.not, label %end, label %lor.lhs.false303

lor.lhs.false303:                                 ; preds = %if.then296
  %63 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp304 = icmp eq i32 %63, 2
  %conv305 = zext i1 %cmp304 to i32
  %call308 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5231, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.542, i64 0, i64 0), i32 noundef %conv305) #16
  %tobool309.not = icmp eq i32 %call308, 0
  br i1 %tobool309.not, label %end, label %lor.lhs.false310

lor.lhs.false310:                                 ; preds = %lor.lhs.false303
  %64 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp311 = icmp eq i32 %64, 0
  %conv312 = zext i1 %cmp311 to i32
  %call315 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5232, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.539, i64 0, i64 0), i32 noundef %conv312) #16
  %tobool316.not = icmp eq i32 %call315, 0
  br i1 %tobool316.not, label %end, label %lor.lhs.false317

lor.lhs.false317:                                 ; preds = %lor.lhs.false310
  %65 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp318 = icmp eq i32 %65, 0
  %conv319 = zext i1 %cmp318 to i32
  %call322 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5233, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.532, i64 0, i64 0), i32 noundef %conv319) #16
  %tobool323.not = icmp eq i32 %call322, 0
  br i1 %tobool323.not, label %end, label %if.end356

if.else326:                                       ; preds = %if.end290
  %cmp327 = icmp eq i32 %62, 0
  %conv328 = zext i1 %cmp327 to i32
  %call331 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5236, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.533, i64 0, i64 0), i32 noundef %conv328) #16
  %tobool332.not = icmp eq i32 %call331, 0
  br i1 %tobool332.not, label %end, label %lor.lhs.false333

lor.lhs.false333:                                 ; preds = %if.else326
  %66 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp334 = icmp eq i32 %66, 0
  %conv335 = zext i1 %cmp334 to i32
  %call338 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5237, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.530, i64 0, i64 0), i32 noundef %conv335) #16
  %tobool339.not = icmp eq i32 %call338, 0
  br i1 %tobool339.not, label %end, label %lor.lhs.false340

lor.lhs.false340:                                 ; preds = %lor.lhs.false333
  %67 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp341 = icmp eq i32 %67, 2
  %conv342 = zext i1 %cmp341 to i32
  %call345 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5238, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.543, i64 0, i64 0), i32 noundef %conv342) #16
  %tobool346.not = icmp eq i32 %call345, 0
  br i1 %tobool346.not, label %end, label %lor.lhs.false347

lor.lhs.false347:                                 ; preds = %lor.lhs.false340
  %68 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp348 = icmp eq i32 %68, 2
  %conv349 = zext i1 %cmp348 to i32
  %call352 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5239, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.544, i64 0, i64 0), i32 noundef %conv349) #16
  %tobool353.not = icmp eq i32 %call352, 0
  br i1 %tobool353.not, label %end, label %if.end356

if.end356:                                        ; preds = %lor.lhs.false347, %lor.lhs.false317
  %69 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %70 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %69, %struct.ssl_st* noundef %70) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  br i1 %cmp, label %end, label %if.then359

if.then359:                                       ; preds = %if.end356
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.445, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  %71 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %72 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call360 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %71, %struct.ssl_ctx_st* noundef %72, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp361 = icmp ne i32 %call360, 0
  %conv362 = zext i1 %cmp361 to i32
  %call363 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5255, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv362) #16
  %tobool364.not = icmp eq i32 %call363, 0
  br i1 %tobool364.not, label %end, label %lor.lhs.false365

lor.lhs.false365:                                 ; preds = %if.then359
  %73 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %74 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call366 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %73, %struct.ssl_st* noundef %74, i32 noundef 0) #16
  %cmp367 = icmp ne i32 %call366, 0
  %conv368 = zext i1 %cmp367 to i32
  %call369 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5257, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv368) #16
  %tobool370.not = icmp eq i32 %call369, 0
  br i1 %tobool370.not, label %end, label %lor.lhs.false371

lor.lhs.false371:                                 ; preds = %lor.lhs.false365
  %75 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call372 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %75) #16
  %cmp373 = icmp ne i32 %call372, 0
  %conv374 = zext i1 %cmp373 to i32
  %call375 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5258, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv374) #16
  %tobool376.not = icmp eq i32 %call375, 0
  br i1 %tobool376.not, label %end, label %lor.lhs.false377

lor.lhs.false377:                                 ; preds = %lor.lhs.false371
  %76 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call378 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %76) #16
  %cmp379 = icmp ne i32 %call378, 0
  %conv380 = zext i1 %cmp379 to i32
  %call381 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5259, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv380) #16
  %tobool382.not = icmp eq i32 %call381, 0
  br i1 %tobool382.not, label %end, label %if.end384

if.end384:                                        ; preds = %lor.lhs.false377
  %77 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  br i1 %31, label %if.then390, label %if.else420

if.then390:                                       ; preds = %if.end384
  %cmp391 = icmp eq i32 %77, 1
  %conv392 = zext i1 %cmp391 to i32
  %call395 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5263, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.529, i64 0, i64 0), i32 noundef %conv392) #16
  %tobool396.not = icmp eq i32 %call395, 0
  br i1 %tobool396.not, label %end, label %lor.lhs.false397

lor.lhs.false397:                                 ; preds = %if.then390
  %78 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp398 = icmp eq i32 %78, 1
  %conv399 = zext i1 %cmp398 to i32
  %call402 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5264, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.538, i64 0, i64 0), i32 noundef %conv399) #16
  %tobool403.not = icmp eq i32 %call402, 0
  br i1 %tobool403.not, label %end, label %lor.lhs.false404

lor.lhs.false404:                                 ; preds = %lor.lhs.false397
  %79 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp405 = icmp eq i32 %79, 0
  %conv406 = zext i1 %cmp405 to i32
  %call409 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5265, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.539, i64 0, i64 0), i32 noundef %conv406) #16
  %tobool410.not = icmp eq i32 %call409, 0
  br i1 %tobool410.not, label %end, label %lor.lhs.false411

lor.lhs.false411:                                 ; preds = %lor.lhs.false404
  %80 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp412 = icmp eq i32 %80, %idx
  %conv413 = zext i1 %cmp412 to i32
  %call416 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5270, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.545, i64 0, i64 0), i32 noundef %conv413) #16
  %tobool417.not = icmp eq i32 %call416, 0
  br i1 %tobool417.not, label %end, label %if.end450

if.else420:                                       ; preds = %if.end384
  %cmp421 = icmp eq i32 %77, 0
  %conv422 = zext i1 %cmp421 to i32
  %call425 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5273, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.533, i64 0, i64 0), i32 noundef %conv422) #16
  %tobool426.not = icmp eq i32 %call425, 0
  br i1 %tobool426.not, label %end, label %lor.lhs.false427

lor.lhs.false427:                                 ; preds = %if.else420
  %81 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp428 = icmp eq i32 %81, 0
  %conv429 = zext i1 %cmp428 to i32
  %call432 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5274, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.530, i64 0, i64 0), i32 noundef %conv429) #16
  %tobool433.not = icmp eq i32 %call432, 0
  br i1 %tobool433.not, label %end, label %lor.lhs.false434

lor.lhs.false434:                                 ; preds = %lor.lhs.false427
  %82 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %cmp435 = icmp eq i32 %82, 1
  %conv436 = zext i1 %cmp435 to i32
  %call439 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5275, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.534, i64 0, i64 0), i32 noundef %conv436) #16
  %tobool440.not = icmp eq i32 %call439, 0
  br i1 %tobool440.not, label %end, label %lor.lhs.false441

lor.lhs.false441:                                 ; preds = %lor.lhs.false434
  %83 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %cmp442 = icmp eq i32 %83, 1
  %conv443 = zext i1 %cmp442 to i32
  %call446 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.540, i64 0, i64 0), i32 noundef %conv443) #16
  %tobool447.not = icmp eq i32 %call446, 0
  br i1 %tobool447.not, label %end, label %if.end450

if.end450:                                        ; preds = %lor.lhs.false441, %lor.lhs.false411
  %84 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %85 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %84, %struct.ssl_st* noundef %85) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  br label %end

end:                                              ; preds = %if.end356, %if.end450, %if.else420, %lor.lhs.false427, %lor.lhs.false434, %lor.lhs.false441, %if.then390, %lor.lhs.false397, %lor.lhs.false404, %lor.lhs.false411, %if.then359, %lor.lhs.false365, %lor.lhs.false371, %lor.lhs.false377, %if.else326, %lor.lhs.false333, %lor.lhs.false340, %lor.lhs.false347, %if.then296, %lor.lhs.false303, %lor.lhs.false310, %lor.lhs.false317, %if.end271, %lor.lhs.false277, %lor.lhs.false283, %if.end264, %if.end257, %if.else227, %lor.lhs.false234, %lor.lhs.false241, %lor.lhs.false248, %if.then197, %lor.lhs.false204, %lor.lhs.false211, %lor.lhs.false218, %if.end172, %lor.lhs.false178, %lor.lhs.false184, %if.end139, %lor.lhs.false144, %lor.lhs.false147, %lor.lhs.false153, %lor.lhs.false159, %lor.lhs.false165, %if.end132, %if.else101, %lor.lhs.false108, %lor.lhs.false115, %lor.lhs.false122, %if.then71, %lor.lhs.false78, %lor.lhs.false85, %lor.lhs.false92, %if.then40, %lor.lhs.false46, %lor.lhs.false52, %lor.lhs.false58, %if.else, %if.then12, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false411 ], [ 0, %lor.lhs.false404 ], [ 0, %lor.lhs.false397 ], [ 0, %if.then390 ], [ 0, %lor.lhs.false441 ], [ 0, %lor.lhs.false434 ], [ 0, %lor.lhs.false427 ], [ 0, %if.else420 ], [ 0, %lor.lhs.false377 ], [ 0, %lor.lhs.false371 ], [ 0, %lor.lhs.false365 ], [ 0, %if.then359 ], [ 0, %lor.lhs.false317 ], [ 0, %lor.lhs.false310 ], [ 0, %lor.lhs.false303 ], [ 0, %if.then296 ], [ 0, %lor.lhs.false347 ], [ 0, %lor.lhs.false340 ], [ 0, %lor.lhs.false333 ], [ 0, %if.else326 ], [ 0, %lor.lhs.false283 ], [ 0, %lor.lhs.false277 ], [ 0, %if.end271 ], [ 0, %if.end264 ], [ 0, %if.end257 ], [ 0, %lor.lhs.false218 ], [ 0, %lor.lhs.false211 ], [ 0, %lor.lhs.false204 ], [ 0, %if.then197 ], [ 0, %lor.lhs.false248 ], [ 0, %lor.lhs.false241 ], [ 0, %lor.lhs.false234 ], [ 0, %if.else227 ], [ 0, %lor.lhs.false184 ], [ 0, %lor.lhs.false178 ], [ 0, %if.end172 ], [ 0, %lor.lhs.false165 ], [ 0, %lor.lhs.false159 ], [ 0, %lor.lhs.false153 ], [ 0, %lor.lhs.false147 ], [ 0, %lor.lhs.false144 ], [ 0, %if.end139 ], [ 0, %if.end132 ], [ 0, %lor.lhs.false92 ], [ 0, %lor.lhs.false85 ], [ 0, %lor.lhs.false78 ], [ 0, %if.then71 ], [ 0, %lor.lhs.false122 ], [ 0, %lor.lhs.false115 ], [ 0, %lor.lhs.false108 ], [ 0, %if.else101 ], [ 0, %lor.lhs.false58 ], [ 0, %lor.lhs.false52 ], [ 0, %lor.lhs.false46 ], [ 0, %if.then40 ], [ 0, %if.then12 ], [ 0, %if.else ], [ 0, %entry ], [ 1, %if.end450 ], [ 1, %if.end356 ]
  %86 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %86) #16
  %87 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %87) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %88 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %88) #16
  %89 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %89) #16
  %90 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %90) #16
  %91 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %91) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_exchange(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %kexch_alg = alloca i32, align 4
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = bitcast i32* %kexch_alg to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  switch i32 %idx, label %cleanup [
    i32 12, label %sw.bb
    i32 0, label %sw.epilog
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
    i32 4, label %sw.bb5
    i32 5, label %sw.bb6
    i32 13, label %sw.bb7
    i32 6, label %sw.bb8
    i32 7, label %sw.bb9
    i32 8, label %sw.bb10
    i32 9, label %sw.bb11
    i32 10, label %sw.bb12
    i32 11, label %sw.bb13
  ]

sw.bb:                                            ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  store i32 415, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  store i32 715, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  store i32 716, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  store i32 1034, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  store i32 1035, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  br label %sw.bb8

sw.bb8:                                           ; preds = %entry, %sw.bb7
  %max_version.1 = phi i32 [ 772, %entry ], [ 771, %sw.bb7 ]
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  store i32 1126, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb10:                                          ; preds = %entry
  store i32 1127, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  store i32 1128, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  store i32 1129, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.bb13:                                          ; preds = %entry
  store i32 1130, i32* %kexch_alg, align 4, !tbaa !7
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2
  %kexch_groups.0 = phi i32* [ %kexch_alg, %sw.bb13 ], [ %kexch_alg, %sw.bb12 ], [ %kexch_alg, %sw.bb11 ], [ %kexch_alg, %sw.bb10 ], [ %kexch_alg, %sw.bb9 ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @ffdhe_kexch_groups, i64 0, i64 0), %sw.bb8 ], [ %kexch_alg, %sw.bb6 ], [ %kexch_alg, %sw.bb5 ], [ %kexch_alg, %sw.bb4 ], [ %kexch_alg, %sw.bb3 ], [ %kexch_alg, %sw.bb2 ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @ecdhe_kexch_groups, i64 0, i64 0), %entry ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @ecdhe_kexch_groups, i64 0, i64 0), %sw.bb ]
  %kexch_groups_size.0 = phi i64 [ 1, %sw.bb13 ], [ 1, %sw.bb12 ], [ 1, %sw.bb11 ], [ 1, %sw.bb10 ], [ 1, %sw.bb9 ], [ 5, %sw.bb8 ], [ 1, %sw.bb6 ], [ 1, %sw.bb5 ], [ 1, %sw.bb4 ], [ 1, %sw.bb3 ], [ 1, %sw.bb2 ], [ 5, %entry ], [ 5, %sw.bb ]
  %max_version.2 = phi i32 [ 772, %sw.bb13 ], [ 772, %sw.bb12 ], [ 772, %sw.bb11 ], [ 772, %sw.bb10 ], [ 772, %sw.bb9 ], [ %max_version.1, %sw.bb8 ], [ 772, %sw.bb6 ], [ 772, %sw.bb5 ], [ 772, %sw.bb4 ], [ 772, %sw.bb3 ], [ 772, %sw.bb2 ], [ 772, %entry ], [ 771, %sw.bb ]
  %kexch_name0.0 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.555, i64 0, i64 0), %sw.bb13 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.554, i64 0, i64 0), %sw.bb12 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.553, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.552, i64 0, i64 0), %sw.bb10 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.551, i64 0, i64 0), %sw.bb9 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.551, i64 0, i64 0), %sw.bb8 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.550, i64 0, i64 0), %sw.bb6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.549, i64 0, i64 0), %sw.bb5 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.548, i64 0, i64 0), %sw.bb4 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.547, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.546, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.546, i64 0, i64 0), %entry ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.546, i64 0, i64 0), %sw.bb ]
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call14 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call15 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call14, i32 noundef 769, i32 noundef %max_version.2, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call15, 0
  %conv = zext i1 %cmp to i32
  %call16 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4626, i8* noundef getelementptr inbounds ([126 x i8], [126 x i8]* @.str.556, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call16, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %sw.epilog
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call17 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %8, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp18 = icmp ne i32 %call17, 0
  %conv19 = zext i1 %cmp18 to i32
  %call20 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4630, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.557, i64 0, i64 0), i32 noundef %conv19) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %end, label %if.end23

if.end23:                                         ; preds = %if.end
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call24 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %9, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.480, i64 0, i64 0)) #16
  %cmp25 = icmp ne i32 %call24, 0
  %conv26 = zext i1 %cmp25 to i32
  %call27 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4634, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.558, i64 0, i64 0), i32 noundef %conv26) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %end, label %if.end30

if.end30:                                         ; preds = %if.end23
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call31 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %10, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.560, i64 0, i64 0)) #16
  %cmp32 = icmp ne i32 %call31, 0
  %conv33 = zext i1 %cmp32 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4639, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.559, i64 0, i64 0), i32 noundef %conv33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end30
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call36 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %11, i32 noundef 118, i64 noundef 1, i8* noundef null) #16
  %cmp37 = icmp ne i64 %call36, 0
  %conv38 = zext i1 %cmp37 to i32
  %call39 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4640, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.561, i64 0, i64 0), i32 noundef %conv38) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %if.end42

if.end42:                                         ; preds = %lor.lhs.false
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call43 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %12, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.560, i64 0, i64 0)) #16
  %cmp44 = icmp ne i32 %call43, 0
  %conv45 = zext i1 %cmp44 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4650, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.562, i64 0, i64 0), i32 noundef %conv45) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %if.end42
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call50 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %13, %struct.ssl_ctx_st* noundef %14, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4655, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %if.end56

if.end56:                                         ; preds = %if.end49
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %16 = bitcast i32* %kexch_groups.0 to i8*
  %call58 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %15, i32 noundef 91, i64 noundef %kexch_groups_size.0, i8* noundef %16) #16
  %cmp59 = icmp ne i64 %call58, 0
  %conv60 = zext i1 %cmp59 to i32
  %call61 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4658, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.563, i64 0, i64 0), i32 noundef %conv60) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %end, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %if.end56
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call65 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %17, i32 noundef 91, i64 noundef %kexch_groups_size.0, i8* noundef %16) #16
  %cmp66 = icmp ne i64 %call65, 0
  %conv67 = zext i1 %cmp66 to i32
  %call68 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4659, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.564, i64 0, i64 0), i32 noundef %conv67) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %if.end71

if.end71:                                         ; preds = %lor.lhs.false63
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call72 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 0) #16
  %cmp73 = icmp ne i32 %call72, 0
  %conv74 = zext i1 %cmp73 to i32
  %call75 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4662, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv74) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %if.end78

if.end78:                                         ; preds = %if.end71
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call79 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %20, i32 noundef 93, i64 noundef 0, i8* noundef null) #16
  %conv80 = trunc i64 %call79 to i32
  %cmp81 = icmp eq i32 %idx, 13
  br i1 %cmp81, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end78
  %21 = load i32, i32* %kexch_groups.0, align 4, !tbaa !7
  br label %cond.end

cond.end:                                         ; preds = %if.end78, %cond.false
  %cond = phi i32 [ %21, %cond.false ], [ 0, %if.end78 ]
  %call83 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4671, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.565, i64 0, i64 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.566, i64 0, i64 0), i32 noundef %conv80, i32 noundef %cond) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %if.end86

if.end86:                                         ; preds = %cond.end
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load i32, i32* %kexch_groups.0, align 4, !tbaa !7
  %call88 = call i8* @SSL_group_to_name(%struct.ssl_st* noundef %22, i32 noundef %23) #16
  %call89 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4675, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.567, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.568, i64 0, i64 0), i8* noundef %call88, i8* noundef %kexch_name0.0) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %if.end92

if.end92:                                         ; preds = %if.end86
  br i1 %cmp81, label %if.end110, label %if.then95

if.then95:                                        ; preds = %if.end92
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call96 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %24, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv97 = trunc i64 %call96 to i32
  %25 = load i32, i32* %kexch_groups.0, align 4, !tbaa !7
  %call99 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4680, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.569, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.570, i64 0, i64 0), i32 noundef %conv97, i32 noundef %25) #16
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %end, label %if.end102

if.end102:                                        ; preds = %if.then95
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call103 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %26, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv104 = trunc i64 %call103 to i32
  %27 = load i32, i32* %kexch_groups.0, align 4, !tbaa !7
  %call106 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4682, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.571, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.570, i64 0, i64 0), i32 noundef %conv104, i32 noundef %27) #16
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %end, label %if.end110

if.end110:                                        ; preds = %if.end102, %if.end92
  br label %end

end:                                              ; preds = %if.end102, %if.then95, %if.end86, %cond.end, %if.end71, %if.end56, %lor.lhs.false63, %if.end49, %if.end42, %if.end30, %lor.lhs.false, %if.end23, %if.end, %sw.epilog, %if.end110
  %testresult.0 = phi i32 [ 1, %if.end110 ], [ 0, %if.end102 ], [ 0, %if.then95 ], [ 0, %if.end86 ], [ 0, %cond.end ], [ 0, %if.end71 ], [ 0, %lor.lhs.false63 ], [ 0, %if.end56 ], [ 0, %if.end49 ], [ 0, %if.end42 ], [ 0, %lor.lhs.false ], [ 0, %if.end30 ], [ 0, %if.end23 ], [ 0, %if.end ], [ 0, %sw.epilog ]
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %30) #16
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %31) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_negotiated_group(i32 noundef %idx) #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %cmp = icmp slt i32 %idx, 20
  %conv = zext i1 %cmp to i32
  %rem = srem i32 %idx, 20
  %cmp2 = icmp slt i32 %rem, 10
  %rem4.lhs.trunc = trunc i32 %rem to i8
  %rem4251 = srem i8 %rem4.lhs.trunc, 10
  %rem4.sext = sext i8 %rem4251 to i32
  %cmp5 = icmp slt i8 %rem4251, 5
  %conv6 = zext i1 %cmp5 to i32
  %sub = add nsw i32 %rem4.sext, -5
  %spec.select = select i1 %cmp5, i32 %rem4.sext, i32 %sub
  %idxprom = sext i32 %spec.select to i64
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @ecdhe_kexch_groups, i64 0, i64 %idxprom
  %arrayidx10 = getelementptr inbounds [5 x i32], [5 x i32]* @ffdhe_kexch_groups, i64 0, i64 %idxprom
  %kexch_alg.0.in = select i1 %cmp5, i32* %arrayidx, i32* %arrayidx10
  %kexch_alg.0 = load i32, i32* %kexch_alg.0.in, align 4, !tbaa !7
  %or.cond = or i1 %cmp2, %cmp5
  %expectednid.0 = select i1 %or.cond, i32 %kexch_alg.0, i32 0
  %max_version.0 = select i1 %cmp2, i32 772, i32 771
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call20 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call21 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call20, i32 noundef 769, i32 noundef %max_version.0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp22 = icmp ne i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4801, i8* noundef getelementptr inbounds ([126 x i8], [126 x i8]* @.str.556, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call28 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %7, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.560, i64 0, i64 0)) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4810, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.559, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end27
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call33 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %8, i32 noundef 118, i64 noundef 1, i8* noundef null) #16
  %cmp34 = icmp ne i64 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4811, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.561, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %if.end39

if.end39:                                         ; preds = %lor.lhs.false
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call40 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %9, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.560, i64 0, i64 0)) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4815, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.562, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %if.end39
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call47 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %10, %struct.ssl_ctx_st* noundef %11, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4819, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %if.end53

if.end53:                                         ; preds = %if.end46
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call54 = call fastcc i32 @set_ssl_groups(%struct.ssl_st* noundef %12, %struct.ssl_st* noundef %13, i32 noundef %conv, i32 noundef %conv6, i32 noundef %spec.select) #18
  %cmp55 = icmp ne i32 %call54, 0
  %conv56 = zext i1 %cmp55 to i32
  %call57 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4823, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.572, i64 0, i64 0), i32 noundef %conv56) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %if.end60

if.end60:                                         ; preds = %if.end53
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call61 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0) #16
  %cmp62 = icmp ne i32 %call61, 0
  %conv63 = zext i1 %cmp62 to i32
  %call64 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4826, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %if.end67

if.end67:                                         ; preds = %if.end60
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call68 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %16, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv69 = trunc i64 %call68 to i32
  %call70 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4830, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.571, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv69, i32 noundef %expectednid.0) #16
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %end, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %if.end67
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call73 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %17, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv74 = trunc i64 %call73 to i32
  %call75 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4831, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.569, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv74, i32 noundef %expectednid.0) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %if.end78

if.end78:                                         ; preds = %lor.lhs.false72
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call79 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %18) #16
  %19 = bitcast %struct.ssl_session_st* %call79 to i8*
  %call80 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4834, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.574, i64 0, i64 0), i8* noundef %19) #16
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %end, label %if.end83

if.end83:                                         ; preds = %if.end78
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call84 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %20) #16
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call85 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %22) #16
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %23) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call86 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %24, %struct.ssl_ctx_st* noundef %25, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp87 = icmp ne i32 %call86, 0
  %conv88 = zext i1 %cmp87 to i32
  %call89 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4845, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv88) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %if.end83
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call92 = call i32 @SSL_set_session(%struct.ssl_st* noundef %26, %struct.ssl_session_st* noundef %call79) #16
  %cmp93 = icmp ne i32 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4846, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.575, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %lor.lhs.false91
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call98 = call fastcc i32 @set_ssl_groups(%struct.ssl_st* noundef %27, %struct.ssl_st* noundef %28, i32 noundef %conv, i32 noundef %conv6, i32 noundef %spec.select) #18
  %cmp99 = icmp ne i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  %call101 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4848, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.572, i64 0, i64 0), i32 noundef %conv100) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %if.end104

if.end104:                                        ; preds = %lor.lhs.false97
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call105 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %29, %struct.ssl_st* noundef %30, i32 noundef 0) #16
  %cmp106 = icmp ne i32 %call105, 0
  %conv107 = zext i1 %cmp106 to i32
  %call108 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4851, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv107) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.end104
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call111 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %31) #16
  %cmp112 = icmp ne i32 %call111, 0
  %conv113 = zext i1 %cmp112 to i32
  %call114 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4852, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv113) #16
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %end, label %if.end117

if.end117:                                        ; preds = %lor.lhs.false110
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call118 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %32, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv119 = trunc i64 %call118 to i32
  %call120 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4856, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.571, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv119, i32 noundef %expectednid.0) #16
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %end, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %if.end117
  %33 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call123 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %33, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv124 = trunc i64 %call123 to i32
  %call125 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4857, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.569, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv124, i32 noundef %expectednid.0) #16
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %end, label %if.end128

if.end128:                                        ; preds = %lor.lhs.false122
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call129 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %34) #16
  %35 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call130 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %35) #16
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %36) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %37) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %cmp131 = icmp eq i32 %spec.select, 0
  %dec = add nsw i32 %spec.select, -1
  %idx.addr.1 = select i1 %cmp131, i32 1, i32 %dec
  br i1 %cmp2, label %if.then137, label %if.else150

if.then137:                                       ; preds = %if.end128
  %idxprom140 = sext i32 %idx.addr.1 to i64
  %arrayidx141 = getelementptr inbounds [5 x i32], [5 x i32]* @ecdhe_kexch_groups, i64 0, i64 %idxprom140
  %arrayidx144 = getelementptr inbounds [5 x i32], [5 x i32]* @ffdhe_kexch_groups, i64 0, i64 %idxprom140
  %expectednid.1.in = select i1 %cmp5, i32* %arrayidx141, i32* %arrayidx144
  %expectednid.1 = load i32, i32* %expectednid.1.in, align 4, !tbaa !7
  %call146 = call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4881, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.576, i64 0, i64 0), i32 noundef %expectednid.1, i32 noundef %kexch_alg.0) #16
  %tobool147.not = icmp eq i32 %call146, 0
  br i1 %tobool147.not, label %end, label %if.end155

if.else150:                                       ; preds = %if.end128
  %kexch_alg.0. = select i1 %cmp5, i32 %kexch_alg.0, i32 0
  br label %if.end155

if.end155:                                        ; preds = %if.else150, %if.then137
  %expectednid.2 = phi i32 [ %expectednid.1, %if.then137 ], [ %kexch_alg.0., %if.else150 ]
  %38 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %39 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call156 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %38, %struct.ssl_ctx_st* noundef %39, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp157 = icmp ne i32 %call156, 0
  %conv158 = zext i1 %cmp157 to i32
  %call159 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4891, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv158) #16
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %end, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %if.end155
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call162 = call i32 @SSL_set_session(%struct.ssl_st* noundef %40, %struct.ssl_session_st* noundef %call79) #16
  %cmp163 = icmp ne i32 %call162, 0
  %conv164 = zext i1 %cmp163 to i32
  %call165 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4892, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.575, i64 0, i64 0), i32 noundef %conv164) #16
  %tobool166.not = icmp eq i32 %call165, 0
  br i1 %tobool166.not, label %end, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %lor.lhs.false161
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call168 = call fastcc i32 @set_ssl_groups(%struct.ssl_st* noundef %41, %struct.ssl_st* noundef %42, i32 noundef %conv, i32 noundef %conv6, i32 noundef %idx.addr.1) #18
  %cmp169 = icmp ne i32 %call168, 0
  %conv170 = zext i1 %cmp169 to i32
  %call171 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4894, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.572, i64 0, i64 0), i32 noundef %conv170) #16
  %tobool172.not = icmp eq i32 %call171, 0
  br i1 %tobool172.not, label %end, label %if.end174

if.end174:                                        ; preds = %lor.lhs.false167
  %43 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call175 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %43, %struct.ssl_st* noundef %44, i32 noundef 0) #16
  %cmp176 = icmp ne i32 %call175, 0
  %conv177 = zext i1 %cmp176 to i32
  %call178 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4897, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv177) #16
  %tobool179.not = icmp eq i32 %call178, 0
  br i1 %tobool179.not, label %end, label %lor.lhs.false180

lor.lhs.false180:                                 ; preds = %if.end174
  %45 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call181 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %45) #16
  %cmp182 = icmp ne i32 %call181, 0
  %conv183 = zext i1 %cmp182 to i32
  %call184 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4898, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv183) #16
  %tobool185.not = icmp eq i32 %call184, 0
  br i1 %tobool185.not, label %end, label %if.end187

if.end187:                                        ; preds = %lor.lhs.false180
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call188 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %46, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv189 = trunc i64 %call188 to i32
  %call190 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4902, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.571, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv189, i32 noundef %expectednid.2) #16
  %tobool191.not = icmp eq i32 %call190, 0
  br i1 %tobool191.not, label %end, label %lor.lhs.false192

lor.lhs.false192:                                 ; preds = %if.end187
  %47 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call193 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %47, i32 noundef 134, i64 noundef 0, i8* noundef null) #16
  %conv194 = trunc i64 %call193 to i32
  %call195 = call i32 @test_uint_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4903, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.569, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.573, i64 0, i64 0), i32 noundef %conv194, i32 noundef %expectednid.2) #16
  %tobool196.not = icmp ne i32 %call195, 0
  %spec.select250 = zext i1 %tobool196.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false192, %if.end187, %if.end174, %lor.lhs.false180, %if.end155, %lor.lhs.false161, %lor.lhs.false167, %if.then137, %if.end117, %lor.lhs.false122, %if.end104, %lor.lhs.false110, %if.end83, %lor.lhs.false91, %lor.lhs.false97, %if.end78, %if.end67, %lor.lhs.false72, %if.end60, %if.end53, %if.end46, %if.end39, %if.end27, %lor.lhs.false, %entry
  %origsess.0 = phi %struct.ssl_session_st* [ %call79, %if.end187 ], [ %call79, %lor.lhs.false180 ], [ %call79, %if.end174 ], [ %call79, %lor.lhs.false167 ], [ %call79, %lor.lhs.false161 ], [ %call79, %if.end155 ], [ %call79, %if.then137 ], [ %call79, %lor.lhs.false122 ], [ %call79, %if.end117 ], [ %call79, %lor.lhs.false110 ], [ %call79, %if.end104 ], [ %call79, %lor.lhs.false97 ], [ %call79, %lor.lhs.false91 ], [ %call79, %if.end83 ], [ %call79, %if.end78 ], [ null, %lor.lhs.false72 ], [ null, %if.end67 ], [ null, %if.end60 ], [ null, %if.end53 ], [ null, %if.end46 ], [ null, %if.end39 ], [ null, %lor.lhs.false ], [ null, %if.end27 ], [ null, %entry ], [ %call79, %lor.lhs.false192 ]
  %testresult.0 = phi i32 [ 0, %if.end187 ], [ 0, %lor.lhs.false180 ], [ 0, %if.end174 ], [ 0, %lor.lhs.false167 ], [ 0, %lor.lhs.false161 ], [ 0, %if.end155 ], [ 0, %if.then137 ], [ 0, %lor.lhs.false122 ], [ 0, %if.end117 ], [ 0, %lor.lhs.false110 ], [ 0, %if.end104 ], [ 0, %lor.lhs.false97 ], [ 0, %lor.lhs.false91 ], [ 0, %if.end83 ], [ 0, %if.end78 ], [ 0, %lor.lhs.false72 ], [ 0, %if.end67 ], [ 0, %if.end60 ], [ 0, %if.end53 ], [ 0, %if.end46 ], [ 0, %if.end39 ], [ 0, %lor.lhs.false ], [ 0, %if.end27 ], [ 0, %entry ], [ %spec.select250, %lor.lhs.false192 ]
  %48 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %48) #16
  %49 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %49) #16
  %50 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %50) #16
  %51 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %51) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %origsess.0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_custom_exts(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx2 = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_ctx_st** %sctx2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i32 0, i32* @srvparseoldcb, align 4, !tbaa !7
  store i32 0, i32* @srvaddoldcb, align 4, !tbaa !7
  store i32 0, i32* @clntparseoldcb, align 4, !tbaa !7
  store i32 0, i32* @clntaddoldcb, align 4, !tbaa !7
  store i32 0, i32* @srvparsenewcb, align 4, !tbaa !7
  store i32 0, i32* @srvaddnewcb, align 4, !tbaa !7
  store i32 0, i32* @clntparsenewcb, align 4, !tbaa !7
  store i32 0, i32* @clntaddnewcb, align 4, !tbaa !7
  store i32 0, i32* @snicb, align 4, !tbaa !7
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5568, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %tst, 2
  br i1 %cmp4, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call6 = call %struct.ssl_method_st* @TLS_server_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call7 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call6, %struct.ssl_method_st* noundef null, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx2, %struct.ssl_ctx_st** noundef null, i8* noundef %9, i8* noundef %10) #16
  %cmp8 = icmp ne i32 %call7, 0
  %conv9 = zext i1 %cmp8 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5574, i8* noundef getelementptr inbounds ([101 x i8], [101 x i8]* @.str.583, i64 0, i64 0), i32 noundef %conv9) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end, label %if.then16

if.end13:                                         ; preds = %if.end
  %cmp14 = icmp slt i32 %tst, 3
  br i1 %cmp14, label %if.then16, label %if.end24.thread

if.end24.thread:                                  ; preds = %if.end13
  %cmp25329 = icmp eq i32 %tst, 4
  %.330 = select i1 %cmp25329, i32 14208, i32 1408
  br label %if.else39

if.then16:                                        ; preds = %land.lhs.true, %if.end13
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call17 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %11, i64 noundef 536870912) #16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call18 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %12, i64 noundef 536870912) #16
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  %cmp19.not = icmp eq %struct.ssl_ctx_st* %13, null
  br i1 %cmp19.not, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.then16
  %call22 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef nonnull %13, i64 noundef 536870912) #16
  br label %if.end24

if.end24:                                         ; preds = %if.then16, %if.then21
  %cmp29 = icmp eq i32 %tst, 0
  br i1 %cmp29, label %if.then31, label %if.else39

if.then31:                                        ; preds = %if.end24
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call32 = call i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st* noundef %14, i32 noundef 65280, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef nonnull @old_add_cb, void (%struct.ssl_st*, i32, i8*, i8*)* noundef nonnull @old_free_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*), i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef nonnull @old_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*)) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5603, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.584, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end47

if.else39:                                        ; preds = %if.end24.thread, %if.end24
  %.332 = phi i32 [ %.330, %if.end24.thread ], [ 1408, %if.end24 ]
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call40 = call i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef %15, i32 noundef 65280, i32 noundef %.332, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_add_cb, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef nonnull @new_free_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*), i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*)) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5608, i8* noundef getelementptr inbounds ([111 x i8], [111 x i8]* @.str.585, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end47

if.end47:                                         ; preds = %if.else39, %if.then31
  %cmp29335 = phi i1 [ false, %if.else39 ], [ true, %if.then31 ]
  %.333 = phi i32 [ %.332, %if.else39 ], [ 1408, %if.then31 ]
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call48 = call i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st* noundef %16, i32 noundef 65280, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef nonnull @old_add_cb, void (%struct.ssl_st*, i32, i8*, i8*)* noundef nonnull @old_free_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*), i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef nonnull @old_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*)) #16
  %cmp49 = icmp ne i32 %call48, 0
  %conv50 = zext i1 %cmp49 to i32
  %call51 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5616, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.584, i64 0, i64 0), i32 noundef %conv50) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end47
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call53 = call i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef %17, i32 noundef 65280, i32 noundef %.333, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_add_cb, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef nonnull @new_free_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*), i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.client to i8*)) #16
  %cmp54 = icmp ne i32 %call53, 0
  %conv55 = zext i1 %cmp54 to i32
  %call56 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5620, i8* noundef getelementptr inbounds ([111 x i8], [111 x i8]* @.str.585, i64 0, i64 0), i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %if.end59

if.end59:                                         ; preds = %lor.lhs.false
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  br i1 %cmp29335, label %if.then62, label %if.else70

if.then62:                                        ; preds = %if.end59
  %call63 = call i32 @SSL_CTX_add_server_custom_ext(%struct.ssl_ctx_st* noundef %18, i32 noundef 65280, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef nonnull @old_add_cb, void (%struct.ssl_st*, i32, i8*, i8*)* noundef nonnull @old_free_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*), i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef nonnull @old_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*)) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5628, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.586, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end88

if.else70:                                        ; preds = %if.end59
  %call71 = call i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef %18, i32 noundef 65280, i32 noundef %.333, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_add_cb, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef nonnull @new_free_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*), i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*)) #16
  %cmp72 = icmp ne i32 %call71, 0
  %conv73 = zext i1 %cmp72 to i32
  %call74 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5633, i8* noundef getelementptr inbounds ([111 x i8], [111 x i8]* @.str.587, i64 0, i64 0), i32 noundef %conv73) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %if.end77

if.end77:                                         ; preds = %if.else70
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  %cmp78.not = icmp eq %struct.ssl_ctx_st* %19, null
  br i1 %cmp78.not, label %if.end88, label %land.lhs.true80

land.lhs.true80:                                  ; preds = %if.end77
  %call81 = call i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef nonnull %19, i32 noundef 65280, i32 noundef %.333, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_add_cb, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef nonnull @new_free_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*), i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*)) #16
  %cmp82 = icmp ne i32 %call81, 0
  %conv83 = zext i1 %cmp82 to i32
  %call84 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5639, i8* noundef getelementptr inbounds ([112 x i8], [112 x i8]* @.str.588, i64 0, i64 0), i32 noundef %conv83) #16
  %tobool85.not = icmp eq i32 %call84, 0
  br i1 %tobool85.not, label %end, label %if.end88

if.end88:                                         ; preds = %if.end77, %land.lhs.true80, %if.then62
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call89 = call i32 @SSL_CTX_add_server_custom_ext(%struct.ssl_ctx_st* noundef %20, i32 noundef 65280, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef nonnull @old_add_cb, void (%struct.ssl_st*, i32, i8*, i8*)* noundef nonnull @old_free_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*), i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef nonnull @old_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*)) #16
  %cmp90 = icmp ne i32 %call89, 0
  %conv91 = zext i1 %cmp90 to i32
  %call92 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5647, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.586, i64 0, i64 0), i32 noundef %conv91) #16
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %end, label %lor.lhs.false94

lor.lhs.false94:                                  ; preds = %if.end88
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call95 = call i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef %21, i32 noundef 65280, i32 noundef %.333, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_add_cb, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef nonnull @new_free_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*), i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef nonnull @new_parse_cb, i8* noundef bitcast (i32* @test_custom_exts.server to i8*)) #16
  %cmp96 = icmp ne i32 %call95, 0
  %conv97 = zext i1 %cmp96 to i32
  %call98 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5651, i8* noundef getelementptr inbounds ([111 x i8], [111 x i8]* @.str.587, i64 0, i64 0), i32 noundef %conv97) #16
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %end, label %if.end101

if.end101:                                        ; preds = %lor.lhs.false94
  br i1 %cmp4, label %if.then104, label %if.end118

if.then104:                                       ; preds = %if.end101
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call105 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %22, i32 noundef 53, void ()* noundef bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @sni_cb to void ()*)) #16
  %cmp106 = icmp ne i64 %call105, 0
  %conv107 = zext i1 %cmp106 to i32
  %call108 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5656, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.589, i64 0, i64 0), i32 noundef %conv107) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.then104
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %24 = bitcast %struct.ssl_ctx_st** %sctx2 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !3
  %call111 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %23, i32 noundef 54, i64 noundef 0, i8* noundef %25) #16
  %cmp112 = icmp ne i64 %call111, 0
  %conv113 = zext i1 %cmp112 to i32
  %call114 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5657, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.590, i64 0, i64 0), i32 noundef %conv113) #16
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %end, label %if.end118

if.end118:                                        ; preds = %lor.lhs.false110, %if.end101
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call119 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %26, %struct.ssl_ctx_st* noundef %27, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp120 = icmp ne i32 %call119, 0
  %conv121 = zext i1 %cmp120 to i32
  %call122 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5662, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv121) #16
  %tobool123.not = icmp eq i32 %call122, 0
  br i1 %tobool123.not, label %end, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %if.end118
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call125 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %28, %struct.ssl_st* noundef %29, i32 noundef 0) #16
  %cmp126 = icmp ne i32 %call125, 0
  %conv127 = zext i1 %cmp126 to i32
  %call128 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5664, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv127) #16
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %end, label %if.end131

if.end131:                                        ; preds = %lor.lhs.false124
  br i1 %cmp29335, label %if.then134, label %if.else148

if.then134:                                       ; preds = %if.end131
  %30 = load i32, i32* @clntaddoldcb, align 4, !tbaa !7
  %cmp135 = icmp ne i32 %30, 1
  %31 = load i32, i32* @clntparseoldcb, align 4
  %cmp138 = icmp ne i32 %31, 1
  %or.cond = select i1 %cmp135, i1 true, i1 %cmp138
  %32 = load i32, i32* @srvaddoldcb, align 4
  %cmp141 = icmp ne i32 %32, 1
  %or.cond280 = select i1 %or.cond, i1 true, i1 %cmp141
  %33 = load i32, i32* @srvparseoldcb, align 4
  %cmp144 = icmp ne i32 %33, 1
  %or.cond281 = select i1 %or.cond280, i1 true, i1 %cmp144
  br i1 %or.cond281, label %end, label %if.end198

if.else148:                                       ; preds = %if.end131
  %34 = add i32 %tst, -1
  %35 = icmp ult i32 %34, 3
  %36 = load i32, i32* @clntaddnewcb, align 4, !tbaa !7
  %cmp158 = icmp ne i32 %36, 1
  %37 = load i32, i32* @clntparsenewcb, align 4
  br i1 %35, label %if.then157, label %if.else183

if.then157:                                       ; preds = %if.else148
  %cmp161 = icmp ne i32 %37, 1
  %or.cond284 = select i1 %cmp158, i1 true, i1 %cmp161
  %38 = load i32, i32* @srvaddnewcb, align 4
  %cmp164 = icmp ne i32 %38, 1
  %or.cond285 = select i1 %or.cond284, i1 true, i1 %cmp164
  %39 = load i32, i32* @srvparsenewcb, align 4
  %cmp167 = icmp ne i32 %39, 1
  %or.cond286 = select i1 %or.cond285, i1 true, i1 %cmp167
  br i1 %or.cond286, label %end, label %lor.lhs.false169

lor.lhs.false169:                                 ; preds = %if.then157
  %cmp170 = icmp ne i32 %tst, 2
  %40 = load i32, i32* @snicb, align 4
  %cmp173 = icmp ne i32 %40, 0
  %or.cond287 = select i1 %cmp170, i1 %cmp173, i1 false
  br i1 %or.cond287, label %end, label %lor.lhs.false175

lor.lhs.false175:                                 ; preds = %lor.lhs.false169
  %cmp179 = icmp ne i32 %40, 1
  %or.cond288 = select i1 %cmp4, i1 %cmp179, i1 false
  br i1 %or.cond288, label %end, label %if.end198

if.else183:                                       ; preds = %if.else148
  %cmp187 = icmp ne i32 %37, 5
  %or.cond289 = select i1 %cmp158, i1 true, i1 %cmp187
  %41 = load i32, i32* @srvaddnewcb, align 4
  %cmp190 = icmp ne i32 %41, 5
  %or.cond290 = select i1 %or.cond289, i1 true, i1 %cmp190
  %42 = load i32, i32* @srvparsenewcb, align 4
  %cmp193 = icmp ne i32 %42, 1
  %or.cond291 = select i1 %or.cond290, i1 true, i1 %cmp193
  br i1 %or.cond291, label %end, label %if.end198

if.end198:                                        ; preds = %lor.lhs.false175, %if.else183, %if.then134
  %43 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call199 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %43) #16
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call200 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %44) #16
  %45 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call201 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %45) #16
  %46 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %46) #16
  %47 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %47) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %cmp202 = icmp eq i32 %tst, 3
  br i1 %cmp202, label %end, label %if.end205

if.end205:                                        ; preds = %if.end198
  %48 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %49 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call206 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %48, %struct.ssl_ctx_st* noundef %49, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp207 = icmp ne i32 %call206, 0
  %conv208 = zext i1 %cmp207 to i32
  %call209 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5704, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv208) #16
  %tobool210.not = icmp eq i32 %call209, 0
  br i1 %tobool210.not, label %end, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %if.end205
  %50 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call212 = call i32 @SSL_set_session(%struct.ssl_st* noundef %50, %struct.ssl_session_st* noundef %call199) #16
  %cmp213 = icmp ne i32 %call212, 0
  %conv214 = zext i1 %cmp213 to i32
  %call215 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5705, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv214) #16
  %tobool216.not = icmp eq i32 %call215, 0
  br i1 %tobool216.not, label %end, label %lor.lhs.false217

lor.lhs.false217:                                 ; preds = %lor.lhs.false211
  %51 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %52 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call218 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %51, %struct.ssl_st* noundef %52, i32 noundef 0) #16
  %cmp219 = icmp ne i32 %call218, 0
  %conv220 = zext i1 %cmp219 to i32
  %call221 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5707, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv220) #16
  %tobool222.not = icmp eq i32 %call221, 0
  br i1 %tobool222.not, label %end, label %if.end224

if.end224:                                        ; preds = %lor.lhs.false217
  br i1 %cmp29335, label %if.then227, label %if.else241

if.then227:                                       ; preds = %if.end224
  %53 = load i32, i32* @clntaddoldcb, align 4, !tbaa !7
  %cmp228 = icmp ne i32 %53, 2
  %54 = load i32, i32* @clntparseoldcb, align 4
  %cmp231 = icmp ne i32 %54, 1
  %or.cond292 = select i1 %cmp228, i1 true, i1 %cmp231
  %55 = load i32, i32* @srvaddoldcb, align 4
  %cmp234 = icmp ne i32 %55, 1
  %or.cond293 = select i1 %or.cond292, i1 true, i1 %cmp234
  %56 = load i32, i32* @srvparseoldcb, align 4
  %cmp237 = icmp ne i32 %56, 1
  %or.cond294 = select i1 %or.cond293, i1 true, i1 %cmp237
  br i1 %or.cond294, label %end, label %if.end279

if.else241:                                       ; preds = %if.end224
  %57 = add i32 %tst, -1
  %58 = icmp ult i32 %57, 2
  %59 = load i32, i32* @clntaddnewcb, align 4, !tbaa !7
  %cmp251 = icmp ne i32 %59, 2
  %60 = load i32, i32* @clntparsenewcb, align 4
  br i1 %58, label %if.then250, label %if.else264

if.then250:                                       ; preds = %if.else241
  %cmp254 = icmp ne i32 %60, 2
  %or.cond297 = select i1 %cmp251, i1 true, i1 %cmp254
  %61 = load i32, i32* @srvaddnewcb, align 4
  %cmp257 = icmp ne i32 %61, 2
  %or.cond298 = select i1 %or.cond297, i1 true, i1 %cmp257
  %62 = load i32, i32* @srvparsenewcb, align 4
  %cmp260 = icmp ne i32 %62, 2
  %or.cond299 = select i1 %or.cond298, i1 true, i1 %cmp260
  br i1 %or.cond299, label %end, label %if.end279

if.else264:                                       ; preds = %if.else241
  %cmp268 = icmp ne i32 %60, 8
  %or.cond300 = select i1 %cmp251, i1 true, i1 %cmp268
  %63 = load i32, i32* @srvaddnewcb, align 4
  %cmp271 = icmp ne i32 %63, 8
  %or.cond301 = select i1 %or.cond300, i1 true, i1 %cmp271
  %64 = load i32, i32* @srvparsenewcb, align 4
  %cmp274 = icmp ne i32 %64, 2
  %or.cond302 = select i1 %or.cond301, i1 true, i1 %cmp274
  br i1 %or.cond302, label %end, label %if.end279

if.end279:                                        ; preds = %if.then250, %if.else264, %if.then227
  br label %end

end:                                              ; preds = %if.end198, %if.else264, %if.then250, %if.then227, %if.end205, %lor.lhs.false211, %lor.lhs.false217, %if.else183, %if.then157, %lor.lhs.false169, %lor.lhs.false175, %if.then134, %if.end118, %lor.lhs.false124, %if.then104, %lor.lhs.false110, %if.end88, %lor.lhs.false94, %land.lhs.true80, %if.else70, %if.then62, %if.end47, %lor.lhs.false, %if.else39, %if.then31, %land.lhs.true, %entry, %if.end279
  %testresult.0 = phi i32 [ 0, %if.then134 ], [ 0, %if.then227 ], [ 1, %if.end279 ], [ 0, %if.then250 ], [ 0, %if.else264 ], [ 0, %lor.lhs.false217 ], [ 0, %lor.lhs.false211 ], [ 0, %if.end205 ], [ 0, %if.then157 ], [ 0, %lor.lhs.false169 ], [ 0, %lor.lhs.false175 ], [ 0, %if.else183 ], [ 0, %lor.lhs.false124 ], [ 0, %if.end118 ], [ 0, %lor.lhs.false110 ], [ 0, %if.then104 ], [ 0, %lor.lhs.false94 ], [ 0, %if.end88 ], [ 0, %if.then62 ], [ 0, %land.lhs.true80 ], [ 0, %if.else70 ], [ 0, %lor.lhs.false ], [ 0, %if.end47 ], [ 0, %if.then31 ], [ 0, %if.else39 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %if.end198 ]
  %sess.0 = phi %struct.ssl_session_st* [ null, %if.then134 ], [ %call199, %if.then227 ], [ %call199, %if.end279 ], [ %call199, %if.then250 ], [ %call199, %if.else264 ], [ %call199, %lor.lhs.false217 ], [ %call199, %lor.lhs.false211 ], [ %call199, %if.end205 ], [ null, %if.then157 ], [ null, %lor.lhs.false169 ], [ null, %lor.lhs.false175 ], [ null, %if.else183 ], [ null, %lor.lhs.false124 ], [ null, %if.end118 ], [ null, %lor.lhs.false110 ], [ null, %if.then104 ], [ null, %lor.lhs.false94 ], [ null, %if.end88 ], [ null, %if.then62 ], [ null, %land.lhs.true80 ], [ null, %if.else70 ], [ null, %lor.lhs.false ], [ null, %if.end47 ], [ null, %if.then31 ], [ null, %if.else39 ], [ null, %land.lhs.true ], [ null, %entry ], [ %call199, %if.end198 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess.0) #16
  %65 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %65) #16
  %66 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %66) #16
  %67 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %67) #16
  %68 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %68) #16
  %69 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %69) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_stateless() #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5344, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i64 @SSL_CTX_clear_options(%struct.ssl_ctx_st* noundef %7, i64 noundef 1048576) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %8, %struct.ssl_ctx_st* noundef %9, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5351, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11, i32 noundef 2) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5354, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.508, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call16 = call i32 @SSL_stateless(%struct.ssl_st* noundef %12) #16
  %call17 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5359, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.591, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call16, i32 noundef -1) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %if.end20

if.end20:                                         ; preds = %lor.lhs.false15
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %13) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_stateless_cookie_generate_cb(%struct.ssl_ctx_st* noundef %14, i32 (%struct.ssl_st*, i8*, i64*)* noundef nonnull @generate_stateless_cookie_callback) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_stateless_cookie_verify_cb(%struct.ssl_ctx_st* noundef %15, i32 (%struct.ssl_st*, i8*, i64)* noundef nonnull @verify_stateless_cookie_callback) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call21 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp22 = icmp ne i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5375, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %if.end20
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call27 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 2) #16
  %cmp28 = icmp ne i32 %call27, 0
  %conv29 = zext i1 %cmp28 to i32
  %call30 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5378, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.508, i64 0, i64 0), i32 noundef %conv29) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %end, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call33 = call i32 @SSL_stateless(%struct.ssl_st* noundef %20) #16
  %call34 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5380, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.591, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call33, i32 noundef 0) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %if.end37

if.end37:                                         ; preds = %lor.lhs.false32
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %21) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call38 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %22, %struct.ssl_ctx_st* noundef %23, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5392, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end37
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call44 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %24, %struct.ssl_st* noundef %25, i32 noundef 2) #16
  %cmp45 = icmp ne i32 %call44, 0
  %conv46 = zext i1 %cmp45 to i32
  %call47 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5395, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.508, i64 0, i64 0), i32 noundef %conv46) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call50 = call i32 @SSL_stateless(%struct.ssl_st* noundef %26) #16
  %call51 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5397, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.591, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call50, i32 noundef 0) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call54 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %27, %struct.ssl_st* noundef %28, i32 noundef 2) #16
  %cmp55 = icmp ne i32 %call54, 0
  %conv56 = zext i1 %cmp55 to i32
  %call57 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5400, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.508, i64 0, i64 0), i32 noundef %conv56) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %lor.lhs.false53
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call60 = call i32 @SSL_stateless(%struct.ssl_st* noundef %29) #16
  %call61 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5402, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.591, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call60, i32 noundef 1) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %end, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call64 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %30, %struct.ssl_st* noundef %31, i32 noundef 0) #16
  %cmp65 = icmp ne i32 %call64, 0
  %conv66 = zext i1 %cmp65 to i32
  %call67 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5405, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv66) #16
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %end, label %if.end70

if.end70:                                         ; preds = %lor.lhs.false63
  %32 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %32, %struct.ssl_st* noundef %33) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  br label %end

end:                                              ; preds = %if.end37, %lor.lhs.false43, %lor.lhs.false49, %lor.lhs.false53, %lor.lhs.false59, %lor.lhs.false63, %if.end20, %lor.lhs.false26, %lor.lhs.false32, %if.end, %lor.lhs.false, %lor.lhs.false15, %entry, %if.end70
  %testresult.0 = phi i32 [ 1, %if.end70 ], [ 0, %lor.lhs.false63 ], [ 0, %lor.lhs.false59 ], [ 0, %lor.lhs.false53 ], [ 0, %lor.lhs.false49 ], [ 0, %lor.lhs.false43 ], [ 0, %if.end37 ], [ 0, %lor.lhs.false32 ], [ 0, %lor.lhs.false26 ], [ 0, %if.end20 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ]
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %35) #16
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %36) #16
  %37 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %37) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_pha_key_update() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6630, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call4 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 123, i64 noundef 772, i8* noundef null) #16
  %cmp5 = icmp ne i64 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6633, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.592, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call9 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %8, i32 noundef 124, i64 noundef 772, i8* noundef null) #16
  %cmp10 = icmp ne i64 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6634, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.593, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call15 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %9, i32 noundef 123, i64 noundef 772, i8* noundef null) #16
  %cmp16 = icmp ne i64 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6635, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.594, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call21 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %10, i32 noundef 124, i64 noundef 772, i8* noundef null) #16
  %cmp22 = icmp ne i64 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6636, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.595, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %lor.lhs.false20
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_post_handshake_auth(%struct.ssl_ctx_st* noundef %11, i32 noundef 1) #16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call28 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %12, %struct.ssl_ctx_st* noundef %13, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6642, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %if.end27
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call35 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0) #16
  %cmp36 = icmp ne i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  %call38 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6646, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %if.end41

if.end41:                                         ; preds = %if.end34
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_set_verify(%struct.ssl_st* noundef %16, i32 noundef 1, i32 (i32, %struct.x509_store_ctx_st*)* noundef null) #16
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call42 = call i32 @SSL_verify_client_post_handshake(%struct.ssl_st* noundef %17) #16
  %cmp43 = icmp ne i32 %call42, 0
  %conv44 = zext i1 %cmp43 to i32
  %call45 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6650, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.596, i64 0, i64 0), i32 noundef %conv44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %if.end48

if.end48:                                         ; preds = %if.end41
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call49 = call i32 @SSL_key_update(%struct.ssl_st* noundef %18, i32 noundef 0) #16
  %cmp50 = icmp ne i32 %call49, 0
  %conv51 = zext i1 %cmp50 to i32
  %call52 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6653, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.597, i64 0, i64 0), i32 noundef %conv51) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %end, label %if.end55

if.end55:                                         ; preds = %if.end48
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call56 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %19) #16
  %call57 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6657, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.228, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call56, i32 noundef 1) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %if.end60

if.end60:                                         ; preds = %if.end55
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call61 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %20, %struct.ssl_st* noundef %21, i32 noundef 0) #16
  %cmp62 = icmp ne i32 %call61, 0
  %conv63 = zext i1 %cmp62 to i32
  %call64 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6662, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %if.end67

if.end67:                                         ; preds = %if.end60
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call68 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %22) #16
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call69 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %23) #16
  br label %end

end:                                              ; preds = %if.end60, %if.end55, %if.end48, %if.end41, %if.end34, %if.end27, %if.end, %lor.lhs.false, %lor.lhs.false14, %lor.lhs.false20, %if.end67
  %testresult.0 = phi i32 [ 1, %if.end67 ], [ 0, %if.end60 ], [ 0, %if.end55 ], [ 0, %if.end48 ], [ 0, %if.end41 ], [ 0, %if.end34 ], [ 0, %if.end27 ], [ 0, %lor.lhs.false20 ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false ], [ 0, %if.end ]
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_serverinfo(i32 noundef %tst) #1 {
entry:
  %0 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_method() #16
  %call1 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %0, i8* noundef null, %struct.ssl_method_st* noundef %call) #16
  %1 = bitcast %struct.ssl_ctx_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5765, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.598, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %and = and i32 %tst, 1
  %cmp.not = icmp eq i32 %and, 0
  %and5 = and i32 %tst, 2
  %cmp6.not = icmp eq i32 %and5, 0
  %sibuf.0 = select i1 %cmp6.not, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @serverinfov1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @serverinfov2, i64 0, i64 0)
  %sibuflen.0 = select i1 %cmp6.not, i64 5, i64 9
  %and13 = and i32 %tst, 4
  %cmp14.not = icmp eq i32 %and13, 0
  br i1 %cmp14.not, label %if.else18, label %if.then16

if.then16:                                        ; preds = %if.end
  %2 = xor i32 %and, 1
  %3 = xor i1 %cmp.not, true
  %conv = zext i1 %3 to i32
  %expected.0 = select i1 %cmp6.not, i32 %2, i32 %conv
  %. = select i1 %cmp.not, i32 1, i32 2
  %call17 = tail call i32 @SSL_CTX_use_serverinfo_ex(%struct.ssl_ctx_st* noundef %call1, i32 noundef %., i8* noundef %sibuf.0, i64 noundef %sibuflen.0) #16
  br label %if.end26

if.else18:                                        ; preds = %if.end
  %call19 = tail call i32 @SSL_CTX_use_serverinfo(%struct.ssl_ctx_st* noundef %call1, i8* noundef %sibuf.0, i64 noundef %sibuflen.0) #16
  %and5.lobit = lshr exact i32 %and5, 1
  %4 = xor i32 %and5.lobit, 1
  br label %if.end26

if.end26:                                         ; preds = %if.else18, %if.then16
  %ret.0 = phi i32 [ %call17, %if.then16 ], [ %call19, %if.else18 ]
  %expected.1 = phi i32 [ %expected.0, %if.then16 ], [ %4, %if.else18 ]
  %cmp27 = icmp eq i32 %ret.0, %expected.1
  %conv28 = zext i1 %cmp27 to i32
  %call31 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5798, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.599, i64 0, i64 0), i32 noundef %conv28) #16
  %tobool32.not = icmp ne i32 %call31, 0
  %spec.select = zext i1 %tobool32.not to i32
  br label %end

end:                                              ; preds = %if.end26, %entry
  %testresult.0 = phi i32 [ 0, %entry ], [ %spec.select, %if.end26 ]
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call1) #16
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_export_key_mat(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %label = alloca [250 x i8], align 16
  %context = alloca i64, align 8
  %ckeymat1 = alloca [80 x i8], align 16
  %ckeymat2 = alloca [80 x i8], align 16
  %ckeymat3 = alloca [80 x i8], align 16
  %skeymat1 = alloca [80 x i8], align 16
  %skeymat2 = alloca [80 x i8], align 16
  %skeymat3 = alloca [80 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [250 x i8], [250 x i8]* %label, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 250, i8* nonnull %4) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(250) %4, i8* noundef nonnull align 16 dereferenceable(250) getelementptr inbounds ([250 x i8], [250 x i8]* @__const.test_export_key_mat.label, i64 0, i64 0), i64 250, i1 false)
  %5 = bitcast i64* %context to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store i64 32783474438860643, i64* %context, align 8
  %6 = getelementptr inbounds [80 x i8], [80 x i8]* %ckeymat1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #19
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %ckeymat2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #19
  %8 = getelementptr inbounds [80 x i8], [80 x i8]* %ckeymat3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #19
  %9 = getelementptr inbounds [80 x i8], [80 x i8]* %skeymat1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #19
  %10 = getelementptr inbounds [80 x i8], [80 x i8]* %skeymat2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #19
  %11 = getelementptr inbounds [80 x i8], [80 x i8]* %skeymat3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #19
  %.b = load i1, i1* @is_fips, align 4
  %12 = icmp ult i32 %tst, 2
  %or.cond = and i1 %12, %.b
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %13 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call2 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %14 = load i8*, i8** @cert, align 8, !tbaa !3
  %15 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call3 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %13, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call2, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %14, i8* noundef %15) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv = zext i1 %cmp4 to i32
  %call5 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5856, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end, label %if.end8

if.end8:                                          ; preds = %if.end
  %cmp13 = icmp ult i32 %tst, 6
  br i1 %cmp13, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end8
  call void @OPENSSL_die(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.600, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5859) #20
  unreachable

cond.end:                                         ; preds = %if.end8
  %conv12185 = zext i32 %tst to i64
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* @__const.test_export_key_mat.protocols, i64 0, i64 %conv12185
  %17 = load i32, i32* %arrayidx, align 4, !tbaa !7
  %conv15 = sext i32 %17 to i64
  %call16 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %16, i32 noundef 124, i64 noundef %conv15, i8* noundef null) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call20 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %18, i32 noundef 123, i64 noundef %conv15, i8* noundef null) #16
  br i1 %12, label %land.lhs.true25, label %if.end32

land.lhs.true25:                                  ; preds = %cond.end
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call26 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %19, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.601, i64 0, i64 0)) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %land.lhs.true25
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call29 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %20, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.601, i64 0, i64 0)) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %if.end32

if.end32:                                         ; preds = %lor.lhs.false28, %cond.end
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call33 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %21, %struct.ssl_ctx_st* noundef %22, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5868, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %if.end39

if.end39:                                         ; preds = %if.end32
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call42 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %23, i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %4, i64 noundef 11, i8* noundef nonnull %5, i64 noundef 7, i32 noundef 1) #16
  %call43 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5877, i8* noundef getelementptr inbounds ([127 x i8], [127 x i8]* @.str.602, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call42, i32 noundef 0) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %if.end39
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call47 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %24, %struct.ssl_st* noundef %25, i32 noundef 0) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5881, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %if.end53

if.end53:                                         ; preds = %if.end46
  switch i32 %tst, label %if.else68 [
    i32 5, label %if.then56
    i32 4, label %if.end70
  ]

if.then56:                                        ; preds = %if.end53
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call60 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %26, i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %4, i64 noundef 250, i8* noundef nonnull %5, i64 noundef 7, i32 noundef 1) #16
  %call61 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5892, i8* noundef getelementptr inbounds ([126 x i8], [126 x i8]* @.str.603, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call60, i32 noundef 0) #16
  %tobool62.not = icmp ne i32 %call61, 0
  %spec.select = zext i1 %tobool62.not to i32
  br label %end

if.else68:                                        ; preds = %if.end53
  br label %if.end70

if.end70:                                         ; preds = %if.end53, %if.else68
  %labellen.0 = phi i64 [ 10, %if.else68 ], [ 249, %if.end53 ]
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call74 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %27, i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef nonnull %5, i64 noundef 7, i32 noundef 1) #16
  %call75 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5906, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.604, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call74, i32 noundef 1) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.end70
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call80 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %28, i8* noundef nonnull %7, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef null, i64 noundef 0, i32 noundef 1) #16
  %call81 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5911, i8* noundef getelementptr inbounds ([103 x i8], [103 x i8]* @.str.605, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call80, i32 noundef 1) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %end, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %lor.lhs.false77
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call86 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %29, i8* noundef nonnull %8, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef null, i64 noundef 0, i32 noundef 0) #16
  %call87 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5915, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.606, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call86, i32 noundef 1) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %end, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %lor.lhs.false83
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call93 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %30, i8* noundef nonnull %9, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef nonnull %5, i64 noundef 7, i32 noundef 1) #16
  %call94 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5921, i8* noundef getelementptr inbounds ([115 x i8], [115 x i8]* @.str.607, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call93, i32 noundef 1) #16
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %end, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %lor.lhs.false89
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call99 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %31, i8* noundef nonnull %10, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef null, i64 noundef 0, i32 noundef 1) #16
  %call100 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5926, i8* noundef getelementptr inbounds ([103 x i8], [103 x i8]* @.str.608, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call99, i32 noundef 1) #16
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %end, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %lor.lhs.false96
  %32 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call105 = call i32 @SSL_export_keying_material(%struct.ssl_st* noundef %32, i8* noundef nonnull %11, i64 noundef 80, i8* noundef nonnull %4, i64 noundef %labellen.0, i8* noundef null, i64 noundef 0, i32 noundef 0) #16
  %call106 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5930, i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.609, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call105, i32 noundef 1) #16
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %end, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false102
  %call111 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5936, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.610, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.611, i64 0, i64 0), i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %9, i64 noundef 80) #16
  %tobool112.not = icmp eq i32 %call111, 0
  br i1 %tobool112.not, label %end, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %lor.lhs.false108
  %call116 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5942, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.613, i64 0, i64 0), i8* noundef nonnull %7, i64 noundef 80, i8* noundef nonnull %10, i64 noundef 80) #16
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %end, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false113
  %call121 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5948, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i64 0, i64 0), i8* noundef nonnull %8, i64 noundef 80, i8* noundef nonnull %11, i64 noundef 80) #16
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %end, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %lor.lhs.false118
  %call126 = call i32 @test_mem_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5951, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.610, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %7, i64 noundef 80) #16
  %tobool127.not = icmp eq i32 %call126, 0
  br i1 %tobool127.not, label %end, label %if.end129

if.end129:                                        ; preds = %lor.lhs.false123
  %cmp130 = icmp ult i32 %tst, 3
  br i1 %cmp130, label %land.lhs.true132, label %land.lhs.true140

land.lhs.true132:                                 ; preds = %if.end129
  %call135 = call i32 @test_mem_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5959, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i64 0, i64 0), i8* noundef nonnull %7, i64 noundef 80, i8* noundef nonnull %8, i64 noundef 80) #16
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %end, label %if.end146

land.lhs.true140:                                 ; preds = %if.end129
  %call143 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5961, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i64 0, i64 0), i8* noundef nonnull %7, i64 noundef 80, i8* noundef nonnull %8, i64 noundef 80) #16
  %tobool144.not = icmp eq i32 %call143, 0
  br i1 %tobool144.not, label %end, label %if.end146

if.end146:                                        ; preds = %land.lhs.true132, %land.lhs.true140
  br label %end

end:                                              ; preds = %if.then56, %land.lhs.true132, %land.lhs.true140, %if.end70, %lor.lhs.false77, %lor.lhs.false83, %lor.lhs.false89, %lor.lhs.false96, %lor.lhs.false102, %lor.lhs.false108, %lor.lhs.false113, %lor.lhs.false118, %lor.lhs.false123, %if.end46, %if.end39, %if.end32, %land.lhs.true25, %lor.lhs.false28, %if.end, %if.end146
  %testresult.0 = phi i32 [ 1, %if.end146 ], [ 0, %land.lhs.true140 ], [ 0, %land.lhs.true132 ], [ 0, %lor.lhs.false123 ], [ 0, %lor.lhs.false118 ], [ 0, %lor.lhs.false113 ], [ 0, %lor.lhs.false108 ], [ 0, %lor.lhs.false102 ], [ 0, %lor.lhs.false96 ], [ 0, %lor.lhs.false89 ], [ 0, %lor.lhs.false83 ], [ 0, %lor.lhs.false77 ], [ 0, %if.end70 ], [ 0, %if.end46 ], [ 0, %if.end39 ], [ 0, %if.end32 ], [ 0, %lor.lhs.false28 ], [ 0, %land.lhs.true25 ], [ 0, %if.end ], [ %spec.select, %if.then56 ]
  %33 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %33) #16
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef null) #16
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %35) #16
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %36) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 250, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_export_key_mat_early(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %ckeymat1 = alloca [80 x i8], align 16
  %ckeymat2 = alloca [80 x i8], align 16
  %skeymat1 = alloca [80 x i8], align 16
  %skeymat2 = alloca [80 x i8], align 16
  %buf = alloca [1 x i8], align 1
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [80 x i8], [80 x i8]* %ckeymat1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #19
  %6 = getelementptr inbounds [80 x i8], [80 x i8]* %ckeymat2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #19
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %skeymat1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #19
  %8 = getelementptr inbounds [80 x i8], [80 x i8]* %skeymat2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #19
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #19
  %10 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5998, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call2 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %12, i8* noundef null, i64 noundef 0, i64* noundef nonnull %written) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv4 = zext i1 %cmp3 to i32
  %call5 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6002, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.312, i64 0, i64 0), i32 noundef %conv4) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call7 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %13, i8* noundef nonnull %9, i64 noundef 1, i64* noundef nonnull %readbytes) #16
  %call8 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6005, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i64 0, i64 0), i32 noundef %call7, i32 noundef 0) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call11 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %14) #16
  %call12 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6007, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call11, i32 noundef 2) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %lor.lhs.false10
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call17 = call i32 @SSL_export_keying_material_early(%struct.ssl_st* noundef %15, i8* noundef nonnull %5, i64 noundef 80, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @test_export_key_mat_early.label, i64 0, i64 0), i64 noundef 10, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @test_export_key_mat_early.context, i64 0, i64 0), i64 noundef 7) #16
  %call18 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6012, i8* noundef getelementptr inbounds ([129 x i8], [129 x i8]* @.str.616, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call17, i32 noundef 1) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %if.end15
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call22 = call i32 @SSL_export_keying_material_early(%struct.ssl_st* noundef %16, i8* noundef nonnull %6, i64 noundef 80, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @test_export_key_mat_early.label, i64 0, i64 0), i64 noundef 10, i8* noundef null, i64 noundef 0) #16
  %call23 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6015, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.617, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call22, i32 noundef 1) #16
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %end, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %lor.lhs.false20
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call27 = call i32 @SSL_export_keying_material_early(%struct.ssl_st* noundef %17, i8* noundef nonnull %7, i64 noundef 80, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @test_export_key_mat_early.label, i64 0, i64 0), i64 noundef 10, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @test_export_key_mat_early.context, i64 0, i64 0), i64 noundef 7) #16
  %call28 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6018, i8* noundef getelementptr inbounds ([129 x i8], [129 x i8]* @.str.618, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call27, i32 noundef 1) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false25
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call32 = call i32 @SSL_export_keying_material_early(%struct.ssl_st* noundef %18, i8* noundef nonnull %8, i64 noundef 80, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @test_export_key_mat_early.label, i64 0, i64 0), i64 noundef 10, i8* noundef null, i64 noundef 0) #16
  %call33 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6021, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.619, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call32, i32 noundef 1) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %lor.lhs.false35

lor.lhs.false35:                                  ; preds = %lor.lhs.false30
  %call38 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6027, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.610, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.611, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef 80, i8* noundef nonnull %7, i64 noundef 80) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %lor.lhs.false35
  %call43 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6033, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.613, i64 0, i64 0), i8* noundef nonnull %6, i64 noundef 80, i8* noundef nonnull %8, i64 noundef 80) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %lor.lhs.false40
  %call48 = call i32 @test_mem_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6036, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.610, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.612, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef 80, i8* noundef nonnull %6, i64 noundef 80) #16
  %tobool49.not = icmp ne i32 %call48, 0
  %spec.select = zext i1 %tobool49.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false45, %if.end15, %lor.lhs.false20, %lor.lhs.false25, %lor.lhs.false30, %lor.lhs.false35, %lor.lhs.false40, %if.end, %lor.lhs.false, %lor.lhs.false10, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false40 ], [ 0, %lor.lhs.false35 ], [ 0, %lor.lhs.false30 ], [ 0, %lor.lhs.false25 ], [ 0, %lor.lhs.false20 ], [ 0, %if.end15 ], [ 0, %lor.lhs.false10 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false45 ]
  %19 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %19) #16
  %20 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %20) #16
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %21) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %22) #16
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %24) #16
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %25) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_update() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [20 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #19
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6070, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.621, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %8, %struct.ssl_ctx_st* noundef %9, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6072, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11, i32 noundef 0) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6074, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %lor.lhs.false9, %lor.lhs.false58
  %cmp15 = phi i1 [ true, %lor.lhs.false58 ], [ false, %lor.lhs.false9 ]
  %j.078 = phi i32 [ 1, %lor.lhs.false58 ], [ 0, %lor.lhs.false9 ]
  br label %for.body20

for.cond17:                                       ; preds = %lor.lhs.false28
  %inc = add nuw nsw i32 %i.077, 1
  %exitcond.not = icmp eq i32 %inc, 40
  br i1 %exitcond.not, label %for.end, label %for.body20, !llvm.loop !37

for.body20:                                       ; preds = %for.cond17.preheader, %for.cond17
  %i.077 = phi i32 [ 0, %for.cond17.preheader ], [ %inc, %for.cond17 ]
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call23 = call i32 @SSL_key_update(%struct.ssl_st* noundef %12, i32 noundef %j.078) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6083, i8* noundef getelementptr inbounds ([94 x i8], [94 x i8]* @.str.622, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %for.body20
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call29 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %13) #16
  %cmp30 = icmp ne i32 %call29, 0
  %conv31 = zext i1 %cmp30 to i32
  %call32 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6084, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.623, i64 0, i64 0), i32 noundef %conv31) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %for.cond17

for.end:                                          ; preds = %for.cond17
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call36 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv37 = trunc i64 %call36 to i32
  %call38 = call i32 @SSL_write(%struct.ssl_st* noundef %14, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv37) #16
  %call39 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv40 = trunc i64 %call39 to i32
  %call41 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6089, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.624, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call38, i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %for.end
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call44 = call i32 @SSL_read(%struct.ssl_st* noundef %15, i8* noundef nonnull %4, i32 noundef 20) #16
  %call45 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv46 = trunc i64 %call45 to i32
  %call47 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6091, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.626, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call44, i32 noundef %conv46) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %if.end50

if.end50:                                         ; preds = %lor.lhs.false43
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call51 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv52 = trunc i64 %call51 to i32
  %call53 = call i32 @SSL_write(%struct.ssl_st* noundef %16, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv52) #16
  %call54 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv55 = trunc i64 %call54 to i32
  %call56 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6094, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.627, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call53, i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %if.end50
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call60 = call i32 @SSL_read(%struct.ssl_st* noundef %17, i8* noundef nonnull %4, i32 noundef 20) #16
  %call61 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv62 = trunc i64 %call61 to i32
  %call63 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6096, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.628, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call60, i32 noundef %conv62) #16
  %tobool64.not = icmp eq i32 %call63, 0
  %brmerge = or i1 %tobool64.not, %cmp15
  br i1 %brmerge, label %end.loopexit82.split.loop.exit, label %for.cond17.preheader

end.loopexit82.split.loop.exit:                   ; preds = %lor.lhs.false58
  %not.tobool64.not.le = xor i1 %tobool64.not, true
  %.mux.le = zext i1 %not.tobool64.not.le to i32
  br label %end

end:                                              ; preds = %end.loopexit82.split.loop.exit, %lor.lhs.false43, %for.end, %if.end50, %for.body20, %lor.lhs.false28, %entry, %lor.lhs.false, %lor.lhs.false9
  %testresult.0 = phi i32 [ 0, %lor.lhs.false9 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false28 ], [ 0, %for.body20 ], [ %.mux.le, %end.loopexit82.split.loop.exit ], [ 0, %lor.lhs.false43 ], [ 0, %for.end ], [ 0, %if.end50 ]
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %18) #16
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %19) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %20) #16
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %21) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_update_peer_in_write(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [20 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #19
  %call = tail call %struct.bio_method_st* @bio_s_always_retry() #16
  %call1 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call) #16
  %5 = bitcast %struct.bio_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6128, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i64 0, i64 0), i8* noundef %5) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call4 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %7 = load i8*, i8** @cert, align 8, !tbaa !3
  %8 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %6, %struct.ssl_method_st* noundef %call3, %struct.ssl_method_st* noundef %call4, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %7, i8* noundef %8) #16
  %cmp = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6133, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.621, i64 0, i64 0), i32 noundef %conv) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp10 = icmp ne i32 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6135, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call15 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp16 = icmp ne i32 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6137, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false14
  %cmp20 = icmp eq i32 %tst, 0
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8
  %cond = select i1 %cmp20, %struct.ssl_st* %13, %struct.ssl_st* %14
  %cond27 = select i1 %cmp20, %struct.ssl_st* %14, %struct.ssl_st* %13
  %call28 = call i32 @SSL_key_update(%struct.ssl_st* noundef %cond, i32 noundef 1) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6143, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.629, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.end
  %call34 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %cond) #16
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6144, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.630, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call34, i32 noundef 1) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %lor.lhs.false33
  %call39 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef %cond27) #16
  %15 = bitcast %struct.bio_st* %call39 to i8*
  %call40 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6149, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.229, i64 0, i64 0), i8* noundef %15) #16
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %end, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %if.end38
  %call43 = call i32 @BIO_up_ref(%struct.bio_st* noundef %call39) #16
  %cmp44 = icmp ne i32 %call43, 0
  %conv45 = zext i1 %cmp44 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6149, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.230, i64 0, i64 0), i32 noundef %conv45) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %lor.lhs.false42
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %cond27, %struct.bio_st* noundef %call1) #16
  %call50 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv51 = trunc i64 %call50 to i32
  %call52 = call i32 @SSL_write(%struct.ssl_st* noundef %cond27, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv51) #16
  %call53 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6157, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.631, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call52, i32 noundef -1) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %if.end49
  %call56 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond27, i32 noundef 0) #16
  %call57 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6158, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.632, i64 0, i64 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), i32 noundef %call56, i32 noundef 3) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %if.end60

if.end60:                                         ; preds = %lor.lhs.false55
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %cond27, %struct.bio_st* noundef %call39) #16
  %call61 = call i32 @SSL_read(%struct.ssl_st* noundef %cond27, i8* noundef nonnull %4, i32 noundef 20) #16
  %call62 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6166, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.633, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call61, i32 noundef -1) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %if.end60
  %call65 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond27, i32 noundef 0) #16
  %call66 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6167, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.632, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0), i32 noundef %call65, i32 noundef 2) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end69

if.end69:                                         ; preds = %lor.lhs.false64
  %call70 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv71 = trunc i64 %call70 to i32
  %call72 = call i32 @SSL_write(%struct.ssl_st* noundef %cond27, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv71) #16
  %call73 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv74 = trunc i64 %call73 to i32
  %call75 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6174, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.631, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call72, i32 noundef %conv74) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.end69
  %call79 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 20) #16
  %call80 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv81 = trunc i64 %call80 to i32
  %call82 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6175, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.634, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call79, i32 noundef %conv81) #16
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %end, label %if.end85

if.end85:                                         ; preds = %lor.lhs.false77
  %call86 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv87 = trunc i64 %call86 to i32
  %call88 = call i32 @SSL_write(%struct.ssl_st* noundef %cond27, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv87) #16
  %call89 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv90 = trunc i64 %call89 to i32
  %call91 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6179, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.631, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call88, i32 noundef %conv90) #16
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %end, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %if.end85
  %call95 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 20) #16
  %call96 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv97 = trunc i64 %call96 to i32
  %call98 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6180, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.634, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call95, i32 noundef %conv97) #16
  %tobool99.not = icmp ne i32 %call98, 0
  %spec.select = zext i1 %tobool99.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false93, %if.end38, %lor.lhs.false42, %if.end85, %if.end69, %lor.lhs.false77, %if.end60, %lor.lhs.false64, %if.end49, %lor.lhs.false55, %if.end, %lor.lhs.false33, %entry, %lor.lhs.false, %lor.lhs.false8, %lor.lhs.false14
  %testresult.0 = phi i32 [ 0, %if.end85 ], [ 0, %lor.lhs.false77 ], [ 0, %if.end69 ], [ 0, %lor.lhs.false64 ], [ 0, %if.end60 ], [ 0, %lor.lhs.false55 ], [ 0, %if.end49 ], [ 0, %lor.lhs.false33 ], [ 0, %if.end ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false8 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false42 ], [ 0, %if.end38 ], [ %spec.select, %lor.lhs.false93 ]
  %bretry.0 = phi %struct.bio_st* [ null, %if.end85 ], [ null, %lor.lhs.false77 ], [ null, %if.end69 ], [ null, %lor.lhs.false64 ], [ null, %if.end60 ], [ null, %lor.lhs.false55 ], [ null, %if.end49 ], [ %call1, %lor.lhs.false33 ], [ %call1, %if.end ], [ %call1, %lor.lhs.false14 ], [ %call1, %lor.lhs.false8 ], [ %call1, %lor.lhs.false ], [ %call1, %entry ], [ %call1, %lor.lhs.false42 ], [ %call1, %if.end38 ], [ null, %lor.lhs.false93 ]
  %tmp.0 = phi %struct.bio_st* [ null, %if.end85 ], [ null, %lor.lhs.false77 ], [ null, %if.end69 ], [ null, %lor.lhs.false64 ], [ null, %if.end60 ], [ %call39, %lor.lhs.false55 ], [ %call39, %if.end49 ], [ null, %lor.lhs.false33 ], [ null, %if.end ], [ null, %lor.lhs.false14 ], [ null, %lor.lhs.false8 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false42 ], [ null, %if.end38 ], [ null, %lor.lhs.false93 ]
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %18) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %19) #16
  %call102 = call i32 @BIO_free(%struct.bio_st* noundef %bretry.0) #16
  %call103 = call i32 @BIO_free(%struct.bio_st* noundef %tmp.0) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_update_peer_in_read(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %prbuf = alloca [515 x i8], align 16
  %lwbuf = alloca [515 x i8], align 16
  %lbio = alloca %struct.bio_st*, align 8
  %pbio = alloca %struct.bio_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [515 x i8], [515 x i8]* %prbuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 515, i8* nonnull %4) #19
  %5 = getelementptr inbounds [515 x i8], [515 x i8]* %lwbuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 515, i8* nonnull %5) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(515) %5, i8 0, i64 515, i1 false)
  %6 = bitcast %struct.bio_st** %lbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  store %struct.bio_st* null, %struct.bio_st** %lbio, align 8, !tbaa !3
  %7 = bitcast %struct.bio_st** %pbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  store %struct.bio_st* null, %struct.bio_st** %pbio, align 8, !tbaa !3
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6217, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.621, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %11, %struct.ssl_ctx_st* noundef %12, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6219, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %13, %struct.ssl_st* noundef %14, i32 noundef 0) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6221, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false9
  %cmp15 = icmp eq i32 %tst, 0
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8
  %cond = select i1 %cmp15, %struct.ssl_st* %15, %struct.ssl_st* %16
  %cond22 = select i1 %cmp15, %struct.ssl_st* %16, %struct.ssl_st* %15
  %call23 = call i32 @BIO_new_bio_pair(%struct.bio_st** noundef nonnull %lbio, i64 noundef 512, %struct.bio_st** noundef nonnull %pbio, i64 noundef 512) #16
  %call24 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6227, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.635, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call23, i32 noundef 1) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %if.end
  %17 = load %struct.bio_st*, %struct.bio_st** %lbio, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %cond, %struct.bio_st* noundef %17, %struct.bio_st* noundef %17) #16
  %18 = load %struct.bio_st*, %struct.bio_st** %pbio, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %cond22, %struct.bio_st* noundef %18, %struct.bio_st* noundef %18) #16
  %call28 = call i32 @SSL_key_update(%struct.ssl_st* noundef %cond, i32 noundef 1) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6239, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.636, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.end27
  %call34 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef nonnull %5, i32 noundef 515) #16
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6240, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.637, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call34, i32 noundef -1) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %call38 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond, i32 noundef -1) #16
  %call39 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6241, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.638, i64 0, i64 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), i32 noundef %call38, i32 noundef 3) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %if.end42

if.end42:                                         ; preds = %lor.lhs.false37
  %call44 = call i32 @SSL_read(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %4, i32 noundef 515) #16
  %call45 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6248, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.639, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call44, i32 noundef -1) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end42
  %call48 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond22, i32 noundef -1) #16
  %call49 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6249, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.640, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0), i32 noundef %call48, i32 noundef 2) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false47
  %call53 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv54 = trunc i64 %call53 to i32
  %call55 = call i32 @SSL_write(%struct.ssl_st* noundef %cond22, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv54) #16
  %call56 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv57 = trunc i64 %call56 to i32
  %call58 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6253, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.641, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call55, i32 noundef %conv57) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %if.end61

if.end61:                                         ; preds = %if.end52
  %call63 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef nonnull %5, i32 noundef 515) #16
  %call64 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6260, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.637, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.642, i64 0, i64 0), i32 noundef %call63, i32 noundef 515) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.end61
  %call68 = call i32 @SSL_read(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %4, i32 noundef 515) #16
  %call69 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6261, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.639, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.643, i64 0, i64 0), i32 noundef %call68, i32 noundef 515) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %if.end72

if.end72:                                         ; preds = %lor.lhs.false66
  %call73 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv74 = trunc i64 %call73 to i32
  %call75 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv74) #16
  %call76 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv77 = trunc i64 %call76 to i32
  %call78 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6265, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call75, i32 noundef %conv77) #16
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %end, label %lor.lhs.false80

lor.lhs.false80:                                  ; preds = %if.end72
  %call82 = call i32 @SSL_read(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %4, i32 noundef 515) #16
  %call83 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv84 = trunc i64 %call83 to i32
  %call85 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6266, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.639, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call82, i32 noundef %conv84) #16
  %tobool86.not = icmp ne i32 %call85, 0
  %spec.select = zext i1 %tobool86.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false80, %if.end72, %if.end61, %lor.lhs.false66, %if.end52, %if.end42, %lor.lhs.false47, %if.end27, %lor.lhs.false33, %lor.lhs.false37, %if.end, %entry, %lor.lhs.false, %lor.lhs.false9
  %testresult.0 = phi i32 [ 0, %if.end72 ], [ 0, %lor.lhs.false66 ], [ 0, %if.end61 ], [ 0, %if.end52 ], [ 0, %lor.lhs.false47 ], [ 0, %if.end42 ], [ 0, %lor.lhs.false37 ], [ 0, %lor.lhs.false33 ], [ 0, %if.end27 ], [ 0, %if.end ], [ 0, %lor.lhs.false9 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %lor.lhs.false80 ]
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %19) #16
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %20) #16
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %21) #16
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %22) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 515, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 515, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_update_local_in_write(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [20 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #19
  %call = tail call %struct.bio_method_st* @bio_s_always_retry() #16
  %call1 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call) #16
  %5 = bitcast %struct.bio_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6297, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i64 0, i64 0), i8* noundef %5) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call4 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %7 = load i8*, i8** @cert, align 8, !tbaa !3
  %8 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %6, %struct.ssl_method_st* noundef %call3, %struct.ssl_method_st* noundef %call4, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %7, i8* noundef %8) #16
  %cmp = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6302, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.621, i64 0, i64 0), i32 noundef %conv) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp10 = icmp ne i32 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6304, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call15 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp16 = icmp ne i32 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6306, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false14
  %cmp20 = icmp eq i32 %tst, 0
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8
  %cond = select i1 %cmp20, %struct.ssl_st* %13, %struct.ssl_st* %14
  %cond27 = select i1 %cmp20, %struct.ssl_st* %14, %struct.ssl_st* %13
  %call28 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef %cond) #16
  %15 = bitcast %struct.bio_st* %call28 to i8*
  %call29 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6314, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.229, i64 0, i64 0), i8* noundef %15) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.end
  %call32 = call i32 @BIO_up_ref(%struct.bio_st* noundef %call28) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6314, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.230, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %lor.lhs.false31
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %cond, %struct.bio_st* noundef %call1) #16
  %call39 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv40 = trunc i64 %call39 to i32
  %call41 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv40) #16
  %call42 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6322, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call41, i32 noundef -1) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.end38
  %call45 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond, i32 noundef -1) #16
  %call46 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6323, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.638, i64 0, i64 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), i32 noundef %call45, i32 noundef 3) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %lor.lhs.false44
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %cond, %struct.bio_st* noundef %call28) #16
  %call50 = call i32 @SSL_key_update(%struct.ssl_st* noundef %cond, i32 noundef 1) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6331, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.636, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %if.end49
  %call56 = call i64 @ERR_peek_error() #16
  %call57 = call fastcc i32 @ERR_GET_REASON(i64 noundef %call56) #18, !range !25
  %call58 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6332, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.645, i64 0, i64 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.646, i64 0, i64 0), i32 noundef %call57, i32 noundef 127) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %if.end61

if.end61:                                         ; preds = %lor.lhs.false55
  call void @ERR_clear_error() #16
  %call62 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv63 = trunc i64 %call62 to i32
  %call64 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv63) #16
  %call65 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv66 = trunc i64 %call65 to i32
  %call67 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6337, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call64, i32 noundef %conv66) #16
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %end, label %if.end70

if.end70:                                         ; preds = %if.end61
  %call71 = call i32 @SSL_key_update(%struct.ssl_st* noundef %cond, i32 noundef 1) #16
  %cmp72 = icmp ne i32 %call71, 0
  %conv73 = zext i1 %cmp72 to i32
  %call74 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6341, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.636, i64 0, i64 0), i32 noundef %conv73) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %if.end70
  %call77 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %cond) #16
  %call78 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6342, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.647, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call77, i32 noundef 1) #16
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %end, label %if.end81

if.end81:                                         ; preds = %lor.lhs.false76
  %call82 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv83 = trunc i64 %call82 to i32
  %call84 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv83) #16
  %call85 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv86 = trunc i64 %call85 to i32
  %call87 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6349, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call84, i32 noundef %conv86) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %end, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end81
  %call90 = call i32 @SSL_read(%struct.ssl_st* noundef %cond27, i8* noundef nonnull %4, i32 noundef 20) #16
  %call91 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv92 = trunc i64 %call91 to i32
  %call93 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6350, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.648, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call90, i32 noundef %conv92) #16
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %end, label %if.end96

if.end96:                                         ; preds = %lor.lhs.false89
  %call97 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv98 = trunc i64 %call97 to i32
  %call99 = call i32 @SSL_write(%struct.ssl_st* noundef %cond27, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv98) #16
  %call100 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv101 = trunc i64 %call100 to i32
  %call102 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6354, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.641, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call99, i32 noundef %conv101) #16
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %end, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %if.end96
  %call106 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 20) #16
  %call107 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv108 = trunc i64 %call107 to i32
  %call109 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6355, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.649, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call106, i32 noundef %conv108) #16
  %tobool110.not = icmp ne i32 %call109, 0
  %spec.select = zext i1 %tobool110.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false104, %if.end, %lor.lhs.false31, %if.end96, %if.end81, %lor.lhs.false89, %if.end70, %lor.lhs.false76, %if.end61, %if.end49, %lor.lhs.false55, %if.end38, %lor.lhs.false44, %entry, %lor.lhs.false, %lor.lhs.false8, %lor.lhs.false14
  %testresult.0 = phi i32 [ 0, %if.end96 ], [ 0, %lor.lhs.false89 ], [ 0, %if.end81 ], [ 0, %lor.lhs.false76 ], [ 0, %if.end70 ], [ 0, %if.end61 ], [ 0, %lor.lhs.false55 ], [ 0, %if.end49 ], [ 0, %lor.lhs.false44 ], [ 0, %if.end38 ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false8 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false31 ], [ 0, %if.end ], [ %spec.select, %lor.lhs.false104 ]
  %bretry.0 = phi %struct.bio_st* [ null, %if.end96 ], [ null, %lor.lhs.false89 ], [ null, %if.end81 ], [ null, %lor.lhs.false76 ], [ null, %if.end70 ], [ null, %if.end61 ], [ null, %lor.lhs.false55 ], [ null, %if.end49 ], [ null, %lor.lhs.false44 ], [ null, %if.end38 ], [ %call1, %lor.lhs.false14 ], [ %call1, %lor.lhs.false8 ], [ %call1, %lor.lhs.false ], [ %call1, %entry ], [ %call1, %lor.lhs.false31 ], [ %call1, %if.end ], [ null, %lor.lhs.false104 ]
  %tmp.0 = phi %struct.bio_st* [ null, %if.end96 ], [ null, %lor.lhs.false89 ], [ null, %if.end81 ], [ null, %lor.lhs.false76 ], [ null, %if.end70 ], [ null, %if.end61 ], [ null, %lor.lhs.false55 ], [ null, %if.end49 ], [ %call28, %lor.lhs.false44 ], [ %call28, %if.end38 ], [ null, %lor.lhs.false14 ], [ null, %lor.lhs.false8 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false31 ], [ null, %if.end ], [ null, %lor.lhs.false104 ]
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %18) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %19) #16
  %call113 = call i32 @BIO_free(%struct.bio_st* noundef %bretry.0) #16
  %call114 = call i32 @BIO_free(%struct.bio_st* noundef %tmp.0) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_key_update_local_in_read(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %lrbuf = alloca [515 x i8], align 16
  %pwbuf = alloca [515 x i8], align 16
  %prbuf = alloca [20 x i8], align 16
  %lbio = alloca %struct.bio_st*, align 8
  %pbio = alloca %struct.bio_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [515 x i8], [515 x i8]* %lrbuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 515, i8* nonnull %4) #19
  %5 = getelementptr inbounds [515 x i8], [515 x i8]* %pwbuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 515, i8* nonnull %5) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(515) %5, i8 0, i64 515, i1 false)
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %prbuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #19
  %7 = bitcast %struct.bio_st** %lbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  store %struct.bio_st* null, %struct.bio_st** %lbio, align 8, !tbaa !3
  %8 = bitcast %struct.bio_st** %pbio to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  store %struct.bio_st* null, %struct.bio_st** %pbio, align 8, !tbaa !3
  %9 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %10 = load i8*, i8** @cert, align 8, !tbaa !3
  %11 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %9, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %10, i8* noundef %11) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6391, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.621, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %12, %struct.ssl_ctx_st* noundef %13, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6393, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6395, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false9
  %cmp15 = icmp eq i32 %tst, 0
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8
  %cond = select i1 %cmp15, %struct.ssl_st* %16, %struct.ssl_st* %17
  %cond22 = select i1 %cmp15, %struct.ssl_st* %17, %struct.ssl_st* %16
  %call23 = call i32 @BIO_new_bio_pair(%struct.bio_st** noundef nonnull %lbio, i64 noundef 512, %struct.bio_st** noundef nonnull %pbio, i64 noundef 512) #16
  %call24 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6401, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.635, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call23, i32 noundef 1) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %if.end
  %18 = load %struct.bio_st*, %struct.bio_st** %lbio, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %cond, %struct.bio_st* noundef %18, %struct.bio_st* noundef %18) #16
  %19 = load %struct.bio_st*, %struct.bio_st** %pbio, align 8, !tbaa !3
  call void @SSL_set_bio(%struct.ssl_st* noundef %cond22, %struct.bio_st* noundef %19, %struct.bio_st* noundef %19) #16
  %call28 = call i32 @SSL_write(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %5, i32 noundef 515) #16
  %call29 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6408, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.650, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call28, i32 noundef -1) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.end27
  %call32 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond22, i32 noundef -1) #16
  %call33 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6409, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.640, i64 0, i64 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), i32 noundef %call32, i32 noundef 3) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end36

if.end36:                                         ; preds = %lor.lhs.false31
  %call38 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 515) #16
  %call39 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6413, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.651, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call38, i32 noundef -1) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %if.end36
  %call42 = call i32 @SSL_get_error(%struct.ssl_st* noundef %cond, i32 noundef -1) #16
  %call43 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6414, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.638, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0), i32 noundef %call42, i32 noundef 2) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %lor.lhs.false41
  %call47 = call i32 @SSL_key_update(%struct.ssl_st* noundef %cond, i32 noundef 1) #16
  %cmp48 = icmp ne i32 %call47, 0
  %conv49 = zext i1 %cmp48 to i32
  %call50 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6418, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.636, i64 0, i64 0), i32 noundef %conv49) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.end46
  %call53 = call i32 @SSL_do_handshake(%struct.ssl_st* noundef %cond) #16
  %call54 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6419, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.647, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call53, i32 noundef 1) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %if.end57

if.end57:                                         ; preds = %lor.lhs.false52
  %call59 = call i32 @SSL_write(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %5, i32 noundef 515) #16
  %call60 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6426, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.650, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.652, i64 0, i64 0), i32 noundef %call59, i32 noundef 515) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.end57
  %call64 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 515) #16
  %call65 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6427, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.651, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.653, i64 0, i64 0), i32 noundef %call64, i32 noundef 515) #16
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %end, label %if.end68

if.end68:                                         ; preds = %lor.lhs.false62
  %call69 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv70 = trunc i64 %call69 to i32
  %call71 = call i32 @SSL_write(%struct.ssl_st* noundef %cond, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv70) #16
  %call72 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv73 = trunc i64 %call72 to i32
  %call74 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6434, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.644, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call71, i32 noundef %conv73) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %if.end68
  %call78 = call i32 @SSL_read(%struct.ssl_st* noundef %cond22, i8* noundef nonnull %6, i32 noundef 20) #16
  %call79 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv80 = trunc i64 %call79 to i32
  %call81 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6435, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.639, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call78, i32 noundef %conv80) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %end, label %if.end84

if.end84:                                         ; preds = %lor.lhs.false76
  %call85 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv86 = trunc i64 %call85 to i32
  %call87 = call i32 @SSL_write(%struct.ssl_st* noundef %cond22, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i32 noundef %conv86) #16
  %call88 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv89 = trunc i64 %call88 to i32
  %call90 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6439, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.641, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call87, i32 noundef %conv89) #16
  %tobool91.not = icmp eq i32 %call90, 0
  br i1 %tobool91.not, label %end, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %if.end84
  %call94 = call i32 @SSL_read(%struct.ssl_st* noundef %cond, i8* noundef nonnull %4, i32 noundef 515) #16
  %call95 = call i64 @strlen(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0)) #17
  %conv96 = trunc i64 %call95 to i32
  %call97 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6440, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.651, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.625, i64 0, i64 0), i32 noundef %call94, i32 noundef %conv96) #16
  %tobool98.not = icmp ne i32 %call97, 0
  %spec.select = zext i1 %tobool98.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false92, %if.end84, %if.end68, %lor.lhs.false76, %if.end57, %lor.lhs.false62, %if.end46, %lor.lhs.false52, %if.end36, %lor.lhs.false41, %if.end27, %lor.lhs.false31, %if.end, %entry, %lor.lhs.false, %lor.lhs.false9
  %testresult.0 = phi i32 [ 0, %if.end84 ], [ 0, %lor.lhs.false76 ], [ 0, %if.end68 ], [ 0, %lor.lhs.false62 ], [ 0, %if.end57 ], [ 0, %lor.lhs.false52 ], [ 0, %if.end46 ], [ 0, %lor.lhs.false41 ], [ 0, %if.end36 ], [ 0, %lor.lhs.false31 ], [ 0, %if.end27 ], [ 0, %if.end ], [ 0, %lor.lhs.false9 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %lor.lhs.false92 ]
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %20) #16
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %22) #16
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 515, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 515, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_clear(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6469, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %idx, 1
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false11

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call6 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp7 = icmp ne i64 %call6, 0
  %conv8 = zext i1 %cmp7 to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6472, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.654, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call12 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %8, %struct.ssl_ctx_st* noundef %9, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp13 = icmp ne i32 %call12, 0
  %conv14 = zext i1 %cmp13 to i32
  %call15 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6474, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv14) #16
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %end, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false11
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call18 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11, i32 noundef 0) #16
  %cmp19 = icmp ne i32 %call18, 0
  %conv20 = zext i1 %cmp19 to i32
  %call21 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6476, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv20) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false17
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call23 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %12) #16
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call24 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %13) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %14) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call25 = call i32 @SSL_clear(%struct.ssl_st* noundef %15) #16
  %cmp26 = icmp ne i32 %call25, 0
  %conv27 = zext i1 %cmp26 to i32
  %call28 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6485, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.655, i64 0, i64 0), i32 noundef %conv27) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %if.end31

if.end31:                                         ; preds = %if.end
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call32 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6489, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %if.end31
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call38 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 0) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6491, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %lor.lhs.false37
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call44 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %20) #16
  %cmp45 = icmp ne i32 %call44, 0
  %conv46 = zext i1 %cmp45 to i32
  %call47 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6492, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv46) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %if.end50

if.end50:                                         ; preds = %lor.lhs.false43
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call51 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call52 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %22) #16
  br label %end

end:                                              ; preds = %if.end31, %lor.lhs.false37, %lor.lhs.false43, %if.end, %entry, %land.lhs.true, %lor.lhs.false11, %lor.lhs.false17, %if.end50
  %testresult.0 = phi i32 [ 1, %if.end50 ], [ 0, %lor.lhs.false43 ], [ 0, %lor.lhs.false37 ], [ 0, %if.end31 ], [ 0, %if.end ], [ 0, %lor.lhs.false17 ], [ 0, %lor.lhs.false11 ], [ 0, %land.lhs.true ], [ 0, %entry ]
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %25) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_max_fragment_len_ext(i32 noundef %idx_tst) #1 {
entry:
  %ctx = alloca %struct.ssl_ctx_st*, align 8
  %MFL_mode = alloca i32, align 4
  %0 = bitcast %struct.ssl_ctx_st** %ctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %ctx, align 8, !tbaa !3
  %1 = bitcast i32* %MFL_mode to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #19
  store i32 0, i32* %MFL_mode, align 4, !tbaa !7
  %2 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call1 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %2, %struct.ssl_method_st* noundef null, %struct.ssl_method_st* noundef %call, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef null, %struct.ssl_ctx_st** noundef nonnull %ctx, i8* noundef null, i8* noundef null) #16
  %cmp = icmp ne i32 %call1, 0
  %conv = zext i1 %cmp to i32
  %call2 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6580, i8* noundef getelementptr inbounds ([96 x i8], [96 x i8]* @.str.656, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !tbaa !3
  %idxprom = sext i32 %idx_tst to i64
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* @max_fragment_len_test, i64 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !9
  %call3 = call i32 @SSL_CTX_set_tlsext_max_fragment_length(%struct.ssl_ctx_st* noundef %3, i8 noundef zeroext %4) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6584, i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.657, i64 0, i64 0), i32 noundef %conv5) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.end
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !tbaa !3
  %call10 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %5) #16
  %6 = bitcast %struct.ssl_st* %call10 to i8*
  %call11 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6588, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.658, i64 0, i64 0), i8* noundef %6) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end14

if.end14:                                         ; preds = %if.end9
  %call15 = call %struct.bio_method_st* @BIO_s_mem() #16
  %call16 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call15) #16
  %call17 = call %struct.bio_method_st* @BIO_s_mem() #16
  %call18 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call17) #16
  %7 = bitcast %struct.bio_st* %call16 to i8*
  %call19 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6593, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.659, i64 0, i64 0), i8* noundef %7) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end14
  %8 = bitcast %struct.bio_st* %call18 to i8*
  %call21 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6593, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.660, i64 0, i64 0), i8* noundef %8) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.then23, label %if.end26

if.then23:                                        ; preds = %lor.lhs.false, %if.end14
  %call24 = call i32 @BIO_free(%struct.bio_st* noundef %call16) #16
  %call25 = call i32 @BIO_free(%struct.bio_st* noundef %call18) #16
  br label %end

if.end26:                                         ; preds = %lor.lhs.false
  call void @SSL_set_bio(%struct.ssl_st* noundef %call10, %struct.bio_st* noundef %call16, %struct.bio_st* noundef %call18) #16
  %call27 = call i32 @SSL_connect(%struct.ssl_st* noundef %call10) #16
  %call28 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6601, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.661, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call27, i32 noundef 0) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %if.end31

if.end31:                                         ; preds = %if.end26
  %call32 = call fastcc i32 @get_MFL_from_client_hello(%struct.bio_st* noundef %call18, i32* noundef nonnull %MFL_mode) #18
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6606, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.662, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %if.end31
  %conv41 = zext i8 %4 to i32
  %9 = load i32, i32* %MFL_mode, align 4, !tbaa !7
  %cmp42 = icmp eq i32 %9, %conv41
  %conv43 = zext i1 %cmp42 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6609, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.663, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool47.not = icmp ne i32 %call46, 0
  %spec.select = zext i1 %tobool47.not to i32
  br label %end

end:                                              ; preds = %if.end38, %if.end31, %if.end26, %if.end9, %if.end, %if.then23
  %testresult.0 = phi i32 [ 0, %if.end31 ], [ 0, %if.end26 ], [ 0, %if.then23 ], [ 0, %if.end9 ], [ 0, %if.end ], [ %spec.select, %if.end38 ]
  %con.0 = phi %struct.ssl_st* [ %call10, %if.end31 ], [ %call10, %if.end26 ], [ %call10, %if.then23 ], [ %call10, %if.end9 ], [ null, %if.end ], [ %call10, %if.end38 ]
  call void @SSL_free(%struct.ssl_st* noundef %con.0) #16
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %10) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_srp(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call = tail call %struct.SRP_VBASE_st* @SRP_VBASE_new(i8* noundef null) #16
  store %struct.SRP_VBASE_st* %call, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  %4 = bitcast %struct.SRP_VBASE_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6833, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.677, i64 0, i64 0), i8* noundef %4) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %5 = icmp ult i32 %tst, 2
  br i1 %5, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %call4 = tail call fastcc i32 @create_new_vbase() #18
  %cmp5 = icmp ne i32 %call4, 0
  %conv = zext i1 %cmp5 to i32
  %call6 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6837, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.678, i64 0, i64 0), i32 noundef %conv) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end30

if.else:                                          ; preds = %if.end
  %6 = and i32 %tst, -2
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %if.then15, label %if.end24

if.then15:                                        ; preds = %if.else
  %8 = load i8*, i8** @tmpfilename, align 8, !tbaa !3
  %call16 = tail call fastcc i32 @create_new_vfile(i8* noundef %8) #18
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6841, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.679, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end24

if.end24:                                         ; preds = %if.else, %if.then15
  %tstsrpfile.0.in = phi i8** [ @tmpfilename, %if.then15 ], [ @srpvfile, %if.else ]
  %tstsrpfile.0 = load i8*, i8** %tstsrpfile.0.in, align 8, !tbaa !3
  %9 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  %call25 = tail call i32 @SRP_VBASE_init(%struct.SRP_VBASE_st* noundef %9, i8* noundef %tstsrpfile.0) #16
  %call26 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6847, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.680, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.681, i64 0, i64 0), i32 noundef %call25, i32 noundef 0) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end30

if.end30:                                         ; preds = %if.end24, %if.then3
  %10 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call31 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call32 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %11 = load i8*, i8** @cert, align 8, !tbaa !3
  %12 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call33 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %10, %struct.ssl_method_st* noundef %call31, %struct.ssl_method_st* noundef %call32, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %11, i8* noundef %12) #16
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6853, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %if.end39

if.end39:                                         ; preds = %if.end30
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call40 = call i32 @SSL_CTX_set_srp_username_callback(%struct.ssl_ctx_st* noundef %13, i32 (%struct.ssl_st*, i32*, i8*)* noundef nonnull @ssl_srp_cb) #16
  %call41 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6856, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.682, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call40, i32 noundef 0) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end39
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call44 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %14, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.684, i64 0, i64 0)) #16
  %cmp45 = icmp ne i32 %call44, 0
  %conv46 = zext i1 %cmp45 to i32
  %call47 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6857, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.683, i64 0, i64 0), i32 noundef %conv46) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call50 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %15, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp51 = icmp ne i64 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6858, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.685, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false49
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call56 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %16, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp57 = icmp ne i64 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6859, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.654, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call62 = call i32 @SSL_CTX_set_srp_username(%struct.ssl_ctx_st* noundef %17, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #16
  %call63 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6860, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.686, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call62, i32 noundef 0) #16
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %end, label %if.end66

if.end66:                                         ; preds = %lor.lhs.false61
  %rem = srem i32 %tst, 2
  %cmp67 = icmp eq i32 %rem, 1
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  br i1 %cmp67, label %if.then69, label %if.else75

if.then69:                                        ; preds = %if.end66
  %call70 = call i32 @SSL_CTX_set_srp_password(%struct.ssl_ctx_st* noundef %18, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.688, i64 0, i64 0)) #16
  %call71 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6864, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.687, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call70, i32 noundef 0) #16
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %end, label %if.end81

if.else75:                                        ; preds = %if.end66
  %call76 = call i32 @SSL_CTX_set_srp_password(%struct.ssl_ctx_st* noundef %18, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.676, i64 0, i64 0)) #16
  %call77 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6867, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.689, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call76, i32 noundef 0) #16
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %end, label %if.end81

if.end81:                                         ; preds = %if.else75, %if.then69
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call82 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %19, %struct.ssl_ctx_st* noundef %20, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp83 = icmp ne i32 %call82, 0
  %conv84 = zext i1 %cmp83 to i32
  %call85 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6872, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv84) #16
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %end, label %if.end88

if.end88:                                         ; preds = %if.end81
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call89 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %21, %struct.ssl_st* noundef %22, i32 noundef 0) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %if.else101, label %if.then91

if.then91:                                        ; preds = %if.end88
  %cmp93 = icmp eq i32 %rem, 0
  %conv94 = zext i1 %cmp93 to i32
  %call97 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6877, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.690, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool98.not = icmp eq i32 %call97, 0
  br i1 %tobool98.not, label %end, label %if.end111

if.else101:                                       ; preds = %if.end88
  %conv104 = zext i1 %cmp67 to i32
  %call107 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6880, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.691, i64 0, i64 0), i32 noundef %conv104) #16
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %end, label %if.end111

if.end111:                                        ; preds = %if.else101, %if.then91
  br label %end

end:                                              ; preds = %if.else101, %if.then91, %if.end81, %if.else75, %if.then69, %if.end39, %lor.lhs.false43, %lor.lhs.false49, %lor.lhs.false55, %lor.lhs.false61, %if.end30, %if.end24, %if.then15, %if.then3, %entry, %if.end111
  %testresult.0 = phi i32 [ 1, %if.end111 ], [ 0, %if.then91 ], [ 0, %if.else101 ], [ 0, %if.end81 ], [ 0, %if.then69 ], [ 0, %if.else75 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false55 ], [ 0, %lor.lhs.false49 ], [ 0, %lor.lhs.false43 ], [ 0, %if.end39 ], [ 0, %if.end30 ], [ 0, %if.then3 ], [ 0, %if.end24 ], [ 0, %if.then15 ], [ 0, %entry ]
  %23 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  call void @SRP_VBASE_free(%struct.SRP_VBASE_st* noundef %23) #16
  store %struct.SRP_VBASE_st* null, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_info_callback(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %written = alloca i64, align 8
  %readbytes = alloca i64, align 8
  %buf = alloca [80 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i1 false, i1* @info_cb_failed, align 4
  store i32 -1, i32* @info_cb_this_state, align 4, !tbaa !7
  store i32 %tst, i32* @info_cb_offset, align 4, !tbaa !7
  %cmp1 = icmp sgt i32 %tst, 3
  br i1 %cmp1, label %if.then2, label %if.end47

if.then2:                                         ; preds = %entry
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef 0) #18
  %cmp3 = icmp ne i32 %call, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7083, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.708, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.then2
  %8 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %8) #16
  %9 = and i32 %tst, 1
  %cmp7 = icmp eq i32 %9, 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8
  %cond = select i1 %cmp7, %struct.ssl_st* %10, %struct.ssl_st* %11
  call void @SSL_set_info_callback(%struct.ssl_st* noundef %cond, void (%struct.ssl_st*, i32, i32)* noundef nonnull @sslapi_info_callback) #16
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call9 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call10 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %12, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call9, i64* noundef nonnull %written) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7094, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %13 = load i64, i64* %written, align 8, !tbaa !10
  %call15 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call16 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7095, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %13, i64 noundef %call15) #16
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %cleanup, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call19 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %14, i8* noundef nonnull %7, i64 noundef 80, i64* noundef nonnull %readbytes) #16
  %call20 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7098, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call19, i32 noundef 1) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %cleanup, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %15 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call24 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call25 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7099, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %15, i8* noundef nonnull %7, i64 noundef %call24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %cleanup, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false22
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call28 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %16) #16
  %call29 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7101, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call28, i32 noundef 2) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %cleanup, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call32 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %17, %struct.ssl_st* noundef %18, i32 noundef 0) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7103, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %cleanup, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %lor.lhs.false31
  %.b140 = load i1, i1* @info_cb_failed, align 4
  %conv39 = zext i1 %.b140 to i32
  %call40 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7104, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.709, i64 0, i64 0), i32 noundef %conv39) #16
  %tobool41.not = icmp ne i32 %call40, 0
  %spec.select141 = zext i1 %tobool41.not to i32
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false37, %if.end6, %lor.lhs.false, %lor.lhs.false18, %lor.lhs.false22, %lor.lhs.false27, %lor.lhs.false31, %if.then2
  %testresult.0 = phi i32 [ 0, %if.then2 ], [ 0, %lor.lhs.false31 ], [ 0, %lor.lhs.false27 ], [ 0, %lor.lhs.false22 ], [ 0, %lor.lhs.false18 ], [ 0, %lor.lhs.false ], [ 0, %if.end6 ], [ %spec.select141, %lor.lhs.false37 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  br label %end

if.end47:                                         ; preds = %entry
  %cmp = icmp slt i32 %tst, 2
  %. = select i1 %cmp, i32 771, i32 772
  %19 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call48 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call49 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %20 = load i8*, i8** @cert, align 8, !tbaa !3
  %21 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call50 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %19, %struct.ssl_method_st* noundef %call48, %struct.ssl_method_st* noundef %call49, i32 noundef %., i32 noundef %., %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %20, i8* noundef %21) #16
  %cmp51 = icmp ne i32 %call50, 0
  %conv52 = zext i1 %cmp51 to i32
  %call53 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7115, i8* noundef getelementptr inbounds ([117 x i8], [117 x i8]* @.str.710, i64 0, i64 0), i32 noundef %conv52) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %if.end56

if.end56:                                         ; preds = %if.end47
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call57 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %22, i32 noundef 118, i64 noundef 1, i8* noundef null) #16
  %cmp58 = icmp ne i64 %call57, 0
  %conv59 = zext i1 %cmp58 to i32
  %call60 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7118, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.561, i64 0, i64 0), i32 noundef %conv59) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %if.end63

if.end63:                                         ; preds = %if.end56
  %23 = and i32 %tst, 1
  %cmp65 = icmp eq i32 %23, 0
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8
  %cond70 = select i1 %cmp65, %struct.ssl_ctx_st* %24, %struct.ssl_ctx_st* %25
  call void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* noundef %cond70, void (%struct.ssl_st*, i32, i32)* noundef nonnull @sslapi_info_callback) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call71 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %26, %struct.ssl_ctx_st* noundef %27, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp72 = icmp ne i32 %call71, 0
  %conv73 = zext i1 %cmp72 to i32
  %call74 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7129, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv73) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %if.end63
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call77 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %28, %struct.ssl_st* noundef %29, i32 noundef 0) #16
  %cmp78 = icmp ne i32 %call77, 0
  %conv79 = zext i1 %cmp78 to i32
  %call80 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7131, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv79) #16
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %end, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false76
  %.b139 = load i1, i1* @info_cb_failed, align 4
  %conv84 = zext i1 %.b139 to i32
  %call85 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7132, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.709, i64 0, i64 0), i32 noundef %conv84) #16
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %end, label %if.end88

if.end88:                                         ; preds = %lor.lhs.false82
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call89 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %30) #16
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call90 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %31) #16
  %32 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call91 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %32) #16
  %33 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %33) #16
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call92 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %35, %struct.ssl_ctx_st* noundef %36, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp93 = icmp ne i32 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7146, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %if.end88
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call98 = call i32 @SSL_set_session(%struct.ssl_st* noundef %37, %struct.ssl_session_st* noundef %call89) #16
  %cmp99 = icmp ne i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  %call101 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7147, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.502, i64 0, i64 0), i32 noundef %conv100) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %lor.lhs.false97
  %38 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %39 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call104 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %38, %struct.ssl_st* noundef %39, i32 noundef 0) #16
  %cmp105 = icmp ne i32 %call104, 0
  %conv106 = zext i1 %cmp105 to i32
  %call107 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7149, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv106) #16
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %end, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %lor.lhs.false103
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call110 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %40) #16
  %cmp111 = icmp ne i32 %call110, 0
  %conv112 = zext i1 %cmp111 to i32
  %call113 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7150, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv112) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %end, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %lor.lhs.false109
  %.b = load i1, i1* @info_cb_failed, align 4
  %conv117 = zext i1 %.b to i32
  %call118 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7151, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.709, i64 0, i64 0), i32 noundef %conv117) #16
  %tobool119.not = icmp ne i32 %call118, 0
  %spec.select = zext i1 %tobool119.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false115, %cleanup, %if.end88, %lor.lhs.false97, %lor.lhs.false103, %lor.lhs.false109, %if.end63, %lor.lhs.false76, %lor.lhs.false82, %if.end56, %if.end47
  %clntsess.0 = phi %struct.ssl_session_st* [ null, %cleanup ], [ %call89, %lor.lhs.false109 ], [ %call89, %lor.lhs.false103 ], [ %call89, %lor.lhs.false97 ], [ %call89, %if.end88 ], [ null, %lor.lhs.false82 ], [ null, %lor.lhs.false76 ], [ null, %if.end63 ], [ null, %if.end56 ], [ null, %if.end47 ], [ %call89, %lor.lhs.false115 ]
  %testresult.1 = phi i32 [ %testresult.0, %cleanup ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false103 ], [ 0, %lor.lhs.false97 ], [ 0, %if.end88 ], [ 0, %lor.lhs.false82 ], [ 0, %lor.lhs.false76 ], [ 0, %if.end63 ], [ 0, %if.end56 ], [ 0, %if.end47 ], [ %spec.select, %lor.lhs.false115 ]
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %41) #16
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %42) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %clntsess.0) #16
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %43) #16
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %44) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_pending(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %msg = alloca [15 x i8], align 1
  %buf = alloca [5 x i8], align 1
  %written = alloca i64, align 8
  %readbytes = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [15 x i8], [15 x i8]* %msg, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %4) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %4, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i64 15, i1 false)
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #19
  %6 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %cmp = icmp eq i32 %tst, 0
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7178, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %if.end15

if.else:                                          ; preds = %entry
  %call6 = tail call %struct.ssl_method_st* @DTLS_server_method() #16
  %call7 = tail call %struct.ssl_method_st* @DTLS_client_method() #16
  %11 = load i8*, i8** @cert, align 8, !tbaa !3
  %12 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call8 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call6, %struct.ssl_method_st* noundef %call7, i32 noundef 65279, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %11, i8* noundef %12) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv10 = zext i1 %cmp9 to i32
  %call11 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7185, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.745, i64 0, i64 0), i32 noundef %conv10) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.else, %if.then
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %13, %struct.ssl_ctx_st* noundef %14, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7209, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end15
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call21 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %15, %struct.ssl_st* noundef %16, i32 noundef 0) #16
  %cmp22 = icmp ne i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7211, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %end, label %if.end27

if.end27:                                         ; preds = %lor.lhs.false
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call28 = call i32 @SSL_pending(%struct.ssl_st* noundef %17) #16
  %call29 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7214, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.746, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call28, i32 noundef 0) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.end27
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call32 = call i32 @SSL_has_pending(%struct.ssl_st* noundef %18) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7215, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.747, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %lor.lhs.false31
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call38 = call i32 @SSL_pending(%struct.ssl_st* noundef %19) #16
  %call39 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7216, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.748, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call38, i32 noundef 0) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %lor.lhs.false37
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call42 = call i32 @SSL_has_pending(%struct.ssl_st* noundef %20) #16
  %cmp43 = icmp ne i32 %call42, 0
  %conv44 = zext i1 %cmp43 to i32
  %call45 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7217, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.749, i64 0, i64 0), i32 noundef %conv44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %lor.lhs.false41
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call48 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %21, i8* noundef nonnull %4, i64 noundef 15, i64* noundef nonnull %written) #16
  %cmp49 = icmp ne i32 %call48, 0
  %conv50 = zext i1 %cmp49 to i32
  %call51 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7218, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.750, i64 0, i64 0), i32 noundef %conv50) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %lor.lhs.false47
  %22 = load i64, i64* %written, align 8, !tbaa !10
  %call54 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7219, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.751, i64 0, i64 0), i64 noundef %22, i64 noundef 15) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false53
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call58 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %23, i8* noundef nonnull %5, i64 noundef 5, i64* noundef nonnull %readbytes) #16
  %cmp59 = icmp ne i32 %call58, 0
  %conv60 = zext i1 %cmp59 to i32
  %call61 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7220, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv60) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %end, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false56
  %24 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call64 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7221, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0), i64 noundef %24, i64 noundef 5) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %lor.lhs.false63
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call67 = call i32 @SSL_pending(%struct.ssl_st* noundef %25) #16
  %26 = load i64, i64* %written, align 8, !tbaa !10
  %27 = load i64, i64* %readbytes, align 8, !tbaa !10
  %sub = sub i64 %26, %27
  %conv68 = trunc i64 %sub to i32
  %call69 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7222, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.746, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.752, i64 0, i64 0), i32 noundef %call67, i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %lor.lhs.false66
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call72 = call i32 @SSL_has_pending(%struct.ssl_st* noundef %28) #16
  %cmp73 = icmp ne i32 %call72, 0
  %conv74 = zext i1 %cmp73 to i32
  %call75 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7223, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.747, i64 0, i64 0), i32 noundef %conv74) #16
  %tobool76.not = icmp ne i32 %call75, 0
  %spec.select = zext i1 %tobool76.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false71, %if.end27, %lor.lhs.false31, %lor.lhs.false37, %lor.lhs.false41, %lor.lhs.false47, %lor.lhs.false53, %lor.lhs.false56, %lor.lhs.false63, %lor.lhs.false66, %if.end15, %lor.lhs.false, %if.else, %if.then
  %testresult.0 = phi i32 [ 0, %lor.lhs.false66 ], [ 0, %lor.lhs.false63 ], [ 0, %lor.lhs.false56 ], [ 0, %lor.lhs.false53 ], [ 0, %lor.lhs.false47 ], [ 0, %lor.lhs.false41 ], [ 0, %lor.lhs.false37 ], [ 0, %lor.lhs.false31 ], [ 0, %if.end27 ], [ 0, %lor.lhs.false ], [ 0, %if.end15 ], [ 0, %if.then ], [ 0, %if.else ], [ %spec.select, %lor.lhs.false71 ]
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %30) #16
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %31) #16
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %32) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_get_shared_ciphers(i32 noundef %tst) #1 {
entry:
  %call = tail call fastcc i32 @int_test_ssl_get_shared_ciphers(i32 noundef %tst, i32 noundef 0) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @int_test_ssl_get_shared_ciphers(i32 noundef %tst, i32 noundef 1) #18
  %tobool2 = icmp ne i32 %call1, 0
  %phi.cast = zext i1 %tobool2 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i32 [ 0, %entry ], [ %phi.cast, %land.rhs ]
  ret i32 %0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ticket_callbacks(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i1 false, i1* @tick_key_cb_called, align 4
  store i1 false, i1* @dec_tick_called, align 4
  store i1 false, i1* @gen_tick_called, align 4
  %4 = and i32 %tst, -6
  %5 = icmp eq i32 %4, 10
  store i1 %5, i1* @tick_key_renew, align 4
  %6 = icmp ult i32 %tst, 8
  br i1 %6, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %7 = sext i32 %tst to i64
  %switch.gep = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.test_ticket_callbacks, i64 0, i64 %7
  %switch.load = load i32, i32* %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %.sink = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry ]
  store i32 %.sink, i32* @tick_dec_ret, align 4, !tbaa !7
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call9 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = and i32 %tst, 1
  %cmp10 = icmp eq i32 %9, 0
  %cond = select i1 %cmp10, i32 771, i32 772
  %10 = load i8*, i8** @cert, align 8, !tbaa !3
  %11 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call11 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call9, i32 noundef 769, i32 noundef %cond, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %10, i8* noundef %11) #16
  %cmp12 = icmp ne i32 %call11, 0
  %conv = zext i1 %cmp12 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7599, i8* noundef getelementptr inbounds ([165 x i8], [165 x i8]* @.str.775, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call13, 0
  br i1 %tobool.not, label %end, label %if.end15

if.end15:                                         ; preds = %sw.epilog
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call16 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %12, i32 noundef 44, i64 noundef 0, i8* noundef null) #16
  %cmp17 = icmp ne i64 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7606, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.776, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end15
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call23 = call i32 @SSL_CTX_set_session_ticket_cb(%struct.ssl_ctx_st* noundef %13, i32 (%struct.ssl_st*, i8*)* noundef nonnull @gen_tick_cb, i32 (%struct.ssl_st*, %struct.ssl_session_st*, i8*, i64, i32, i8*)* noundef nonnull @dec_tick_cb, i8* noundef null) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7610, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.777, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end29

if.end29:                                         ; preds = %if.end22
  %cmp30 = icmp sgt i32 %tst, 11
  br i1 %cmp30, label %if.then32, label %if.else40

if.then32:                                        ; preds = %if.end29
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call33 = call i32 @SSL_CTX_set_tlsext_ticket_key_evp_cb(%struct.ssl_ctx_st* noundef %14, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.evp_mac_ctx_st*, i32)* noundef nonnull @tick_key_evp_cb) #16
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7614, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.778, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %if.end52

if.else40:                                        ; preds = %if.end29
  %cmp41 = icmp sgt i32 %tst, 7
  br i1 %cmp41, label %if.then43, label %if.end52

if.then43:                                        ; preds = %if.else40
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call44 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %15, i32 noundef 72, void ()* noundef bitcast (i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)* @tick_key_cb to void ()*)) #16
  %cmp45 = icmp ne i64 %call44, 0
  %conv46 = zext i1 %cmp45 to i32
  %call47 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7618, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.779, i64 0, i64 0), i32 noundef %conv46) #16
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %end, label %if.end52

if.end52:                                         ; preds = %if.else40, %if.then43, %if.then32
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call53 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp54 = icmp ne i32 %call53, 0
  %conv55 = zext i1 %cmp54 to i32
  %call56 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7624, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv55) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %if.end52
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call59 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 0) #16
  %cmp60 = icmp ne i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  %call62 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7626, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv61) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %if.end65

if.end65:                                         ; preds = %lor.lhs.false58
  %.b152 = load i1, i1* @gen_tick_called, align 4
  %20 = zext i1 %.b152 to i32
  %call66 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7636, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.780, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %20, i32 noundef 1) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %if.end65
  %.b150 = load i1, i1* @dec_tick_called, align 4
  %21 = zext i1 %.b150 to i32
  %22 = xor i32 %9, 1
  %call73 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7637, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.781, i64 0, i64 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.782, i64 0, i64 0), i32 noundef %21, i32 noundef %22) #16
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %end, label %if.end76

if.end76:                                         ; preds = %lor.lhs.false68
  store i1 false, i1* @dec_tick_called, align 4
  store i1 false, i1* @gen_tick_called, align 4
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call77 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call78 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call79 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %27) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call80 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %28, %struct.ssl_ctx_st* noundef %29, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp81 = icmp ne i32 %call80, 0
  %conv82 = zext i1 %cmp81 to i32
  %call83 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7651, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv82) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %if.end76
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call86 = call i32 @SSL_set_session(%struct.ssl_st* noundef %30, %struct.ssl_session_st* noundef %call77) #16
  %cmp87 = icmp ne i32 %call86, 0
  %conv88 = zext i1 %cmp87 to i32
  %call89 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7652, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.502, i64 0, i64 0), i32 noundef %conv88) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %lor.lhs.false85
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call92 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %31, %struct.ssl_st* noundef %32, i32 noundef 0) #16
  %cmp93 = icmp ne i32 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7654, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %if.end98

if.end98:                                         ; preds = %lor.lhs.false91
  %33 = load i32, i32* @tick_dec_ret, align 4, !tbaa !7
  %34 = add i32 %33, -1
  %35 = icmp ult i32 %34, 2
  %36 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call105 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %36) #16
  %cmp106 = icmp ne i32 %call105, 0
  %conv107 = zext i1 %cmp106 to i32
  br i1 %35, label %if.then104, label %if.else112

if.then104:                                       ; preds = %if.end98
  %call108 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7659, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv107) #16
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %end, label %if.end120

if.else112:                                       ; preds = %if.end98
  %call116 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7662, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv107) #16
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %end, label %if.end120

if.end120:                                        ; preds = %if.else112, %if.then104
  %.b151 = load i1, i1* @gen_tick_called, align 4
  %37 = zext i1 %.b151 to i32
  %.b153 = load i1, i1* @tick_key_renew, align 4
  %38 = load i32, i32* @tick_dec_ret, align 4
  %cmp123 = icmp eq i32 %38, 2
  %or.cond138 = select i1 %.b153, i1 true, i1 %cmp123
  %cmp125 = icmp eq i32 %38, 4
  %narrow = select i1 %or.cond138, i1 true, i1 %cmp125
  %39 = zext i1 %narrow to i32
  %call128 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7670, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.780, i64 0, i64 0), i8* noundef getelementptr inbounds ([122 x i8], [122 x i8]* @.str.783, i64 0, i64 0), i32 noundef %37, i32 noundef %39) #16
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %end, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %if.end120
  %.b = load i1, i1* @dec_tick_called, align 4
  %40 = zext i1 %.b to i32
  %call131 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7671, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.781, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %40, i32 noundef 1) #16
  %tobool132.not = icmp ne i32 %call131, 0
  %spec.select = zext i1 %tobool132.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false130, %if.end120, %if.else112, %if.then104, %if.end76, %lor.lhs.false85, %lor.lhs.false91, %if.end65, %lor.lhs.false68, %if.end52, %lor.lhs.false58, %if.then43, %if.then32, %if.end22, %if.end15, %sw.epilog
  %clntsess.0 = phi %struct.ssl_session_st* [ %call77, %if.end120 ], [ %call77, %if.then104 ], [ %call77, %if.else112 ], [ %call77, %lor.lhs.false91 ], [ %call77, %lor.lhs.false85 ], [ %call77, %if.end76 ], [ null, %lor.lhs.false68 ], [ null, %if.end65 ], [ null, %lor.lhs.false58 ], [ null, %if.end52 ], [ null, %if.then32 ], [ null, %if.then43 ], [ null, %if.end22 ], [ null, %if.end15 ], [ null, %sw.epilog ], [ %call77, %lor.lhs.false130 ]
  %testresult.0 = phi i32 [ 0, %if.end120 ], [ 0, %if.then104 ], [ 0, %if.else112 ], [ 0, %lor.lhs.false91 ], [ 0, %lor.lhs.false85 ], [ 0, %if.end76 ], [ 0, %lor.lhs.false68 ], [ 0, %if.end65 ], [ 0, %lor.lhs.false58 ], [ 0, %if.end52 ], [ 0, %if.then32 ], [ 0, %if.then43 ], [ 0, %if.end22 ], [ 0, %if.end15 ], [ 0, %sw.epilog ], [ %spec.select, %lor.lhs.false130 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %clntsess.0) #16
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %41) #16
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %42) #16
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %43) #16
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %44) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_shutdown(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %msg = alloca [15 x i8], align 1
  %buf = alloca [80 x i8], align 16
  %written = alloca i64, align 8
  %readbytes = alloca i64, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [15 x i8], [15 x i8]* %msg, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %4) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %4, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.test_shutdown.msg, i64 0, i64 0), i64 15, i1 false)
  %5 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #19
  %6 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %cmp = icmp slt i32 %tst, 2
  %cond = select i1 %cmp, i32 771, i32 772
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef %cond, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7778, i8* noundef getelementptr inbounds ([159 x i8], [159 x i8]* @.str.793, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %cmp5 = icmp eq i32 %tst, 5
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_post_handshake_auth(%struct.ssl_ctx_st* noundef %11, i32 noundef 1) #16
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %12, %struct.ssl_ctx_st* noundef %13, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp10 = icmp ne i32 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7785, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end8
  %cmp16 = icmp eq i32 %tst, 3
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  br i1 %cmp16, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end15
  %call19 = call i32 @create_bare_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0, i32 noundef 1) #16
  %cmp20 = icmp ne i32 %call19, 0
  %conv21 = zext i1 %cmp20 to i32
  %call22 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7790, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.794, i64 0, i64 0), i32 noundef %conv21) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then18
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call24 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %16) #16
  %17 = bitcast %struct.ssl_session_st* %call24 to i8*
  %call25 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7791, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.795, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.796, i64 0, i64 0), i8* noundef %17, i8* noundef null) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %call28 = call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef %call24) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7792, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.797, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end52

if.else:                                          ; preds = %if.end15
  %call35 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0) #16
  %cmp36 = icmp ne i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  %call38 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7795, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %if.else
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call41 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %18) #16
  %19 = bitcast %struct.ssl_session_st* %call41 to i8*
  %call42 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7796, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.795, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.796, i64 0, i64 0), i8* noundef %19, i8* noundef null) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %call45 = call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef %call41) #16
  %cmp46 = icmp ne i32 %call45, 0
  %conv47 = zext i1 %cmp46 to i32
  %call48 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7797, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.797, i64 0, i64 0), i32 noundef %conv47) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false44, %lor.lhs.false27
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %20) #16
  %call54 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7801, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.798, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call53, i32 noundef 0) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %if.end57

if.end57:                                         ; preds = %if.end52
  %cmp58 = icmp sgt i32 %tst, 3
  br i1 %cmp58, label %if.then60, label %if.end162

if.then60:                                        ; preds = %if.end57
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call61 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %21, i8* noundef nonnull %5, i64 noundef 80, i64* noundef nonnull %readbytes) #16
  %cmp62 = icmp ne i32 %call61, 0
  %conv63 = zext i1 %cmp62 to i32
  %call64 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7809, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.then60
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call67 = call i32 @SSL_get_error(%struct.ssl_st* noundef %22, i32 noundef 0) #16
  %call68 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7811, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.799, i64 0, i64 0), i32 noundef %call67, i32 noundef 6) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %lor.lhs.false66
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call71 = call i32 @SSL_get_shutdown(%struct.ssl_st* noundef %23) #16
  %call72 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7813, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.800, i64 0, i64 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.801, i64 0, i64 0), i32 noundef %call71, i32 noundef 2) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call76 = call i32 @SSL_write(%struct.ssl_st* noundef %24, i8* noundef nonnull %4, i32 noundef 15) #16
  %cmp77 = icmp ne i32 %call76, 0
  %conv78 = zext i1 %cmp77 to i32
  %call79 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7818, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.802, i64 0, i64 0), i32 noundef %conv78) #16
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %end, label %if.end82

if.end82:                                         ; preds = %lor.lhs.false74
  %cmp83 = icmp eq i32 %tst, 4
  br i1 %cmp83, label %land.lhs.true, label %if.end91

land.lhs.true:                                    ; preds = %if.end82
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call85 = call i32 @SSL_key_update(%struct.ssl_st* noundef %25, i32 noundef 1) #16
  %cmp86 = icmp ne i32 %call85, 0
  %conv87 = zext i1 %cmp86 to i32
  %call88 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7822, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.803, i64 0, i64 0), i32 noundef %conv87) #16
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %end, label %if.end91

if.end91:                                         ; preds = %land.lhs.true, %if.end82
  br i1 %cmp5, label %if.then94, label %if.end102

if.then94:                                        ; preds = %if.end91
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_set_verify(%struct.ssl_st* noundef %26, i32 noundef 1, i32 (i32, %struct.x509_store_ctx_st*)* noundef null) #16
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call95 = call i32 @SSL_verify_client_post_handshake(%struct.ssl_st* noundef %27) #16
  %cmp96 = icmp ne i32 %call95, 0
  %conv97 = zext i1 %cmp96 to i32
  %call98 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7826, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.596, i64 0, i64 0), i32 noundef %conv97) #16
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %end, label %land.lhs.true108

if.end102:                                        ; preds = %if.end91
  %28 = and i32 %tst, -2
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %land.lhs.true108, label %if.end116

land.lhs.true108:                                 ; preds = %if.then94, %if.end102
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call110 = call i32 @SSL_write(%struct.ssl_st* noundef %30, i8* noundef nonnull %4, i32 noundef 15) #16
  %cmp111 = icmp ne i32 %call110, 0
  %conv112 = zext i1 %cmp111 to i32
  %call113 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7830, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.802, i64 0, i64 0), i32 noundef %conv112) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %end, label %if.end116

if.end116:                                        ; preds = %if.end102, %land.lhs.true108
  %31 = phi i1 [ false, %if.end102 ], [ true, %land.lhs.true108 ]
  %32 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call117 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %32) #16
  %call118 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7832, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.804, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call117, i32 noundef 1) #16
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %end, label %if.end121

if.end121:                                        ; preds = %if.end116
  br i1 %31, label %if.then127, label %if.end162

if.then127:                                       ; preds = %if.end121
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call129 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %33, i8* noundef nonnull %5, i64 noundef 80, i64* noundef nonnull %readbytes) #16
  %cmp130 = icmp ne i32 %call129, 0
  %conv131 = zext i1 %cmp130 to i32
  %call132 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7837, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv131) #16
  %tobool133.not = icmp eq i32 %call132, 0
  br i1 %tobool133.not, label %end, label %lor.lhs.false134

lor.lhs.false134:                                 ; preds = %if.then127
  %34 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call135 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7838, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.751, i64 0, i64 0), i64 noundef %34, i64 noundef 15) #16
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %end, label %lor.lhs.false137

lor.lhs.false137:                                 ; preds = %lor.lhs.false134
  %35 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call140 = call i32 @memcmp(i8* noundef nonnull %4, i8* noundef nonnull %5, i64 noundef %35) #17
  %call141 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7839, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.805, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call140, i32 noundef 0) #16
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %end, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %lor.lhs.false137
  %36 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call145 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %36, i8* noundef nonnull %5, i64 noundef 80, i64* noundef nonnull %readbytes) #16
  %cmp146 = icmp ne i32 %call145, 0
  %conv147 = zext i1 %cmp146 to i32
  %call148 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7841, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.392, i64 0, i64 0), i32 noundef %conv147) #16
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %end, label %lor.lhs.false150

lor.lhs.false150:                                 ; preds = %lor.lhs.false143
  %37 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call151 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7842, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.751, i64 0, i64 0), i64 noundef %37, i64 noundef 15) #16
  %tobool152.not = icmp eq i32 %call151, 0
  br i1 %tobool152.not, label %end, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %lor.lhs.false150
  %38 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call156 = call i32 @memcmp(i8* noundef nonnull %4, i8* noundef nonnull %5, i64 noundef %38) #17
  %call157 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7843, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.805, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call156, i32 noundef 0) #16
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %end, label %if.end162

if.end162:                                        ; preds = %if.end121, %lor.lhs.false153, %if.end57
  %39 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call164 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %39, i8* noundef nonnull %4, i64 noundef 15, i64* noundef nonnull %written) #16
  %cmp165 = icmp ne i32 %call164, 0
  %conv166 = zext i1 %cmp165 to i32
  %call167 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7849, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.806, i64 0, i64 0), i32 noundef %conv166) #16
  %tobool168.not = icmp eq i32 %call167, 0
  br i1 %tobool168.not, label %end, label %if.end170

if.end170:                                        ; preds = %if.end162
  %cmp171 = icmp slt i32 %tst, 4
  br i1 %cmp171, label %if.then173, label %if.else204

if.then173:                                       ; preds = %if.end170
  %40 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call174 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %40) #16
  %call175 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7858, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.804, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call174, i32 noundef 0) #16
  %tobool176.not = icmp eq i32 %call175, 0
  br i1 %tobool176.not, label %end, label %lor.lhs.false177

lor.lhs.false177:                                 ; preds = %if.then173
  %41 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call179 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %41, i8* noundef nonnull %4, i64 noundef 15, i64* noundef nonnull %written) #16
  %cmp180 = icmp ne i32 %call179, 0
  %conv181 = zext i1 %cmp180 to i32
  %call182 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7863, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.750, i64 0, i64 0), i32 noundef %conv181) #16
  %tobool183.not = icmp eq i32 %call182, 0
  br i1 %tobool183.not, label %end, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %lor.lhs.false177
  %42 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call185 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %42) #16
  %call186 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7864, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.798, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call185, i32 noundef 1) #16
  %tobool187.not = icmp eq i32 %call186, 0
  br i1 %tobool187.not, label %end, label %lor.lhs.false188

lor.lhs.false188:                                 ; preds = %lor.lhs.false184
  %43 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call189 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %43) #16
  %44 = bitcast %struct.ssl_session_st* %call189 to i8*
  %call190 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7865, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.795, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.796, i64 0, i64 0), i8* noundef %44, i8* noundef null) #16
  %tobool191.not = icmp eq i32 %call190, 0
  br i1 %tobool191.not, label %end, label %lor.lhs.false192

lor.lhs.false192:                                 ; preds = %lor.lhs.false188
  %call193 = call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef %call189) #16
  %cmp194 = icmp ne i32 %call193, 0
  %conv195 = zext i1 %cmp194 to i32
  %call196 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7866, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.797, i64 0, i64 0), i32 noundef %conv195) #16
  %tobool197.not = icmp eq i32 %call196, 0
  br i1 %tobool197.not, label %end, label %lor.lhs.false198

lor.lhs.false198:                                 ; preds = %lor.lhs.false192
  %45 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call199 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %45) #16
  %call200 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7867, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.804, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call199, i32 noundef 1) #16
  %tobool201.not = icmp eq i32 %call200, 0
  br i1 %tobool201.not, label %end, label %if.end237

if.else204:                                       ; preds = %if.end170
  %46 = and i32 %tst, -2
  %47 = icmp eq i32 %46, 4
  %48 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call211 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %48) #16
  br i1 %47, label %if.then210, label %if.else226

if.then210:                                       ; preds = %if.else204
  %call212 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7875, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.798, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call211, i32 noundef 1) #16
  %tobool213.not = icmp eq i32 %call212, 0
  br i1 %tobool213.not, label %end, label %lor.lhs.false214

lor.lhs.false214:                                 ; preds = %if.then210
  %49 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call215 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %49) #16
  %50 = bitcast %struct.ssl_session_st* %call215 to i8*
  %call216 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7876, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.795, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.796, i64 0, i64 0), i8* noundef %50, i8* noundef null) #16
  %tobool217.not = icmp eq i32 %call216, 0
  br i1 %tobool217.not, label %end, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %lor.lhs.false214
  %call219 = call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef %call215) #16
  %cmp220 = icmp ne i32 %call219, 0
  %conv221 = zext i1 %cmp220 to i32
  %call222 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7877, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.797, i64 0, i64 0), i32 noundef %conv221) #16
  %tobool223.not = icmp eq i32 %call222, 0
  br i1 %tobool223.not, label %end, label %if.end237

if.else226:                                       ; preds = %if.else204
  %call228 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7887, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.798, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i32 noundef %call211, i32 noundef -1) #16
  %tobool229.not = icmp eq i32 %call228, 0
  br i1 %tobool229.not, label %end, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %if.else226
  %51 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call231 = call i32 @SSL_get_error(%struct.ssl_st* noundef %51, i32 noundef -1) #16
  %call232 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7888, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.807, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i64 0, i64 0), i32 noundef %call231, i32 noundef 1) #16
  %tobool233.not = icmp eq i32 %call232, 0
  br i1 %tobool233.not, label %end, label %if.end237

if.end237:                                        ; preds = %lor.lhs.false218, %lor.lhs.false230, %lor.lhs.false198
  br label %end

end:                                              ; preds = %if.else226, %lor.lhs.false230, %if.then210, %lor.lhs.false214, %lor.lhs.false218, %if.then173, %lor.lhs.false177, %lor.lhs.false184, %lor.lhs.false188, %lor.lhs.false192, %lor.lhs.false198, %if.end162, %if.then127, %lor.lhs.false134, %lor.lhs.false137, %lor.lhs.false143, %lor.lhs.false150, %lor.lhs.false153, %if.end116, %land.lhs.true108, %if.then94, %land.lhs.true, %if.then60, %lor.lhs.false66, %lor.lhs.false70, %lor.lhs.false74, %if.end52, %if.else, %lor.lhs.false40, %lor.lhs.false44, %if.then18, %lor.lhs.false, %lor.lhs.false27, %if.end8, %entry, %if.end237
  %testresult.0 = phi i32 [ 1, %if.end237 ], [ 0, %lor.lhs.false198 ], [ 0, %lor.lhs.false192 ], [ 0, %lor.lhs.false188 ], [ 0, %lor.lhs.false184 ], [ 0, %lor.lhs.false177 ], [ 0, %if.then173 ], [ 0, %lor.lhs.false218 ], [ 0, %lor.lhs.false214 ], [ 0, %if.then210 ], [ 0, %lor.lhs.false230 ], [ 0, %if.else226 ], [ 0, %if.end162 ], [ 0, %lor.lhs.false153 ], [ 0, %lor.lhs.false150 ], [ 0, %lor.lhs.false143 ], [ 0, %lor.lhs.false137 ], [ 0, %lor.lhs.false134 ], [ 0, %if.then127 ], [ 0, %if.end116 ], [ 0, %land.lhs.true108 ], [ 0, %if.then94 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false74 ], [ 0, %lor.lhs.false70 ], [ 0, %lor.lhs.false66 ], [ 0, %if.then60 ], [ 0, %if.end52 ], [ 0, %lor.lhs.false27 ], [ 0, %lor.lhs.false ], [ 0, %if.then18 ], [ 0, %lor.lhs.false44 ], [ 0, %lor.lhs.false40 ], [ 0, %if.else ], [ 0, %if.end8 ], [ 0, %entry ]
  %52 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %52) #16
  %53 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %53) #16
  %54 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %54) #16
  %55 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %55) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_incorrect_shutdown(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [80 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [80 x i8], [80 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #19
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %6 = load i8*, i8** @cert, align 8, !tbaa !3
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %5, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 0, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %6, i8* noundef %7) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7705, i8* noundef getelementptr inbounds ([105 x i8], [105 x i8]* @.str.808, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %tst, 1
  br i1 %cmp4, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call7 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %8, i64 noundef 128) #16
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call9 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp10 = icmp ne i32 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7712, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end8
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7716, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end15
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call23 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* noundef %13) #16
  %call24 = call i64 @BIO_ctrl(%struct.bio_st* noundef %call23, i32 noundef 130, i64 noundef 0, i8* noundef null) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call25 = call i32 @SSL_read(%struct.ssl_st* noundef %14, i8* noundef nonnull %4, i32 noundef 80) #16
  %cmp26 = icmp ne i32 %call25, 0
  %conv27 = zext i1 %cmp26 to i32
  %call28 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7722, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.626, i64 0, i64 0), i32 noundef %conv27) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %if.end31

if.end31:                                         ; preds = %if.end22
  %cmp32 = icmp eq i32 %tst, 0
  br i1 %cmp32, label %land.lhs.true, label %if.end38

land.lhs.true:                                    ; preds = %if.end31
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call34 = call i32 @SSL_get_error(%struct.ssl_st* noundef %15, i32 noundef 0) #16
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7725, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i64 0, i64 0), i32 noundef %call34, i32 noundef 1) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %land.lhs.true, %if.end31
  br i1 %cmp4, label %land.lhs.true41, label %if.end46

land.lhs.true41:                                  ; preds = %if.end38
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call42 = call i32 @SSL_get_error(%struct.ssl_st* noundef %16, i32 noundef 0) #16
  %call43 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7727, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.799, i64 0, i64 0), i32 noundef %call42, i32 noundef 6) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %land.lhs.true41, %if.end38
  br label %end

end:                                              ; preds = %land.lhs.true41, %land.lhs.true, %if.end22, %if.end15, %if.end8, %entry, %if.end46
  %testresult.0 = phi i32 [ 1, %if.end46 ], [ 0, %land.lhs.true41 ], [ 0, %land.lhs.true ], [ 0, %if.end22 ], [ 0, %if.end15 ], [ 0, %if.end8 ], [ 0, %entry ]
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %18) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %19) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %20) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_cert_cb(i32 noundef %tst) #1 {
entry:
  %call = tail call fastcc i32 @test_cert_cb_int(i32 noundef 771, i32 noundef %tst) #18
  %and = and i32 %call, 1
  %call1 = tail call fastcc i32 @test_cert_cb_int(i32 noundef 772, i32 noundef %tst) #18
  %and2 = and i32 %and, %call1
  ret i32 %and2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_client_cert_cb(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %cmp = icmp eq i32 %tst, 0
  %cond = select i1 %cmp, i32 771, i32 772
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef %cond, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8152, i8* noundef getelementptr inbounds ([157 x i8], [157 x i8]* @.str.835, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_client_cert_cb(%struct.ssl_ctx_st* noundef %7, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)* noundef nonnull @client_cert_cb) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* noundef %8, i32 noundef 3, i32 (i32, %struct.x509_store_ctx_st*)* noundef nonnull @verify_cb) #16
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8165, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call10 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8167, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp ne i32 %call13, 0
  %spec.select = zext i1 %tobool14.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false ]
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %13) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %14) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %15) #16
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ca_names(i32 noundef %tst) #1 {
entry:
  %call = tail call fastcc i32 @test_ca_names_int(i32 noundef 771, i32 noundef %tst) #18
  %and = and i32 %call, 1
  %call1 = tail call fastcc i32 @test_ca_names_int(i32 noundef 772, i32 noundef %tst) #18
  %and2 = and i32 %and, %call1
  ret i32 %and2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_multiblock_write(i32 noundef %test_index) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %msg = alloca [4608 x i8], align 16
  %buf = alloca [4608 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %idxprom = sext i32 %test_index to i64
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @multiblock_cipherlist_data, i64 0, i64 %idxprom
  %0 = load i8*, i8** %arrayidx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %5 = getelementptr inbounds [4608 x i8], [4608 x i8]* %msg, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4608, i8* nonnull %5) #19
  %6 = getelementptr inbounds [4608 x i8], [4608 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4608, i8* nonnull %6) #19
  %7 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* @test_multiblock_write.fetchable_ciphers, i64 0, i64 %idxprom
  %9 = load i8*, i8** %arrayidx3, align 8, !tbaa !3
  %call4 = tail call %struct.evp_cipher_st* @EVP_CIPHER_fetch(%struct.ossl_lib_ctx_st* noundef null, i8* noundef %9, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.696, i64 0, i64 0)) #16
  %cmp = icmp eq %struct.evp_cipher_st* %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call5 = tail call i32 (i8*, i32, i8*, ...) @test_skip(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8361, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.870, i64 0, i64 0), i8* noundef %0) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @EVP_CIPHER_free(%struct.evp_cipher_st* noundef nonnull %call4) #16
  %call7 = call i32 @RAND_bytes(i8* noundef nonnull %5, i32 noundef 4608) #16
  %10 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %11 = load i8*, i8** @cert, align 8, !tbaa !3
  %12 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call8 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %10, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 771, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %11, i8* noundef %12) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv = zext i1 %cmp9 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8371, i8* noundef getelementptr inbounds ([97 x i8], [97 x i8]* @.str.127, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %end, label %if.end12

if.end12:                                         ; preds = %if.end
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call13 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %13, i32 noundef 52, i64 noundef 512, i8* noundef null) #16
  %cmp14 = icmp ne i64 %call13, 0
  %conv15 = zext i1 %cmp14 to i32
  %call16 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8374, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.871, i64 0, i64 0), i32 noundef %conv15) #16
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %end, label %if.end19

if.end19:                                         ; preds = %if.end12
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call20 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %14, %struct.ssl_ctx_st* noundef %15, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp21 = icmp ne i32 %call20, 0
  %conv22 = zext i1 %cmp21 to i32
  %call23 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8378, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv22) #16
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %end, label %if.end26

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call27 = call i64 @SSL_set_options(%struct.ssl_st* noundef %16, i64 noundef 524288) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call28 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %17, i8* noundef %0) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8383, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.872, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %if.end26
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call35 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %18, %struct.ssl_st* noundef %19, i32 noundef 0) #16
  %cmp36 = icmp ne i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  %call38 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8386, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv37) #16
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %end, label %if.end41

if.end41:                                         ; preds = %if.end34
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call43 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %20, i8* noundef nonnull %5, i64 noundef 4608, i64* noundef nonnull %written) #16
  %cmp44 = icmp ne i32 %call43, 0
  %conv45 = zext i1 %cmp44 to i32
  %call46 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8389, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.750, i64 0, i64 0), i32 noundef %conv45) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end41
  %21 = load i64, i64* %written, align 8, !tbaa !10
  %call48 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8390, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.751, i64 0, i64 0), i64 noundef %21, i64 noundef 4608) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %end, label %if.end51

if.end51:                                         ; preds = %lor.lhs.false
  %22 = load i64, i64* %written, align 8, !tbaa !10
  %cmp52.not97 = icmp eq i64 %22, 0
  br i1 %cmp52.not97, label %while.end, label %while.body

while.body:                                       ; preds = %if.end51, %if.end60
  %len.099 = phi i64 [ %sub, %if.end60 ], [ %22, %if.end51 ]
  %p.098 = phi i8* [ %add.ptr, %if.end60 ], [ %6, %if.end51 ]
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call54 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %23, i8* noundef %p.098, i64 noundef 512, i64* noundef nonnull %readbytes) #16
  %cmp55 = icmp ne i32 %call54, 0
  %conv56 = zext i1 %cmp55 to i32
  %call57 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8395, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.873, i64 0, i64 0), i32 noundef %conv56) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %if.end60

if.end60:                                         ; preds = %while.body
  %24 = load i64, i64* %readbytes, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds i8, i8* %p.098, i64 %24
  %sub = sub i64 %len.099, %24
  %cmp52.not = icmp eq i64 %sub, 0
  br i1 %cmp52.not, label %while.end, label %while.body, !llvm.loop !38

while.end:                                        ; preds = %if.end60, %if.end51
  %call63 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8400, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.874, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef 4608, i8* noundef nonnull %6, i64 noundef 4608) #16
  %tobool64.not = icmp ne i32 %call63, 0
  %spec.select = zext i1 %tobool64.not to i32
  br label %end

end:                                              ; preds = %while.body, %while.end, %if.end41, %lor.lhs.false, %if.end34, %if.end26, %if.end19, %if.end12, %if.end
  %testresult.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %if.end41 ], [ 0, %if.end34 ], [ 0, %if.end26 ], [ 0, %if.end19 ], [ 0, %if.end12 ], [ 0, %if.end ], [ %spec.select, %while.end ], [ 0, %while.body ]
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  br label %cleanup

cleanup:                                          ; preds = %end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %testresult.0, %end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 4608, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 4608, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_servername(i32 noundef %tst) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %cmp = icmp slt i32 %tst, 5
  %cond = select i1 %cmp, i32 771, i32 772
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef %cond, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8571, i8* noundef getelementptr inbounds ([159 x i8], [159 x i8]* @.str.876, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %7, %struct.ssl_ctx_st* noundef %8, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8573, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  switch i32 %tst, label %if.then14 [
    i32 1, label %if.then28
    i32 6, label %if.then28
  ]

if.then14:                                        ; preds = %if.end
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call15 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %9, i32 noundef 53, void ()* noundef bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @hostname_cb to void ()*)) #16
  %cmp16 = icmp ne i64 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8578, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.466, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.then14
  switch i32 %tst, label %if.then28 [
    i32 8, label %if.end36
    i32 3, label %if.end36
  ]

if.then28:                                        ; preds = %if.end, %if.end, %if.end22
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call29 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %cmp30 = icmp ne i64 %call29, 0
  %conv31 = zext i1 %cmp30 to i32
  %call32 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8583, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.465, i64 0, i64 0), i32 noundef %conv31) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %if.end36

if.end36:                                         ; preds = %if.then28, %if.end22, %if.end22
  %cexpectedhost.0 = phi i8* [ null, %if.end22 ], [ null, %if.end22 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0), %if.then28 ]
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call37 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp38 = icmp ne i32 %call37, 0
  %conv39 = zext i1 %cmp38 to i32
  %call40 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8588, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv39) #16
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %end, label %if.end43

if.end43:                                         ; preds = %if.end36
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call44 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %13, i32 noundef 0) #16
  %call45 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8592, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.878, i64 0, i64 0), i8* noundef %call44, i8* noundef %cexpectedhost.0) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end43
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call48 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %14, i32 noundef 0) #16
  %call49 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8595, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.879, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.880, i64 0, i64 0), i8* noundef %call48, i8* noundef %cexpectedhost.0) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false47
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %15) #16
  %call54 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8600, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.798, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call53, i32 noundef 0) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %if.end52
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call57 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %16) #16
  %17 = bitcast %struct.ssl_session_st* %call57 to i8*
  %call58 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8601, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.364, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.796, i64 0, i64 0), i8* noundef %17, i8* noundef null) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %lor.lhs.false56
  %call61 = call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef %call57) #16
  %cmp62 = icmp ne i32 %call61, 0
  %conv63 = zext i1 %cmp62 to i32
  %call64 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8602, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.797, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %lor.lhs.false60
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call67 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %18) #16
  %call68 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8603, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.804, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call67, i32 noundef 0) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %if.end71

if.end71:                                         ; preds = %lor.lhs.false66
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %19) #16
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %20) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call72 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %21, %struct.ssl_ctx_st* noundef %22, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp73 = icmp ne i32 %call72, 0
  %conv74 = zext i1 %cmp73 to i32
  %call75 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8611, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv74) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %end, label %if.end78

if.end78:                                         ; preds = %if.end71
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call79 = call i32 @SSL_set_session(%struct.ssl_st* noundef %23, %struct.ssl_session_st* noundef %call57) #16
  %cmp80 = icmp ne i32 %call79, 0
  %conv81 = zext i1 %cmp80 to i32
  %call82 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8614, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv81) #16
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %end, label %if.end85

if.end85:                                         ; preds = %if.end78
  %cmp89 = icmp eq i32 %tst, 7
  switch i32 %tst, label %if.else123 [
    i32 7, label %if.then91
    i32 2, label %if.then91
    i32 9, label %if.then116
    i32 4, label %if.end117
  ]

if.then91:                                        ; preds = %if.end85, %if.end85
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call92 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %24, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.479, i64 0, i64 0)) #16
  %cmp93 = icmp ne i64 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8620, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.881, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %if.end98

if.end98:                                         ; preds = %if.then91
  %spec.select = select i1 %cmp89, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.479, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call103 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %25, i32 noundef 0) #16
  %call104 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8631, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.882, i64 0, i64 0), i8* noundef %call103, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.479, i64 0, i64 0)) #16
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %end, label %if.end144

if.then116:                                       ; preds = %if.end85
  br label %if.end117

if.end117:                                        ; preds = %if.end85, %if.then116
  %cexpectedhost.2 = phi i8* [ null, %if.then116 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0), %if.end85 ]
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call118 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %26, i32 noundef 0) #16
  %call119 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8643, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.878, i64 0, i64 0), i8* noundef %call118, i8* noundef %cexpectedhost.2) #16
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %end, label %if.end144

if.else123:                                       ; preds = %if.end85
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call124 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %27, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %cmp125 = icmp ne i64 %call124, 0
  %conv126 = zext i1 %cmp125 to i32
  %call127 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8646, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.465, i64 0, i64 0), i32 noundef %conv126) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %if.end130

if.end130:                                        ; preds = %if.else123
  %28 = and i32 %tst, -3
  %29 = icmp eq i32 %28, 1
  %spec.select198 = select i1 %29, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call138 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %30, i32 noundef 0) #16
  %call139 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8662, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.883, i64 0, i64 0), i8* noundef %call138, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #16
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %end, label %if.end144

if.end144:                                        ; preds = %if.end117, %if.end130, %if.end98
  %sexpectedhost.4 = phi i8* [ %spec.select, %if.end98 ], [ %cexpectedhost.2, %if.end117 ], [ %spec.select198, %if.end130 ]
  %cexpectedhost.3 = phi i8* [ %spec.select, %if.end98 ], [ %cexpectedhost.2, %if.end117 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0), %if.end130 ]
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call145 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %31, %struct.ssl_st* noundef %32, i32 noundef 0) #16
  %cmp146 = icmp ne i32 %call145, 0
  %conv147 = zext i1 %cmp146 to i32
  %call148 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8666, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv147) #16
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %end, label %if.end151

if.end151:                                        ; preds = %if.end144
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call152 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %33) #16
  %cmp153 = icmp ne i32 %call152, 0
  %conv154 = zext i1 %cmp153 to i32
  %call155 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8669, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv154) #16
  %tobool156.not = icmp eq i32 %call155, 0
  br i1 %tobool156.not, label %end, label %lor.lhs.false157

lor.lhs.false157:                                 ; preds = %if.end151
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call158 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %34) #16
  %cmp159 = icmp ne i32 %call158, 0
  %conv160 = zext i1 %cmp159 to i32
  %call161 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8670, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.367, i64 0, i64 0), i32 noundef %conv160) #16
  %tobool162.not = icmp eq i32 %call161, 0
  br i1 %tobool162.not, label %end, label %lor.lhs.false163

lor.lhs.false163:                                 ; preds = %lor.lhs.false157
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call164 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %35, i32 noundef 0) #16
  %call165 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8673, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.877, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.878, i64 0, i64 0), i8* noundef %call164, i8* noundef %cexpectedhost.3) #16
  %tobool166.not = icmp eq i32 %call165, 0
  br i1 %tobool166.not, label %end, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %lor.lhs.false163
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call168 = call i8* @SSL_get_servername(%struct.ssl_st* noundef %36, i32 noundef 0) #16
  %call169 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8676, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.879, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.880, i64 0, i64 0), i8* noundef %call168, i8* noundef %sexpectedhost.4) #16
  %tobool170.not = icmp ne i32 %call169, 0
  %spec.select199 = zext i1 %tobool170.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false167, %if.end151, %lor.lhs.false157, %lor.lhs.false163, %if.end144, %if.end130, %if.else123, %if.end117, %if.end98, %if.then91, %if.end78, %if.end71, %if.end52, %lor.lhs.false56, %lor.lhs.false60, %lor.lhs.false66, %if.end43, %lor.lhs.false47, %if.end36, %if.then28, %if.then14, %entry, %lor.lhs.false
  %testresult.0 = phi i32 [ 0, %lor.lhs.false163 ], [ 0, %lor.lhs.false157 ], [ 0, %if.end151 ], [ 0, %if.end144 ], [ 0, %if.end98 ], [ 0, %if.then91 ], [ 0, %if.end117 ], [ 0, %if.end130 ], [ 0, %if.else123 ], [ 0, %if.end78 ], [ 0, %if.end71 ], [ 0, %lor.lhs.false66 ], [ 0, %lor.lhs.false60 ], [ 0, %lor.lhs.false56 ], [ 0, %if.end52 ], [ 0, %lor.lhs.false47 ], [ 0, %if.end43 ], [ 0, %if.end36 ], [ 0, %if.then28 ], [ 0, %if.then14 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select199, %lor.lhs.false167 ]
  %sess.0 = phi %struct.ssl_session_st* [ %call57, %lor.lhs.false163 ], [ %call57, %lor.lhs.false157 ], [ %call57, %if.end151 ], [ %call57, %if.end144 ], [ %call57, %if.end98 ], [ %call57, %if.then91 ], [ %call57, %if.end117 ], [ %call57, %if.end130 ], [ %call57, %if.else123 ], [ %call57, %if.end78 ], [ %call57, %if.end71 ], [ %call57, %lor.lhs.false66 ], [ %call57, %lor.lhs.false60 ], [ %call57, %lor.lhs.false56 ], [ null, %if.end52 ], [ null, %lor.lhs.false47 ], [ null, %if.end43 ], [ null, %if.end36 ], [ null, %if.then28 ], [ null, %if.then14 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call57, %lor.lhs.false167 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess.0) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %37) #16
  %38 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %38) #16
  %39 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %39) #16
  %40 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %40) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_sigalgs_available(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sig = alloca i32, align 4
  %hash = alloca i32, align 4
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call = tail call %struct.ossl_lib_ctx_st* @OSSL_LIB_CTX_new() #16
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %5 = bitcast i32* %sig to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19
  %6 = bitcast i32* %hash to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19
  %7 = bitcast %struct.ossl_lib_ctx_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8713, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.884, i64 0, i64 0), i8* noundef %7) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  switch i32 %idx, label %if.then3 [
    i32 3, label %if.end46
    i32 0, label %if.end46
  ]

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @OSSL_PROVIDER_add_builtin(%struct.ossl_lib_ctx_st* noundef %call, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.886, i64 0, i64 0), i32 (%struct.ossl_core_handle_st*, %struct.ossl_dispatch_st*, %struct.ossl_dispatch_st**, i8**)* noundef nonnull @filter_provider_init) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv = zext i1 %cmp5 to i32
  %call6 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8718, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.885, i64 0, i64 0), i32 noundef %conv) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.then3
  %call10 = tail call %struct.ossl_provider_st* @OSSL_PROVIDER_load(%struct.ossl_lib_ctx_st* noundef %call, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.886, i64 0, i64 0)) #16
  %8 = bitcast %struct.ossl_provider_st* %call10 to i8*
  %call11 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8722, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.887, i64 0, i64 0), i8* noundef %8) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end14

if.end14:                                         ; preds = %if.end9
  %cmp15 = icmp slt i32 %idx, 3
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end14
  %call18 = tail call i32 @filter_provider_set_filter(i32 noundef 1, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.889, i64 0, i64 0)) #16
  %cmp19 = icmp ne i32 %call18, 0
  %conv20 = zext i1 %cmp19 to i32
  %call21 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8733, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.888, i64 0, i64 0), i32 noundef %conv20) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end37

if.else:                                          ; preds = %if.end14
  %call25 = tail call i32 @filter_provider_set_filter(i32 noundef 12, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.891, i64 0, i64 0)) #16
  %cmp26 = icmp ne i32 %call25, 0
  %conv27 = zext i1 %cmp26 to i32
  %call28 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8737, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.890, i64 0, i64 0), i32 noundef %conv27) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %call30 = tail call i32 @filter_provider_set_filter(i32 noundef 10, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.893, i64 0, i64 0)) #16
  %cmp31 = icmp ne i32 %call30, 0
  %conv32 = zext i1 %cmp31 to i32
  %call33 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8739, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.892, i64 0, i64 0), i32 noundef %conv32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end37

if.end37:                                         ; preds = %lor.lhs.false, %if.then17
  switch i32 %idx, label %if.else44 [
    i32 4, label %if.end46
    i32 1, label %if.end46
  ]

if.else44:                                        ; preds = %if.end37
  br label %if.end46

if.end46:                                         ; preds = %if.end37, %if.end37, %if.end, %if.end, %if.else44
  %clientctx.0 = phi %struct.ossl_lib_ctx_st* [ %4, %if.else44 ], [ %4, %if.end ], [ %4, %if.end ], [ %call, %if.end37 ], [ %call, %if.end37 ]
  %serverctx.0 = phi %struct.ossl_lib_ctx_st* [ %call, %if.else44 ], [ %4, %if.end ], [ %4, %if.end ], [ %4, %if.end37 ], [ %4, %if.end37 ]
  %filterprov.0 = phi %struct.ossl_provider_st* [ %call10, %if.else44 ], [ null, %if.end ], [ null, %if.end ], [ %call10, %if.end37 ], [ %call10, %if.end37 ]
  %call47 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call48 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %clientctx.0, i8* noundef null, %struct.ssl_method_st* noundef %call47) #16
  store %struct.ssl_ctx_st* %call48, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call49 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call50 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %serverctx.0, i8* noundef null, %struct.ssl_method_st* noundef %call49) #16
  store %struct.ssl_ctx_st* %call50, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %.cast = bitcast %struct.ssl_ctx_st* %call48 to i8*
  %call51 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8751, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.754, i64 0, i64 0), i8* noundef %.cast) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %if.end46
  %9 = bitcast %struct.ssl_ctx_st* %call50 to i8*
  %call54 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8751, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.755, i64 0, i64 0), i8* noundef %9) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %if.end57

if.end57:                                         ; preds = %lor.lhs.false53
  %cmp58.not = icmp eq i32 %idx, 5
  %10 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call71 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call72 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  br i1 %cmp58.not, label %if.else70, label %if.then60

if.then60:                                        ; preds = %if.end57
  %11 = load i8*, i8** @cert, align 8, !tbaa !3
  %12 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call63 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %10, %struct.ssl_method_st* noundef %call71, %struct.ssl_method_st* noundef %call72, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %11, i8* noundef %12) #16
  %cmp64 = icmp ne i32 %call63, 0
  %conv65 = zext i1 %cmp64 to i32
  %call66 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8759, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end80

if.else70:                                        ; preds = %if.end57
  %13 = load i8*, i8** @cert2, align 8, !tbaa !3
  %14 = load i8*, i8** @privkey2, align 8, !tbaa !3
  %call73 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %10, %struct.ssl_method_st* noundef %call71, %struct.ssl_method_st* noundef %call72, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %13, i8* noundef %14) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8766, i8* noundef getelementptr inbounds ([118 x i8], [118 x i8]* @.str.894, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.else91

if.end80:                                         ; preds = %if.then60
  %cmp81 = icmp slt i32 %idx, 4
  br i1 %cmp81, label %if.then83, label %if.else91

if.then83:                                        ; preds = %if.end80
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call84 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %15, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.896, i64 0, i64 0)) #16
  %cmp85 = icmp ne i32 %call84, 0
  %conv86 = zext i1 %cmp85 to i32
  %call87 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8773, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.895, i64 0, i64 0), i32 noundef %conv86) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %end, label %if.end99

if.else91:                                        ; preds = %if.else70, %if.end80
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call92 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %16, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.898, i64 0, i64 0)) #16
  %cmp93 = icmp ne i32 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8777, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.897, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %if.else110

if.end99:                                         ; preds = %if.then83
  %cmp100 = icmp slt i32 %idx, 3
  br i1 %cmp100, label %if.then102, label %if.else110

if.then102:                                       ; preds = %if.end99
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call103 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %17, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.899, i64 0, i64 0)) #16
  %tobool104.not = icmp eq i64 %call103, 0
  br i1 %tobool104.not, label %end, label %lor.lhs.false105

lor.lhs.false105:                                 ; preds = %if.then102
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call106 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %18, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.899, i64 0, i64 0)) #16
  %tobool107.not = icmp eq i64 %call106, 0
  br i1 %tobool107.not, label %end, label %land.lhs.true121

if.else110:                                       ; preds = %if.else91, %if.end99
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call111 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %19, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.900, i64 0, i64 0)) #16
  %tobool112.not = icmp eq i64 %call111, 0
  br i1 %tobool112.not, label %end, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %if.else110
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call114 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %20, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.900, i64 0, i64 0)) #16
  %tobool115.not = icmp eq i64 %call114, 0
  br i1 %tobool115.not, label %end, label %if.end118

if.end118:                                        ; preds = %lor.lhs.false113
  br i1 %cmp58.not, label %if.end134, label %land.lhs.true121

land.lhs.true121:                                 ; preds = %lor.lhs.false105, %if.end118
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %22 = load i8*, i8** @cert2, align 8, !tbaa !3
  %call122 = call i32 @SSL_CTX_use_certificate_file(%struct.ssl_ctx_st* noundef %21, i8* noundef %22, i32 noundef 1) #16
  %call123 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8798, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.901, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call122, i32 noundef 1) #16
  %tobool124.not = icmp eq i32 %call123, 0
  br i1 %tobool124.not, label %end, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %land.lhs.true121
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %24 = load i8*, i8** @privkey2, align 8, !tbaa !3
  %call126 = call i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st* noundef %23, i8* noundef %24, i32 noundef 1) #16
  %call127 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8801, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.902, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call126, i32 noundef 1) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %lor.lhs.false125
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call130 = call i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* noundef %25) #16
  %call131 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8802, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.324, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call130, i32 noundef 1) #16
  %tobool132.not = icmp eq i32 %call131, 0
  br i1 %tobool132.not, label %end, label %if.end134

if.end134:                                        ; preds = %lor.lhs.false129, %if.end118
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call135 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %26, %struct.ssl_ctx_st* noundef %27, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp136 = icmp ne i32 %call135, 0
  %conv137 = zext i1 %cmp136 to i32
  %call138 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8806, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv137) #16
  %tobool139.not = icmp eq i32 %call138, 0
  br i1 %tobool139.not, label %end, label %if.end141

if.end141:                                        ; preds = %if.end134
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call142 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %28, %struct.ssl_st* noundef %29, i32 noundef 0) #16
  %cmp143 = icmp ne i32 %call142, 0
  %conv144 = zext i1 %cmp143 to i32
  %call145 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8809, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv144) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %end, label %if.end148

if.end148:                                        ; preds = %if.end141
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call149 = call i32 @SSL_get_shared_sigalgs(%struct.ssl_st* noundef %30, i32 noundef 0, i32* noundef nonnull %sig, i32* noundef nonnull %hash, i32* noundef null, i8* noundef null, i8* noundef null) #16
  %cmp150 = icmp eq i32 %idx, 0
  %cmp152 = icmp eq i32 %idx, 3
  %31 = or i1 %cmp150, %cmp152
  %cond = select i1 %31, i32 2, i32 1
  %call154 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8815, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.903, i64 0, i64 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.904, i64 0, i64 0), i32 noundef %call149, i32 noundef %cond) #16
  %tobool155.not = icmp eq i32 %call154, 0
  br i1 %tobool155.not, label %end, label %if.end157

if.end157:                                        ; preds = %if.end148
  %32 = load i32, i32* %hash, align 4, !tbaa !7
  %cond160 = select i1 %cmp150, i32 673, i32 672
  %call161 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8818, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.905, i64 0, i64 0), i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.906, i64 0, i64 0), i32 noundef %32, i32 noundef %cond160) #16
  %tobool162.not = icmp eq i32 %call161, 0
  br i1 %tobool162.not, label %end, label %if.end164

if.end164:                                        ; preds = %if.end157
  %33 = load i32, i32* %sig, align 4, !tbaa !7
  %34 = and i32 %idx, -2
  %35 = icmp eq i32 %34, 4
  %cond171 = select i1 %35, i32 408, i32 912
  %call172 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8822, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.907, i64 0, i64 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.908, i64 0, i64 0), i32 noundef %33, i32 noundef %cond171) #16
  %tobool173.not = icmp eq i32 %call172, 0
  br i1 %tobool173.not, label %end, label %if.end175

if.end175:                                        ; preds = %if.end164
  %call176 = call i32 @filter_provider_check_clean_finish() #16
  br label %end

end:                                              ; preds = %if.end164, %if.end157, %if.end148, %if.end141, %if.end134, %land.lhs.true121, %lor.lhs.false125, %lor.lhs.false129, %if.else110, %lor.lhs.false113, %if.then102, %lor.lhs.false105, %if.else91, %if.then83, %if.else70, %if.then60, %if.end46, %lor.lhs.false53, %if.else, %lor.lhs.false, %if.then17, %if.end9, %if.then3, %entry, %if.end175
  %testresult.0 = phi i32 [ %call176, %if.end175 ], [ 0, %if.end164 ], [ 0, %if.end157 ], [ 0, %if.end148 ], [ 0, %if.end141 ], [ 0, %if.end134 ], [ 0, %lor.lhs.false129 ], [ 0, %lor.lhs.false125 ], [ 0, %land.lhs.true121 ], [ 0, %lor.lhs.false105 ], [ 0, %if.then102 ], [ 0, %lor.lhs.false113 ], [ 0, %if.else110 ], [ 0, %if.then83 ], [ 0, %if.else91 ], [ 0, %if.then60 ], [ 0, %if.else70 ], [ 0, %lor.lhs.false53 ], [ 0, %if.end46 ], [ 0, %if.then17 ], [ 0, %lor.lhs.false ], [ 0, %if.else ], [ 0, %if.end9 ], [ 0, %if.then3 ], [ 0, %entry ]
  %filterprov.1 = phi %struct.ossl_provider_st* [ %filterprov.0, %if.end175 ], [ %filterprov.0, %if.end164 ], [ %filterprov.0, %if.end157 ], [ %filterprov.0, %if.end148 ], [ %filterprov.0, %if.end141 ], [ %filterprov.0, %if.end134 ], [ %filterprov.0, %lor.lhs.false129 ], [ %filterprov.0, %lor.lhs.false125 ], [ %filterprov.0, %land.lhs.true121 ], [ %filterprov.0, %lor.lhs.false105 ], [ %filterprov.0, %if.then102 ], [ %filterprov.0, %lor.lhs.false113 ], [ %filterprov.0, %if.else110 ], [ %filterprov.0, %if.then83 ], [ %filterprov.0, %if.else91 ], [ %filterprov.0, %if.then60 ], [ %filterprov.0, %if.else70 ], [ %filterprov.0, %lor.lhs.false53 ], [ %filterprov.0, %if.end46 ], [ %call10, %if.then17 ], [ %call10, %lor.lhs.false ], [ %call10, %if.else ], [ %call10, %if.end9 ], [ null, %if.then3 ], [ null, %entry ]
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %36) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %37) #16
  %38 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %38) #16
  %39 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %39) #16
  %call177 = call i32 @OSSL_PROVIDER_unload(%struct.ossl_provider_st* noundef %filterprov.1) #16
  call void @OSSL_LIB_CTX_free(%struct.ossl_lib_ctx_st* noundef %call) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_pluggable_group(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ossl_provider_st* @OSSL_PROVIDER_load(%struct.ossl_lib_ctx_st* noundef %4, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #16
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call1 = tail call %struct.ossl_provider_st* @OSSL_PROVIDER_load(%struct.ossl_lib_ctx_st* noundef %5, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.909, i64 0, i64 0)) #16
  %cmp = icmp eq i32 %idx, 0
  %cond = select i1 %cmp, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.910, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.911, i64 0, i64 0)
  %6 = bitcast %struct.ossl_provider_st* %call to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8854, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.912, i64 0, i64 0), i8* noundef %6) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq %struct.ossl_provider_st* %call1, null
  br i1 %cmp3, label %end, label %if.end5

if.end5:                                          ; preds = %if.end
  %7 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call6 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call7 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %8 = load i8*, i8** @cert, align 8, !tbaa !3
  %9 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call8 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %7, %struct.ssl_method_st* noundef %call6, %struct.ssl_method_st* noundef %call7, i32 noundef 772, i32 noundef 772, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %8, i8* noundef %9) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv = zext i1 %cmp9 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8870, i8* noundef getelementptr inbounds ([131 x i8], [131 x i8]* @.str.913, i64 0, i64 0), i32 noundef %conv) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end5
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call12 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %10, %struct.ssl_ctx_st* noundef %11, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp13 = icmp ne i32 %call12, 0
  %conv14 = zext i1 %cmp13 to i32
  %call15 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8872, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv14) #16
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %end, label %if.end18

if.end18:                                         ; preds = %lor.lhs.false
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call19 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %12, i32 noundef 92, i64 noundef 0, i8* noundef %cond) #16
  %cmp20 = icmp ne i64 %call19, 0
  %conv21 = zext i1 %cmp20 to i32
  %call22 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8875, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.914, i64 0, i64 0), i32 noundef %conv21) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %if.end18
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call25 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %13, i32 noundef 92, i64 noundef 0, i8* noundef %cond) #16
  %cmp26 = icmp ne i64 %call25, 0
  %conv27 = zext i1 %cmp26 to i32
  %call28 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8876, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.915, i64 0, i64 0), i32 noundef %conv27) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %end, label %if.end31

if.end31:                                         ; preds = %lor.lhs.false24
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %15 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call32 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %14, %struct.ssl_st* noundef %15, i32 noundef 0) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8879, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %if.end31
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call39 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %16, i32 noundef 93, i64 noundef 0, i8* noundef null) #16
  %conv40 = trunc i64 %call39 to i32
  %call41 = call i8* @SSL_group_to_name(%struct.ssl_st* noundef %16, i32 noundef %conv40) #16
  %call42 = call i32 @test_str_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8883, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.916, i64 0, i64 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.917, i64 0, i64 0), i8* noundef %cond, i8* noundef %call41) #16
  %tobool43.not = icmp ne i32 %call42, 0
  %spec.select = zext i1 %tobool43.not to i32
  br label %end

end:                                              ; preds = %if.end38, %if.end, %if.end31, %if.end18, %lor.lhs.false24, %if.end5, %lor.lhs.false, %entry
  %testresult.0 = phi i32 [ 0, %if.end31 ], [ 0, %lor.lhs.false24 ], [ 0, %if.end18 ], [ 0, %lor.lhs.false ], [ 0, %if.end5 ], [ 0, %entry ], [ 1, %if.end ], [ %spec.select, %if.end38 ]
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %18) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %19) #16
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %20) #16
  %call46 = call i32 @OSSL_PROVIDER_unload(%struct.ossl_provider_st* noundef %call) #16
  %call47 = call i32 @OSSL_PROVIDER_unload(%struct.ossl_provider_st* noundef %call1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ssl_dup() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 0, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8912, i8* noundef getelementptr inbounds ([105 x i8], [105 x i8]* @.str.808, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call4 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %7, %struct.ssl_ctx_st* noundef %8, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp5 = icmp ne i32 %call4, 0
  %conv6 = zext i1 %cmp5 to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8916, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %if.end10

if.end10:                                         ; preds = %if.end
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call11 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %9, i32 noundef 123, i64 noundef 771, i8* noundef null) #16
  %cmp12 = icmp ne i64 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  %call14 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8919, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.918, i64 0, i64 0), i32 noundef %conv13) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp17 = icmp ne i64 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8920, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.919, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %lor.lhs.false
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call23 = call %struct.ssl_st* @SSL_dup(%struct.ssl_st* noundef %11) #16
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call24 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* noundef %12) #16
  %13 = bitcast %struct.bio_st* %call24 to i8*
  %call25 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8925, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.659, i64 0, i64 0), i8* noundef %13) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.end22
  %call28 = call i32 @BIO_up_ref(%struct.bio_st* noundef %call24) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8926, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.920, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %lor.lhs.false27
  call void @SSL_set0_rbio(%struct.ssl_st* noundef %call23, %struct.bio_st* noundef %call24) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call35 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef %14) #16
  %15 = bitcast %struct.bio_st* %call35 to i8*
  %call36 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8932, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.660, i64 0, i64 0), i8* noundef %15) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %if.end34
  %call39 = call i32 @BIO_up_ref(%struct.bio_st* noundef %call35) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8932, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.921, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false38
  call void @SSL_set0_wbio(%struct.ssl_st* noundef %call23, %struct.bio_st* noundef %call35) #16
  %16 = bitcast %struct.ssl_st* %call23 to i8*
  %call46 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8937, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.922, i64 0, i64 0), i8* noundef %16) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %if.end45
  %17 = bitcast %struct.ssl_st** %clientssl to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !3
  %call49 = call i32 @test_ptr_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8939, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.923, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.922, i64 0, i64 0), i8* noundef %18, i8* noundef %16) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false48
  %call53 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %call23, i32 noundef 130, i64 noundef 0, i8* noundef null) #16
  %conv54 = trunc i64 %call53 to i32
  %call55 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8942, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.924, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.925, i64 0, i64 0), i32 noundef %conv54, i32 noundef 771) #16
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %end, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.end52
  %call58 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %call23, i32 noundef 131, i64 noundef 0, i8* noundef null) #16
  %conv59 = trunc i64 %call58 to i32
  %call60 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8943, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.926, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.925, i64 0, i64 0), i32 noundef %conv59, i32 noundef 771) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %if.end63

if.end63:                                         ; preds = %lor.lhs.false57
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call64 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %19, %struct.ssl_st* noundef %call23, i32 noundef 0) #16
  %cmp65 = icmp ne i32 %call64, 0
  %conv66 = zext i1 %cmp65 to i32
  %call67 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8946, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.927, i64 0, i64 0), i32 noundef %conv66) #16
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %end, label %if.end70

if.end70:                                         ; preds = %if.end63
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %20) #16
  %call71 = call %struct.ssl_st* @SSL_dup(%struct.ssl_st* noundef %call23) #16
  store %struct.ssl_st* %call71, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %21 = bitcast %struct.ssl_st* %call71 to i8*
  %call72 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8951, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.923, i64 0, i64 0), i8* noundef %21) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %if.end70
  %22 = load i8*, i8** %17, align 8, !tbaa !3
  %call75 = call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8953, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.923, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.922, i64 0, i64 0), i8* noundef %22, i8* noundef %16) #16
  %tobool76.not = icmp ne i32 %call75, 0
  %spec.select = zext i1 %tobool76.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false74, %if.end70, %if.end63, %if.end52, %lor.lhs.false57, %if.end45, %lor.lhs.false48, %if.end34, %lor.lhs.false38, %if.end22, %lor.lhs.false27, %if.end10, %lor.lhs.false, %if.end, %entry
  %client2ssl.0 = phi %struct.ssl_st* [ %call23, %if.end70 ], [ %call23, %if.end63 ], [ %call23, %lor.lhs.false57 ], [ %call23, %if.end52 ], [ %call23, %lor.lhs.false48 ], [ %call23, %if.end45 ], [ %call23, %lor.lhs.false38 ], [ %call23, %if.end34 ], [ %call23, %lor.lhs.false27 ], [ %call23, %if.end22 ], [ null, %lor.lhs.false ], [ null, %if.end10 ], [ null, %if.end ], [ null, %entry ], [ %call23, %lor.lhs.false74 ]
  %testresult.0 = phi i32 [ 0, %if.end70 ], [ 0, %if.end63 ], [ 0, %lor.lhs.false57 ], [ 0, %if.end52 ], [ 0, %lor.lhs.false48 ], [ 0, %if.end45 ], [ 0, %lor.lhs.false38 ], [ 0, %if.end34 ], [ 0, %lor.lhs.false27 ], [ 0, %if.end22 ], [ 0, %lor.lhs.false ], [ 0, %if.end10 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %lor.lhs.false74 ]
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %24) #16
  call void @SSL_free(%struct.ssl_st* noundef %client2ssl.0) #16
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %25) #16
  %26 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %26) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_set_tmp_dh(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = add i32 %idx, -3
  %5 = icmp ult i32 %4, 2
  %cmp2 = icmp sgt i32 %idx, 2
  %cond3 = zext i1 %cmp2 to i32
  %6 = add i32 %idx, -5
  %7 = icmp ult i32 %6, 4
  br i1 %7, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.evp_pkey_st* @get_tmp_dh_params() #18
  %8 = bitcast %struct.evp_pkey_st* %call to i8*
  %call6 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9081, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.928, i64 0, i64 0), i8* noundef %8) #16
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %end, label %if.end8

if.end8:                                          ; preds = %if.then
  %9 = add nsw i32 %idx, -7
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %if.then11, label %if.end17

if.then11:                                        ; preds = %if.end8
  %call12 = tail call %struct.dh_st* @EVP_PKEY_get1_DH(%struct.evp_pkey_st* noundef %call) #16
  %11 = bitcast %struct.dh_st* %call12 to i8*
  %call13 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9087, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.929, i64 0, i64 0), i8* noundef %11) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end17

if.end17:                                         ; preds = %entry, %if.then11, %if.end8
  %dhpkey.0171 = phi %struct.evp_pkey_st* [ %call, %if.then11 ], [ %call, %if.end8 ], [ null, %entry ]
  %dh.0 = phi %struct.dh_st* [ %call12, %if.then11 ], [ null, %if.end8 ], [ null, %entry ]
  %12 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call18 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call19 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %13 = load i8*, i8** @cert, align 8, !tbaa !3
  %14 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call20 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %12, %struct.ssl_method_st* noundef %call18, %struct.ssl_method_st* noundef %call19, i32 noundef 0, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %13, i8* noundef %14) #16
  %cmp21 = icmp ne i32 %call20, 0
  %conv = zext i1 %cmp21 to i32
  %call22 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9096, i8* noundef getelementptr inbounds ([105 x i8], [105 x i8]* @.str.808, i64 0, i64 0), i32 noundef %conv) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %if.end25

if.end25:                                         ; preds = %if.end17
  %and = and i32 %idx, 1
  %cmp26.not = icmp eq i32 %and, 0
  br i1 %cmp26.not, label %if.end37, label %if.then28

if.then28:                                        ; preds = %if.end25
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %16 = zext i1 %5 to i64
  %call30 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %15, i32 noundef 118, i64 noundef %16, i8* noundef null) #16
  %cmp31 = icmp ne i64 %call30, 0
  %conv32 = zext i1 %cmp31 to i32
  %call33 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9100, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.930, i64 0, i64 0), i32 noundef %conv32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end37

if.end37:                                         ; preds = %if.then28, %if.end25
  switch i32 %idx, label %if.end64 [
    i32 5, label %if.then40
    i32 7, label %if.then50
    i32 9, label %if.then61
  ]

if.then40:                                        ; preds = %if.end37
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call41 = call i32 @SSL_CTX_set0_tmp_dh_pkey(%struct.ssl_ctx_st* noundef %17, %struct.evp_pkey_st* noundef %dhpkey.0171) #16
  %cmp42 = icmp ne i32 %call41, 0
  %conv43 = zext i1 %cmp42 to i32
  %call44 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9105, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.931, i64 0, i64 0), i32 noundef %conv43) #16
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %end, label %if.end64

if.then50:                                        ; preds = %if.end37
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %19 = bitcast %struct.dh_st* %dh.0 to i8*
  %call51 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %18, i32 noundef 3, i64 noundef 0, i8* noundef %19) #16
  %cmp52 = icmp ne i64 %call51, 0
  %conv53 = zext i1 %cmp52 to i32
  %call54 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9111, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.932, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %if.end64

if.then61:                                        ; preds = %if.end37
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_tmp_dh_callback(%struct.ssl_ctx_st* noundef %20, %struct.dh_st* (%struct.ssl_st*, i32, i32)* noundef nonnull @tmp_dh_callback) #16
  br label %if.end64

if.end64:                                         ; preds = %if.end37, %if.then40, %if.then50, %if.then61
  %dhpkey.1 = phi %struct.evp_pkey_st* [ %dhpkey.0171, %if.then50 ], [ %dhpkey.0171, %if.then61 ], [ null, %if.then40 ], [ %dhpkey.0171, %if.end37 ]
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call65 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %21, %struct.ssl_ctx_st* noundef %22, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp66 = icmp ne i32 %call65, 0
  %conv67 = zext i1 %cmp66 to i32
  %call68 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9119, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv67) #16
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %end, label %if.end71

if.end71:                                         ; preds = %if.end64
  %cmp76 = icmp ne i32 %idx, 0
  %or.cond141 = and i1 %cmp76, %cmp26.not
  br i1 %or.cond141, label %if.then78, label %if.end87

if.then78:                                        ; preds = %if.end71
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %24 = zext i1 %5 to i64
  %call80 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %23, i32 noundef 118, i64 noundef %24, i8* noundef null) #16
  %cmp81 = icmp ne i64 %call80, 0
  %conv82 = zext i1 %cmp81 to i32
  %call83 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9123, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.933, i64 0, i64 0), i32 noundef %conv82) #16
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %end, label %if.end87

if.end87:                                         ; preds = %if.then78, %if.end71
  switch i32 %idx, label %if.end115 [
    i32 6, label %if.then90
    i32 8, label %if.then101
    i32 10, label %if.then112
  ]

if.then90:                                        ; preds = %if.end87
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call91 = call i32 @SSL_set0_tmp_dh_pkey(%struct.ssl_st* noundef %25, %struct.evp_pkey_st* noundef %dhpkey.1) #16
  %cmp92 = icmp ne i32 %call91, 0
  %conv93 = zext i1 %cmp92 to i32
  %call94 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9127, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.934, i64 0, i64 0), i32 noundef %conv93) #16
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %end, label %if.end115

if.then101:                                       ; preds = %if.end87
  %26 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %27 = bitcast %struct.dh_st* %dh.0 to i8*
  %call102 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %26, i32 noundef 3, i64 noundef 0, i8* noundef %27) #16
  %cmp103 = icmp ne i64 %call102, 0
  %conv104 = zext i1 %cmp103 to i32
  %call105 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9133, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.935, i64 0, i64 0), i32 noundef %conv104) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %if.end115

if.then112:                                       ; preds = %if.end87
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_set_tmp_dh_callback(%struct.ssl_st* noundef %28, %struct.dh_st* (%struct.ssl_st*, i32, i32)* noundef nonnull @tmp_dh_callback) #16
  br label %if.end115

if.end115:                                        ; preds = %if.end87, %if.then90, %if.then101, %if.then112
  %dhpkey.2 = phi %struct.evp_pkey_st* [ %dhpkey.1, %if.then101 ], [ %dhpkey.1, %if.then112 ], [ null, %if.then90 ], [ %dhpkey.1, %if.end87 ]
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call116 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %29, i32 noundef 123, i64 noundef 771, i8* noundef null) #16
  %cmp117 = icmp ne i64 %call116, 0
  %conv118 = zext i1 %cmp117 to i32
  %call119 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9140, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.936, i64 0, i64 0), i32 noundef %conv118) #16
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %end, label %lor.lhs.false121

lor.lhs.false121:                                 ; preds = %if.end115
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call122 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %30, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp123 = icmp ne i64 %call122, 0
  %conv124 = zext i1 %cmp123 to i32
  %call125 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9141, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.937, i64 0, i64 0), i32 noundef %conv124) #16
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %end, label %lor.lhs.false127

lor.lhs.false127:                                 ; preds = %lor.lhs.false121
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call128 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %31, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0)) #16
  %cmp129 = icmp ne i32 %call128, 0
  %conv130 = zext i1 %cmp129 to i32
  %call131 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9142, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.938, i64 0, i64 0), i32 noundef %conv130) #16
  %tobool132.not = icmp eq i32 %call131, 0
  br i1 %tobool132.not, label %end, label %if.end134

if.end134:                                        ; preds = %lor.lhs.false127
  %32 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call135 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %32, %struct.ssl_st* noundef %33, i32 noundef 0) #16
  %call136 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9150, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i64 0, i64 0), i32 noundef %call135, i32 noundef %cond3) #16
  %tobool137.not = icmp ne i32 %call136, 0
  %spec.select = zext i1 %tobool137.not to i32
  br label %end

end:                                              ; preds = %if.end134, %if.end115, %lor.lhs.false121, %lor.lhs.false127, %if.then101, %if.then90, %if.then78, %if.end64, %if.then50, %if.then40, %if.then28, %if.end17, %if.then11, %if.then
  %testresult.0 = phi i32 [ 0, %lor.lhs.false127 ], [ 0, %lor.lhs.false121 ], [ 0, %if.end115 ], [ 0, %if.then90 ], [ 0, %if.then101 ], [ 0, %if.then78 ], [ 0, %if.end64 ], [ 0, %if.then40 ], [ 0, %if.then50 ], [ 0, %if.then28 ], [ 0, %if.end17 ], [ 0, %if.then11 ], [ 0, %if.then ], [ %spec.select, %if.end134 ]
  %dhpkey.3 = phi %struct.evp_pkey_st* [ %dhpkey.2, %lor.lhs.false127 ], [ %dhpkey.2, %lor.lhs.false121 ], [ %dhpkey.2, %if.end115 ], [ %dhpkey.1, %if.then90 ], [ %dhpkey.1, %if.then101 ], [ %dhpkey.1, %if.then78 ], [ %dhpkey.1, %if.end64 ], [ %dhpkey.0171, %if.then40 ], [ %dhpkey.0171, %if.then50 ], [ %dhpkey.0171, %if.then28 ], [ %dhpkey.0171, %if.end17 ], [ %call, %if.then11 ], [ %call, %if.then ], [ %dhpkey.2, %if.end134 ]
  %dh.1 = phi %struct.dh_st* [ %dh.0, %lor.lhs.false127 ], [ %dh.0, %lor.lhs.false121 ], [ %dh.0, %if.end115 ], [ %dh.0, %if.then90 ], [ %dh.0, %if.then101 ], [ %dh.0, %if.then78 ], [ %dh.0, %if.end64 ], [ %dh.0, %if.then40 ], [ %dh.0, %if.then50 ], [ %dh.0, %if.then28 ], [ %dh.0, %if.end17 ], [ %call12, %if.then11 ], [ null, %if.then ], [ %dh.0, %if.end134 ]
  call void @DH_free(%struct.dh_st* noundef %dh.1) #16
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %35) #16
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %36) #16
  %37 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %37) #16
  call void @EVP_PKEY_free(%struct.evp_pkey_st* noundef %dhpkey.3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_dh_auto(i32 noundef %idx) #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %tmpkey = alloca %struct.evp_pkey_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.evp_pkey_st** %tmpkey to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %tmpkey, align 8, !tbaa !3
  switch i32 %idx, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.epilog
  ]

sw.bb:                                            ; preds = %entry
  %.b96 = load i1, i1* @is_fips, align 4
  br i1 %.b96, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.bb
  %5 = load i8*, i8** @cert1024, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey1024, align 8, !tbaa !3
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %7 = load i8*, i8** @cert, align 8, !tbaa !3
  %8 = load i8*, i8** @privkey, align 8, !tbaa !3
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %9 = load i8*, i8** @cert3072, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey3072, align 8, !tbaa !3
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %11 = load i8*, i8** @cert4096, align 8, !tbaa !3
  %12 = load i8*, i8** @privkey4096, align 8, !tbaa !3
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %13 = load i8*, i8** @cert8192, align 8, !tbaa !3
  %14 = load i8*, i8** @privkey8192, align 8, !tbaa !3
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %.b = load i1, i1* @is_fips, align 4
  br i1 %.b, label %cleanup, label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void (i8*, i32, i8*, ...) @test_error(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9224, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.952, i64 0, i64 0)) #16
  br label %end

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %if.end
  %thiscert.0 = phi i8* [ %13, %sw.bb4 ], [ %11, %sw.bb3 ], [ %9, %sw.bb2 ], [ %7, %sw.bb1 ], [ %5, %if.end ], [ null, %sw.bb5 ], [ null, %entry ]
  %thiskey.0 = phi i8* [ %14, %sw.bb4 ], [ %12, %sw.bb3 ], [ %10, %sw.bb2 ], [ %8, %sw.bb1 ], [ %6, %if.end ], [ null, %sw.bb5 ], [ null, %entry ]
  %expdhsize.0 = phi i64 [ 8192, %sw.bb4 ], [ 4096, %sw.bb3 ], [ 3072, %sw.bb2 ], [ 2048, %sw.bb1 ], [ 1024, %if.end ], [ 1024, %sw.bb5 ], [ 3072, %entry ]
  %ciphersuite.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0), %sw.bb4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.939, i64 0, i64 0), %if.end ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.950, i64 0, i64 0), %sw.bb5 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.951, i64 0, i64 0), %entry ]
  %15 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call10 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call11 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %15, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call10, i32 noundef 0, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %thiscert.0, i8* noundef %thiskey.0) #16
  %cmp = icmp ne i32 %call11, 0
  %conv = zext i1 %cmp to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9232, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.953, i64 0, i64 0), i32 noundef %conv) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %sw.epilog
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %16, %struct.ssl_ctx_st* noundef %17, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9236, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end15
  %18 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call23 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %18, i32 noundef 118, i64 noundef 1, i8* noundef null) #16
  %cmp24 = icmp ne i64 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9239, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.954, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end22
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call28 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %19, i32 noundef 123, i64 noundef 771, i8* noundef null) #16
  %cmp29 = icmp ne i64 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9240, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.936, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call34 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %20, i32 noundef 124, i64 noundef 771, i8* noundef null) #16
  %cmp35 = icmp ne i64 %call34, 0
  %conv36 = zext i1 %cmp35 to i32
  %call37 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9241, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.937, i64 0, i64 0), i32 noundef %conv36) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %end, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %lor.lhs.false33
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call40 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %21, i8* noundef %ciphersuite.0) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9242, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.955, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %lor.lhs.false39
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call46 = call i32 @SSL_set_cipher_list(%struct.ssl_st* noundef %22, i8* noundef %ciphersuite.0) #16
  %cmp47 = icmp ne i32 %call46, 0
  %conv48 = zext i1 %cmp47 to i32
  %call49 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9243, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.956, i64 0, i64 0), i32 noundef %conv48) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false45
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @SSL_connect(%struct.ssl_st* noundef %23) #16
  %call54 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9251, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call53, i32 noundef 0) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %if.end52
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call57 = call i32 @SSL_accept(%struct.ssl_st* noundef %24) #16
  %call58 = call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9252, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call57, i32 noundef 0) #16
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %end, label %if.end61

if.end61:                                         ; preds = %lor.lhs.false56
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call62 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %25, i32 noundef 133, i64 noundef 0, i8* noundef nonnull %4) #16
  %conv63 = trunc i64 %call62 to i32
  %call64 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9255, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.957, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv63, i32 noundef 0) #16
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %end, label %if.end67

if.end67:                                         ; preds = %if.end61
  %26 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %tmpkey, align 8, !tbaa !3
  %call68 = call i32 @EVP_PKEY_get_bits(%struct.evp_pkey_st* noundef %26) #16
  %conv69 = sext i32 %call68 to i64
  %call70 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9257, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.958, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.959, i64 0, i64 0), i64 noundef %conv69, i64 noundef %expdhsize.0) #16
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %end, label %if.end73

if.end73:                                         ; preds = %if.end67
  %27 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call74 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %27, %struct.ssl_st* noundef %28, i32 noundef 0) #16
  %cmp75 = icmp ne i32 %call74, 0
  %conv76 = zext i1 %cmp75 to i32
  %call77 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9260, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv76) #16
  %tobool78.not = icmp ne i32 %call77, 0
  %spec.select = zext i1 %tobool78.not to i32
  br label %end

end:                                              ; preds = %if.end73, %if.end67, %if.end61, %if.end52, %lor.lhs.false56, %if.end22, %lor.lhs.false, %lor.lhs.false33, %lor.lhs.false39, %lor.lhs.false45, %if.end15, %sw.epilog, %sw.default
  %testresult.0 = phi i32 [ 0, %sw.default ], [ 0, %if.end67 ], [ 0, %if.end61 ], [ 0, %lor.lhs.false56 ], [ 0, %if.end52 ], [ 0, %lor.lhs.false45 ], [ 0, %lor.lhs.false39 ], [ 0, %lor.lhs.false33 ], [ 0, %lor.lhs.false ], [ 0, %if.end22 ], [ 0, %if.end15 ], [ 0, %sw.epilog ], [ %spec.select, %if.end73 ]
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %30) #16
  %31 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %31) #16
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %32) #16
  %33 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %tmpkey, align 8, !tbaa !3
  call void @EVP_PKEY_free(%struct.evp_pkey_st* noundef %33) #16
  br label %cleanup

cleanup:                                          ; preds = %sw.bb5, %sw.bb, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 1, %sw.bb ], [ 1, %sw.bb5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_sni_tls13() #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx2 = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i32 0, i32* @snicb, align 4, !tbaa !7
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %4, i8* noundef null, %struct.ssl_method_st* noundef %call) #16
  %5 = bitcast %struct.ssl_ctx_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9295, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.755, i64 0, i64 0), i8* noundef %5) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %6 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call4 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %7 = load i8*, i8** @cert, align 8, !tbaa !3
  %8 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call5 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %6, %struct.ssl_method_st* noundef %call3, %struct.ssl_method_st* noundef %call4, i32 noundef 772, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx2, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %7, i8* noundef %8) #16
  %cmp = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9300, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.960, i64 0, i64 0), i32 noundef %conv) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end9

if.end9:                                          ; preds = %if.end
  %call10 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef %call1, i32 noundef 53, void ()* noundef bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @sni_cb to void ()*)) #16
  %cmp11 = icmp ne i64 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9304, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.589, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %9 = bitcast %struct.ssl_ctx_st** %sctx2 to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !3
  %call15 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %call1, i32 noundef 54, i64 noundef 0, i8* noundef %10) #16
  %cmp16 = icmp ne i64 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9305, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.590, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end21

if.end21:                                         ; preds = %lor.lhs.false
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call22 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %call1, %struct.ssl_ctx_st* noundef %11, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9313, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.end21
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call28 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %12, %struct.ssl_st* noundef %13, i32 noundef 0) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9315, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %if.end34

if.end34:                                         ; preds = %lor.lhs.false27
  %14 = load i32, i32* @snicb, align 4, !tbaa !7
  %call35 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9319, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.961, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %14, i32 noundef 1) #16
  %tobool36.not = icmp ne i32 %call35, 0
  %spec.select = zext i1 %tobool36.not to i32
  br label %end

end:                                              ; preds = %if.end34, %if.end21, %lor.lhs.false27, %if.end9, %lor.lhs.false, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false27 ], [ 0, %if.end21 ], [ 0, %lor.lhs.false ], [ 0, %if.end9 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end34 ]
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %15) #16
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx2, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %17) #16
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call1) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_inherit_verify_param() #1 {
entry:
  %0 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %0, i8* noundef null, %struct.ssl_method_st* noundef %call) #16
  %1 = bitcast %struct.ssl_ctx_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9416, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.598, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %call3 = tail call %struct.X509_VERIFY_PARAM_st* @SSL_CTX_get0_param(%struct.ssl_ctx_st* noundef %call1) #16
  %2 = bitcast %struct.X509_VERIFY_PARAM_st* %call3 to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9420, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.962, i64 0, i64 0), i8* noundef %2) #16
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %end, label %if.end7

if.end7:                                          ; preds = %if.end
  %call8 = tail call i32 @X509_VERIFY_PARAM_get_hostflags(%struct.X509_VERIFY_PARAM_st* noundef %call3) #16
  %call9 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9422, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.963, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call8, i32 noundef 0) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %if.end12

if.end12:                                         ; preds = %if.end7
  tail call void @X509_VERIFY_PARAM_set_hostflags(%struct.X509_VERIFY_PARAM_st* noundef %call3, i32 noundef 32) #16
  %call13 = tail call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %call1) #16
  %3 = bitcast %struct.ssl_st* %call13 to i8*
  %call14 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9428, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.964, i64 0, i64 0), i8* noundef %3) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %if.end17

if.end17:                                         ; preds = %if.end12
  %call18 = tail call %struct.X509_VERIFY_PARAM_st* @SSL_get0_param(%struct.ssl_st* noundef %call13) #16
  %4 = bitcast %struct.X509_VERIFY_PARAM_st* %call18 to i8*
  %call19 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9432, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.965, i64 0, i64 0), i8* noundef %4) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end17
  %call23 = tail call i32 @X509_VERIFY_PARAM_get_hostflags(%struct.X509_VERIFY_PARAM_st* noundef %call18) #16
  %call24 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9434, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.966, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.967, i64 0, i64 0), i32 noundef %call23, i32 noundef 32) #16
  %tobool25.not = icmp ne i32 %call24, 0
  %spec.select = zext i1 %tobool25.not to i32
  br label %end

end:                                              ; preds = %if.end22, %if.end17, %if.end12, %if.end7, %if.end, %entry
  %ssl.0 = phi %struct.ssl_st* [ %call13, %if.end17 ], [ %call13, %if.end12 ], [ null, %if.end7 ], [ null, %if.end ], [ null, %entry ], [ %call13, %if.end22 ]
  %testresult.0 = phi i32 [ 0, %if.end17 ], [ 0, %if.end12 ], [ 0, %if.end7 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end22 ]
  tail call void @SSL_free(%struct.ssl_st* noundef %ssl.0) #16
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call1) #16
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_set_alpn() #1 {
entry:
  %bad0 = alloca i32, align 4
  %good = alloca [5 x i8], align 1
  %bad1 = alloca i32, align 4
  %bad2 = alloca [5 x i8], align 1
  %bad3 = alloca i64, align 8
  %bad4 = alloca i64, align 8
  %0 = bitcast i32* %bad0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  store i32 1684103680, i32* %bad0, align 4
  %1 = getelementptr inbounds [5 x i8], [5 x i8]* %good, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %1) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(5) %1, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @__const.test_set_alpn.good, i64 0, i64 0), i64 5, i1 false)
  %2 = bitcast i32* %bad1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19
  store i32 1684103681, i32* %bad1, align 4
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %bad2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(5) %3, i8* noundef nonnull align 1 dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @__const.test_set_alpn.bad2, i64 0, i64 0), i64 5, i1 false)
  %4 = bitcast i64* %bad3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store i64 7233170234652320259, i64* %bad3, align 8
  %5 = bitcast i64* %bad4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store i64 7233170256127156739, i64* %bad4, align 8
  %6 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %6, i8* noundef null, %struct.ssl_method_st* noundef %call) #16
  %7 = bitcast %struct.ssl_ctx_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9351, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.598, i64 0, i64 0), i8* noundef %7) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef null, i32 noundef 2) #16
  %cmp = icmp ne i32 %call3, 0
  %conv = zext i1 %cmp to i32
  %call4 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9355, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.968, i64 0, i64 0), i32 noundef %conv) #16
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %end, label %if.end7

if.end7:                                          ; preds = %if.end
  %call8 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %1, i32 noundef 0) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv10 = zext i1 %cmp9 to i32
  %call11 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9357, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.969, i64 0, i64 0), i32 noundef %conv10) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end14

if.end14:                                         ; preds = %if.end7
  %call16 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %1, i32 noundef 5) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9359, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.970, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end14
  %call24 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %1, i32 noundef 1) #16
  %cmp25 = icmp ne i32 %call24, 0
  %conv26 = zext i1 %cmp25 to i32
  %call27 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9361, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.971, i64 0, i64 0), i32 noundef %conv26) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %end, label %if.end30

if.end30:                                         ; preds = %if.end22
  %call32 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %0, i32 noundef 4) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9363, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.972, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %if.end30
  %call40 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %2, i32 noundef 4) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9365, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.973, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %if.end38
  %call48 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %3, i32 noundef 5) #16
  %cmp49 = icmp ne i32 %call48, 0
  %conv50 = zext i1 %cmp49 to i32
  %call51 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9367, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.974, i64 0, i64 0), i32 noundef %conv50) #16
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %end, label %if.end54

if.end54:                                         ; preds = %if.end46
  %call56 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %4, i32 noundef 8) #16
  %cmp57 = icmp ne i32 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9369, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.975, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %if.end62

if.end62:                                         ; preds = %if.end54
  %call64 = call i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef %call1, i8* noundef nonnull %5, i32 noundef 8) #16
  %cmp65 = icmp ne i32 %call64, 0
  %conv66 = zext i1 %cmp65 to i32
  %call67 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9371, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.976, i64 0, i64 0), i32 noundef %conv66) #16
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %end, label %if.end70

if.end70:                                         ; preds = %if.end62
  %call71 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %call1) #16
  %8 = bitcast %struct.ssl_st* %call71 to i8*
  %call72 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9375, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.964, i64 0, i64 0), i8* noundef %8) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %if.end75

if.end75:                                         ; preds = %if.end70
  %call76 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef null, i32 noundef 2) #16
  %cmp77 = icmp ne i32 %call76, 0
  %conv78 = zext i1 %cmp77 to i32
  %call79 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9378, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.977, i64 0, i64 0), i32 noundef %conv78) #16
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %end, label %if.end82

if.end82:                                         ; preds = %if.end75
  %call84 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %1, i32 noundef 0) #16
  %cmp85 = icmp ne i32 %call84, 0
  %conv86 = zext i1 %cmp85 to i32
  %call87 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9380, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.978, i64 0, i64 0), i32 noundef %conv86) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %end, label %if.end90

if.end90:                                         ; preds = %if.end82
  %call92 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %1, i32 noundef 5) #16
  %cmp93 = icmp ne i32 %call92, 0
  %conv94 = zext i1 %cmp93 to i32
  %call95 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9382, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.979, i64 0, i64 0), i32 noundef %conv94) #16
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %end, label %if.end98

if.end98:                                         ; preds = %if.end90
  %call100 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %1, i32 noundef 1) #16
  %cmp101 = icmp ne i32 %call100, 0
  %conv102 = zext i1 %cmp101 to i32
  %call103 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9384, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.980, i64 0, i64 0), i32 noundef %conv102) #16
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %end, label %if.end106

if.end106:                                        ; preds = %if.end98
  %call108 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %0, i32 noundef 4) #16
  %cmp109 = icmp ne i32 %call108, 0
  %conv110 = zext i1 %cmp109 to i32
  %call111 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9386, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.981, i64 0, i64 0), i32 noundef %conv110) #16
  %tobool112.not = icmp eq i32 %call111, 0
  br i1 %tobool112.not, label %end, label %if.end114

if.end114:                                        ; preds = %if.end106
  %call116 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %2, i32 noundef 4) #16
  %cmp117 = icmp ne i32 %call116, 0
  %conv118 = zext i1 %cmp117 to i32
  %call119 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9388, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.982, i64 0, i64 0), i32 noundef %conv118) #16
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %end, label %if.end122

if.end122:                                        ; preds = %if.end114
  %call124 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %3, i32 noundef 5) #16
  %cmp125 = icmp ne i32 %call124, 0
  %conv126 = zext i1 %cmp125 to i32
  %call127 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9390, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.983, i64 0, i64 0), i32 noundef %conv126) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %if.end130

if.end130:                                        ; preds = %if.end122
  %call132 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %4, i32 noundef 8) #16
  %cmp133 = icmp ne i32 %call132, 0
  %conv134 = zext i1 %cmp133 to i32
  %call135 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9392, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.984, i64 0, i64 0), i32 noundef %conv134) #16
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %end, label %if.end138

if.end138:                                        ; preds = %if.end130
  %call140 = call i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef %call71, i8* noundef nonnull %5, i32 noundef 8) #16
  %cmp141 = icmp ne i32 %call140, 0
  %conv142 = zext i1 %cmp141 to i32
  %call143 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9394, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.985, i64 0, i64 0), i32 noundef %conv142) #16
  %tobool144.not = icmp ne i32 %call143, 0
  %spec.select = zext i1 %tobool144.not to i32
  br label %end

end:                                              ; preds = %if.end138, %if.end130, %if.end122, %if.end114, %if.end106, %if.end98, %if.end90, %if.end82, %if.end75, %if.end70, %if.end62, %if.end54, %if.end46, %if.end38, %if.end30, %if.end22, %if.end14, %if.end7, %if.end, %entry
  %ssl.0 = phi %struct.ssl_st* [ %call71, %if.end130 ], [ %call71, %if.end122 ], [ %call71, %if.end114 ], [ %call71, %if.end106 ], [ %call71, %if.end98 ], [ %call71, %if.end90 ], [ %call71, %if.end82 ], [ %call71, %if.end75 ], [ %call71, %if.end70 ], [ null, %if.end62 ], [ null, %if.end54 ], [ null, %if.end46 ], [ null, %if.end38 ], [ null, %if.end30 ], [ null, %if.end22 ], [ null, %if.end14 ], [ null, %if.end7 ], [ null, %if.end ], [ null, %entry ], [ %call71, %if.end138 ]
  %testresult.0 = phi i32 [ 0, %if.end130 ], [ 0, %if.end122 ], [ 0, %if.end114 ], [ 0, %if.end106 ], [ 0, %if.end98 ], [ 0, %if.end90 ], [ 0, %if.end82 ], [ 0, %if.end75 ], [ 0, %if.end70 ], [ 0, %if.end62 ], [ 0, %if.end54 ], [ 0, %if.end46 ], [ 0, %if.end38 ], [ 0, %if.end30 ], [ 0, %if.end22 ], [ 0, %if.end14 ], [ 0, %if.end7 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end138 ]
  call void @SSL_free(%struct.ssl_st* noundef %ssl.0) #16
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_session_timeout(i32 noundef %test) #1 {
entry:
  %call = tail call i64 @time(i64* noundef null) #16
  %0 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call1 = tail call %struct.ssl_method_st* @TLS_method() #16
  %call2 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %0, i8* noundef null, %struct.ssl_method_st* noundef %call1) #16
  %1 = bitcast %struct.ssl_ctx_st* %call2 to i8*
  %call3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8430, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.236, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call %struct.ssl_session_st* @SSL_SESSION_new() #16
  %2 = bitcast %struct.ssl_session_st* %call4 to i8*
  %call5 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8431, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.986, i64 0, i64 0), i8* noundef %2) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %call8 = tail call %struct.ssl_session_st* @SSL_SESSION_new() #16
  %3 = bitcast %struct.ssl_session_st* %call8 to i8*
  %call9 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8432, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.987, i64 0, i64 0), i8* noundef %3) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %call12 = tail call %struct.ssl_session_st* @SSL_SESSION_new() #16
  %4 = bitcast %struct.ssl_session_st* %call12 to i8*
  %call13 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8433, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.988, i64 0, i64 0), i8* noundef %4) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false11
  %session_id_length = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call4, i64 0, i32 4
  store i64 32, i64* %session_id_length, align 8, !tbaa !39
  %arraydecay = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call4, i64 0, i32 5, i64 0
  %call15 = tail call i8* @memset(i8* noundef nonnull %arraydecay, i32 noundef 1, i64 noundef 32) #16
  %session_id_length16 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call8, i64 0, i32 4
  store i64 32, i64* %session_id_length16, align 8, !tbaa !39
  %arraydecay18 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call8, i64 0, i32 5, i64 0
  %call19 = tail call i8* @memset(i8* noundef nonnull %arraydecay18, i32 noundef 2, i64 noundef 32) #16
  %session_id_length20 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call12, i64 0, i32 4
  store i64 32, i64* %session_id_length20, align 8, !tbaa !39
  %arraydecay22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call12, i64 0, i32 5, i64 0
  %call23 = tail call i8* @memset(i8* noundef nonnull %arraydecay22, i32 noundef 3, i64 noundef 32) #16
  %call24 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef %call4) #16
  %call25 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8444, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.989, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call24, i32 noundef 1) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.end
  %call28 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call8) #16
  %call29 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8445, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.990, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call28, i32 noundef 1) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %call32 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call12) #16
  %call33 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8446, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.991, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call32, i32 noundef 1) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end36

if.end36:                                         ; preds = %lor.lhs.false31
  %prev = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call4, i64 0, i32 24
  %5 = bitcast %struct.ssl_session_st** %prev to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !40
  %call37 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8450, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %6) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %end, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %if.end36
  %prev40 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call8, i64 0, i32 24
  %7 = bitcast %struct.ssl_session_st** %prev40 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !40
  %call41 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8451, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %8) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %prev44 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call12, i64 0, i32 24
  %9 = bitcast %struct.ssl_session_st** %prev44 to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !40
  %call45 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8452, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %10) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %if.end48

if.end48:                                         ; preds = %lor.lhs.false43
  %sub = add nsw i64 %call, -10
  %call49 = tail call i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef nonnull %call4, i64 noundef %sub) #16
  %conv = trunc i64 %call49 to i32
  %call50 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8455, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.995, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv, i32 noundef 0) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.end48
  %call53 = tail call i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef nonnull %call8, i64 noundef %call) #16
  %conv54 = trunc i64 %call53 to i32
  %call55 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8456, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.996, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv54, i32 noundef 0) #16
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %end, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %lor.lhs.false52
  %add = add nsw i64 %call, 10
  %call58 = tail call i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef nonnull %call12, i64 noundef %add) #16
  %conv59 = trunc i64 %call58 to i32
  %call60 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8457, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.997, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv59, i32 noundef 0) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %if.end63

if.end63:                                         ; preds = %lor.lhs.false57
  %call64 = tail call i64 @SSL_SESSION_set_timeout(%struct.ssl_session_st* noundef nonnull %call4, i64 noundef 10) #16
  %conv65 = trunc i64 %call64 to i32
  %call66 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8460, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.998, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv65, i32 noundef 0) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %if.end63
  %call69 = tail call i64 @SSL_SESSION_set_timeout(%struct.ssl_session_st* noundef nonnull %call8, i64 noundef 10) #16
  %conv70 = trunc i64 %call69 to i32
  %call71 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8461, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.999, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv70, i32 noundef 0) #16
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %end, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %lor.lhs.false68
  %call74 = tail call i64 @SSL_SESSION_set_timeout(%struct.ssl_session_st* noundef nonnull %call12, i64 noundef 10) #16
  %conv75 = trunc i64 %call74 to i32
  %call76 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8462, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1000, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv75, i32 noundef 0) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.end79

if.end79:                                         ; preds = %lor.lhs.false73
  %11 = load i8*, i8** %5, align 8, !tbaa !40
  %call81 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8466, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %11) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %end, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.end79
  %12 = load i8*, i8** %7, align 8, !tbaa !40
  %call85 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8467, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %12) #16
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %end, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %lor.lhs.false83
  %13 = load i8*, i8** %9, align 8, !tbaa !40
  %call89 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8468, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %13) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %if.end92

if.end92:                                         ; preds = %lor.lhs.false87
  %next = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call12, i64 0, i32 25
  %14 = bitcast %struct.ssl_session_st** %next to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !41
  %call93 = tail call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8472, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1001, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1002, i64 0, i64 0), i8* noundef %15, i8* noundef nonnull %3) #16
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %end, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %if.end92
  %next96 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %call8, i64 0, i32 25
  %16 = bitcast %struct.ssl_session_st** %next96 to i8**
  %17 = load i8*, i8** %16, align 8, !tbaa !41
  %call97 = tail call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8473, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1003, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1004, i64 0, i64 0), i8* noundef %17, i8* noundef nonnull %2) #16
  %tobool98.not = icmp eq i32 %call97, 0
  br i1 %tobool98.not, label %end, label %lor.lhs.false99

lor.lhs.false99:                                  ; preds = %lor.lhs.false95
  %18 = load i8*, i8** %5, align 8, !tbaa !40
  %call101 = tail call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8474, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1002, i64 0, i64 0), i8* noundef %18, i8* noundef nonnull %3) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %lor.lhs.false99
  %19 = load i8*, i8** %7, align 8, !tbaa !40
  %call105 = tail call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8475, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1005, i64 0, i64 0), i8* noundef %19, i8* noundef nonnull %4) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %if.end108

if.end108:                                        ; preds = %lor.lhs.false103
  %sub110 = add nsw i64 %call, 9
  tail call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* noundef %call2, i64 noundef %sub110) #16
  %20 = load i8*, i8** %5, align 8, !tbaa !40
  %call112 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8480, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %20) #16
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %end, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %if.end108
  %21 = load i8*, i8** %7, align 8, !tbaa !40
  %call116 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8481, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %21) #16
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %end, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %22 = load i8*, i8** %9, align 8, !tbaa !40
  %call120 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8482, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %22) #16
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %end, label %if.end123

if.end123:                                        ; preds = %lor.lhs.false118
  %add125 = add nsw i64 %call, 11
  tail call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* noundef %call2, i64 noundef %add125) #16
  %23 = load i8*, i8** %5, align 8, !tbaa !40
  %call127 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8487, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %23) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %if.end123
  %24 = load i8*, i8** %7, align 8, !tbaa !40
  %call131 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8488, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %24) #16
  %tobool132.not = icmp eq i32 %call131, 0
  br i1 %tobool132.not, label %end, label %lor.lhs.false133

lor.lhs.false133:                                 ; preds = %lor.lhs.false129
  %25 = load i8*, i8** %9, align 8, !tbaa !40
  %call135 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8489, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %25) #16
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %end, label %if.end138

if.end138:                                        ; preds = %lor.lhs.false133
  %add140 = add nsw i64 %call, 21
  tail call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* noundef %call2, i64 noundef %add140) #16
  %26 = load i8*, i8** %5, align 8, !tbaa !40
  %call142 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8494, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %26) #16
  %tobool143.not = icmp eq i32 %call142, 0
  br i1 %tobool143.not, label %end, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %if.end138
  %27 = load i8*, i8** %7, align 8, !tbaa !40
  %call146 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8495, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %27) #16
  %tobool147.not = icmp eq i32 %call146, 0
  br i1 %tobool147.not, label %end, label %lor.lhs.false148

lor.lhs.false148:                                 ; preds = %lor.lhs.false144
  %28 = load i8*, i8** %9, align 8, !tbaa !40
  %call150 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8496, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %28) #16
  %tobool151.not = icmp eq i32 %call150, 0
  br i1 %tobool151.not, label %end, label %if.end153

if.end153:                                        ; preds = %lor.lhs.false148
  %call154 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call4) #16
  %call155 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8500, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.989, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call154, i32 noundef 1) #16
  %tobool156.not = icmp eq i32 %call155, 0
  br i1 %tobool156.not, label %end, label %lor.lhs.false157

lor.lhs.false157:                                 ; preds = %if.end153
  %call158 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call8) #16
  %call159 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8501, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.990, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call158, i32 noundef 1) #16
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %end, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %lor.lhs.false157
  %call162 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call12) #16
  %call163 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8502, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.991, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call162, i32 noundef 1) #16
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %end, label %if.end166

if.end166:                                        ; preds = %lor.lhs.false161
  %29 = load i8*, i8** %5, align 8, !tbaa !40
  %call168 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8506, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %29) #16
  %tobool169.not = icmp eq i32 %call168, 0
  br i1 %tobool169.not, label %end, label %lor.lhs.false170

lor.lhs.false170:                                 ; preds = %if.end166
  %30 = load i8*, i8** %7, align 8, !tbaa !40
  %call172 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8507, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %30) #16
  %tobool173.not = icmp eq i32 %call172, 0
  br i1 %tobool173.not, label %end, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %lor.lhs.false170
  %31 = load i8*, i8** %9, align 8, !tbaa !40
  %call176 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8508, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %31) #16
  %tobool177.not = icmp eq i32 %call176, 0
  br i1 %tobool177.not, label %end, label %if.end179

if.end179:                                        ; preds = %lor.lhs.false174
  tail call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* noundef %call2, i64 noundef 0) #16
  %32 = load i8*, i8** %5, align 8, !tbaa !40
  %call181 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8513, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.992, i64 0, i64 0), i8* noundef %32) #16
  %tobool182.not = icmp eq i32 %call181, 0
  br i1 %tobool182.not, label %end, label %lor.lhs.false183

lor.lhs.false183:                                 ; preds = %if.end179
  %33 = load i8*, i8** %7, align 8, !tbaa !40
  %call185 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8514, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.993, i64 0, i64 0), i8* noundef %33) #16
  %tobool186.not = icmp eq i32 %call185, 0
  br i1 %tobool186.not, label %end, label %lor.lhs.false187

lor.lhs.false187:                                 ; preds = %lor.lhs.false183
  %34 = load i8*, i8** %9, align 8, !tbaa !40
  %call189 = tail call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8515, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.994, i64 0, i64 0), i8* noundef %34) #16
  %tobool190.not = icmp eq i32 %call189, 0
  br i1 %tobool190.not, label %end, label %if.end192

if.end192:                                        ; preds = %lor.lhs.false187
  %call193 = tail call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %call2, i32 noundef 45, i64 noundef 0, i8* noundef null) #16
  %or = or i64 %call193, 1024
  %call194 = tail call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %call2, i32 noundef 44, i64 noundef %or, i8* noundef null) #16
  %call196 = tail call i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef nonnull %call4, i64 noundef %sub) #16
  %conv197 = trunc i64 %call196 to i32
  %call198 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8523, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1006, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv197, i32 noundef 0) #16
  %tobool199.not = icmp eq i32 %call198, 0
  br i1 %tobool199.not, label %end, label %lor.lhs.false200

lor.lhs.false200:                                 ; preds = %if.end192
  %call201 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %call2, %struct.ssl_session_st* noundef nonnull %call4) #16
  %call202 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8524, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.989, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call201, i32 noundef 1) #16
  %tobool203.not = icmp eq i32 %call202, 0
  br i1 %tobool203.not, label %end, label %lor.lhs.false204

lor.lhs.false204:                                 ; preds = %lor.lhs.false200
  %call205 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* noundef nonnull %call4) #16
  %call206 = tail call i32 @test_long_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8525, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1007, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1008, i64 0, i64 0), i64 noundef %call205, i64 noundef %sub) #16
  %tobool207.not = icmp ne i32 %call206, 0
  %spec.select = zext i1 %tobool207.not to i32
  br label %end

end:                                              ; preds = %lor.lhs.false204, %if.end192, %lor.lhs.false200, %if.end179, %lor.lhs.false183, %lor.lhs.false187, %if.end166, %lor.lhs.false170, %lor.lhs.false174, %if.end153, %lor.lhs.false157, %lor.lhs.false161, %if.end138, %lor.lhs.false144, %lor.lhs.false148, %if.end123, %lor.lhs.false129, %lor.lhs.false133, %if.end108, %lor.lhs.false114, %lor.lhs.false118, %if.end92, %lor.lhs.false95, %lor.lhs.false99, %lor.lhs.false103, %if.end79, %lor.lhs.false83, %lor.lhs.false87, %if.end63, %lor.lhs.false68, %lor.lhs.false73, %if.end48, %lor.lhs.false52, %lor.lhs.false57, %if.end36, %lor.lhs.false39, %lor.lhs.false43, %if.end, %lor.lhs.false27, %lor.lhs.false31, %entry, %lor.lhs.false, %lor.lhs.false7, %lor.lhs.false11
  %middle.0 = phi %struct.ssl_session_st* [ %call8, %lor.lhs.false200 ], [ %call8, %if.end192 ], [ %call8, %lor.lhs.false187 ], [ %call8, %lor.lhs.false183 ], [ %call8, %if.end179 ], [ %call8, %lor.lhs.false174 ], [ %call8, %lor.lhs.false170 ], [ %call8, %if.end166 ], [ %call8, %lor.lhs.false161 ], [ %call8, %lor.lhs.false157 ], [ %call8, %if.end153 ], [ %call8, %lor.lhs.false148 ], [ %call8, %lor.lhs.false144 ], [ %call8, %if.end138 ], [ %call8, %lor.lhs.false133 ], [ %call8, %lor.lhs.false129 ], [ %call8, %if.end123 ], [ %call8, %lor.lhs.false118 ], [ %call8, %lor.lhs.false114 ], [ %call8, %if.end108 ], [ %call8, %lor.lhs.false103 ], [ %call8, %lor.lhs.false99 ], [ %call8, %lor.lhs.false95 ], [ %call8, %if.end92 ], [ %call8, %lor.lhs.false87 ], [ %call8, %lor.lhs.false83 ], [ %call8, %if.end79 ], [ %call8, %lor.lhs.false73 ], [ %call8, %lor.lhs.false68 ], [ %call8, %if.end63 ], [ %call8, %lor.lhs.false57 ], [ %call8, %lor.lhs.false52 ], [ %call8, %if.end48 ], [ %call8, %lor.lhs.false43 ], [ %call8, %lor.lhs.false39 ], [ %call8, %if.end36 ], [ %call8, %lor.lhs.false31 ], [ %call8, %lor.lhs.false27 ], [ %call8, %if.end ], [ %call8, %lor.lhs.false11 ], [ %call8, %lor.lhs.false7 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call8, %lor.lhs.false204 ]
  %late.0 = phi %struct.ssl_session_st* [ %call12, %lor.lhs.false200 ], [ %call12, %if.end192 ], [ %call12, %lor.lhs.false187 ], [ %call12, %lor.lhs.false183 ], [ %call12, %if.end179 ], [ %call12, %lor.lhs.false174 ], [ %call12, %lor.lhs.false170 ], [ %call12, %if.end166 ], [ %call12, %lor.lhs.false161 ], [ %call12, %lor.lhs.false157 ], [ %call12, %if.end153 ], [ %call12, %lor.lhs.false148 ], [ %call12, %lor.lhs.false144 ], [ %call12, %if.end138 ], [ %call12, %lor.lhs.false133 ], [ %call12, %lor.lhs.false129 ], [ %call12, %if.end123 ], [ %call12, %lor.lhs.false118 ], [ %call12, %lor.lhs.false114 ], [ %call12, %if.end108 ], [ %call12, %lor.lhs.false103 ], [ %call12, %lor.lhs.false99 ], [ %call12, %lor.lhs.false95 ], [ %call12, %if.end92 ], [ %call12, %lor.lhs.false87 ], [ %call12, %lor.lhs.false83 ], [ %call12, %if.end79 ], [ %call12, %lor.lhs.false73 ], [ %call12, %lor.lhs.false68 ], [ %call12, %if.end63 ], [ %call12, %lor.lhs.false57 ], [ %call12, %lor.lhs.false52 ], [ %call12, %if.end48 ], [ %call12, %lor.lhs.false43 ], [ %call12, %lor.lhs.false39 ], [ %call12, %if.end36 ], [ %call12, %lor.lhs.false31 ], [ %call12, %lor.lhs.false27 ], [ %call12, %if.end ], [ %call12, %lor.lhs.false11 ], [ null, %lor.lhs.false7 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call12, %lor.lhs.false204 ]
  %early.0 = phi %struct.ssl_session_st* [ %call4, %lor.lhs.false200 ], [ %call4, %if.end192 ], [ %call4, %lor.lhs.false187 ], [ %call4, %lor.lhs.false183 ], [ %call4, %if.end179 ], [ %call4, %lor.lhs.false174 ], [ %call4, %lor.lhs.false170 ], [ %call4, %if.end166 ], [ %call4, %lor.lhs.false161 ], [ %call4, %lor.lhs.false157 ], [ %call4, %if.end153 ], [ %call4, %lor.lhs.false148 ], [ %call4, %lor.lhs.false144 ], [ %call4, %if.end138 ], [ %call4, %lor.lhs.false133 ], [ %call4, %lor.lhs.false129 ], [ %call4, %if.end123 ], [ %call4, %lor.lhs.false118 ], [ %call4, %lor.lhs.false114 ], [ %call4, %if.end108 ], [ %call4, %lor.lhs.false103 ], [ %call4, %lor.lhs.false99 ], [ %call4, %lor.lhs.false95 ], [ %call4, %if.end92 ], [ %call4, %lor.lhs.false87 ], [ %call4, %lor.lhs.false83 ], [ %call4, %if.end79 ], [ %call4, %lor.lhs.false73 ], [ %call4, %lor.lhs.false68 ], [ %call4, %if.end63 ], [ %call4, %lor.lhs.false57 ], [ %call4, %lor.lhs.false52 ], [ %call4, %if.end48 ], [ %call4, %lor.lhs.false43 ], [ %call4, %lor.lhs.false39 ], [ %call4, %if.end36 ], [ %call4, %lor.lhs.false31 ], [ %call4, %lor.lhs.false27 ], [ %call4, %if.end ], [ %call4, %lor.lhs.false11 ], [ %call4, %lor.lhs.false7 ], [ %call4, %lor.lhs.false ], [ null, %entry ], [ %call4, %lor.lhs.false204 ]
  %testresult.0 = phi i32 [ 0, %lor.lhs.false200 ], [ 0, %if.end192 ], [ 0, %lor.lhs.false187 ], [ 0, %lor.lhs.false183 ], [ 0, %if.end179 ], [ 0, %lor.lhs.false174 ], [ 0, %lor.lhs.false170 ], [ 0, %if.end166 ], [ 0, %lor.lhs.false161 ], [ 0, %lor.lhs.false157 ], [ 0, %if.end153 ], [ 0, %lor.lhs.false148 ], [ 0, %lor.lhs.false144 ], [ 0, %if.end138 ], [ 0, %lor.lhs.false133 ], [ 0, %lor.lhs.false129 ], [ 0, %if.end123 ], [ 0, %lor.lhs.false118 ], [ 0, %lor.lhs.false114 ], [ 0, %if.end108 ], [ 0, %lor.lhs.false103 ], [ 0, %lor.lhs.false99 ], [ 0, %lor.lhs.false95 ], [ 0, %if.end92 ], [ 0, %lor.lhs.false87 ], [ 0, %lor.lhs.false83 ], [ 0, %if.end79 ], [ 0, %lor.lhs.false73 ], [ 0, %lor.lhs.false68 ], [ 0, %if.end63 ], [ 0, %lor.lhs.false57 ], [ 0, %lor.lhs.false52 ], [ 0, %if.end48 ], [ 0, %lor.lhs.false43 ], [ 0, %lor.lhs.false39 ], [ 0, %if.end36 ], [ 0, %lor.lhs.false31 ], [ 0, %lor.lhs.false27 ], [ 0, %if.end ], [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %spec.select, %lor.lhs.false204 ]
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call2) #16
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %early.0) #16
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %middle.0) #16
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %late.0) #16
  ret i32 %testresult.0
}

declare dso_local void @CRYPTO_free(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @cleanup_tests() local_unnamed_addr #1 {
entry:
  %0 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** @tmp_dh_params, align 8, !tbaa !3
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* noundef %0) #16
  %1 = load i8*, i8** @cert, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9721) #16
  %2 = load i8*, i8** @privkey, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %2, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9722) #16
  %3 = load i8*, i8** @cert2, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %3, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9723) #16
  %4 = load i8*, i8** @privkey2, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %4, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9724) #16
  %5 = load i8*, i8** @cert1024, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %5, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9725) #16
  %6 = load i8*, i8** @privkey1024, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %6, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9726) #16
  %7 = load i8*, i8** @cert3072, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %7, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9727) #16
  %8 = load i8*, i8** @privkey3072, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %8, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9728) #16
  %9 = load i8*, i8** @cert4096, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %9, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9729) #16
  %10 = load i8*, i8** @privkey4096, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %10, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9730) #16
  %11 = load i8*, i8** @cert8192, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %11, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9731) #16
  %12 = load i8*, i8** @privkey8192, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %12, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9732) #16
  tail call void @bio_s_mempacket_test_free() #16
  tail call void @bio_s_always_retry_free() #16
  %13 = load %struct.ossl_provider_st*, %struct.ossl_provider_st** @defctxnull, align 8, !tbaa !3
  %call = tail call i32 @OSSL_PROVIDER_unload(%struct.ossl_provider_st* noundef %13) #16
  %14 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  tail call void @OSSL_LIB_CTX_free(%struct.ossl_lib_ctx_st* noundef %14) #16
  ret void
}

declare dso_local void @EVP_PKEY_free(%struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local void @bio_s_mempacket_test_free() local_unnamed_addr #3

declare dso_local void @bio_s_always_retry_free() local_unnamed_addr #3

declare dso_local i32 @OSSL_PROVIDER_unload(%struct.ossl_provider_st* noundef) local_unnamed_addr #3

declare dso_local void @OSSL_LIB_CTX_free(%struct.ossl_lib_ctx_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @execute_test_large_message(%struct.ssl_method_st* noundef %smeth, %struct.ssl_method_st* noundef %cmeth, i32 noundef %min_version, i32 noundef %read_ahead) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %chaincert = alloca %struct.x509_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.x509_st** %chaincert to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.x509_st* null, %struct.x509_st** %chaincert, align 8, !tbaa !3
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %call = tail call %struct.bio_st* @BIO_new_file(i8* noundef %5, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0)) #16
  %6 = bitcast %struct.bio_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 955, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.124, i64 0, i64 0), i8* noundef %6) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call2 = tail call %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef %7, i8* noundef null) #16
  store %struct.x509_st* %call2, %struct.x509_st** %chaincert, align 8, !tbaa !3
  %8 = bitcast %struct.x509_st* %call2 to i8*
  %call3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 958, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.126, i64 0, i64 0), i8* noundef %8) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %end, label %if.end6

if.end6:                                          ; preds = %if.end
  %call7 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef %call, %struct.x509_st** noundef nonnull %chaincert, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null) #16
  %cmp = icmp eq %struct.x509_st* %call7, null
  br i1 %cmp, label %end, label %if.end9

if.end9:                                          ; preds = %if.end6
  %call10 = call i32 @BIO_free(%struct.bio_st* noundef %call) #16
  %9 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %10 = load i8*, i8** @cert, align 8, !tbaa !3
  %11 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call11 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %9, %struct.ssl_method_st* noundef %smeth, %struct.ssl_method_st* noundef %cmeth, i32 noundef %min_version, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %10, i8* noundef %11) #16
  %cmp12 = icmp ne i32 %call11, 0
  %conv = zext i1 %cmp12 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 968, i8* noundef getelementptr inbounds ([97 x i8], [97 x i8]* @.str.127, i64 0, i64 0), i32 noundef %conv) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %end, label %if.end16

if.end16:                                         ; preds = %if.end9
  %tobool17.not = icmp eq i32 %read_ahead, 0
  br i1 %tobool17.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call19 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %12, i32 noundef 41, i64 noundef 1, i8* noundef null) #16
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %13 = load %struct.x509_st*, %struct.x509_st** %chaincert, align 8, !tbaa !3
  %call21 = call i32 @i2d_X509(%struct.x509_st* noundef %13, i8** noundef null) #16
  %mul = mul nsw i32 %call21, 40
  %cmp22 = icmp sgt i32 %mul, 21845
  br i1 %cmp22, label %for.cond.preheader, label %cond.false

for.cond.preheader:                               ; preds = %if.end20
  %14 = bitcast %struct.x509_st** %chaincert to i8**
  br label %for.body

cond.false:                                       ; preds = %if.end20
  call void @OPENSSL_die(i8* noundef getelementptr inbounds ([81 x i8], [81 x i8]* @.str.128, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1001) #20
  unreachable

for.cond:                                         ; preds = %if.end29
  %inc = add nuw nsw i32 %i.01, 1
  %exitcond.not = icmp eq i32 %inc, 40
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !42

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %i.01 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.cond ]
  %15 = load %struct.x509_st*, %struct.x509_st** %chaincert, align 8, !tbaa !3
  %call26 = call i32 @X509_up_ref(%struct.x509_st* noundef %15) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %if.end29

if.end29:                                         ; preds = %for.body
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %17 = load i8*, i8** %14, align 8, !tbaa !3
  %call30 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %16, i32 noundef 14, i64 noundef 0, i8* noundef %17) #16
  %tobool31.not = icmp eq i64 %call30, 0
  br i1 %tobool31.not, label %if.then32, label %for.cond

if.then32:                                        ; preds = %if.end29
  %18 = load %struct.x509_st*, %struct.x509_st** %chaincert, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %18) #16
  br label %end

for.end:                                          ; preds = %for.cond
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call34 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %19, %struct.ssl_ctx_st* noundef %20, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp35 = icmp ne i32 %call34, 0
  %conv36 = zext i1 %cmp35 to i32
  %call37 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1012, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv36) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call39 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %21, %struct.ssl_st* noundef %22, i32 noundef 0) #16
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1014, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call46 = call i32 @SSL_clear(%struct.ssl_st* noundef %23) #16
  %cmp47 = icmp ne i32 %call46, 0
  %conv48 = zext i1 %cmp47 to i32
  %call49 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1021, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.131, i64 0, i64 0), i32 noundef %conv48) #16
  %tobool50.not = icmp ne i32 %call49, 0
  %spec.select = zext i1 %tobool50.not to i32
  br label %end

end:                                              ; preds = %for.body, %if.end45, %for.end, %lor.lhs.false, %if.end9, %if.end6, %if.end, %entry, %if.then32
  %certbio.0 = phi %struct.bio_st* [ %call, %if.end6 ], [ null, %if.then32 ], [ null, %lor.lhs.false ], [ null, %for.end ], [ null, %if.end9 ], [ %call, %if.end ], [ %call, %entry ], [ null, %if.end45 ], [ null, %for.body ]
  %testresult.0 = phi i32 [ 0, %if.end6 ], [ 0, %if.then32 ], [ 0, %lor.lhs.false ], [ 0, %for.end ], [ 0, %if.end9 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end45 ], [ 0, %for.body ]
  %call53 = call i32 @BIO_free(%struct.bio_st* noundef %certbio.0) #16
  %24 = load %struct.x509_st*, %struct.x509_st** %chaincert, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local %struct.ssl_method_st* @TLS_server_method() local_unnamed_addr #3

declare dso_local %struct.ssl_method_st* @TLS_client_method() local_unnamed_addr #3

declare dso_local %struct.bio_st* @BIO_new_file(i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef, %struct.x509_st** noundef, i32 (i8*, i32, i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @BIO_free(%struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef, %struct.ssl_method_st* noundef, %struct.ssl_method_st* noundef, i32 noundef, i32 noundef, %struct.ssl_ctx_st** noundef, %struct.ssl_ctx_st** noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef, i32 noundef, i64 noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @i2d_X509(%struct.x509_st* noundef, i8** noundef) local_unnamed_addr #3

; Function Attrs: noreturn
declare dso_local void @OPENSSL_die(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

declare dso_local i32 @X509_up_ref(%struct.x509_st* noundef) local_unnamed_addr #3

declare dso_local void @X509_free(%struct.x509_st* noundef) #3

declare dso_local i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef, %struct.ssl_ctx_st* noundef, %struct.ssl_st** noundef, %struct.ssl_st** noundef, %struct.bio_st* noundef, %struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local i32 @create_ssl_connection(%struct.ssl_st* noundef, %struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_clear(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_free(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_free(%struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_method_st* @DTLS_server_method() local_unnamed_addr #3

declare dso_local %struct.ssl_method_st* @DTLS_client_method() local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @execute_cleanse_plaintext(%struct.ssl_method_st* noundef %smeth, %struct.ssl_method_st* noundef %cmeth, i32 noundef %min_version, i32 noundef %max_version) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %smeth, %struct.ssl_method_st* noundef %cmeth, i32 noundef %min_version, i32 noundef %max_version, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %5, i8* noundef %6) #16
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1508, i8* noundef getelementptr inbounds ([97 x i8], [97 x i8]* @.str.127, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %7, %struct.ssl_ctx_st* noundef %8, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv4 = zext i1 %cmp3 to i32
  %call5 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1532, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv4) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %end, label %if.end8

if.end8:                                          ; preds = %if.end
  %9 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call9 = call i64 @SSL_set_options(%struct.ssl_st* noundef %9, i64 noundef 2) #16
  %cmp10 = icmp ne i64 %call9, 0
  %conv11 = zext i1 %cmp10 to i32
  %call12 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1535, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.135, i64 0, i64 0), i32 noundef %conv11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end8
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call16 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11, i32 noundef 0) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1539, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %end, label %vector.body

vector.body:                                      ; preds = %if.end15, %vector.body
  %index = phi i64 [ %index.next.7, %vector.body ], [ 0, %if.end15 ]
  %vec.ind76 = phi <16 x i8> [ %vec.ind.next77.7, %vector.body ], [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %if.end15 ]
  %12 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index
  %13 = bitcast i8* %12 to <16 x i8>*
  store <16 x i8> %vec.ind76, <16 x i8>* %13, align 16, !tbaa !9
  %index.next = or i64 %index, 16
  %vec.ind.next77 = add <16 x i8> %vec.ind76, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %14 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next
  %15 = bitcast i8* %14 to <16 x i8>*
  store <16 x i8> %vec.ind.next77, <16 x i8>* %15, align 16, !tbaa !9
  %index.next.1 = or i64 %index, 32
  %vec.ind.next77.1 = add <16 x i8> %vec.ind76, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %16 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.1
  %17 = bitcast i8* %16 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.1, <16 x i8>* %17, align 16, !tbaa !9
  %index.next.2 = or i64 %index, 48
  %vec.ind.next77.2 = add <16 x i8> %vec.ind76, <i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48>
  %18 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.2
  %19 = bitcast i8* %18 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.2, <16 x i8>* %19, align 16, !tbaa !9
  %index.next.3 = or i64 %index, 64
  %vec.ind.next77.3 = add <16 x i8> %vec.ind76, <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>
  %20 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.3
  %21 = bitcast i8* %20 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.3, <16 x i8>* %21, align 16, !tbaa !9
  %index.next.4 = or i64 %index, 80
  %vec.ind.next77.4 = add <16 x i8> %vec.ind76, <i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80>
  %22 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.4
  %23 = bitcast i8* %22 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.4, <16 x i8>* %23, align 16, !tbaa !9
  %index.next.5 = or i64 %index, 96
  %vec.ind.next77.5 = add <16 x i8> %vec.ind76, <i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96>
  %24 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.5
  %25 = bitcast i8* %24 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.5, <16 x i8>* %25, align 16, !tbaa !9
  %index.next.6 = or i64 %index, 112
  %vec.ind.next77.6 = add <16 x i8> %vec.ind76, <i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112>
  %26 = getelementptr inbounds [16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 %index.next.6
  %27 = bitcast i8* %26 to <16 x i8>*
  store <16 x i8> %vec.ind.next77.6, <16 x i8>* %27, align 16, !tbaa !9
  %index.next.7 = add nuw nsw i64 %index, 128
  %vec.ind.next77.7 = xor <16 x i8> %vec.ind76, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %28 = icmp eq i64 %index.next.7, 16000
  br i1 %28, label %for.end, label %vector.body, !llvm.loop !43

for.end:                                          ; preds = %vector.body
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call26 = call i32 @SSL_write(%struct.ssl_st* noundef %29, i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i32 noundef 16000) #16
  %call27 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1546, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.136, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i32 noundef %call26, i32 noundef 16000) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %end, label %if.end30

if.end30:                                         ; preds = %for.end
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call31 = call i32 @SSL_peek(%struct.ssl_st* noundef %30, i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.sbuf, i64 0, i64 0), i32 noundef 16000) #16
  %call32 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1549, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.138, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i64 0, i64 0), i32 noundef %call31, i32 noundef 16000) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %if.end35

if.end35:                                         ; preds = %if.end30
  %call36 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1552, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i64 0, i64 0), i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i64 noundef 16000, i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.sbuf, i64 0, i64 0), i64 noundef 16000) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %end, label %if.end39

if.end39:                                         ; preds = %if.end35
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %data = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %31, i64 0, i32 108, i32 7, i64 0, i32 5
  %32 = load i8*, i8** %data, align 8, !tbaa !45
  %off = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %31, i64 0, i32 108, i32 7, i64 0, i32 4
  %33 = load i64, i64* %off, align 8, !tbaa !47
  %arrayidx40 = getelementptr inbounds i8, i8* %32, i64 %33
  %length = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %31, i64 0, i32 108, i32 7, i64 0, i32 2
  %34 = load i64, i64* %length, align 8, !tbaa !48
  %conv41 = trunc i64 %34 to i32
  %call42 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1562, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i32 noundef %conv41, i32 noundef 16000) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %if.end39
  %call46 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1569, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i64 0, i64 0), i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i64 noundef 16000, i8* noundef %arrayidx40, i64 noundef 16000) #16
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %if.end49

if.end49:                                         ; preds = %if.end45
  %call50 = call i8* @memset(i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.sbuf, i64 0, i64 0), i32 noundef 0, i64 noundef 16000) #16
  %35 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call51 = call i32 @SSL_read(%struct.ssl_st* noundef %35, i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.sbuf, i64 0, i64 0), i32 noundef 16000) #16
  %call52 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1573, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.144, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i64 0, i64 0), i32 noundef %call51, i32 noundef 16000) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %end, label %if.end55

if.end55:                                         ; preds = %if.end49
  %call56 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1576, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i64 0, i64 0), i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i64 noundef 16000, i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.sbuf, i64 0, i64 0), i64 noundef 16000) #16
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %end, label %if.end59

if.end59:                                         ; preds = %if.end55
  %call60 = call i8* @memset(i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i32 noundef 0, i64 noundef 16000) #16
  %call61 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1581, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i64 0, i64 0), i8* noundef getelementptr inbounds ([16000 x i8], [16000 x i8]* @execute_cleanse_plaintext.cbuf, i64 0, i64 0), i64 noundef 16000, i8* noundef %arrayidx40, i64 noundef 16000) #16
  %tobool62.not = icmp ne i32 %call61, 0
  %spec.select = zext i1 %tobool62.not to i32
  br label %end

end:                                              ; preds = %if.end59, %if.end55, %if.end49, %if.end45, %if.end39, %if.end35, %if.end30, %for.end, %if.end15, %if.end8, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %if.end55 ], [ 0, %if.end49 ], [ 0, %if.end45 ], [ 0, %if.end39 ], [ 0, %if.end35 ], [ 0, %if.end30 ], [ 0, %for.end ], [ 0, %if.end15 ], [ 0, %if.end8 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end59 ]
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %36) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %37) #16
  %38 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %38) #16
  %39 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local i64 @SSL_set_options(%struct.ssl_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_int_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_write(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_peek(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @test_mem_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i8* @memset(i8* noundef, i32 noundef, i64 noundef) local_unnamed_addr #5

declare dso_local i32 @SSL_read(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_ctrl(%struct.ssl_st* noundef, i32 noundef, i64 noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* noundef, i32 noundef, void ()* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @ocsp_client_cb(%struct.ssl_st* noundef %s, i8* nocapture noundef readonly %arg) #1 {
entry:
  %respderin = alloca i8*, align 8
  %0 = bitcast i8* %arg to i32*
  %1 = bitcast i8** %respderin to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %.off = add i32 %2, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %call = call i64 @SSL_ctrl(%struct.ssl_st* noundef %s, i32 noundef 70, i64 noundef 0, i8* noundef nonnull %1) #16
  %3 = load i8*, i8** %respderin, align 8, !tbaa !3
  %call2 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1667, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @orespder, i64 0, i64 0), i64 noundef %call, i8* noundef %3, i64 noundef %call) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  store i1 true, i1* @ocsp_client_called, align 4
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end, %if.end4
  %retval.0 = phi i32 [ 1, %if.end4 ], [ 0, %entry ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ocsp_server_cb(%struct.ssl_st* noundef %s, i8* nocapture noundef readonly %arg) #1 {
entry:
  %ids = alloca %struct.stack_st_OCSP_RESPID*, align 8
  %0 = bitcast i8* %arg to i32*
  %1 = bitcast %struct.stack_st_OCSP_RESPID** %ids to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.stack_st_OCSP_RESPID* null, %struct.stack_st_OCSP_RESPID** %ids, align 8, !tbaa !3
  %2 = load i32, i32* %0, align 4, !tbaa !7
  switch i32 %2, label %cleanup [
    i32 2, label %if.then
    i32 1, label %if.end16
  ]

if.then:                                          ; preds = %entry
  %call = call i64 @SSL_ctrl(%struct.ssl_st* noundef %s, i32 noundef 68, i64 noundef 0, i8* noundef nonnull %1) #16
  %3 = load %struct.stack_st_OCSP_RESPID*, %struct.stack_st_OCSP_RESPID** %ids, align 8, !tbaa !3
  %cmp1 = icmp eq %struct.stack_st_OCSP_RESPID* %3, null
  br i1 %cmp1, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call fastcc %struct.stack_st* @ossl_check_const_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef nonnull %3) #18
  %call3 = call i32 @OPENSSL_sk_num(%struct.stack_st* noundef %call2) #16
  %cmp4.not = icmp eq i32 %call3, 1
  br i1 %cmp4.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.stack_st_OCSP_RESPID*, %struct.stack_st_OCSP_RESPID** %ids, align 8, !tbaa !3
  %call6 = call fastcc %struct.stack_st* @ossl_check_const_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef %4) #18
  %call7 = call i8* @OPENSSL_sk_value(%struct.stack_st* noundef %call6, i32 noundef 0) #16
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %cleanup, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.end
  %5 = bitcast i8* %call7 to %struct.ocsp_responder_id_st*
  %6 = load %struct.x509_st*, %struct.x509_st** @ocspcert, align 8, !tbaa !3
  %7 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call10 = call i32 @OCSP_RESPID_match_ex(%struct.ocsp_responder_id_st* noundef nonnull %5, %struct.x509_st* noundef %6, %struct.ossl_lib_ctx_st* noundef %7, i8* noundef null) #16
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %entry, %lor.lhs.false9
  %call17 = call i8* @CRYPTO_memdup(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @orespder, i64 0, i64 0), i64 noundef 20, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1645) #16
  %call18 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1645, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.159, i64 0, i64 0), i8* noundef %call17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %cleanup, label %if.end21

if.end21:                                         ; preds = %if.end16
  %call22 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %s, i32 noundef 71, i64 noundef 20, i8* noundef %call17) #16
  %cmp23 = icmp ne i64 %call22, 0
  %conv = zext i1 %cmp23 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1649, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.160, i64 0, i64 0), i32 noundef %conv) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end21
  call void @CRYPTO_free(i8* noundef %call17, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1650) #16
  br label %cleanup

if.end27:                                         ; preds = %if.end21
  store i1 true, i1* @ocsp_server_called, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %entry, %if.end, %lor.lhs.false9, %if.then, %lor.lhs.false, %if.end27, %if.then26
  %retval.0 = phi i32 [ 0, %if.end27 ], [ 2, %if.then26 ], [ 2, %lor.lhs.false ], [ 2, %if.then ], [ 2, %lor.lhs.false9 ], [ 2, %if.end ], [ 2, %entry ], [ 2, %if.end16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  ret i32 %retval.0
}

declare dso_local %struct.ocsp_responder_id_st* @OCSP_RESPID_new() local_unnamed_addr #3

declare dso_local %struct.stack_st* @OPENSSL_sk_new_null() local_unnamed_addr #3

declare dso_local i32 @OCSP_RESPID_set_by_key_ex(%struct.ocsp_responder_id_st* noundef, %struct.x509_st* noundef, %struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @OPENSSL_sk_push(%struct.stack_st* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_OCSP_RESPID* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local void @OPENSSL_sk_pop_free(%struct.stack_st* noundef, void (i8*)* noundef) local_unnamed_addr #3

declare dso_local void @OCSP_RESPID_free(%struct.ocsp_responder_id_st* noundef) #3

declare dso_local i32 @OPENSSL_sk_num(%struct.stack_st* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_const_OCSP_RESPID_sk_type(%struct.stack_st_OCSP_RESPID* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_OCSP_RESPID* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local i8* @OPENSSL_sk_value(%struct.stack_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @OCSP_RESPID_match_ex(%struct.ocsp_responder_id_st* noundef, %struct.x509_st* noundef, %struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i8* @CRYPTO_memdup(i8* noundef, i64 noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @execute_test_session(i32 noundef %maxprot, i32 noundef %use_int_cache, i32 noundef %use_ext_cache, i64 noundef %s_options) unnamed_addr #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl1 = alloca %struct.ssl_st*, align 8
  %clientssl1 = alloca %struct.ssl_st*, align 8
  %serverssl2 = alloca %struct.ssl_st*, align 8
  %clientssl2 = alloca %struct.ssl_st*, align 8
  %serverssl3 = alloca %struct.ssl_st*, align 8
  %clientssl3 = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_st** %serverssl2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  %5 = bitcast %struct.ssl_st** %clientssl2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %6 = bitcast %struct.ssl_st** %serverssl3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl3, align 8, !tbaa !3
  %7 = bitcast %struct.ssl_st** %clientssl3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl3, align 8, !tbaa !3
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %cmp = icmp eq i32 %maxprot, 772
  %spec.select = select i1 %cmp, i32 2, i32 1
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1854, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %cleanup368, label %if.end6

if.end6:                                          ; preds = %entry
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %12 = zext i32 %maxprot to i64
  %call8 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %11, i32 noundef 123, i64 noundef %12, i8* noundef null) #16
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call10 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %13, i32 noundef 124, i64 noundef %12, i8* noundef null) #16
  %tobool11 = icmp ne i32 %use_ext_cache, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end6
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %14, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_session_cb) #16
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* noundef %15, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* noundef nonnull @remove_session_cb) #16
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end6
  %tobool14 = icmp ne i32 %use_int_cache, 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %. = select i1 %tobool14, i64 1, i64 513
  %call17 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %16, i32 noundef 44, i64 noundef %., i8* noundef null) #16
  %tobool19.not = icmp eq i64 %s_options, 0
  br i1 %tobool19.not, label %if.end22, label %if.then20

if.then20:                                        ; preds = %if.end13
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call21 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %17, i64 noundef %s_options) #16
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end13
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call23 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %18, %struct.ssl_ctx_st* noundef %19, %struct.ssl_st** noundef nonnull %serverssl1, %struct.ssl_st** noundef nonnull %clientssl1, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp24 = icmp ne i32 %call23, 0
  %conv25 = zext i1 %cmp24 to i32
  %call26 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1883, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.162, i64 0, i64 0), i32 noundef %conv25) #16
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end22
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  %call28 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %20, %struct.ssl_st* noundef %21, i32 noundef 0) #16
  %cmp29 = icmp ne i32 %call28, 0
  %conv30 = zext i1 %cmp29 to i32
  %call31 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1885, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.163, i64 0, i64 0), i32 noundef %conv30) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %end, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  %call34 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %22) #16
  %23 = bitcast %struct.ssl_session_st* %call34 to i8*
  %call35 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1886, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.164, i64 0, i64 0), i8* noundef %23) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %if.end38

if.end38:                                         ; preds = %lor.lhs.false33
  br i1 %tobool14, label %land.lhs.true, label %if.end46

land.lhs.true:                                    ; preds = %if.end38
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call40 = call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %24, %struct.ssl_session_st* noundef %call34) #16
  %cmp41 = icmp ne i32 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1890, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.165, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end46

if.end46:                                         ; preds = %land.lhs.true, %if.end38
  br i1 %tobool11, label %land.lhs.true48, label %if.end55

land.lhs.true48:                                  ; preds = %if.end46
  %25 = load i32, i32* @new_called, align 4, !tbaa !7
  %call49 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1893, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), i32 noundef %25, i32 noundef %spec.select) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %land.lhs.true48
  %26 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call52 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1895, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %26, i32 noundef 0) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %end, label %if.end55

if.end55:                                         ; preds = %lor.lhs.false51, %if.end46
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call56 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %27, %struct.ssl_ctx_st* noundef %28, %struct.ssl_st** noundef nonnull %serverssl2, %struct.ssl_st** noundef nonnull %clientssl2, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp57 = icmp ne i32 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1900, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.170, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %if.end55
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call62 = call i32 @SSL_set_session(%struct.ssl_st* noundef %29, %struct.ssl_session_st* noundef %call34) #16
  %cmp63 = icmp ne i32 %call62, 0
  %conv64 = zext i1 %cmp63 to i32
  %call65 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1901, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), i32 noundef %conv64) #16
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %end, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call68 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %30, %struct.ssl_st* noundef %31, i32 noundef 0) #16
  %cmp69 = icmp ne i32 %call68, 0
  %conv70 = zext i1 %cmp69 to i32
  %call71 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1903, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.172, i64 0, i64 0), i32 noundef %conv70) #16
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %end, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %lor.lhs.false67
  %32 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call74 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %32) #16
  %cmp75 = icmp ne i32 %call74, 0
  %conv76 = zext i1 %cmp75 to i32
  %call77 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1904, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.173, i64 0, i64 0), i32 noundef %conv76) #16
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %end, label %if.end80

if.end80:                                         ; preds = %lor.lhs.false73
  br i1 %cmp, label %if.then83, label %if.else93

if.then83:                                        ; preds = %if.end80
  br i1 %tobool11, label %land.lhs.true85, label %if.end103

land.lhs.true85:                                  ; preds = %if.then83
  %33 = load i32, i32* @new_called, align 4, !tbaa !7
  %call86 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1914, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %33, i32 noundef 1) #16
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %end, label %lor.lhs.false88

lor.lhs.false88:                                  ; preds = %land.lhs.true85
  %34 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call89 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1915, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %34, i32 noundef 1) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %end, label %if.end103

if.else93:                                        ; preds = %if.end80
  br i1 %tobool11, label %land.lhs.true95, label %if.end103

land.lhs.true95:                                  ; preds = %if.else93
  %35 = load i32, i32* @new_called, align 4, !tbaa !7
  %call96 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1923, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %35, i32 noundef 0) #16
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %end, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %land.lhs.true95
  %36 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call99 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1924, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %36, i32 noundef 0) #16
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %end, label %if.end103

if.end103:                                        ; preds = %if.else93, %lor.lhs.false98, %if.then83, %lor.lhs.false88
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call34) #16
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call104 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %37) #16
  %38 = bitcast %struct.ssl_session_st* %call104 to i8*
  %call105 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1929, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.175, i64 0, i64 0), i8* noundef %38) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %if.end108

if.end108:                                        ; preds = %if.end103
  %39 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  %40 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  call void @shutdown_ssl_connection(%struct.ssl_st* noundef %39, %struct.ssl_st* noundef %40) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %41 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %42 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call109 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %41, %struct.ssl_ctx_st* noundef %42, %struct.ssl_st** noundef nonnull %serverssl2, %struct.ssl_st** noundef nonnull %clientssl2, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp110 = icmp ne i32 %call109, 0
  %conv111 = zext i1 %cmp110 to i32
  %call112 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1936, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.170, i64 0, i64 0), i32 noundef %conv111) #16
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %end, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %if.end108
  %43 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  %44 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call115 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %43, %struct.ssl_st* noundef %44, i32 noundef 0) #16
  %cmp116 = icmp ne i32 %call115, 0
  %conv117 = zext i1 %cmp116 to i32
  %call118 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1938, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.172, i64 0, i64 0), i32 noundef %conv117) #16
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %end, label %if.end121

if.end121:                                        ; preds = %lor.lhs.false114
  %45 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call122 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %45) #16
  %46 = bitcast %struct.ssl_session_st* %call122 to i8*
  %call123 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1941, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.176, i64 0, i64 0), i8* noundef %46) #16
  %tobool124.not = icmp eq i32 %call123, 0
  br i1 %tobool124.not, label %end, label %if.end126

if.end126:                                        ; preds = %if.end121
  br i1 %tobool11, label %land.lhs.true128, label %if.end135

land.lhs.true128:                                 ; preds = %if.end126
  %47 = load i32, i32* @new_called, align 4, !tbaa !7
  %call129 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1945, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), i32 noundef %47, i32 noundef %spec.select) #16
  %tobool130.not = icmp eq i32 %call129, 0
  br i1 %tobool130.not, label %end, label %lor.lhs.false131

lor.lhs.false131:                                 ; preds = %land.lhs.true128
  %48 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call132 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1946, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %48, i32 noundef 0) #16
  %tobool133.not = icmp eq i32 %call132, 0
  br i1 %tobool133.not, label %end, label %if.end135

if.end135:                                        ; preds = %lor.lhs.false131, %if.end126
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %49 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call136 = call i32 @SSL_set_session(%struct.ssl_st* noundef %49, %struct.ssl_session_st* noundef %call104) #16
  %cmp137 = icmp ne i32 %call136, 0
  %conv138 = zext i1 %cmp137 to i32
  %call139 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1954, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), i32 noundef %conv138) #16
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %end, label %if.end142

if.end142:                                        ; preds = %if.end135
  br i1 %tobool11, label %land.lhs.true144, label %if.end151

land.lhs.true144:                                 ; preds = %if.end142
  %50 = load i32, i32* @new_called, align 4, !tbaa !7
  %call145 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1957, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %50, i32 noundef 0) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %end, label %lor.lhs.false147

lor.lhs.false147:                                 ; preds = %land.lhs.true144
  %51 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call148 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1957, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %51, i32 noundef 1) #16
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %end, label %if.end151

if.end151:                                        ; preds = %lor.lhs.false147, %if.end142
  %52 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call152 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %52) #16
  %53 = bitcast %struct.ssl_session_st* %call152 to i8*
  %call153 = call i32 @test_ptr_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1959, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.177, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.178, i64 0, i64 0), i8* noundef %53, i8* noundef %38) #16
  %tobool154.not = icmp eq i32 %call153, 0
  br i1 %tobool154.not, label %end, label %if.end156

if.end156:                                        ; preds = %if.end151
  br i1 %tobool14, label %if.then158, label %if.end172

if.then158:                                       ; preds = %if.end156
  %54 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call159 = call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %54, %struct.ssl_session_st* noundef %call122) #16
  %cmp160 = icmp ne i32 %call159, 0
  %conv161 = zext i1 %cmp160 to i32
  %call162 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1964, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.179, i64 0, i64 0), i32 noundef %conv161) #16
  %tobool163.not = icmp eq i32 %call162, 0
  br i1 %tobool163.not, label %end, label %lor.lhs.false164

lor.lhs.false164:                                 ; preds = %if.then158
  %55 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call165 = call i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st* noundef %55, %struct.ssl_session_st* noundef %call122) #16
  %cmp166 = icmp ne i32 %call165, 0
  %conv167 = zext i1 %cmp166 to i32
  %call168 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1965, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.180, i64 0, i64 0), i32 noundef %conv167) #16
  %tobool169.not = icmp eq i32 %call168, 0
  br i1 %tobool169.not, label %end, label %if.end172

if.end172:                                        ; preds = %lor.lhs.false164, %if.end156
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %56 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call173 = call i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st* noundef %56, %struct.ssl_session_st* noundef %call122) #16
  %cmp174 = icmp ne i32 %call173, 0
  %conv175 = zext i1 %cmp174 to i32
  %call176 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1971, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.180, i64 0, i64 0), i32 noundef %conv175) #16
  %tobool177.not = icmp eq i32 %call176, 0
  br i1 %tobool177.not, label %end, label %if.end179

if.end179:                                        ; preds = %if.end172
  br i1 %tobool11, label %land.lhs.true181, label %if.end188

land.lhs.true181:                                 ; preds = %if.end179
  %57 = load i32, i32* @new_called, align 4, !tbaa !7
  %call182 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1975, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %57, i32 noundef 0) #16
  %tobool183.not = icmp eq i32 %call182, 0
  br i1 %tobool183.not, label %end, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %land.lhs.true181
  %58 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call185 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1975, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %58, i32 noundef 1) #16
  %tobool186.not = icmp eq i32 %call185, 0
  br i1 %tobool186.not, label %end, label %if.end188

if.end188:                                        ; preds = %lor.lhs.false184, %if.end179
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %59 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call189 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %59, i32 noundef 124, i64 noundef 770, i8* noundef null) #16
  %60 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %61 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call190 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %60, %struct.ssl_ctx_st* noundef %61, %struct.ssl_st** noundef nonnull %serverssl3, %struct.ssl_st** noundef nonnull %clientssl3, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp191 = icmp ne i32 %call190, 0
  %conv192 = zext i1 %cmp191 to i32
  %call193 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1983, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.181, i64 0, i64 0), i32 noundef %conv192) #16
  %tobool194.not = icmp eq i32 %call193, 0
  br i1 %tobool194.not, label %end, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %if.end188
  %62 = load %struct.ssl_st*, %struct.ssl_st** %clientssl3, align 8, !tbaa !3
  %call196 = call i32 @SSL_set_session(%struct.ssl_st* noundef %62, %struct.ssl_session_st* noundef %call104) #16
  %cmp197 = icmp ne i32 %call196, 0
  %conv198 = zext i1 %cmp197 to i32
  %call199 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1984, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.182, i64 0, i64 0), i32 noundef %conv198) #16
  %tobool200.not = icmp eq i32 %call199, 0
  br i1 %tobool200.not, label %end, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %lor.lhs.false195
  %63 = load %struct.ssl_st*, %struct.ssl_st** %serverssl3, align 8, !tbaa !3
  %64 = load %struct.ssl_st*, %struct.ssl_st** %clientssl3, align 8, !tbaa !3
  %call202 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %63, %struct.ssl_st* noundef %64, i32 noundef 0) #16
  %cmp203 = icmp ne i32 %call202, 0
  %conv204 = zext i1 %cmp203 to i32
  %call205 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1987, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.183, i64 0, i64 0), i32 noundef %conv204) #16
  %tobool206.not = icmp eq i32 %call205, 0
  br i1 %tobool206.not, label %end, label %if.end208

if.end208:                                        ; preds = %lor.lhs.false201
  br i1 %tobool11, label %land.lhs.true210, label %if.end217

land.lhs.true210:                                 ; preds = %if.end208
  %65 = load i32, i32* @new_called, align 4, !tbaa !7
  %call211 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1992, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %65, i32 noundef 0) #16
  %tobool212.not = icmp eq i32 %call211, 0
  br i1 %tobool212.not, label %end, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %land.lhs.true210
  %66 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call214 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1992, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %66, i32 noundef 1) #16
  %tobool215.not = icmp eq i32 %call214, 0
  br i1 %tobool215.not, label %end, label %if.end217

if.end217:                                        ; preds = %lor.lhs.false213, %if.end208
  br i1 %tobool14, label %land.lhs.true219, label %if.end226

land.lhs.true219:                                 ; preds = %if.end217
  %67 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call220 = call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %67, %struct.ssl_session_st* noundef %call122) #16
  %cmp221 = icmp ne i32 %call220, 0
  %conv222 = zext i1 %cmp221 to i32
  %call223 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 1996, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.179, i64 0, i64 0), i32 noundef %conv222) #16
  %tobool224.not = icmp eq i32 %call223, 0
  br i1 %tobool224.not, label %end, label %if.end226

if.end226:                                        ; preds = %land.lhs.true219, %if.end217
  br i1 %tobool11, label %if.then228, label %if.end229

if.then228:                                       ; preds = %if.end226
  %68 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %68, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef null) #16
  %69 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* noundef %69, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* noundef null) #16
  %70 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %70, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_session_cb) #16
  %71 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* noundef %71, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* noundef nonnull @remove_session_cb) #16
  %72 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st* noundef %72, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* noundef nonnull @get_session_cb) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @get_sess_val, align 8, !tbaa !3
  br label %if.end229

if.end229:                                        ; preds = %if.then228, %if.end226
  %73 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call230 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %73, i32 noundef 44, i64 noundef 0, i8* noundef null) #16
  br i1 %tobool14, label %if.end234, label %if.then232

if.then232:                                       ; preds = %if.end229
  %74 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call233 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %74, i32 noundef 44, i64 noundef 514, i8* noundef null) #16
  br label %if.end234

if.end234:                                        ; preds = %if.then232, %if.end229
  %75 = load %struct.ssl_st*, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %75) #16
  %76 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %76) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  %77 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %77) #16
  %78 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %78) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call104) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call122) #16
  %79 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call236 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %79, i32 noundef 124, i64 noundef %12, i8* noundef null) #16
  %cmp237 = icmp eq i32 %maxprot, 771
  br i1 %cmp237, label %if.then239, label %if.end241

if.then239:                                       ; preds = %if.end234
  %80 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call240 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %80, i64 noundef 16384) #16
  br label %if.end241

if.end241:                                        ; preds = %if.then239, %if.end234
  store i32 0, i32* @get_called, align 4, !tbaa !7
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %81 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %82 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call242 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %81, %struct.ssl_ctx_st* noundef %82, %struct.ssl_st** noundef nonnull %serverssl1, %struct.ssl_st** noundef nonnull %clientssl1, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp243 = icmp ne i32 %call242, 0
  %conv244 = zext i1 %cmp243 to i32
  %call245 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2033, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.162, i64 0, i64 0), i32 noundef %conv244) #16
  %tobool246.not = icmp eq i32 %call245, 0
  br i1 %tobool246.not, label %end, label %lor.lhs.false247

lor.lhs.false247:                                 ; preds = %if.end241
  %83 = load %struct.ssl_st*, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  %84 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  %call248 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %83, %struct.ssl_st* noundef %84, i32 noundef 0) #16
  %cmp249 = icmp ne i32 %call248, 0
  %conv250 = zext i1 %cmp249 to i32
  %call251 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2035, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.163, i64 0, i64 0), i32 noundef %conv250) #16
  %tobool252.not = icmp eq i32 %call251, 0
  br i1 %tobool252.not, label %end, label %lor.lhs.false253

lor.lhs.false253:                                 ; preds = %lor.lhs.false247
  %85 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  %call254 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %85) #16
  %86 = bitcast %struct.ssl_session_st* %call254 to i8*
  %call255 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2036, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.164, i64 0, i64 0), i8* noundef %86) #16
  %tobool256.not = icmp eq i32 %call255, 0
  br i1 %tobool256.not, label %end, label %lor.lhs.false257

lor.lhs.false257:                                 ; preds = %lor.lhs.false253
  %87 = load %struct.ssl_st*, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  %call258 = call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %87) #16
  %88 = bitcast %struct.ssl_session_st* %call258 to i8*
  %call259 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2037, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.184, i64 0, i64 0), i8* noundef %88) #16
  %tobool260.not = icmp eq i32 %call259, 0
  br i1 %tobool260.not, label %end, label %if.end262

if.end262:                                        ; preds = %lor.lhs.false257
  br i1 %tobool14, label %if.then264, label %if.end286

if.then264:                                       ; preds = %if.end262
  %cmp265 = icmp ne i32 %maxprot, 772
  %or.cond = or i1 %cmp265, %tobool11
  %89 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  br i1 %or.cond, label %if.else277, label %if.then269

if.then269:                                       ; preds = %if.then264
  %call270 = call i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st* noundef %89, %struct.ssl_session_st* noundef %call258) #16
  %cmp271 = icmp ne i32 %call270, 0
  %conv272 = zext i1 %cmp271 to i32
  %call273 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2048, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.185, i64 0, i64 0), i32 noundef %conv272) #16
  %tobool274.not = icmp eq i32 %call273, 0
  br i1 %tobool274.not, label %end, label %if.end286

if.else277:                                       ; preds = %if.then264
  %call278 = call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef %89, %struct.ssl_session_st* noundef %call258) #16
  %cmp279 = icmp ne i32 %call278, 0
  %conv280 = zext i1 %cmp279 to i32
  %call281 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2052, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.186, i64 0, i64 0), i32 noundef %conv280) #16
  %tobool282.not = icmp eq i32 %call281, 0
  br i1 %tobool282.not, label %end, label %if.end286

if.end286:                                        ; preds = %if.then269, %if.else277, %if.end262
  br i1 %tobool11, label %if.then288, label %if.end316

if.then288:                                       ; preds = %if.end286
  %90 = load i32, i32* @new_called, align 4, !tbaa !7
  %call289 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2060, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), i32 noundef %90, i32 noundef %spec.select) #16
  %tobool290.not = icmp eq i32 %call289, 0
  br i1 %tobool290.not, label %end, label %lor.lhs.false291

lor.lhs.false291:                                 ; preds = %if.then288
  %91 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call292 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2061, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %91, i32 noundef 0) #16
  %tobool293.not = icmp eq i32 %call292, 0
  br i1 %tobool293.not, label %end, label %lor.lhs.false294

lor.lhs.false294:                                 ; preds = %lor.lhs.false291
  %92 = load i32, i32* @get_called, align 4, !tbaa !7
  %call295 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2062, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %92, i32 noundef 0) #16
  %tobool296.not = icmp eq i32 %call295, 0
  br i1 %tobool296.not, label %end, label %if.end298

if.end298:                                        ; preds = %lor.lhs.false294
  %cmp301 = icmp ne i32 %maxprot, 772
  %or.cond380 = and i1 %cmp301, %tobool14
  br i1 %or.cond380, label %if.then303, label %if.end316

if.then303:                                       ; preds = %if.end298
  %call304 = call %struct.ssl_session_st* @SSL_SESSION_dup(%struct.ssl_session_st* noundef %call258) #16
  %93 = bitcast %struct.ssl_session_st* %call304 to i8*
  %call305 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2070, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i64 0, i64 0), i8* noundef %93) #16
  %tobool306.not = icmp eq i32 %call305, 0
  br i1 %tobool306.not, label %end, label %lor.lhs.false307

lor.lhs.false307:                                 ; preds = %if.then303
  %94 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call308 = call i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st* noundef %94, %struct.ssl_session_st* noundef %call258) #16
  %cmp309 = icmp ne i32 %call308, 0
  %conv310 = zext i1 %cmp309 to i32
  %call311 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2071, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.185, i64 0, i64 0), i32 noundef %conv310) #16
  %tobool312.not = icmp eq i32 %call311, 0
  br i1 %tobool312.not, label %end, label %if.end314

if.end314:                                        ; preds = %lor.lhs.false307
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call258) #16
  br label %if.end316

if.end316:                                        ; preds = %if.end314, %if.end298, %if.end286
  %sess2.1 = phi %struct.ssl_session_st* [ %call258, %if.end286 ], [ %call304, %if.end314 ], [ %call258, %if.end298 ]
  store i32 0, i32* @get_called, align 4, !tbaa !7
  store i32 0, i32* @remove_called, align 4, !tbaa !7
  store i32 0, i32* @new_called, align 4, !tbaa !7
  store %struct.ssl_session_st* %sess2.1, %struct.ssl_session_st** @get_sess_val, align 8, !tbaa !3
  %95 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %96 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call317 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %95, %struct.ssl_ctx_st* noundef %96, %struct.ssl_st** noundef nonnull %serverssl2, %struct.ssl_st** noundef nonnull %clientssl2, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp318 = icmp ne i32 %call317, 0
  %conv319 = zext i1 %cmp318 to i32
  %call320 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2081, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.170, i64 0, i64 0), i32 noundef %conv319) #16
  %tobool321.not = icmp eq i32 %call320, 0
  br i1 %tobool321.not, label %end, label %lor.lhs.false322

lor.lhs.false322:                                 ; preds = %if.end316
  %97 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call323 = call i32 @SSL_set_session(%struct.ssl_st* noundef %97, %struct.ssl_session_st* noundef %call254) #16
  %cmp324 = icmp ne i32 %call323, 0
  %conv325 = zext i1 %cmp324 to i32
  %call326 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2082, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), i32 noundef %conv325) #16
  %tobool327.not = icmp eq i32 %call326, 0
  br i1 %tobool327.not, label %end, label %lor.lhs.false328

lor.lhs.false328:                                 ; preds = %lor.lhs.false322
  %98 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  %99 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call329 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %98, %struct.ssl_st* noundef %99, i32 noundef 0) #16
  %cmp330 = icmp ne i32 %call329, 0
  %conv331 = zext i1 %cmp330 to i32
  %call332 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2084, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.172, i64 0, i64 0), i32 noundef %conv331) #16
  %tobool333.not = icmp eq i32 %call332, 0
  br i1 %tobool333.not, label %end, label %lor.lhs.false334

lor.lhs.false334:                                 ; preds = %lor.lhs.false328
  %100 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  %call335 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %100) #16
  %cmp336 = icmp ne i32 %call335, 0
  %conv337 = zext i1 %cmp336 to i32
  %call338 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2085, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.173, i64 0, i64 0), i32 noundef %conv337) #16
  %tobool339.not = icmp eq i32 %call338, 0
  br i1 %tobool339.not, label %end, label %if.end341

if.end341:                                        ; preds = %lor.lhs.false334
  br i1 %tobool11, label %if.then343, label %if.end367

if.then343:                                       ; preds = %if.end341
  %101 = load i32, i32* @remove_called, align 4, !tbaa !7
  %call344 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2089, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %101, i32 noundef 0) #16
  %tobool345.not = icmp eq i32 %call344, 0
  br i1 %tobool345.not, label %end, label %if.end347

if.end347:                                        ; preds = %if.then343
  %102 = load i32, i32* @new_called, align 4, !tbaa !7
  br i1 %cmp, label %if.then350, label %if.else358

if.then350:                                       ; preds = %if.end347
  %call351 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2093, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %102, i32 noundef 1) #16
  %tobool352.not = icmp eq i32 %call351, 0
  br i1 %tobool352.not, label %end, label %lor.lhs.false353

lor.lhs.false353:                                 ; preds = %if.then350
  %103 = load i32, i32* @get_called, align 4, !tbaa !7
  %call354 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2094, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %103, i32 noundef 0) #16
  %tobool355.not = icmp eq i32 %call354, 0
  br i1 %tobool355.not, label %end, label %if.end367

if.else358:                                       ; preds = %if.end347
  %call359 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2097, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %102, i32 noundef 0) #16
  %tobool360.not = icmp eq i32 %call359, 0
  br i1 %tobool360.not, label %end, label %lor.lhs.false361

lor.lhs.false361:                                 ; preds = %if.else358
  %104 = load i32, i32* @get_called, align 4, !tbaa !7
  %call362 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2098, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %104, i32 noundef 1) #16
  %tobool363.not = icmp eq i32 %call362, 0
  br i1 %tobool363.not, label %end, label %if.end367

if.end367:                                        ; preds = %lor.lhs.false353, %lor.lhs.false361, %if.end341
  br label %end

end:                                              ; preds = %if.then303, %lor.lhs.false307, %if.then288, %lor.lhs.false291, %lor.lhs.false294, %if.else358, %lor.lhs.false361, %if.then350, %lor.lhs.false353, %if.then343, %if.end316, %lor.lhs.false322, %lor.lhs.false328, %lor.lhs.false334, %if.else277, %if.then269, %if.end241, %lor.lhs.false247, %lor.lhs.false253, %lor.lhs.false257, %land.lhs.true219, %land.lhs.true210, %lor.lhs.false213, %if.end188, %lor.lhs.false195, %lor.lhs.false201, %land.lhs.true181, %lor.lhs.false184, %if.end172, %if.then158, %lor.lhs.false164, %if.end151, %land.lhs.true144, %lor.lhs.false147, %if.end135, %land.lhs.true128, %lor.lhs.false131, %if.end121, %if.end108, %lor.lhs.false114, %if.end103, %land.lhs.true95, %lor.lhs.false98, %land.lhs.true85, %lor.lhs.false88, %if.end55, %lor.lhs.false61, %lor.lhs.false67, %lor.lhs.false73, %land.lhs.true48, %lor.lhs.false51, %land.lhs.true, %if.end22, %lor.lhs.false, %lor.lhs.false33, %if.end367
  %sess1.0 = phi %struct.ssl_session_st* [ %call254, %if.end367 ], [ %call254, %lor.lhs.false353 ], [ %call254, %if.then350 ], [ %call254, %lor.lhs.false361 ], [ %call254, %if.else358 ], [ %call254, %if.then343 ], [ %call254, %lor.lhs.false334 ], [ %call254, %lor.lhs.false328 ], [ %call254, %lor.lhs.false322 ], [ %call254, %if.end316 ], [ %call254, %if.else277 ], [ %call254, %if.then269 ], [ %call254, %lor.lhs.false257 ], [ %call254, %lor.lhs.false253 ], [ null, %lor.lhs.false247 ], [ null, %if.end241 ], [ %call104, %land.lhs.true219 ], [ %call104, %lor.lhs.false213 ], [ %call104, %land.lhs.true210 ], [ %call104, %lor.lhs.false201 ], [ %call104, %lor.lhs.false195 ], [ %call104, %if.end188 ], [ %call104, %lor.lhs.false184 ], [ %call104, %land.lhs.true181 ], [ %call104, %if.end172 ], [ %call104, %lor.lhs.false164 ], [ %call104, %if.then158 ], [ %call104, %if.end151 ], [ %call104, %lor.lhs.false147 ], [ %call104, %land.lhs.true144 ], [ %call104, %if.end135 ], [ %call104, %lor.lhs.false131 ], [ %call104, %land.lhs.true128 ], [ %call104, %if.end121 ], [ %call104, %lor.lhs.false114 ], [ %call104, %if.end108 ], [ %call104, %if.end103 ], [ %call34, %lor.lhs.false88 ], [ %call34, %land.lhs.true85 ], [ %call34, %lor.lhs.false98 ], [ %call34, %land.lhs.true95 ], [ %call34, %lor.lhs.false73 ], [ %call34, %lor.lhs.false67 ], [ %call34, %lor.lhs.false61 ], [ %call34, %if.end55 ], [ %call34, %lor.lhs.false51 ], [ %call34, %land.lhs.true48 ], [ %call34, %land.lhs.true ], [ %call34, %lor.lhs.false33 ], [ null, %lor.lhs.false ], [ null, %if.end22 ], [ %call254, %lor.lhs.false294 ], [ %call254, %lor.lhs.false291 ], [ %call254, %if.then288 ], [ %call254, %lor.lhs.false307 ], [ %call254, %if.then303 ]
  %sess2.2 = phi %struct.ssl_session_st* [ %sess2.1, %if.end367 ], [ %sess2.1, %lor.lhs.false353 ], [ %sess2.1, %if.then350 ], [ %sess2.1, %lor.lhs.false361 ], [ %sess2.1, %if.else358 ], [ %sess2.1, %if.then343 ], [ %sess2.1, %lor.lhs.false334 ], [ %sess2.1, %lor.lhs.false328 ], [ %sess2.1, %lor.lhs.false322 ], [ %sess2.1, %if.end316 ], [ %call258, %if.else277 ], [ %call258, %if.then269 ], [ %call258, %lor.lhs.false257 ], [ null, %lor.lhs.false253 ], [ null, %lor.lhs.false247 ], [ null, %if.end241 ], [ %call122, %land.lhs.true219 ], [ %call122, %lor.lhs.false213 ], [ %call122, %land.lhs.true210 ], [ %call122, %lor.lhs.false201 ], [ %call122, %lor.lhs.false195 ], [ %call122, %if.end188 ], [ %call122, %lor.lhs.false184 ], [ %call122, %land.lhs.true181 ], [ %call122, %if.end172 ], [ %call122, %lor.lhs.false164 ], [ %call122, %if.then158 ], [ %call122, %if.end151 ], [ %call122, %lor.lhs.false147 ], [ %call122, %land.lhs.true144 ], [ %call122, %if.end135 ], [ %call122, %lor.lhs.false131 ], [ %call122, %land.lhs.true128 ], [ %call122, %if.end121 ], [ null, %lor.lhs.false114 ], [ null, %if.end108 ], [ null, %if.end103 ], [ null, %lor.lhs.false88 ], [ null, %land.lhs.true85 ], [ null, %lor.lhs.false98 ], [ null, %land.lhs.true95 ], [ null, %lor.lhs.false73 ], [ null, %lor.lhs.false67 ], [ null, %lor.lhs.false61 ], [ null, %if.end55 ], [ null, %lor.lhs.false51 ], [ null, %land.lhs.true48 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false33 ], [ null, %lor.lhs.false ], [ null, %if.end22 ], [ %call258, %lor.lhs.false294 ], [ %call258, %lor.lhs.false291 ], [ %call258, %if.then288 ], [ %call258, %lor.lhs.false307 ], [ %call258, %if.then303 ]
  %testresult.0 = phi i32 [ 1, %if.end367 ], [ 0, %lor.lhs.false353 ], [ 0, %if.then350 ], [ 0, %lor.lhs.false361 ], [ 0, %if.else358 ], [ 0, %if.then343 ], [ 0, %lor.lhs.false334 ], [ 0, %lor.lhs.false328 ], [ 0, %lor.lhs.false322 ], [ 0, %if.end316 ], [ 0, %if.else277 ], [ 0, %if.then269 ], [ 0, %lor.lhs.false257 ], [ 0, %lor.lhs.false253 ], [ 0, %lor.lhs.false247 ], [ 0, %if.end241 ], [ 0, %land.lhs.true219 ], [ 0, %lor.lhs.false213 ], [ 0, %land.lhs.true210 ], [ 0, %lor.lhs.false201 ], [ 0, %lor.lhs.false195 ], [ 0, %if.end188 ], [ 0, %lor.lhs.false184 ], [ 0, %land.lhs.true181 ], [ 0, %if.end172 ], [ 0, %lor.lhs.false164 ], [ 0, %if.then158 ], [ 0, %if.end151 ], [ 0, %lor.lhs.false147 ], [ 0, %land.lhs.true144 ], [ 0, %if.end135 ], [ 0, %lor.lhs.false131 ], [ 0, %land.lhs.true128 ], [ 0, %if.end121 ], [ 0, %lor.lhs.false114 ], [ 0, %if.end108 ], [ 0, %if.end103 ], [ 0, %lor.lhs.false88 ], [ 0, %land.lhs.true85 ], [ 0, %lor.lhs.false98 ], [ 0, %land.lhs.true95 ], [ 0, %lor.lhs.false73 ], [ 0, %lor.lhs.false67 ], [ 0, %lor.lhs.false61 ], [ 0, %if.end55 ], [ 0, %lor.lhs.false51 ], [ 0, %land.lhs.true48 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false33 ], [ 0, %lor.lhs.false ], [ 0, %if.end22 ], [ 0, %lor.lhs.false294 ], [ 0, %lor.lhs.false291 ], [ 0, %if.then288 ], [ 0, %lor.lhs.false307 ], [ 0, %if.then303 ]
  %105 = load %struct.ssl_st*, %struct.ssl_st** %serverssl1, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %105) #16
  %106 = load %struct.ssl_st*, %struct.ssl_st** %clientssl1, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %106) #16
  %107 = load %struct.ssl_st*, %struct.ssl_st** %serverssl2, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %107) #16
  %108 = load %struct.ssl_st*, %struct.ssl_st** %clientssl2, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %108) #16
  %109 = load %struct.ssl_st*, %struct.ssl_st** %serverssl3, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %109) #16
  %110 = load %struct.ssl_st*, %struct.ssl_st** %clientssl3, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %110) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess1.0) #16
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess2.2) #16
  %111 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %111) #16
  %112 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %112) #16
  br label %cleanup368

cleanup368:                                       ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @new_session_cb(%struct.ssl_st* nocapture noundef readnone %ssl, %struct.ssl_session_st* noundef %sess) #1 {
entry:
  %0 = load i32, i32* @new_called, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @new_called, align 4, !tbaa !7
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess) #16
  ret i32 1
}

declare dso_local void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* noundef, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal void @remove_session_cb(%struct.ssl_ctx_st* nocapture noundef readnone %ctx, %struct.ssl_session_st* nocapture noundef readnone %sess) #7 {
entry:
  %0 = load i32, i32* @remove_called, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @remove_called, align 4, !tbaa !7
  ret void
}

declare dso_local i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* noundef, %struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_set_session(%struct.ssl_st* noundef, %struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_session_reused(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_SESSION_free(%struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local void @shutdown_ssl_connection(%struct.ssl_st* noundef, %struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_ptr_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st* noundef, %struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st* noundef, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal %struct.ssl_session_st* @get_session_cb(%struct.ssl_st* nocapture noundef readnone %ssl, i8* nocapture noundef readnone %id, i32 noundef %len, i32* nocapture noundef writeonly %copy) #7 {
entry:
  %0 = load i32, i32* @get_called, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @get_called, align 4, !tbaa !7
  store i32 1, i32* %copy, align 4, !tbaa !7
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** @get_sess_val, align 8, !tbaa !3
  ret %struct.ssl_session_st* %1
}

declare dso_local %struct.ssl_session_st* @SSL_SESSION_dup(%struct.ssl_session_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @test_tickets(i32 noundef %stateful, i32 noundef %idx) unnamed_addr #1 {
entry:
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store i32 0, i32* @new_called, align 4, !tbaa !7
  store i1 true, i1* @do_cache, align 4
  %call = call fastcc i32 @setup_ticket_test(i32 noundef %stateful, i32 noundef %idx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %4 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call1 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %4, %struct.ssl_ctx_st* noundef %5, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp = icmp ne i32 %call1, 0
  %conv = zext i1 %cmp to i32
  %call2 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2311, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv) #16
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %end, label %if.end5

if.end5:                                          ; preds = %if.end
  %6 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %7 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call6 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %6, %struct.ssl_st* noundef %7, i32 noundef 0) #16
  %cmp7 = icmp ne i32 %call6, 0
  %conv8 = zext i1 %cmp7 to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2315, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end5
  %8 = load i32, i32* @new_called, align 4, !tbaa !7
  %call11 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2317, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %idx, i32 noundef %8) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end14

if.end14:                                         ; preds = %lor.lhs.false
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call15 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %9) #16
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call16 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %10) #16
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %11) #16
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %12) #16
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %13) #16
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %14) #16
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  store i1 false, i1* @do_cache, align 4
  %call17 = call fastcc i32 @setup_ticket_test(i32 noundef %stateful, i32 noundef %idx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx) #18
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %if.end20

if.end20:                                         ; preds = %if.end14
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call21 = call fastcc i32 @check_resumption(i32 noundef %idx, %struct.ssl_ctx_st* noundef %15, %struct.ssl_ctx_st* noundef %16, i32 noundef 0) #18
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end24

if.end24:                                         ; preds = %if.end20
  store i32 0, i32* @new_called, align 4, !tbaa !7
  store i1 true, i1* @do_cache, align 4
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %17) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %18) #16
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call25 = call fastcc i32 @setup_ticket_test(i32 noundef %stateful, i32 noundef %idx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx) #18
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %if.end28

if.end28:                                         ; preds = %if.end24
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call29 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %19, %struct.ssl_ctx_st* noundef %20, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp30 = icmp ne i32 %call29, 0
  %conv31 = zext i1 %cmp30 to i32
  %call32 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2355, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv31) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %if.end35

if.end35:                                         ; preds = %if.end28
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_post_handshake_auth(%struct.ssl_st* noundef %21, i32 noundef 1) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call36 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %cmp37 = icmp ne i32 %call36, 0
  %conv38 = zext i1 %cmp37 to i32
  %call39 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv38) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %if.end35
  %24 = load i32, i32* @new_called, align 4, !tbaa !7
  %call42 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2363, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %idx, i32 noundef %24) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false41
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call46 = call fastcc i32 @post_handshake_verify(%struct.ssl_st* noundef %25, %struct.ssl_st* noundef %26) #18
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %end, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %if.end45
  %mul = shl nsw i32 %idx, 1
  %27 = load i32, i32* @new_called, align 4, !tbaa !7
  %call49 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2368, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.190, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i32 noundef %mul, i32 noundef %27) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %if.end52

if.end52:                                         ; preds = %lor.lhs.false48
  %28 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call53 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %28) #16
  %29 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call54 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %29) #16
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %30) #16
  %31 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %31) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  store i1 false, i1* @do_cache, align 4
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call55 = call fastcc i32 @check_resumption(i32 noundef %idx, %struct.ssl_ctx_st* noundef %32, %struct.ssl_ctx_st* noundef %33, i32 noundef 1) #18
  %tobool56.not = icmp ne i32 %call55, 0
  %spec.select = zext i1 %tobool56.not to i32
  br label %end

end:                                              ; preds = %if.end52, %if.end45, %lor.lhs.false48, %if.end35, %lor.lhs.false41, %if.end28, %if.end24, %if.end20, %if.end14, %if.end5, %lor.lhs.false, %if.end, %entry
  %testresult.0 = phi i32 [ 0, %lor.lhs.false48 ], [ 0, %if.end45 ], [ 0, %lor.lhs.false41 ], [ 0, %if.end35 ], [ 0, %if.end28 ], [ 0, %if.end24 ], [ 0, %if.end20 ], [ 0, %if.end14 ], [ 0, %lor.lhs.false ], [ 0, %if.end5 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select, %if.end52 ]
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  %35 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %35) #16
  %36 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 0), align 16, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %36) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 0), align 16, !tbaa !3
  %37 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 1), align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %37) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 1), align 8, !tbaa !3
  %38 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 2), align 16, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %38) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 2), align 16, !tbaa !3
  %39 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 3), align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %39) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 3), align 8, !tbaa !3
  %40 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 4), align 16, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %40) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 4), align 16, !tbaa !3
  %41 = load %struct.ssl_session_st*, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 5), align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %41) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** getelementptr inbounds ([6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 5), align 8, !tbaa !3
  %42 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %42) #16
  %43 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %43) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @setup_ticket_test(i32 noundef %stateful, i32 noundef %idx, %struct.ssl_ctx_st** noundef %sctx, %struct.ssl_ctx_st** noundef %cctx) unnamed_addr #1 {
entry:
  %sess_id_ctx = alloca i32, align 4
  %0 = bitcast i32* %sess_id_ctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  store i32 1, i32* %sess_id_ctx, align 4, !tbaa !7
  %1 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %2 = load i8*, i8** @cert, align 8, !tbaa !3
  %3 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = tail call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %1, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef %sctx, %struct.ssl_ctx_st** noundef %cctx, i8* noundef %2, i8* noundef %3) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2221, i8* noundef getelementptr inbounds ([114 x i8], [114 x i8]* @.str.191, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %conv4 = sext i32 %idx to i64
  %call5 = tail call i32 @SSL_CTX_set_num_tickets(%struct.ssl_ctx_st* noundef %4, i64 noundef %conv4) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2222, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.192, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %cleanup, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call11 = call i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* noundef %5, i8* noundef nonnull %0, i32 noundef 4) #16
  %cmp12 = icmp ne i32 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  %call14 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2225, i8* noundef getelementptr inbounds ([81 x i8], [81 x i8]* @.str.193, i64 0, i64 0), i32 noundef %conv13) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false10
  %tobool16.not = icmp eq i32 %stateful, 0
  br i1 %tobool16.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %if.end
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call18 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %6, i64 noundef 16384) #16
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call20 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %7, i32 noundef 44, i64 noundef 513, i8* noundef null) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* noundef %8, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* noundef nonnull @new_cachesession_cb) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %lor.lhs.false10, %if.end19
  %retval.0 = phi i32 [ 1, %if.end19 ], [ 0, %lor.lhs.false10 ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local i32 @SSL_shutdown(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @check_resumption(i32 noundef %idx, %struct.ssl_ctx_st* noundef %sctx, %struct.ssl_ctx_st* noundef %cctx, i32 noundef %succ) unnamed_addr #1 {
entry:
  %serverssl = alloca %struct.ssl_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %cmp61 = icmp sgt i32 %idx, 0
  br i1 %cmp61, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %mul = shl nuw i32 %idx, 1
  %tobool15.not = icmp eq i32 %succ, 0
  %smax = call i32 @llvm.smax.i32(i32 %mul, i32 1)
  %wide.trip.count = zext i32 %smax to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end45
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end45 ]
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %call = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %sctx, %struct.ssl_ctx_st* noundef %cctx, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp1 = icmp ne i32 %call, 0
  %conv = zext i1 %cmp1 to i32
  %call2 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2247, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %2 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds [6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 %indvars.iv
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** %arrayidx, align 8, !tbaa !3
  %call3 = call i32 @SSL_set_session(%struct.ssl_st* noundef %2, %struct.ssl_session_st* noundef %3) #16
  %cmp4 = icmp ne i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  %call6 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2248, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.194, i64 0, i64 0), i32 noundef %conv5) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_set_post_handshake_auth(%struct.ssl_st* noundef %4, i32 noundef 1) #16
  %5 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %6 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call8 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %5, %struct.ssl_st* noundef %6, i32 noundef 0) #16
  %cmp9 = icmp ne i32 %call8, 0
  %conv10 = zext i1 %cmp9 to i32
  %call11 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2254, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv10) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %end, label %if.end14

if.end14:                                         ; preds = %if.end
  %7 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call27 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %7) #16
  %cmp28 = icmp ne i32 %call27, 0
  %conv29 = zext i1 %cmp28 to i32
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end14
  %call20 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2262, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv29) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %end, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %if.then16
  %8 = load i32, i32* @new_called, align 4, !tbaa !7
  %call23 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2263, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %8, i32 noundef 1) #16
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %end, label %land.lhs.true

if.else:                                          ; preds = %if.end14
  %call30 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2266, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv29) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %end, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.else
  %9 = load i32, i32* @new_called, align 4, !tbaa !7
  %call33 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2267, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i64 0, i64 0), i32 noundef %9, i32 noundef %idx) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end37.thread

if.end37.thread:                                  ; preds = %lor.lhs.false32
  store i32 0, i32* @new_called, align 4, !tbaa !7
  br label %if.end45

land.lhs.true:                                    ; preds = %lor.lhs.false22
  store i32 0, i32* @new_called, align 4, !tbaa !7
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call39 = call fastcc i32 @post_handshake_verify(%struct.ssl_st* noundef %10, %struct.ssl_st* noundef %11) #18
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %land.lhs.true
  %12 = load i32, i32* @new_called, align 4, !tbaa !7
  %call42 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2275, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %12, i32 noundef 1) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %end, label %if.end45

if.end45:                                         ; preds = %if.end37.thread, %lor.lhs.false41
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call46 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %13) #16
  %14 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call47 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %14) #16
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %15) #16
  %16 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** %arrayidx, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %17) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %arrayidx, align 8, !tbaa !3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !49

end:                                              ; preds = %land.lhs.true, %lor.lhs.false41, %if.else, %lor.lhs.false32, %if.then16, %lor.lhs.false22, %if.end, %for.body, %lor.lhs.false
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %18) #16
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %19) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %entry, %end
  %retval.0 = phi i32 [ 0, %end ], [ 1, %entry ], [ 1, %if.end45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local void @SSL_set_post_handshake_auth(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @post_handshake_verify(%struct.ssl_st* noundef %sssl, %struct.ssl_st* noundef %cssl) unnamed_addr #1 {
entry:
  tail call void @SSL_set_verify(%struct.ssl_st* noundef %sssl, i32 noundef 1, i32 (i32, %struct.x509_store_ctx_st*)* noundef null) #16
  %call = tail call i32 @SSL_verify_client_post_handshake(%struct.ssl_st* noundef %sssl) #16
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2200, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.196, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @SSL_do_handshake(%struct.ssl_st* noundef %sssl) #16
  %call3 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2204, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.197, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i32 noundef %call2, i32 noundef 1) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call5 = tail call i32 @SSL_read(%struct.ssl_st* noundef %cssl, i8* noundef null, i32 noundef 0) #16
  %call6 = tail call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2205, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.198, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call5, i32 noundef 0) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %return, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %call9 = tail call i32 @SSL_read(%struct.ssl_st* noundef %sssl, i8* noundef null, i32 noundef 0) #16
  %call10 = tail call i32 @test_int_le(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2206, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.199, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call9, i32 noundef 0) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %return, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %call13 = tail call i32 @create_ssl_connection(%struct.ssl_st* noundef %sssl, %struct.ssl_st* noundef %cssl, i32 noundef 0) #16
  %cmp14 = icmp ne i32 %call13, 0
  %conv15 = zext i1 %cmp14 to i32
  %call16 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2208, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.200, i64 0, i64 0), i32 noundef %conv15) #16
  %tobool17.not = icmp ne i32 %call16, 0
  %spec.select = zext i1 %tobool17.not to i32
  br label %return

return:                                           ; preds = %lor.lhs.false12, %if.end, %lor.lhs.false, %lor.lhs.false8, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %lor.lhs.false8 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ %spec.select, %lor.lhs.false12 ]
  ret i32 %retval.0
}

declare dso_local i32 @SSL_CTX_set_num_tickets(%struct.ssl_ctx_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @new_cachesession_cb(%struct.ssl_st* nocapture noundef readnone %ssl, %struct.ssl_session_st* noundef %sess) #1 {
entry:
  %.b = load i1, i1* @do_cache, align 4
  br i1 %.b, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @new_called, align 4, !tbaa !7
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [6 x %struct.ssl_session_st*], [6 x %struct.ssl_session_st*]* @sesscache, i64 0, i64 %idxprom
  store %struct.ssl_session_st* %sess, %struct.ssl_session_st** %arrayidx, align 8, !tbaa !3
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %sess) #16
  %.pre = load i32, i32* @new_called, align 4, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = phi i32 [ %.pre, %if.else ], [ %0, %if.then ]
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @new_called, align 4, !tbaa !7
  ret i32 1
}

declare dso_local void @SSL_set_verify(%struct.ssl_st* noundef, i32 noundef, i32 (i32, %struct.x509_store_ctx_st*)* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_verify_client_post_handshake(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_do_handshake(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_int_le(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @use_session_cb(%struct.ssl_st* nocapture noundef readnone %ssl, %struct.evp_md_st* noundef readnone %md, i8** nocapture noundef writeonly %id, i64* nocapture noundef writeonly %idlen, %struct.ssl_session_st** nocapture noundef writeonly %sess) #1 {
entry:
  %0 = load i32, i32* @use_session_cb_cnt, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @use_session_cb_cnt, align 4, !tbaa !7
  switch i32 %0, label %return [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry
  %cmp.not = icmp eq %struct.evp_md_st* %md, null
  br i1 %cmp.not, label %sw.epilog, label %return

sw.bb1:                                           ; preds = %entry
  %cmp2 = icmp eq %struct.evp_md_st* %md, null
  br i1 %cmp2, label %return, label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %cmp5.not = icmp eq %struct.ssl_session_st* %1, null
  br i1 %cmp5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %sw.epilog
  %call = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef nonnull %1) #16
  %.pre = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %sw.epilog
  %2 = phi %struct.ssl_session_st* [ %.pre, %if.then6 ], [ null, %sw.epilog ]
  store %struct.ssl_session_st* %2, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i8** %id, align 8, !tbaa !3
  %call8 = tail call i64 @strlen(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0)) #17
  store i64 %call8, i64* %idlen, align 8, !tbaa !10
  br label %return

return:                                           ; preds = %entry, %sw.bb1, %sw.bb, %if.end7
  %retval.0 = phi i32 [ 1, %if.end7 ], [ 0, %sw.bb ], [ 0, %sw.bb1 ], [ 0, %entry ]
  ret i32 %retval.0
}

declare dso_local void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_session_cb(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef readonly %identity, i64 noundef %identity_len, %struct.ssl_session_st** nocapture noundef writeonly %sess) #1 {
entry:
  %0 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %cmp1 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %cmp1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** @srvid, align 8, !tbaa !3
  %call = tail call i64 @strlen(i8* noundef %2) #17
  %cmp4.not = icmp eq i64 %call, %identity_len
  br i1 %cmp4.not, label %lor.lhs.false, label %return.sink.split

lor.lhs.false:                                    ; preds = %if.end3
  %call5 = tail call i32 @strncmp(i8* noundef %2, i8* noundef %identity, i64 noundef %identity_len) #17
  %cmp6.not = icmp eq i32 %call5, 0
  br i1 %cmp6.not, label %if.end8, label %return.sink.split

if.end8:                                          ; preds = %lor.lhs.false
  %call9 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef nonnull %1) #16
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  br label %return.sink.split

return.sink.split:                                ; preds = %if.end3, %lor.lhs.false, %if.end8
  %.sink = phi %struct.ssl_session_st* [ %3, %if.end8 ], [ null, %lor.lhs.false ], [ null, %if.end3 ]
  store %struct.ssl_session_st* %.sink, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %return.sink.split, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end ], [ 1, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc %struct.ssl_session_st* @create_a_psk(%struct.ssl_st* noundef %ssl) unnamed_addr #1 {
entry:
  %key = alloca [48 x i8], align 16
  %0 = getelementptr inbounds [48 x i8], [48 x i8]* %key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %0, i8* noundef nonnull align 16 dereferenceable(48) getelementptr inbounds ([48 x i8], [48 x i8]* @__const.test_tls13_psk.key, i64 0, i64 0), i64 48, i1 false)
  %call = tail call %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* noundef %ssl, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i64 0, i64 0)) #16
  %call1 = tail call %struct.ssl_session_st* @SSL_SESSION_new() #16
  %1 = bitcast %struct.ssl_session_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3148, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = bitcast %struct.ssl_cipher_st* %call to i8*
  %call3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3149, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i64 0, i64 0), i8* noundef %2) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call6 = call i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st* noundef %call1, i8* noundef nonnull %0, i64 noundef 48) #16
  %cmp = icmp ne i32 %call6, 0
  %conv = zext i1 %cmp to i32
  %call7 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3151, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.210, i64 0, i64 0), i32 noundef %conv) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %call10 = call i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* noundef %call1, %struct.ssl_cipher_st* noundef %call) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3152, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.211, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false9
  %call16 = call i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* noundef %call1, i32 noundef 772) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3155, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.212, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then, label %cleanup

if.then:                                          ; preds = %lor.lhs.false15, %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %call1) #16
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false15, %if.then
  %retval.0 = phi %struct.ssl_session_st* [ null, %if.then ], [ %call1, %lor.lhs.false15 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #19
  ret %struct.ssl_session_st* %retval.0
}

declare dso_local i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @strncmp(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

declare dso_local %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_session_st* @SSL_SESSION_new() local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* noundef, %struct.ssl_cipher_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef) local_unnamed_addr #3

declare dso_local %struct.bio_method_st* @bio_s_always_retry() local_unnamed_addr #3

declare dso_local i32 @SSL_new_session_ticket(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_write_ex(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local i32 @test_size_t_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_read_ex(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @BIO_up_ref(%struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_set0_wbio(%struct.ssl_st* noundef, %struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_get_error(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.bio_method_st* @BIO_s_mem() local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc void @setupbio(%struct.bio_st** nocapture noundef writeonly %res, %struct.bio_st* noundef %bio1, %struct.bio_st* noundef %bio2, i32 noundef %type) unnamed_addr #9 {
entry:
  switch i32 %type, label %sw.epilog [
    i32 0, label %sw.epilog.sink.split
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog.sink.split

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %entry, %sw.bb1, %sw.bb2
  %bio2.sink = phi %struct.bio_st* [ %bio2, %sw.bb2 ], [ %bio1, %sw.bb1 ], [ null, %entry ]
  store %struct.bio_st* %bio2.sink, %struct.bio_st** %res, align 8, !tbaa !3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry
  ret void
}

declare dso_local void @SSL_set_bio(%struct.ssl_st* noundef, %struct.bio_st* noundef, %struct.bio_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @execute_test_ssl_bio(i32 noundef %pop_ssl, i32 noundef %change_bio) unnamed_addr #1 {
entry:
  %0 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_method() #16
  %call1 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %0, i8* noundef null, %struct.ssl_method_st* noundef %call) #16
  %1 = bitcast %struct.ssl_ctx_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2811, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.236, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* noundef %call1) #16
  %2 = bitcast %struct.ssl_st* %call3 to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2812, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.237, i64 0, i64 0), i8* noundef %2) #16
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %end, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call7 = tail call %struct.bio_method_st* @BIO_f_ssl() #16
  %call8 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call7) #16
  %3 = bitcast %struct.bio_st* %call8 to i8*
  %call9 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2813, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.238, i64 0, i64 0), i8* noundef %3) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %call12 = tail call %struct.bio_method_st* @BIO_s_mem() #16
  %call13 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call12) #16
  %4 = bitcast %struct.bio_st* %call13 to i8*
  %call14 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2814, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.239, i64 0, i64 0), i8* noundef %4) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false11
  %call16 = tail call i64 @BIO_ctrl(%struct.bio_st* noundef %call8, i32 noundef 109, i64 noundef 1, i8* noundef %2) #16
  %call17 = tail call %struct.bio_st* @BIO_push(%struct.bio_st* noundef %call8, %struct.bio_st* noundef %call13) #16
  %cmp.not = icmp eq i32 %change_bio, 0
  br i1 %cmp.not, label %if.end28, label %if.then18

if.then18:                                        ; preds = %if.end
  %call19 = tail call %struct.bio_method_st* @BIO_s_mem() #16
  %call20 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call19) #16
  %5 = bitcast %struct.bio_st* %call20 to i8*
  %call21 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 2826, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.240, i64 0, i64 0), i8* noundef %5) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %end, label %if.end24

if.end24:                                         ; preds = %if.then18
  %cmp25 = icmp eq i32 %change_bio, 1
  br i1 %cmp25, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end24
  tail call void @SSL_set0_rbio(%struct.ssl_st* noundef %call3, %struct.bio_st* noundef %call20) #16
  br label %if.end28

if.else:                                          ; preds = %if.end24
  tail call void @SSL_set0_wbio(%struct.ssl_st* noundef %call3, %struct.bio_st* noundef %call20) #16
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.else, %if.end
  %tobool29.not = icmp eq i32 %pop_ssl, 0
  %call13.call8 = select i1 %tobool29.not, %struct.bio_st* %call13, %struct.bio_st* %call8
  %call31 = tail call %struct.bio_st* @BIO_pop(%struct.bio_st* noundef %call13.call8) #16
  br label %end

end:                                              ; preds = %if.end28, %if.then18, %entry, %lor.lhs.false, %lor.lhs.false6, %lor.lhs.false11
  %membio1.0 = phi %struct.bio_st* [ %call13, %lor.lhs.false11 ], [ null, %lor.lhs.false6 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call13, %if.then18 ], [ %call13, %if.end28 ]
  %sslbio.0 = phi %struct.bio_st* [ %call8, %lor.lhs.false11 ], [ %call8, %lor.lhs.false6 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call8, %if.then18 ], [ %call8, %if.end28 ]
  %ssl.0 = phi %struct.ssl_st* [ %call3, %lor.lhs.false11 ], [ %call3, %lor.lhs.false6 ], [ %call3, %lor.lhs.false ], [ null, %entry ], [ null, %if.then18 ], [ null, %if.end28 ]
  %testresult.0 = phi i32 [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false6 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.then18 ], [ 1, %if.end28 ]
  %call35 = tail call i32 @BIO_free(%struct.bio_st* noundef %membio1.0) #16
  %call36 = tail call i32 @BIO_free(%struct.bio_st* noundef %sslbio.0) #16
  tail call void @SSL_free(%struct.ssl_st* noundef %ssl.0) #16
  tail call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %call1) #16
  ret i32 %testresult.0
}

declare dso_local %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef, i8* noundef, %struct.ssl_method_st* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_method_st* @TLS_method() local_unnamed_addr #3

declare dso_local %struct.bio_method_st* @BIO_f_ssl() local_unnamed_addr #3

declare dso_local i64 @BIO_ctrl(%struct.bio_st* noundef, i32 noundef, i64 noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.bio_st* @BIO_push(%struct.bio_st* noundef, %struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_set0_rbio(%struct.ssl_st* noundef, %struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local %struct.bio_st* @BIO_pop(%struct.bio_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_size_t_le(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local void @test_info(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* noundef, void (%struct.ssl_st*, i8*)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @client_keylog_callback(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef %line) #1 {
entry:
  %call = tail call i64 @strlen(i8* noundef %line) #17
  %0 = load i64, i64* @client_log_buffer_index, align 8, !tbaa !10
  %sext = shl i64 %call, 32
  %conv1 = ashr exact i64 %sext, 32
  %add = add i64 %conv1, %0
  %cmp = icmp ugt i64 %add, 2048
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 167, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.264, i64 0, i64 0)) #16
  store i1 true, i1* @error_writing_log, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i8* @strcat(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 0), i8* noundef %line) #16
  %1 = load i64, i64* @client_log_buffer_index, align 8, !tbaa !10
  %add5 = add i64 %1, %conv1
  %inc = add i64 %add5, 1
  store i64 %inc, i64* @client_log_buffer_index, align 8, !tbaa !10
  %arrayidx = getelementptr inbounds [2049 x i8], [2049 x i8]* @client_log_buffer, i64 0, i64 %add5
  store i8 10, i8* %arrayidx, align 1, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @server_keylog_callback(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef %line) #1 {
entry:
  %call = tail call i64 @strlen(i8* noundef %line) #17
  %0 = load i64, i64* @server_log_buffer_index, align 8, !tbaa !10
  %sext = shl i64 %call, 32
  %conv1 = ashr exact i64 %sext, 32
  %add = add i64 %conv1, %0
  %cmp = icmp ugt i64 %add, 2048
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 183, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.265, i64 0, i64 0)) #16
  store i1 true, i1* @error_writing_log, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i8* @strcat(i8* noundef getelementptr inbounds ([2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 0), i8* noundef %line) #16
  %1 = load i64, i64* @server_log_buffer_index, align 8, !tbaa !10
  %add5 = add i64 %1, %conv1
  %inc = add i64 %add5, 1
  store i64 %inc, i64* @server_log_buffer_index, align 8, !tbaa !10
  %arrayidx = getelementptr inbounds [2049 x i8], [2049 x i8]* @server_log_buffer, i64 0, i64 %add5
  store i8 10, i8* %arrayidx, align 1, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  ret void
}

declare dso_local i32 @test_int_gt(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @test_keylog_output(i8* noundef %buffer, %struct.ssl_st* noundef %ssl, %struct.ssl_session_st* noundef %session, %struct.sslapitest_log_counts* nocapture noundef readonly %expected) unnamed_addr #1 {
entry:
  %actual_client_random = alloca [32 x i8], align 16
  %actual_master_key = alloca [48 x i8], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %actual_client_random, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  %1 = getelementptr inbounds [48 x i8], [48 x i8]* %actual_master_key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %1, i8 0, i64 48, i1 false)
  %call = tail call i8* @strtok(i8* noundef %buffer, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %cmp.not320 = icmp eq i8* %call, null
  br i1 %cmp.not320, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %exporter_secret_count.0332 = phi i32 [ %exporter_secret_count.2, %for.inc ], [ 0, %entry ]
  %early_exporter_secret_count.0331 = phi i32 [ %early_exporter_secret_count.2, %for.inc ], [ 0, %entry ]
  %server_application_secret_count.0330 = phi i32 [ %server_application_secret_count.2, %for.inc ], [ 0, %entry ]
  %client_application_secret_count.0329 = phi i32 [ %client_application_secret_count.2, %for.inc ], [ 0, %entry ]
  %server_handshake_secret_count.0328 = phi i32 [ %server_handshake_secret_count.2, %for.inc ], [ 0, %entry ]
  %client_handshake_secret_count.0327 = phi i32 [ %client_handshake_secret_count.2, %for.inc ], [ 0, %entry ]
  %client_early_secret_count.0326 = phi i32 [ %client_early_secret_count.2, %for.inc ], [ 0, %entry ]
  %master_secret_count.0325 = phi i32 [ %master_secret_count.1, %for.inc ], [ 0, %entry ]
  %rsa_key_exchange_count.0324 = phi i32 [ %rsa_key_exchange_count.1, %for.inc ], [ 0, %entry ]
  %master_key_size.0323 = phi i64 [ %master_key_size.1, %for.inc ], [ 48, %entry ]
  %token.0321 = phi i8* [ %call171, %for.inc ], [ %call, %entry ]
  %call1 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i64 0, i64 0)) #17
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %call3 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call4 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 241, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call3) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %call6 = call i64 @strlen(i8* noundef %call3) #17
  %call7 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 243, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.269, i64 0, i64 0), i64 noundef %call6, i64 noundef 16) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %cleanup, label %if.end10

if.end10:                                         ; preds = %if.end
  %call11 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call12 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 245, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.end10
  %inc = add i32 %rsa_key_exchange_count.0324, 1
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call16 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.270, i64 0, i64 0)) #17
  %cmp17 = icmp eq i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.else62

if.then18:                                        ; preds = %if.else
  %call19 = call i64 @SSL_get_client_random(%struct.ssl_st* noundef %ssl, i8* noundef nonnull %0, i64 noundef 32) #16
  %call20 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 261, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.272, i64 0, i64 0), i64 noundef %call19, i64 noundef 32) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %cleanup, label %if.end23

if.end23:                                         ; preds = %if.then18
  %call24 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call25 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 264, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %cleanup, label %if.end28

if.end28:                                         ; preds = %if.end23
  %call29 = call i64 @strlen(i8* noundef %call24) #17
  %call30 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 266, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.273, i64 0, i64 0), i64 noundef %call29, i64 noundef 64) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %cleanup, label %if.end33

if.end33:                                         ; preds = %if.end28
  %call35 = call fastcc i32 @compare_hex_encoded_buffer(i8* noundef %call24, i64 noundef 64, i8* noundef nonnull %0, i64 noundef %call19) #18
  %cmp36 = icmp ne i32 %call35, 0
  %conv = zext i1 %cmp36 to i32
  %call37 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 270, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.274, i64 0, i64 0), i32 noundef %conv) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %cleanup, label %if.end40

if.end40:                                         ; preds = %if.end33
  %call41 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call42 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 273, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %cleanup, label %if.end45

if.end45:                                         ; preds = %if.end40
  %call47 = call i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef %session, i8* noundef nonnull %1, i64 noundef %master_key_size.0323) #16
  %call48 = call i32 @test_size_t_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 278, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.275, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %call47, i64 noundef 0) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %cleanup, label %if.end51

if.end51:                                         ; preds = %if.end45
  %call52 = call i64 @strlen(i8* noundef %call41) #17
  %call54 = call fastcc i32 @compare_hex_encoded_buffer(i8* noundef %call41, i64 noundef %call52, i8* noundef nonnull %1, i64 noundef %call47) #18
  %cmp55 = icmp ne i32 %call54, 0
  %conv56 = zext i1 %cmp55 to i32
  %call57 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 282, i8* noundef getelementptr inbounds ([85 x i8], [85 x i8]* @.str.276, i64 0, i64 0), i32 noundef %conv56) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %cleanup, label %if.end60

if.end60:                                         ; preds = %if.end51
  %inc61 = add i32 %master_secret_count.0325, 1
  br label %for.inc

if.else62:                                        ; preds = %if.else
  %call63 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.277, i64 0, i64 0)) #17
  %cmp64 = icmp eq i32 %call63, 0
  br i1 %cmp64, label %if.then93, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else62
  %call66 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.278, i64 0, i64 0)) #17
  %cmp67 = icmp eq i32 %call66, 0
  br i1 %cmp67, label %if.then99, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %lor.lhs.false
  %call70 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.279, i64 0, i64 0)) #17
  %cmp71 = icmp eq i32 %call70, 0
  br i1 %cmp71, label %if.else101, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %lor.lhs.false69
  %call74 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.280, i64 0, i64 0)) #17
  %cmp75 = icmp eq i32 %call74, 0
  br i1 %cmp75, label %if.else101, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %lor.lhs.false73
  %call78 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.281, i64 0, i64 0)) #17
  %cmp79 = icmp eq i32 %call78, 0
  br i1 %cmp79, label %if.else101, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %lor.lhs.false77
  %call82 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.282, i64 0, i64 0)) #17
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.else101, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %lor.lhs.false81
  %call86 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.283, i64 0, i64 0)) #17
  %cmp87 = icmp eq i32 %call86, 0
  br i1 %cmp87, label %if.else101, label %if.else167

if.then93:                                        ; preds = %if.else62
  %inc94 = add i32 %client_early_secret_count.0326, 1
  br label %if.end137

if.then99:                                        ; preds = %lor.lhs.false
  %inc100 = add i32 %client_handshake_secret_count.0327, 1
  br label %if.end137

if.else101:                                       ; preds = %lor.lhs.false85, %lor.lhs.false81, %lor.lhs.false77, %lor.lhs.false73, %lor.lhs.false69
  %call102 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.279, i64 0, i64 0)) #17
  %cmp103 = icmp eq i32 %call102, 0
  br i1 %cmp103, label %if.then105, label %if.else107

if.then105:                                       ; preds = %if.else101
  %inc106 = add i32 %server_handshake_secret_count.0328, 1
  br label %if.end137

if.else107:                                       ; preds = %if.else101
  %call108 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.280, i64 0, i64 0)) #17
  %cmp109 = icmp eq i32 %call108, 0
  br i1 %cmp109, label %if.then111, label %if.else113

if.then111:                                       ; preds = %if.else107
  %inc112 = add i32 %client_application_secret_count.0329, 1
  br label %if.end137

if.else113:                                       ; preds = %if.else107
  %call114 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.281, i64 0, i64 0)) #17
  %cmp115 = icmp eq i32 %call114, 0
  br i1 %cmp115, label %if.then117, label %if.else119

if.then117:                                       ; preds = %if.else113
  %inc118 = add i32 %server_application_secret_count.0330, 1
  br label %if.end137

if.else119:                                       ; preds = %if.else113
  %call120 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.282, i64 0, i64 0)) #17
  %cmp121 = icmp eq i32 %call120, 0
  br i1 %cmp121, label %if.then123, label %if.else125

if.then123:                                       ; preds = %if.else119
  %inc124 = add i32 %early_exporter_secret_count.0331, 1
  br label %if.end137

if.else125:                                       ; preds = %if.else119
  %call126 = call i32 @strcmp(i8* noundef nonnull %token.0321, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.283, i64 0, i64 0)) #17
  %cmp127 = icmp eq i32 %call126, 0
  %inc130 = zext i1 %cmp127 to i32
  %spec.select = add i32 %exporter_secret_count.0332, %inc130
  br label %if.end137

if.end137:                                        ; preds = %if.else125, %if.then99, %if.then111, %if.then123, %if.then117, %if.then105, %if.then93
  %client_early_secret_count.1 = phi i32 [ %inc94, %if.then93 ], [ %client_early_secret_count.0326, %if.then99 ], [ %client_early_secret_count.0326, %if.then105 ], [ %client_early_secret_count.0326, %if.then111 ], [ %client_early_secret_count.0326, %if.then117 ], [ %client_early_secret_count.0326, %if.then123 ], [ %client_early_secret_count.0326, %if.else125 ]
  %client_handshake_secret_count.1 = phi i32 [ %client_handshake_secret_count.0327, %if.then93 ], [ %inc100, %if.then99 ], [ %client_handshake_secret_count.0327, %if.then105 ], [ %client_handshake_secret_count.0327, %if.then111 ], [ %client_handshake_secret_count.0327, %if.then117 ], [ %client_handshake_secret_count.0327, %if.then123 ], [ %client_handshake_secret_count.0327, %if.else125 ]
  %server_handshake_secret_count.1 = phi i32 [ %server_handshake_secret_count.0328, %if.then93 ], [ %server_handshake_secret_count.0328, %if.then99 ], [ %inc106, %if.then105 ], [ %server_handshake_secret_count.0328, %if.then111 ], [ %server_handshake_secret_count.0328, %if.then117 ], [ %server_handshake_secret_count.0328, %if.then123 ], [ %server_handshake_secret_count.0328, %if.else125 ]
  %client_application_secret_count.1 = phi i32 [ %client_application_secret_count.0329, %if.then93 ], [ %client_application_secret_count.0329, %if.then99 ], [ %client_application_secret_count.0329, %if.then105 ], [ %inc112, %if.then111 ], [ %client_application_secret_count.0329, %if.then117 ], [ %client_application_secret_count.0329, %if.then123 ], [ %client_application_secret_count.0329, %if.else125 ]
  %server_application_secret_count.1 = phi i32 [ %server_application_secret_count.0330, %if.then93 ], [ %server_application_secret_count.0330, %if.then99 ], [ %server_application_secret_count.0330, %if.then105 ], [ %server_application_secret_count.0330, %if.then111 ], [ %inc118, %if.then117 ], [ %server_application_secret_count.0330, %if.then123 ], [ %server_application_secret_count.0330, %if.else125 ]
  %early_exporter_secret_count.1 = phi i32 [ %early_exporter_secret_count.0331, %if.then93 ], [ %early_exporter_secret_count.0331, %if.then99 ], [ %early_exporter_secret_count.0331, %if.then105 ], [ %early_exporter_secret_count.0331, %if.then111 ], [ %early_exporter_secret_count.0331, %if.then117 ], [ %inc124, %if.then123 ], [ %early_exporter_secret_count.0331, %if.else125 ]
  %exporter_secret_count.1 = phi i32 [ %exporter_secret_count.0332, %if.then93 ], [ %exporter_secret_count.0332, %if.then99 ], [ %exporter_secret_count.0332, %if.then105 ], [ %exporter_secret_count.0332, %if.then111 ], [ %exporter_secret_count.0332, %if.then117 ], [ %exporter_secret_count.0332, %if.then123 ], [ %spec.select, %if.else125 ]
  %call139 = call i64 @SSL_get_client_random(%struct.ssl_st* noundef %ssl, i8* noundef nonnull %0, i64 noundef 32) #16
  %call140 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 316, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.271, i64 0, i64 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.272, i64 0, i64 0), i64 noundef %call139, i64 noundef 32) #16
  %tobool141.not = icmp eq i32 %call140, 0
  br i1 %tobool141.not, label %cleanup, label %if.end143

if.end143:                                        ; preds = %if.end137
  %call144 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call145 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 319, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call144) #16
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %cleanup, label %if.end148

if.end148:                                        ; preds = %if.end143
  %call149 = call i64 @strlen(i8* noundef %call144) #17
  %call150 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 321, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.273, i64 0, i64 0), i64 noundef %call149, i64 noundef 64) #16
  %tobool151.not = icmp eq i32 %call150, 0
  br i1 %tobool151.not, label %cleanup, label %if.end153

if.end153:                                        ; preds = %if.end148
  %call155 = call fastcc i32 @compare_hex_encoded_buffer(i8* noundef %call144, i64 noundef 64, i8* noundef nonnull %0, i64 noundef %call139) #18
  %cmp156 = icmp ne i32 %call155, 0
  %conv157 = zext i1 %cmp156 to i32
  %call158 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 325, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.274, i64 0, i64 0), i32 noundef %conv157) #16
  %tobool159.not = icmp eq i32 %call158, 0
  br i1 %tobool159.not, label %cleanup, label %if.end161

if.end161:                                        ; preds = %if.end153
  %call162 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %call163 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 328, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.267, i64 0, i64 0), i8* noundef %call162) #16
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %cleanup, label %for.inc

if.else167:                                       ; preds = %lor.lhs.false85
  call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 331, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.284, i64 0, i64 0), i8* noundef nonnull %token.0321) #16
  br label %cleanup

for.inc:                                          ; preds = %if.end15, %if.end161, %if.end60
  %master_key_size.1 = phi i64 [ %master_key_size.0323, %if.end15 ], [ %call47, %if.end60 ], [ %master_key_size.0323, %if.end161 ]
  %rsa_key_exchange_count.1 = phi i32 [ %inc, %if.end15 ], [ %rsa_key_exchange_count.0324, %if.end60 ], [ %rsa_key_exchange_count.0324, %if.end161 ]
  %master_secret_count.1 = phi i32 [ %master_secret_count.0325, %if.end15 ], [ %inc61, %if.end60 ], [ %master_secret_count.0325, %if.end161 ]
  %client_early_secret_count.2 = phi i32 [ %client_early_secret_count.0326, %if.end15 ], [ %client_early_secret_count.0326, %if.end60 ], [ %client_early_secret_count.1, %if.end161 ]
  %client_handshake_secret_count.2 = phi i32 [ %client_handshake_secret_count.0327, %if.end15 ], [ %client_handshake_secret_count.0327, %if.end60 ], [ %client_handshake_secret_count.1, %if.end161 ]
  %server_handshake_secret_count.2 = phi i32 [ %server_handshake_secret_count.0328, %if.end15 ], [ %server_handshake_secret_count.0328, %if.end60 ], [ %server_handshake_secret_count.1, %if.end161 ]
  %client_application_secret_count.2 = phi i32 [ %client_application_secret_count.0329, %if.end15 ], [ %client_application_secret_count.0329, %if.end60 ], [ %client_application_secret_count.1, %if.end161 ]
  %server_application_secret_count.2 = phi i32 [ %server_application_secret_count.0330, %if.end15 ], [ %server_application_secret_count.0330, %if.end60 ], [ %server_application_secret_count.1, %if.end161 ]
  %early_exporter_secret_count.2 = phi i32 [ %early_exporter_secret_count.0331, %if.end15 ], [ %early_exporter_secret_count.0331, %if.end60 ], [ %early_exporter_secret_count.1, %if.end161 ]
  %exporter_secret_count.2 = phi i32 [ %exporter_secret_count.0332, %if.end15 ], [ %exporter_secret_count.0332, %if.end60 ], [ %exporter_secret_count.1, %if.end161 ]
  %call171 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i64 0, i64 0)) #16
  %cmp.not = icmp eq i8* %call171, null
  br i1 %cmp.not, label %for.end, label %for.body, !llvm.loop !50

for.end:                                          ; preds = %for.inc, %entry
  %rsa_key_exchange_count.0.lcssa = phi i32 [ 0, %entry ], [ %rsa_key_exchange_count.1, %for.inc ]
  %master_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %master_secret_count.1, %for.inc ]
  %client_early_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %client_early_secret_count.2, %for.inc ]
  %client_handshake_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %client_handshake_secret_count.2, %for.inc ]
  %server_handshake_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %server_handshake_secret_count.2, %for.inc ]
  %client_application_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %client_application_secret_count.2, %for.inc ]
  %server_application_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %server_application_secret_count.2, %for.inc ]
  %early_exporter_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %early_exporter_secret_count.2, %for.inc ]
  %exporter_secret_count.0.lcssa = phi i32 [ 0, %entry ], [ %exporter_secret_count.2, %for.inc ]
  %conv172 = zext i32 %rsa_key_exchange_count.0.lcssa to i64
  %rsa_key_exchange_count173 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 0
  %2 = load i32, i32* %rsa_key_exchange_count173, align 4, !tbaa !17
  %conv174 = zext i32 %2 to i64
  %call175 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 338, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.285, i64 0, i64 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.286, i64 0, i64 0), i64 noundef %conv172, i64 noundef %conv174) #16
  %tobool176.not = icmp eq i32 %call175, 0
  br i1 %tobool176.not, label %cleanup, label %lor.lhs.false177

lor.lhs.false177:                                 ; preds = %for.end
  %conv178 = zext i32 %master_secret_count.0.lcssa to i64
  %master_secret_count179 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 1
  %3 = load i32, i32* %master_secret_count179, align 4, !tbaa !19
  %conv180 = zext i32 %3 to i64
  %call181 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 340, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.287, i64 0, i64 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.288, i64 0, i64 0), i64 noundef %conv178, i64 noundef %conv180) #16
  %tobool182.not = icmp eq i32 %call181, 0
  br i1 %tobool182.not, label %cleanup, label %lor.lhs.false183

lor.lhs.false183:                                 ; preds = %lor.lhs.false177
  %conv184 = zext i32 %client_early_secret_count.0.lcssa to i64
  %client_early_secret_count185 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 2
  %4 = load i32, i32* %client_early_secret_count185, align 4, !tbaa !21
  %conv186 = zext i32 %4 to i64
  %call187 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 342, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.289, i64 0, i64 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.290, i64 0, i64 0), i64 noundef %conv184, i64 noundef %conv186) #16
  %tobool188.not = icmp eq i32 %call187, 0
  br i1 %tobool188.not, label %cleanup, label %lor.lhs.false189

lor.lhs.false189:                                 ; preds = %lor.lhs.false183
  %conv190 = zext i32 %client_handshake_secret_count.0.lcssa to i64
  %client_handshake_secret_count191 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 3
  %5 = load i32, i32* %client_handshake_secret_count191, align 4, !tbaa !51
  %conv192 = zext i32 %5 to i64
  %call193 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 344, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.291, i64 0, i64 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.292, i64 0, i64 0), i64 noundef %conv190, i64 noundef %conv192) #16
  %tobool194.not = icmp eq i32 %call193, 0
  br i1 %tobool194.not, label %cleanup, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %lor.lhs.false189
  %conv196 = zext i32 %server_handshake_secret_count.0.lcssa to i64
  %server_handshake_secret_count197 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 4
  %6 = load i32, i32* %server_handshake_secret_count197, align 4, !tbaa !52
  %conv198 = zext i32 %6 to i64
  %call199 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 346, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.293, i64 0, i64 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.294, i64 0, i64 0), i64 noundef %conv196, i64 noundef %conv198) #16
  %tobool200.not = icmp eq i32 %call199, 0
  br i1 %tobool200.not, label %cleanup, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %lor.lhs.false195
  %conv202 = zext i32 %client_application_secret_count.0.lcssa to i64
  %client_application_secret_count203 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 5
  %7 = load i32, i32* %client_application_secret_count203, align 4, !tbaa !53
  %conv204 = zext i32 %7 to i64
  %call205 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 348, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.295, i64 0, i64 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.296, i64 0, i64 0), i64 noundef %conv202, i64 noundef %conv204) #16
  %tobool206.not = icmp eq i32 %call205, 0
  br i1 %tobool206.not, label %cleanup, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %lor.lhs.false201
  %conv208 = zext i32 %server_application_secret_count.0.lcssa to i64
  %server_application_secret_count209 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 6
  %8 = load i32, i32* %server_application_secret_count209, align 4, !tbaa !54
  %conv210 = zext i32 %8 to i64
  %call211 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 350, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.297, i64 0, i64 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.298, i64 0, i64 0), i64 noundef %conv208, i64 noundef %conv210) #16
  %tobool212.not = icmp eq i32 %call211, 0
  br i1 %tobool212.not, label %cleanup, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %lor.lhs.false207
  %conv214 = zext i32 %early_exporter_secret_count.0.lcssa to i64
  %early_exporter_secret_count215 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 7
  %9 = load i32, i32* %early_exporter_secret_count215, align 4, !tbaa !22
  %conv216 = zext i32 %9 to i64
  %call217 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 352, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.299, i64 0, i64 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.300, i64 0, i64 0), i64 noundef %conv214, i64 noundef %conv216) #16
  %tobool218.not = icmp eq i32 %call217, 0
  br i1 %tobool218.not, label %cleanup, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %lor.lhs.false213
  %conv220 = zext i32 %exporter_secret_count.0.lcssa to i64
  %exporter_secret_count221 = getelementptr inbounds %struct.sslapitest_log_counts, %struct.sslapitest_log_counts* %expected, i64 0, i32 8
  %10 = load i32, i32* %exporter_secret_count221, align 4, !tbaa !20
  %conv222 = zext i32 %10 to i64
  %call223 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 354, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.301, i64 0, i64 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.302, i64 0, i64 0), i64 noundef %conv220, i64 noundef %conv222) #16
  %tobool224.not = icmp ne i32 %call223, 0
  %spec.select299 = zext i1 %tobool224.not to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end161, %if.end153, %if.end148, %if.end143, %if.end137, %if.end51, %if.end45, %if.end40, %if.end33, %if.end28, %if.end23, %if.then18, %if.end10, %if.end, %if.then, %lor.lhs.false219, %for.end, %lor.lhs.false177, %lor.lhs.false183, %lor.lhs.false189, %lor.lhs.false195, %lor.lhs.false201, %lor.lhs.false207, %lor.lhs.false213, %if.else167
  %retval.0 = phi i32 [ 0, %if.else167 ], [ 0, %lor.lhs.false213 ], [ 0, %lor.lhs.false207 ], [ 0, %lor.lhs.false201 ], [ 0, %lor.lhs.false195 ], [ 0, %lor.lhs.false189 ], [ 0, %lor.lhs.false183 ], [ 0, %lor.lhs.false177 ], [ 0, %for.end ], [ %spec.select299, %lor.lhs.false219 ], [ 0, %if.then ], [ 0, %if.end ], [ 0, %if.end10 ], [ 0, %if.then18 ], [ 0, %if.end23 ], [ 0, %if.end28 ], [ 0, %if.end33 ], [ 0, %if.end40 ], [ 0, %if.end45 ], [ 0, %if.end51 ], [ 0, %if.end137 ], [ 0, %if.end143 ], [ 0, %if.end148 ], [ 0, %if.end153 ], [ 0, %if.end161 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind
declare dso_local i8* @strtok(i8* noundef, i8* noundef) local_unnamed_addr #5

declare dso_local i64 @SSL_get_client_random(%struct.ssl_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @compare_hex_encoded_buffer(i8* nocapture noundef readonly %hex_encoded, i64 noundef %hex_length, i8* nocapture noundef readonly %raw, i64 noundef %raw_length) unnamed_addr #1 {
entry:
  %hexed = alloca [3 x i8], align 1
  %0 = getelementptr inbounds [3 x i8], [3 x i8]* %hexed, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %0) #19
  %mul = shl i64 %raw_length, 1
  %call = tail call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 201, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.303, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.304, i64 0, i64 0), i64 noundef %mul, i64 noundef %hex_length) #16
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %arrayidx9 = getelementptr inbounds [3 x i8], [3 x i8]* %hexed, i64 0, i64 1
  %cmp31 = icmp ne i64 %raw_length, 0
  %cmp132 = icmp ugt i64 %hex_length, 1
  %1 = and i1 %cmp31, %cmp132
  br i1 %1, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %add35 = phi i64 [ %add, %for.inc ], [ 1, %for.cond.preheader ]
  %j.034 = phi i64 [ %add18, %for.inc ], [ 0, %for.cond.preheader ]
  %i.033 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds i8, i8* %raw, i64 %i.033
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !9
  %conv = zext i8 %2 to i32
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.305, i64 0, i64 0), i32 noundef %conv) #16
  %3 = load i8, i8* %0, align 1, !tbaa !9
  %conv4 = sext i8 %3 to i32
  %arrayidx5 = getelementptr inbounds i8, i8* %hex_encoded, i64 %j.034
  %4 = load i8, i8* %arrayidx5, align 1, !tbaa !9
  %conv6 = sext i8 %4 to i32
  %call7 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 206, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.306, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.307, i64 0, i64 0), i32 noundef %conv4, i32 noundef %conv6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8, i8* %arrayidx9, align 1, !tbaa !9
  %conv10 = sext i8 %5 to i32
  %arrayidx12 = getelementptr inbounds i8, i8* %hex_encoded, i64 %add35
  %6 = load i8, i8* %arrayidx12, align 1, !tbaa !9
  %conv13 = sext i8 %6 to i32
  %call14 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 207, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.308, i64 0, i64 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.309, i64 0, i64 0), i32 noundef %conv10, i32 noundef %conv13) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %cleanup, label %for.inc

for.inc:                                          ; preds = %lor.lhs.false
  %inc = add nuw i64 %i.033, 1
  %add18 = add i64 %j.034, 2
  %cmp = icmp ult i64 %inc, %raw_length
  %add = or i64 %add18, 1
  %cmp1 = icmp ult i64 %add, %hex_length
  %7 = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %7, label %for.body, label %cleanup, !llvm.loop !55

cleanup:                                          ; preds = %lor.lhs.false, %for.body, %for.inc, %for.cond.preheader, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %for.cond.preheader ], [ 1, %lor.lhs.false ], [ 1, %for.body ], [ 0, %for.inc ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_size_t_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #5

declare dso_local i32 @SSL_CTX_set_max_early_data(%struct.ssl_ctx_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_write_early_data(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_read_early_data(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_get_early_data_status(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_use_certificate_chain_file(%struct.ssl_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_use_PrivateKey_file(%struct.ssl_ctx_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_load_verify_locations(%struct.ssl_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_verify(%struct.ssl_ctx_st* noundef, i32 noundef, i32 (i32, %struct.x509_store_ctx_st*)* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_cert_verify_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.x509_store_ctx_st*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @verify_retry_cb(%struct.x509_store_ctx_st* noundef %ctx, i8* nocapture noundef readnone %arg) #1 {
entry:
  %call = tail call i32 @X509_verify_cert(%struct.x509_store_ctx_st* noundef %ctx) #16
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @X509_STORE_CTX_get_error(%struct.x509_store_ctx_st* noundef %ctx) #16
  %cmp2 = icmp eq i32 %call1, 20
  br i1 %cmp2, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ -1, %land.lhs.true ]
  ret i32 %retval.0
}

declare dso_local %struct.x509_st* @load_cert_pem(i8* noundef, %struct.ossl_lib_ctx_st* noundef) local_unnamed_addr #3

declare dso_local %struct.stack_st_X509* @SSL_get_peer_cert_chain(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_X509_sk_type(%struct.stack_st_X509* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_X509* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local i32 @X509_verify_cert(%struct.x509_store_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i32 @X509_STORE_CTX_get_error(%struct.x509_store_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_use_certificate_chain_file(%struct.ssl_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_use_PrivateKey_file(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_check_private_key(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_client_hello_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i32*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @full_client_hello_callback(%struct.ssl_st* noundef %s, i32* nocapture noundef readnone %al, i8* nocapture noundef %arg) #1 {
entry:
  %p = alloca i8*, align 8
  %exts = alloca i32*, align 8
  %expected_ciphers = alloca [6 x i8], align 1
  %expected_extensions = alloca [6 x i32], align 16
  %len = alloca i64, align 8
  %0 = bitcast i8* %arg to i32*
  %1 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %2 = bitcast i32** %exts to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  %3 = getelementptr inbounds [6 x i8], [6 x i8]* %expected_ciphers, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %3) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(6) %3, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @__const.full_client_hello_callback.expected_ciphers, i64 0, i64 0), i64 6, i1 false)
  %4 = bitcast [6 x i32]* %expected_extensions to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(24) %4, i8* noundef nonnull align 16 dereferenceable(24) bitcast ([6 x i32]* @__const.full_client_hello_callback.expected_extensions to i8*), i64 24, i1 false)
  %5 = bitcast i64* %len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = load i32, i32* %0, align 4, !tbaa !7
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %0, align 4, !tbaa !7
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i64 @SSL_client_hello_get0_ciphers(%struct.ssl_st* noundef %s, i8** noundef nonnull %p) #16
  store i64 %call, i64* %len, align 8, !tbaa !10
  %7 = load i8*, i8** %p, align 8, !tbaa !3
  %call1 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 726, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.349, i64 0, i64 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.350, i64 0, i64 0), i8* noundef %7, i64 noundef %call, i8* noundef nonnull %3, i64 noundef 6) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call2 = call i64 @SSL_client_hello_get0_compression_methods(%struct.ssl_st* noundef %s, i8** noundef nonnull %p) #16
  %call3 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 728, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.351, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i64 noundef %call2, i64 noundef 1) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %cleanup, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %8 = load i8*, i8** %p, align 8, !tbaa !3
  %9 = load i8, i8* %8, align 1, !tbaa !9
  %conv = zext i8 %9 to i32
  %call6 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 729, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.352, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv, i32 noundef 0) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %cleanup, label %if.end9

if.end9:                                          ; preds = %lor.lhs.false5
  %call10 = call i32 @SSL_client_hello_get1_extensions_present(%struct.ssl_st* noundef %s, i32** noundef nonnull %exts, i64* noundef nonnull %len) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.end9
  %10 = load i64, i64* %len, align 8, !tbaa !10
  %cmp14.not = icmp eq i64 %10, 6
  br i1 %cmp14.not, label %lor.lhs.false16, label %if.then21

lor.lhs.false16:                                  ; preds = %if.end13
  %11 = bitcast i32** %exts to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !3
  %call18 = call i32 @memcmp(i8* noundef %12, i8* noundef nonnull %4, i64 noundef 24) #17
  %cmp19.not = icmp eq i32 %call18, 0
  br i1 %cmp19.not, label %if.end23, label %if.then21

if.then21:                                        ; preds = %if.end13, %lor.lhs.false16
  %.pre-phi = bitcast i32** %exts to i8**
  %call22 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.353, i64 0, i64 0)) #16
  %13 = load i8*, i8** %.pre-phi, align 8, !tbaa !3
  call void @CRYPTO_free(i8* noundef %13, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 736) #16
  br label %cleanup

if.end23:                                         ; preds = %lor.lhs.false16
  call void @CRYPTO_free(i8* noundef %12, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 739) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end, %lor.lhs.false, %lor.lhs.false5, %entry, %if.end23, %if.then21
  %retval.0 = phi i32 [ 0, %if.then21 ], [ 1, %if.end23 ], [ -1, %entry ], [ 0, %lor.lhs.false5 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %if.end9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  ret i32 %retval.0
}

declare dso_local i64 @SSL_client_hello_get0_ciphers(%struct.ssl_st* noundef, i8** noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_client_hello_get0_compression_methods(%struct.ssl_st* noundef, i8** noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_client_hello_get1_extensions_present(%struct.ssl_st* noundef, i32** noundef, i64* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #4

declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

declare dso_local i32 @SSL_set_cipher_list(%struct.ssl_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_renegotiate(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_renegotiate_pending(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_ulong_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_ptr_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef %cctx, %struct.ssl_ctx_st** noundef %sctx, %struct.ssl_st** noundef %clientssl, %struct.ssl_st** noundef %serverssl, %struct.ssl_session_st** noundef %sess, i32 noundef %idx) unnamed_addr #1 {
entry:
  %0 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %cmp = icmp eq %struct.ssl_ctx_st* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %2 = load i8*, i8** @cert, align 8, !tbaa !3
  %3 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = tail call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %1, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef %cctx, i8* noundef %2, i8* noundef %3) #16
  %cmp3 = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp3 to i32
  %call4 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3173, i8* noundef getelementptr inbounds ([114 x i8], [114 x i8]* @.str.191, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %return, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %.pre = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %4 = phi %struct.ssl_ctx_st* [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %0, %entry ]
  %call5 = tail call i32 @SSL_CTX_set_max_early_data(%struct.ssl_ctx_st* noundef %4, i32 noundef 16384) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv7 = zext i1 %cmp6 to i32
  %call8 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3176, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.427, i64 0, i64 0), i32 noundef %conv7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %return, label %if.end11

if.end11:                                         ; preds = %if.end
  %cmp12 = icmp eq i32 %idx, 1
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end11
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call15 = tail call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %5, i32 noundef 41, i64 noundef 1, i8* noundef null) #16
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call16 = tail call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* noundef %6, i32 noundef 41, i64 noundef 1, i8* noundef null) #16
  br label %if.end21

if.else:                                          ; preds = %if.end11
  %cmp17 = icmp eq i32 %idx, 2
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.else
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  tail call void @SSL_CTX_set_psk_use_session_callback(%struct.ssl_ctx_st* noundef %7, i32 (%struct.ssl_st*, %struct.evp_md_st*, i8**, i64*, %struct.ssl_session_st**)* noundef nonnull @use_session_cb) #16
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  tail call void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st* noundef %8, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)* noundef nonnull @find_session_cb) #16
  store i32 0, i32* @use_session_cb_cnt, align 4, !tbaa !7
  store i32 0, i32* @find_session_cb_cnt, align 4, !tbaa !7
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then19, %if.then14
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call22 = tail call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %9, %struct.ssl_ctx_st* noundef %10, %struct.ssl_st** noundef %serverssl, %struct.ssl_st** noundef %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3193, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.428, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %return, label %if.end28

if.end28:                                         ; preds = %if.end21
  br i1 %cmp12, label %land.lhs.true31, label %if.end38

land.lhs.true31:                                  ; preds = %if.end28
  %11 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call32 = tail call i64 @SSL_ctrl(%struct.ssl_st* noundef %11, i32 noundef 55, i64 noundef 0, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.430, i64 0, i64 0)) #16
  %cmp33 = icmp ne i64 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3203, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.429, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %return, label %if.end69

if.end38:                                         ; preds = %if.end28
  %cmp39 = icmp eq i32 %idx, 2
  br i1 %cmp39, label %if.then41, label %if.end69

if.then41:                                        ; preds = %if.end38
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call42 = tail call fastcc %struct.ssl_session_st* @create_a_psk(%struct.ssl_st* noundef %12) #18
  store %struct.ssl_session_st* %call42, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %13 = bitcast %struct.ssl_session_st* %call42 to i8*
  %call43 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3208, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i64 0, i64 0), i8* noundef %13) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.then56, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then41
  %14 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call45 = tail call i32 @SSL_SESSION_set_max_early_data(%struct.ssl_session_st* noundef %14, i32 noundef 256) #16
  %cmp46 = icmp ne i32 %call45, 0
  %conv47 = zext i1 %cmp46 to i32
  %call48 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3214, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.431, i64 0, i64 0), i32 noundef %conv47) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.then56, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %15 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call51 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef %15) #16
  %cmp52 = icmp ne i32 %call51, 0
  %conv53 = zext i1 %cmp52 to i32
  %call54 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3215, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.432, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.then56, label %if.end57

if.then56:                                        ; preds = %lor.lhs.false50, %lor.lhs.false, %if.then41
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %16) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  br label %return

if.end57:                                         ; preds = %lor.lhs.false50
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* %17, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %cmp58.not = icmp eq %struct.ssl_session_st** %sess, null
  br i1 %cmp58.not, label %return, label %if.then60

if.then60:                                        ; preds = %if.end57
  %call61 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* noundef %17) #16
  %cmp62 = icmp ne i32 %call61, 0
  %conv63 = zext i1 %cmp62 to i32
  %call64 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3223, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.432, i64 0, i64 0), i32 noundef %conv63) #16
  %tobool65.not = icmp eq i32 %call64, 0
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  br i1 %tobool65.not, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then60
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %18) #16
  %19 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %19) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  br label %return

if.end67:                                         ; preds = %if.then60
  store %struct.ssl_session_st* %18, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  br label %return

if.end69:                                         ; preds = %land.lhs.true31, %if.end38
  %cmp70 = icmp eq %struct.ssl_session_st** %sess, null
  br i1 %cmp70, label %return, label %if.end73

if.end73:                                         ; preds = %if.end69
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %21 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call74 = tail call i32 @create_ssl_connection(%struct.ssl_st* noundef %20, %struct.ssl_st* noundef %21, i32 noundef 0) #16
  %cmp75 = icmp ne i32 %call74, 0
  %conv76 = zext i1 %cmp75 to i32
  %call77 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3238, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.433, i64 0, i64 0), i32 noundef %conv76) #16
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %return, label %if.end80

if.end80:                                         ; preds = %if.end73
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call81 = tail call %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st* noundef %22) #16
  store %struct.ssl_session_st* %call81, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call82 = tail call i32 @SSL_shutdown(%struct.ssl_st* noundef %23) #16
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call83 = tail call i32 @SSL_shutdown(%struct.ssl_st* noundef %24) #16
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  tail call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  tail call void @SSL_free(%struct.ssl_st* noundef %26) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call84 = tail call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %27, %struct.ssl_ctx_st* noundef %28, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp85 = icmp ne i32 %call84, 0
  %conv86 = zext i1 %cmp85 to i32
  %call87 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3249, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.428, i64 0, i64 0), i32 noundef %conv86) #16
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %return, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end80
  %29 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call90 = tail call i32 @SSL_set_session(%struct.ssl_st* noundef %29, %struct.ssl_session_st* noundef %30) #16
  %cmp91 = icmp ne i32 %call90, 0
  %conv92 = zext i1 %cmp91 to i32
  %call93 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3250, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.434, i64 0, i64 0), i32 noundef %conv92) #16
  %tobool94.not = icmp ne i32 %call93, 0
  %spec.select = zext i1 %tobool94.not to i32
  br label %return

return:                                           ; preds = %lor.lhs.false89, %if.end80, %if.end73, %if.end69, %if.end57, %if.end67, %land.lhs.true31, %if.end21, %if.end, %land.lhs.true, %if.then66, %if.then56
  %retval.0 = phi i32 [ 0, %if.then66 ], [ 0, %if.then56 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %if.end21 ], [ 0, %land.lhs.true31 ], [ 1, %if.end67 ], [ 1, %if.end57 ], [ 1, %if.end69 ], [ 0, %if.end73 ], [ 0, %if.end80 ], [ %spec.select, %lor.lhs.false89 ]
  ret i32 %retval.0
}

declare dso_local %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @BIO_read_ex(%struct.bio_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local i32 @test_size_t_lt(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_size_t_gt(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @BIO_write_ex(%struct.bio_st* noundef, i8* noundef, i64 noundef, i64* noundef) local_unnamed_addr #3

declare dso_local void @ERR_clear_error() local_unnamed_addr #3

declare dso_local i32 @SSL_connect(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_accept(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set_max_early_data(%struct.ssl_session_st* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @test_early_data_replay_int(i32 noundef %idx, i32 noundef %usecb, i32 noundef %confopt) unnamed_addr #1 {
entry:
  %usecb.addr = alloca i32, align 4
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %buf = alloca [20 x i8], align 16
  store i32 %usecb, i32* %usecb.addr, align 4, !tbaa !7
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #19
  store i32 0, i32* @allow_ed_cb_called, align 4, !tbaa !7
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %9 = load i8*, i8** @cert, align 8, !tbaa !3
  %10 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef 0, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %9, i8* noundef %10) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3499, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.161, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %cleanup127, label %if.end

if.end:                                           ; preds = %entry
  %cmp4 = icmp sgt i32 %usecb, 0
  br i1 %cmp4, label %if.then6, label %if.end23

if.then6:                                         ; preds = %if.end
  %cmp7 = icmp eq i32 %confopt, 0
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then6
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call10 = call i64 @SSL_CTX_set_options(%struct.ssl_ctx_st* noundef %11, i64 noundef 16777216) #16
  br label %if.end22

if.else:                                          ; preds = %if.then6
  %call11 = call %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new() #16
  %12 = bitcast %struct.ssl_conf_ctx_st* %call11 to i8*
  %call12 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3508, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i64 0, i64 0), i8* noundef %12) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.else
  %call16 = call i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st* noundef %call11, i32 noundef 10) #16
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CONF_CTX_set_ssl_ctx(%struct.ssl_conf_ctx_st* noundef %call11, %struct.ssl_ctx_st* noundef %13) #16
  %call17 = call i32 @SSL_CONF_cmd(%struct.ssl_conf_ctx_st* noundef %call11, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.437, i64 0, i64 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.438, i64 0, i64 0)) #16
  %call18 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3514, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.436, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i32 noundef %call17, i32 noundef 2) #16
  %tobool19.not = icmp eq i32 %call18, 0
  call void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st* noundef %call11) #16
  br i1 %tobool19.not, label %end, label %if.end22

if.end22:                                         ; preds = %if.end15, %if.then9
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %15 = bitcast i32* %usecb.addr to i8*
  call void @SSL_CTX_set_allow_early_data_cb(%struct.ssl_ctx_st* noundef %14, i32 (%struct.ssl_st*, i8*)* noundef nonnull @allow_early_data_cb, i8* noundef nonnull %15) #16
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  %call24 = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp25 = icmp ne i32 %call24, 0
  %conv26 = zext i1 %cmp25 to i32
  %call27 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3524, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv26) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %end, label %if.end30

if.end30:                                         ; preds = %if.end23
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call31 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %16, %struct.ssl_st* noundef %17, i32 noundef 0) #16
  %cmp32 = icmp ne i32 %call31, 0
  %conv33 = zext i1 %cmp32 to i32
  %call34 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3531, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv33) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end30
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call36 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %18) #16
  %cmp37 = icmp ne i32 %call36, 0
  %conv38 = zext i1 %cmp37 to i32
  %call39 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3532, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i32 noundef %conv38) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %end, label %if.end42

if.end42:                                         ; preds = %lor.lhs.false
  %19 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call43 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %19) #16
  %20 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call44 = call i32 @SSL_shutdown(%struct.ssl_st* noundef %20) #16
  %21 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %21) #16
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %22) #16
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call45 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %23, %struct.ssl_ctx_st* noundef %24, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp46 = icmp ne i32 %call45, 0
  %conv47 = zext i1 %cmp46 to i32
  %call48 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3542, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv47) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %end, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.end42
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call51 = call i32 @SSL_set_session(%struct.ssl_st* noundef %25, %struct.ssl_session_st* noundef %26) #16
  %cmp52 = icmp ne i32 %call51, 0
  %conv53 = zext i1 %cmp52 to i32
  %call54 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3543, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.311, i64 0, i64 0), i32 noundef %conv53) #16
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %end, label %if.end57

if.end57:                                         ; preds = %lor.lhs.false50
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call58 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call59 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %27, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call58, i64* noundef nonnull %written) #16
  %cmp60 = icmp ne i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  %call62 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3548, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv61) #16
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %end, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %if.end57
  %28 = load i64, i64* %written, align 8, !tbaa !10
  %call65 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call66 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3549, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %28, i64 noundef %call65) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end69

if.end69:                                         ; preds = %lor.lhs.false64
  %29 = load i32, i32* %usecb.addr, align 4, !tbaa !7
  %cmp70 = icmp slt i32 %29, 2
  %30 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call73 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %30, i8* noundef nonnull %7, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  br i1 %cmp70, label %if.then72, label %if.else82

if.then72:                                        ; preds = %if.end69
  %call74 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3555, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call73, i32 noundef 2) #16
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %end, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %if.then72
  %31 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call77 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %31) #16
  %call78 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3561, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.439, i64 0, i64 0), i32 noundef %call77, i32 noundef 1) #16
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %end, label %if.end107

if.else82:                                        ; preds = %if.end69
  %call85 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3567, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.386, i64 0, i64 0), i32 noundef %call73, i32 noundef 1) #16
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %end, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %if.else82
  %call88 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %32 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call90 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3568, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i64 0, i64 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call88, i8* noundef nonnull %7, i64 noundef %32) #16
  %tobool91.not = icmp eq i32 %call90, 0
  br i1 %tobool91.not, label %end, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %lor.lhs.false87
  %33 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call93 = call i32 @SSL_connect(%struct.ssl_st* noundef %33) #16
  %call94 = call i32 @test_int_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3573, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.425, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call93, i32 noundef 0) #16
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %end, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %lor.lhs.false92
  %34 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call98 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %34, i8* noundef nonnull %7, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call99 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3576, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call98, i32 noundef 2) #16
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %end, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %lor.lhs.false96
  %35 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call102 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %35) #16
  %call103 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3578, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.316, i64 0, i64 0), i32 noundef %call102, i32 noundef 2) #16
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %end, label %if.end107

if.end107:                                        ; preds = %lor.lhs.false101, %lor.lhs.false76
  %36 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %37 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call108 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %36, %struct.ssl_st* noundef %37, i32 noundef 0) #16
  %cmp109 = icmp ne i32 %call108, 0
  %conv110 = zext i1 %cmp109 to i32
  %call111 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3583, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv110) #16
  %tobool112.not = icmp eq i32 %call111, 0
  br i1 %tobool112.not, label %end, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %if.end107
  %38 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call114 = call i32 @SSL_session_reused(%struct.ssl_st* noundef %38) #16
  %39 = load i32, i32* %usecb.addr, align 4, !tbaa !7
  %cmp115 = icmp sgt i32 %39, 0
  %cond = zext i1 %cmp115 to i32
  %call117 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3584, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i64 0, i64 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.440, i64 0, i64 0), i32 noundef %call114, i32 noundef %cond) #16
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %end, label %lor.lhs.false119

lor.lhs.false119:                                 ; preds = %lor.lhs.false113
  %40 = load i32, i32* @allow_ed_cb_called, align 4, !tbaa !7
  %41 = load i32, i32* %usecb.addr, align 4, !tbaa !7
  %cmp120 = icmp sgt i32 %41, 0
  %cond122 = zext i1 %cmp120 to i32
  %call123 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3585, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.441, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.442, i64 0, i64 0), i32 noundef %40, i32 noundef %cond122) #16
  %tobool124.not = icmp ne i32 %call123, 0
  %spec.select = zext i1 %tobool124.not to i32
  br label %end

end:                                              ; preds = %if.end15, %if.else, %lor.lhs.false119, %if.end107, %lor.lhs.false113, %if.else82, %lor.lhs.false87, %lor.lhs.false92, %lor.lhs.false96, %lor.lhs.false101, %if.then72, %lor.lhs.false76, %if.end57, %lor.lhs.false64, %if.end42, %lor.lhs.false50, %if.end30, %lor.lhs.false, %if.end23
  %testresult.0 = phi i32 [ 0, %lor.lhs.false113 ], [ 0, %if.end107 ], [ 0, %lor.lhs.false76 ], [ 0, %if.then72 ], [ 0, %lor.lhs.false101 ], [ 0, %lor.lhs.false96 ], [ 0, %lor.lhs.false92 ], [ 0, %lor.lhs.false87 ], [ 0, %if.else82 ], [ 0, %lor.lhs.false64 ], [ 0, %if.end57 ], [ 0, %lor.lhs.false50 ], [ 0, %if.end42 ], [ 0, %lor.lhs.false ], [ 0, %if.end30 ], [ 0, %if.end23 ], [ %spec.select, %lor.lhs.false119 ], [ 0, %if.else ], [ 0, %if.end15 ]
  %42 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %42) #16
  %43 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %43) #16
  %44 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %44) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %45 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %45) #16
  %46 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %46) #16
  %47 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %47) #16
  %48 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %48) #16
  br label %cleanup127

cleanup127:                                       ; preds = %entry, %end
  %retval.0 = phi i32 [ %testresult.0, %end ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new() local_unnamed_addr #3

declare dso_local i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local void @SSL_CONF_CTX_set_ssl_ctx(%struct.ssl_conf_ctx_st* noundef, %struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CONF_cmd(%struct.ssl_conf_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_allow_early_data_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal i32 @allow_early_data_cb(%struct.ssl_st* nocapture noundef readnone %s, i8* nocapture noundef readonly %arg) #7 {
entry:
  %0 = bitcast i8* %arg to i32*
  %1 = load i32, i32* @allow_ed_cb_called, align 4, !tbaa !7
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @allow_ed_cb_called, align 4, !tbaa !7
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %cmp = icmp ne i32 %2, 1
  %. = zext i1 %cmp to i32
  ret i32 %.
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @early_data_skip_helper(i32 noundef %testtype, i32 noundef %idx) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %sess = alloca %struct.ssl_session_st*, align 8
  %buf = alloca [20 x i8], align 16
  %readbytes = alloca i64, align 8
  %written = alloca i64, align 8
  %bad_early_data = alloca [6 x i8], align 1
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast %struct.ssl_session_st** %sess to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #19
  %6 = bitcast i64* %readbytes to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = bitcast i64* %written to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %call = call fastcc i32 @setupearly_data_test(%struct.ssl_ctx_st** noundef nonnull %cctx, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_st** noundef nonnull %clientssl, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_session_st** noundef nonnull %sess, i32 noundef %idx) #18
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  %call1 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3632, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.381, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %8 = add i32 %testtype, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end
  %10 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call7 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 92, i64 noundef 0, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.444, i64 0, i64 0)) #16
  %cmp8 = icmp ne i64 %call7, 0
  %conv9 = zext i1 %cmp8 to i32
  %call10 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3641, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.443, i64 0, i64 0), i32 noundef %conv9) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %end, label %if.end36

if.else:                                          ; preds = %if.end
  %cmp14 = icmp eq i32 %idx, 2
  br i1 %cmp14, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.445, i64 0, i64 0), i8** @srvid, align 8, !tbaa !3
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %11 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  %call18 = call i64 @time(i64* noundef null) #16
  %sub = add nsw i64 %call18, -20
  %call19 = call i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef %11, i64 noundef %sub) #16
  %cmp20 = icmp ne i64 %call19, 0
  %conv21 = zext i1 %cmp20 to i32
  %call22 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3656, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.446, i64 0, i64 0), i32 noundef %conv21) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %if.end27

if.end27:                                         ; preds = %if.then16, %if.else17
  %cmp28 = icmp eq i32 %testtype, 3
  br i1 %cmp28, label %land.lhs.true, label %if.end36

land.lhs.true:                                    ; preds = %if.end27
  %12 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call30 = call i32 @SSL_set_recv_max_early_data(%struct.ssl_st* noundef %12, i32 noundef 0) #16
  %cmp31 = icmp ne i32 %call30, 0
  %conv32 = zext i1 %cmp31 to i32
  %call33 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3661, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.447, i64 0, i64 0), i32 noundef %conv32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %end, label %if.end36

if.end36:                                         ; preds = %if.then6, %land.lhs.true, %if.end27
  %13 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call37 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call38 = call i32 @SSL_write_early_data(%struct.ssl_st* noundef %13, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), i64 noundef %call37, i64* noundef nonnull %written) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3666, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.382, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end36
  %14 = load i64, i64* %written, align 8, !tbaa !10
  %call44 = call i64 @strlen(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0)) #17
  %call45 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3667, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i64 0, i64 0), i64 noundef %14, i64 noundef %call44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %if.end48

if.end48:                                         ; preds = %lor.lhs.false43
  %15 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call49 = call i32 @SSL_read_early_data(%struct.ssl_st* noundef %15, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %call50 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3673, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.313, i64 0, i64 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.413, i64 0, i64 0), i32 noundef %call49, i32 noundef 2) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %end, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.end48
  %16 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call53 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3674, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %16, i64 noundef 0) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %end, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %17 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call56 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %17) #16
  %call57 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3676, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.315, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.439, i64 0, i64 0), i32 noundef %call56, i32 noundef 1) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %end, label %if.end60

if.end60:                                         ; preds = %lor.lhs.false55
  switch i32 %testtype, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb
    i32 2, label %sw.bb76
    i32 3, label %sw.bb95
  ]

sw.bb:                                            ; preds = %if.end60
  %18 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call61 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call62 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %18, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call61, i64* noundef nonnull %written) #16
  %cmp63 = icmp ne i32 %call62, 0
  %conv64 = zext i1 %cmp63 to i32
  %call65 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3690, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.448, i64 0, i64 0), i32 noundef %conv64) #16
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %end, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %sw.bb
  %19 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call69 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %19, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp70 = icmp ne i32 %call69, 0
  %conv71 = zext i1 %cmp70 to i32
  %call72 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3692, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv71) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %end, label %sw.epilog

sw.bb76:                                          ; preds = %if.end60
  %20 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call77 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* noundef %20) #16
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %bad_early_data, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %21) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(6) %21, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @__const.early_data_skip_helper.bad_early_data, i64 0, i64 0), i64 6, i1 false)
  %22 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call78 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call79 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %22, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call78, i64* noundef nonnull %written) #16
  %cmp80 = icmp ne i32 %call79, 0
  %conv81 = zext i1 %cmp80 to i32
  %call82 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3710, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.448, i64 0, i64 0), i32 noundef %conv81) #16
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %cleanup.thread, label %if.end85

if.end85:                                         ; preds = %sw.bb76
  %call87 = call i32 @BIO_write_ex(%struct.bio_st* noundef %call77, i8* noundef nonnull %21, i64 noundef 6, i64* noundef nonnull %written) #16
  %cmp88 = icmp ne i32 %call87, 0
  %conv89 = zext i1 %cmp88 to i32
  %call90 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3718, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.449, i64 0, i64 0), i32 noundef %conv89) #16
  %tobool91.not = icmp eq i32 %call90, 0
  br i1 %tobool91.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %sw.bb76, %if.end85
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %21) #19
  br label %end

cleanup:                                          ; preds = %if.end85
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %21) #19
  br label %sw.bb95

sw.bb95:                                          ; preds = %cleanup, %if.end60
  %23 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call97 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %23, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp98 = icmp ne i32 %call97, 0
  %conv99 = zext i1 %cmp98 to i32
  %call100 = call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3729, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv99) #16
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %end, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %sw.bb95
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call103 = call i32 @SSL_get_error(%struct.ssl_st* noundef %24, i32 noundef 0) #16
  %call104 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3730, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i64 0, i64 0), i32 noundef %call103, i32 noundef 1) #16
  %tobool105.not = icmp ne i32 %call104, 0
  br label %end

sw.default:                                       ; preds = %if.end60
  call void (i8*, i32, i8*, ...) @test_error(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3738, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.451, i64 0, i64 0)) #16
  br label %end

sw.epilog:                                        ; preds = %lor.lhs.false67, %if.end60
  %25 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call108 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call109 = call i32 @SSL_write_ex(%struct.ssl_st* noundef %25, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call108, i64* noundef nonnull %written) #16
  %cmp110 = icmp ne i32 %call109, 0
  %conv111 = zext i1 %cmp110 to i32
  %call112 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3746, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.448, i64 0, i64 0), i32 noundef %conv111) #16
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %end, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %sw.epilog
  %26 = load i64, i64* %written, align 8, !tbaa !10
  %call115 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call116 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3747, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0), i64 noundef %26, i64 noundef %call115) #16
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %end, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %27 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call119 = call i32 @SSL_get_early_data_status(%struct.ssl_st* noundef %27) #16
  %call120 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3749, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.439, i64 0, i64 0), i32 noundef %call119, i32 noundef 1) #16
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %end, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %lor.lhs.false118
  %28 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call124 = call i32 @SSL_read_ex(%struct.ssl_st* noundef %28, i8* noundef nonnull %5, i64 noundef 20, i64* noundef nonnull %readbytes) #16
  %cmp125 = icmp ne i32 %call124, 0
  %conv126 = zext i1 %cmp125 to i32
  %call127 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3750, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.418, i64 0, i64 0), i32 noundef %conv126) #16
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %end, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %lor.lhs.false122
  %29 = load i64, i64* %readbytes, align 8, !tbaa !10
  %call131 = call i64 @strlen(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0)) #17
  %call132 = call i32 @test_mem_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 3751, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i64 0, i64 0), i8* noundef nonnull %5, i64 noundef %29, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.390, i64 0, i64 0), i64 noundef %call131) #16
  %tobool133.not = icmp ne i32 %call132, 0
  br label %end

end:                                              ; preds = %cleanup.thread, %lor.lhs.false129, %lor.lhs.false102, %sw.epilog, %lor.lhs.false114, %lor.lhs.false118, %lor.lhs.false122, %sw.bb95, %sw.bb, %lor.lhs.false67, %if.end48, %lor.lhs.false52, %lor.lhs.false55, %if.end36, %lor.lhs.false43, %land.lhs.true, %if.else17, %if.then6, %entry, %sw.default
  %testresult.0.shrunk = phi i1 [ false, %sw.default ], [ false, %sw.bb95 ], [ false, %lor.lhs.false122 ], [ false, %lor.lhs.false118 ], [ false, %lor.lhs.false114 ], [ false, %sw.epilog ], [ false, %lor.lhs.false67 ], [ false, %sw.bb ], [ false, %lor.lhs.false55 ], [ false, %lor.lhs.false52 ], [ false, %if.end48 ], [ false, %lor.lhs.false43 ], [ false, %if.end36 ], [ false, %land.lhs.true ], [ false, %if.then6 ], [ false, %if.else17 ], [ false, %entry ], [ %tobool105.not, %lor.lhs.false102 ], [ %tobool133.not, %lor.lhs.false129 ], [ false, %cleanup.thread ]
  %testresult.0 = zext i1 %testresult.0.shrunk to i32
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %30) #16
  %31 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %31) #16
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  store %struct.ssl_session_st* null, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %32 = load %struct.ssl_session_st*, %struct.ssl_session_st** %sess, align 8, !tbaa !3
  call void @SSL_SESSION_free(%struct.ssl_session_st* noundef %32) #16
  %33 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %33) #16
  %34 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %34) #16
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %35) #16
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %36) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local i64 @SSL_SESSION_set_time(%struct.ssl_session_st* noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i64 @time(i64* noundef) local_unnamed_addr #5

declare dso_local i32 @SSL_set_recv_max_early_data(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local void @SSL_set_connect_state(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set1_hostname(%struct.ssl_session_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_set1_alpn_selected(%struct.ssl_session_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_set_alpn_protos(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @hostname_cb(%struct.ssl_st* noundef %s, i32* nocapture noundef readnone %al, i8* nocapture noundef readnone %arg) #1 {
entry:
  %call = tail call i8* @SSL_get_servername(%struct.ssl_st* noundef %s, i32 noundef 0) #16
  %cmp.not = icmp eq i8* %call, null
  br i1 %cmp.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @strcmp(i8* noundef nonnull %call, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.457, i64 0, i64 0)) #17
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = tail call i32 @strcmp(i8* noundef nonnull %call, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.479, i64 0, i64 0)) #17
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false, %entry
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false, %if.end
  %retval.0 = phi i32 [ 3, %if.end ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

declare dso_local void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: nofree noinline nounwind uwtable
define internal i32 @alpn_select_cb(%struct.ssl_st* nocapture noundef readnone %ssl, i8** nocapture noundef writeonly %out, i8* nocapture noundef writeonly %outlen, i8* noundef %in, i32 noundef %inlen, i8* nocapture noundef readnone %arg) #11 {
entry:
  %idx.ext = zext i32 %inlen to i64
  %add.ptr = getelementptr inbounds i8, i8* %in, i64 %idx.ext
  %cmp34.not = icmp eq i32 %inlen, 0
  br i1 %cmp34.not, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = load i8*, i8** @servalpn, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %prot.035 = phi i8* [ %in, %for.body.lr.ph ], [ %add.ptr4, %for.inc ]
  %incdec.ptr = getelementptr inbounds i8, i8* %prot.035, i64 1
  %1 = load i8, i8* %prot.035, align 1, !tbaa !9
  %idx.ext3 = zext i8 %1 to i64
  %add.ptr4 = getelementptr inbounds i8, i8* %incdec.ptr, i64 %idx.ext3
  %cmp5 = icmp ult i8* %add.ptr, %add.ptr4
  br i1 %cmp5, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  %call = tail call i64 @strlen(i8* noundef %0) #17
  %cmp8 = icmp eq i64 %call, %idx.ext3
  br i1 %cmp8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %if.end
  %call11 = tail call i32 @memcmp(i8* noundef nonnull %incdec.ptr, i8* noundef %0, i64 noundef %idx.ext3) #17
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then14, label %for.inc

if.then14:                                        ; preds = %land.lhs.true
  store i8* %incdec.ptr, i8** %out, align 8, !tbaa !3
  store i8 %1, i8* %outlen, align 1, !tbaa !9
  br label %cleanup

for.inc:                                          ; preds = %if.end, %land.lhs.true
  %cmp = icmp ult i8* %add.ptr4, %add.ptr
  br i1 %cmp, label %for.body, label %cleanup, !llvm.loop !56

cleanup:                                          ; preds = %for.body, %for.inc, %entry, %if.then14
  %retval.0 = phi i32 [ 0, %if.then14 ], [ 3, %entry ], [ 3, %for.inc ], [ 3, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc i32 @ERR_GET_REASON(i64 noundef %errcode) unnamed_addr #0 {
entry:
  %and = and i64 %errcode, 2147483648
  %cmp.not = icmp eq i64 %and, 0
  %0 = trunc i64 %errcode to i32
  %retval.0.v = select i1 %cmp.not, i32 8388607, i32 2147483647
  %retval.0 = and i32 %retval.0.v, %0
  ret i32 %retval.0
}

declare dso_local i64 @ERR_get_error() local_unnamed_addr #3

declare dso_local i8* @SSL_get_servername(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_set_ciphersuites(%struct.ssl_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_str_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @test_strn_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @psk_client_cb(%struct.ssl_st* nocapture noundef readnone %ssl, i8* nocapture noundef readnone %hint, i8* noundef %id, i32 noundef %max_id_len, i8* noundef %psk, i32 noundef %max_psk_len) #1 {
entry:
  %0 = load i32, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @psk_client_cb_cnt, align 4, !tbaa !7
  %call = tail call i64 @strlen(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0)) #17
  %add = add i64 %call, 1
  %conv = zext i32 %max_id_len to i64
  %cmp = icmp ugt i64 %add, %conv
  %cmp2 = icmp sgt i32 %0, 1
  %or.cond = select i1 %cmp, i1 true, i1 %cmp2
  br i1 %or.cond, label %cleanup, label %if.end5

if.end5:                                          ; preds = %entry
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %cmp6 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.end5
  %call10 = tail call i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef nonnull %1, i8* noundef null, i64 noundef 0) #16
  %conv11 = zext i32 %max_psk_len to i64
  %cmp12 = icmp ugt i64 %call10, %conv11
  br i1 %cmp12, label %cleanup, label %if.end15

if.end15:                                         ; preds = %if.end9
  %2 = load %struct.ssl_session_st*, %struct.ssl_session_st** @clientpsk, align 8, !tbaa !3
  %call17 = tail call i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef %2, i8* noundef %psk, i64 noundef %conv11) #16
  %conv18 = trunc i64 %call17 to i32
  %call20 = tail call i8* @strncpy(i8* noundef %id, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0), i64 noundef %conv) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end5, %entry, %if.end15
  %retval.0 = phi i32 [ %conv18, %if.end15 ], [ 0, %entry ], [ 0, %if.end5 ], [ 0, %if.end9 ]
  ret i32 %retval.0
}

declare dso_local void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i8*, i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @psk_server_cb(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef readonly %identity, i8* noundef %psk, i32 noundef %max_psk_len) #1 {
entry:
  %0 = load i32, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @psk_server_cb_cnt, align 4, !tbaa !7
  %1 = load i32, i32* @find_session_cb_cnt, align 4, !tbaa !7
  %cmp = icmp sgt i32 %1, 2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %cmp1 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** @srvid, align 8, !tbaa !3
  %call = tail call i32 @strcmp(i8* noundef %3, i8* noundef %identity) #17
  %cmp4.not = icmp eq i32 %call, 0
  br i1 %cmp4.not, label %if.end6, label %cleanup

if.end6:                                          ; preds = %if.end3
  %call7 = tail call i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef nonnull %2, i8* noundef null, i64 noundef 0) #16
  %conv = zext i32 %max_psk_len to i64
  %cmp8 = icmp ugt i64 %call7, %conv
  br i1 %cmp8, label %cleanup, label %if.end11

if.end11:                                         ; preds = %if.end6
  %4 = load %struct.ssl_session_st*, %struct.ssl_session_st** @serverpsk, align 8, !tbaa !3
  %call13 = tail call i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* noundef %4, i8* noundef %psk, i64 noundef %conv) #16
  %conv14 = trunc i64 %call13 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end3, %if.end, %entry, %if.end11
  %retval.0 = phi i32 [ %conv14, %if.end11 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ 0, %if.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #5

declare dso_local i8* @SSL_group_to_name(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @set_ssl_groups(%struct.ssl_st* noundef %serverssl, %struct.ssl_st* noundef %clientssl, i32 noundef %clientmulti, i32 noundef %isecdhe, i32 noundef %idx) unnamed_addr #1 {
entry:
  %kexch_alg = alloca i32, align 4
  %0 = bitcast i32* %kexch_alg to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  %tobool.not = icmp eq i32 %isecdhe, 0
  %idxprom1 = sext i32 %idx to i64
  %arrayidx2 = getelementptr inbounds [5 x i32], [5 x i32]* @ffdhe_kexch_groups, i64 0, i64 %idxprom1
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @ecdhe_kexch_groups, i64 0, i64 %idxprom1
  %storemerge.in = select i1 %tobool.not, i32* %arrayidx2, i32* %arrayidx
  %storemerge = load i32, i32* %storemerge.in, align 4, !tbaa !7
  store i32 %storemerge, i32* %kexch_alg, align 4, !tbaa !7
  %tobool3.not = icmp eq i32 %clientmulti, 0
  br i1 %tobool3.not, label %if.else29, label %if.then4

if.then4:                                         ; preds = %entry
  %call = call i64 @SSL_ctrl(%struct.ssl_st* noundef %serverssl, i32 noundef 91, i64 noundef 1, i8* noundef nonnull %0) #16
  %cmp = icmp ne i64 %call, 0
  %conv = zext i1 %cmp to i32
  %call5 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4713, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.577, i64 0, i64 0), i32 noundef %conv) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %cleanup, label %if.end8

if.end8:                                          ; preds = %if.then4
  br i1 %tobool.not, label %if.else19, label %if.then10

if.then10:                                        ; preds = %if.end8
  %call12 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %clientssl, i32 noundef 91, i64 noundef 5, i8* noundef bitcast ([5 x i32]* @ecdhe_kexch_groups to i8*)) #16
  %cmp13 = icmp ne i64 %call12, 0
  %conv14 = zext i1 %cmp13 to i32
  %call15 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4717, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.578, i64 0, i64 0), i32 noundef %conv14) #16
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %cleanup, label %if.end57

if.else19:                                        ; preds = %if.end8
  %call21 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %clientssl, i32 noundef 91, i64 noundef 5, i8* noundef bitcast ([5 x i32]* @ffdhe_kexch_groups to i8*)) #16
  %cmp22 = icmp ne i64 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4721, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.579, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %cleanup, label %if.end57

if.else29:                                        ; preds = %entry
  %call30 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %clientssl, i32 noundef 91, i64 noundef 1, i8* noundef nonnull %0) #16
  %cmp31 = icmp ne i64 %call30, 0
  %conv32 = zext i1 %cmp31 to i32
  %call33 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4725, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.580, i64 0, i64 0), i32 noundef %conv32) #16
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %cleanup, label %if.end36

if.end36:                                         ; preds = %if.else29
  br i1 %tobool.not, label %if.else47, label %if.then38

if.then38:                                        ; preds = %if.end36
  %call40 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %serverssl, i32 noundef 91, i64 noundef 5, i8* noundef bitcast ([5 x i32]* @ecdhe_kexch_groups to i8*)) #16
  %cmp41 = icmp ne i64 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4729, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.581, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %cleanup, label %if.end57

if.else47:                                        ; preds = %if.end36
  %call49 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %serverssl, i32 noundef 91, i64 noundef 5, i8* noundef bitcast ([5 x i32]* @ffdhe_kexch_groups to i8*)) #16
  %cmp50 = icmp ne i64 %call49, 0
  %conv51 = zext i1 %cmp50 to i32
  %call52 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 4733, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.582, i64 0, i64 0), i32 noundef %conv51) #16
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %cleanup, label %if.end57

if.end57:                                         ; preds = %if.then38, %if.else47, %if.then10, %if.else19
  br label %cleanup

cleanup:                                          ; preds = %if.else47, %if.then38, %if.else29, %if.else19, %if.then10, %if.then4, %if.end57
  %retval.0 = phi i32 [ 1, %if.end57 ], [ 0, %if.then4 ], [ 0, %if.then10 ], [ 0, %if.else19 ], [ 0, %if.else29 ], [ 0, %if.then38 ], [ 0, %if.else47 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local i32 @test_uint_eq(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @test_int_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_add_client_custom_ext(%struct.ssl_ctx_st* noundef, i32 noundef, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef, void (%struct.ssl_st*, i32, i8*, i8*)* noundef, i8* noundef, i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @old_add_cb(%struct.ssl_st* noundef %s, i32 noundef %ext_type, i8** nocapture noundef writeonly %out, i64* nocapture noundef writeonly %outlen, i32* nocapture noundef readnone %al, i8* nocapture noundef readonly %add_arg) #1 {
entry:
  %0 = bitcast i8* %add_arg to i32*
  %call = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool.not = icmp eq i32 %call, 0
  %clntaddoldcb.srvaddoldcb = select i1 %tobool.not, i32* @clntaddoldcb, i32* @srvaddoldcb
  %1 = load i32, i32* %clntaddoldcb.srvaddoldcb, align 4, !tbaa !7
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, i32* %clntaddoldcb.srvaddoldcb, align 4, !tbaa !7
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %call2 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %cmp.not = icmp eq i32 %2, %call2
  br i1 %cmp.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call i8* @CRYPTO_malloc(i64 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5446) #16
  %cmp4 = icmp eq i8* %call3, null
  br i1 %cmp4, label %cleanup, label %if.end6

if.end6:                                          ; preds = %lor.lhs.false
  store i8 1, i8* %call3, align 1, !tbaa !9
  store i8* %call3, i8** %out, align 8, !tbaa !3
  store i64 1, i64* %outlen, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end6
  %retval.0 = phi i32 [ 1, %if.end6 ], [ -1, %lor.lhs.false ], [ -1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @old_free_cb(%struct.ssl_st* nocapture noundef readnone %s, i32 noundef %ext_type, i8* noundef %out, i8* nocapture noundef readnone %add_arg) #1 {
entry:
  tail call void @CRYPTO_free(i8* noundef %out, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5458) #16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @old_parse_cb(%struct.ssl_st* noundef %s, i32 noundef %ext_type, i8* nocapture noundef readonly %in, i64 noundef %inlen, i32* nocapture noundef readnone %al, i8* nocapture noundef readonly %parse_arg) #1 {
entry:
  %0 = bitcast i8* %parse_arg to i32*
  %call = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool.not = icmp eq i32 %call, 0
  %clntparseoldcb.srvparseoldcb = select i1 %tobool.not, i32* @clntparseoldcb, i32* @srvparseoldcb
  %1 = load i32, i32* %clntparseoldcb.srvparseoldcb, align 4, !tbaa !7
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, i32* %clntparseoldcb.srvparseoldcb, align 4, !tbaa !7
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %call2 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %cmp = icmp ne i32 %2, %call2
  %cmp3 = icmp ne i64 %inlen, 1
  %or.cond = or i1 %cmp3, %cmp
  br i1 %or.cond, label %cleanup, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %entry
  %3 = load i8, i8* %in, align 1, !tbaa !9
  %cmp5.not = icmp eq i8 %3, 1
  %spec.select = select i1 %cmp5.not, i32 1, i32 -1
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false4, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ %spec.select, %lor.lhs.false4 ]
  ret i32 %retval.0
}

declare dso_local i32 @SSL_CTX_add_custom_ext(%struct.ssl_ctx_st* noundef, i32 noundef, i32 noundef, i32 (%struct.ssl_st*, i32, i32, i8**, i64*, %struct.x509_st*, i64, i32*, i8*)* noundef, void (%struct.ssl_st*, i32, i32, i8*, i8*)* noundef, i8* noundef, i32 (%struct.ssl_st*, i32, i32, i8*, i64, %struct.x509_st*, i64, i32*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @new_add_cb(%struct.ssl_st* noundef %s, i32 noundef %ext_type, i32 noundef %context, i8** nocapture noundef writeonly %out, i64* nocapture noundef writeonly %outlen, %struct.x509_st* nocapture noundef readnone %x, i64 noundef %chainidx, i32* nocapture noundef readnone %al, i8* nocapture noundef readonly %add_arg) #1 {
entry:
  %0 = bitcast i8* %add_arg to i32*
  %call = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool.not = icmp eq i32 %call, 0
  %clntaddnewcb.srvaddnewcb = select i1 %tobool.not, i32* @clntaddnewcb, i32* @srvaddnewcb
  %1 = load i32, i32* %clntaddnewcb.srvaddnewcb, align 4, !tbaa !7
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, i32* %clntaddnewcb.srvaddnewcb, align 4, !tbaa !7
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %call2 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %cmp.not = icmp eq i32 %2, %call2
  br i1 %cmp.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call i8* @CRYPTO_malloc(i64 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5492) #16
  %cmp4 = icmp eq i8* %call3, null
  br i1 %cmp4, label %cleanup, label %if.end6

if.end6:                                          ; preds = %lor.lhs.false
  store i8 1, i8* %call3, align 1, !tbaa !9
  store i8* %call3, i8** %out, align 8, !tbaa !3
  store i64 1, i64* %outlen, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end6
  %retval.0 = phi i32 [ 1, %if.end6 ], [ -1, %lor.lhs.false ], [ -1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @new_free_cb(%struct.ssl_st* nocapture noundef readnone %s, i32 noundef %ext_type, i32 noundef %context, i8* noundef %out, i8* nocapture noundef readnone %add_arg) #1 {
entry:
  tail call void @CRYPTO_free(i8* noundef %out, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 5504) #16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @new_parse_cb(%struct.ssl_st* noundef %s, i32 noundef %ext_type, i32 noundef %context, i8* nocapture noundef readonly %in, i64 noundef %inlen, %struct.x509_st* nocapture noundef readnone %x, i64 noundef %chainidx, i32* nocapture noundef readnone %al, i8* nocapture noundef readonly %parse_arg) #1 {
entry:
  %0 = bitcast i8* %parse_arg to i32*
  %call = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool.not = icmp eq i32 %call, 0
  %clntparsenewcb.srvparsenewcb = select i1 %tobool.not, i32* @clntparsenewcb, i32* @srvparsenewcb
  %1 = load i32, i32* %clntparsenewcb.srvparsenewcb, align 4, !tbaa !7
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, i32* %clntparsenewcb.srvparsenewcb, align 4, !tbaa !7
  %2 = load i32, i32* %0, align 4, !tbaa !7
  %call2 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %cmp = icmp ne i32 %2, %call2
  %cmp3 = icmp ne i64 %inlen, 1
  %or.cond = or i1 %cmp3, %cmp
  br i1 %or.cond, label %cleanup, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %entry
  %3 = load i8, i8* %in, align 1, !tbaa !9
  %cmp5.not = icmp eq i8 %3, 1
  %spec.select = select i1 %cmp5.not, i32 1, i32 -1
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false4, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ %spec.select, %lor.lhs.false4 ]
  ret i32 %retval.0
}

declare dso_local i32 @SSL_CTX_add_server_custom_ext(%struct.ssl_ctx_st* noundef, i32 noundef, i32 (%struct.ssl_st*, i32, i8**, i64*, i32*, i8*)* noundef, void (%struct.ssl_st*, i32, i8*, i8*)* noundef, i8* noundef, i32 (%struct.ssl_st*, i32, i8*, i64, i32*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @sni_cb(%struct.ssl_st* noundef %s, i32* nocapture noundef writeonly %al, i8* noundef %arg) #1 {
entry:
  %0 = bitcast i8* %arg to %struct.ssl_ctx_st*
  %call = tail call %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* noundef %s, %struct.ssl_ctx_st* noundef %0) #16
  %cmp = icmp eq %struct.ssl_ctx_st* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 80, i32* %al, align 4, !tbaa !7
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @snicb, align 4, !tbaa !7
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @snicb, align 4, !tbaa !7
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 2, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

declare dso_local i32 @SSL_is_server(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i8* @CRYPTO_malloc(i64 noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* noundef, %struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_CTX_clear_options(%struct.ssl_ctx_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_stateless(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_stateless_cookie_generate_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i64*)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @generate_stateless_cookie_callback(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef %cookie, i64* nocapture noundef writeonly %cookie_len) #1 {
entry:
  %temp = alloca i32, align 4
  %0 = bitcast i32* %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  call fastcc void @generate_cookie_callback(i8* noundef %cookie, i32* noundef nonnull %temp) #18
  %1 = load i32, i32* %temp, align 4, !tbaa !7
  %conv = zext i32 %1 to i64
  store i64 %conv, i64* %cookie_len, align 8, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 1
}

declare dso_local void @SSL_CTX_set_stateless_cookie_verify_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i64)* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline nounwind readonly uwtable willreturn
define internal i32 @verify_stateless_cookie_callback(%struct.ssl_st* nocapture noundef readnone %ssl, i8* noundef readonly %cookie, i64 noundef %cookie_len) #12 {
entry:
  %conv = trunc i64 %cookie_len to i32
  %call = tail call fastcc i32 @verify_cookie_callback(i8* noundef %cookie, i32 noundef %conv) #18
  ret i32 %call
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @generate_cookie_callback(i8* noundef %cookie, i32* nocapture noundef writeonly %cookie_len) unnamed_addr #1 {
entry:
  %call = tail call i8* @memcpy(i8* noundef %cookie, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @cookie_magic_value, i64 0, i64 0), i64 noundef 12) #16
  store i32 12, i32* %cookie_len, align 4, !tbaa !7
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline nounwind readonly uwtable willreturn
define internal fastcc i32 @verify_cookie_callback(i8* noundef readonly %cookie, i32 noundef %cookie_len) unnamed_addr #12 {
entry:
  %cmp = icmp eq i32 %cookie_len, 12
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @memcmp(i8* noundef %cookie, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @cookie_magic_value, i64 0, i64 0), i64 noundef 12) #17
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true ]
  ret i32 %retval.0
}

declare dso_local void @SSL_CTX_set_post_handshake_auth(%struct.ssl_ctx_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_key_update(%struct.ssl_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_use_serverinfo_ex(%struct.ssl_ctx_st* noundef, i32 noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_use_serverinfo(%struct.ssl_ctx_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_export_keying_material(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @test_mem_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_export_keying_material_early(%struct.ssl_st* noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @BIO_new_bio_pair(%struct.bio_st** noundef, i64 noundef, %struct.bio_st** noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i64 @ERR_peek_error() local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_tlsext_max_fragment_length(%struct.ssl_ctx_st* noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @get_MFL_from_client_hello(%struct.bio_st* noundef %bio, i32* nocapture noundef writeonly %mfl_codemfl_code) unnamed_addr #1 {
entry:
  %data = alloca i8*, align 8
  %pkt = alloca %struct.PACKET, align 8
  %pkt2 = alloca %struct.PACKET, align 8
  %pkt3 = alloca %struct.PACKET, align 8
  %MFL_code = alloca i32, align 4
  %type = alloca i32, align 4
  %0 = bitcast i8** %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  %1 = bitcast %struct.PACKET* %pkt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #19
  %2 = bitcast %struct.PACKET* %pkt2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #19
  %3 = bitcast %struct.PACKET* %pkt3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #19
  %4 = bitcast i32* %MFL_code to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19
  store i32 0, i32* %MFL_code, align 4, !tbaa !7
  %5 = bitcast i32* %type to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19
  store i32 0, i32* %type, align 4, !tbaa !7
  %call = call i64 @BIO_ctrl(%struct.bio_st* noundef %bio, i32 noundef 3, i64 noundef 0, i8* noundef nonnull %0) #16
  %conv = trunc i64 %call to i32
  %call1 = call i32 @test_uint_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6517, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.664, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv, i32 noundef 0) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call i8* @memset(i8* noundef nonnull %1, i32 noundef 0, i64 noundef 16) #16
  %call3 = call i8* @memset(i8* noundef nonnull %2, i32 noundef 0, i64 noundef 16) #16
  %call4 = call i8* @memset(i8* noundef nonnull %3, i32 noundef 0, i64 noundef 16) #16
  %call5 = call i32 @test_long_gt(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6524, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.665, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i64 noundef %call, i64 noundef 0) #16
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8*, i8** %data, align 8, !tbaa !3
  %call7 = call fastcc i32 @PACKET_buf_init(%struct.PACKET* noundef nonnull %pkt, i8* noundef %6, i64 noundef %call) #18
  %cmp = icmp ne i32 %call7, 0
  %conv8 = zext i1 %cmp to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6525, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.666, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %cleanup, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %call12 = call fastcc i32 @PACKET_forward(%struct.PACKET* noundef nonnull %pkt, i64 noundef 5) #18
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %cleanup, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %call15 = call fastcc i32 @PACKET_forward(%struct.PACKET* noundef nonnull %pkt, i64 noundef 4) #18
  %cmp16 = icmp ne i32 %call15, 0
  %conv17 = zext i1 %cmp16 to i32
  %call18 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6529, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.667, i64 0, i64 0), i32 noundef %conv17) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %cleanup, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %call21 = call fastcc i32 @PACKET_forward(%struct.PACKET* noundef nonnull %pkt, i64 noundef 34) #18
  %cmp22 = icmp ne i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  %call24 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6532, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.668, i64 0, i64 0), i32 noundef %conv23) #16
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %cleanup, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %call27 = call fastcc i32 @PACKET_get_length_prefixed_1(%struct.PACKET* noundef nonnull %pkt, %struct.PACKET* noundef nonnull %pkt2) #18
  %cmp28 = icmp ne i32 %call27, 0
  %conv29 = zext i1 %cmp28 to i32
  %call30 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6534, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.669, i64 0, i64 0), i32 noundef %conv29) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %cleanup, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %call33 = call fastcc i32 @PACKET_get_length_prefixed_2(%struct.PACKET* noundef nonnull %pkt, %struct.PACKET* noundef nonnull %pkt2) #18
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6536, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.670, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %cleanup, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %call39 = call fastcc i32 @PACKET_get_length_prefixed_1(%struct.PACKET* noundef nonnull %pkt, %struct.PACKET* noundef nonnull %pkt2) #18
  %cmp40 = icmp ne i32 %call39, 0
  %conv41 = zext i1 %cmp40 to i32
  %call42 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6538, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.669, i64 0, i64 0), i32 noundef %conv41) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %cleanup, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %lor.lhs.false38
  %call45 = call fastcc i32 @PACKET_as_length_prefixed_2(%struct.PACKET* noundef nonnull %pkt, %struct.PACKET* noundef nonnull %pkt2) #18
  %cmp46 = icmp ne i32 %call45, 0
  %conv47 = zext i1 %cmp46 to i32
  %call48 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6540, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.671, i64 0, i64 0), i32 noundef %conv47) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %cleanup, label %while.cond

while.cond:                                       ; preds = %lor.lhs.false44, %if.end66
  %call52 = call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef nonnull %pkt2) #18
  %tobool53.not = icmp eq i64 %call52, 0
  br i1 %tobool53.not, label %cleanup, label %while.body

while.body:                                       ; preds = %while.cond
  %call54 = call fastcc i32 @PACKET_get_net_2(%struct.PACKET* noundef nonnull %pkt2, i32* noundef nonnull %type) #18
  %cmp55 = icmp ne i32 %call54, 0
  %conv56 = zext i1 %cmp55 to i32
  %call57 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6545, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.672, i64 0, i64 0), i32 noundef %conv56) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %cleanup, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %while.body
  %call60 = call fastcc i32 @PACKET_get_length_prefixed_2(%struct.PACKET* noundef nonnull %pkt2, %struct.PACKET* noundef nonnull %pkt3) #18
  %cmp61 = icmp ne i32 %call60, 0
  %conv62 = zext i1 %cmp61 to i32
  %call63 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6546, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.673, i64 0, i64 0), i32 noundef %conv62) #16
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %cleanup, label %if.end66

if.end66:                                         ; preds = %lor.lhs.false59
  %7 = load i32, i32* %type, align 4, !tbaa !7
  %cmp67 = icmp eq i32 %7, 1
  br i1 %cmp67, label %if.then69, label %while.cond, !llvm.loop !57

if.then69:                                        ; preds = %if.end66
  %call70 = call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef nonnull %pkt3) #18
  %conv71 = trunc i64 %call70 to i32
  %call72 = call i32 @test_uint_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6550, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.674, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv71, i32 noundef 0) #16
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %cleanup, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %if.then69
  %call75 = call fastcc i32 @PACKET_get_1(%struct.PACKET* noundef nonnull %pkt3, i32* noundef nonnull %MFL_code) #18
  %cmp76 = icmp ne i32 %call75, 0
  %conv77 = zext i1 %cmp76 to i32
  %call78 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6551, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.675, i64 0, i64 0), i32 noundef %conv77) #16
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %cleanup, label %if.end81

if.end81:                                         ; preds = %lor.lhs.false74
  %8 = load i32, i32* %MFL_code, align 4, !tbaa !7
  store i32 %8, i32* %mfl_codemfl_code, align 4, !tbaa !7
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false59, %while.body, %while.cond, %entry, %lor.lhs.false44, %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false26, %lor.lhs.false20, %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false, %if.end, %lor.lhs.false74, %if.then69, %if.end81
  %retval.0 = phi i32 [ 1, %if.end81 ], [ 0, %if.then69 ], [ 0, %lor.lhs.false74 ], [ 0, %if.end ], [ 0, %lor.lhs.false ], [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false20 ], [ 0, %lor.lhs.false26 ], [ 0, %lor.lhs.false32 ], [ 0, %lor.lhs.false38 ], [ 0, %lor.lhs.false44 ], [ 0, %entry ], [ 0, %while.cond ], [ 0, %while.body ], [ 0, %lor.lhs.false59 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local i32 @test_uint_gt(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @test_long_gt(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc i32 @PACKET_buf_init(%struct.PACKET* nocapture noundef writeonly %pkt, i8* noundef %buf, i64 noundef %len) unnamed_addr #9 {
entry:
  %cmp = icmp slt i64 %len, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 0
  store i8* %buf, i8** %curr, align 8, !tbaa !58
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 1
  store i64 %len, i64* %remaining, align 8, !tbaa !60
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_forward(%struct.PACKET* nocapture noundef %pkt, i64 noundef %len) unnamed_addr #7 {
entry:
  %call = tail call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef %pkt) #18
  %cmp = icmp ult i64 %call, %len
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call fastcc void @packet_forward(%struct.PACKET* noundef %pkt, i64 noundef %len) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_get_length_prefixed_1(%struct.PACKET* nocapture noundef %pkt, %struct.PACKET* nocapture noundef writeonly %subpkt) unnamed_addr #13 {
entry:
  %length = alloca i32, align 4
  %data = alloca i8*, align 8
  %tmp = alloca %struct.PACKET, align 8
  %0 = bitcast i32* %length to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  %1 = bitcast i8** %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %2 = bitcast %struct.PACKET* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #19
  %3 = bitcast %struct.PACKET* %pkt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %2, i8* noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !61
  %call = call fastcc i32 @PACKET_get_1(%struct.PACKET* noundef nonnull %tmp, i32* noundef nonnull %length) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %length, align 4, !tbaa !7
  %conv = zext i32 %4 to i64
  %call1 = call fastcc i32 @PACKET_get_bytes(%struct.PACKET* noundef nonnull %tmp, i8** noundef nonnull %data, i64 noundef %conv) #18
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %3, i8* noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false), !tbaa.struct !61
  %5 = load i8*, i8** %data, align 8, !tbaa !3
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 0
  store i8* %5, i8** %curr, align 8, !tbaa !58
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 1
  store i64 %conv, i64* %remaining, align 8, !tbaa !60
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_get_length_prefixed_2(%struct.PACKET* nocapture noundef %pkt, %struct.PACKET* nocapture noundef writeonly %subpkt) unnamed_addr #13 {
entry:
  %length = alloca i32, align 4
  %data = alloca i8*, align 8
  %tmp = alloca %struct.PACKET, align 8
  %0 = bitcast i32* %length to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  %1 = bitcast i8** %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %2 = bitcast %struct.PACKET* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #19
  %3 = bitcast %struct.PACKET* %pkt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %2, i8* noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !61
  %call = call fastcc i32 @PACKET_get_net_2(%struct.PACKET* noundef nonnull %tmp, i32* noundef nonnull %length) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %length, align 4, !tbaa !7
  %conv = zext i32 %4 to i64
  %call1 = call fastcc i32 @PACKET_get_bytes(%struct.PACKET* noundef nonnull %tmp, i8** noundef nonnull %data, i64 noundef %conv) #18
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %3, i8* noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false), !tbaa.struct !61
  %5 = load i8*, i8** %data, align 8, !tbaa !3
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 0
  store i8* %5, i8** %curr, align 8, !tbaa !58
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 1
  store i64 %conv, i64* %remaining, align 8, !tbaa !60
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_as_length_prefixed_2(%struct.PACKET* nocapture noundef %pkt, %struct.PACKET* nocapture noundef writeonly %subpkt) unnamed_addr #13 {
entry:
  %length = alloca i32, align 4
  %data = alloca i8*, align 8
  %tmp = alloca %struct.PACKET, align 8
  %0 = bitcast i32* %length to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #19
  %1 = bitcast i8** %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  %2 = bitcast %struct.PACKET* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #19
  %3 = bitcast %struct.PACKET* %pkt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %2, i8* noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !61
  %call = call fastcc i32 @PACKET_get_net_2(%struct.PACKET* noundef nonnull %tmp, i32* noundef nonnull %length) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %length, align 4, !tbaa !7
  %conv = zext i32 %4 to i64
  %call1 = call fastcc i32 @PACKET_get_bytes(%struct.PACKET* noundef nonnull %tmp, i8** noundef nonnull %data, i64 noundef %conv) #18
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %cleanup, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef nonnull %tmp) #18
  %cmp.not = icmp eq i64 %call4, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %3, i8* noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false), !tbaa.struct !61
  %5 = load i8*, i8** %data, align 8, !tbaa !3
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 0
  store i8* %5, i8** %curr, align 8, !tbaa !58
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %subpkt, i64 0, i32 1
  store i64 %conv, i64* %remaining, align 8, !tbaa !60
  br label %cleanup

cleanup:                                          ; preds = %entry, %lor.lhs.false, %lor.lhs.false3, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %lor.lhs.false3 ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @PACKET_remaining(%struct.PACKET* nocapture noundef readonly %pkt) unnamed_addr #14 {
entry:
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 1
  %0 = load i64, i64* %remaining, align 8, !tbaa !60
  ret i64 %0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_get_net_2(%struct.PACKET* nocapture noundef %pkt, i32* nocapture noundef writeonly %data) unnamed_addr #7 {
entry:
  %call = tail call fastcc i32 @PACKET_peek_net_2(%struct.PACKET* noundef %pkt, i32* noundef %data) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call fastcc void @packet_forward(%struct.PACKET* noundef %pkt, i64 noundef 2) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare dso_local i32 @test_uint_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_get_1(%struct.PACKET* nocapture noundef %pkt, i32* nocapture noundef writeonly %data) unnamed_addr #7 {
entry:
  %call = tail call fastcc i32 @PACKET_peek_1(%struct.PACKET* noundef %pkt, i32* noundef %data) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call fastcc void @packet_forward(%struct.PACKET* noundef %pkt, i64 noundef 1) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @packet_forward(%struct.PACKET* nocapture noundef %pkt, i64 noundef %len) unnamed_addr #7 {
entry:
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 0
  %0 = load i8*, i8** %curr, align 8, !tbaa !58
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %len
  store i8* %add.ptr, i8** %curr, align 8, !tbaa !58
  %remaining = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 1
  %1 = load i64, i64* %remaining, align 8, !tbaa !60
  %sub = sub i64 %1, %len
  store i64 %sub, i64* %remaining, align 8, !tbaa !60
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_get_bytes(%struct.PACKET* nocapture noundef %pkt, i8** nocapture noundef writeonly %data, i64 noundef %len) unnamed_addr #7 {
entry:
  %call = tail call fastcc i32 @PACKET_peek_bytes(%struct.PACKET* noundef %pkt, i8** noundef %data, i64 noundef %len) #18
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call fastcc void @packet_forward(%struct.PACKET* noundef %pkt, i64 noundef %len) #18
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_peek_bytes(%struct.PACKET* nocapture noundef readonly %pkt, i8** nocapture noundef writeonly %data, i64 noundef %len) unnamed_addr #7 {
entry:
  %call = tail call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef %pkt) #18
  %cmp = icmp ult i64 %call, %len
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 0
  %0 = load i8*, i8** %curr, align 8, !tbaa !58
  store i8* %0, i8** %data, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_peek_net_2(%struct.PACKET* nocapture noundef readonly %pkt, i32* nocapture noundef writeonly %data) unnamed_addr #7 {
entry:
  %call = tail call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef %pkt) #18
  %cmp = icmp ult i64 %call, 2
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 0
  %0 = load i8*, i8** %curr, align 8, !tbaa !58
  %1 = load i8, i8* %0, align 1, !tbaa !9
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 8
  store i32 %shl, i32* %data, align 4, !tbaa !7
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !9
  %conv2 = zext i8 %2 to i32
  %or = or i32 %shl, %conv2
  store i32 %or, i32* %data, align 4, !tbaa !7
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc i32 @PACKET_peek_1(%struct.PACKET* nocapture noundef readonly %pkt, i32* nocapture noundef writeonly %data) unnamed_addr #7 {
entry:
  %call = tail call fastcc i64 @PACKET_remaining(%struct.PACKET* noundef %pkt) #18
  %tobool.not = icmp eq i64 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %curr = getelementptr inbounds %struct.PACKET, %struct.PACKET* %pkt, i64 0, i32 0
  %0 = load i8*, i8** %curr, align 8, !tbaa !58
  %1 = load i8, i8* %0, align 1, !tbaa !9
  %conv = zext i8 %1 to i32
  store i32 %conv, i32* %data, align 4, !tbaa !7
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare dso_local %struct.SRP_VBASE_st* @SRP_VBASE_new(i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @create_new_vbase() unnamed_addr #1 {
entry:
  %verifier = alloca %struct.bignum_st*, align 8
  %salt = alloca %struct.bignum_st*, align 8
  %0 = bitcast %struct.bignum_st** %verifier to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.bignum_st* null, %struct.bignum_st** %verifier, align 8, !tbaa !3
  %1 = bitcast %struct.bignum_st** %salt to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.bignum_st* null, %struct.bignum_st** %salt, align 8, !tbaa !3
  %call = tail call %struct.SRP_gN_st* @SRP_get_default_gN(i8* noundef null) #16
  %2 = bitcast %struct.SRP_gN_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6780, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.692, i64 0, i64 0), i8* noundef %2) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %N = getelementptr inbounds %struct.SRP_gN_st, %struct.SRP_gN_st* %call, i64 0, i32 2
  %3 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !tbaa !62
  %g = getelementptr inbounds %struct.SRP_gN_st, %struct.SRP_gN_st* %call, i64 0, i32 1
  %4 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !tbaa !64
  %5 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call2 = call i32 @SRP_create_verifier_BN_ex(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.676, i64 0, i64 0), %struct.bignum_st** noundef nonnull %salt, %struct.bignum_st** noundef nonnull %verifier, %struct.bignum_st* noundef %3, %struct.bignum_st* noundef %4, %struct.ossl_lib_ctx_st* noundef %5, i8* noundef null) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6784, i8* noundef getelementptr inbounds ([92 x i8], [92 x i8]* @.str.693, i64 0, i64 0), i32 noundef %conv) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %end, label %if.end6

if.end6:                                          ; preds = %if.end
  %call7 = call i8* @CRYPTO_zalloc(i64 noundef 48, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6787) #16
  %6 = bitcast i8* %call7 to %struct.SRP_user_pwd_st*
  %call8 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6788, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.694, i64 0, i64 0), i8* noundef %call7) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %end, label %if.end11

if.end11:                                         ; preds = %if.end6
  %7 = bitcast %struct.bignum_st** %g to <2 x %struct.bignum_st*>*
  %8 = load <2 x %struct.bignum_st*>, <2 x %struct.bignum_st*>* %7, align 8, !tbaa !3
  %g15 = getelementptr inbounds i8, i8* %call7, i64 24
  %9 = bitcast i8* %g15 to <2 x %struct.bignum_st*>*
  store <2 x %struct.bignum_st*> %8, <2 x %struct.bignum_st*>* %9, align 8, !tbaa !3
  %call16 = call i8* @CRYPTO_strdup(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6793) #16
  %id = bitcast i8* %call7 to i8**
  store i8* %call16, i8** %id, align 8, !tbaa !65
  %call18 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6794, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.695, i64 0, i64 0), i8* noundef %call16) #16
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %end, label %if.end21

if.end21:                                         ; preds = %if.end11
  %10 = load %struct.bignum_st*, %struct.bignum_st** %verifier, align 8, !tbaa !3
  %v = getelementptr inbounds i8, i8* %call7, i64 16
  %11 = bitcast i8* %v to %struct.bignum_st**
  store %struct.bignum_st* %10, %struct.bignum_st** %11, align 8, !tbaa !67
  %12 = load %struct.bignum_st*, %struct.bignum_st** %salt, align 8, !tbaa !3
  %s = getelementptr inbounds i8, i8* %call7, i64 8
  %13 = bitcast i8* %s to %struct.bignum_st**
  store %struct.bignum_st* %12, %struct.bignum_st** %13, align 8, !tbaa !68
  store %struct.bignum_st* null, %struct.bignum_st** %salt, align 8, !tbaa !3
  store %struct.bignum_st* null, %struct.bignum_st** %verifier, align 8, !tbaa !3
  %14 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  %users_pwd = getelementptr inbounds %struct.SRP_VBASE_st, %struct.SRP_VBASE_st* %14, i64 0, i32 0
  %15 = load %struct.stack_st_SRP_user_pwd*, %struct.stack_st_SRP_user_pwd** %users_pwd, align 8, !tbaa !69
  %call22 = call fastcc %struct.stack_st* @ossl_check_SRP_user_pwd_sk_type(%struct.stack_st_SRP_user_pwd* noundef %15) #18
  %call24 = call i32 @OPENSSL_sk_insert(%struct.stack_st* noundef %call22, i8* noundef nonnull %call7, i32 noundef 0) #16
  %cmp25 = icmp eq i32 %call24, 0
  %spec.select = select i1 %cmp25, %struct.SRP_user_pwd_st* %6, %struct.SRP_user_pwd_st* null
  %not.cmp25 = xor i1 %cmp25, true
  %spec.select1 = zext i1 %not.cmp25 to i32
  br label %end

end:                                              ; preds = %if.end21, %if.end11, %if.end6, %if.end, %entry
  %user_pwd.0 = phi %struct.SRP_user_pwd_st* [ %6, %if.end11 ], [ %6, %if.end6 ], [ null, %if.end ], [ null, %entry ], [ %spec.select, %if.end21 ]
  %ret.0 = phi i32 [ 0, %if.end11 ], [ 0, %if.end6 ], [ 0, %if.end ], [ 0, %entry ], [ %spec.select1, %if.end21 ]
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* noundef %user_pwd.0) #16
  %16 = load %struct.bignum_st*, %struct.bignum_st** %salt, align 8, !tbaa !3
  call void @BN_free(%struct.bignum_st* noundef %16) #16
  %17 = load %struct.bignum_st*, %struct.bignum_st** %verifier, align 8, !tbaa !3
  call void @BN_free(%struct.bignum_st* noundef %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %ret.0
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @create_new_vfile(i8* noundef %filename) unnamed_addr #1 {
entry:
  %call = tail call i8* @CRYPTO_zalloc(i64 noundef 56, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6717) #16
  %0 = bitcast i8* %call to i8**
  %call1 = tail call %struct.bio_st* @BIO_new_mem_buf(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.696, i64 0, i64 0), i32 noundef 0) #16
  %1 = bitcast %struct.bio_st* %call1 to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6723, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.697, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6723, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.698, i64 0, i64 0), i8* noundef %call) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %end, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 16
  %2 = bitcast i8* %arrayidx to i8**
  %arrayidx5 = getelementptr inbounds i8, i8* %call, i64 8
  %3 = bitcast i8* %arrayidx5 to i8**
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call6 = tail call i8* @SRP_create_verifier_ex(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.676, i64 0, i64 0), i8** noundef nonnull %2, i8** noundef nonnull %3, i8* noundef null, i8* noundef null, %struct.ossl_lib_ctx_st* noundef %4, i8* noundef null) #16
  %call7 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6728, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.699, i64 0, i64 0), i8* noundef %call6) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %if.end10

if.end10:                                         ; preds = %if.end
  %call11 = tail call %struct.txt_db_st* @TXT_DB_read(%struct.bio_st* noundef %call1, i32 noundef 6) #16
  %5 = bitcast %struct.txt_db_st* %call11 to i8*
  %call12 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6736, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.700, i64 0, i64 0), i8* noundef %5) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end15

if.end15:                                         ; preds = %if.end10
  %call16 = tail call %struct.bio_st* @BIO_new_file(i8* noundef %filename, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.701, i64 0, i64 0)) #16
  %6 = bitcast %struct.bio_st* %call16 to i8*
  %call17 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6740, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.702, i64 0, i64 0), i8* noundef %6) #16
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %end, label %if.end20

if.end20:                                         ; preds = %if.end15
  %call21 = tail call i8* @CRYPTO_strdup(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6743) #16
  %arrayidx22 = getelementptr inbounds i8, i8* %call, i64 24
  %7 = bitcast i8* %arrayidx22 to i8**
  store i8* %call21, i8** %7, align 8, !tbaa !3
  %call23 = tail call i8* @CRYPTO_strdup(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.703, i64 0, i64 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6744) #16
  store i8* %call23, i8** %0, align 8, !tbaa !3
  %call25 = tail call i8* @CRYPTO_strdup(i8* noundef %call6, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6745) #16
  %arrayidx26 = getelementptr inbounds i8, i8* %call, i64 32
  %8 = bitcast i8* %arrayidx26 to i8**
  store i8* %call25, i8** %8, align 8, !tbaa !3
  %9 = load i8*, i8** %7, align 8, !tbaa !3
  %call28 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6747, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.704, i64 0, i64 0), i8* noundef %9) #16
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %for.body.preheader, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %if.end20
  %10 = load i8*, i8** %0, align 8, !tbaa !3
  %call32 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6748, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.705, i64 0, i64 0), i8* noundef %10) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %for.body.preheader, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %11 = load i8*, i8** %8, align 8, !tbaa !3
  %call36 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6749, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.706, i64 0, i64 0), i8* noundef %11) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %for.body.preheader, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %call39 = tail call i32 @TXT_DB_insert(%struct.txt_db_st* noundef %call11, i8** noundef nonnull %0) #16
  %cmp = icmp ne i32 %call39, 0
  %conv = zext i1 %cmp to i32
  %call40 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6750, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.707, i64 0, i64 0), i32 noundef %conv) #16
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %for.body.preheader, label %end.thread

end.thread:                                       ; preds = %lor.lhs.false38
  %call44 = tail call i64 @TXT_DB_write(%struct.bio_st* noundef %call16, %struct.txt_db_st* noundef %call11) #16
  %tobool45.not = icmp ne i64 %call44, 0
  %spec.select = zext i1 %tobool45.not to i32
  br label %if.end54

end:                                              ; preds = %if.end15, %if.end10, %if.end, %entry, %lor.lhs.false
  %db.0 = phi %struct.txt_db_st* [ %call11, %if.end15 ], [ %call11, %if.end10 ], [ null, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ]
  %out.0 = phi %struct.bio_st* [ %call16, %if.end15 ], [ null, %if.end10 ], [ null, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ]
  %cmp48.not = icmp eq i8* %call, null
  br i1 %cmp48.not, label %if.end54, label %for.body.preheader

for.body.preheader:                               ; preds = %lor.lhs.false38, %lor.lhs.false34, %lor.lhs.false30, %if.end20, %end
  %out.016 = phi %struct.bio_st* [ %out.0, %end ], [ %call16, %if.end20 ], [ %call16, %lor.lhs.false30 ], [ %call16, %lor.lhs.false34 ], [ %call16, %lor.lhs.false38 ]
  %db.015 = phi %struct.txt_db_st* [ %db.0, %end ], [ %call11, %if.end20 ], [ %call11, %lor.lhs.false30 ], [ %call11, %lor.lhs.false34 ], [ %call11, %lor.lhs.false38 ]
  %12 = load i8*, i8** %0, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %12, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  %arrayidx53.1 = getelementptr inbounds i8, i8* %call, i64 8
  %13 = bitcast i8* %arrayidx53.1 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %14, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  %arrayidx53.2 = getelementptr inbounds i8, i8* %call, i64 16
  %15 = bitcast i8* %arrayidx53.2 to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %16, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  %arrayidx53.3 = getelementptr inbounds i8, i8* %call, i64 24
  %17 = bitcast i8* %arrayidx53.3 to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %18, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  %arrayidx53.4 = getelementptr inbounds i8, i8* %call, i64 32
  %19 = bitcast i8* %arrayidx53.4 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %20, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  %arrayidx53.5 = getelementptr inbounds i8, i8* %call, i64 40
  %21 = bitcast i8* %arrayidx53.5 to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !3
  tail call void @CRYPTO_free(i8* noundef %22, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6762) #16
  br label %if.end54

if.end54:                                         ; preds = %for.body.preheader, %end.thread, %end
  %out.09 = phi %struct.bio_st* [ %call16, %end.thread ], [ %out.0, %end ], [ %out.016, %for.body.preheader ]
  %ret.08 = phi i32 [ %spec.select, %end.thread ], [ 0, %end ], [ 0, %for.body.preheader ]
  %db.07 = phi %struct.txt_db_st* [ %call11, %end.thread ], [ %db.0, %end ], [ %db.015, %for.body.preheader ]
  %23 = phi i8* [ null, %end.thread ], [ null, %end ], [ %call, %for.body.preheader ]
  tail call void @CRYPTO_free(i8* noundef %23, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6764) #16
  %call55 = tail call i32 @BIO_free(%struct.bio_st* noundef %call1) #16
  %call56 = tail call i32 @BIO_free(%struct.bio_st* noundef %out.09) #16
  tail call void @TXT_DB_free(%struct.txt_db_st* noundef %db.07) #16
  ret i32 %ret.08
}

declare dso_local i32 @SRP_VBASE_init(%struct.SRP_VBASE_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_srp_username_callback(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i32*, i8*)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @ssl_srp_cb(%struct.ssl_st* noundef %s, i32* nocapture noundef writeonly %ad, i8* nocapture noundef readnone %arg) #1 {
entry:
  %call = tail call i8* @SSL_get_srp_username(%struct.ssl_st* noundef %s) #16
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %err.sink.split, label %if.end

if.end:                                           ; preds = %entry
  %0 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** @vbase, align 8, !tbaa !3
  %call1 = tail call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* noundef %0, i8* noundef nonnull %call) #16
  %cmp2 = icmp eq %struct.SRP_user_pwd_st* %call1, null
  br i1 %cmp2, label %err.sink.split, label %if.end4

if.end4:                                          ; preds = %if.end
  %N = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %call1, i64 0, i32 4
  %1 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !tbaa !71
  %g = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %call1, i64 0, i32 3
  %2 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !tbaa !72
  %s5 = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %call1, i64 0, i32 1
  %3 = load %struct.bignum_st*, %struct.bignum_st** %s5, align 8, !tbaa !68
  %v = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %call1, i64 0, i32 2
  %4 = load %struct.bignum_st*, %struct.bignum_st** %v, align 8, !tbaa !67
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %call1, i64 0, i32 5
  %5 = load i8*, i8** %info, align 8, !tbaa !73
  %call6 = tail call i32 @SSL_set_srp_server_param(%struct.ssl_st* noundef %s, %struct.bignum_st* noundef %1, %struct.bignum_st* noundef %2, %struct.bignum_st* noundef %3, %struct.bignum_st* noundef %4, i8* noundef %5) #16
  %cmp7 = icmp slt i32 %call6, 1
  br i1 %cmp7, label %err.sink.split, label %err

err.sink.split:                                   ; preds = %if.end4, %if.end, %entry
  %user.0.ph = phi %struct.SRP_user_pwd_st* [ null, %entry ], [ null, %if.end ], [ %call1, %if.end4 ]
  store i32 80, i32* %ad, align 4, !tbaa !7
  br label %err

err:                                              ; preds = %err.sink.split, %if.end4
  %ret.0 = phi i32 [ 0, %if.end4 ], [ 2, %err.sink.split ]
  %user.0 = phi %struct.SRP_user_pwd_st* [ %call1, %if.end4 ], [ %user.0.ph, %err.sink.split ]
  tail call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* noundef %user.0) #16
  ret i32 %ret.0
}

declare dso_local i32 @SSL_CTX_set_srp_username(%struct.ssl_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_srp_password(%struct.ssl_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @SRP_VBASE_free(%struct.SRP_VBASE_st* noundef) local_unnamed_addr #3

declare dso_local %struct.SRP_gN_st* @SRP_get_default_gN(i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SRP_create_verifier_BN_ex(i8* noundef, i8* noundef, %struct.bignum_st** noundef, %struct.bignum_st** noundef, %struct.bignum_st* noundef, %struct.bignum_st* noundef, %struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i8* @CRYPTO_zalloc(i64 noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i8* @CRYPTO_strdup(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @OPENSSL_sk_insert(%struct.stack_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_SRP_user_pwd_sk_type(%struct.stack_st_SRP_user_pwd* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_SRP_user_pwd* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* noundef) local_unnamed_addr #3

declare dso_local void @BN_free(%struct.bignum_st* noundef) local_unnamed_addr #3

declare dso_local %struct.bio_st* @BIO_new_mem_buf(i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i8* @SRP_create_verifier_ex(i8* noundef, i8* noundef, i8** noundef, i8** noundef, i8* noundef, i8* noundef, %struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local %struct.txt_db_st* @TXT_DB_read(%struct.bio_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @TXT_DB_insert(%struct.txt_db_st* noundef, i8** noundef) local_unnamed_addr #3

declare dso_local i64 @TXT_DB_write(%struct.bio_st* noundef, %struct.txt_db_st* noundef) local_unnamed_addr #3

declare dso_local void @TXT_DB_free(%struct.txt_db_st* noundef) local_unnamed_addr #3

declare dso_local i8* @SSL_get_srp_username(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_set_srp_server_param(%struct.ssl_st* noundef, %struct.bignum_st* noundef, %struct.bignum_st* noundef, %struct.bignum_st* noundef, %struct.bignum_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @SSL_set_info_callback(%struct.ssl_st* noundef, void (%struct.ssl_st*, i32, i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal void @sslapi_info_callback(%struct.ssl_st* noundef %s, i32 noundef %where, i32 noundef %ret) #1 {
entry:
  %0 = load i32, i32* @info_cb_offset, align 4, !tbaa !7
  %idxprom = sext i32 %0 to i64
  %cmp = icmp eq i32 %ret, 0
  %conv = zext i1 %cmp to i32
  %call = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 6998, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.711, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup.sink.split, label %if.end

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool4 = icmp ne i32 %call3, 0
  %and = and i32 %where, 4096
  %cmp5 = icmp ne i32 %and, 0
  %1 = and i1 %cmp5, %tobool4
  %land.ext = zext i1 %1 to i32
  %call9 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7007, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.712, i64 0, i64 0), i32 noundef %land.ext) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %cleanup.sink.split, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call11 = tail call i32 @SSL_is_server(%struct.ssl_st* noundef %s) #16
  %tobool12.not = icmp eq i32 %call11, 0
  %and14 = and i32 %where, 8192
  %cmp15 = icmp ne i32 %and14, 0
  %2 = and i1 %cmp15, %tobool12.not
  %land.ext18 = zext i1 %2 to i32
  %call21 = tail call i32 @test_false(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7008, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.713, i64 0, i64 0), i32 noundef %land.ext18) #16
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %cleanup.sink.split, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* @info_cb_this_state, align 4, !tbaa !7
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @info_cb_this_state, align 4, !tbaa !7
  %idxprom24 = sext i32 %inc to i64
  %where26 = getelementptr inbounds [7 x [60 x %struct.info_cb_states_st]], [7 x [60 x %struct.info_cb_states_st]]* bitcast (<{ <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [34 x %struct.info_cb_states_st], [26 x %struct.info_cb_states_st] }>, <{ [39 x %struct.info_cb_states_st], [21 x %struct.info_cb_states_st] }>, <{ [18 x %struct.info_cb_states_st], [42 x %struct.info_cb_states_st] }>, <{ [21 x %struct.info_cb_states_st], [39 x %struct.info_cb_states_st] }>, [60 x %struct.info_cb_states_st] }>* @info_cb_states to [7 x [60 x %struct.info_cb_states_st]]*), i64 0, i64 %idxprom, i64 %idxprom24, i32 0
  %4 = load i32, i32* %where26, align 16, !tbaa !74
  %call27 = tail call i32 @test_int_ne(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7009, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.714, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %4, i32 noundef 0) #16
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %cleanup.sink.split, label %if.end30

if.end30:                                         ; preds = %lor.lhs.false23
  %5 = load i32, i32* @info_cb_this_state, align 4, !tbaa !7
  %idxprom31 = sext i32 %5 to i64
  %where33 = getelementptr inbounds [7 x [60 x %struct.info_cb_states_st]], [7 x [60 x %struct.info_cb_states_st]]* bitcast (<{ <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [34 x %struct.info_cb_states_st], [26 x %struct.info_cb_states_st] }>, <{ [39 x %struct.info_cb_states_st], [21 x %struct.info_cb_states_st] }>, <{ [18 x %struct.info_cb_states_st], [42 x %struct.info_cb_states_st] }>, <{ [21 x %struct.info_cb_states_st], [39 x %struct.info_cb_states_st] }>, [60 x %struct.info_cb_states_st] }>* @info_cb_states to [7 x [60 x %struct.info_cb_states_st]]*), i64 0, i64 %idxprom, i64 %idxprom31, i32 0
  %6 = load i32, i32* %where33, align 16, !tbaa !74
  %and34 = and i32 %6, %where
  %cmp35 = icmp ne i32 %and34, 0
  %conv36 = zext i1 %cmp35 to i32
  %call39 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7015, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.715, i64 0, i64 0), i32 noundef %conv36) #16
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %cleanup.sink.split, label %if.end42

if.end42:                                         ; preds = %if.end30
  %and43 = and i32 %where, 1
  %cmp44.not = icmp eq i32 %and43, 0
  br i1 %cmp44.not, label %if.end53, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end42
  %call46 = tail call i8* @SSL_state_string(%struct.ssl_st* noundef %s) #16
  %7 = load i32, i32* @info_cb_this_state, align 4, !tbaa !7
  %idxprom47 = sext i32 %7 to i64
  %statestr = getelementptr inbounds [7 x [60 x %struct.info_cb_states_st]], [7 x [60 x %struct.info_cb_states_st]]* bitcast (<{ <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [32 x %struct.info_cb_states_st], [28 x %struct.info_cb_states_st] }>, <{ [34 x %struct.info_cb_states_st], [26 x %struct.info_cb_states_st] }>, <{ [39 x %struct.info_cb_states_st], [21 x %struct.info_cb_states_st] }>, <{ [18 x %struct.info_cb_states_st], [42 x %struct.info_cb_states_st] }>, <{ [21 x %struct.info_cb_states_st], [39 x %struct.info_cb_states_st] }>, [60 x %struct.info_cb_states_st] }>* @info_cb_states to [7 x [60 x %struct.info_cb_states_st]]*), i64 0, i64 %idxprom, i64 %idxprom47, i32 1
  %8 = load i8*, i8** %statestr, align 8, !tbaa !76
  %call49 = tail call i32 @strcmp(i8* noundef %call46, i8* noundef %8) #17
  %call50 = tail call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7021, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.716, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call49, i32 noundef 0) #16
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %cleanup.sink.split, label %if.end53

if.end53:                                         ; preds = %land.lhs.true, %if.end42
  %and54 = and i32 %where, 32
  %tobool55.not = icmp eq i32 %and54, 0
  br i1 %tobool55.not, label %cleanup, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %if.end53
  %call57 = tail call i32 @SSL_in_init(%struct.ssl_st* noundef %s) #16
  %cmp58.not = icmp eq i32 %call57, 0
  br i1 %cmp58.not, label %cleanup, label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %land.lhs.true56, %land.lhs.true, %if.end30, %if.end, %lor.lhs.false, %lor.lhs.false23, %entry
  store i1 true, i1* @info_cb_failed, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end53, %land.lhs.true56
  ret void
}

declare dso_local void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* noundef, void (%struct.ssl_st*, i32, i32)* noundef) local_unnamed_addr #3

declare dso_local i8* @SSL_state_string(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_in_init(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_pending(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_has_pending(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @int_test_ssl_get_shared_ciphers(i32 noundef %tst, i32 noundef %clnt) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %buf = alloca [1024 x i8], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %4) #19
  %call = tail call %struct.ossl_lib_ctx_st* @OSSL_LIB_CTX_new() #16
  %5 = bitcast %struct.ossl_lib_ctx_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7330, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.753, i64 0, i64 0), i8* noundef %5) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %tobool2.not = icmp eq i32 %clnt, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %call4 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call5 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %call, i8* noundef null, %struct.ssl_method_st* noundef %call4) #16
  store %struct.ssl_ctx_st* %call5, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %6 = bitcast %struct.ssl_ctx_st* %call5 to i8*
  %call6 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7342, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.754, i64 0, i64 0), i8* noundef %6) #16
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %end, label %if.end16

if.else:                                          ; preds = %if.end
  %call10 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call11 = tail call %struct.ssl_ctx_st* @SSL_CTX_new_ex(%struct.ossl_lib_ctx_st* noundef %call, i8* noundef null, %struct.ssl_method_st* noundef %call10) #16
  store %struct.ssl_ctx_st* %call11, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %7 = bitcast %struct.ssl_ctx_st* %call11 to i8*
  %call12 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7346, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.755, i64 0, i64 0), i8* noundef %7) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %end, label %if.end16

if.end16:                                         ; preds = %if.else, %if.then3
  %8 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call17 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call18 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %idxprom = sext i32 %tst to i64
  %maxprot = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 0
  %9 = load i32, i32* %maxprot, align 8, !tbaa !77
  %10 = load i8*, i8** @cert, align 8, !tbaa !3
  %11 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call19 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %8, %struct.ssl_method_st* noundef %call17, %struct.ssl_method_st* noundef %call18, i32 noundef 769, i32 noundef %9, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %10, i8* noundef %11) #16
  %cmp = icmp ne i32 %call19, 0
  %conv = zext i1 %cmp to i32
  %call20 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7354, i8* noundef getelementptr inbounds ([147 x i8], [147 x i8]* @.str.756, i64 0, i64 0), i32 noundef %conv) #16
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %end, label %if.end23

if.end23:                                         ; preds = %if.end16
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %clntciphers = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 1
  %13 = load i8*, i8** %clntciphers, align 8, !tbaa !79
  %call26 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %12, i8* noundef %13) #16
  %cmp27 = icmp ne i32 %call26, 0
  %conv28 = zext i1 %cmp27 to i32
  %call29 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7358, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.757, i64 0, i64 0), i32 noundef %conv28) #16
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end23
  %cmp33.not.not = icmp eq i32 %tst, 5
  br i1 %cmp33.not.not, label %land.lhs.true, label %lor.lhs.false43

land.lhs.true:                                    ; preds = %lor.lhs.false
  %clnttls13ciphers = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 2
  %14 = load i8*, i8** %clnttls13ciphers, align 8, !tbaa !80
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call38 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %15, i8* noundef %14) #16
  %cmp39 = icmp ne i32 %call38, 0
  %conv40 = zext i1 %cmp39 to i32
  %call41 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7361, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.758, i64 0, i64 0), i32 noundef %conv40) #16
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %srvrciphers = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 3
  %17 = load i8*, i8** %srvrciphers, align 8, !tbaa !81
  %call46 = call i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st* noundef %16, i8* noundef %17) #16
  %cmp47 = icmp ne i32 %call46, 0
  %conv48 = zext i1 %cmp47 to i32
  %call49 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7363, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.759, i64 0, i64 0), i32 noundef %conv48) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false43
  br i1 %cmp33.not.not, label %land.lhs.true56, label %if.end66

land.lhs.true56:                                  ; preds = %lor.lhs.false51
  %srvrtls13ciphers = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 4
  %18 = load i8*, i8** %srvrtls13ciphers, align 8, !tbaa !82
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %call60 = call i32 @SSL_CTX_set_ciphersuites(%struct.ssl_ctx_st* noundef %19, i8* noundef %18) #16
  %cmp61 = icmp ne i32 %call60, 0
  %conv62 = zext i1 %cmp61 to i32
  %call63 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7366, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.760, i64 0, i64 0), i32 noundef %conv62) #16
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %end, label %if.end66

if.end66:                                         ; preds = %land.lhs.true56, %lor.lhs.false51
  %20 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call67 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %20, %struct.ssl_ctx_st* noundef %21, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp68 = icmp ne i32 %call67, 0
  %conv69 = zext i1 %cmp68 to i32
  %call70 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7371, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv69) #16
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %end, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %if.end66
  %22 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %23 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call73 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %22, %struct.ssl_st* noundef %23, i32 noundef 0) #16
  %cmp74 = icmp ne i32 %call73, 0
  %conv75 = zext i1 %cmp74 to i32
  %call76 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7373, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv75) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %end, label %if.end79

if.end79:                                         ; preds = %lor.lhs.false72
  %24 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call80 = call i8* @SSL_get_shared_ciphers(%struct.ssl_st* noundef %24, i8* noundef nonnull %4, i32 noundef 1024) #16
  %call81 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7376, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.761, i64 0, i64 0), i8* noundef %call80) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %if.then93, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.end79
  %.b = load i1, i1* @is_fips, align 4
  %fipsshared = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 6
  %shared = getelementptr inbounds [6 x %struct.anon.7], [6 x %struct.anon.7]* @shared_ciphers_data, i64 0, i64 %idxprom, i32 5
  %cond.in = select i1 %.b, i8** %fipsshared, i8** %shared
  %cond = load i8*, i8** %cond.in, align 8, !tbaa !3
  %call90 = call i32 @strcmp(i8* noundef nonnull %4, i8* noundef %cond) #17
  %call91 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7381, i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.762, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call90, i32 noundef 0) #16
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %if.then93, label %end

if.then93:                                        ; preds = %lor.lhs.false83, %if.end79
  call void (i8*, i32, i8*, ...) @test_info(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7382, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.763, i64 0, i64 0), i8* noundef nonnull %4) #16
  br label %end

end:                                              ; preds = %lor.lhs.false83, %if.end66, %lor.lhs.false72, %if.end23, %land.lhs.true, %lor.lhs.false43, %land.lhs.true56, %if.end16, %if.else, %if.then3, %entry, %if.then93
  %testresult.0 = phi i32 [ 0, %if.then93 ], [ 0, %lor.lhs.false72 ], [ 0, %if.end66 ], [ 0, %land.lhs.true56 ], [ 0, %lor.lhs.false43 ], [ 0, %land.lhs.true ], [ 0, %if.end23 ], [ 0, %if.end16 ], [ 0, %if.then3 ], [ 0, %if.else ], [ 0, %entry ], [ 1, %lor.lhs.false83 ]
  %25 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %25) #16
  %26 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %26) #16
  %27 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %27) #16
  %28 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %28) #16
  call void @OSSL_LIB_CTX_free(%struct.ossl_lib_ctx_st* noundef %call) #16
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local i8* @SSL_get_shared_ciphers(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_session_ticket_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*)* noundef, i32 (%struct.ssl_st*, %struct.ssl_session_st*, i8*, i64, i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @gen_tick_cb(%struct.ssl_st* noundef %s, i8* nocapture noundef readnone %arg) #1 {
entry:
  store i1 true, i1* @gen_tick_called, align 4
  %call = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* noundef %s) #16
  %call1 = tail call i64 @strlen(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.784, i64 0, i64 0)) #17
  %call2 = tail call i32 @SSL_SESSION_set1_ticket_appdata(%struct.ssl_session_st* noundef %call, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.784, i64 0, i64 0), i64 noundef %call1) #16
  ret i32 %call2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dec_tick_cb(%struct.ssl_st* nocapture noundef readnone %s, %struct.ssl_session_st* noundef %ss, i8* nocapture noundef readnone %keyname, i64 noundef %keyname_length, i32 noundef %status, i8* nocapture noundef readnone %arg) #1 {
entry:
  %tickdata = alloca i8*, align 8
  %tickdlen = alloca i64, align 8
  %0 = bitcast i8** %tickdata to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  %1 = bitcast i64* %tickdlen to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store i1 true, i1* @dec_tick_called, align 4
  %cmp = icmp eq i32 %status, 3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = add i32 %status, -5
  %3 = icmp ult i32 %2, 2
  %lor.ext = zext i1 %3 to i32
  %call = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7433, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.785, i64 0, i64 0), i32 noundef %lor.ext) #16
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @SSL_SESSION_get0_ticket_appdata(%struct.ssl_session_st* noundef %ss, i8** noundef nonnull %tickdata, i64* noundef nonnull %tickdlen) #16
  %cmp7 = icmp ne i32 %call6, 0
  %conv8 = zext i1 %cmp7 to i32
  %call9 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7437, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.786, i64 0, i64 0), i32 noundef %conv8) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end5
  %4 = load i64, i64* %tickdlen, align 8, !tbaa !10
  %call11 = call i64 @strlen(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.784, i64 0, i64 0)) #17
  %call12 = call i32 @test_size_t_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7438, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.787, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.788, i64 0, i64 0), i64 noundef %4, i64 noundef %call11) #16
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %cleanup, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %5 = load i8*, i8** %tickdata, align 8, !tbaa !3
  %6 = load i64, i64* %tickdlen, align 8, !tbaa !10
  %call15 = call i32 @memcmp(i8* noundef %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.784, i64 0, i64 0), i64 noundef %6) #17
  %call16 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7439, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.789, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call15, i32 noundef 0) #16
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %cleanup, label %if.end19

if.end19:                                         ; preds = %lor.lhs.false14
  %.b = load i1, i1* @tick_key_cb_called, align 4
  br i1 %.b, label %if.then21, label %if.end24

if.then21:                                        ; preds = %if.end19
  %switch.tableidx = add i32 %status, -4
  %7 = icmp ult i32 %switch.tableidx, 3
  %switch.offset = add i32 %status, -2
  %spec.select = select i1 %7, i32 %switch.offset, i32 0
  br label %cleanup

if.end24:                                         ; preds = %if.end19
  %8 = load i32, i32* @tick_dec_ret, align 4, !tbaa !7
  br label %cleanup

cleanup:                                          ; preds = %if.then21, %if.end5, %lor.lhs.false, %lor.lhs.false14, %if.end, %entry, %if.end24
  %retval.0 = phi i32 [ %8, %if.end24 ], [ 2, %entry ], [ 0, %if.end ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false ], [ 0, %if.end5 ], [ %spec.select, %if.then21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

declare dso_local i32 @SSL_CTX_set_tlsext_ticket_key_evp_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.evp_mac_ctx_st*, i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @tick_key_evp_cb(%struct.ssl_st* nocapture noundef readnone %s, i8* noundef %key_name, i8* noundef %iv, %struct.evp_cipher_ctx_st* noundef %ctx, %struct.evp_mac_ctx_st* noundef %hctx, i32 noundef %enc) #1 {
entry:
  %tick_aes_key = alloca [16 x i8], align 16
  %tick_hmac_key = alloca [16 x i8], align 16
  %params = alloca [2 x %struct.ossl_param_st], align 16
  %tmp4 = alloca %struct.ossl_param_st, align 8
  %0 = getelementptr inbounds [16 x i8], [16 x i8]* %tick_aes_key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %0, i8* noundef nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.tick_key_cb.tick_hmac_key, i64 0, i64 0), i64 16, i1 false)
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %tick_hmac_key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %1, i8* noundef nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.tick_key_cb.tick_hmac_key, i64 0, i64 0), i64 16, i1 false)
  %2 = bitcast [2 x %struct.ossl_param_st]* %params to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %2) #19
  %3 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.evp_cipher_st* @EVP_CIPHER_fetch(%struct.ossl_lib_ctx_st* noundef %3, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.790, i64 0, i64 0), i8* noundef null) #16
  store i1 true, i1* @tick_key_cb_called, align 4
  %call1 = tail call i8* @memset(i8* noundef %iv, i32 noundef 0, i64 noundef 16) #16
  %call2 = tail call i8* @memset(i8* noundef %key_name, i32 noundef 0, i64 noundef 16) #16
  %arrayidx = getelementptr inbounds [2 x %struct.ossl_param_st], [2 x %struct.ossl_param_st]* %params, i64 0, i64 0
  %params17 = getelementptr inbounds [2 x %struct.ossl_param_st], [2 x %struct.ossl_param_st]* %params, i64 0, i64 0
  call void @OSSL_PARAM_construct_utf8_string(%struct.ossl_param_st* nonnull sret(%struct.ossl_param_st) align 8 %params17, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.791, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i64 0, i64 0), i64 noundef 0) #16
  %arrayidx3 = getelementptr inbounds [2 x %struct.ossl_param_st], [2 x %struct.ossl_param_st]* %params, i64 0, i64 1
  %4 = bitcast %struct.ossl_param_st* %tmp4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #19
  call void @OSSL_PARAM_construct_end(%struct.ossl_param_st* nonnull sret(%struct.ossl_param_st) align 8 %tmp4) #16
  %5 = bitcast %struct.ossl_param_st* %arrayidx3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %5, i8* noundef nonnull align 8 dereferenceable(40) %4, i64 40, i1 false), !tbaa.struct !83
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #19
  %cmp = icmp eq %struct.evp_cipher_st* %call, null
  br i1 %cmp, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call5 = call i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* noundef %ctx, %struct.evp_cipher_st* noundef nonnull %call, %struct.engine_st* noundef null, i8* noundef nonnull %0, i8* noundef %iv, i32 noundef %enc) #16
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call9 = call i32 @EVP_MAC_init(%struct.evp_mac_ctx_st* noundef %hctx, i8* noundef nonnull %1, i64 noundef 16, %struct.ossl_param_st* noundef nonnull %arrayidx) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end, label %if.else

if.else:                                          ; preds = %lor.lhs.false6
  %.b = load i1, i1* @tick_key_renew, align 4
  %cond = select i1 %.b, i32 2, i32 1
  br label %if.end

if.end:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false6, %if.else
  %ret.0 = phi i32 [ %cond, %if.else ], [ -1, %lor.lhs.false6 ], [ -1, %lor.lhs.false ], [ -1, %entry ]
  call void @EVP_CIPHER_free(%struct.evp_cipher_st* noundef %call) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #19
  ret i32 %ret.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @tick_key_cb(%struct.ssl_st* nocapture noundef readnone %s, i8* noundef %key_name, i8* noundef %iv, %struct.evp_cipher_ctx_st* noundef %ctx, %struct.hmac_ctx_st* noundef %hctx, i32 noundef %enc) #1 {
entry:
  %tick_aes_key = alloca [16 x i8], align 16
  %tick_hmac_key = alloca [16 x i8], align 16
  %0 = getelementptr inbounds [16 x i8], [16 x i8]* %tick_aes_key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %0, i8* noundef nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.tick_key_cb.tick_hmac_key, i64 0, i64 0), i64 16, i1 false)
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %tick_hmac_key, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %1, i8* noundef nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.tick_key_cb.tick_hmac_key, i64 0, i64 0), i64 16, i1 false)
  %2 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.evp_cipher_st* @EVP_CIPHER_fetch(%struct.ossl_lib_ctx_st* noundef %2, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.790, i64 0, i64 0), i8* noundef null) #16
  %3 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call1 = tail call %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef %3, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.792, i64 0, i64 0), i8* noundef null) #16
  store i1 true, i1* @tick_key_cb_called, align 4
  %call2 = tail call i8* @memset(i8* noundef %iv, i32 noundef 0, i64 noundef 16) #16
  %call3 = tail call i8* @memset(i8* noundef %key_name, i32 noundef 0, i64 noundef 16) #16
  %cmp = icmp eq %struct.evp_cipher_st* %call, null
  %cmp4 = icmp eq %struct.evp_md_st* %call1, null
  %or.cond = select i1 %cmp, i1 true, i1 %cmp4
  br i1 %or.cond, label %if.end, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %entry
  %call6 = call i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* noundef %ctx, %struct.evp_cipher_st* noundef nonnull %call, %struct.engine_st* noundef null, i8* noundef nonnull %0, i8* noundef %iv, i32 noundef %enc) #16
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %call9 = call i32 @HMAC_Init_ex(%struct.hmac_ctx_st* noundef %hctx, i8* noundef nonnull %1, i32 noundef 16, %struct.evp_md_st* noundef nonnull %call1, %struct.engine_st* noundef null) #16
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end, label %if.else

if.else:                                          ; preds = %lor.lhs.false7
  %.b = load i1, i1* @tick_key_renew, align 4
  %cond = select i1 %.b, i32 2, i32 1
  br label %if.end

if.end:                                           ; preds = %entry, %lor.lhs.false5, %lor.lhs.false7, %if.else
  %ret.0 = phi i32 [ %cond, %if.else ], [ -1, %lor.lhs.false7 ], [ -1, %lor.lhs.false5 ], [ -1, %entry ]
  call void @EVP_CIPHER_free(%struct.evp_cipher_st* noundef %call) #16
  call void @EVP_MD_free(%struct.evp_md_st* noundef %call1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #19
  ret i32 %ret.0
}

declare dso_local i32 @SSL_SESSION_set1_ticket_appdata(%struct.ssl_session_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_get0_ticket_appdata(%struct.ssl_session_st* noundef, i8** noundef, i64* noundef) local_unnamed_addr #3

declare dso_local %struct.evp_cipher_st* @EVP_CIPHER_fetch(%struct.ossl_lib_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @OSSL_PARAM_construct_utf8_string(%struct.ossl_param_st* sret(%struct.ossl_param_st) align 8, i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local void @OSSL_PARAM_construct_end(%struct.ossl_param_st* sret(%struct.ossl_param_st) align 8) local_unnamed_addr #3

declare dso_local i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* noundef, %struct.evp_cipher_st* noundef, %struct.engine_st* noundef, i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @EVP_MAC_init(%struct.evp_mac_ctx_st* noundef, i8* noundef, i64 noundef, %struct.ossl_param_st* noundef) local_unnamed_addr #3

declare dso_local void @EVP_CIPHER_free(%struct.evp_cipher_st* noundef) local_unnamed_addr #3

declare dso_local %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @HMAC_Init_ex(%struct.hmac_ctx_st* noundef, i8* noundef, i32 noundef, %struct.evp_md_st* noundef, %struct.engine_st* noundef) local_unnamed_addr #3

declare dso_local void @EVP_MD_free(%struct.evp_md_st* noundef) local_unnamed_addr #3

declare dso_local i32 @create_bare_ssl_connection(%struct.ssl_st* noundef, %struct.ssl_st* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_get_shutdown(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @test_cert_cb_int(i32 noundef %prot, i32 noundef %tst) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call1 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %call2 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %4, %struct.ssl_method_st* noundef %call, %struct.ssl_method_st* noundef %call1, i32 noundef 769, i32 noundef %prot, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef null, i8* noundef null) #16
  %cmp = icmp ne i32 %call2, 0
  %conv = zext i1 %cmp to i32
  %call3 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8021, i8* noundef getelementptr inbounds ([116 x i8], [116 x i8]* @.str.809, i64 0, i64 0), i32 noundef %conv) #16
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %end, label %if.end

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %tst, 0
  br i1 %cmp4, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end
  store i32 -1, i32* @cert_cb_cnt, align 4, !tbaa !7
  br label %if.end18

if.else:                                          ; preds = %if.end
  %cmp7 = icmp sgt i32 %tst, 2
  br i1 %cmp7, label %if.then9, label %if.end12

if.then9:                                         ; preds = %if.else
  store i32 3, i32* @cert_cb_cnt, align 4, !tbaa !7
  br label %if.end18

if.end12:                                         ; preds = %if.else
  store i32 0, i32* @cert_cb_cnt, align 4, !tbaa !7
  %cmp13 = icmp eq i32 %tst, 2
  br i1 %cmp13, label %if.then15, label %if.end18

if.then15:                                        ; preds = %if.end12
  %call16 = call %struct.ssl_method_st* @TLS_server_method() #16
  %call17 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* noundef %call16) #16
  br label %if.end18

if.end18:                                         ; preds = %if.then6, %if.then9, %if.then15, %if.end12
  %snictx.0 = phi %struct.ssl_ctx_st* [ %call17, %if.then15 ], [ null, %if.end12 ], [ null, %if.then9 ], [ null, %if.then6 ]
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %6 = bitcast %struct.ssl_ctx_st* %snictx.0 to i8*
  call void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st* noundef %5, i32 (%struct.ssl_st*, i8*)* noundef nonnull @cert_cb, i8* noundef %6) #16
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call19 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %7, %struct.ssl_ctx_st* noundef %8, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp20 = icmp ne i32 %call19, 0
  %conv21 = zext i1 %cmp20 to i32
  %call22 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8036, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv21) #16
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %end, label %if.end25

if.end25:                                         ; preds = %if.end18
  switch i32 %tst, label %if.end48 [
    i32 4, label %if.then28
    i32 5, label %if.then39
  ]

if.then28:                                        ; preds = %if.end25
  %9 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call29 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %9, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.811, i64 0, i64 0)) #16
  %cmp30 = icmp ne i64 %call29, 0
  %conv31 = zext i1 %cmp30 to i32
  %call32 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8045, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.810, i64 0, i64 0), i32 noundef %conv31) #16
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %end, label %if.end48.thread

if.then39:                                        ; preds = %if.end25
  %10 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call40 = call i64 @SSL_ctrl(%struct.ssl_st* noundef %10, i32 noundef 98, i64 noundef 0, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.813, i64 0, i64 0)) #16
  %cmp41 = icmp ne i64 %call40, 0
  %conv42 = zext i1 %cmp41 to i32
  %call43 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8053, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.812, i64 0, i64 0), i32 noundef %conv42) #16
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %end, label %if.end48.thread

if.end48.thread:                                  ; preds = %if.then39, %if.then28
  %11 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %12 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call4985 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %11, %struct.ssl_st* noundef %12, i32 noundef 0) #16
  br label %cond.true

if.end48:                                         ; preds = %if.end25
  %13 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %14 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call49 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %13, %struct.ssl_st* noundef %14, i32 noundef 0) #16
  br i1 %cmp4, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end48, %if.end48.thread
  %call4986 = phi i32 [ %call4985, %if.end48.thread ], [ %call49, %if.end48 ]
  %tobool57.not = icmp eq i32 %call4986, 0
  %lnot.ext = zext i1 %tobool57.not to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end48, %cond.true
  %cond = phi i32 [ %lnot.ext, %cond.true ], [ %call49, %if.end48 ]
  %cmp58 = icmp ne i32 %cond, 0
  %conv59 = zext i1 %cmp58 to i32
  %call60 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8058, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.814, i64 0, i64 0), i32 noundef %conv59) #16
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %end, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %cond.end
  %cmp63 = icmp sgt i32 %tst, 0
  br i1 %cmp63, label %land.lhs.true, label %if.end69

land.lhs.true:                                    ; preds = %lor.lhs.false62
  %15 = load i32, i32* @cert_cb_cnt, align 4, !tbaa !7
  %sub = add nsw i32 %15, -2
  %sub65 = add nsw i32 %15, -3
  %mul = mul nsw i32 %sub, %sub65
  %call66 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8060, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.815, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %mul, i32 noundef 0) #16
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %end, label %if.end69

if.end69:                                         ; preds = %land.lhs.true, %lor.lhs.false62
  br label %end

end:                                              ; preds = %cond.end, %land.lhs.true, %if.then39, %if.then28, %if.end18, %entry, %if.end69
  %testresult.0 = phi i32 [ 1, %if.end69 ], [ 0, %land.lhs.true ], [ 0, %cond.end ], [ 0, %if.then28 ], [ 0, %if.then39 ], [ 0, %if.end18 ], [ 0, %entry ]
  %snictx.1 = phi %struct.ssl_ctx_st* [ %snictx.0, %if.end69 ], [ %snictx.0, %land.lhs.true ], [ %snictx.0, %cond.end ], [ %snictx.0, %if.then28 ], [ %snictx.0, %if.then39 ], [ %snictx.0, %if.end18 ], [ null, %entry ]
  %16 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %16) #16
  %17 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %17) #16
  %18 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %18) #16
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %19) #16
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %snictx.1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_cert_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @cert_cb(%struct.ssl_st* noundef %s, i8* noundef %arg) #1 {
entry:
  %x509 = alloca %struct.x509_st*, align 8
  %rootx = alloca %struct.x509_st*, align 8
  %0 = bitcast i8* %arg to %struct.ssl_ctx_st*
  %1 = bitcast %struct.x509_st** %x509 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.x509_st* null, %struct.x509_st** %x509, align 8, !tbaa !3
  %2 = bitcast %struct.x509_st** %rootx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.x509_st* null, %struct.x509_st** %rootx, align 8, !tbaa !3
  %3 = load i32, i32* @cert_cb_cnt, align 4, !tbaa !7
  switch i32 %3, label %out [
    i32 0, label %if.then
    i32 1, label %if.then2
    i32 3, label %if.then27
  ]

if.then:                                          ; preds = %entry
  store i32 1, i32* @cert_cb_cnt, align 4, !tbaa !7
  br label %cleanup124

if.then2:                                         ; preds = %entry
  %cmp3.not = icmp eq i8* %arg, null
  br i1 %cmp3.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then2
  %call = tail call %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* noundef %s, %struct.ssl_ctx_st* noundef nonnull %0) #16
  %4 = bitcast %struct.ssl_ctx_st* %call to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7925, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.816, i64 0, i64 0), i8* noundef %4) #16
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %cleanup124, label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then2
  %5 = load i8*, i8** @cert, align 8, !tbaa !3
  %call6 = tail call i32 @SSL_use_certificate_file(%struct.ssl_st* noundef %s, i8* noundef %5, i32 noundef 1) #16
  %cmp7 = icmp ne i32 %call6, 0
  %conv = zext i1 %cmp7 to i32
  %call8 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7928, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.817, i64 0, i64 0), i32 noundef %conv) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %cleanup124, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call10 = tail call i32 @SSL_use_PrivateKey_file(%struct.ssl_st* noundef %s, i8* noundef %6, i32 noundef 1) #16
  %cmp11 = icmp ne i32 %call10, 0
  %conv12 = zext i1 %cmp11 to i32
  %call13 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7930, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.818, i64 0, i64 0), i32 noundef %conv12) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %cleanup124, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %call16 = tail call i32 @SSL_check_private_key(%struct.ssl_st* noundef %s) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7931, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.819, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %cleanup124, label %if.end22

if.end22:                                         ; preds = %lor.lhs.false15
  %7 = load i32, i32* @cert_cb_cnt, align 4, !tbaa !7
  %inc23 = add nsw i32 %7, 1
  store i32 %inc23, i32* @cert_cb_cnt, align 4, !tbaa !7
  br label %cleanup124

if.then27:                                        ; preds = %entry
  %8 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call28 = tail call i8* @test_mk_file_path(i8* noundef %8, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.820, i64 0, i64 0)) #16
  %9 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call29 = tail call i8* @test_mk_file_path(i8* noundef %9, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #16
  %10 = load i8*, i8** @certsdir, align 8, !tbaa !3
  %call30 = tail call i8* @test_mk_file_path(i8* noundef %10, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #16
  %call31 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7941, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.821, i64 0, i64 0), i8* noundef %call28) #16
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %out, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.then27
  %call34 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7941, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.822, i64 0, i64 0), i8* noundef %call29) #16
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %out, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %call37 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7941, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.823, i64 0, i64 0), i8* noundef %call30) #16
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %out, label %if.end40

if.end40:                                         ; preds = %lor.lhs.false36
  %call41 = tail call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %11 = bitcast %struct.stack_st* %call41 to %struct.stack_st_X509*
  %12 = bitcast %struct.stack_st* %call41 to i8*
  %call42 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7944, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.824, i64 0, i64 0), i8* noundef %12) #16
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %out, label %if.end45

if.end45:                                         ; preds = %if.end40
  %call46 = tail call %struct.bio_method_st* @BIO_s_file() #16
  %call47 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call46) #16
  %13 = bitcast %struct.bio_st* %call47 to i8*
  %call48 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7946, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.825, i64 0, i64 0), i8* noundef %13) #16
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %out, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.end45
  %call51 = tail call i64 @BIO_ctrl(%struct.bio_st* noundef %call47, i32 noundef 108, i64 noundef 3, i8* noundef %call28) #16
  %conv52 = trunc i64 %call51 to i32
  %call53 = tail call i32 @test_int_ge(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7947, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.826, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv52, i32 noundef 0) #16
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %out, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false50
  %14 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call56 = tail call %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef %14, i8* noundef null) #16
  store %struct.x509_st* %call56, %struct.x509_st** %rootx, align 8, !tbaa !3
  %15 = bitcast %struct.x509_st* %call56 to i8*
  %call57 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7948, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.827, i64 0, i64 0), i8* noundef %15) #16
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %out, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %call60 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef %call47, %struct.x509_st** noundef nonnull %rootx, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null) #16
  %16 = bitcast %struct.x509_st* %call60 to i8*
  %call61 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7949, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.828, i64 0, i64 0), i8* noundef %16) #16
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %out, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %call64 = call fastcc %struct.stack_st* @ossl_check_X509_sk_type(%struct.stack_st_X509* noundef %11) #18
  %17 = bitcast %struct.x509_st** %rootx to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !3
  %call66 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call64, i8* noundef %18) #16
  %cmp67 = icmp ne i32 %call66, 0
  %conv68 = zext i1 %cmp67 to i32
  %call69 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7950, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.829, i64 0, i64 0), i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %out, label %if.end72

if.end72:                                         ; preds = %lor.lhs.false63
  store %struct.x509_st* null, %struct.x509_st** %rootx, align 8, !tbaa !3
  %call73 = call i32 @BIO_free(%struct.bio_st* noundef %call47) #16
  %call74 = call %struct.bio_method_st* @BIO_s_file() #16
  %call75 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call74) #16
  %19 = bitcast %struct.bio_st* %call75 to i8*
  %call76 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7954, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.825, i64 0, i64 0), i8* noundef %19) #16
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %out, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %if.end72
  %call79 = call i64 @BIO_ctrl(%struct.bio_st* noundef %call75, i32 noundef 108, i64 noundef 3, i8* noundef %call29) #16
  %conv80 = trunc i64 %call79 to i32
  %call81 = call i32 @test_int_ge(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7955, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.830, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv80, i32 noundef 0) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %out, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %lor.lhs.false78
  %20 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call84 = call %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef %20, i8* noundef null) #16
  store %struct.x509_st* %call84, %struct.x509_st** %x509, align 8, !tbaa !3
  %21 = bitcast %struct.x509_st* %call84 to i8*
  %call85 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7956, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.831, i64 0, i64 0), i8* noundef %21) #16
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %out, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %lor.lhs.false83
  %call88 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef %call75, %struct.x509_st** noundef nonnull %x509, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null) #16
  %22 = bitcast %struct.x509_st* %call88 to i8*
  %call89 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7957, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.832, i64 0, i64 0), i8* noundef %22) #16
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %out, label %if.end92

if.end92:                                         ; preds = %lor.lhs.false87
  %call93 = call i32 @BIO_free(%struct.bio_st* noundef %call75) #16
  %call94 = call %struct.bio_method_st* @BIO_s_file() #16
  %call95 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* noundef %call94) #16
  %23 = bitcast %struct.bio_st* %call95 to i8*
  %call96 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7960, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.825, i64 0, i64 0), i8* noundef %23) #16
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %out, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %if.end92
  %call99 = call i64 @BIO_ctrl(%struct.bio_st* noundef %call95, i32 noundef 108, i64 noundef 3, i8* noundef %call30) #16
  %conv100 = trunc i64 %call99 to i32
  %call101 = call i32 @test_int_ge(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7961, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.833, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %conv100, i32 noundef 0) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %out, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %lor.lhs.false98
  %24 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call104 = call %struct.evp_pkey_st* @PEM_read_bio_PrivateKey_ex(%struct.bio_st* noundef %call95, %struct.evp_pkey_st** noundef null, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null, %struct.ossl_lib_ctx_st* noundef %24, i8* noundef null) #16
  %25 = bitcast %struct.evp_pkey_st* %call104 to i8*
  %call105 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7964, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.834, i64 0, i64 0), i8* noundef %25) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %out, label %if.end108

if.end108:                                        ; preds = %lor.lhs.false103
  %26 = load %struct.x509_st*, %struct.x509_st** %x509, align 8, !tbaa !3
  %call109 = call i32 @SSL_check_chain(%struct.ssl_st* noundef %s, %struct.x509_st* noundef %26, %struct.evp_pkey_st* noundef %call104, %struct.stack_st_X509* noundef %11) #16
  %and = and i32 %call109, 33
  %cmp110 = icmp eq i32 %and, 33
  br i1 %cmp110, label %if.then112, label %if.end117

if.then112:                                       ; preds = %if.end108
  %27 = load %struct.x509_st*, %struct.x509_st** %x509, align 8, !tbaa !3
  %call113 = call i32 @SSL_use_cert_and_key(%struct.ssl_st* noundef %s, %struct.x509_st* noundef %27, %struct.evp_pkey_st* noundef %call104, %struct.stack_st_X509* noundef null, i32 noundef 1) #16
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %out, label %if.end117

if.end117:                                        ; preds = %if.then112, %if.end108
  br label %out

out:                                              ; preds = %if.end117, %lor.lhs.false36, %lor.lhs.false33, %if.then27, %if.end40, %lor.lhs.false63, %lor.lhs.false59, %lor.lhs.false55, %lor.lhs.false50, %if.end45, %lor.lhs.false87, %lor.lhs.false83, %lor.lhs.false78, %if.end72, %lor.lhs.false103, %lor.lhs.false98, %if.end92, %if.then112, %entry
  %in.1 = phi %struct.bio_st* [ null, %entry ], [ %call95, %if.end117 ], [ null, %lor.lhs.false36 ], [ null, %lor.lhs.false33 ], [ null, %if.then27 ], [ null, %if.end40 ], [ %call47, %lor.lhs.false63 ], [ %call47, %lor.lhs.false59 ], [ %call47, %lor.lhs.false55 ], [ %call47, %lor.lhs.false50 ], [ %call47, %if.end45 ], [ %call75, %lor.lhs.false87 ], [ %call75, %lor.lhs.false83 ], [ %call75, %lor.lhs.false78 ], [ %call75, %if.end72 ], [ %call95, %lor.lhs.false103 ], [ %call95, %lor.lhs.false98 ], [ %call95, %if.end92 ], [ %call95, %if.then112 ]
  %pkey.2 = phi %struct.evp_pkey_st* [ null, %entry ], [ %call104, %if.end117 ], [ null, %lor.lhs.false36 ], [ null, %lor.lhs.false33 ], [ null, %if.then27 ], [ null, %if.end40 ], [ null, %lor.lhs.false63 ], [ null, %lor.lhs.false59 ], [ null, %lor.lhs.false55 ], [ null, %lor.lhs.false50 ], [ null, %if.end45 ], [ null, %lor.lhs.false87 ], [ null, %lor.lhs.false83 ], [ null, %lor.lhs.false78 ], [ null, %if.end72 ], [ %call104, %lor.lhs.false103 ], [ null, %lor.lhs.false98 ], [ null, %if.end92 ], [ %call104, %if.then112 ]
  %chain.1 = phi %struct.stack_st_X509* [ null, %entry ], [ %11, %if.end117 ], [ null, %lor.lhs.false36 ], [ null, %lor.lhs.false33 ], [ null, %if.then27 ], [ %11, %if.end40 ], [ %11, %lor.lhs.false63 ], [ %11, %lor.lhs.false59 ], [ %11, %lor.lhs.false55 ], [ %11, %lor.lhs.false50 ], [ %11, %if.end45 ], [ %11, %lor.lhs.false87 ], [ %11, %lor.lhs.false83 ], [ %11, %lor.lhs.false78 ], [ %11, %if.end72 ], [ %11, %lor.lhs.false103 ], [ %11, %lor.lhs.false98 ], [ %11, %if.end92 ], [ %11, %if.then112 ]
  %rootfile.0 = phi i8* [ null, %entry ], [ %call28, %if.end117 ], [ %call28, %lor.lhs.false36 ], [ %call28, %lor.lhs.false33 ], [ %call28, %if.then27 ], [ %call28, %if.end40 ], [ %call28, %lor.lhs.false63 ], [ %call28, %lor.lhs.false59 ], [ %call28, %lor.lhs.false55 ], [ %call28, %lor.lhs.false50 ], [ %call28, %if.end45 ], [ %call28, %lor.lhs.false87 ], [ %call28, %lor.lhs.false83 ], [ %call28, %lor.lhs.false78 ], [ %call28, %if.end72 ], [ %call28, %lor.lhs.false103 ], [ %call28, %lor.lhs.false98 ], [ %call28, %if.end92 ], [ %call28, %if.then112 ]
  %ecdsacert.0 = phi i8* [ null, %entry ], [ %call29, %if.end117 ], [ %call29, %lor.lhs.false36 ], [ %call29, %lor.lhs.false33 ], [ %call29, %if.then27 ], [ %call29, %if.end40 ], [ %call29, %lor.lhs.false63 ], [ %call29, %lor.lhs.false59 ], [ %call29, %lor.lhs.false55 ], [ %call29, %lor.lhs.false50 ], [ %call29, %if.end45 ], [ %call29, %lor.lhs.false87 ], [ %call29, %lor.lhs.false83 ], [ %call29, %lor.lhs.false78 ], [ %call29, %if.end72 ], [ %call29, %lor.lhs.false103 ], [ %call29, %lor.lhs.false98 ], [ %call29, %if.end92 ], [ %call29, %if.then112 ]
  %ecdsakey.0 = phi i8* [ null, %entry ], [ %call30, %if.end117 ], [ %call30, %lor.lhs.false36 ], [ %call30, %lor.lhs.false33 ], [ %call30, %if.then27 ], [ %call30, %if.end40 ], [ %call30, %lor.lhs.false63 ], [ %call30, %lor.lhs.false59 ], [ %call30, %lor.lhs.false55 ], [ %call30, %lor.lhs.false50 ], [ %call30, %if.end45 ], [ %call30, %lor.lhs.false87 ], [ %call30, %lor.lhs.false83 ], [ %call30, %lor.lhs.false78 ], [ %call30, %if.end72 ], [ %call30, %lor.lhs.false103 ], [ %call30, %lor.lhs.false98 ], [ %call30, %if.end92 ], [ %call30, %if.then112 ]
  %ret.1 = phi i32 [ 0, %entry ], [ 1, %if.end117 ], [ 0, %lor.lhs.false36 ], [ 0, %lor.lhs.false33 ], [ 0, %if.then27 ], [ 0, %if.end40 ], [ 0, %lor.lhs.false63 ], [ 0, %lor.lhs.false59 ], [ 0, %lor.lhs.false55 ], [ 0, %lor.lhs.false50 ], [ 0, %if.end45 ], [ 0, %lor.lhs.false87 ], [ 0, %lor.lhs.false83 ], [ 0, %lor.lhs.false78 ], [ 0, %if.end72 ], [ 0, %lor.lhs.false103 ], [ 0, %lor.lhs.false98 ], [ 0, %if.end92 ], [ 0, %if.then112 ]
  call void @CRYPTO_free(i8* noundef %ecdsacert.0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7984) #16
  call void @CRYPTO_free(i8* noundef %ecdsakey.0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7985) #16
  call void @CRYPTO_free(i8* noundef %rootfile.0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 7986) #16
  %call121 = call i32 @BIO_free(%struct.bio_st* noundef %in.1) #16
  call void @EVP_PKEY_free(%struct.evp_pkey_st* noundef %pkey.2) #16
  %28 = load %struct.x509_st*, %struct.x509_st** %x509, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %28) #16
  %29 = load %struct.x509_st*, %struct.x509_st** %rootx, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %29) #16
  %call122 = call fastcc %struct.stack_st* @ossl_check_X509_sk_type(%struct.stack_st_X509* noundef %chain.1) #18
  call void @OPENSSL_sk_pop_free(%struct.stack_st* noundef %call122, void (i8*)* noundef bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #16
  br label %cleanup124

cleanup124:                                       ; preds = %if.end, %lor.lhs.false, %lor.lhs.false15, %land.lhs.true, %out, %if.end22, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 1, %if.end22 ], [ %ret.1, %out ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  ret i32 %retval.0
}

declare dso_local i32 @SSL_use_certificate_file(%struct.ssl_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.bio_method_st* @BIO_s_file() local_unnamed_addr #3

declare dso_local i32 @test_int_ge(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.evp_pkey_st* @PEM_read_bio_PrivateKey_ex(%struct.bio_st* noundef, %struct.evp_pkey_st** noundef, i32 (i8*, i32, i32, i8*)* noundef, i8* noundef, %struct.ossl_lib_ctx_st* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_check_chain(%struct.ssl_st* noundef, %struct.x509_st* noundef, %struct.evp_pkey_st* noundef, %struct.stack_st_X509* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_use_cert_and_key(%struct.ssl_st* noundef, %struct.x509_st* noundef, %struct.evp_pkey_st* noundef, %struct.stack_st_X509* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_client_cert_cb(%struct.ssl_ctx_st* noundef, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @client_cert_cb(%struct.ssl_st* noundef %ssl, %struct.x509_st** nocapture noundef writeonly %x509, %struct.evp_pkey_st** nocapture noundef writeonly %pkey) #1 {
entry:
  %xcert = alloca %struct.x509_st*, align 8
  %0 = bitcast %struct.x509_st** %xcert to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  %call = tail call %struct.x509_st* @SSL_get0_peer_certificate(%struct.ssl_st* noundef %ssl) #16
  %1 = bitcast %struct.x509_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8099, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.836, i64 0, i64 0), i8* noundef %1) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** @cert, align 8, !tbaa !3
  %call2 = tail call %struct.bio_st* @BIO_new_file(i8* noundef %2, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0)) #16
  %3 = bitcast %struct.bio_st* %call2 to i8*
  %call3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8103, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.837, i64 0, i64 0), i8* noundef %3) #16
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end
  %4 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call7 = tail call %struct.x509_st* @X509_new_ex(%struct.ossl_lib_ctx_st* noundef %4, i8* noundef null) #16
  store %struct.x509_st* %call7, %struct.x509_st** %xcert, align 8, !tbaa !3
  %5 = bitcast %struct.x509_st* %call7 to i8*
  %call8 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8106, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.838, i64 0, i64 0), i8* noundef %5) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %err, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %call10 = call %struct.x509_st* @PEM_read_bio_X509(%struct.bio_st* noundef %call2, %struct.x509_st** noundef nonnull %xcert, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null) #16
  %6 = bitcast %struct.x509_st* %call10 to i8*
  %call11 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8107, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.839, i64 0, i64 0), i8* noundef %6) #16
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %err, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %7 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call14 = call %struct.bio_st* @BIO_new_file(i8* noundef %7, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0)) #16
  %8 = bitcast %struct.bio_st* %call14 to i8*
  %call15 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8108, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.840, i64 0, i64 0), i8* noundef %8) #16
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %err, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %9 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call18 = call %struct.evp_pkey_st* @PEM_read_bio_PrivateKey_ex(%struct.bio_st* noundef %call14, %struct.evp_pkey_st** noundef null, i32 (i8*, i32, i32, i8*)* noundef null, i8* noundef null, %struct.ossl_lib_ctx_st* noundef %9, i8* noundef null) #16
  %10 = bitcast %struct.evp_pkey_st* %call18 to i8*
  %call19 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8111, i8* noundef getelementptr inbounds ([79 x i8], [79 x i8]* @.str.841, i64 0, i64 0), i8* noundef %10) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %err, label %if.end22

if.end22:                                         ; preds = %lor.lhs.false17
  %11 = load %struct.x509_st*, %struct.x509_st** %xcert, align 8, !tbaa !3
  store %struct.x509_st* %11, %struct.x509_st** %x509, align 8, !tbaa !3
  store %struct.evp_pkey_st* %call18, %struct.evp_pkey_st** %pkey, align 8, !tbaa !3
  br label %cleanup.sink.split

err:                                              ; preds = %if.end6, %lor.lhs.false, %lor.lhs.false13, %lor.lhs.false17
  %priv_in.0 = phi %struct.bio_st* [ %call14, %lor.lhs.false17 ], [ %call14, %lor.lhs.false13 ], [ null, %lor.lhs.false ], [ null, %if.end6 ]
  %12 = load %struct.x509_st*, %struct.x509_st** %xcert, align 8, !tbaa !3
  call void @X509_free(%struct.x509_st* noundef %12) #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end22, %err
  %priv_in.0.sink = phi %struct.bio_st* [ %priv_in.0, %err ], [ %call14, %if.end22 ]
  %retval.0.ph = phi i32 [ 0, %err ], [ 1, %if.end22 ]
  %call25 = call i32 @BIO_free(%struct.bio_st* noundef %call2) #16
  %call26 = call i32 @BIO_free(%struct.bio_st* noundef %priv_in.0.sink) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end ], [ %retval.0.ph, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal i32 @verify_cb(i32 noundef %preverify_ok, %struct.x509_store_ctx_st* nocapture noundef readnone %x509_ctx) #0 {
entry:
  ret i32 1
}

declare dso_local %struct.x509_st* @SSL_get0_peer_certificate(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @test_ca_names_int(i32 noundef %prot, i32 noundef %tst) unnamed_addr #1 {
entry:
  %cctx = alloca %struct.ssl_ctx_st*, align 8
  %sctx = alloca %struct.ssl_ctx_st*, align 8
  %clientssl = alloca %struct.ssl_st*, align 8
  %serverssl = alloca %struct.ssl_st*, align 8
  %name = alloca [4 x %struct.X509_name_st*], align 16
  %0 = bitcast %struct.ssl_ctx_st** %cctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %1 = bitcast %struct.ssl_ctx_st** %sctx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %2 = bitcast %struct.ssl_st** %clientssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19
  store %struct.ssl_st* null, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %3 = bitcast %struct.ssl_st** %serverssl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #19
  store %struct.ssl_st* null, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %4 = bitcast [4 x %struct.X509_name_st*]* %name to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #19
  %call = tail call %struct.X509_name_st* @X509_NAME_new() #16
  %arrayidx = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 0
  store %struct.X509_name_st* %call, %struct.X509_name_st** %arrayidx, align 16, !tbaa !3
  %5 = bitcast %struct.X509_name_st* %call to i8*
  %call2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8202, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.846, i64 0, i64 0), i8* noundef %5) #16
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %end, label %lor.lhs.false

for.cond:                                         ; preds = %lor.lhs.false
  %call.1 = tail call %struct.X509_name_st* @X509_NAME_new() #16
  %arrayidx.1 = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 1
  store %struct.X509_name_st* %call.1, %struct.X509_name_st** %arrayidx.1, align 8, !tbaa !3
  %6 = bitcast %struct.X509_name_st* %call.1 to i8*
  %call2.1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8202, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.846, i64 0, i64 0), i8* noundef %6) #16
  %tobool.not.1 = icmp eq i32 %call2.1, 0
  br i1 %tobool.not.1, label %end, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %for.cond
  %call5.1 = tail call i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* noundef %call.1, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.848, i64 0, i64 0), i32 noundef 4097, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.843, i64 0, i64 0), i32 noundef -1, i32 noundef -1, i32 noundef 0) #16
  %cmp6.1 = icmp ne i32 %call5.1, 0
  %conv.1 = zext i1 %cmp6.1 to i32
  %call7.1 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8207, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.847, i64 0, i64 0), i32 noundef %conv.1) #16
  %tobool8.not.1 = icmp eq i32 %call7.1, 0
  br i1 %tobool8.not.1, label %end, label %for.cond.1

for.cond.1:                                       ; preds = %lor.lhs.false.1
  %call.2 = tail call %struct.X509_name_st* @X509_NAME_new() #16
  %arrayidx.2 = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 2
  store %struct.X509_name_st* %call.2, %struct.X509_name_st** %arrayidx.2, align 16, !tbaa !3
  %7 = bitcast %struct.X509_name_st* %call.2 to i8*
  %call2.2 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8202, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.846, i64 0, i64 0), i8* noundef %7) #16
  %tobool.not.2 = icmp eq i32 %call2.2, 0
  br i1 %tobool.not.2, label %end, label %lor.lhs.false.2

lor.lhs.false.2:                                  ; preds = %for.cond.1
  %call5.2 = tail call i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* noundef %call.2, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.848, i64 0, i64 0), i32 noundef 4097, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.844, i64 0, i64 0), i32 noundef -1, i32 noundef -1, i32 noundef 0) #16
  %cmp6.2 = icmp ne i32 %call5.2, 0
  %conv.2 = zext i1 %cmp6.2 to i32
  %call7.2 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8207, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.847, i64 0, i64 0), i32 noundef %conv.2) #16
  %tobool8.not.2 = icmp eq i32 %call7.2, 0
  br i1 %tobool8.not.2, label %end, label %for.cond.2

for.cond.2:                                       ; preds = %lor.lhs.false.2
  %call.3 = tail call %struct.X509_name_st* @X509_NAME_new() #16
  %arrayidx.3 = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 3
  store %struct.X509_name_st* %call.3, %struct.X509_name_st** %arrayidx.3, align 8, !tbaa !3
  %8 = bitcast %struct.X509_name_st* %call.3 to i8*
  %call2.3 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8202, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.846, i64 0, i64 0), i8* noundef %8) #16
  %tobool.not.3 = icmp eq i32 %call2.3, 0
  br i1 %tobool.not.3, label %end, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %for.cond.2
  %call5.3 = tail call i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* noundef %call.3, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.848, i64 0, i64 0), i32 noundef 4097, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.845, i64 0, i64 0), i32 noundef -1, i32 noundef -1, i32 noundef 0) #16
  %cmp6.3 = icmp ne i32 %call5.3, 0
  %conv.3 = zext i1 %cmp6.3 to i32
  %call7.3 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8207, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.847, i64 0, i64 0), i32 noundef %conv.3) #16
  %tobool8.not.3 = icmp eq i32 %call7.3, 0
  br i1 %tobool8.not.3, label %end, label %for.cond.3

for.cond.3:                                       ; preds = %lor.lhs.false.3
  %9 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call9 = tail call %struct.ssl_method_st* @TLS_server_method() #16
  %call10 = tail call %struct.ssl_method_st* @TLS_client_method() #16
  %10 = load i8*, i8** @cert, align 8, !tbaa !3
  %11 = load i8*, i8** @privkey, align 8, !tbaa !3
  %call11 = call i32 @create_ssl_ctx_pair(%struct.ossl_lib_ctx_st* noundef %9, %struct.ssl_method_st* noundef %call9, %struct.ssl_method_st* noundef %call10, i32 noundef 769, i32 noundef %prot, %struct.ssl_ctx_st** noundef nonnull %sctx, %struct.ssl_ctx_st** noundef nonnull %cctx, i8* noundef %10, i8* noundef %11) #16
  %cmp12 = icmp ne i32 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  %call14 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8215, i8* noundef getelementptr inbounds ([119 x i8], [119 x i8]* @.str.849, i64 0, i64 0), i32 noundef %conv13) #16
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %end, label %if.end17

lor.lhs.false:                                    ; preds = %entry
  %call5 = tail call i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* noundef %call, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.848, i64 0, i64 0), i32 noundef 4097, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.842, i64 0, i64 0), i32 noundef -1, i32 noundef -1, i32 noundef 0) #16
  %cmp6 = icmp ne i32 %call5, 0
  %conv = zext i1 %cmp6 to i32
  %call7 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8207, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.847, i64 0, i64 0), i32 noundef %conv) #16
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %end, label %for.cond

if.end17:                                         ; preds = %for.cond.3
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* noundef %12, i32 noundef 1, i32 (i32, %struct.x509_store_ctx_st*)* noundef null) #16
  %cmp18 = icmp eq i32 %tst, 0
  %13 = icmp ult i32 %tst, 2
  br i1 %13, label %if.then23, label %if.end73

if.then23:                                        ; preds = %if.end17
  %call24 = call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %14 = bitcast %struct.stack_st* %call24 to %struct.stack_st_X509_NAME*
  %15 = bitcast %struct.stack_st* %call24 to i8*
  %call25 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8221, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.850, i64 0, i64 0), i8* noundef %15) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %end, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.then23
  %call28 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %14) #18
  %call30 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call) #16
  %16 = bitcast %struct.X509_name_st* %call30 to i8*
  %call32 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call28, i8* noundef %16) #16
  %cmp33 = icmp ne i32 %call32, 0
  %conv34 = zext i1 %cmp33 to i32
  %call35 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8222, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.851, i64 0, i64 0), i32 noundef %conv34) #16
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %end, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %lor.lhs.false27
  %call40 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.1) #16
  %17 = bitcast %struct.X509_name_st* %call40 to i8*
  %call42 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call28, i8* noundef %17) #16
  %cmp43 = icmp ne i32 %call42, 0
  %conv44 = zext i1 %cmp43 to i32
  %call45 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8223, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.852, i64 0, i64 0), i32 noundef %conv44) #16
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %end, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %lor.lhs.false37
  %call48 = call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %18 = bitcast %struct.stack_st* %call48 to %struct.stack_st_X509_NAME*
  %19 = bitcast %struct.stack_st* %call48 to i8*
  %call49 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8224, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.853, i64 0, i64 0), i8* noundef %19) #16
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %end, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %call52 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %18) #18
  %call54 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call) #16
  %20 = bitcast %struct.X509_name_st* %call54 to i8*
  %call56 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call52, i8* noundef %20) #16
  %cmp57 = icmp ne i32 %call56, 0
  %conv58 = zext i1 %cmp57 to i32
  %call59 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8225, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.854, i64 0, i64 0), i32 noundef %conv58) #16
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %end, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false51
  %call64 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.1) #16
  %21 = bitcast %struct.X509_name_st* %call64 to i8*
  %call66 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call52, i8* noundef %21) #16
  %cmp67 = icmp ne i32 %call66, 0
  %conv68 = zext i1 %cmp67 to i32
  %call69 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8226, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.855, i64 0, i64 0), i32 noundef %conv68) #16
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %end, label %if.end72

if.end72:                                         ; preds = %lor.lhs.false61
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set0_CA_list(%struct.ssl_ctx_st* noundef %22, %struct.stack_st_X509_NAME* noundef %14) #16
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set0_CA_list(%struct.ssl_ctx_st* noundef %23, %struct.stack_st_X509_NAME* noundef %18) #16
  br label %if.end73

if.end73:                                         ; preds = %if.end17, %if.end72
  %24 = add i32 %tst, -1
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %if.then79, label %if.end129

if.then79:                                        ; preds = %if.end73
  %call80 = call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %26 = bitcast %struct.stack_st* %call80 to %struct.stack_st_X509_NAME*
  %27 = bitcast %struct.stack_st* %call80 to i8*
  %call81 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8234, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.850, i64 0, i64 0), i8* noundef %27) #16
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %end, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.then79
  %call84 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %26) #18
  %call86 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.2) #16
  %28 = bitcast %struct.X509_name_st* %call86 to i8*
  %call88 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call84, i8* noundef %28) #16
  %cmp89 = icmp ne i32 %call88, 0
  %conv90 = zext i1 %cmp89 to i32
  %call91 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8235, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.856, i64 0, i64 0), i32 noundef %conv90) #16
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %end, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %lor.lhs.false83
  %call96 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.3) #16
  %29 = bitcast %struct.X509_name_st* %call96 to i8*
  %call98 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call84, i8* noundef %29) #16
  %cmp99 = icmp ne i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  %call101 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8236, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.857, i64 0, i64 0), i32 noundef %conv100) #16
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %end, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %lor.lhs.false93
  %call104 = call %struct.stack_st* @OPENSSL_sk_new_null() #16
  %30 = bitcast %struct.stack_st* %call104 to %struct.stack_st_X509_NAME*
  %31 = bitcast %struct.stack_st* %call104 to i8*
  %call105 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8237, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.853, i64 0, i64 0), i8* noundef %31) #16
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %end, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %lor.lhs.false103
  %call108 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %30) #18
  %call110 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.2) #16
  %32 = bitcast %struct.X509_name_st* %call110 to i8*
  %call112 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call108, i8* noundef %32) #16
  %cmp113 = icmp ne i32 %call112, 0
  %conv114 = zext i1 %cmp113 to i32
  %call115 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8238, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.858, i64 0, i64 0), i32 noundef %conv114) #16
  %tobool116.not = icmp eq i32 %call115, 0
  br i1 %tobool116.not, label %end, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %lor.lhs.false107
  %call120 = call %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef %call.3) #16
  %33 = bitcast %struct.X509_name_st* %call120 to i8*
  %call122 = call i32 @OPENSSL_sk_push(%struct.stack_st* noundef %call108, i8* noundef %33) #16
  %cmp123 = icmp ne i32 %call122, 0
  %conv124 = zext i1 %cmp123 to i32
  %call125 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8239, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.859, i64 0, i64 0), i32 noundef %conv124) #16
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %end, label %if.end128

if.end128:                                        ; preds = %lor.lhs.false117
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st* noundef %34, %struct.stack_st_X509_NAME* noundef %26) #16
  %35 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st* noundef %35, %struct.stack_st_X509_NAME* noundef %30) #16
  br label %if.end129

if.end129:                                        ; preds = %if.end73, %if.end128
  %36 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  %37 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  %call130 = call i32 @create_ssl_objects(%struct.ssl_ctx_st* noundef %36, %struct.ssl_ctx_st* noundef %37, %struct.ssl_st** noundef nonnull %serverssl, %struct.ssl_st** noundef nonnull %clientssl, %struct.bio_st* noundef null, %struct.bio_st* noundef null) #16
  %cmp131 = icmp ne i32 %call130, 0
  %conv132 = zext i1 %cmp131 to i32
  %call133 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8248, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.129, i64 0, i64 0), i32 noundef %conv132) #16
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %end, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %if.end129
  %38 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %39 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call136 = call i32 @create_ssl_connection(%struct.ssl_st* noundef %38, %struct.ssl_st* noundef %39, i32 noundef 0) #16
  %cmp137 = icmp ne i32 %call136, 0
  %conv138 = zext i1 %cmp137 to i32
  %call139 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8250, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130, i64 0, i64 0), i32 noundef %conv138) #16
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %end, label %if.end142

if.end142:                                        ; preds = %lor.lhs.false135
  %40 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  %call143 = call %struct.stack_st_X509_NAME* @SSL_get0_peer_CA_list(%struct.ssl_st* noundef %40) #16
  %cmp144 = icmp eq i32 %prot, 772
  %41 = and i1 %cmp144, %13
  %42 = bitcast %struct.stack_st_X509_NAME* %call143 to i8*
  br i1 %41, label %if.then151, label %if.else

if.then151:                                       ; preds = %if.end142
  %call152 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8260, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.860, i64 0, i64 0), i8* noundef %42) #16
  %tobool153.not = icmp eq i32 %call152, 0
  br i1 %tobool153.not, label %end, label %lor.lhs.false154

lor.lhs.false154:                                 ; preds = %if.then151
  %call155 = call fastcc %struct.stack_st* @ossl_check_const_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %call143) #18
  %call156 = call i32 @OPENSSL_sk_num(%struct.stack_st* noundef %call155) #16
  %call157 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8261, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.861, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i32 noundef %call156, i32 noundef 2) #16
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %end, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %lor.lhs.false154
  %call161 = call i8* @OPENSSL_sk_value(%struct.stack_st* noundef %call155, i32 noundef 0) #16
  %43 = bitcast i8* %call161 to %struct.X509_name_st*
  %call163 = call i32 @X509_NAME_cmp(%struct.X509_name_st* noundef %43, %struct.X509_name_st* noundef %call) #16
  %call164 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8263, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.862, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call163, i32 noundef 0) #16
  %tobool165.not = icmp eq i32 %call164, 0
  br i1 %tobool165.not, label %end, label %lor.lhs.false166

lor.lhs.false166:                                 ; preds = %lor.lhs.false159
  %call168 = call i8* @OPENSSL_sk_value(%struct.stack_st* noundef %call155, i32 noundef 1) #16
  %44 = bitcast i8* %call168 to %struct.X509_name_st*
  %call170 = call i32 @X509_NAME_cmp(%struct.X509_name_st* noundef %44, %struct.X509_name_st* noundef %call.1) #16
  %call171 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8265, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.863, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call170, i32 noundef 0) #16
  %tobool172.not = icmp eq i32 %call171, 0
  br i1 %tobool172.not, label %end, label %if.end179

if.else:                                          ; preds = %if.end142
  %call175 = call i32 @test_ptr_null(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8267, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.860, i64 0, i64 0), i8* noundef %42) #16
  %tobool176.not = icmp eq i32 %call175, 0
  br i1 %tobool176.not, label %end, label %if.end179

if.end179:                                        ; preds = %if.else, %lor.lhs.false166
  %45 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  %call180 = call %struct.stack_st_X509_NAME* @SSL_get0_peer_CA_list(%struct.ssl_st* noundef %45) #16
  %46 = bitcast %struct.stack_st_X509_NAME* %call180 to i8*
  %call181 = call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8277, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.860, i64 0, i64 0), i8* noundef %46) #16
  %tobool182.not = icmp eq i32 %call181, 0
  br i1 %tobool182.not, label %end, label %lor.lhs.false183

lor.lhs.false183:                                 ; preds = %if.end179
  %call184 = call fastcc %struct.stack_st* @ossl_check_const_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %call180) #18
  %call185 = call i32 @OPENSSL_sk_num(%struct.stack_st* noundef %call184) #16
  %call186 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8278, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.861, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), i32 noundef %call185, i32 noundef 2) #16
  %tobool187.not = icmp eq i32 %call186, 0
  br i1 %tobool187.not, label %end, label %lor.lhs.false188

lor.lhs.false188:                                 ; preds = %lor.lhs.false183
  %call190 = call i8* @OPENSSL_sk_value(%struct.stack_st* noundef %call184, i32 noundef 0) #16
  %47 = bitcast i8* %call190 to %struct.X509_name_st*
  %cond = select i1 %cmp18, i64 0, i64 2
  %arrayidx193 = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 %cond
  %48 = load %struct.X509_name_st*, %struct.X509_name_st** %arrayidx193, align 16, !tbaa !3
  %call194 = call i32 @X509_NAME_cmp(%struct.X509_name_st* noundef %47, %struct.X509_name_st* noundef %48) #16
  %call195 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8280, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.864, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call194, i32 noundef 0) #16
  %tobool196.not = icmp eq i32 %call195, 0
  br i1 %tobool196.not, label %end, label %lor.lhs.false197

lor.lhs.false197:                                 ; preds = %lor.lhs.false188
  %call199 = call i8* @OPENSSL_sk_value(%struct.stack_st* noundef %call184, i32 noundef 1) #16
  %49 = bitcast i8* %call199 to %struct.X509_name_st*
  %cond202 = select i1 %cmp18, i64 1, i64 3
  %arrayidx204 = getelementptr inbounds [4 x %struct.X509_name_st*], [4 x %struct.X509_name_st*]* %name, i64 0, i64 %cond202
  %50 = load %struct.X509_name_st*, %struct.X509_name_st** %arrayidx204, align 8, !tbaa !3
  %call205 = call i32 @X509_NAME_cmp(%struct.X509_name_st* noundef %49, %struct.X509_name_st* noundef %50) #16
  %call206 = call i32 @test_int_eq(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8282, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.865, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.169, i64 0, i64 0), i32 noundef %call205, i32 noundef 0) #16
  %tobool207.not = icmp ne i32 %call206, 0
  %spec.select = zext i1 %tobool207.not to i32
  br label %end

end:                                              ; preds = %entry, %lor.lhs.false, %for.cond, %lor.lhs.false.1, %for.cond.1, %lor.lhs.false.2, %for.cond.2, %lor.lhs.false.3, %lor.lhs.false197, %if.end179, %lor.lhs.false183, %lor.lhs.false188, %if.else, %if.then151, %lor.lhs.false154, %lor.lhs.false159, %lor.lhs.false166, %if.end129, %lor.lhs.false135, %if.then79, %lor.lhs.false83, %lor.lhs.false93, %lor.lhs.false103, %lor.lhs.false107, %lor.lhs.false117, %if.then23, %lor.lhs.false27, %lor.lhs.false37, %lor.lhs.false47, %lor.lhs.false51, %lor.lhs.false61, %for.cond.3
  %51 = phi %struct.X509_name_st* [ %call.3, %lor.lhs.false188 ], [ %call.3, %lor.lhs.false183 ], [ %call.3, %if.end179 ], [ %call.3, %lor.lhs.false166 ], [ %call.3, %lor.lhs.false159 ], [ %call.3, %lor.lhs.false154 ], [ %call.3, %if.then151 ], [ %call.3, %if.else ], [ %call.3, %lor.lhs.false135 ], [ %call.3, %if.end129 ], [ %call.3, %lor.lhs.false117 ], [ %call.3, %lor.lhs.false107 ], [ %call.3, %lor.lhs.false103 ], [ %call.3, %lor.lhs.false93 ], [ %call.3, %lor.lhs.false83 ], [ %call.3, %if.then79 ], [ %call.3, %lor.lhs.false61 ], [ %call.3, %lor.lhs.false51 ], [ %call.3, %lor.lhs.false47 ], [ %call.3, %lor.lhs.false37 ], [ %call.3, %lor.lhs.false27 ], [ %call.3, %if.then23 ], [ %call.3, %for.cond.3 ], [ %call.3, %lor.lhs.false197 ], [ %call.3, %lor.lhs.false.3 ], [ %call.3, %for.cond.2 ], [ null, %lor.lhs.false.2 ], [ null, %for.cond.1 ], [ null, %lor.lhs.false.1 ], [ null, %for.cond ], [ null, %lor.lhs.false ], [ null, %entry ]
  %52 = phi %struct.X509_name_st* [ %call.2, %lor.lhs.false188 ], [ %call.2, %lor.lhs.false183 ], [ %call.2, %if.end179 ], [ %call.2, %lor.lhs.false166 ], [ %call.2, %lor.lhs.false159 ], [ %call.2, %lor.lhs.false154 ], [ %call.2, %if.then151 ], [ %call.2, %if.else ], [ %call.2, %lor.lhs.false135 ], [ %call.2, %if.end129 ], [ %call.2, %lor.lhs.false117 ], [ %call.2, %lor.lhs.false107 ], [ %call.2, %lor.lhs.false103 ], [ %call.2, %lor.lhs.false93 ], [ %call.2, %lor.lhs.false83 ], [ %call.2, %if.then79 ], [ %call.2, %lor.lhs.false61 ], [ %call.2, %lor.lhs.false51 ], [ %call.2, %lor.lhs.false47 ], [ %call.2, %lor.lhs.false37 ], [ %call.2, %lor.lhs.false27 ], [ %call.2, %if.then23 ], [ %call.2, %for.cond.3 ], [ %call.2, %lor.lhs.false197 ], [ %call.2, %lor.lhs.false.3 ], [ %call.2, %for.cond.2 ], [ %call.2, %lor.lhs.false.2 ], [ %call.2, %for.cond.1 ], [ null, %lor.lhs.false.1 ], [ null, %for.cond ], [ null, %lor.lhs.false ], [ null, %entry ]
  %53 = phi %struct.X509_name_st* [ %call.1, %lor.lhs.false188 ], [ %call.1, %lor.lhs.false183 ], [ %call.1, %if.end179 ], [ %call.1, %lor.lhs.false166 ], [ %call.1, %lor.lhs.false159 ], [ %call.1, %lor.lhs.false154 ], [ %call.1, %if.then151 ], [ %call.1, %if.else ], [ %call.1, %lor.lhs.false135 ], [ %call.1, %if.end129 ], [ %call.1, %lor.lhs.false117 ], [ %call.1, %lor.lhs.false107 ], [ %call.1, %lor.lhs.false103 ], [ %call.1, %lor.lhs.false93 ], [ %call.1, %lor.lhs.false83 ], [ %call.1, %if.then79 ], [ %call.1, %lor.lhs.false61 ], [ %call.1, %lor.lhs.false51 ], [ %call.1, %lor.lhs.false47 ], [ %call.1, %lor.lhs.false37 ], [ %call.1, %lor.lhs.false27 ], [ %call.1, %if.then23 ], [ %call.1, %for.cond.3 ], [ %call.1, %lor.lhs.false197 ], [ %call.1, %lor.lhs.false.3 ], [ %call.1, %for.cond.2 ], [ %call.1, %lor.lhs.false.2 ], [ %call.1, %for.cond.1 ], [ %call.1, %lor.lhs.false.1 ], [ %call.1, %for.cond ], [ null, %lor.lhs.false ], [ null, %entry ]
  %testresult.0 = phi i32 [ 0, %lor.lhs.false188 ], [ 0, %lor.lhs.false183 ], [ 0, %if.end179 ], [ 0, %lor.lhs.false166 ], [ 0, %lor.lhs.false159 ], [ 0, %lor.lhs.false154 ], [ 0, %if.then151 ], [ 0, %if.else ], [ 0, %lor.lhs.false135 ], [ 0, %if.end129 ], [ 0, %lor.lhs.false117 ], [ 0, %lor.lhs.false107 ], [ 0, %lor.lhs.false103 ], [ 0, %lor.lhs.false93 ], [ 0, %lor.lhs.false83 ], [ 0, %if.then79 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false51 ], [ 0, %lor.lhs.false47 ], [ 0, %lor.lhs.false37 ], [ 0, %lor.lhs.false27 ], [ 0, %if.then23 ], [ 0, %for.cond.3 ], [ %spec.select, %lor.lhs.false197 ], [ 0, %lor.lhs.false.3 ], [ 0, %for.cond.2 ], [ 0, %lor.lhs.false.2 ], [ 0, %for.cond.1 ], [ 0, %lor.lhs.false.1 ], [ 0, %for.cond ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  %sk1.2 = phi %struct.stack_st_X509_NAME* [ null, %lor.lhs.false188 ], [ null, %lor.lhs.false183 ], [ null, %if.end179 ], [ null, %lor.lhs.false166 ], [ null, %lor.lhs.false159 ], [ null, %lor.lhs.false154 ], [ null, %if.then151 ], [ null, %if.else ], [ null, %lor.lhs.false135 ], [ null, %if.end129 ], [ %26, %lor.lhs.false117 ], [ %26, %lor.lhs.false107 ], [ %26, %lor.lhs.false103 ], [ %26, %lor.lhs.false93 ], [ %26, %lor.lhs.false83 ], [ %26, %if.then79 ], [ %14, %lor.lhs.false61 ], [ %14, %lor.lhs.false51 ], [ %14, %lor.lhs.false47 ], [ %14, %lor.lhs.false37 ], [ %14, %lor.lhs.false27 ], [ %14, %if.then23 ], [ null, %for.cond.3 ], [ null, %lor.lhs.false197 ], [ null, %lor.lhs.false.3 ], [ null, %for.cond.2 ], [ null, %lor.lhs.false.2 ], [ null, %for.cond.1 ], [ null, %lor.lhs.false.1 ], [ null, %for.cond ], [ null, %lor.lhs.false ], [ null, %entry ]
  %sk2.2 = phi %struct.stack_st_X509_NAME* [ null, %lor.lhs.false188 ], [ null, %lor.lhs.false183 ], [ null, %if.end179 ], [ null, %lor.lhs.false166 ], [ null, %lor.lhs.false159 ], [ null, %lor.lhs.false154 ], [ null, %if.then151 ], [ null, %if.else ], [ null, %lor.lhs.false135 ], [ null, %if.end129 ], [ %30, %lor.lhs.false117 ], [ %30, %lor.lhs.false107 ], [ %30, %lor.lhs.false103 ], [ null, %lor.lhs.false93 ], [ null, %lor.lhs.false83 ], [ null, %if.then79 ], [ %18, %lor.lhs.false61 ], [ %18, %lor.lhs.false51 ], [ %18, %lor.lhs.false47 ], [ null, %lor.lhs.false37 ], [ null, %lor.lhs.false27 ], [ null, %if.then23 ], [ null, %for.cond.3 ], [ null, %lor.lhs.false197 ], [ null, %lor.lhs.false.3 ], [ null, %for.cond.2 ], [ null, %lor.lhs.false.2 ], [ null, %for.cond.1 ], [ null, %lor.lhs.false.1 ], [ null, %for.cond ], [ null, %lor.lhs.false ], [ null, %entry ]
  %54 = load %struct.ssl_st*, %struct.ssl_st** %serverssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %54) #16
  %55 = load %struct.ssl_st*, %struct.ssl_st** %clientssl, align 8, !tbaa !3
  call void @SSL_free(%struct.ssl_st* noundef %55) #16
  %56 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %56) #16
  %57 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %cctx, align 8, !tbaa !3
  call void @SSL_CTX_free(%struct.ssl_ctx_st* noundef %57) #16
  call void @X509_NAME_free(%struct.X509_name_st* noundef %call) #16
  call void @X509_NAME_free(%struct.X509_name_st* noundef %53) #16
  call void @X509_NAME_free(%struct.X509_name_st* noundef %52) #16
  call void @X509_NAME_free(%struct.X509_name_st* noundef %51) #16
  %call218 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %sk1.2) #18
  call void @OPENSSL_sk_pop_free(%struct.stack_st* noundef %call218, void (i8*)* noundef bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #16
  %call220 = call fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef %sk2.2) #18
  call void @OPENSSL_sk_pop_free(%struct.stack_st* noundef %call220, void (i8*)* noundef bitcast (void (%struct.X509_name_st*)* @X509_NAME_free to void (i8*)*)) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #19
  ret i32 %testresult.0
}

declare dso_local %struct.X509_name_st* @X509_NAME_new() local_unnamed_addr #3

declare dso_local i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st* noundef, i8* noundef, i32 noundef, i8* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_X509_NAME* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set0_CA_list(%struct.ssl_ctx_st* noundef, %struct.stack_st_X509_NAME* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st* noundef, %struct.stack_st_X509_NAME* noundef) local_unnamed_addr #3

declare dso_local %struct.stack_st_X509_NAME* @SSL_get0_peer_CA_list(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc %struct.stack_st* @ossl_check_const_X509_NAME_sk_type(%struct.stack_st_X509_NAME* noundef readnone %sk) unnamed_addr #0 {
entry:
  %0 = bitcast %struct.stack_st_X509_NAME* %sk to %struct.stack_st*
  ret %struct.stack_st* %0
}

declare dso_local i32 @X509_NAME_cmp(%struct.X509_name_st* noundef, %struct.X509_name_st* noundef) local_unnamed_addr #3

declare dso_local i32 @test_ptr_null(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local void @X509_NAME_free(%struct.X509_name_st* noundef) #3

declare dso_local i32 @test_skip(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #3

declare dso_local i32 @RAND_bytes(i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @filter_provider_init(%struct.ossl_core_handle_st* noundef, %struct.ossl_dispatch_st* noundef, %struct.ossl_dispatch_st** noundef, i8** noundef) #3

declare dso_local i32 @filter_provider_set_filter(i32 noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_use_certificate_file(%struct.ssl_ctx_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_get_shared_sigalgs(%struct.ssl_st* noundef, i32 noundef, i32* noundef, i32* noundef, i32* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @filter_provider_check_clean_finish() local_unnamed_addr #3

declare dso_local %struct.ssl_st* @SSL_dup(%struct.ssl_st* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc %struct.evp_pkey_st* @get_tmp_dh_params() unnamed_addr #1 {
entry:
  %dhpkey = alloca %struct.evp_pkey_st*, align 8
  %0 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** @tmp_dh_params, align 8, !tbaa !3
  %cmp = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %cmp, label %if.then, label %land.lhs.true

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.evp_pkey_st** %dhpkey to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %dhpkey, align 8, !tbaa !3
  %call = tail call %struct.bignum_st* @BN_get_rfc3526_prime_2048(%struct.bignum_st* noundef null) #16
  %2 = bitcast %struct.bignum_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8983, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.349, i64 0, i64 0), i8* noundef %2) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end40, label %if.end

if.end:                                           ; preds = %if.then
  %3 = load %struct.ossl_lib_ctx_st*, %struct.ossl_lib_ctx_st** @libctx, align 8, !tbaa !3
  %call3 = tail call %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new_from_name(%struct.ossl_lib_ctx_st* noundef %3, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.941, i64 0, i64 0), i8* noundef null) #16
  %4 = bitcast %struct.evp_pkey_ctx_st* %call3 to i8*
  %call4 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8987, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.942, i64 0, i64 0), i8* noundef %4) #16
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call6 = tail call i32 @EVP_PKEY_fromdata_init(%struct.evp_pkey_ctx_st* noundef %call3) #16
  %cmp7 = icmp ne i32 %call6, 0
  %conv = zext i1 %cmp7 to i32
  %call8 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8988, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.943, i64 0, i64 0), i32 noundef %conv) #16
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end40, label %if.end11

if.end11:                                         ; preds = %lor.lhs.false
  %call12 = tail call %struct.ossl_param_bld_st* @OSSL_PARAM_BLD_new() #16
  %5 = bitcast %struct.ossl_param_bld_st* %call12 to i8*
  %call13 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8992, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.944, i64 0, i64 0), i8* noundef %5) #16
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end40, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %if.end11
  %call16 = tail call i32 @OSSL_PARAM_BLD_push_BN(%struct.ossl_param_bld_st* noundef %call12, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.349, i64 0, i64 0), %struct.bignum_st* noundef %call) #16
  %cmp17 = icmp ne i32 %call16, 0
  %conv18 = zext i1 %cmp17 to i32
  %call19 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8995, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.945, i64 0, i64 0), i32 noundef %conv18) #16
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end40, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %call22 = tail call i32 @OSSL_PARAM_BLD_push_uint(%struct.ossl_param_bld_st* noundef %call12, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.947, i64 0, i64 0), i32 noundef 2) #16
  %cmp23 = icmp ne i32 %call22, 0
  %conv24 = zext i1 %cmp23 to i32
  %call25 = tail call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 8998, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.946, i64 0, i64 0), i32 noundef %conv24) #16
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end40, label %if.end28

if.end28:                                         ; preds = %lor.lhs.false21
  %call29 = tail call %struct.ossl_param_st* @OSSL_PARAM_BLD_to_param(%struct.ossl_param_bld_st* noundef %call12) #16
  %6 = bitcast %struct.ossl_param_st* %call29 to i8*
  %call30 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9002, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.948, i64 0, i64 0), i8* noundef %6) #16
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end40, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32 @EVP_PKEY_fromdata(%struct.evp_pkey_ctx_st* noundef %call3, %struct.evp_pkey_st** noundef nonnull %dhpkey, i32 noundef 132, %struct.ossl_param_st* noundef %call29) #16
  %cmp34 = icmp ne i32 %call33, 0
  %conv35 = zext i1 %cmp34 to i32
  %call36 = call i32 @test_true(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9004, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.949, i64 0, i64 0), i32 noundef %conv35) #16
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end40, label %if.end39

if.end39:                                         ; preds = %lor.lhs.false32
  %7 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %dhpkey, align 8, !tbaa !3
  store %struct.evp_pkey_st* %7, %struct.evp_pkey_st** @tmp_dh_params, align 8, !tbaa !3
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then, %lor.lhs.false, %if.end, %lor.lhs.false21, %lor.lhs.false15, %if.end11, %lor.lhs.false32, %if.end28
  %tmpl.0 = phi %struct.ossl_param_bld_st* [ %call12, %if.end39 ], [ %call12, %lor.lhs.false32 ], [ %call12, %if.end28 ], [ %call12, %lor.lhs.false21 ], [ %call12, %lor.lhs.false15 ], [ %call12, %if.end11 ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %if.then ]
  %pctx.0 = phi %struct.evp_pkey_ctx_st* [ %call3, %if.end39 ], [ %call3, %lor.lhs.false32 ], [ %call3, %if.end28 ], [ %call3, %lor.lhs.false21 ], [ %call3, %lor.lhs.false15 ], [ %call3, %if.end11 ], [ %call3, %lor.lhs.false ], [ %call3, %if.end ], [ null, %if.then ]
  %params.0 = phi %struct.ossl_param_st* [ %call29, %if.end39 ], [ %call29, %lor.lhs.false32 ], [ %call29, %if.end28 ], [ null, %lor.lhs.false21 ], [ null, %lor.lhs.false15 ], [ null, %if.end11 ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %if.then ]
  call void @BN_free(%struct.bignum_st* noundef %call) #16
  call void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st* noundef %pctx.0) #16
  call void @OSSL_PARAM_BLD_free(%struct.ossl_param_bld_st* noundef %tmpl.0) #16
  call void @OSSL_PARAM_free(%struct.ossl_param_st* noundef %params.0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19
  %.pr = load %struct.evp_pkey_st*, %struct.evp_pkey_st** @tmp_dh_params, align 8, !tbaa !3
  %cmp41.not = icmp eq %struct.evp_pkey_st* %.pr, null
  br i1 %cmp41.not, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry, %if.end40
  %8 = phi %struct.evp_pkey_st* [ %.pr, %if.end40 ], [ %0, %entry ]
  %call43 = call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* noundef nonnull %8) #16
  %tobool44.not = icmp eq i32 %call43, 0
  %.pre = load %struct.evp_pkey_st*, %struct.evp_pkey_st** @tmp_dh_params, align 8
  %spec.select = select i1 %tobool44.not, %struct.evp_pkey_st* null, %struct.evp_pkey_st* %.pre
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end40
  %retval.0 = phi %struct.evp_pkey_st* [ null, %if.end40 ], [ %spec.select, %land.lhs.true ]
  ret %struct.evp_pkey_st* %retval.0
}

declare dso_local %struct.dh_st* @EVP_PKEY_get1_DH(%struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set0_tmp_dh_pkey(%struct.ssl_ctx_st* noundef, %struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_set_tmp_dh_callback(%struct.ssl_ctx_st* noundef, %struct.dh_st* (%struct.ssl_st*, i32, i32)* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.dh_st* @tmp_dh_callback(%struct.ssl_st* nocapture noundef readnone %s, i32 noundef %is_export, i32 noundef %keylen) #1 {
entry:
  %call = tail call fastcc %struct.evp_pkey_st* @get_tmp_dh_params() #18
  %0 = bitcast %struct.evp_pkey_st* %call to i8*
  %call1 = tail call i32 @test_ptr(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i32 noundef 9028, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.928, i64 0, i64 0), i8* noundef %0) #16
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = tail call %struct.dh_st* @EVP_PKEY_get1_DH(%struct.evp_pkey_st* noundef %call) #16
  tail call void @DH_free(%struct.dh_st* noundef %call2) #16
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* noundef %call) #16
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.dh_st* [ %call2, %if.end ], [ null, %entry ]
  ret %struct.dh_st* %retval.0
}

declare dso_local i32 @SSL_set0_tmp_dh_pkey(%struct.ssl_st* noundef, %struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local void @SSL_set_tmp_dh_callback(%struct.ssl_st* noundef, %struct.dh_st* (%struct.ssl_st*, i32, i32)* noundef) local_unnamed_addr #3

declare dso_local void @DH_free(%struct.dh_st* noundef) local_unnamed_addr #3

declare dso_local %struct.bignum_st* @BN_get_rfc3526_prime_2048(%struct.bignum_st* noundef) local_unnamed_addr #3

declare dso_local %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new_from_name(%struct.ossl_lib_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

declare dso_local i32 @EVP_PKEY_fromdata_init(%struct.evp_pkey_ctx_st* noundef) local_unnamed_addr #3

declare dso_local %struct.ossl_param_bld_st* @OSSL_PARAM_BLD_new() local_unnamed_addr #3

declare dso_local i32 @OSSL_PARAM_BLD_push_BN(%struct.ossl_param_bld_st* noundef, i8* noundef, %struct.bignum_st* noundef) local_unnamed_addr #3

declare dso_local i32 @OSSL_PARAM_BLD_push_uint(%struct.ossl_param_bld_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.ossl_param_st* @OSSL_PARAM_BLD_to_param(%struct.ossl_param_bld_st* noundef) local_unnamed_addr #3

declare dso_local i32 @EVP_PKEY_fromdata(%struct.evp_pkey_ctx_st* noundef, %struct.evp_pkey_st** noundef, i32 noundef, %struct.ossl_param_st* noundef) local_unnamed_addr #3

declare dso_local void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st* noundef) local_unnamed_addr #3

declare dso_local void @OSSL_PARAM_BLD_free(%struct.ossl_param_bld_st* noundef) local_unnamed_addr #3

declare dso_local void @OSSL_PARAM_free(%struct.ossl_param_st* noundef) local_unnamed_addr #3

declare dso_local i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local i32 @EVP_PKEY_get_bits(%struct.evp_pkey_st* noundef) local_unnamed_addr #3

declare dso_local %struct.X509_VERIFY_PARAM_st* @SSL_CTX_get0_param(%struct.ssl_ctx_st* noundef) local_unnamed_addr #3

declare dso_local i32 @X509_VERIFY_PARAM_get_hostflags(%struct.X509_VERIFY_PARAM_st* noundef) local_unnamed_addr #3

declare dso_local void @X509_VERIFY_PARAM_set_hostflags(%struct.X509_VERIFY_PARAM_st* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local %struct.X509_VERIFY_PARAM_st* @SSL_get0_param(%struct.ssl_st* noundef) local_unnamed_addr #3

declare dso_local i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_SESSION_set_timeout(%struct.ssl_session_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i32 @test_long_ne(i8* noundef, i32 noundef, i8* noundef, i8* noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare dso_local i64 @SSL_SESSION_get_time(%struct.ssl_session_st* noundef) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #15

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { noinline nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #3 = { "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree noinline nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree noinline nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { nobuiltin nounwind "no-builtins" }
attributes #17 = { nobuiltin nounwind readonly willreturn "no-builtins" }
attributes #18 = { nobuiltin "no-builtins" }
attributes #19 = { nounwind }
attributes #20 = { nobuiltin noreturn nounwind "no-builtins" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 14.0.0"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!5, !5, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"long", !5, i64 0}
!12 = !{!13, !4, i64 0}
!13 = !{!"", !4, i64 0, !11, i64 8, !4, i64 16, !8, i64 24, !8, i64 28}
!14 = !{!13, !11, i64 8}
!15 = !{!13, !4, i64 16}
!16 = !{!13, !8, i64 28}
!17 = !{!18, !8, i64 0}
!18 = !{!"sslapitest_log_counts", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !8, i64 24, !8, i64 28, !8, i64 32}
!19 = !{!18, !8, i64 4}
!20 = !{!18, !8, i64 32}
!21 = !{!18, !8, i64 8}
!22 = !{!18, !8, i64 28}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{i32 0, i32 -2147483648}
!26 = !{!27, !4, i64 760}
!27 = !{!"ssl_session_st", !8, i64 0, !11, i64 8, !5, i64 16, !5, i64 80, !11, i64 592, !5, i64 600, !11, i64 632, !5, i64 640, !4, i64 672, !4, i64 680, !8, i64 688, !4, i64 696, !4, i64 704, !11, i64 712, !5, i64 720, !11, i64 728, !11, i64 736, !11, i64 744, !8, i64 752, !8, i64 756, !4, i64 760, !11, i64 768, !8, i64 776, !28, i64 784, !4, i64 800, !4, i64 808, !29, i64 816, !4, i64 880, !4, i64 888, !11, i64 896, !8, i64 904, !4, i64 912, !4, i64 920}
!28 = !{!"crypto_ex_data_st", !4, i64 0, !4, i64 8}
!29 = !{!"", !4, i64 0, !4, i64 8, !11, i64 16, !11, i64 24, !8, i64 32, !8, i64 36, !4, i64 40, !11, i64 48, !5, i64 56}
!30 = !{!31, !8, i64 24}
!31 = !{!"ssl_cipher_st", !8, i64 0, !4, i64 8, !4, i64 16, !8, i64 24, !8, i64 28, !8, i64 32, !8, i64 36, !8, i64 40, !8, i64 44, !8, i64 48, !8, i64 52, !8, i64 56, !8, i64 60, !8, i64 64, !8, i64 68, !8, i64 72}
!32 = !{!27, !11, i64 768}
!33 = !{!34, !4, i64 0}
!34 = !{!"", !4, i64 0, !8, i64 8}
!35 = distinct !{!35, !24}
!36 = distinct !{!36, !24}
!37 = distinct !{!37, !24}
!38 = distinct !{!38, !24}
!39 = !{!27, !11, i64 592}
!40 = !{!27, !4, i64 800}
!41 = !{!27, !4, i64 808}
!42 = distinct !{!42, !24}
!43 = distinct !{!43, !24, !44}
!44 = !{!"llvm.loop.isvectorized", i32 1}
!45 = !{!46, !4, i64 32}
!46 = !{!"ssl3_record_st", !8, i64 0, !8, i64 4, !11, i64 8, !11, i64 16, !11, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !8, i64 56, !11, i64 64, !5, i64 72}
!47 = !{!46, !11, i64 24}
!48 = !{!46, !11, i64 8}
!49 = distinct !{!49, !24}
!50 = distinct !{!50, !24}
!51 = !{!18, !8, i64 12}
!52 = !{!18, !8, i64 16}
!53 = !{!18, !8, i64 20}
!54 = !{!18, !8, i64 24}
!55 = distinct !{!55, !24}
!56 = distinct !{!56, !24}
!57 = distinct !{!57, !24}
!58 = !{!59, !4, i64 0}
!59 = !{!"", !4, i64 0, !11, i64 8}
!60 = !{!59, !11, i64 8}
!61 = !{i64 0, i64 8, !3, i64 8, i64 8, !10}
!62 = !{!63, !4, i64 16}
!63 = !{!"SRP_gN_st", !4, i64 0, !4, i64 8, !4, i64 16}
!64 = !{!63, !4, i64 8}
!65 = !{!66, !4, i64 0}
!66 = !{!"SRP_user_pwd_st", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40}
!67 = !{!66, !4, i64 16}
!68 = !{!66, !4, i64 8}
!69 = !{!70, !4, i64 0}
!70 = !{!"SRP_VBASE_st", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32}
!71 = !{!66, !4, i64 32}
!72 = !{!66, !4, i64 24}
!73 = !{!66, !4, i64 40}
!74 = !{!75, !8, i64 0}
!75 = !{!"info_cb_states_st", !8, i64 0, !4, i64 8}
!76 = !{!75, !4, i64 8}
!77 = !{!78, !8, i64 0}
!78 = !{!"", !8, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48}
!79 = !{!78, !4, i64 8}
!80 = !{!78, !4, i64 16}
!81 = !{!78, !4, i64 24}
!82 = !{!78, !4, i64 32}
!83 = !{i64 0, i64 8, !3, i64 8, i64 4, !7, i64 16, i64 8, !3, i64 24, i64 8, !10, i64 32, i64 8, !10}
