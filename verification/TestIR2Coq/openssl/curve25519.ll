; ModuleID = 'crypto/ec/curve25519.c'
source_filename = "crypto/ec/curve25519.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ge_precomp = type { [10 x i32], [10 x i32], [10 x i32] }
%struct.ossl_lib_ctx_st = type opaque
%struct.ge_p3 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }
%struct.evp_md_st = type opaque
%struct.evp_md_ctx_st = type opaque
%struct.engine_st = type opaque
%struct.ge_p1p1 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }
%struct.ge_p2 = type { [10 x i32], [10 x i32], [10 x i32] }
%struct.ge_cached = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }

@.str = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@allzeroes = internal constant [15 x i8] zeroinitializer, align 1
@ossl_x25519.kZeros = internal constant [32 x i8] zeroinitializer, align 16
@k25519Precomp = internal constant [32 x [8 x %struct.ge_precomp]] [[8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 25967493, i32 -14356035, i32 29566456, i32 3660896, i32 -12694345, i32 4014787, i32 27544626, i32 -11754271, i32 -6079156, i32 2047605], [10 x i32] [i32 -12545711, i32 934262, i32 -2722910, i32 3049990, i32 -727428, i32 9406986, i32 12720692, i32 5043384, i32 19500929, i32 -15469378], [10 x i32] [i32 -8738181, i32 4489570, i32 9688441, i32 -14785194, i32 10184609, i32 -12363380, i32 29287919, i32 11864899, i32 -24514362, i32 -4438546] }, %struct.ge_precomp { [10 x i32] [i32 -12815894, i32 -12976347, i32 -21581243, i32 11784320, i32 -25355658, i32 -2750717, i32 -11717903, i32 -3814571, i32 -358445, i32 -10211303], [10 x i32] [i32 -21703237, i32 6903825, i32 27185491, i32 6451973, i32 -29577724, i32 -9554005, i32 -15616551, i32 11189268, i32 -26829678, i32 -5319081], [10 x i32] [i32 26966642, i32 11152617, i32 32442495, i32 15396054, i32 14353839, i32 -12752335, i32 -3128826, i32 -9541118, i32 -15472047, i32 -4166697] }, %struct.ge_precomp { [10 x i32] [i32 15636291, i32 -9688557, i32 24204773, i32 -7912398, i32 616977, i32 -16685262, i32 27787600, i32 -14772189, i32 28944400, i32 -1550024], [10 x i32] [i32 16568933, i32 4717097, i32 -11556148, i32 -1102322, i32 15682896, i32 -11807043, i32 16354577, i32 -11775962, i32 7689662, i32 11199574], [10 x i32] [i32 30464156, i32 -5976125, i32 -11779434, i32 -15670865, i32 23220365, i32 15915852, i32 7512774, i32 10017326, i32 -17749093, i32 -9920357] }, %struct.ge_precomp { [10 x i32] [i32 -17036878, i32 13921892, i32 10945806, i32 -6033431, i32 27105052, i32 -16084379, i32 -28926210, i32 15006023, i32 3284568, i32 -6276540], [10 x i32] [i32 23599295, i32 -8306047, i32 -11193664, i32 -7687416, i32 13236774, i32 10506355, i32 7464579, i32 9656445, i32 13059162, i32 10374397], [10 x i32] [i32 7798556, i32 16710257, i32 3033922, i32 2874086, i32 28997861, i32 2835604, i32 32406664, i32 -3839045, i32 -641708, i32 -101325] }, %struct.ge_precomp { [10 x i32] [i32 10861363, i32 11473154, i32 27284546, i32 1981175, i32 -30064349, i32 12577861, i32 32867885, i32 14515107, i32 -15438304, i32 10819380], [10 x i32] [i32 4708026, i32 6336745, i32 20377586, i32 9066809, i32 -11272109, i32 6594696, i32 -25653668, i32 12483688, i32 -12668491, i32 5581306], [10 x i32] [i32 19563160, i32 16186464, i32 -29386857, i32 4097519, i32 10237984, i32 -4348115, i32 28542350, i32 13850243, i32 -23678021, i32 -15815942] }, %struct.ge_precomp { [10 x i32] [i32 -15371964, i32 -12862754, i32 32573250, i32 4720197, i32 -26436522, i32 5875511, i32 -19188627, i32 -15224819, i32 -9818940, i32 -12085777], [10 x i32] [i32 -8549212, i32 109983, i32 15149363, i32 2178705, i32 22900618, i32 4543417, i32 3044240, i32 -15689887, i32 1762328, i32 14866737], [10 x i32] [i32 -18199695, i32 -15951423, i32 -10473290, i32 1707278, i32 -17185920, i32 3916101, i32 -28236412, i32 3959421, i32 27914454, i32 4383652] }, %struct.ge_precomp { [10 x i32] [i32 5153746, i32 9909285, i32 1723747, i32 -2777874, i32 30523605, i32 5516873, i32 19480852, i32 5230134, i32 -23952439, i32 -15175766], [10 x i32] [i32 -30269007, i32 -3463509, i32 7665486, i32 10083793, i32 28475525, i32 1649722, i32 20654025, i32 16520125, i32 30598449, i32 7715701], [10 x i32] [i32 28881845, i32 14381568, i32 9657904, i32 3680757, i32 -20181635, i32 7843316, i32 -31400660, i32 1370708, i32 29794553, i32 -1409300] }, %struct.ge_precomp { [10 x i32] [i32 14499471, i32 -2729599, i32 -33191113, i32 -4254652, i32 28494862, i32 14271267, i32 30290735, i32 10876454, i32 -33154098, i32 2381726], [10 x i32] [i32 -7195431, i32 -2655363, i32 -14730155, i32 462251, i32 -27724326, i32 3941372, i32 -6236617, i32 3696005, i32 -32300832, i32 15351955], [10 x i32] [i32 27431194, i32 8222322, i32 16448760, i32 -3907995, i32 -18707002, i32 11938355, i32 -32961401, i32 -2970515, i32 29551813, i32 10109425] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -13657040, i32 -13155431, i32 -31283750, i32 11777098, i32 21447386, i32 6519384, i32 -2378284, i32 -1627556, i32 10092783, i32 -4764171], [10 x i32] [i32 27939166, i32 14210322, i32 4677035, i32 16277044, i32 -22964462, i32 -12398139, i32 -32508754, i32 12005538, i32 -17810127, i32 12803510], [10 x i32] [i32 17228999, i32 -15661624, i32 -1233527, i32 300140, i32 -1224870, i32 -11714777, i32 30364213, i32 -9038194, i32 18016357, i32 4397660] }, %struct.ge_precomp { [10 x i32] [i32 -10958843, i32 -7690207, i32 4776341, i32 -14954238, i32 27850028, i32 -15602212, i32 -26619106, i32 14544525, i32 -17477504, i32 982639], [10 x i32] [i32 29253598, i32 15796703, i32 -2863982, i32 -9908884, i32 10057023, i32 3163536, i32 7332899, i32 -4120128, i32 -21047696, i32 9934963], [10 x i32] [i32 5793303, i32 16271923, i32 -24131614, i32 -10116404, i32 29188560, i32 1206517, i32 -14747930, i32 4559895, i32 -30123922, i32 -10897950] }, %struct.ge_precomp { [10 x i32] [i32 -27643952, i32 -11493006, i32 16282657, i32 -11036493, i32 28414021, i32 -15012264, i32 24191034, i32 4541697, i32 -13338309, i32 5500568], [10 x i32] [i32 12650548, i32 -1497113, i32 9052871, i32 11355358, i32 -17680037, i32 -8400164, i32 -17430592, i32 12264343, i32 10874051, i32 13524335], [10 x i32] [i32 25556948, i32 -3045990, i32 714651, i32 2510400, i32 23394682, i32 -10415330, i32 33119038, i32 5080568, i32 -22528059, i32 5376628] }, %struct.ge_precomp { [10 x i32] [i32 -26088264, i32 -4011052, i32 -17013699, i32 -3537628, i32 -6726793, i32 1920897, i32 -22321305, i32 -9447443, i32 4535768, i32 1569007], [10 x i32] [i32 -2255422, i32 14606630, i32 -21692440, i32 -8039818, i32 28430649, i32 8775819, i32 -30494562, i32 3044290, i32 31848280, i32 12543772], [10 x i32] [i32 -22028579, i32 2943893, i32 -31857513, i32 6777306, i32 13784462, i32 -4292203, i32 -27377195, i32 -2062731, i32 7718482, i32 14474653] }, %struct.ge_precomp { [10 x i32] [i32 2385315, i32 2454213, i32 -22631320, i32 46603, i32 -4437935, i32 -15680415, i32 656965, i32 -7236665, i32 24316168, i32 -5253567], [10 x i32] [i32 13741529, i32 10911568, i32 -33233417, i32 -8603737, i32 -20177830, i32 -1033297, i32 33040651, i32 -13424532, i32 -20729456, i32 8321686], [10 x i32] [i32 21060490, i32 -2212744, i32 15712757, i32 -4336099, i32 1639040, i32 10656336, i32 23845965, i32 -11874838, i32 -9984458, i32 608372] }, %struct.ge_precomp { [10 x i32] [i32 -13672732, i32 -15087586, i32 -10889693, i32 -7557059, i32 -6036909, i32 11305547, i32 1123968, i32 -6780577, i32 27229399, i32 23887], [10 x i32] [i32 -23244140, i32 -294205, i32 -11744728, i32 14712571, i32 -29465699, i32 -2029617, i32 12797024, i32 -6440308, i32 -1633405, i32 16678954], [10 x i32] [i32 -29500620, i32 4770662, i32 -16054387, i32 14001338, i32 7830047, i32 9564805, i32 -1508144, i32 -4795045, i32 -17169265, i32 4904953] }, %struct.ge_precomp { [10 x i32] [i32 24059557, i32 14617003, i32 19037157, i32 -15039908, i32 19766093, i32 -14906429, i32 5169211, i32 16191880, i32 2128236, i32 -4326833], [10 x i32] [i32 -16981152, i32 4124966, i32 -8540610, i32 -10653797, i32 30336522, i32 -14105247, i32 -29806336, i32 916033, i32 -6882542, i32 -2986532], [10 x i32] [i32 -22630907, i32 12419372, i32 -7134229, i32 -7473371, i32 -16478904, i32 16739175, i32 285431, i32 2763829, i32 15736322, i32 4143876] }, %struct.ge_precomp { [10 x i32] [i32 2379352, i32 11839345, i32 -4110402, i32 -5988665, i32 11274298, i32 794957, i32 212801, i32 -14594663, i32 23527084, i32 -16458268], [10 x i32] [i32 33431127, i32 -11130478, i32 -17838966, i32 -15626900, i32 8909499, i32 8376530, i32 -32625340, i32 4087881, i32 -15188911, i32 -14416214], [10 x i32] [i32 1767683, i32 7197987, i32 -13205226, i32 -2022635, i32 -13091350, i32 448826, i32 5799055, i32 4357868, i32 -4774191, i32 -16323038] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 6721966, i32 13833823, i32 -23523388, i32 -1551314, i32 26354293, i32 -11863321, i32 23365147, i32 -3949732, i32 7390890, i32 2759800], [10 x i32] [i32 4409041, i32 2052381, i32 23373853, i32 10530217, i32 7676779, i32 -12885954, i32 21302353, i32 -4264057, i32 1244380, i32 -12919645], [10 x i32] [i32 -4421239, i32 7169619, i32 4982368, i32 -2957590, i32 30256825, i32 -2777540, i32 14086413, i32 9208236, i32 15886429, i32 16489664] }, %struct.ge_precomp { [10 x i32] [i32 1996075, i32 10375649, i32 14346367, i32 13311202, i32 -6874135, i32 -16438411, i32 -13693198, i32 398369, i32 -30606455, i32 -712933], [10 x i32] [i32 -25307465, i32 9795880, i32 -2777414, i32 14878809, i32 -33531835, i32 14780363, i32 13348553, i32 12076947, i32 -30836462, i32 5113182], [10 x i32] [i32 -17770784, i32 11797796, i32 31950843, i32 13929123, i32 -25888302, i32 12288344, i32 -30341101, i32 -7336386, i32 13847711, i32 5387222] }, %struct.ge_precomp { [10 x i32] [i32 -18582163, i32 -3416217, i32 17824843, i32 -2340966, i32 22744343, i32 -10442611, i32 8763061, i32 3617786, i32 -19600662, i32 10370991], [10 x i32] [i32 20246567, i32 -14369378, i32 22358229, i32 -543712, i32 18507283, i32 -10413996, i32 14554437, i32 -8746092, i32 32232924, i32 16763880], [10 x i32] [i32 9648505, i32 10094563, i32 26416693, i32 14745928, i32 -30374318, i32 -6472621, i32 11094161, i32 15689506, i32 3140038, i32 -16510092] }, %struct.ge_precomp { [10 x i32] [i32 -16160072, i32 5472695, i32 31895588, i32 4744994, i32 8823515, i32 10365685, i32 -27224800, i32 9448613, i32 -28774454, i32 366295], [10 x i32] [i32 19153450, i32 11523972, i32 -11096490, i32 -6503142, i32 -24647631, i32 5420647, i32 28344573, i32 8041113, i32 719605, i32 11671788], [10 x i32] [i32 8678025, i32 2694440, i32 -6808014, i32 2517372, i32 4964326, i32 11152271, i32 -15432916, i32 -15266516, i32 27000813, i32 -10195553] }, %struct.ge_precomp { [10 x i32] [i32 -15157904, i32 7134312, i32 8639287, i32 -2814877, i32 -7235688, i32 10421742, i32 564065, i32 5336097, i32 6750977, i32 -14521026], [10 x i32] [i32 11836410, i32 -3979488, i32 26297894, i32 16080799, i32 23455045, i32 15735944, i32 1695823, i32 -8819122, i32 8169720, i32 16220347], [10 x i32] [i32 -18115838, i32 8653647, i32 17578566, i32 -6092619, i32 -8025777, i32 -16012763, i32 -11144307, i32 -2627664, i32 -5990708, i32 -14166033] }, %struct.ge_precomp { [10 x i32] [i32 -23308498, i32 -10968312, i32 15213228, i32 -10081214, i32 -30853605, i32 -11050004, i32 27884329, i32 2847284, i32 2655861, i32 1738395], [10 x i32] [i32 -27537433, i32 -14253021, i32 -25336301, i32 -8002780, i32 -9370762, i32 8129821, i32 21651608, i32 -3239336, i32 -19087449, i32 -11005278], [10 x i32] [i32 1533110, i32 3437855, i32 23735889, i32 459276, i32 29970501, i32 11335377, i32 26030092, i32 5821408, i32 10478196, i32 8544890] }, %struct.ge_precomp { [10 x i32] [i32 32173121, i32 -16129311, i32 24896207, i32 3921497, i32 22579056, i32 -3410854, i32 19270449, i32 12217473, i32 17789017, i32 -3395995], [10 x i32] [i32 -30552961, i32 -2228401, i32 -15578829, i32 -10147201, i32 13243889, i32 517024, i32 15479401, i32 -3853233, i32 30460520, i32 1052596], [10 x i32] [i32 -11614875, i32 13323618, i32 32618793, i32 8175907, i32 -15230173, i32 12596687, i32 27491595, i32 -4612359, i32 3179268, i32 -9478891] }, %struct.ge_precomp { [10 x i32] [i32 31947069, i32 -14366651, i32 -4640583, i32 -15339921, i32 -15125977, i32 -6039709, i32 -14756777, i32 -16411740, i32 19072640, i32 -9511060], [10 x i32] [i32 11685058, i32 11822410, i32 3158003, i32 -13952594, i32 33402194, i32 -4165066, i32 5977896, i32 -5215017, i32 473099, i32 5040608], [10 x i32] [i32 -20290863, i32 8198642, i32 -27410132, i32 11602123, i32 1290375, i32 -2799760, i32 28326862, i32 1721092, i32 -19558642, i32 -3131606] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 7881532, i32 10687937, i32 7578723, i32 7738378, i32 -18951012, i32 -2553952, i32 21820786, i32 8076149, i32 -27868496, i32 11538389], [10 x i32] [i32 -19935666, i32 3899861, i32 18283497, i32 -6801568, i32 -15728660, i32 -11249211, i32 8754525, i32 7446702, i32 -5676054, i32 5797016], [10 x i32] [i32 -11295600, i32 -3793569, i32 -15782110, i32 -7964573, i32 12708869, i32 -8456199, i32 2014099, i32 -9050574, i32 -2369172, i32 -5877341] }, %struct.ge_precomp { [10 x i32] [i32 -22472376, i32 -11568741, i32 -27682020, i32 1146375, i32 18956691, i32 16640559, i32 1192730, i32 -3714199, i32 15123619, i32 10811505], [10 x i32] [i32 14352098, i32 -3419715, i32 -18942044, i32 10822655, i32 32750596, i32 4699007, i32 -70363, i32 15776356, i32 -28886779, i32 -11974553], [10 x i32] [i32 -28241164, i32 -8072475, i32 -4978962, i32 -5315317, i32 29416931, i32 1847569, i32 -20654173, i32 -16484855, i32 4714547, i32 -9600655] }, %struct.ge_precomp { [10 x i32] [i32 15200332, i32 8368572, i32 19679101, i32 15970074, i32 -31872674, i32 1959451, i32 24611599, i32 -4543832, i32 -11745876, i32 12340220], [10 x i32] [i32 12876937, i32 -10480056, i32 33134381, i32 6590940, i32 -6307776, i32 14872440, i32 9613953, i32 8241152, i32 15370987, i32 9608631], [10 x i32] [i32 -4143277, i32 -12014408, i32 8446281, i32 -391603, i32 4407738, i32 13629032, i32 -7724868, i32 15866074, i32 -28210621, i32 -8814099] }, %struct.ge_precomp { [10 x i32] [i32 26660628, i32 -15677655, i32 8393734, i32 358047, i32 -7401291, i32 992988, i32 -23904233, i32 858697, i32 20571223, i32 8420556], [10 x i32] [i32 14620715, i32 13067227, i32 -15447274, i32 8264467, i32 14106269, i32 15080814, i32 33531827, i32 12516406, i32 -21574435, i32 -12476749], [10 x i32] [i32 236881, i32 10476226, i32 57258, i32 -14677024, i32 6472998, i32 2466984, i32 17258519, i32 7256740, i32 8791136, i32 15069930] }, %struct.ge_precomp { [10 x i32] [i32 1276410, i32 -9371918, i32 22949635, i32 -16322807, i32 -23493039, i32 -5702186, i32 14711875, i32 4874229, i32 -30663140, i32 -2331391], [10 x i32] [i32 5855666, i32 4990204, i32 -13711848, i32 7294284, i32 -7804282, i32 1924647, i32 -1423175, i32 -7912378, i32 -33069337, i32 9234253], [10 x i32] [i32 20590503, i32 -9018988, i32 31529744, i32 -7352666, i32 -2706834, i32 10650548, i32 31559055, i32 -11609587, i32 18979186, i32 13396066] }, %struct.ge_precomp { [10 x i32] [i32 24474287, i32 4968103, i32 22267082, i32 4407354, i32 24063882, i32 -8325180, i32 -18816887, i32 13594782, i32 33514650, i32 7021958], [10 x i32] [i32 -11566906, i32 -6565505, i32 -21365085, i32 15928892, i32 -26158305, i32 4315421, i32 -25948728, i32 -3916677, i32 -21480480, i32 12868082], [10 x i32] [i32 -28635013, i32 13504661, i32 19988037, i32 -2132761, i32 21078225, i32 6443208, i32 -21446107, i32 2244500, i32 -12455797, i32 -8089383] }, %struct.ge_precomp { [10 x i32] [i32 -30595528, i32 13793479, i32 -5852820, i32 319136, i32 -25723172, i32 -6263899, i32 33086546, i32 8957937, i32 -15233648, i32 5540521], [10 x i32] [i32 -11630176, i32 -11503902, i32 -8119500, i32 -7643073, i32 2620056, i32 1022908, i32 -23710744, i32 -1568984, i32 -16128528, i32 -14962807], [10 x i32] [i32 23152971, i32 775386, i32 27395463, i32 14006635, i32 -9701118, i32 4649512, i32 1689819, i32 892185, i32 -11513277, i32 -15205948] }, %struct.ge_precomp { [10 x i32] [i32 9770129, i32 9586738, i32 26496094, i32 4324120, i32 1556511, i32 -3550024, i32 27453819, i32 4763127, i32 -19179614, i32 5867134], [10 x i32] [i32 -32765025, i32 1927590, i32 31726409, i32 -4753295, i32 23962434, i32 -16019500, i32 27846559, i32 5931263, i32 -29749703, i32 -16108455], [10 x i32] [i32 27461885, i32 -2977536, i32 22380810, i32 1815854, i32 -23033753, i32 -3031938, i32 7283490, i32 -15148073, i32 -19526700, i32 7734629] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -8010264, i32 -9590817, i32 -11120403, i32 6196038, i32 29344158, i32 -13430885, i32 7585295, i32 -3176626, i32 18549497, i32 15302069], [10 x i32] [i32 -32658337, i32 -6171222, i32 -7672793, i32 -11051681, i32 6258878, i32 13504381, i32 10458790, i32 -6418461, i32 -8872242, i32 8424746], [10 x i32] [i32 24687205, i32 8613276, i32 -30667046, i32 -3233545, i32 1863892, i32 -1830544, i32 19206234, i32 7134917, i32 -11284482, i32 -828919] }, %struct.ge_precomp { [10 x i32] [i32 11334899, i32 -9218022, i32 8025293, i32 12707519, i32 17523892, i32 -10476071, i32 10243738, i32 -14685461, i32 -5066034, i32 16498837], [10 x i32] [i32 8911542, i32 6887158, i32 -9584260, i32 -6958590, i32 11145641, i32 -9543680, i32 17303925, i32 -14124238, i32 6536641, i32 10543906], [10 x i32] [i32 -28946384, i32 15479763, i32 -17466835, i32 568876, i32 -1497683, i32 11223454, i32 -2669190, i32 -16625574, i32 -27235709, i32 8876771] }, %struct.ge_precomp { [10 x i32] [i32 -25742899, i32 -12566864, i32 -15649966, i32 -846607, i32 -33026686, i32 -796288, i32 -33481822, i32 15824474, i32 -604426, i32 -9039817], [10 x i32] [i32 10330056, i32 70051, i32 7957388, i32 -9002667, i32 9764902, i32 15609756, i32 27698697, i32 -4890037, i32 1657394, i32 3084098], [10 x i32] [i32 10477963, i32 -7470260, i32 12119566, i32 -13250805, i32 29016247, i32 -5365589, i32 31280319, i32 14396151, i32 -30233575, i32 15272409] }, %struct.ge_precomp { [10 x i32] [i32 -12288309, i32 3169463, i32 28813183, i32 16658753, i32 25116432, i32 -5630466, i32 -25173957, i32 -12636138, i32 -25014757, i32 1950504], [10 x i32] [i32 -26180358, i32 9489187, i32 11053416, i32 -14746161, i32 -31053720, i32 5825630, i32 -8384306, i32 -8767532, i32 15341279, i32 8373727], [10 x i32] [i32 28685821, i32 7759505, i32 -14378516, i32 -12002860, i32 -31971820, i32 4079242, i32 298136, i32 -10232602, i32 -2878207, i32 15190420] }, %struct.ge_precomp { [10 x i32] [i32 -32932876, i32 13806336, i32 -14337485, i32 -15794431, i32 -24004620, i32 10940928, i32 8669718, i32 2742393, i32 -26033313, i32 -6875003], [10 x i32] [i32 -1580388, i32 -11729417, i32 -25979658, i32 -11445023, i32 -17411874, i32 -10912854, i32 9291594, i32 -16247779, i32 -12154742, i32 6048605], [10 x i32] [i32 -30305315, i32 14843444, i32 1539301, i32 11864366, i32 20201677, i32 1900163, i32 13934231, i32 5128323, i32 11213262, i32 9168384] }, %struct.ge_precomp { [10 x i32] [i32 -26280513, i32 11007847, i32 19408960, i32 -940758, i32 -18592965, i32 -4328580, i32 -5088060, i32 -11105150, i32 20470157, i32 -16398701], [10 x i32] [i32 -23136053, i32 9282192, i32 14855179, i32 -15390078, i32 -7362815, i32 -14408560, i32 -22783952, i32 14461608, i32 14042978, i32 5230683], [10 x i32] [i32 29969567, i32 -2741594, i32 -16711867, i32 -8552442, i32 9175486, i32 -2468974, i32 21556951, i32 3506042, i32 -5933891, i32 -12449708] }, %struct.ge_precomp { [10 x i32] [i32 -3144746, i32 8744661, i32 19704003, i32 4581278, i32 -20430686, i32 6830683, i32 -21284170, i32 8971513, i32 -28539189, i32 15326563], [10 x i32] [i32 -19464629, i32 10110288, i32 -17262528, i32 -3503892, i32 -23500387, i32 1355669, i32 -15523050, i32 15300988, i32 -20514118, i32 9168260], [10 x i32] [i32 -5353335, i32 4488613, i32 -23803248, i32 16314347, i32 7780487, i32 -15638939, i32 -28948358, i32 9601605, i32 33087103, i32 -9011387] }, %struct.ge_precomp { [10 x i32] [i32 -19443170, i32 -15512900, i32 -20797467, i32 -12445323, i32 -29824447, i32 10229461, i32 -27444329, i32 -15000531, i32 -5996870, i32 15664672], [10 x i32] [i32 23294591, i32 -16632613, i32 -22650781, i32 -8470978, i32 27844204, i32 11461195, i32 13099750, i32 -2460356, i32 18151676, i32 13417686], [10 x i32] [i32 -24722913, i32 -4176517, i32 -31150679, i32 5988919, i32 -26858785, i32 6685065, i32 1661597, i32 -12551441, i32 15271676, i32 -15452665] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 11433042, i32 -13228665, i32 8239631, i32 -5279517, i32 -1985436, i32 -725718, i32 -18698764, i32 2167544, i32 -6921301, i32 -13440182], [10 x i32] [i32 -31436171, i32 15575146, i32 30436815, i32 12192228, i32 -22463353, i32 9395379, i32 -9917708, i32 -8638997, i32 12215110, i32 12028277], [10 x i32] [i32 14098400, i32 6555944, i32 23007258, i32 5757252, i32 -15427832, i32 -12950502, i32 30123440, i32 4617780, i32 -16900089, i32 -655628] }, %struct.ge_precomp { [10 x i32] [i32 -4026201, i32 -15240835, i32 11893168, i32 13718664, i32 -14809462, i32 1847385, i32 -15819999, i32 10154009, i32 23973261, i32 -12684474], [10 x i32] [i32 -26531820, i32 -3695990, i32 -1908898, i32 2534301, i32 -31870557, i32 -16550355, i32 18341390, i32 -11419951, i32 32013174, i32 -10103539], [10 x i32] [i32 -25479301, i32 10876443, i32 -11771086, i32 -14625140, i32 -12369567, i32 1838104, i32 21911214, i32 6354752, i32 4425632, i32 -837822] }, %struct.ge_precomp { [10 x i32] [i32 -10433389, i32 -14612966, i32 22229858, i32 -3091047, i32 -13191166, i32 776729, i32 -17415375, i32 -12020462, i32 4725005, i32 14044970], [10 x i32] [i32 19268650, i32 -7304421, i32 1555349, i32 8692754, i32 -21474059, i32 -9910664, i32 6347390, i32 -1411784, i32 -19522291, i32 -16109756], [10 x i32] [i32 -24864089, i32 12986008, i32 -10898878, i32 -5558584, i32 -11312371, i32 -148526, i32 19541418, i32 8180106, i32 9282262, i32 10282508] }, %struct.ge_precomp { [10 x i32] [i32 -26205082, i32 4428547, i32 -8661196, i32 -13194263, i32 4098402, i32 -14165257, i32 15522535, i32 8372215, i32 5542595, i32 -10702683], [10 x i32] [i32 -10562541, i32 14895633, i32 26814552, i32 -16673850, i32 -17480754, i32 -2489360, i32 -2781891, i32 6993761, i32 -18093885, i32 10114655], [10 x i32] [i32 -20107055, i32 -929418, i32 31422704, i32 10427861, i32 -7110749, i32 6150669, i32 -29091755, i32 -11529146, i32 25953725, i32 -106158] }, %struct.ge_precomp { [10 x i32] [i32 -4234397, i32 -8039292, i32 -9119125, i32 3046000, i32 2101609, i32 -12607294, i32 19390020, i32 6094296, i32 -3315279, i32 12831125], [10 x i32] [i32 -15998678, i32 7578152, i32 5310217, i32 14408357, i32 -33548620, i32 -224739, i32 31575954, i32 6326196, i32 7381791, i32 -2421839], [10 x i32] [i32 -20902779, i32 3296811, i32 24736065, i32 -16328389, i32 18374254, i32 7318640, i32 6295303, i32 8082724, i32 -15362489, i32 12339664] }, %struct.ge_precomp { [10 x i32] [i32 27724736, i32 2291157, i32 6088201, i32 -14184798, i32 1792727, i32 5857634, i32 13848414, i32 15768922, i32 25091167, i32 14856294], [10 x i32] [i32 -18866652, i32 8331043, i32 24373479, i32 8541013, i32 -701998, i32 -9269457, i32 12927300, i32 -12695493, i32 -22182473, i32 -9012899], [10 x i32] [i32 -11423429, i32 -5421590, i32 11632845, i32 3405020, i32 30536730, i32 -11674039, i32 -27260765, i32 13866390, i32 30146206, i32 9142070] }, %struct.ge_precomp { [10 x i32] [i32 3924129, i32 -15307516, i32 -13817122, i32 -10054960, i32 12291820, i32 -668366, i32 -27702774, i32 9326384, i32 -8237858, i32 4171294], [10 x i32] [i32 -15921940, i32 16037937, i32 6713787, i32 16606682, i32 -21612135, i32 2790944, i32 26396185, i32 3731949, i32 345228, i32 -5462949], [10 x i32] [i32 -21327538, i32 13448259, i32 25284571, i32 1143661, i32 20614966, i32 -8849387, i32 2031539, i32 -12391231, i32 -16253183, i32 -13582083] }, %struct.ge_precomp { [10 x i32] [i32 31016211, i32 -16722429, i32 26371392, i32 -14451233, i32 -5027349, i32 14854137, i32 17477601, i32 3842657, i32 28012650, i32 -16405420], [10 x i32] [i32 -5075835, i32 9368966, i32 -8562079, i32 -4600902, i32 -15249953, i32 6970560, i32 -9189873, i32 16292057, i32 -8867157, i32 3507940], [10 x i32] [i32 29439664, i32 3537914, i32 23333589, i32 6997794, i32 -17555561, i32 -11018068, i32 -15209202, i32 -15051267, i32 -9164929, i32 6580396] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -12185861, i32 -7679788, i32 16438269, i32 10826160, i32 -8696817, i32 -6235611, i32 17860444, i32 -9273846, i32 -2095802, i32 9304567], [10 x i32] [i32 20714564, i32 -4336911, i32 29088195, i32 7406487, i32 11426967, i32 -5095705, i32 14792667, i32 -14608617, i32 5289421, i32 -477127], [10 x i32] [i32 -16665533, i32 -10650790, i32 -6160345, i32 -13305760, i32 9192020, i32 -1802462, i32 17271490, i32 12349094, i32 26939669, i32 -3752294] }, %struct.ge_precomp { [10 x i32] [i32 -12889898, i32 9373458, i32 31595848, i32 16374215, i32 21471720, i32 13221525, i32 -27283495, i32 -12348559, i32 -3698806, i32 117887], [10 x i32] [i32 22263325, i32 -6560050, i32 3984570, i32 -11174646, i32 -15114008, i32 -566785, i32 28311253, i32 5358056, i32 -23319780, i32 541964], [10 x i32] [i32 16259219, i32 3261970, i32 2309254, i32 -15534474, i32 -16885711, i32 -4581916, i32 24134070, i32 -16705829, i32 -13337066, i32 -13552195] }, %struct.ge_precomp { [10 x i32] [i32 9378160, i32 -13140186, i32 -22845982, i32 -12745264, i32 28198281, i32 -7244098, i32 -2399684, i32 -717351, i32 690426, i32 14876244], [10 x i32] [i32 24977353, i32 -314384, i32 -8223969, i32 -13465086, i32 28432343, i32 -1176353, i32 -13068804, i32 -12297348, i32 -22380984, i32 6618999], [10 x i32] [i32 -1538174, i32 11685646, i32 12944378, i32 13682314, i32 -24389511, i32 -14413193, i32 8044829, i32 -13817328, i32 32239829, i32 -5652762] }, %struct.ge_precomp { [10 x i32] [i32 -18603066, i32 4762990, i32 -926250, i32 8885304, i32 -28412480, i32 -3187315, i32 9781647, i32 -10350059, i32 32779359, i32 5095274], [10 x i32] [i32 -33008130, i32 -5214506, i32 -32264887, i32 -3685216, i32 9460461, i32 -9327423, i32 -24601656, i32 14506724, i32 21639561, i32 -2630236], [10 x i32] [i32 -16400943, i32 -13112215, i32 25239338, i32 15531969, i32 3987758, i32 -4499318, i32 -1289502, i32 -6863535, i32 17874574, i32 558605] }, %struct.ge_precomp { [10 x i32] [i32 -13600129, i32 10240081, i32 9171883, i32 16131053, i32 -20869254, i32 9599700, i32 33499487, i32 5080151, i32 2085892, i32 5119761], [10 x i32] [i32 -22205145, i32 -2519528, i32 -16381601, i32 414691, i32 -25019550, i32 2170430, i32 30634760, i32 -8363614, i32 -31999993, i32 -5759884], [10 x i32] [i32 -6845704, i32 15791202, i32 8550074, i32 -1312654, i32 29928809, i32 -12092256, i32 27534430, i32 -7192145, i32 -22351378, i32 12961482] }, %struct.ge_precomp { [10 x i32] [i32 -24492060, i32 -9570771, i32 10368194, i32 11582341, i32 -23397293, i32 -2245287, i32 16533930, i32 8206996, i32 -30194652, i32 -5159638], [10 x i32] [i32 -11121496, i32 -3382234, i32 2307366, i32 6362031, i32 -135455, i32 8868177, i32 -16835630, i32 7031275, i32 7589640, i32 8945490], [10 x i32] [i32 -32152748, i32 8917967, i32 6661220, i32 -11677616, i32 -1192060, i32 -15793393, i32 7251489, i32 -11182180, i32 24099109, i32 -14456170] }, %struct.ge_precomp { [10 x i32] [i32 5019558, i32 -7907470, i32 4244127, i32 -14714356, i32 -26933272, i32 6453165, i32 -19118182, i32 -13289025, i32 -6231896, i32 -10280736], [10 x i32] [i32 10853594, i32 10721687, i32 26480089, i32 5861829, i32 -22995819, i32 1972175, i32 -1866647, i32 -10557898, i32 -3363451, i32 -6441124], [10 x i32] [i32 -17002408, i32 5906790, i32 221599, i32 -6563147, i32 7828208, i32 -13248918, i32 24362661, i32 -2008168, i32 -13866408, i32 7421392] }, %struct.ge_precomp { [10 x i32] [i32 8139927, i32 -6546497, i32 32257646, i32 -5890546, i32 30375719, i32 1886181, i32 -21175108, i32 15441252, i32 28826358, i32 -4123029], [10 x i32] [i32 6267086, i32 9695052, i32 7709135, i32 -16603597, i32 -32869068, i32 -1886135, i32 14795160, i32 -7840124, i32 13746021, i32 -1742048], [10 x i32] [i32 28584902, i32 7787108, i32 -6732942, i32 -15050729, i32 22846041, i32 -7571236, i32 -3181936, i32 -363524, i32 4771362, i32 -8419958] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 24949256, i32 6376279, i32 -27466481, i32 -8174608, i32 -18646154, i32 -9930606, i32 33543569, i32 -12141695, i32 3569627, i32 11342593], [10 x i32] [i32 26514989, i32 4740088, i32 27912651, i32 3697550, i32 19331575, i32 -11472339, i32 6809886, i32 4608608, i32 7325975, i32 -14801071], [10 x i32] [i32 -11618399, i32 -14554430, i32 -24321212, i32 7655128, i32 -1369274, i32 5214312, i32 -27400540, i32 10258390, i32 -17646694, i32 -8186692] }, %struct.ge_precomp { [10 x i32] [i32 11431204, i32 15823007, i32 26570245, i32 14329124, i32 18029990, i32 4796082, i32 -31446179, i32 15580664, i32 9280358, i32 -3973687], [10 x i32] [i32 -160783, i32 -10326257, i32 -22855316, i32 -4304997, i32 -20861367, i32 -13621002, i32 -32810901, i32 -11181622, i32 -15545091, i32 4387441], [10 x i32] [i32 -20799378, i32 12194512, i32 3937617, i32 -5805892, i32 -27154820, i32 9340370, i32 -24513992, i32 8548137, i32 20617071, i32 -7482001] }, %struct.ge_precomp { [10 x i32] [i32 -938825, i32 -3930586, i32 -8714311, i32 16124718, i32 24603125, i32 -6225393, i32 -13775352, i32 -11875822, i32 24345683, i32 10325460], [10 x i32] [i32 -19855277, i32 -1568885, i32 -22202708, i32 8714034, i32 14007766, i32 6928528, i32 16318175, i32 -1010689, i32 4766743, i32 3552007], [10 x i32] [i32 -21751364, i32 -16730916, i32 1351763, i32 -803421, i32 -4009670, i32 3950935, i32 3217514, i32 14481909, i32 10988822, i32 -3994762] }, %struct.ge_precomp { [10 x i32] [i32 15564307, i32 -14311570, i32 3101243, i32 5684148, i32 30446780, i32 -8051356, i32 12677127, i32 -6505343, i32 -8295852, i32 13296005], [10 x i32] [i32 -9442290, i32 6624296, i32 -30298964, i32 -11913677, i32 -4670981, i32 -2057379, i32 31521204, i32 9614054, i32 -30000824, i32 12074674], [10 x i32] [i32 4771191, i32 -135239, i32 14290749, i32 -13089852, i32 27992298, i32 14998318, i32 -1413936, i32 -1556716, i32 29832613, i32 -16391035] }, %struct.ge_precomp { [10 x i32] [i32 7064884, i32 -7541174, i32 -19161962, i32 -5067537, i32 -18891269, i32 -2912736, i32 25825242, i32 5293297, i32 -27122660, i32 13101590], [10 x i32] [i32 -2298563, i32 2439670, i32 -7466610, i32 1719965, i32 -27267541, i32 -16328445, i32 32512469, i32 -5317593, i32 -30356070, i32 -4190957], [10 x i32] [i32 -30006540, i32 10162316, i32 -33180176, i32 3981723, i32 -16482138, i32 -13070044, i32 14413974, i32 9515896, i32 19568978, i32 9628812] }, %struct.ge_precomp { [10 x i32] [i32 33053803, i32 199357, i32 15894591, i32 1583059, i32 27380243, i32 -4580435, i32 -17838894, i32 -6106839, i32 -6291786, i32 3437740], [10 x i32] [i32 -18978877, i32 3884493, i32 19469877, i32 12726490, i32 15913552, i32 13614290, i32 -22961733, i32 70104, i32 7463304, i32 4176122], [10 x i32] [i32 -27124001, i32 10659917, i32 11482427, i32 -16070381, i32 12771467, i32 -6635117, i32 -32719404, i32 -5322751, i32 24216882, i32 5944158] }, %struct.ge_precomp { [10 x i32] [i32 8894125, i32 7450974, i32 -2664149, i32 -9765752, i32 -28080517, i32 -12389115, i32 19345746, i32 14680796, i32 11632993, i32 5847885], [10 x i32] [i32 26942781, i32 -2315317, i32 9129564, i32 -4906607, i32 26024105, i32 11769399, i32 -11518837, i32 6367194, i32 -9727230, i32 4782140], [10 x i32] [i32 19916461, i32 -4828410, i32 -22910704, i32 -11414391, i32 25606324, i32 -5972441, i32 33253853, i32 8220911, i32 6358847, i32 -1873857] }, %struct.ge_precomp { [10 x i32] [i32 801428, i32 -2081702, i32 16569428, i32 11065167, i32 29875704, i32 96627, i32 7908388, i32 -4480480, i32 -13538503, i32 1387155], [10 x i32] [i32 19646058, i32 5720633, i32 -11416706, i32 12814209, i32 11607948, i32 12749789, i32 14147075, i32 15156355, i32 -21866831, i32 11835260], [10 x i32] [i32 19299512, i32 1155910, i32 28703737, i32 14890794, i32 2925026, i32 7269399, i32 26121523, i32 15467869, i32 -26560550, i32 5052483] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -3017432, i32 10058206, i32 1980837, i32 3964243, i32 22160966, i32 12322533, i32 -6431123, i32 -12618185, i32 12228557, i32 -7003677], [10 x i32] [i32 32944382, i32 14922211, i32 -22844894, i32 5188528, i32 21913450, i32 -8719943, i32 4001465, i32 13238564, i32 -6114803, i32 8653815], [10 x i32] [i32 22865569, i32 -4652735, i32 27603668, i32 -12545395, i32 14348958, i32 8234005, i32 24808405, i32 5719875, i32 28483275, i32 2841751] }, %struct.ge_precomp { [10 x i32] [i32 -16420968, i32 -1113305, i32 -327719, i32 -12107856, i32 21886282, i32 -15552774, i32 -1887966, i32 -315658, i32 19932058, i32 -12739203], [10 x i32] [i32 -11656086, i32 10087521, i32 -8864888, i32 -5536143, i32 -19278573, i32 -3055912, i32 3999228, i32 13239134, i32 -4777469, i32 -13910208], [10 x i32] [i32 1382174, i32 -11694719, i32 17266790, i32 9194690, i32 -13324356, i32 9720081, i32 20403944, i32 11284705, i32 -14013818, i32 3093230] }, %struct.ge_precomp { [10 x i32] [i32 16650921, i32 -11037932, i32 -1064178, i32 1570629, i32 -8329746, i32 7352753, i32 -302424, i32 16271225, i32 -24049421, i32 -6691850], [10 x i32] [i32 -21911077, i32 -5927941, i32 -4611316, i32 -5560156, i32 -31744103, i32 -10785293, i32 24123614, i32 15193618, i32 -21652117, i32 -16739389], [10 x i32] [i32 -9935934, i32 -4289447, i32 -25279823, i32 4372842, i32 2087473, i32 10399484, i32 31870908, i32 14690798, i32 17361620, i32 11864968] }, %struct.ge_precomp { [10 x i32] [i32 -11307610, i32 6210372, i32 13206574, i32 5806320, i32 -29017692, i32 -13967200, i32 -12331205, i32 -7486601, i32 -25578460, i32 -16240689], [10 x i32] [i32 14668462, i32 -12270235, i32 26039039, i32 15305210, i32 25515617, i32 4542480, i32 10453892, i32 6577524, i32 9145645, i32 -6443880], [10 x i32] [i32 5974874, i32 3053895, i32 -9433049, i32 -10385191, i32 -31865124, i32 3225009, i32 -7972642, i32 3936128, i32 -5652273, i32 -3050304] }, %struct.ge_precomp { [10 x i32] [i32 30625386, i32 -4729400, i32 -25555961, i32 -12792866, i32 -20484575, i32 7695099, i32 17097188, i32 -16303496, i32 -27999779, i32 1803632], [10 x i32] [i32 -3553091, i32 9865099, i32 -5228566, i32 4272701, i32 -5673832, i32 -16689700, i32 14911344, i32 12196514, i32 -21405489, i32 7047412], [10 x i32] [i32 20093277, i32 9920966, i32 -11138194, i32 -5343857, i32 13161587, i32 12044805, i32 -32856851, i32 4124601, i32 -32343828, i32 -10257566] }, %struct.ge_precomp { [10 x i32] [i32 -20788824, i32 14084654, i32 -13531713, i32 7842147, i32 19119038, i32 -13822605, i32 4752377, i32 -8714640, i32 -21679658, i32 2288038], [10 x i32] [i32 -26819236, i32 -3283715, i32 29965059, i32 3039786, i32 -14473765, i32 2540457, i32 29457502, i32 14625692, i32 -24819617, i32 12570232], [10 x i32] [i32 -1063558, i32 -11551823, i32 16920318, i32 12494842, i32 1278292, i32 -5869109, i32 -21159943, i32 -3498680, i32 -11974704, i32 4724943] }, %struct.ge_precomp { [10 x i32] [i32 17960970, i32 -11775534, i32 -4140968, i32 -9702530, i32 -8876562, i32 -1410617, i32 -12907383, i32 -8659932, i32 -29576300, i32 1903856], [10 x i32] [i32 23134274, i32 -14279132, i32 -10681997, i32 -1611936, i32 20684485, i32 15770816, i32 -12989750, i32 3190296, i32 26955097, i32 14109738], [10 x i32] [i32 15308788, i32 5320727, i32 -30113809, i32 -14318877, i32 22902008, i32 7767164, i32 29425325, i32 -11277562, i32 31960942, i32 11934971] }, %struct.ge_precomp { [10 x i32] [i32 -27395711, i32 8435796, i32 4109644, i32 12222639, i32 -24627868, i32 14818669, i32 20638173, i32 4875028, i32 10491392, i32 1379718], [10 x i32] [i32 -13159415, i32 9197841, i32 3875503, i32 -8936108, i32 -1383712, i32 -5879801, i32 33518459, i32 16176658, i32 21432314, i32 12180697], [10 x i32] [i32 -11787308, i32 11500838, i32 13787581, i32 -13832590, i32 -22430679, i32 10140205, i32 1465425, i32 12689540, i32 -10301319, i32 -13872883] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 5414091, i32 -15386041, i32 -21007664, i32 9643570, i32 12834970, i32 1186149, i32 -2622916, i32 -1342231, i32 26128231, i32 6032912], [10 x i32] [i32 -26337395, i32 -13766162, i32 32496025, i32 -13653919, i32 17847801, i32 -12669156, i32 3604025, i32 8316894, i32 -25875034, i32 -10437358], [10 x i32] [i32 3296484, i32 6223048, i32 24680646, i32 -12246460, i32 -23052020, i32 5903205, i32 -8862297, i32 -4639164, i32 12376617, i32 3188849] }, %struct.ge_precomp { [10 x i32] [i32 29190488, i32 -14659046, i32 27549113, i32 -1183516, i32 3520066, i32 -10697301, i32 32049515, i32 -7309113, i32 -16109234, i32 -9852307], [10 x i32] [i32 -14744486, i32 -9309156, i32 735818, i32 -598978, i32 -20407687, i32 -5057904, i32 25246078, i32 -15795669, i32 18640741, i32 -960977], [10 x i32] [i32 -6928835, i32 -16430795, i32 10361374, i32 5642961, i32 4910474, i32 12345252, i32 -31638386, i32 -494430, i32 10530747, i32 1053335] }, %struct.ge_precomp { [10 x i32] [i32 -29265967, i32 -14186805, i32 -13538216, i32 -12117373, i32 -19457059, i32 -10655384, i32 -31462369, i32 -2948985, i32 24018831, i32 15026644], [10 x i32] [i32 -22592535, i32 -3145277, i32 -2289276, i32 5953843, i32 -13440189, i32 9425631, i32 25310643, i32 13003497, i32 -2314791, i32 -15145616], [10 x i32] [i32 -27419985, i32 -603321, i32 -8043984, i32 -1669117, i32 -26092265, i32 13987819, i32 -27297622, i32 187899, i32 -23166419, i32 -2531735] }, %struct.ge_precomp { [10 x i32] [i32 -21744398, i32 -13810475, i32 1844840, i32 5021428, i32 -10434399, i32 -15911473, i32 9716667, i32 16266922, i32 -5070217, i32 726099], [10 x i32] [i32 29370922, i32 -6053998, i32 7334071, i32 -15342259, i32 9385287, i32 2247707, i32 -13661962, i32 -4839461, i32 30007388, i32 -15823341], [10 x i32] [i32 -936379, i32 16086691, i32 23751945, i32 -543318, i32 -1167538, i32 -5189036, i32 9137109, i32 730663, i32 9835848, i32 4555336] }, %struct.ge_precomp { [10 x i32] [i32 -23376435, i32 1410446, i32 -22253753, i32 -12899614, i32 30867635, i32 15826977, i32 17693930, i32 544696, i32 -11985298, i32 12422646], [10 x i32] [i32 31117226, i32 -12215734, i32 -13502838, i32 6561947, i32 -9876867, i32 -12757670, i32 -5118685, i32 -4096706, i32 29120153, i32 13924425], [10 x i32] [i32 -17400879, i32 -14233209, i32 19675799, i32 -2734756, i32 -11006962, i32 -5858820, i32 -9383939, i32 -11317700, i32 7240931, i32 -237388] }, %struct.ge_precomp { [10 x i32] [i32 -31361739, i32 -11346780, i32 -15007447, i32 -5856218, i32 -22453340, i32 -12152771, i32 1222336, i32 4389483, i32 3293637, i32 -15551743], [10 x i32] [i32 -16684801, i32 -14444245, i32 11038544, i32 11054958, i32 -13801175, i32 -3338533, i32 -24319580, i32 7733547, i32 12796905, i32 -6335822], [10 x i32] [i32 -8759414, i32 -10817836, i32 -25418864, i32 10783769, i32 -30615557, i32 -9746811, i32 -28253339, i32 3647836, i32 3222231, i32 -11160462] }, %struct.ge_precomp { [10 x i32] [i32 18606113, i32 1693100, i32 -25448386, i32 -15170272, i32 4112353, i32 10045021, i32 23603893, i32 -2048234, i32 -7550776, i32 2484985], [10 x i32] [i32 9255317, i32 -3131197, i32 -12156162, i32 -1004256, i32 13098013, i32 -9214866, i32 16377220, i32 -2102812, i32 -19802075, i32 -3034702], [10 x i32] [i32 -22729289, i32 7496160, i32 -5742199, i32 11329249, i32 19991973, i32 -3347502, i32 -31718148, i32 9936966, i32 -30097688, i32 -10618797] }, %struct.ge_precomp { [10 x i32] [i32 21878590, i32 -5001297, i32 4338336, i32 13643897, i32 -3036865, i32 13160960, i32 19708896, i32 5415497, i32 -7360503, i32 -4109293], [10 x i32] [i32 27736861, i32 10103576, i32 12500508, i32 8502413, i32 -3413016, i32 -9633558, i32 10436918, i32 -1550276, i32 -23659143, i32 -8132100], [10 x i32] [i32 19492550, i32 -12104365, i32 -29681976, i32 -852630, i32 -3208171, i32 12403437, i32 30066266, i32 8367329, i32 13243957, i32 8709688] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 12015105, i32 2801261, i32 28198131, i32 10151021, i32 24818120, i32 -4743133, i32 -11194191, i32 -5645734, i32 5150968, i32 7274186], [10 x i32] [i32 2831366, i32 -12492146, i32 1478975, i32 6122054, i32 23825128, i32 -12733586, i32 31097299, i32 6083058, i32 31021603, i32 -9793610], [10 x i32] [i32 -2529932, i32 -2229646, i32 445613, i32 10720828, i32 -13849527, i32 -11505937, i32 -23507731, i32 16354465, i32 15067285, i32 -14147707] }, %struct.ge_precomp { [10 x i32] [i32 7840942, i32 14037873, i32 -33364863, i32 15934016, i32 -728213, i32 -3642706, i32 21403988, i32 1057586, i32 -19379462, i32 -12403220], [10 x i32] [i32 915865, i32 -16469274, i32 15608285, i32 -8789130, i32 -24357026, i32 6060030, i32 -17371319, i32 8410997, i32 -7220461, i32 16527025], [10 x i32] [i32 32922597, i32 -556987, i32 20336074, i32 -16184568, i32 10903705, i32 -5384487, i32 16957574, i32 52992, i32 23834301, i32 6588044] }, %struct.ge_precomp { [10 x i32] [i32 32752030, i32 11232950, i32 3381995, i32 -8714866, i32 22652988, i32 -10744103, i32 17159699, i32 16689107, i32 -20314580, i32 -1305992], [10 x i32] [i32 -4689649, i32 9166776, i32 -25710296, i32 -10847306, i32 11576752, i32 12733943, i32 7924251, i32 -2752281, i32 1976123, i32 -7249027], [10 x i32] [i32 21251222, i32 16309901, i32 -2983015, i32 -6783122, i32 30810597, i32 12967303, i32 156041, i32 -3371252, i32 12331345, i32 -8237197] }, %struct.ge_precomp { [10 x i32] [i32 8651614, i32 -4477032, i32 -16085636, i32 -4996994, i32 13002507, i32 2950805, i32 29054427, i32 -5106970, i32 10008136, i32 -4667901], [10 x i32] [i32 31486080, i32 15114593, i32 -14261250, i32 12951354, i32 14369431, i32 -7387845, i32 16347321, i32 -13662089, i32 8684155, i32 -10532952], [10 x i32] [i32 19443825, i32 11385320, i32 24468943, i32 -9659068, i32 -23919258, i32 2187569, i32 -26263207, i32 -6086921, i32 31316348, i32 14219878] }, %struct.ge_precomp { [10 x i32] [i32 -28594490, i32 1193785, i32 32245219, i32 11392485, i32 31092169, i32 15722801, i32 27146014, i32 6992409, i32 29126555, i32 9207390], [10 x i32] [i32 32382935, i32 1110093, i32 18477781, i32 11028262, i32 -27411763, i32 -7548111, i32 -4980517, i32 10843782, i32 -7957600, i32 -14435730], [10 x i32] [i32 2814918, i32 7836403, i32 27519878, i32 -7868156, i32 -20894015, i32 -11553689, i32 -21494559, i32 8550130, i32 28346258, i32 1994730] }, %struct.ge_precomp { [10 x i32] [i32 -19578299, i32 8085545, i32 -14000519, i32 -3948622, i32 2785838, i32 -16231307, i32 -19516951, i32 7174894, i32 22628102, i32 8115180], [10 x i32] [i32 -30405132, i32 955511, i32 -11133838, i32 -15078069, i32 -32447087, i32 -13278079, i32 -25651578, i32 3317160, i32 -9943017, i32 930272], [10 x i32] [i32 -15303681, i32 -6833769, i32 28856490, i32 1357446, i32 23421993, i32 1057177, i32 24091212, i32 -1388970, i32 -22765376, i32 -10650715] }, %struct.ge_precomp { [10 x i32] [i32 -22751231, i32 -5303997, i32 -12907607, i32 -12768866, i32 -15811511, i32 -7797053, i32 -14839018, i32 -16554220, i32 -1867018, i32 8398970], [10 x i32] [i32 -31969310, i32 2106403, i32 -4736360, i32 1362501, i32 12813763, i32 16200670, i32 22981545, i32 -6291273, i32 18009408, i32 -15772772], [10 x i32] [i32 -17220923, i32 -9545221, i32 -27784654, i32 14166835, i32 29815394, i32 7444469, i32 29551787, i32 -3727419, i32 19288549, i32 1325865] }, %struct.ge_precomp { [10 x i32] [i32 15100157, i32 -15835752, i32 -23923978, i32 -1005098, i32 -26450192, i32 15509408, i32 12376730, i32 -3479146, i32 33166107, i32 -8042750], [10 x i32] [i32 20909231, i32 13023121, i32 -9209752, i32 16251778, i32 -5778415, i32 -8094914, i32 12412151, i32 10018715, i32 2213263, i32 -13878373], [10 x i32] [i32 32529814, i32 -11074689, i32 30361439, i32 -16689753, i32 -9135940, i32 1513226, i32 22922121, i32 6382134, i32 -5766928, i32 8371348] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 9923462, i32 11271500, i32 12616794, i32 3544722, i32 -29998368, i32 -1721626, i32 12891687, i32 -8193132, i32 -26442943, i32 10486144], [10 x i32] [i32 -22597207, i32 -7012665, i32 8587003, i32 -8257861, i32 4084309, i32 -12970062, i32 361726, i32 2610596, i32 -23921530, i32 -11455195], [10 x i32] [i32 5408411, i32 -1136691, i32 -4969122, i32 10561668, i32 24145918, i32 14240566, i32 31319731, i32 -4235541, i32 19985175, i32 -3436086] }, %struct.ge_precomp { [10 x i32] [i32 -13994457, i32 16616821, i32 14549246, i32 3341099, i32 32155958, i32 13648976, i32 -17577068, i32 8849297, i32 65030, i32 8370684], [10 x i32] [i32 -8320926, i32 -12049626, i32 31204563, i32 5839400, i32 -20627288, i32 -1057277, i32 -19442942, i32 6922164, i32 12743482, i32 -9800518], [10 x i32] [i32 -2361371, i32 12678785, i32 28815050, i32 4759974, i32 -23893047, i32 4884717, i32 23783145, i32 11038569, i32 18800704, i32 255233] }, %struct.ge_precomp { [10 x i32] [i32 -5269658, i32 -1773886, i32 13957886, i32 7990715, i32 23132995, i32 728773, i32 13393847, i32 9066957, i32 19258688, i32 -14753793], [10 x i32] [i32 -2936654, i32 -10827535, i32 -10432089, i32 14516793, i32 -3640786, i32 4372541, i32 -31934921, i32 2209390, i32 -1524053, i32 2055794], [10 x i32] [i32 580882, i32 16705327, i32 5468415, i32 -2683018, i32 -30926419, i32 -14696000, i32 -7203346, i32 -8994389, i32 -30021019, i32 7394435] }, %struct.ge_precomp { [10 x i32] [i32 23838809, i32 1822728, i32 -15738443, i32 15242727, i32 8318092, i32 -3733104, i32 -21672180, i32 -3492205, i32 -4821741, i32 14799921], [10 x i32] [i32 13345610, i32 9759151, i32 3371034, i32 -16137791, i32 16353039, i32 8577942, i32 31129804, i32 13496856, i32 -9056018, i32 7402518], [10 x i32] [i32 2286874, i32 -4435931, i32 -20042458, i32 -2008336, i32 -13696227, i32 5038122, i32 11006906, i32 -15760352, i32 8205061, i32 1607563] }, %struct.ge_precomp { [10 x i32] [i32 14414086, i32 -8002132, i32 3331830, i32 -3208217, i32 22249151, i32 -5594188, i32 18364661, i32 -2906958, i32 30019587, i32 -9029278], [10 x i32] [i32 -27688051, i32 1585953, i32 -10775053, i32 931069, i32 -29120221, i32 -11002319, i32 -14410829, i32 12029093, i32 9944378, i32 8024], [10 x i32] [i32 4368715, i32 -3709630, i32 29874200, i32 -15022983, i32 -20230386, i32 -11410704, i32 -16114594, i32 -999085, i32 -8142388, i32 5640030] }, %struct.ge_precomp { [10 x i32] [i32 10299610, i32 13746483, i32 11661824, i32 16234854, i32 7630238, i32 5998374, i32 9809887, i32 -16694564, i32 15219798, i32 -14327783], [10 x i32] [i32 27425505, i32 -5719081, i32 3055006, i32 10660664, i32 23458024, i32 595578, i32 -15398605, i32 -1173195, i32 -18342183, i32 9742717], [10 x i32] [i32 6744077, i32 2427284, i32 26042789, i32 2720740, i32 -847906, i32 1118974, i32 32324614, i32 7406442, i32 12420155, i32 1994844] }, %struct.ge_precomp { [10 x i32] [i32 14012521, i32 -5024720, i32 -18384453, i32 -9578469, i32 -26485342, i32 -3936439, i32 -13033478, i32 -10909803, i32 24319929, i32 -6446333], [10 x i32] [i32 16412690, i32 -4507367, i32 10772641, i32 15929391, i32 -17068788, i32 -4658621, i32 10555945, i32 -10484049, i32 -30102368, i32 -4739048], [10 x i32] [i32 22397382, i32 -7767684, i32 -9293161, i32 -12792868, i32 17166287, i32 -9755136, i32 -27333065, i32 6199366, i32 21880021, i32 -12250760] }, %struct.ge_precomp { [10 x i32] [i32 -4283307, i32 5368523, i32 -31117018, i32 8163389, i32 -30323063, i32 3209128, i32 16557151, i32 8890729, i32 8840445, i32 4957760], [10 x i32] [i32 -15447727, i32 709327, i32 -6919446, i32 -10870178, i32 -29777922, i32 6522332, i32 -21720181, i32 12130072, i32 -14796503, i32 5005757], [10 x i32] [i32 -2114751, i32 -14308128, i32 23019042, i32 15765735, i32 -25269683, i32 6002752, i32 10183197, i32 -13239326, i32 -16395286, i32 -2176112] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -19025756, i32 1632005, i32 13466291, i32 -7995100, i32 -23640451, i32 16573537, i32 -32013908, i32 -3057104, i32 22208662, i32 2000468], [10 x i32] [i32 3065073, i32 -1412761, i32 -25598674, i32 -361432, i32 -17683065, i32 -5703415, i32 -8164212, i32 11248527, i32 -3691214, i32 -7414184], [10 x i32] [i32 10379208, i32 -6045554, i32 8877319, i32 1473647, i32 -29291284, i32 -12507580, i32 16690915, i32 2553332, i32 -3132688, i32 16400289] }, %struct.ge_precomp { [10 x i32] [i32 15716668, i32 1254266, i32 -18472690, i32 7446274, i32 -8448918, i32 6344164, i32 -22097271, i32 -7285580, i32 26894937, i32 9132066], [10 x i32] [i32 24158887, i32 12938817, i32 11085297, i32 -8177598, i32 -28063478, i32 -4457083, i32 -30576463, i32 64452, i32 -6817084, i32 -2692882], [10 x i32] [i32 13488534, i32 7794716, i32 22236231, i32 5989356, i32 25426474, i32 -12578208, i32 2350710, i32 -3418511, i32 -4688006, i32 2364226] }, %struct.ge_precomp { [10 x i32] [i32 16335052, i32 9132434, i32 25640582, i32 6678888, i32 1725628, i32 8517937, i32 -11807024, i32 -11697457, i32 15445875, i32 -7798101], [10 x i32] [i32 29004207, i32 -7867081, i32 28661402, i32 -640412, i32 -12794003, i32 -7943086, i32 31863255, i32 -4135540, i32 -278050, i32 -15759279], [10 x i32] [i32 -6122061, i32 -14866665, i32 -28614905, i32 14569919, i32 -10857999, i32 -3591829, i32 10343412, i32 -6976290, i32 -29828287, i32 -10815811] }, %struct.ge_precomp { [10 x i32] [i32 27081650, i32 3463984, i32 14099042, i32 -4517604, i32 1616303, i32 -6205604, i32 29542636, i32 15372179, i32 17293797, i32 960709], [10 x i32] [i32 20263915, i32 11434237, i32 -5765435, i32 11236810, i32 13505955, i32 -10857102, i32 -16111345, i32 6493122, i32 -19384511, i32 7639714], [10 x i32] [i32 -2830798, i32 -14839232, i32 25403038, i32 -8215196, i32 -8317012, i32 -16173699, i32 18006287, i32 -16043750, i32 29994677, i32 -15808121] }, %struct.ge_precomp { [10 x i32] [i32 9769828, i32 5202651, i32 -24157398, i32 -13631392, i32 -28051003, i32 -11561624, i32 -24613141, i32 -13860782, i32 -31184575, i32 709464], [10 x i32] [i32 12286395, i32 13076066, i32 -21775189, i32 -1176622, i32 -25003198, i32 4057652, i32 -32018128, i32 -8890874, i32 16102007, i32 13205847], [10 x i32] [i32 13733362, i32 5599946, i32 10557076, i32 3195751, i32 -5557991, i32 8536970, i32 -25540170, i32 8525972, i32 10151379, i32 10394400] }, %struct.ge_precomp { [10 x i32] [i32 4024660, i32 -16137551, i32 22436262, i32 12276534, i32 -9099015, i32 -2686099, i32 19698229, i32 11743039, i32 -33302334, i32 8934414], [10 x i32] [i32 -15879800, i32 -4525240, i32 -8580747, i32 -2934061, i32 14634845, i32 -698278, i32 -9449077, i32 3137094, i32 -11536886, i32 11721158], [10 x i32] [i32 17555939, i32 -5013938, i32 8268606, i32 2331751, i32 -22738815, i32 9761013, i32 9319229, i32 8835153, i32 -9205489, i32 -1280045] }, %struct.ge_precomp { [10 x i32] [i32 -461409, i32 -7830014, i32 20614118, i32 16688288, i32 -7514766, i32 -4807119, i32 22300304, i32 505429, i32 6108462, i32 -6183415], [10 x i32] [i32 -5070281, i32 12367917, i32 -30663534, i32 3234473, i32 32617080, i32 -8422642, i32 29880583, i32 -13483331, i32 -26898490, i32 -7867459], [10 x i32] [i32 -31975283, i32 5726539, i32 26934134, i32 10237677, i32 -3173717, i32 -605053, i32 24199304, i32 3795095, i32 7592688, i32 -14992079] }, %struct.ge_precomp { [10 x i32] [i32 21594432, i32 -14964228, i32 17466408, i32 -4077222, i32 32537084, i32 2739898, i32 6407723, i32 12018833, i32 -28256052, i32 4298412], [10 x i32] [i32 -20650503, i32 -11961496, i32 -27236275, i32 570498, i32 3767144, i32 -1717540, i32 13891942, i32 -1569194, i32 13717174, i32 10805743], [10 x i32] [i32 -14676630, i32 -15644296, i32 15287174, i32 11927123, i32 24177847, i32 -8175568, i32 -796431, i32 14860609, i32 -26938930, i32 -5863836] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 12962541, i32 5311799, i32 -10060768, i32 11658280, i32 18855286, i32 -7954201, i32 13286263, i32 -12808704, i32 -4381056, i32 9882022], [10 x i32] [i32 18512079, i32 11319350, i32 -20123124, i32 15090309, i32 18818594, i32 5271736, i32 -22727904, i32 3666879, i32 -23967430, i32 -3299429], [10 x i32] [i32 -6789020, i32 -3146043, i32 16192429, i32 13241070, i32 15898607, i32 -14206114, i32 -10084880, i32 -6661110, i32 -2403099, i32 5276065] }, %struct.ge_precomp { [10 x i32] [i32 30169808, i32 -5317648, i32 26306206, i32 -11750859, i32 27814964, i32 7069267, i32 7152851, i32 3684982, i32 1449224, i32 13082861], [10 x i32] [i32 10342826, i32 3098505, i32 2119311, i32 193222, i32 25702612, i32 12233820, i32 23697382, i32 15056736, i32 -21016438, i32 -8202000], [10 x i32] [i32 -33150110, i32 3261608, i32 22745853, i32 7948688, i32 19370557, i32 -15177665, i32 -26171976, i32 6482814, i32 -10300080, i32 -11060101] }, %struct.ge_precomp { [10 x i32] [i32 32869458, i32 -5408545, i32 25609743, i32 15678670, i32 -10687769, i32 -15471071, i32 26112421, i32 2521008, i32 -22664288, i32 6904815], [10 x i32] [i32 29506923, i32 4457497, i32 3377935, i32 -9796444, i32 -30510046, i32 12935080, i32 1561737, i32 3841096, i32 -29003639, i32 -6657642], [10 x i32] [i32 10340844, i32 -6630377, i32 -18656632, i32 -2278430, i32 12621151, i32 -13339055, i32 30878497, i32 -11824370, i32 -25584551, i32 5181966] }, %struct.ge_precomp { [10 x i32] [i32 25940115, i32 -12658025, i32 17324188, i32 -10307374, i32 -8671468, i32 15029094, i32 24396252, i32 -16450922, i32 -2322852, i32 -12388574], [10 x i32] [i32 -21765684, i32 9916823, i32 -1300409, i32 4079498, i32 -1028346, i32 11909559, i32 1782390, i32 12641087, i32 20603771, i32 -6561742], [10 x i32] [i32 -18882287, i32 -11673380, i32 24849422, i32 11501709, i32 13161720, i32 -4768874, i32 1925523, i32 11914390, i32 4662781, i32 7820689] }, %struct.ge_precomp { [10 x i32] [i32 12241050, i32 -425982, i32 8132691, i32 9393934, i32 32846760, i32 -1599620, i32 29749456, i32 12172924, i32 16136752, i32 15264020], [10 x i32] [i32 -10349955, i32 -14680563, i32 -8211979, i32 2330220, i32 -17662549, i32 -14545780, i32 10658213, i32 6671822, i32 19012087, i32 3772772], [10 x i32] [i32 3753511, i32 -3421066, i32 10617074, i32 2028709, i32 14841030, i32 -6721664, i32 28718732, i32 -15762884, i32 20527771, i32 12988982] }, %struct.ge_precomp { [10 x i32] [i32 -14822485, i32 -5797269, i32 -3707987, i32 12689773, i32 -898983, i32 -10914866, i32 -24183046, i32 -10564943, i32 3299665, i32 -12424953], [10 x i32] [i32 -16777703, i32 -15253301, i32 -9642417, i32 4978983, i32 3308785, i32 8755439, i32 6943197, i32 6461331, i32 -25583147, i32 8991218], [10 x i32] [i32 -17226263, i32 1816362, i32 -1673288, i32 -6086439, i32 31783888, i32 -8175991, i32 -32948145, i32 7417950, i32 -30242287, i32 1507265] }, %struct.ge_precomp { [10 x i32] [i32 29692663, i32 6829891, i32 -10498800, i32 4334896, i32 20945975, i32 -11906496, i32 -28887608, i32 8209391, i32 14606362, i32 -10647073], [10 x i32] [i32 -3481570, i32 8707081, i32 32188102, i32 5672294, i32 22096700, i32 1711240, i32 -33020695, i32 9761487, i32 4170404, i32 -2085325], [10 x i32] [i32 -11587470, i32 14855945, i32 -4127778, i32 -1531857, i32 -26649089, i32 15084046, i32 22186522, i32 16002000, i32 -14276837, i32 -8400798] }, %struct.ge_precomp { [10 x i32] [i32 -4811456, i32 13761029, i32 -31703877, i32 -2483919, i32 -3312471, i32 7869047, i32 -7113572, i32 -9620092, i32 13240845, i32 10965870], [10 x i32] [i32 -7742563, i32 -8256762, i32 -14768334, i32 -13656260, i32 -23232383, i32 12387166, i32 4498947, i32 14147411, i32 29514390, i32 4302863], [10 x i32] [i32 -13413405, i32 -12407859, i32 20757302, i32 -13801832, i32 14785143, i32 8976368, i32 -5061276, i32 -2144373, i32 17846988, i32 -13971927] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -2244452, i32 -754728, i32 -4597030, i32 -1066309, i32 -6247172, i32 1455299, i32 -21647728, i32 -9214789, i32 -5222701, i32 12650267], [10 x i32] [i32 -9906797, i32 -16070310, i32 21134160, i32 12198166, i32 -27064575, i32 708126, i32 387813, i32 13770293, i32 -19134326, i32 10958663], [10 x i32] [i32 22470984, i32 12369526, i32 23446014, i32 -5441109, i32 -21520802, i32 -9698723, i32 -11772496, i32 -11574455, i32 -25083830, i32 4271862] }, %struct.ge_precomp { [10 x i32] [i32 -25169565, i32 -10053642, i32 -19909332, i32 15361595, i32 -5984358, i32 2159192, i32 75375, i32 -4278529, i32 -32526221, i32 8469673], [10 x i32] [i32 15854970, i32 4148314, i32 -8893890, i32 7259002, i32 11666551, i32 13824734, i32 -30531198, i32 2697372, i32 24154791, i32 -9460943], [10 x i32] [i32 15446137, i32 -15806644, i32 29759747, i32 14019369, i32 30811221, i32 -9610191, i32 -31582008, i32 12840104, i32 24913809, i32 9815020] }, %struct.ge_precomp { [10 x i32] [i32 -4709286, i32 -5614269, i32 -31841498, i32 -12288893, i32 -14443537, i32 10799414, i32 -9103676, i32 13438769, i32 18735128, i32 9466238], [10 x i32] [i32 11933045, i32 9281483, i32 5081055, i32 -5183824, i32 -2628162, i32 -4905629, i32 -7727821, i32 -10896103, i32 -22728655, i32 16199064], [10 x i32] [i32 14576810, i32 379472, i32 -26786533, i32 -8317236, i32 -29426508, i32 -10812974, i32 -102766, i32 1876699, i32 30801119, i32 2164795] }, %struct.ge_precomp { [10 x i32] [i32 15995086, i32 3199873, i32 13672555, i32 13712240, i32 -19378835, i32 -4647646, i32 -13081610, i32 -15496269, i32 -13492807, i32 1268052], [10 x i32] [i32 -10290614, i32 -3659039, i32 -3286592, i32 10948818, i32 23037027, i32 3794475, i32 -3470338, i32 -12600221, i32 -17055369, i32 3565904], [10 x i32] [i32 29210088, i32 -9419337, i32 -5919792, i32 -4952785, i32 10834811, i32 -13327726, i32 -16512102, i32 -10820713, i32 -27162222, i32 -14030531] }, %struct.ge_precomp { [10 x i32] [i32 -13161890, i32 15508588, i32 16663704, i32 -8156150, i32 -28349942, i32 9019123, i32 -29183421, i32 -3769423, i32 2244111, i32 -14001979], [10 x i32] [i32 -5152875, i32 -3800936, i32 -9306475, i32 -6071583, i32 16243069, i32 14684434, i32 -25673088, i32 -16180800, i32 13491506, i32 4641841], [10 x i32] [i32 10813417, i32 643330, i32 -19188515, i32 -728916, i32 30292062, i32 -16600078, i32 27548447, i32 -7721242, i32 14476989, i32 -12767431] }, %struct.ge_precomp { [10 x i32] [i32 10292079, i32 9984945, i32 6481436, i32 8279905, i32 -7251514, i32 7032743, i32 27282937, i32 -1644259, i32 -27912810, i32 12651324], [10 x i32] [i32 -31185513, i32 -813383, i32 22271204, i32 11835308, i32 10201545, i32 15351028, i32 17099662, i32 3988035, i32 21721536, i32 -3148940], [10 x i32] [i32 10202177, i32 -6545839, i32 -31373232, i32 -9574638, i32 -32150642, i32 -8119683, i32 -12906320, i32 3852694, i32 13216206, i32 14842320] }, %struct.ge_precomp { [10 x i32] [i32 -15815640, i32 -10601066, i32 -6538952, i32 -7258995, i32 -6984659, i32 -6581778, i32 -31500847, i32 13765824, i32 -27434397, i32 9900184], [10 x i32] [i32 14465505, i32 -13833331, i32 -32133984, i32 -14738873, i32 -27443187, i32 12990492, i32 33046193, i32 15796406, i32 -7051866, i32 -8040114], [10 x i32] [i32 30924417, i32 -8279620, i32 6359016, i32 -12816335, i32 16508377, i32 9071735, i32 -25488601, i32 15413635, i32 9524356, i32 -7018878] }, %struct.ge_precomp { [10 x i32] [i32 12274201, i32 -13175547, i32 32627641, i32 -1785326, i32 6736625, i32 13267305, i32 5237659, i32 -5109483, i32 15663516, i32 4035784], [10 x i32] [i32 -2951309, i32 8903985, i32 17349946, i32 601635, i32 -16432815, i32 -4612556, i32 -13732739, i32 -15889334, i32 -22258478, i32 4659091], [10 x i32] [i32 -16916263, i32 -4952973, i32 -30393711, i32 -15158821, i32 20774812, i32 15897498, i32 5736189, i32 15026997, i32 -2178256, i32 -13455585] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -8858980, i32 -2219056, i32 28571666, i32 -10155518, i32 -474467, i32 -10105698, i32 -3801496, i32 278095, i32 23440562, i32 -290208], [10 x i32] [i32 10226241, i32 -5928702, i32 15139956, i32 120818, i32 -14867693, i32 5218603, i32 32937275, i32 11551483, i32 -16571960, i32 -7442864], [10 x i32] [i32 17932739, i32 -12437276, i32 -24039557, i32 10749060, i32 11316803, i32 7535897, i32 22503767, i32 5561594, i32 -3646624, i32 3898661] }, %struct.ge_precomp { [10 x i32] [i32 7749907, i32 -969567, i32 -16339731, i32 -16464, i32 -25018111, i32 15122143, i32 -1573531, i32 7152530, i32 21831162, i32 1245233], [10 x i32] [i32 26958459, i32 -14658026, i32 4314586, i32 8346991, i32 -5677764, i32 11960072, i32 -32589295, i32 -620035, i32 -30402091, i32 -16716212], [10 x i32] [i32 -12165896, i32 9166947, i32 33491384, i32 13673479, i32 29787085, i32 13096535, i32 6280834, i32 14587357, i32 -22338025, i32 13987525] }, %struct.ge_precomp { [10 x i32] [i32 -24349909, i32 7778775, i32 21116000, i32 15572597, i32 -4833266, i32 -5357778, i32 -4300898, i32 -5124639, i32 -7469781, i32 -2858068], [10 x i32] [i32 9681908, i32 -6737123, i32 -31951644, i32 13591838, i32 -6883821, i32 386950, i32 31622781, i32 6439245, i32 -14581012, i32 4091397], [10 x i32] [i32 -8426427, i32 1470727, i32 -28109679, i32 -1596990, i32 3978627, i32 -5123623, i32 -19622683, i32 12092163, i32 29077877, i32 -14741988] }, %struct.ge_precomp { [10 x i32] [i32 5269168, i32 -6859726, i32 -13230211, i32 -8020715, i32 25932563, i32 1763552, i32 -5606110, i32 -5505881, i32 -20017847, i32 2357889], [10 x i32] [i32 32264008, i32 -15407652, i32 -5387735, i32 -1160093, i32 -2091322, i32 -3946900, i32 23104804, i32 -12869908, i32 5727338, i32 189038], [10 x i32] [i32 14609123, i32 -8954470, i32 -6000566, i32 -16622781, i32 -14577387, i32 -7743898, i32 -26745169, i32 10942115, i32 -25888931, i32 -14884697] }, %struct.ge_precomp { [10 x i32] [i32 20513500, i32 5557931, i32 -15604613, i32 7829531, i32 26413943, i32 -2019404, i32 -21378968, i32 7471781, i32 13913677, i32 -5137875], [10 x i32] [i32 -25574376, i32 11967826, i32 29233242, i32 12948236, i32 -6754465, i32 4713227, i32 -8940970, i32 14059180, i32 12878652, i32 8511905], [10 x i32] [i32 -25656801, i32 3393631, i32 -2955415, i32 -7075526, i32 -2250709, i32 9366908, i32 -30223418, i32 6812974, i32 5568676, i32 -3127656] }, %struct.ge_precomp { [10 x i32] [i32 11630004, i32 12144454, i32 2116339, i32 13606037, i32 27378885, i32 15676917, i32 -17408753, i32 -13504373, i32 -14395196, i32 8070818], [10 x i32] [i32 27117696, i32 -10007378, i32 -31282771, i32 -5570088, i32 1127282, i32 12772488, i32 -29845906, i32 10483306, i32 -11552749, i32 -1028714], [10 x i32] [i32 10637467, i32 -5688064, i32 5674781, i32 1072708, i32 -26343588, i32 -6982302, i32 -1683975, i32 9177853, i32 -27493162, i32 15431203] }, %struct.ge_precomp { [10 x i32] [i32 20525145, i32 10892566, i32 -12742472, i32 12779443, i32 -29493034, i32 16150075, i32 -28240519, i32 14943142, i32 -15056790, i32 -7935931], [10 x i32] [i32 -30024462, i32 5626926, i32 -551567, i32 -9981087, i32 753598, i32 11981191, i32 25244767, i32 -3239766, i32 -3356550, i32 9594024], [10 x i32] [i32 -23752644, i32 2636870, i32 -5163910, i32 -10103818, i32 585134, i32 7877383, i32 11345683, i32 -6492290, i32 13352335, i32 -10977084] }, %struct.ge_precomp { [10 x i32] [i32 -1931799, i32 -5407458, i32 3304649, i32 -12884869, i32 17015806, i32 -4877091, i32 -29783850, i32 -7752482, i32 -13215537, i32 -319204], [10 x i32] [i32 20239939, i32 6607058, i32 6203985, i32 3483793, i32 -18386976, i32 -779229, i32 -20723742, i32 15077870, i32 -22750759, i32 14523817], [10 x i32] [i32 27406042, i32 -6041657, i32 27423596, i32 -4497394, i32 4996214, i32 10002360, i32 -28842031, i32 -4545494, i32 -30172742, i32 -4805667] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 11374242, i32 12660715, i32 17861383, i32 -12540833, i32 10935568, i32 1099227, i32 -13886076, i32 -9091740, i32 -27727044, i32 11358504], [10 x i32] [i32 -12730809, i32 10311867, i32 1510375, i32 10778093, i32 -2119455, i32 -9145702, i32 32676003, i32 11149336, i32 -26123651, i32 4985768], [10 x i32] [i32 -19096303, i32 341147, i32 -6197485, i32 -239033, i32 15756973, i32 -8796662, i32 -983043, i32 13794114, i32 -19414307, i32 -15621255] }, %struct.ge_precomp { [10 x i32] [i32 6490081, i32 11940286, i32 25495923, i32 -7726360, i32 8668373, i32 -8751316, i32 3367603, i32 6970005, i32 -1691065, i32 -9004790], [10 x i32] [i32 1656497, i32 13457317, i32 15370807, i32 6364910, i32 13605745, i32 8362338, i32 -19174622, i32 -5475723, i32 -16796596, i32 -5031438], [10 x i32] [i32 -22273315, i32 -13524424, i32 -64685, i32 -4334223, i32 -18605636, i32 -10921968, i32 -20571065, i32 -7007978, i32 -99853, i32 -10237333] }, %struct.ge_precomp { [10 x i32] [i32 17747465, i32 10039260, i32 19368299, i32 -4050591, i32 -20630635, i32 -16041286, i32 31992683, i32 -15857976, i32 -29260363, i32 -5511971], [10 x i32] [i32 31932027, i32 -4986141, i32 -19612382, i32 16366580, i32 22023614, i32 88450, i32 11371999, i32 -3744247, i32 4882242, i32 -10626905], [10 x i32] [i32 29796507, i32 37186, i32 19818052, i32 10115756, i32 -11829032, i32 3352736, i32 18551198, i32 3272828, i32 -5190932, i32 -4162409] }, %struct.ge_precomp { [10 x i32] [i32 12501286, i32 4044383, i32 -8612957, i32 -13392385, i32 -32430052, i32 5136599, i32 -19230378, i32 -3529697, i32 330070, i32 -3659409], [10 x i32] [i32 6384877, i32 2899513, i32 17807477, i32 7663917, i32 -2358888, i32 12363165, i32 25366522, i32 -8573892, i32 -271295, i32 12071499], [10 x i32] [i32 -8365515, i32 -4042521, i32 25133448, i32 -4517355, i32 -6211027, i32 2265927, i32 -32769618, i32 1936675, i32 -5159697, i32 3829363] }, %struct.ge_precomp { [10 x i32] [i32 28425966, i32 -5835433, i32 -577090, i32 -4697198, i32 -14217555, i32 6870930, i32 7921550, i32 -6567787, i32 26333140, i32 14267664], [10 x i32] [i32 -11067219, i32 11871231, i32 27385719, i32 -10559544, i32 -4585914, i32 -11189312, i32 10004786, i32 -8709488, i32 -21761224, i32 8930324], [10 x i32] [i32 -21197785, i32 -16396035, i32 25654216, i32 -1725397, i32 12282012, i32 11008919, i32 1541940, i32 4757911, i32 -26491501, i32 -16408940] }, %struct.ge_precomp { [10 x i32] [i32 13537262, i32 -7759490, i32 -20604840, i32 10961927, i32 -5922820, i32 -13218065, i32 -13156584, i32 6217254, i32 -15943699, i32 13814990], [10 x i32] [i32 -17422573, i32 15157790, i32 18705543, i32 29619, i32 24409717, i32 -260476, i32 27361681, i32 9257833, i32 -1956526, i32 -1776914], [10 x i32] [i32 -25045300, i32 -10191966, i32 15366585, i32 15166509, i32 -13105086, i32 8423556, i32 -29171540, i32 12361135, i32 -18685978, i32 4578290] }, %struct.ge_precomp { [10 x i32] [i32 24579768, i32 3711570, i32 1342322, i32 -11180126, i32 -27005135, i32 14124956, i32 -22544529, i32 14074919, i32 21964432, i32 8235257], [10 x i32] [i32 -6528613, i32 -2411497, i32 9442966, i32 -5925588, i32 12025640, i32 -1487420, i32 -2981514, i32 -1669206, i32 13006806, i32 2355433], [10 x i32] [i32 -16304899, i32 -13605259, i32 -6632427, i32 -5142349, i32 16974359, i32 -10911083, i32 27202044, i32 1719366, i32 1141648, i32 -12796236] }, %struct.ge_precomp { [10 x i32] [i32 -12863944, i32 -13219986, i32 -8318266, i32 -11018091, i32 -6810145, i32 -4843894, i32 13475066, i32 -3133972, i32 32674895, i32 13715045], [10 x i32] [i32 11423335, i32 -5468059, i32 32344216, i32 8962751, i32 24989809, i32 9241752, i32 -13265253, i32 16086212, i32 -28740881, i32 -15642093], [10 x i32] [i32 -1409668, i32 12530728, i32 -6368726, i32 10847387, i32 19531186, i32 -14132160, i32 -11709148, i32 7791794, i32 -27245943, i32 4383347] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -28970898, i32 5271447, i32 -1266009, i32 -9736989, i32 -12455236, i32 16732599, i32 -4862407, i32 -4906449, i32 27193557, i32 6245191], [10 x i32] [i32 -15193956, i32 5362278, i32 -1783893, i32 2695834, i32 4960227, i32 12840725, i32 23061898, i32 3260492, i32 22510453, i32 8577507], [10 x i32] [i32 -12632451, i32 11257346, i32 -32692994, i32 13548177, i32 -721004, i32 10879011, i32 31168030, i32 13952092, i32 -29571492, i32 -3635906] }, %struct.ge_precomp { [10 x i32] [i32 3877321, i32 -9572739, i32 32416692, i32 5405324, i32 -11004407, i32 -13656635, i32 3759769, i32 11935320, i32 5611860, i32 8164018], [10 x i32] [i32 -16275802, i32 14667797, i32 15906460, i32 12155291, i32 -22111149, i32 -9039718, i32 32003002, i32 -8832289, i32 5773085, i32 -8422109], [10 x i32] [i32 -23788118, i32 -8254300, i32 1950875, i32 8937633, i32 18686727, i32 16459170, i32 -905725, i32 12376320, i32 31632953, i32 190926] }, %struct.ge_precomp { [10 x i32] [i32 -24593607, i32 -16138885, i32 -8423991, i32 13378746, i32 14162407, i32 6901328, i32 -8288749, i32 4508564, i32 -25341555, i32 -3627528], [10 x i32] [i32 8884438, i32 -5884009, i32 6023974, i32 10104341, i32 -6881569, i32 -4941533, i32 18722941, i32 -14786005, i32 -1672488, i32 827625], [10 x i32] [i32 -32720583, i32 -16289296, i32 -32503547, i32 7101210, i32 13354605, i32 2659080, i32 -1800575, i32 -14108036, i32 -24878478, i32 1541286] }, %struct.ge_precomp { [10 x i32] [i32 2901347, i32 -1117687, i32 3880376, i32 -10059388, i32 -17620940, i32 -3612781, i32 -21802117, i32 -3567481, i32 20456845, i32 -1885033], [10 x i32] [i32 27019610, i32 12299467, i32 -13658288, i32 -1603234, i32 -12861660, i32 -4861471, i32 -19540150, i32 -5016058, i32 29439641, i32 15138866], [10 x i32] [i32 21536104, i32 -6626420, i32 -32447818, i32 -10690208, i32 -22408077, i32 5175814, i32 -5420040, i32 -16361163, i32 7779328, i32 109896] }, %struct.ge_precomp { [10 x i32] [i32 30279744, i32 14648750, i32 -8044871, i32 6425558, i32 13639621, i32 -743509, i32 28698390, i32 12180118, i32 23177719, i32 -554075], [10 x i32] [i32 26572847, i32 3405927, i32 -31701700, i32 12890905, i32 -19265668, i32 5335866, i32 -6493768, i32 2378492, i32 4439158, i32 -13279347], [10 x i32] [i32 -22716706, i32 3489070, i32 -9225266, i32 -332753, i32 18875722, i32 -1140095, i32 14819434, i32 -12731527, i32 -17717757, i32 -5461437] }, %struct.ge_precomp { [10 x i32] [i32 -5056483, i32 16566551, i32 15953661, i32 3767752, i32 -10436499, i32 15627060, i32 -820954, i32 2177225, i32 8550082, i32 -15114165], [10 x i32] [i32 -18473302, i32 16596775, i32 -381660, i32 15663611, i32 22860960, i32 15585581, i32 -27844109, i32 -3582739, i32 -23260460, i32 -8428588], [10 x i32] [i32 -32480551, i32 15707275, i32 -8205912, i32 -5652081, i32 29464558, i32 2713815, i32 -22725137, i32 15860482, i32 -21902570, i32 1494193] }, %struct.ge_precomp { [10 x i32] [i32 -19562091, i32 -14087393, i32 -25583872, i32 -9299552, i32 13127842, i32 759709, i32 21923482, i32 16529112, i32 8742704, i32 12967017], [10 x i32] [i32 -28464899, i32 1553205, i32 32536856, i32 -10473729, i32 -24691605, i32 -406174, i32 -8914625, i32 -2933896, i32 -29903758, i32 15553883], [10 x i32] [i32 21877909, i32 3230008, i32 9881174, i32 10539357, i32 -4797115, i32 2841332, i32 11543572, i32 14513274, i32 19375923, i32 -12647961] }, %struct.ge_precomp { [10 x i32] [i32 8832269, i32 -14495485, i32 13253511, i32 5137575, i32 5037871, i32 4078777, i32 24880818, i32 -6222716, i32 2862653, i32 9455043], [10 x i32] [i32 29306751, i32 5123106, i32 20245049, i32 -14149889, i32 9592566, i32 8447059, i32 -2077124, i32 -2990080, i32 15511449, i32 4789663], [10 x i32] [i32 -20679756, i32 7004547, i32 8824831, i32 -9434977, i32 -4045704, i32 -3750736, i32 -5754762, i32 108893, i32 23513200, i32 16652362] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -33256173, i32 4144782, i32 -4476029, i32 -6579123, i32 10770039, i32 -7155542, i32 -6650416, i32 -12936300, i32 -18319198, i32 10212860], [10 x i32] [i32 2756081, i32 8598110, i32 7383731, i32 -6859892, i32 22312759, i32 -1105012, i32 21179801, i32 2600940, i32 -9988298, i32 -12506466], [10 x i32] [i32 -24645692, i32 13317462, i32 -30449259, i32 -15653928, i32 21365574, i32 -10869657, i32 11344424, i32 864440, i32 -2499677, i32 -16710063] }, %struct.ge_precomp { [10 x i32] [i32 -26432803, i32 6148329, i32 -17184412, i32 -14474154, i32 18782929, i32 -275997, i32 -22561534, i32 211300, i32 2719757, i32 4940997], [10 x i32] [i32 -1323882, i32 3911313, i32 -6948744, i32 14759765, i32 -30027150, i32 7851207, i32 21690126, i32 8518463, i32 26699843, i32 5276295], [10 x i32] [i32 -13149873, i32 -6429067, i32 9396249, i32 365013, i32 24703301, i32 -10488939, i32 1321586, i32 149635, i32 -15452774, i32 7159369] }, %struct.ge_precomp { [10 x i32] [i32 9987780, i32 -3404759, i32 17507962, i32 9505530, i32 9731535, i32 -2165514, i32 22356009, i32 8312176, i32 22477218, i32 -8403385], [10 x i32] [i32 18155857, i32 -16504990, i32 19744716, i32 9006923, i32 15154154, i32 -10538976, i32 24256460, i32 -4864995, i32 -22548173, i32 9334109], [10 x i32] [i32 2986088, i32 -4911893, i32 10776628, i32 -3473844, i32 10620590, i32 -7083203, i32 -21413845, i32 14253545, i32 -22587149, i32 536906] }, %struct.ge_precomp { [10 x i32] [i32 4377756, i32 8115836, i32 24567078, i32 15495314, i32 11625074, i32 13064599, i32 7390551, i32 10589625, i32 10838060, i32 -15420424], [10 x i32] [i32 -19342404, i32 867880, i32 9277171, i32 -3218459, i32 -14431572, i32 -1986443, i32 19295826, i32 -15796950, i32 6378260, i32 699185], [10 x i32] [i32 7895026, i32 4057113, i32 -7081772, i32 -13077756, i32 -17886831, i32 -323126, i32 -716039, i32 15693155, i32 -5045064, i32 -13373962] }, %struct.ge_precomp { [10 x i32] [i32 -7737563, i32 -5869402, i32 -14566319, i32 -7406919, i32 11385654, i32 13201616, i32 31730678, i32 -10962840, i32 -3918636, i32 -9669325], [10 x i32] [i32 10188286, i32 -15770834, i32 -7336361, i32 13427543, i32 22223443, i32 14896287, i32 30743455, i32 7116568, i32 -21786507, i32 5427593], [10 x i32] [i32 696102, i32 13206899, i32 27047647, i32 -10632082, i32 15285305, i32 -9853179, i32 10798490, i32 -4578720, i32 19236243, i32 12477404] }, %struct.ge_precomp { [10 x i32] [i32 -11229439, i32 11243796, i32 -17054270, i32 -8040865, i32 -788228, i32 -8167967, i32 -3897669, i32 11180504, i32 -23169516, i32 7733644], [10 x i32] [i32 17800790, i32 -14036179, i32 -27000429, i32 -11766671, i32 23887827, i32 3149671, i32 23466177, i32 -10538171, i32 10322027, i32 15313801], [10 x i32] [i32 26246234, i32 11968874, i32 32263343, i32 -5468728, i32 6830755, i32 -13323031, i32 -15794704, i32 -101982, i32 -24449242, i32 10890804] }, %struct.ge_precomp { [10 x i32] [i32 -31365647, i32 10271363, i32 -12660625, i32 -6267268, i32 16690207, i32 -13062544, i32 -14982212, i32 16484931, i32 25180797, i32 -5334884], [10 x i32] [i32 -586574, i32 10376444, i32 -32586414, i32 -11286356, i32 19801893, i32 10997610, i32 2276632, i32 9482883, i32 316878, i32 13820577], [10 x i32] [i32 -9882808, i32 -4510367, i32 -2115506, i32 16457136, i32 -11100081, i32 11674996, i32 30756178, i32 -7515054, i32 30696930, i32 -3712849] }, %struct.ge_precomp { [10 x i32] [i32 32988917, i32 -9603412, i32 12499366, i32 7910787, i32 -10617257, i32 -11931514, i32 -7342816, i32 -9985397, i32 -32349517, i32 7392473], [10 x i32] [i32 -8855661, i32 15927861, i32 9866406, i32 -3649411, i32 -2396914, i32 -16655781, i32 -30409476, i32 -9134995, i32 25112947, i32 -2926644], [10 x i32] [i32 -2504044, i32 -436966, i32 25621774, i32 -5678772, i32 15085042, i32 -5479877, i32 -24884878, i32 -13526194, i32 5537438, i32 -13914319] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -11225584, i32 2320285, i32 -9584280, i32 10149187, i32 -33444663, i32 5808648, i32 -14876251, i32 -1729667, i32 31234590, i32 6090599], [10 x i32] [i32 -9633316, i32 116426, i32 26083934, i32 2897444, i32 -6364437, i32 -2688086, i32 609721, i32 15878753, i32 -6970405, i32 -9034768], [10 x i32] [i32 -27757857, i32 247744, i32 -15194774, i32 -9002551, i32 23288161, i32 -10011936, i32 -23869595, i32 6503646, i32 20650474, i32 1804084] }, %struct.ge_precomp { [10 x i32] [i32 -27589786, i32 15456424, i32 8972517, i32 8469608, i32 15640622, i32 4439847, i32 3121995, i32 -10329713, i32 27842616, i32 -202328], [10 x i32] [i32 -15306973, i32 2839644, i32 22530074, i32 10026331, i32 4602058, i32 5048462, i32 28248656, i32 5031932, i32 -11375082, i32 12714369], [10 x i32] [i32 20807691, i32 -7270825, i32 29286141, i32 11421711, i32 -27876523, i32 -13868230, i32 -21227475, i32 1035546, i32 -19733229, i32 12796920] }, %struct.ge_precomp { [10 x i32] [i32 12076899, i32 -14301286, i32 -8785001, i32 -11848922, i32 -25012791, i32 16400684, i32 -17591495, i32 -12899438, i32 3480665, i32 -15182815], [10 x i32] [i32 -32361549, i32 5457597, i32 28548107, i32 7833186, i32 7303070, i32 -11953545, i32 -24363064, i32 -15921875, i32 -33374054, i32 2771025], [10 x i32] [i32 -21389266, i32 421932, i32 26597266, i32 6860826, i32 22486084, i32 -6737172, i32 -17137485, i32 -4210226, i32 -24552282, i32 15673397] }, %struct.ge_precomp { [10 x i32] [i32 -20184622, i32 2338216, i32 19788685, i32 -9620956, i32 -4001265, i32 -8740893, i32 -20271184, i32 4733254, i32 3727144, i32 -12934448], [10 x i32] [i32 6120119, i32 814863, i32 -11794402, i32 -622716, i32 6812205, i32 -15747771, i32 2019594, i32 7975683, i32 31123697, i32 -10958981], [10 x i32] [i32 30069250, i32 -11435332, i32 30434654, i32 2958439, i32 18399564, i32 -976289, i32 12296869, i32 9204260, i32 -16432438, i32 9648165] }, %struct.ge_precomp { [10 x i32] [i32 32705432, i32 -1550977, i32 30705658, i32 7451065, i32 -11805606, i32 9631813, i32 3305266, i32 5248604, i32 -26008332, i32 -11377501], [10 x i32] [i32 17219865, i32 2375039, i32 -31570947, i32 -5575615, i32 -19459679, i32 9219903, i32 294711, i32 15298639, i32 2662509, i32 -16297073], [10 x i32] [i32 -1172927, i32 -7558695, i32 -4366770, i32 -4287744, i32 -21346413, i32 -8434326, i32 32087529, i32 -1222777, i32 32247248, i32 -14389861] }, %struct.ge_precomp { [10 x i32] [i32 14312628, i32 1221556, i32 17395390, i32 -8700143, i32 -4945741, i32 -8684635, i32 -28197744, i32 -9637817, i32 -16027623, i32 -13378845], [10 x i32] [i32 -1428825, i32 -9678990, i32 -9235681, i32 6549687, i32 -7383069, i32 -468664, i32 23046502, i32 9803137, i32 17597934, i32 2346211], [10 x i32] [i32 18510800, i32 15337574, i32 26171504, i32 981392, i32 -22241552, i32 7827556, i32 -23491134, i32 -11323352, i32 3059833, i32 -11782870] }, %struct.ge_precomp { [10 x i32] [i32 10141598, i32 6082907, i32 17829293, i32 -1947643, i32 9830092, i32 13613136, i32 -25556636, i32 -5544586, i32 -33502212, i32 3592096], [10 x i32] [i32 33114168, i32 -15889352, i32 -26525686, i32 -13343397, i32 33076705, i32 8716171, i32 1151462, i32 1521897, i32 -982665, i32 -6837803], [10 x i32] [i32 -32939165, i32 -4255815, i32 23947181, i32 -324178, i32 -33072974, i32 -12305637, i32 -16637686, i32 3891704, i32 26353178, i32 693168] }, %struct.ge_precomp { [10 x i32] [i32 30374239, i32 1595580, i32 -16884039, i32 13186931, i32 4600344, i32 406904, i32 9585294, i32 -400668, i32 31375464, i32 14369965], [10 x i32] [i32 -14370654, i32 -7772529, i32 1510301, i32 6434173, i32 -18784789, i32 -6262728, i32 32732230, i32 -13108839, i32 17901441, i32 16011505], [10 x i32] [i32 18171223, i32 -11934626, i32 -12500402, i32 15197122, i32 -11038147, i32 -15230035, i32 -19172240, i32 -16046376, i32 8764035, i32 12309598] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 5975908, i32 -5243188, i32 -19459362, i32 -9681747, i32 -11541277, i32 14015782, i32 -23665757, i32 1228319, i32 17544096, i32 -10593782], [10 x i32] [i32 5811932, i32 -1715293, i32 3442887, i32 -2269310, i32 -18367348, i32 -8359541, i32 -18044043, i32 -15410127, i32 -5565381, i32 12348900], [10 x i32] [i32 -31399660, i32 11407555, i32 25755363, i32 6891399, i32 -3256938, i32 14872274, i32 -24849353, i32 8141295, i32 -10632534, i32 -585479] }, %struct.ge_precomp { [10 x i32] [i32 -12675304, i32 694026, i32 -5076145, i32 13300344, i32 14015258, i32 -14451394, i32 -9698672, i32 -11329050, i32 30944593, i32 1130208], [10 x i32] [i32 8247766, i32 -6710942, i32 -26562381, i32 -7709309, i32 -14401939, i32 -14648910, i32 4652152, i32 2488540, i32 23550156, i32 -271232], [10 x i32] [i32 17294316, i32 -3788438, i32 7026748, i32 15626851, i32 22990044, i32 113481, i32 2267737, i32 -5908146, i32 -408818, i32 -137719] }, %struct.ge_precomp { [10 x i32] [i32 16091085, i32 -16253926, i32 18599252, i32 7340678, i32 2137637, i32 -1221657, i32 -3364161, i32 14550936, i32 3260525, i32 -7166271], [10 x i32] [i32 -4910104, i32 -13332887, i32 18550887, i32 10864893, i32 -16459325, i32 -7291596, i32 -23028869, i32 -13204905, i32 -12748722, i32 2701326], [10 x i32] [i32 -8574695, i32 16099415, i32 4629974, i32 -16340524, i32 -20786213, i32 -6005432, i32 -10018363, i32 9276971, i32 11329923, i32 1862132] }, %struct.ge_precomp { [10 x i32] [i32 14763076, i32 -15903608, i32 -30918270, i32 3689867, i32 3511892, i32 10313526, i32 -21951088, i32 12219231, i32 -9037963, i32 -940300], [10 x i32] [i32 8894987, i32 -3446094, i32 6150753, i32 3013931, i32 301220, i32 15693451, i32 -31981216, i32 -2909717, i32 -15438168, i32 11595570], [10 x i32] [i32 15214962, i32 3537601, i32 -26238722, i32 -14058872, i32 4418657, i32 -15230761, i32 13947276, i32 10730794, i32 -13489462, i32 -4363670] }, %struct.ge_precomp { [10 x i32] [i32 -2538306, i32 7682793, i32 32759013, i32 263109, i32 -29984731, i32 -7955452, i32 -22332124, i32 -10188635, i32 977108, i32 699994], [10 x i32] [i32 -12466472, i32 4195084, i32 -9211532, i32 550904, i32 -15565337, i32 12917920, i32 19118110, i32 -439841, i32 -30534533, i32 -14337913], [10 x i32] [i32 31788461, i32 -14507657, i32 4799989, i32 7372237, i32 8808585, i32 -14747943, i32 9408237, i32 -10051775, i32 12493932, i32 -5409317] }, %struct.ge_precomp { [10 x i32] [i32 -25680606, i32 5260744, i32 -19235809, i32 -6284470, i32 -3695942, i32 16566087, i32 27218280, i32 2607121, i32 29375955, i32 6024730], [10 x i32] [i32 842132, i32 -2794693, i32 -4763381, i32 -8722815, i32 26332018, i32 -12405641, i32 11831880, i32 6985184, i32 -9940361, i32 2854096], [10 x i32] [i32 -4847262, i32 -7969331, i32 2516242, i32 -5847713, i32 9695691, i32 -7221186, i32 16512645, i32 960770, i32 12121869, i32 16648078] }, %struct.ge_precomp { [10 x i32] [i32 -15218652, i32 14667096, i32 -13336229, i32 2013717, i32 30598287, i32 -464137, i32 -31504922, i32 -7882064, i32 20237806, i32 2838411], [10 x i32] [i32 -19288047, i32 4453152, i32 15298546, i32 -16178388, i32 22115043, i32 -15972604, i32 12544294, i32 -13470457, i32 1068881, i32 -12499905], [10 x i32] [i32 -9558883, i32 -16518835, i32 33238498, i32 13506958, i32 30505848, i32 -1114596, i32 -8486907, i32 -2630053, i32 12521378, i32 4845654] }, %struct.ge_precomp { [10 x i32] [i32 -28198521, i32 10744108, i32 -2958380, i32 10199664, i32 7759311, i32 -13088600, i32 3409348, i32 -873400, i32 -6482306, i32 -12885870], [10 x i32] [i32 -23561822, i32 6230156, i32 -20382013, i32 10655314, i32 -24040585, i32 -11621172, i32 10477734, i32 -1240216, i32 -3113227, i32 13974498], [10 x i32] [i32 12966261, i32 15550616, i32 -32038948, i32 -1615346, i32 21025980, i32 -629444, i32 5642325, i32 7188737, i32 18895762, i32 12629579] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 14741879, i32 -14946887, i32 22177208, i32 -11721237, i32 1279741, i32 8058600, i32 11758140, i32 789443, i32 32195181, i32 3895677], [10 x i32] [i32 10758205, i32 15755439, i32 -4509950, i32 9243698, i32 -4879422, i32 6879879, i32 -2204575, i32 -3566119, i32 -8982069, i32 4429647], [10 x i32] [i32 -2453894, i32 15725973, i32 -20436342, i32 -10410672, i32 -5803908, i32 -11040220, i32 -7135870, i32 -11642895, i32 18047436, i32 -15281743] }, %struct.ge_precomp { [10 x i32] [i32 -25173001, i32 -11307165, i32 29759956, i32 11776784, i32 -22262383, i32 -15820455, i32 10993114, i32 -12850837, i32 -17620701, i32 -9408468], [10 x i32] [i32 21987233, i32 700364, i32 -24505048, i32 14972008, i32 -7774265, i32 -5718395, i32 32155026, i32 2581431, i32 -29958985, i32 8773375], [10 x i32] [i32 -25568350, i32 454463, i32 -13211935, i32 16126715, i32 25240068, i32 8594567, i32 20656846, i32 12017935, i32 -7874389, i32 -13920155] }, %struct.ge_precomp { [10 x i32] [i32 6028182, i32 6263078, i32 -31011806, i32 -11301710, i32 -818919, i32 2461772, i32 -31841174, i32 -5468042, i32 -1721788, i32 -2776725], [10 x i32] [i32 -12278994, i32 16624277, i32 987579, i32 -5922598, i32 32908203, i32 1248608, i32 7719845, i32 -4166698, i32 28408820, i32 6816612], [10 x i32] [i32 -10358094, i32 -8237829, i32 19549651, i32 -12169222, i32 22082623, i32 16147817, i32 20613181, i32 13982702, i32 -10339570, i32 5067943] }, %struct.ge_precomp { [10 x i32] [i32 -30505967, i32 -3821767, i32 12074681, i32 13582412, i32 -19877972, i32 2443951, i32 -19719286, i32 12746132, i32 5331210, i32 -10105944], [10 x i32] [i32 30528811, i32 3601899, i32 -1957090, i32 4619785, i32 -27361822, i32 -15436388, i32 24180793, i32 -12570394, i32 27679908, i32 -1648928], [10 x i32] [i32 9402404, i32 -13957065, i32 32834043, i32 10838634, i32 -26580150, i32 -13237195, i32 26653274, i32 -8685565, i32 22611444, i32 -12715406] }, %struct.ge_precomp { [10 x i32] [i32 22190590, i32 1118029, i32 22736441, i32 15130463, i32 -30460692, i32 -5991321, i32 19189625, i32 -4648942, i32 4854859, i32 6622139], [10 x i32] [i32 -8310738, i32 -2953450, i32 -8262579, i32 -3388049, i32 -10401731, i32 -271929, i32 13424426, i32 -3567227, i32 26404409, i32 13001963], [10 x i32] [i32 -31241838, i32 -15415700, i32 -2994250, i32 8939346, i32 11562230, i32 -12840670, i32 -26064365, i32 -11621720, i32 -15405155, i32 11020693] }, %struct.ge_precomp { [10 x i32] [i32 1866042, i32 -7949489, i32 -7898649, i32 -10301010, i32 12483315, i32 13477547, i32 3175636, i32 -12424163, i32 28761762, i32 1406734], [10 x i32] [i32 -448555, i32 -1777666, i32 13018551, i32 3194501, i32 -9580420, i32 -11161737, i32 24760585, i32 -4347088, i32 25577411, i32 -13378680], [10 x i32] [i32 -24290378, i32 4759345, i32 -690653, i32 -1852816, i32 2066747, i32 10693769, i32 -29595790, i32 9884936, i32 -9368926, i32 4745410] }, %struct.ge_precomp { [10 x i32] [i32 -9141284, i32 6049714, i32 -19531061, i32 -4341411, i32 -31260798, i32 9944276, i32 -15462008, i32 -11311852, i32 10931924, i32 -11931931], [10 x i32] [i32 -16561513, i32 14112680, i32 -8012645, i32 4817318, i32 -8040464, i32 -11414606, i32 -22853429, i32 10856641, i32 -20470770, i32 13434654], [10 x i32] [i32 22759489, i32 -10073434, i32 -16766264, i32 -1871422, i32 13637442, i32 -10168091, i32 1765144, i32 -12654326, i32 28445307, i32 -5364710] }, %struct.ge_precomp { [10 x i32] [i32 29875063, i32 12493613, i32 2795536, i32 -3786330, i32 1710620, i32 15181182, i32 -10195717, i32 -8788675, i32 9074234, i32 1167180], [10 x i32] [i32 -26205683, i32 11014233, i32 -9842651, i32 -2635485, i32 -26908120, i32 7532294, i32 -18716888, i32 -9535498, i32 3843903, i32 9367684], [10 x i32] [i32 -10969595, i32 -6403711, i32 9591134, i32 9582310, i32 11349256, i32 108879, i32 16235123, i32 8601684, i32 -139197, i32 4242895] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 22092954, i32 -13191123, i32 -2042793, i32 -11968512, i32 32186753, i32 -11517388, i32 -6574341, i32 2470660, i32 -27417366, i32 16625501], [10 x i32] [i32 -11057722, i32 3042016, i32 13770083, i32 -9257922, i32 584236, i32 -544855, i32 -7770857, i32 2602725, i32 -27351616, i32 14247413], [10 x i32] [i32 6314175, i32 -10264892, i32 -32772502, i32 15957557, i32 -10157730, i32 168750, i32 -8618807, i32 14290061, i32 27108877, i32 -1180880] }, %struct.ge_precomp { [10 x i32] [i32 -8586597, i32 -7170966, i32 13241782, i32 10960156, i32 -32991015, i32 -13794596, i32 33547976, i32 -11058889, i32 -27148451, i32 981874], [10 x i32] [i32 22833440, i32 9293594, i32 -32649448, i32 -13618667, i32 -9136966, i32 14756819, i32 -22928859, i32 -13970780, i32 -10479804, i32 -16197962], [10 x i32] [i32 -7768587, i32 3326786, i32 -28111797, i32 10783824, i32 19178761, i32 14905060, i32 22680049, i32 13906969, i32 -15933690, i32 3797899] }, %struct.ge_precomp { [10 x i32] [i32 21721356, i32 -4212746, i32 -12206123, i32 9310182, i32 -3882239, i32 -13653110, i32 23740224, i32 -2709232, i32 20491983, i32 -8042152], [10 x i32] [i32 9209270, i32 -15135055, i32 -13256557, i32 -6167798, i32 -731016, i32 15289673, i32 25947805, i32 15286587, i32 30997318, i32 -6703063], [10 x i32] [i32 7392032, i32 16618386, i32 23946583, i32 -8039892, i32 -13265164, i32 -1533858, i32 -14197445, i32 -2321576, i32 17649998, i32 -250080] }, %struct.ge_precomp { [10 x i32] [i32 -9301088, i32 -14193827, i32 30609526, i32 -3049543, i32 -25175069, i32 -1283752, i32 -15241566, i32 -9525724, i32 -2233253, i32 7662146], [10 x i32] [i32 -17558673, i32 1763594, i32 -33114336, i32 15908610, i32 -30040870, i32 -12174295, i32 7335080, i32 -8472199, i32 -3174674, i32 3440183], [10 x i32] [i32 -19889700, i32 -5977008, i32 -24111293, i32 -9688870, i32 10799743, i32 -16571957, i32 40450, i32 -4431835, i32 4862400, i32 1133] }, %struct.ge_precomp { [10 x i32] [i32 -32856209, i32 -7873957, i32 -5422389, i32 14860950, i32 -16319031, i32 7956142, i32 7258061, i32 311861, i32 -30594991, i32 -7379421], [10 x i32] [i32 -3773428, i32 -1565936, i32 28985340, i32 7499440, i32 24445838, i32 9325937, i32 29727763, i32 16527196, i32 18278453, i32 15405622], [10 x i32] [i32 -4381906, i32 8508652, i32 -19898366, i32 -3674424, i32 -5984453, i32 15149970, i32 -13313598, i32 843523, i32 -21875062, i32 13626197] }, %struct.ge_precomp { [10 x i32] [i32 2281448, i32 -13487055, i32 -10915418, i32 -2609910, i32 1879358, i32 16164207, i32 -10783882, i32 3953792, i32 13340839, i32 15928663], [10 x i32] [i32 31727126, i32 -7179855, i32 -18437503, i32 -8283652, i32 2875793, i32 -16390330, i32 -25269894, i32 -7014826, i32 -23452306, i32 5964753], [10 x i32] [i32 4100420, i32 -5959452, i32 -17179337, i32 6017714, i32 -18705837, i32 12227141, i32 -26684835, i32 11344144, i32 2538215, i32 -7570755] }, %struct.ge_precomp { [10 x i32] [i32 -9433605, i32 6123113, i32 11159803, i32 -2156608, i32 30016280, i32 14966241, i32 -20474983, i32 1485421, i32 -629256, i32 -15958862], [10 x i32] [i32 -26804558, i32 4260919, i32 11851389, i32 9658551, i32 -32017107, i32 16367492, i32 -20205425, i32 -13191288, i32 11659922, i32 -11115118], [10 x i32] [i32 26180396, i32 10015009, i32 -30844224, i32 -8581293, i32 5418197, i32 9480663, i32 2231568, i32 -10170080, i32 33100372, i32 -1306171] }, %struct.ge_precomp { [10 x i32] [i32 15121113, i32 -5201871, i32 -10389905, i32 15427821, i32 -27509937, i32 -15992507, i32 21670947, i32 4486675, i32 -5931810, i32 -14466380], [10 x i32] [i32 16166486, i32 -9483733, i32 -11104130, i32 6023908, i32 -31926798, i32 -1364923, i32 2340060, i32 -16254968, i32 -10735770, i32 -10039824], [10 x i32] [i32 28042865, i32 -3557089, i32 -12126526, i32 12259706, i32 -3717498, i32 -6945899, i32 6766453, i32 -8689599, i32 18036436, i32 5803270] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -817581, i32 6763912, i32 11803561, i32 1585585, i32 10958447, i32 -2671165, i32 23855391, i32 4598332, i32 -6159431, i32 -14117438], [10 x i32] [i32 -31031306, i32 -14256194, i32 17332029, i32 -2383520, i32 31312682, i32 -5967183, i32 696309, i32 50292, i32 -20095739, i32 11763584], [10 x i32] [i32 -594563, i32 -2514283, i32 -32234153, i32 12643980, i32 12650761, i32 14811489, i32 665117, i32 -12613632, i32 -19773211, i32 -10713562] }, %struct.ge_precomp { [10 x i32] [i32 30464590, i32 -11262872, i32 -4127476, i32 -12734478, i32 19835327, i32 -7105613, i32 -24396175, i32 2075773, i32 -17020157, i32 992471], [10 x i32] [i32 18357185, i32 -6994433, i32 7766382, i32 16342475, i32 -29324918, i32 411174, i32 14578841, i32 8080033, i32 -11574335, i32 -10601610], [10 x i32] [i32 19598397, i32 10334610, i32 12555054, i32 2555664, i32 18821899, i32 -10339780, i32 21873263, i32 16014234, i32 26224780, i32 16452269] }, %struct.ge_precomp { [10 x i32] [i32 -30223925, i32 5145196, i32 5944548, i32 16385966, i32 3976735, i32 2009897, i32 -11377804, i32 -7618186, i32 -20533829, i32 3698650], [10 x i32] [i32 14187449, i32 3448569, i32 -10636236, i32 -10810935, i32 -22663880, i32 -3433596, i32 7268410, i32 -10890444, i32 27394301, i32 12015369], [10 x i32] [i32 19695761, i32 16087646, i32 28032085, i32 12999827, i32 6817792, i32 11427614, i32 20244189, i32 -1312777, i32 -13259127, i32 -3402461] }, %struct.ge_precomp { [10 x i32] [i32 30860103, i32 12735208, i32 -1888245, i32 -4699734, i32 -16974906, i32 2256940, i32 -8166013, i32 12298312, i32 -8550524, i32 -10393462], [10 x i32] [i32 -5719826, i32 -11245325, i32 -1910649, i32 15569035, i32 26642876, i32 -7587760, i32 -5789354, i32 -15118654, i32 -4976164, i32 12651793], [10 x i32] [i32 -2848395, i32 9953421, i32 11531313, i32 -5282879, i32 26895123, i32 -12697089, i32 -13118820, i32 -16517902, i32 9768698, i32 -2533218] }, %struct.ge_precomp { [10 x i32] [i32 -24719459, i32 1894651, i32 -287698, i32 -4704085, i32 15348719, i32 -8156530, i32 32767513, i32 12765450, i32 4940095, i32 10678226], [10 x i32] [i32 18860224, i32 15980149, i32 -18987240, i32 -1562570, i32 -26233012, i32 -11071856, i32 -7843882, i32 13944024, i32 -24372348, i32 16582019], [10 x i32] [i32 -15504260, i32 4970268, i32 -29893044, i32 4175593, i32 -20993212, i32 -2199756, i32 -11704054, i32 15444560, i32 -11003761, i32 7989037] }, %struct.ge_precomp { [10 x i32] [i32 31490452, i32 5568061, i32 -2412803, i32 2182383, i32 -32336847, i32 4531686, i32 -32078269, i32 6200206, i32 -19686113, i32 -14800171], [10 x i32] [i32 -17308668, i32 -15879940, i32 -31522777, i32 -2831, i32 -32887382, i32 16375549, i32 8680158, i32 -16371713, i32 28550068, i32 -6857132], [10 x i32] [i32 -28126887, i32 -5688091, i32 16837845, i32 -1820458, i32 -6850681, i32 12700016, i32 -30039981, i32 4364038, i32 1155602, i32 5988841] }, %struct.ge_precomp { [10 x i32] [i32 21890435, i32 -13272907, i32 -12624011, i32 12154349, i32 -7831873, i32 15300496, i32 23148983, i32 -4470481, i32 24618407, i32 8283181], [10 x i32] [i32 -33136107, i32 -10512751, i32 9975416, i32 6841041, i32 -31559793, i32 16356536, i32 3070187, i32 -7025928, i32 1466169, i32 10740210], [10 x i32] [i32 -1509399, i32 -15488185, i32 -13503385, i32 -10655916, i32 32799044, i32 909394, i32 -13938903, i32 -5779719, i32 -32164649, i32 -15327040] }, %struct.ge_precomp { [10 x i32] [i32 3960823, i32 -14267803, i32 -28026090, i32 -15918051, i32 -19404858, i32 13146868, i32 15567327, i32 951507, i32 -3260321, i32 -573935], [10 x i32] [i32 24740841, i32 5052253, i32 -30094131, i32 8961361, i32 25877428, i32 6165135, i32 -24368180, i32 14397372, i32 -7380369, i32 -6144105], [10 x i32] [i32 -28888365, i32 3510803, i32 -28103278, i32 -1158478, i32 -11238128, i32 -10631454, i32 -15441463, i32 -14453128, i32 -1625486, i32 -6494814] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 793299, i32 -9230478, i32 8836302, i32 -6235707, i32 -27360908, i32 -2369593, i32 33152843, i32 -4885251, i32 -9906200, i32 -621852], [10 x i32] [i32 5666233, i32 525582, i32 20782575, i32 -8038419, i32 -24538499, i32 14657740, i32 16099374, i32 1468826, i32 -6171428, i32 -15186581], [10 x i32] [i32 -4859255, i32 -3779343, i32 -2917758, i32 -6748019, i32 7778750, i32 11688288, i32 -30404353, i32 -9871238, i32 -1558923, i32 -9863646] }, %struct.ge_precomp { [10 x i32] [i32 10896332, i32 -7719704, i32 824275, i32 472601, i32 -19460308, i32 3009587, i32 25248958, i32 14783338, i32 -30581476, i32 -15757844], [10 x i32] [i32 10566929, i32 12612572, i32 -31944212, i32 11118703, i32 -12633376, i32 12362879, i32 21752402, i32 8822496, i32 24003793, i32 14264025], [10 x i32] [i32 27713862, i32 -7355973, i32 -11008240, i32 9227530, i32 27050101, i32 2504721, i32 23886875, i32 -13117525, i32 13958495, i32 -5732453] }, %struct.ge_precomp { [10 x i32] [i32 -23481610, i32 4867226, i32 -27247128, i32 3900521, i32 29838369, i32 -8212291, i32 -31889399, i32 -10041781, i32 7340521, i32 -15410068], [10 x i32] [i32 4646514, i32 -8011124, i32 -22766023, i32 -11532654, i32 23184553, i32 8566613, i32 31366726, i32 -1381061, i32 -15066784, i32 -10375192], [10 x i32] [i32 -17270517, i32 12723032, i32 -16993061, i32 14878794, i32 21619651, i32 -6197576, i32 27584817, i32 3093888, i32 -8843694, i32 3849921] }, %struct.ge_precomp { [10 x i32] [i32 -9064912, i32 2103172, i32 25561640, i32 -15125738, i32 -5239824, i32 9582958, i32 32477045, i32 -9017955, i32 5002294, i32 -15550259], [10 x i32] [i32 -12057553, i32 -11177906, i32 21115585, i32 -13365155, i32 8808712, i32 -12030708, i32 16489530, i32 13378448, i32 -25845716, i32 12741426], [10 x i32] [i32 -5946367, i32 10645103, i32 -30911586, i32 15390284, i32 -3286982, i32 -7118677, i32 24306472, i32 15852464, i32 28834118, i32 -7646072] }, %struct.ge_precomp { [10 x i32] [i32 -17335748, i32 -9107057, i32 -24531279, i32 9434953, i32 -8472084, i32 -583362, i32 -13090771, i32 455841, i32 20461858, i32 5491305], [10 x i32] [i32 13669248, i32 -16095482, i32 -12481974, i32 -10203039, i32 -14569770, i32 -11893198, i32 -24995986, i32 11293807, i32 -28588204, i32 -9421832], [10 x i32] [i32 28497928, i32 6272777, i32 -33022994, i32 14470570, i32 8906179, i32 -1225630, i32 18504674, i32 -14165166, i32 29867745, i32 -8795943] }, %struct.ge_precomp { [10 x i32] [i32 -16207023, i32 13517196, i32 -27799630, i32 -13697798, i32 24009064, i32 -6373891, i32 -6367600, i32 -13175392, i32 22853429, i32 -4012011], [10 x i32] [i32 24191378, i32 16712145, i32 -13931797, i32 15217831, i32 14542237, i32 1646131, i32 18603514, i32 -11037887, i32 12876623, i32 -2112447], [10 x i32] [i32 17902668, i32 4518229, i32 -411702, i32 -2829247, i32 26878217, i32 5258055, i32 -12860753, i32 608397, i32 16031844, i32 3723494] }, %struct.ge_precomp { [10 x i32] [i32 -28632773, i32 12763728, i32 -20446446, i32 7577504, i32 33001348, i32 -13017745, i32 17558842, i32 -7872890, i32 23896954, i32 -4314245], [10 x i32] [i32 -20005381, i32 -12011952, i32 31520464, i32 605201, i32 2543521, i32 5991821, i32 -2945064, i32 7229064, i32 -9919646, i32 -8826859], [10 x i32] [i32 28816045, i32 298879, i32 -28165016, i32 -15920938, i32 19000928, i32 -1665890, i32 -12680833, i32 -2949325, i32 -18051778, i32 -2082915] }, %struct.ge_precomp { [10 x i32] [i32 16000882, i32 -344896, i32 3493092, i32 -11447198, i32 -29504595, i32 -13159789, i32 12577740, i32 16041268, i32 -19715240, i32 7847707], [10 x i32] [i32 10151868, i32 10572098, i32 27312476, i32 7922682, i32 14825339, i32 4723128, i32 -32855931, i32 -6519018, i32 -10020567, i32 3852848], [10 x i32] [i32 -11430470, i32 15697596, i32 -21121557, i32 -4420647, i32 5386314, i32 15063598, i32 16514493, i32 -15932110, i32 29330899, i32 -15076224] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -25499735, i32 -4378794, i32 -15222908, i32 -6901211, i32 16615731, i32 2051784, i32 3303702, i32 15490, i32 -27548796, i32 12314391], [10 x i32] [i32 15683520, i32 -6003043, i32 18109120, i32 -9980648, i32 15337968, i32 -5997823, i32 -16717435, i32 15921866, i32 16103996, i32 -3731215], [10 x i32] [i32 -23169824, i32 -10781249, i32 13588192, i32 -1628807, i32 -3798557, i32 -1074929, i32 -19273607, i32 5402699, i32 -29815713, i32 -9841101] }, %struct.ge_precomp { [10 x i32] [i32 23190676, i32 2384583, i32 -32714340, i32 3462154, i32 -29903655, i32 -1529132, i32 -11266856, i32 8911517, i32 -25205859, i32 2739713], [10 x i32] [i32 21374101, i32 -3554250, i32 -33524649, i32 9874411, i32 15377179, i32 11831242, i32 -33529904, i32 6134907, i32 4931255, i32 11987849], [10 x i32] [i32 -7732, i32 -2978858, i32 -16223486, i32 7277597, i32 105524, i32 -322051, i32 -31480539, i32 13861388, i32 -30076310, i32 10117930] }, %struct.ge_precomp { [10 x i32] [i32 -29501170, i32 -10744872, i32 -26163768, i32 13051539, i32 -25625564, i32 5089643, i32 -6325503, i32 6704079, i32 12890019, i32 15728940], [10 x i32] [i32 -21972360, i32 -11771379, i32 -951059, i32 -4418840, i32 14704840, i32 2695116, i32 903376, i32 -10428139, i32 12885167, i32 8311031], [10 x i32] [i32 -17516482, i32 5352194, i32 10384213, i32 -13811658, i32 7506451, i32 13453191, i32 26423267, i32 4384730, i32 1888765, i32 -5435404] }, %struct.ge_precomp { [10 x i32] [i32 -25817338, i32 -3107312, i32 -13494599, i32 -3182506, i32 30896459, i32 -13921729, i32 -32251644, i32 -12707869, i32 -19464434, i32 -3340243], [10 x i32] [i32 -23607977, i32 -2665774, i32 -526091, i32 4651136, i32 5765089, i32 4618330, i32 6092245, i32 14845197, i32 17151279, i32 -9854116], [10 x i32] [i32 -24830458, i32 -12733720, i32 -15165978, i32 10367250, i32 -29530908, i32 -265356, i32 22825805, i32 -7087279, i32 -16866484, i32 16176525] }, %struct.ge_precomp { [10 x i32] [i32 -23583256, i32 6564961, i32 20063689, i32 3798228, i32 -4740178, i32 7359225, i32 2006182, i32 -10363426, i32 -28746253, i32 -10197509], [10 x i32] [i32 -10626600, i32 -4486402, i32 -13320562, i32 -5125317, i32 3432136, i32 -6393229, i32 23632037, i32 -1940610, i32 32808310, i32 1099883], [10 x i32] [i32 15030977, i32 5768825, i32 -27451236, i32 -2887299, i32 -6427378, i32 -15361371, i32 -15277896, i32 -6809350, i32 2051441, i32 -15225865] }, %struct.ge_precomp { [10 x i32] [i32 -3362323, i32 -7239372, i32 7517890, i32 9824992, i32 23555850, i32 295369, i32 5148398, i32 -14154188, i32 -22686354, i32 16633660], [10 x i32] [i32 4577086, i32 -16752288, i32 13249841, i32 -15304328, i32 19958763, i32 -14537274, i32 18559670, i32 -10759549, i32 8402478, i32 -9864273], [10 x i32] [i32 -28406330, i32 -1051581, i32 -26790155, i32 -907698, i32 -17212414, i32 -11030789, i32 9453451, i32 -14980072, i32 17983010, i32 9967138] }, %struct.ge_precomp { [10 x i32] [i32 -25762494, i32 6524722, i32 26585488, i32 9969270, i32 24709298, i32 1220360, i32 -1677990, i32 7806337, i32 17507396, i32 3651560], [10 x i32] [i32 -10420457, i32 -4118111, i32 14584639, i32 15971087, i32 -15768321, i32 8861010, i32 26556809, i32 -5574557, i32 -18553322, i32 -11357135], [10 x i32] [i32 2839101, i32 14284142, i32 4029895, i32 3472686, i32 14402957, i32 12689363, i32 -26642121, i32 8459447, i32 -5605463, i32 -7621941] }, %struct.ge_precomp { [10 x i32] [i32 -4839289, i32 -3535444, i32 9744961, i32 2871048, i32 25113978, i32 3187018, i32 -25110813, i32 -849066, i32 17258084, i32 -7977739], [10 x i32] [i32 18164541, i32 -10595176, i32 -17154882, i32 -1542417, i32 19237078, i32 -9745295, i32 23357533, i32 -15217008, i32 26908270, i32 12150756], [10 x i32] [i32 -30264870, i32 -7647865, i32 5112249, i32 -7036672, i32 -1499807, i32 -6974257, i32 43168, i32 -5537701, i32 -32302074, i32 16215819] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -6898905, i32 9824394, i32 -12304779, i32 -4401089, i32 -31397141, i32 -6276835, i32 32574489, i32 12532905, i32 -7503072, i32 -8675347], [10 x i32] [i32 -27343522, i32 -16515468, i32 -27151524, i32 -10722951, i32 946346, i32 16291093, i32 254968, i32 7168080, i32 21676107, i32 -1943028], [10 x i32] [i32 21260961, i32 -8424752, i32 -16831886, i32 -11920822, i32 -23677961, i32 3968121, i32 -3651949, i32 -6215466, i32 -3556191, i32 -7913075] }, %struct.ge_precomp { [10 x i32] [i32 16544754, i32 13250366, i32 -16804428, i32 15546242, i32 -4583003, i32 12757258, i32 -2462308, i32 -8680336, i32 -18907032, i32 -9662799], [10 x i32] [i32 -2415239, i32 -15577728, i32 18312303, i32 4964443, i32 -15272530, i32 -12653564, i32 26820651, i32 16690659, i32 25459437, i32 -4564609], [10 x i32] [i32 -25144690, i32 11425020, i32 28423002, i32 -11020557, i32 -6144921, i32 -15826224, i32 9142795, i32 -2391602, i32 -6432418, i32 -1644817] }, %struct.ge_precomp { [10 x i32] [i32 -23104652, i32 6253476, i32 16964147, i32 -3768872, i32 -25113972, i32 -12296437, i32 -27457225, i32 -16344658, i32 6335692, i32 7249989], [10 x i32] [i32 -30333227, i32 13979675, i32 7503222, i32 -12368314, i32 -11956721, i32 -4621693, i32 -30272269, i32 2682242, i32 25993170, i32 -12478523], [10 x i32] [i32 4364628, i32 5930691, i32 32304656, i32 -10044554, i32 -8054781, i32 15091131, i32 22857016, i32 -10598955, i32 31820368, i32 15075278] }, %struct.ge_precomp { [10 x i32] [i32 31879134, i32 -8918693, i32 17258761, i32 90626, i32 -8041836, i32 -4917709, i32 24162788, i32 -9650886, i32 -17970238, i32 12833045], [10 x i32] [i32 19073683, i32 14851414, i32 -24403169, i32 -11860168, i32 7625278, i32 11091125, i32 -19619190, i32 2074449, i32 -9413939, i32 14905377], [10 x i32] [i32 24483667, i32 -11935567, i32 -2518866, i32 -11547418, i32 -1553130, i32 15355506, i32 -25282080, i32 9253129, i32 27628530, i32 -7555480] }, %struct.ge_precomp { [10 x i32] [i32 17597607, i32 8340603, i32 19355617, i32 552187, i32 26198470, i32 -3176583, i32 4593324, i32 -9157582, i32 -14110875, i32 15297016], [10 x i32] [i32 510886, i32 14337390, i32 -31785257, i32 16638632, i32 6328095, i32 2713355, i32 -20217417, i32 -11864220, i32 8683221, i32 2921426], [10 x i32] [i32 18606791, i32 11874196, i32 27155355, i32 -5281482, i32 -24031742, i32 6265446, i32 -25178240, i32 -1278924, i32 4674690, i32 13890525] }, %struct.ge_precomp { [10 x i32] [i32 13609624, i32 13069022, i32 -27372361, i32 -13055908, i32 24360586, i32 9592974, i32 14977157, i32 9835105, i32 4389687, i32 288396], [10 x i32] [i32 9922506, i32 -519394, i32 13613107, i32 5883594, i32 -18758345, i32 -434263, i32 -12304062, i32 8317628, i32 23388070, i32 16052080], [10 x i32] [i32 12720016, i32 11937594, i32 -31970060, i32 -5028689, i32 26900120, i32 8561328, i32 -20155687, i32 -11632979, i32 -14754271, i32 -10812892] }, %struct.ge_precomp { [10 x i32] [i32 15961858, i32 14150409, i32 26716931, i32 -665832, i32 -22794328, i32 13603569, i32 11829573, i32 7467844, i32 -28822128, i32 929275], [10 x i32] [i32 11038231, i32 -11582396, i32 -27310482, i32 -7316562, i32 -10498527, i32 -16307831, i32 -23479533, i32 -9371869, i32 -21393143, i32 2465074], [10 x i32] [i32 20017163, i32 -4323226, i32 27915242, i32 1529148, i32 12396362, i32 15675764, i32 13817261, i32 -9658066, i32 2463391, i32 -4622140] }, %struct.ge_precomp { [10 x i32] [i32 -16358878, i32 -12663911, i32 -12065183, i32 4996454, i32 -1256422, i32 1073572, i32 9583558, i32 12851107, i32 4003896, i32 12673717], [10 x i32] [i32 -1731589, i32 -15155870, i32 -3262930, i32 16143082, i32 19294135, i32 13385325, i32 14741514, i32 -9103726, i32 7903886, i32 2348101], [10 x i32] [i32 24536016, i32 -16515207, i32 12715592, i32 -3862155, i32 1511293, i32 10047386, i32 -3842346, i32 -7129159, i32 -28377538, i32 10048127] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -12622226, i32 -6204820, i32 30718825, i32 2591312, i32 -10617028, i32 12192840, i32 18873298, i32 -7297090, i32 -32297756, i32 15221632], [10 x i32] [i32 -26478122, i32 -11103864, i32 11546244, i32 -1852483, i32 9180880, i32 7656409, i32 -21343950, i32 2095755, i32 29769758, i32 6593415], [10 x i32] [i32 -31994208, i32 -2907461, i32 4176912, i32 3264766, i32 12538965, i32 -868111, i32 26312345, i32 -6118678, i32 30958054, i32 8292160] }, %struct.ge_precomp { [10 x i32] [i32 31429822, i32 -13959116, i32 29173532, i32 15632448, i32 12174511, i32 -2760094, i32 32808831, i32 3977186, i32 26143136, i32 -3148876], [10 x i32] [i32 22648901, i32 1402143, i32 -22799984, i32 13746059, i32 7936347, i32 365344, i32 -8668633, i32 -1674433, i32 -3758243, i32 -2304625], [10 x i32] [i32 -15491917, i32 8012313, i32 -2514730, i32 -12702462, i32 -23965846, i32 -10254029, i32 -1612713, i32 -1535569, i32 -16664475, i32 8194478] }, %struct.ge_precomp { [10 x i32] [i32 27338066, i32 -7507420, i32 -7414224, i32 10140405, i32 -19026427, i32 -6589889, i32 27277191, i32 8855376, i32 28572286, i32 3005164], [10 x i32] [i32 26287124, i32 4821776, i32 25476601, i32 -4145903, i32 -3764513, i32 -15788984, i32 -18008582, i32 1182479, i32 -26094821, i32 -13079595], [10 x i32] [i32 -7171154, i32 3178080, i32 23970071, i32 6201893, i32 -17195577, i32 -4489192, i32 -21876275, i32 -13982627, i32 32208683, i32 -1198248] }, %struct.ge_precomp { [10 x i32] [i32 -16657702, i32 2817643, i32 -10286362, i32 14811298, i32 6024667, i32 13349505, i32 -27315504, i32 -10497842, i32 -27672585, i32 -11539858], [10 x i32] [i32 15941029, i32 -9405932, i32 -21367050, i32 8062055, i32 31876073, i32 -238629, i32 -15278393, i32 -1444429, i32 15397331, i32 -4130193], [10 x i32] [i32 8934485, i32 -13485467, i32 -23286397, i32 -13423241, i32 -32446090, i32 14047986, i32 31170398, i32 -1441021, i32 -27505566, i32 15087184] }, %struct.ge_precomp { [10 x i32] [i32 -18357243, i32 -2156491, i32 24524913, i32 -16677868, i32 15520427, i32 -6360776, i32 -15502406, i32 11461896, i32 16788528, i32 -5868942], [10 x i32] [i32 -1947386, i32 16013773, i32 21750665, i32 3714552, i32 -17401782, i32 -16055433, i32 -3770287, i32 -10323320, i32 31322514, i32 -11615635], [10 x i32] [i32 21426655, i32 -5650218, i32 -13648287, i32 -5347537, i32 -28812189, i32 -4920970, i32 -18275391, i32 -14621414, i32 13040862, i32 -12112948] }, %struct.ge_precomp { [10 x i32] [i32 11293895, i32 12478086, i32 -27136401, i32 15083750, i32 -29307421, i32 14748872, i32 14555558, i32 -13417103, i32 1613711, i32 4896935], [10 x i32] [i32 -25894883, i32 15323294, i32 -8489791, i32 -8057900, i32 25967126, i32 -13425460, i32 2825960, i32 -4897045, i32 -23971776, i32 -11267415], [10 x i32] [i32 -15924766, i32 -5229880, i32 -17443532, i32 6410664, i32 3622847, i32 10243618, i32 20615400, i32 12405433, i32 -23753030, i32 -8436416] }, %struct.ge_precomp { [10 x i32] [i32 -7091295, i32 12556208, i32 -20191352, i32 9025187, i32 -17072479, i32 4333801, i32 4378436, i32 2432030, i32 23097949, i32 -566018], [10 x i32] [i32 4565804, i32 -16025654, i32 20084412, i32 -7842817, i32 1724999, i32 189254, i32 24767264, i32 10103221, i32 -18512313, i32 2424778], [10 x i32] [i32 366633, i32 -11976806, i32 8173090, i32 -6890119, i32 30788634, i32 5745705, i32 -7168678, i32 1344109, i32 -3642553, i32 12412659] }, %struct.ge_precomp { [10 x i32] [i32 -24001791, i32 7690286, i32 14929416, i32 -168257, i32 -32210835, i32 -13412986, i32 24162697, i32 -15326504, i32 -3141501, i32 11179385], [10 x i32] [i32 18289522, i32 -14724954, i32 8056945, i32 16430056, i32 -21729724, i32 7842514, i32 -6001441, i32 -1486897, i32 -18684645, i32 -11443503], [10 x i32] [i32 476239, i32 6601091, i32 -6152790, i32 -9723375, i32 17503545, i32 -4863900, i32 27672959, i32 13403813, i32 11052904, i32 5219329] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 20678546, i32 -8375738, i32 -32671898, i32 8849123, i32 -5009758, i32 14574752, i32 31186971, i32 -3973730, i32 9014762, i32 -8579056], [10 x i32] [i32 -13644050, i32 -10350239, i32 -15962508, i32 5075808, i32 -1514661, i32 -11534600, i32 -33102500, i32 9160280, i32 8473550, i32 -3256838], [10 x i32] [i32 24900749, i32 14435722, i32 17209120, i32 -15292541, i32 -22592275, i32 9878983, i32 -7689309, i32 -16335821, i32 -24568481, i32 11788948] }, %struct.ge_precomp { [10 x i32] [i32 -3118155, i32 -11395194, i32 -13802089, i32 14797441, i32 9652448, i32 -6845904, i32 -20037437, i32 10410733, i32 -24568470, i32 -1458691], [10 x i32] [i32 -15659161, i32 16736706, i32 -22467150, i32 10215878, i32 -9097177, i32 7563911, i32 11871841, i32 -12505194, i32 -18513325, i32 8464118], [10 x i32] [i32 -23400612, i32 8348507, i32 -14585951, i32 -861714, i32 -3950205, i32 -6373419, i32 14325289, i32 8628612, i32 33313881, i32 -8370517] }, %struct.ge_precomp { [10 x i32] [i32 -20186973, i32 -4967935, i32 22367356, i32 5271547, i32 -1097117, i32 -4788838, i32 -24805667, i32 -10236854, i32 -8940735, i32 -5818269], [10 x i32] [i32 -6948785, i32 -1795212, i32 -32625683, i32 -16021179, i32 32635414, i32 -7374245, i32 15989197, i32 -12838188, i32 28358192, i32 -4253904], [10 x i32] [i32 -23561781, i32 -2799059, i32 -32351682, i32 -1661963, i32 -9147719, i32 10429267, i32 -16637684, i32 4072016, i32 -5351664, i32 5596589] }, %struct.ge_precomp { [10 x i32] [i32 -28236598, i32 -3390048, i32 12312896, i32 6213178, i32 3117142, i32 16078565, i32 29266239, i32 2557221, i32 1768301, i32 15373193], [10 x i32] [i32 -7243358, i32 -3246960, i32 -4593467, i32 -7553353, i32 -127927, i32 -912245, i32 -1090902, i32 -4504991, i32 -24660491, i32 3442910], [10 x i32] [i32 -30210571, i32 5124043, i32 14181784, i32 8197961, i32 18964734, i32 -11939093, i32 22597931, i32 7176455, i32 -18585478, i32 13365930] }, %struct.ge_precomp { [10 x i32] [i32 -7877390, i32 -1499958, i32 8324673, i32 4690079, i32 6261860, i32 890446, i32 24538107, i32 -8570186, i32 -9689599, i32 -3031667], [10 x i32] [i32 25008904, i32 -10771599, i32 -4305031, i32 -9638010, i32 16265036, i32 15721635, i32 683793, i32 -11823784, i32 15723479, i32 -15163481], [10 x i32] [i32 -9660625, i32 12374379, i32 -27006999, i32 -7026148, i32 -7724114, i32 -12314514, i32 11879682, i32 5400171, i32 519526, i32 -1235876] }, %struct.ge_precomp { [10 x i32] [i32 22258397, i32 -16332233, i32 -7869817, i32 14613016, i32 -22520255, i32 -2950923, i32 -20353881, i32 7315967, i32 16648397, i32 7605640], [10 x i32] [i32 -8081308, i32 -8464597, i32 -8223311, i32 9719710, i32 19259459, i32 -15348212, i32 23994942, i32 -5281555, i32 -9468848, i32 4763278], [10 x i32] [i32 -21699244, i32 9220969, i32 -15730624, i32 1084137, i32 -25476107, i32 -2852390, i32 31088447, i32 -7764523, i32 -11356529, i32 728112] }, %struct.ge_precomp { [10 x i32] [i32 26047220, i32 -11751471, i32 -6900323, i32 -16521798, i32 24092068, i32 9158119, i32 -4273545, i32 -12555558, i32 -29365436, i32 -5498272], [10 x i32] [i32 17510331, i32 -322857, i32 5854289, i32 8403524, i32 17133918, i32 -3112612, i32 -28111007, i32 12327945, i32 10750447, i32 10014012], [10 x i32] [i32 -10312768, i32 3936952, i32 9156313, i32 -8897683, i32 16498692, i32 -994647, i32 -27481051, i32 -666732, i32 3424691, i32 7540221] }, %struct.ge_precomp { [10 x i32] [i32 30322361, i32 -6964110, i32 11361005, i32 -4143317, i32 7433304, i32 4989748, i32 -7071422, i32 -16317219, i32 -9244265, i32 15258046], [10 x i32] [i32 13054562, i32 -2779497, i32 19155474, i32 469045, i32 -12482797, i32 4566042, i32 5631406, i32 2711395, i32 1062915, i32 -5136345], [10 x i32] [i32 -19240248, i32 -11254599, i32 -29509029, i32 -7499965, i32 -5835763, i32 13005411, i32 -6066489, i32 12194497, i32 32960380, i32 1459310] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 19852034, i32 7027924, i32 23669353, i32 10020366, i32 8586503, i32 -6657907, i32 394197, i32 -6101885, i32 18638003, i32 -11174937], [10 x i32] [i32 31395534, i32 15098109, i32 26581030, i32 8030562, i32 -16527914, i32 -5007134, i32 9012486, i32 -7584354, i32 -6643087, i32 -5442636], [10 x i32] [i32 -9192165, i32 -2347377, i32 -1997099, i32 4529534, i32 25766844, i32 607986, i32 -13222, i32 9677543, i32 -32294889, i32 -6456008] }, %struct.ge_precomp { [10 x i32] [i32 -2444496, i32 -149937, i32 29348902, i32 8186665, i32 1873760, i32 12489863, i32 -30934579, i32 -7839692, i32 -7852844, i32 -8138429], [10 x i32] [i32 -15236356, i32 -15433509, i32 7766470, i32 746860, i32 26346930, i32 -10221762, i32 -27333451, i32 10754588, i32 -9431476, i32 5203576], [10 x i32] [i32 31834314, i32 14135496, i32 -770007, i32 5159118, i32 20917671, i32 -16768096, i32 -7467973, i32 -7337524, i32 31809243, i32 7347066] }, %struct.ge_precomp { [10 x i32] [i32 -9606723, i32 -11874240, i32 20414459, i32 13033986, i32 13716524, i32 -11691881, i32 19797970, i32 -12211255, i32 15192876, i32 -2087490], [10 x i32] [i32 -12663563, i32 -2181719, i32 1168162, i32 -3804809, i32 26747877, i32 -14138091, i32 10609330, i32 12694420, i32 33473243, i32 -13382104], [10 x i32] [i32 33184999, i32 11180355, i32 15832085, i32 -11385430, i32 -1633671, i32 225884, i32 15089336, i32 -11023903, i32 -6135662, i32 14480053] }, %struct.ge_precomp { [10 x i32] [i32 31308717, i32 -5619998, i32 31030840, i32 -1897099, i32 15674547, i32 -6582883, i32 5496208, i32 13685227, i32 27595050, i32 8737275], [10 x i32] [i32 -20318852, i32 -15150239, i32 10933843, i32 -16178022, i32 8335352, i32 -7546022, i32 -31008351, i32 -12610604, i32 26498114, i32 66511], [10 x i32] [i32 22644454, i32 -8761729, i32 -16671776, i32 4884562, i32 -3105614, i32 -13559366, i32 30540766, i32 -4286747, i32 -13327787, i32 -7515095] }, %struct.ge_precomp { [10 x i32] [i32 -28017847, i32 9834845, i32 18617207, i32 -2681312, i32 -3401956, i32 -13307506, i32 8205540, i32 13585437, i32 -17127465, i32 15115439], [10 x i32] [i32 23711543, i32 -672915, i32 31206561, i32 -8362711, i32 6164647, i32 -9709987, i32 -33535882, i32 -1426096, i32 8236921, i32 16492939], [10 x i32] [i32 -23910559, i32 -13515526, i32 -26299483, i32 -4503841, i32 25005590, i32 -7687270, i32 19574902, i32 10071562, i32 6708380, i32 -6222424] }, %struct.ge_precomp { [10 x i32] [i32 2101391, i32 -4930054, i32 19702731, i32 2367575, i32 -15427167, i32 1047675, i32 5301017, i32 9328700, i32 29955601, i32 -11678310], [10 x i32] [i32 3096359, i32 9271816, i32 -21620864, i32 -15521844, i32 -14847996, i32 -7592937, i32 -25892142, i32 -12635595, i32 -9917575, i32 6216608], [10 x i32] [i32 -32615849, i32 338663, i32 -25195611, i32 2510422, i32 -29213566, i32 -13820213, i32 24822830, i32 -6146567, i32 -26767480, i32 7525079] }, %struct.ge_precomp { [10 x i32] [i32 -23066649, i32 -13985623, i32 16133487, i32 -7896178, i32 -3389565, i32 778788, i32 -910336, i32 -2782495, i32 -19386633, i32 11994101], [10 x i32] [i32 21691500, i32 -13624626, i32 -641331, i32 -14367021, i32 3285881, i32 -3483596, i32 -25064666, i32 9718258, i32 -7477437, i32 13381418], [10 x i32] [i32 18445390, i32 -4202236, i32 14979846, i32 11622458, i32 -1727110, i32 -3582980, i32 23111648, i32 -6375247, i32 28535282, i32 15779576] }, %struct.ge_precomp { [10 x i32] [i32 30098053, i32 3089662, i32 -9234387, i32 16662135, i32 -21306940, i32 11308411, i32 -14068454, i32 12021730, i32 9955285, i32 -16303356], [10 x i32] [i32 9734894, i32 -14576830, i32 -7473633, i32 -9138735, i32 2060392, i32 11313496, i32 -18426029, i32 9924399, i32 20194861, i32 13380996], [10 x i32] [i32 -26378102, i32 -7965207, i32 -22167821, i32 15789297, i32 -18055342, i32 -6168792, i32 -1984914, i32 15707771, i32 26342023, i32 10146099] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -26016874, i32 -219943, i32 21339191, i32 -41388, i32 19745256, i32 -2878700, i32 -29637280, i32 2227040, i32 21612326, i32 -545728], [10 x i32] [i32 -13077387, i32 1184228, i32 23562814, i32 -5970442, i32 -20351244, i32 -6348714, i32 25764461, i32 12243797, i32 -20856566, i32 11649658], [10 x i32] [i32 -10031494, i32 11262626, i32 27384172, i32 2271902, i32 26947504, i32 -15997771, i32 39944, i32 6114064, i32 33514190, i32 2333242] }, %struct.ge_precomp { [10 x i32] [i32 -21433588, i32 -12421821, i32 8119782, i32 7219913, i32 -21830522, i32 -9016134, i32 -6679750, i32 -12670638, i32 24350578, i32 -13450001], [10 x i32] [i32 -4116307, i32 -11271533, i32 -23886186, i32 4843615, i32 -30088339, i32 690623, i32 -31536088, i32 -10406836, i32 8317860, i32 12352766], [10 x i32] [i32 18200138, i32 -14475911, i32 -33087759, i32 -2696619, i32 -23702521, i32 -9102511, i32 -23552096, i32 -2287550, i32 20712163, i32 6719373] }, %struct.ge_precomp { [10 x i32] [i32 26656208, i32 6075253, i32 -7858556, i32 1886072, i32 -28344043, i32 4262326, i32 11117530, i32 -3763210, i32 26224235, i32 -3297458], [10 x i32] [i32 -17168938, i32 -14854097, i32 -3395676, i32 -16369877, i32 -19954045, i32 14050420, i32 21728352, i32 9493610, i32 18620611, i32 -16428628], [10 x i32] [i32 -13323321, i32 13325349, i32 11432106, i32 5964811, i32 18609221, i32 6062965, i32 -5269471, i32 -9725556, i32 -30701573, i32 -16479657] }, %struct.ge_precomp { [10 x i32] [i32 -23860538, i32 -11233159, i32 26961357, i32 1640861, i32 -32413112, i32 -16737940, i32 12248509, i32 -5240639, i32 13735342, i32 1934062], [10 x i32] [i32 25089769, i32 6742589, i32 17081145, i32 -13406266, i32 21909293, i32 -16067981, i32 -15136294, i32 -3765346, i32 -21277997, i32 5473616], [10 x i32] [i32 31883677, i32 -7961101, i32 1083432, i32 -11572403, i32 22828471, i32 13290673, i32 -7125085, i32 12469656, i32 29111212, i32 -5451014] }, %struct.ge_precomp { [10 x i32] [i32 24244947, i32 -15050407, i32 -26262976, i32 2791540, i32 -14997599, i32 16666678, i32 24367466, i32 6388839, i32 -10295587, i32 452383], [10 x i32] [i32 -25640782, i32 -3417841, i32 5217916, i32 16224624, i32 19987036, i32 -4082269, i32 -24236251, i32 -5915248, i32 15766062, i32 8407814], [10 x i32] [i32 -20406999, i32 13990231, i32 15495425, i32 16395525, i32 5377168, i32 15166495, i32 -8917023, i32 -4388953, i32 -8067909, i32 2276718] }, %struct.ge_precomp { [10 x i32] [i32 30157918, i32 12924066, i32 -17712050, i32 9245753, i32 19895028, i32 3368142, i32 -23827587, i32 5096219, i32 22740376, i32 -7303417], [10 x i32] [i32 2041139, i32 -14256350, i32 7783687, i32 13876377, i32 -25946985, i32 -13352459, i32 24051124, i32 13742383, i32 -15637599, i32 13295222], [10 x i32] [i32 33338237, i32 -8505733, i32 12532113, i32 7977527, i32 9106186, i32 -1715251, i32 -17720195, i32 -4612972, i32 -4451357, i32 -14669444] }, %struct.ge_precomp { [10 x i32] [i32 -20045281, i32 5454097, i32 -14346548, i32 6447146, i32 28862071, i32 1883651, i32 -2469266, i32 -4141880, i32 7770569, i32 9620597], [10 x i32] [i32 23208068, i32 7979712, i32 33071466, i32 8149229, i32 1758231, i32 -10834995, i32 30945528, i32 -1694323, i32 -33502340, i32 -14767970], [10 x i32] [i32 1439958, i32 -16270480, i32 -1079989, i32 -793782, i32 4625402, i32 10647766, i32 -5043801, i32 1220118, i32 30494170, i32 -11440799] }, %struct.ge_precomp { [10 x i32] [i32 -5037580, i32 -13028295, i32 -2970559, i32 -3061767, i32 15640974, i32 -6701666, i32 -26739026, i32 926050, i32 -1684339, i32 -13333647], [10 x i32] [i32 13908495, i32 -3549272, i32 30919928, i32 -6273825, i32 -21521863, i32 7989039, i32 9021034, i32 9078865, i32 3353509, i32 4033511], [10 x i32] [i32 -29663431, i32 -15113610, i32 32259991, i32 -344482, i32 24295849, i32 -12912123, i32 23161163, i32 8839127, i32 27485041, i32 7356032] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 9661027, i32 705443, i32 11980065, i32 -5370154, i32 -1628543, i32 14661173, i32 -6346142, i32 2625015, i32 28431036, i32 -16771834], [10 x i32] [i32 -23839233, i32 -8311415, i32 -25945511, i32 7480958, i32 -17681669, i32 -8354183, i32 -22545972, i32 14150565, i32 15970762, i32 4099461], [10 x i32] [i32 29262576, i32 16756590, i32 26350592, i32 -8793563, i32 8529671, i32 -11208050, i32 13617293, i32 -9937143, i32 11465739, i32 8317062] }, %struct.ge_precomp { [10 x i32] [i32 -25493081, i32 -6962928, i32 32500200, i32 -9419051, i32 -23038724, i32 -2302222, i32 14898637, i32 3848455, i32 20969334, i32 -5157516], [10 x i32] [i32 -20384450, i32 -14347713, i32 -18336405, i32 13884722, i32 -33039454, i32 2842114, i32 -21610826, i32 -3649888, i32 11177095, i32 14989547], [10 x i32] [i32 -24496721, i32 -11716016, i32 16959896, i32 2278463, i32 12066309, i32 10137771, i32 13515641, i32 2581286, i32 -28487508, i32 9930240] }, %struct.ge_precomp { [10 x i32] [i32 -17751622, i32 -2097826, i32 16544300, i32 -13009300, i32 -15914807, i32 -14949081, i32 18345767, i32 -13403753, i32 16291481, i32 -5314038], [10 x i32] [i32 -33229194, i32 2553288, i32 32678213, i32 9875984, i32 8534129, i32 6889387, i32 -9676774, i32 6957617, i32 4368891, i32 9788741], [10 x i32] [i32 16660756, i32 7281060, i32 -10830758, i32 12911820, i32 20108584, i32 -8101676, i32 -21722536, i32 -8613148, i32 16250552, i32 -11111103] }, %struct.ge_precomp { [10 x i32] [i32 -19765507, i32 2390526, i32 -16551031, i32 14161980, i32 1905286, i32 6414907, i32 4689584, i32 10604807, i32 -30190403, i32 4782747], [10 x i32] [i32 -1354539, i32 14736941, i32 -7367442, i32 -13292886, i32 7710542, i32 -14155590, i32 -9981571, i32 4383045, i32 22546403, i32 437323], [10 x i32] [i32 31665577, i32 -12180464, i32 -16186830, i32 1491339, i32 -18368625, i32 3294682, i32 27343084, i32 2786261, i32 -30633590, i32 -14097016] }, %struct.ge_precomp { [10 x i32] [i32 -14467279, i32 -683715, i32 -33374107, i32 7448552, i32 19294360, i32 14334329, i32 -19690631, i32 2355319, i32 -19284671, i32 -6114373], [10 x i32] [i32 15121312, i32 -15796162, i32 6377020, i32 -6031361, i32 -10798111, i32 -12957845, i32 18952177, i32 15496498, i32 -29380133, i32 11754228], [10 x i32] [i32 -2637277, i32 -13483075, i32 8488727, i32 -14303896, i32 12728761, i32 -1622493, i32 7141596, i32 11724556, i32 22761615, i32 -10134141] }, %struct.ge_precomp { [10 x i32] [i32 16918416, i32 11729663, i32 -18083579, i32 3022987, i32 -31015732, i32 -13339659, i32 -28741185, i32 -12227393, i32 32851222, i32 11717399], [10 x i32] [i32 11166634, i32 7338049, i32 -6722523, i32 4531520, i32 -29468672, i32 -7302055, i32 31474879, i32 3483633, i32 -1193175, i32 -4030831], [10 x i32] [i32 -185635, i32 9921305, i32 31456609, i32 -13536438, i32 -12013818, i32 13348923, i32 33142652, i32 6546660, i32 -19985279, i32 -3948376] }, %struct.ge_precomp { [10 x i32] [i32 -32460596, i32 11266712, i32 -11197107, i32 -7899103, i32 31703694, i32 3855903, i32 -8537131, i32 -12833048, i32 -30772034, i32 -15486313], [10 x i32] [i32 -18006477, i32 12709068, i32 3991746, i32 -6479188, i32 -21491523, i32 -10550425, i32 -31135347, i32 -16049879, i32 10928917, i32 3011958], [10 x i32] [i32 -6957757, i32 -15594337, i32 31696059, i32 334240, i32 29576716, i32 14796075, i32 -30831056, i32 -12805180, i32 18008031, i32 10258577] }, %struct.ge_precomp { [10 x i32] [i32 -22448644, i32 15655569, i32 7018479, i32 -4410003, i32 -30314266, i32 -1201591, i32 -1853465, i32 1367120, i32 25127874, i32 6671743], [10 x i32] [i32 29701166, i32 -14373934, i32 -10878120, i32 9279288, i32 -17568, i32 13127210, i32 21382910, i32 11042292, i32 25838796, i32 4642684], [10 x i32] [i32 -20430234, i32 14955537, i32 -24126347, i32 8124619, i32 -5369288, i32 -5990470, i32 30468147, i32 -13900640, i32 18423289, i32 4177476] }]], align 16
@d = internal constant [10 x i32] [i32 -10913610, i32 13857413, i32 -15372611, i32 6949391, i32 114729, i32 -8787816, i32 -6275908, i32 -3247719, i32 -18696448, i32 -12055116], align 16
@sqrtm1 = internal constant [10 x i32] [i32 -32595792, i32 -7943725, i32 9377950, i32 3500415, i32 12389472, i32 -272473, i32 -25146209, i32 -2005654, i32 326686, i32 11406482], align 16
@fe_isnonzero.zero = internal constant [32 x i8] zeroinitializer, align 16
@Bi = internal constant [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 25967493, i32 -14356035, i32 29566456, i32 3660896, i32 -12694345, i32 4014787, i32 27544626, i32 -11754271, i32 -6079156, i32 2047605], [10 x i32] [i32 -12545711, i32 934262, i32 -2722910, i32 3049990, i32 -727428, i32 9406986, i32 12720692, i32 5043384, i32 19500929, i32 -15469378], [10 x i32] [i32 -8738181, i32 4489570, i32 9688441, i32 -14785194, i32 10184609, i32 -12363380, i32 29287919, i32 11864899, i32 -24514362, i32 -4438546] }, %struct.ge_precomp { [10 x i32] [i32 15636291, i32 -9688557, i32 24204773, i32 -7912398, i32 616977, i32 -16685262, i32 27787600, i32 -14772189, i32 28944400, i32 -1550024], [10 x i32] [i32 16568933, i32 4717097, i32 -11556148, i32 -1102322, i32 15682896, i32 -11807043, i32 16354577, i32 -11775962, i32 7689662, i32 11199574], [10 x i32] [i32 30464156, i32 -5976125, i32 -11779434, i32 -15670865, i32 23220365, i32 15915852, i32 7512774, i32 10017326, i32 -17749093, i32 -9920357] }, %struct.ge_precomp { [10 x i32] [i32 10861363, i32 11473154, i32 27284546, i32 1981175, i32 -30064349, i32 12577861, i32 32867885, i32 14515107, i32 -15438304, i32 10819380], [10 x i32] [i32 4708026, i32 6336745, i32 20377586, i32 9066809, i32 -11272109, i32 6594696, i32 -25653668, i32 12483688, i32 -12668491, i32 5581306], [10 x i32] [i32 19563160, i32 16186464, i32 -29386857, i32 4097519, i32 10237984, i32 -4348115, i32 28542350, i32 13850243, i32 -23678021, i32 -15815942] }, %struct.ge_precomp { [10 x i32] [i32 5153746, i32 9909285, i32 1723747, i32 -2777874, i32 30523605, i32 5516873, i32 19480852, i32 5230134, i32 -23952439, i32 -15175766], [10 x i32] [i32 -30269007, i32 -3463509, i32 7665486, i32 10083793, i32 28475525, i32 1649722, i32 20654025, i32 16520125, i32 30598449, i32 7715701], [10 x i32] [i32 28881845, i32 14381568, i32 9657904, i32 3680757, i32 -20181635, i32 7843316, i32 -31400660, i32 1370708, i32 29794553, i32 -1409300] }, %struct.ge_precomp { [10 x i32] [i32 -22518993, i32 -6692182, i32 14201702, i32 -8745502, i32 -23510406, i32 8844726, i32 18474211, i32 -1361450, i32 -13062696, i32 13821877], [10 x i32] [i32 -6455177, i32 -7839871, i32 3374702, i32 -4740862, i32 -27098617, i32 -10571707, i32 31655028, i32 -7212327, i32 18853322, i32 -14220951], [10 x i32] [i32 4566830, i32 -12963868, i32 -28974889, i32 -12240689, i32 -7602672, i32 -2830569, i32 -8514358, i32 -10431137, i32 2207753, i32 -3209784] }, %struct.ge_precomp { [10 x i32] [i32 -25154831, i32 -4185821, i32 29681144, i32 7868801, i32 -6854661, i32 -9423865, i32 -12437364, i32 -663000, i32 -31111463, i32 -16132436], [10 x i32] [i32 25576264, i32 -2703214, i32 7349804, i32 -11814844, i32 16472782, i32 9300885, i32 3844789, i32 15725684, i32 171356, i32 6466918], [10 x i32] [i32 23103977, i32 13316479, i32 9739013, i32 -16149481, i32 817875, i32 -15038942, i32 8965339, i32 -14088058, i32 -30714912, i32 16193877] }, %struct.ge_precomp { [10 x i32] [i32 -33521811, i32 3180713, i32 -2394130, i32 14003687, i32 -16903474, i32 -16270840, i32 17238398, i32 4729455, i32 -18074513, i32 9256800], [10 x i32] [i32 -25182317, i32 -4174131, i32 32336398, i32 5036987, i32 -21236817, i32 11360617, i32 22616405, i32 9761698, i32 -19827198, i32 630305], [10 x i32] [i32 -13720693, i32 2639453, i32 -24237460, i32 -7406481, i32 9494427, i32 -5774029, i32 -6554551, i32 -15960994, i32 -2449256, i32 -14291300] }, %struct.ge_precomp { [10 x i32] [i32 -3151181, i32 -5046075, i32 9282714, i32 6866145, i32 -31907062, i32 -863023, i32 -18940575, i32 15033784, i32 25105118, i32 -7894876], [10 x i32] [i32 -24326370, i32 15950226, i32 -31801215, i32 -14592823, i32 -11662737, i32 -5090925, i32 1573892, i32 -2625887, i32 2198790, i32 -15804619], [10 x i32] [i32 -3099351, i32 10324967, i32 -2241613, i32 7453183, i32 -5446979, i32 -2735503, i32 -13812022, i32 -16236442, i32 -32461234, i32 -12290683] }], align 16
@d2 = internal constant [10 x i32] [i32 -21827239, i32 -5839606, i32 -30745221, i32 13898782, i32 229458, i32 15978800, i32 -12551817, i32 -6495438, i32 29715968, i32 9444199], align 16

; Function Attrs: noinline nounwind uwtable
define i32 @ossl_ed25519_sign(i8* noundef %out_sig, i8* noundef %message, i64 noundef %message_len, i8* noundef %public_key, i8* noundef %private_key, %struct.ossl_lib_ctx_st* noundef %libctx, i8* noundef %propq) local_unnamed_addr #0 {
entry:
  %az = alloca [64 x i8], align 16
  %nonce = alloca [64 x i8], align 16
  %R = alloca %struct.ge_p3, align 4
  %hram = alloca [64 x i8], align 16
  %sz = alloca i32, align 4
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #12
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %nonce, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1) #12
  %2 = bitcast %struct.ge_p3* %R to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2) #12
  %3 = getelementptr inbounds [64 x i8], [64 x i8]* %hram, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #12
  %call = tail call %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef %libctx, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* noundef %propq) #13
  %call1 = tail call %struct.evp_md_ctx_st* @EVP_MD_CTX_new() #13
  %4 = bitcast i32* %sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  %cmp = icmp eq %struct.evp_md_st* %call, null
  %cmp2 = icmp eq %struct.evp_md_ctx_st* %call1, null
  %or.cond = select i1 %cmp, i1 true, i1 %cmp2
  br i1 %or.cond, label %err, label %if.end

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @EVP_DigestInit_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, %struct.evp_md_st* noundef nonnull %call, %struct.engine_st* noundef null) #13
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %err, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %if.end
  %call5 = tail call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef %private_key, i64 noundef 32) #13
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %err, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %call8 = call i32 @EVP_DigestFinal_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef nonnull %0, i32* noundef nonnull %sz) #13
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %err, label %if.end11

if.end11:                                         ; preds = %lor.lhs.false7
  %5 = load i8, i8* %0, align 16, !tbaa !4
  %6 = and i8 %5, -8
  store i8 %6, i8* %0, align 16, !tbaa !4
  %arrayidx13 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 31
  %7 = load i8, i8* %arrayidx13, align 1, !tbaa !4
  %8 = and i8 %7, 63
  %9 = or i8 %8, 64
  store i8 %9, i8* %arrayidx13, align 1, !tbaa !4
  %call20 = call i32 @EVP_DigestInit_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, %struct.evp_md_st* noundef nonnull %call, %struct.engine_st* noundef null) #13
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %err, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %if.end11
  %add.ptr = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 32
  %call24 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef nonnull %add.ptr, i64 noundef 32) #13
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %err, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %call27 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef %message, i64 noundef %message_len) #13
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %err, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false26
  %call31 = call i32 @EVP_DigestFinal_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef nonnull %1, i32* noundef nonnull %sz) #13
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %err, label %if.end34

if.end34:                                         ; preds = %lor.lhs.false29
  call fastcc void @x25519_sc_reduce(i8* noundef nonnull %1) #14
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* noundef nonnull %R, i8* noundef nonnull %1) #14
  call fastcc void @ge_p3_tobytes(i8* noundef %out_sig, %struct.ge_p3* noundef nonnull %R) #14
  %call37 = call i32 @EVP_DigestInit_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, %struct.evp_md_st* noundef nonnull %call, %struct.engine_st* noundef null) #13
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %err, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %if.end34
  %call40 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef %out_sig, i64 noundef 32) #13
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %err, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %lor.lhs.false39
  %call43 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef %public_key, i64 noundef 32) #13
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %err, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %lor.lhs.false42
  %call46 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef %message, i64 noundef %message_len) #13
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %err, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %lor.lhs.false45
  %call50 = call i32 @EVP_DigestFinal_ex(%struct.evp_md_ctx_st* noundef nonnull %call1, i8* noundef nonnull %3, i32* noundef nonnull %sz) #13
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %err, label %if.end53

if.end53:                                         ; preds = %lor.lhs.false48
  call fastcc void @x25519_sc_reduce(i8* noundef nonnull %3) #14
  %add.ptr55 = getelementptr inbounds i8, i8* %out_sig, i64 32
  call fastcc void @sc_muladd(i8* noundef nonnull %add.ptr55, i8* noundef nonnull %3, i8* noundef nonnull %0, i8* noundef nonnull %1) #14
  br label %err

err:                                              ; preds = %if.end34, %lor.lhs.false39, %lor.lhs.false42, %lor.lhs.false45, %lor.lhs.false48, %if.end11, %lor.lhs.false22, %lor.lhs.false26, %lor.lhs.false29, %if.end, %lor.lhs.false4, %lor.lhs.false7, %entry, %if.end53
  %res.0 = phi i32 [ 0, %entry ], [ 1, %if.end53 ], [ 0, %lor.lhs.false48 ], [ 0, %lor.lhs.false45 ], [ 0, %lor.lhs.false42 ], [ 0, %lor.lhs.false39 ], [ 0, %if.end34 ], [ 0, %lor.lhs.false29 ], [ 0, %lor.lhs.false26 ], [ 0, %lor.lhs.false22 ], [ 0, %if.end11 ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false4 ], [ 0, %if.end ]
  call void @OPENSSL_cleanse(i8* noundef nonnull %1, i64 noundef 64) #13
  call void @OPENSSL_cleanse(i8* noundef nonnull %0, i64 noundef 64) #13
  call void @EVP_MD_free(%struct.evp_md_st* noundef %call) #13
  call void @EVP_MD_CTX_free(%struct.evp_md_ctx_st* noundef %call1) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #12
  ret i32 %res.0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef, i8* noundef, i8* noundef) local_unnamed_addr #2

declare %struct.evp_md_ctx_st* @EVP_MD_CTX_new() local_unnamed_addr #2

declare i32 @EVP_DigestInit_ex(%struct.evp_md_ctx_st* noundef, %struct.evp_md_st* noundef, %struct.engine_st* noundef) local_unnamed_addr #2

declare i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef, i8* noundef, i64 noundef) local_unnamed_addr #2

declare i32 @EVP_DigestFinal_ex(%struct.evp_md_ctx_st* noundef, i8* noundef, i32* noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @x25519_sc_reduce(i8* noundef %s) unnamed_addr #3 {
entry:
  %call = tail call fastcc i64 @load_3(i8* noundef %s) #14
  %and = and i64 %call, 2097151
  %add.ptr = getelementptr inbounds i8, i8* %s, i64 2
  %call1 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr) #14
  %shr = lshr i64 %call1, 5
  %and2 = and i64 %shr, 2097151
  %add.ptr3 = getelementptr inbounds i8, i8* %s, i64 5
  %call4 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr3) #14
  %shr5 = lshr i64 %call4, 2
  %and6 = and i64 %shr5, 2097151
  %add.ptr7 = getelementptr inbounds i8, i8* %s, i64 7
  %call8 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr7) #14
  %shr9 = lshr i64 %call8, 7
  %and10 = and i64 %shr9, 2097151
  %add.ptr11 = getelementptr inbounds i8, i8* %s, i64 10
  %call12 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr11) #14
  %shr13 = lshr i64 %call12, 4
  %and14 = and i64 %shr13, 2097151
  %add.ptr15 = getelementptr inbounds i8, i8* %s, i64 13
  %call16 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr15) #14
  %shr17 = lshr i64 %call16, 1
  %and18 = and i64 %shr17, 2097151
  %add.ptr19 = getelementptr inbounds i8, i8* %s, i64 15
  %call20 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr19) #14
  %shr21 = lshr i64 %call20, 6
  %and22 = and i64 %shr21, 2097151
  %add.ptr23 = getelementptr inbounds i8, i8* %s, i64 18
  %call24 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr23) #14
  %shr25 = lshr i64 %call24, 3
  %and26 = and i64 %shr25, 2097151
  %add.ptr27 = getelementptr inbounds i8, i8* %s, i64 21
  %call28 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr27) #14
  %and29 = and i64 %call28, 2097151
  %add.ptr30 = getelementptr inbounds i8, i8* %s, i64 23
  %call31 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr30) #14
  %shr32 = lshr i64 %call31, 5
  %and33 = and i64 %shr32, 2097151
  %add.ptr34 = getelementptr inbounds i8, i8* %s, i64 26
  %call35 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr34) #14
  %shr36 = lshr i64 %call35, 2
  %and37 = and i64 %shr36, 2097151
  %add.ptr38 = getelementptr inbounds i8, i8* %s, i64 28
  %call39 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr38) #14
  %shr40 = lshr i64 %call39, 7
  %and41 = and i64 %shr40, 2097151
  %add.ptr42 = getelementptr inbounds i8, i8* %s, i64 31
  %call43 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr42) #14
  %shr44 = lshr i64 %call43, 4
  %and45 = and i64 %shr44, 2097151
  %add.ptr46 = getelementptr inbounds i8, i8* %s, i64 34
  %call47 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr46) #14
  %shr48 = lshr i64 %call47, 1
  %and49 = and i64 %shr48, 2097151
  %add.ptr50 = getelementptr inbounds i8, i8* %s, i64 36
  %call51 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr50) #14
  %shr52 = lshr i64 %call51, 6
  %and53 = and i64 %shr52, 2097151
  %add.ptr54 = getelementptr inbounds i8, i8* %s, i64 39
  %call55 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr54) #14
  %shr56 = lshr i64 %call55, 3
  %and57 = and i64 %shr56, 2097151
  %add.ptr58 = getelementptr inbounds i8, i8* %s, i64 42
  %call59 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr58) #14
  %and60 = and i64 %call59, 2097151
  %add.ptr61 = getelementptr inbounds i8, i8* %s, i64 44
  %call62 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr61) #14
  %shr63 = lshr i64 %call62, 5
  %and64 = and i64 %shr63, 2097151
  %add.ptr65 = getelementptr inbounds i8, i8* %s, i64 47
  %call66 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr65) #14
  %shr67 = lshr i64 %call66, 2
  %and68 = and i64 %shr67, 2097151
  %add.ptr69 = getelementptr inbounds i8, i8* %s, i64 49
  %call70 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr69) #14
  %shr71 = lshr i64 %call70, 7
  %and72 = and i64 %shr71, 2097151
  %add.ptr73 = getelementptr inbounds i8, i8* %s, i64 52
  %call74 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr73) #14
  %shr75 = lshr i64 %call74, 4
  %and76 = and i64 %shr75, 2097151
  %add.ptr77 = getelementptr inbounds i8, i8* %s, i64 55
  %call78 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr77) #14
  %shr79 = lshr i64 %call78, 1
  %and80 = and i64 %shr79, 2097151
  %add.ptr81 = getelementptr inbounds i8, i8* %s, i64 57
  %call82 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr81) #14
  %shr83 = lshr i64 %call82, 6
  %and84 = and i64 %shr83, 2097151
  %add.ptr85 = getelementptr inbounds i8, i8* %s, i64 60
  %call86 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr85) #14
  %shr87 = lshr i64 %call86, 3
  %mul = mul nsw i64 %shr87, 666643
  %mul88 = mul nsw i64 %shr87, 470296
  %mul90 = mul nsw i64 %shr87, 654183
  %mul92.neg = mul i64 %shr87, -997805
  %mul93 = mul nsw i64 %shr87, 136657
  %add94 = add nuw nsw i64 %mul93, %and57
  %mul95.neg = mul i64 %shr87, -683901
  %sub96 = add i64 %mul95.neg, %and60
  %mul97 = mul nuw nsw i64 %and84, 666643
  %mul99 = mul nuw nsw i64 %and84, 470296
  %mul101 = mul nuw nsw i64 %and84, 654183
  %mul103.neg = mul nsw i64 %and84, -997805
  %mul105 = mul nuw nsw i64 %and84, 136657
  %mul107.neg = mul nsw i64 %and84, -683901
  %sub108 = add i64 %add94, %mul107.neg
  %mul109 = mul nuw nsw i64 %and80, 666643
  %mul111 = mul nuw nsw i64 %and80, 470296
  %mul113 = mul nuw nsw i64 %and80, 654183
  %mul115.neg = mul nsw i64 %and80, -997805
  %mul117 = mul nuw nsw i64 %and80, 136657
  %mul119.neg = mul nsw i64 %and80, -683901
  %sub = add nsw i64 %mul119.neg, %and53
  %add106 = add i64 %sub, %mul92.neg
  %sub120 = add i64 %add106, %mul105
  %mul121 = mul nuw nsw i64 %and76, 666643
  %mul123 = mul nuw nsw i64 %and76, 470296
  %mul125 = mul nuw nsw i64 %and76, 654183
  %mul127.neg = mul nsw i64 %and76, -997805
  %mul129 = mul nuw nsw i64 %and76, 136657
  %mul131.neg = mul nsw i64 %and76, -683901
  %mul133 = mul nuw nsw i64 %and72, 666643
  %mul135 = mul nuw nsw i64 %and72, 470296
  %mul137 = mul nuw nsw i64 %and72, 654183
  %mul139.neg = mul nsw i64 %and72, -997805
  %mul141 = mul nuw nsw i64 %and72, 136657
  %mul143.neg = mul nsw i64 %and72, -683901
  %add89 = add nsw i64 %mul143.neg, %and45
  %add102 = add nsw i64 %add89, %mul129
  %sub116 = add nsw i64 %add102, %mul115.neg
  %add130 = add i64 %sub116, %mul88
  %sub144 = add i64 %add130, %mul101
  %mul145 = mul nuw nsw i64 %and68, 666643
  %add146 = add nuw nsw i64 %mul145, %and22
  %mul147 = mul nuw nsw i64 %and68, 470296
  %mul149 = mul nuw nsw i64 %and68, 654183
  %add122 = add nuw nsw i64 %mul149, %and29
  %add136 = add nuw nsw i64 %add122, %mul135
  %add150 = add nuw nsw i64 %add136, %mul121
  %mul151.neg = mul nsw i64 %and68, -997805
  %mul153 = mul nuw nsw i64 %and68, 136657
  %add98 = add nuw nsw i64 %mul153, %and37
  %add112 = add nsw i64 %add98, %mul139.neg
  %add126 = add nsw i64 %add112, %mul125
  %sub140 = add nsw i64 %add126, %mul111
  %add154 = add nsw i64 %sub140, %mul97
  %mul155.neg = mul nsw i64 %and68, -683901
  %add157 = add nuw nsw i64 %add146, 1048576
  %0 = lshr i64 %add157, 21
  %add134 = add nuw nsw i64 %mul147, %and26
  %add148 = add nuw nsw i64 %add134, %mul133
  %add159 = add nuw nsw i64 %add148, %0
  %mul160 = and i64 %add157, 8796090925056
  %sub161 = sub nsw i64 %add146, %mul160
  %add162 = add nuw nsw i64 %add150, 1048576
  %shr163 = lshr i64 %add162, 21
  %add110 = add nsw i64 %mul151.neg, %and33
  %add124 = add nsw i64 %add110, %mul137
  %add138 = add nsw i64 %add124, %mul123
  %sub152 = add nsw i64 %add138, %mul109
  %add164 = add nsw i64 %sub152, %shr163
  %mul165 = and i64 %add162, -2097152
  %add167 = add nsw i64 %add154, 1048576
  %shr168 = ashr i64 %add167, 21
  %add = add nsw i64 %mul155.neg, %and41
  %add100 = add nsw i64 %add, %mul141
  %add114 = add nsw i64 %add100, %mul127.neg
  %sub128 = add nsw i64 %add114, %mul113
  %add142 = add i64 %sub128, %mul
  %sub156 = add i64 %add142, %mul99
  %add169 = add i64 %sub156, %shr168
  %mul170 = and i64 %add167, -2097152
  %add172 = add nsw i64 %sub144, 1048576
  %shr173 = ashr i64 %add172, 21
  %add91 = add nsw i64 %mul131.neg, %and49
  %sub104 = add nsw i64 %add91, %mul117
  %add118 = add i64 %sub104, %mul90
  %sub132 = add i64 %add118, %mul103.neg
  %add174 = add i64 %sub132, %shr173
  %mul175 = and i64 %add172, -2097152
  %sub176 = sub nsw i64 %sub144, %mul175
  %add177 = add nsw i64 %sub120, 1048576
  %shr178 = ashr i64 %add177, 21
  %add179 = add nsw i64 %sub108, %shr178
  %mul180 = and i64 %add177, -2097152
  %sub181 = sub nsw i64 %sub120, %mul180
  %add182 = add nsw i64 %sub96, 1048576
  %shr183 = ashr i64 %add182, 21
  %add184 = add nsw i64 %shr183, %and64
  %mul185 = and i64 %add182, -2097152
  %sub186 = sub nsw i64 %sub96, %mul185
  %add187 = add nuw nsw i64 %add159, 1048576
  %shr188 = lshr i64 %add187, 21
  %mul190 = and i64 %add187, -2097152
  %sub191 = sub nsw i64 %add159, %mul190
  %add192 = add nsw i64 %add164, 1048576
  %shr193 = ashr i64 %add192, 21
  %mul195 = and i64 %add192, -2097152
  %add197 = add nsw i64 %add169, 1048576
  %shr198 = ashr i64 %add197, 21
  %add199 = add nsw i64 %shr198, %sub176
  %mul200 = and i64 %add197, -2097152
  %sub201 = sub nsw i64 %add169, %mul200
  %add202 = add nsw i64 %add174, 1048576
  %shr203 = ashr i64 %add202, 21
  %add204 = add nsw i64 %shr203, %sub181
  %mul205 = and i64 %add202, -2097152
  %sub206 = sub nsw i64 %add174, %mul205
  %add207 = add nsw i64 %add179, 1048576
  %shr208 = ashr i64 %add207, 21
  %add209 = add nsw i64 %shr208, %sub186
  %mul210 = and i64 %add207, -2097152
  %sub211 = sub nsw i64 %add179, %mul210
  %mul212 = mul nsw i64 %add184, 666643
  %add213 = add nsw i64 %mul212, %and18
  %mul214 = mul nsw i64 %add184, 470296
  %add215 = add nsw i64 %sub161, %mul214
  %mul216 = mul nsw i64 %add184, 654183
  %add217 = add nsw i64 %sub191, %mul216
  %mul218.neg = mul nsw i64 %add184, -997805
  %mul220 = mul nsw i64 %add184, 136657
  %mul222.neg = mul nsw i64 %add184, -683901
  %sub171 = add nsw i64 %mul222.neg, %add154
  %add194 = add nsw i64 %sub171, %shr193
  %sub223 = sub i64 %add194, %mul170
  %mul224 = mul nsw i64 %add209, 666643
  %add225 = add nsw i64 %mul224, %and14
  %mul226 = mul nsw i64 %add209, 470296
  %add227 = add nsw i64 %add213, %mul226
  %mul228 = mul nsw i64 %add209, 654183
  %add229 = add nsw i64 %add215, %mul228
  %mul230.neg = mul i64 %add209, -997805
  %sub231 = add i64 %add217, %mul230.neg
  %mul232 = mul nsw i64 %add209, 136657
  %mul234.neg = mul i64 %add209, -683901
  %mul236 = mul nsw i64 %sub211, 666643
  %add237 = add nsw i64 %mul236, %and10
  %mul238 = mul nsw i64 %sub211, 470296
  %add239 = add nsw i64 %add225, %mul238
  %mul240 = mul nsw i64 %sub211, 654183
  %add241 = add nsw i64 %add227, %mul240
  %mul242.neg = mul i64 %sub211, -997805
  %sub243 = add i64 %add229, %mul242.neg
  %mul244 = mul nsw i64 %sub211, 136657
  %add245 = add nsw i64 %sub231, %mul244
  %mul246.neg = mul i64 %sub211, -683901
  %sub166 = add nuw nsw i64 %shr188, %add150
  %add189 = sub nsw i64 %sub166, %mul165
  %sub219 = add nsw i64 %add189, %mul218.neg
  %add233 = add i64 %sub219, %mul232
  %sub247 = add i64 %add233, %mul246.neg
  %mul248 = mul nsw i64 %add204, 666643
  %add249 = add nsw i64 %mul248, %and6
  %mul250 = mul nsw i64 %add204, 470296
  %add251 = add nsw i64 %add237, %mul250
  %mul252 = mul nsw i64 %add204, 654183
  %add253 = add nsw i64 %add239, %mul252
  %mul254.neg = mul i64 %add204, -997805
  %sub255 = add i64 %add241, %mul254.neg
  %mul256 = mul nsw i64 %add204, 136657
  %add257 = add nsw i64 %sub243, %mul256
  %mul258.neg = mul i64 %add204, -683901
  %sub259 = add i64 %add245, %mul258.neg
  %mul260 = mul nsw i64 %sub206, 666643
  %add261 = add nsw i64 %mul260, %and2
  %mul262 = mul nsw i64 %sub206, 470296
  %add263 = add nsw i64 %add249, %mul262
  %mul264 = mul nsw i64 %sub206, 654183
  %add265 = add nsw i64 %add251, %mul264
  %mul266.neg = mul i64 %sub206, -997805
  %sub267 = add i64 %add253, %mul266.neg
  %mul268 = mul nsw i64 %sub206, 136657
  %add269 = add nsw i64 %sub255, %mul268
  %mul270.neg = mul i64 %sub206, -683901
  %sub271 = add i64 %add257, %mul270.neg
  %mul272 = mul nsw i64 %add199, 666643
  %add273 = add nsw i64 %mul272, %and
  %mul274 = mul nsw i64 %add199, 470296
  %add275 = add nsw i64 %add261, %mul274
  %mul276 = mul nsw i64 %add199, 654183
  %add277 = add nsw i64 %add263, %mul276
  %mul278.neg = mul i64 %add199, -997805
  %sub279 = add i64 %add265, %mul278.neg
  %mul280 = mul nsw i64 %add199, 136657
  %add281 = add nsw i64 %sub267, %mul280
  %mul282.neg = mul i64 %add199, -683901
  %sub283 = add i64 %add269, %mul282.neg
  %add284 = add nsw i64 %add273, 1048576
  %shr285 = ashr i64 %add284, 21
  %add286 = add nsw i64 %add275, %shr285
  %mul287 = and i64 %add284, -2097152
  %sub288 = sub nsw i64 %add273, %mul287
  %add289 = add nsw i64 %add277, 1048576
  %shr290 = ashr i64 %add289, 21
  %add291 = add nsw i64 %sub279, %shr290
  %mul292 = and i64 %add289, -2097152
  %add294 = add nsw i64 %add281, 1048576
  %shr295 = ashr i64 %add294, 21
  %add296 = add nsw i64 %sub283, %shr295
  %mul297 = and i64 %add294, -2097152
  %add299 = add nsw i64 %sub271, 1048576
  %shr300 = ashr i64 %add299, 21
  %add301 = add nsw i64 %sub259, %shr300
  %mul302 = and i64 %add299, -2097152
  %sub303 = sub i64 %sub271, %mul302
  %add304 = add nsw i64 %sub247, 1048576
  %shr305 = ashr i64 %add304, 21
  %sub196 = add nsw i64 %mul220, %add164
  %add221 = sub i64 %sub196, %mul195
  %sub235 = add i64 %add221, %mul234.neg
  %add306 = add i64 %sub235, %shr305
  %mul307 = and i64 %add304, -2097152
  %sub308 = sub i64 %sub247, %mul307
  %add309 = add nsw i64 %sub223, 1048576
  %shr310 = ashr i64 %add309, 21
  %add311 = add nsw i64 %shr310, %sub201
  %mul312 = and i64 %add309, -2097152
  %sub313 = sub i64 %sub223, %mul312
  %add314 = add nsw i64 %add286, 1048576
  %shr315 = ashr i64 %add314, 21
  %mul317 = and i64 %add314, -2097152
  %add319 = add nsw i64 %add291, 1048576
  %shr320 = ashr i64 %add319, 21
  %mul322 = and i64 %add319, -2097152
  %add324 = add nsw i64 %add296, 1048576
  %shr325 = ashr i64 %add324, 21
  %add326 = add nsw i64 %sub303, %shr325
  %mul327 = and i64 %add324, -2097152
  %add329 = add nsw i64 %add301, 1048576
  %shr330 = ashr i64 %add329, 21
  %add331 = add nsw i64 %sub308, %shr330
  %mul332 = and i64 %add329, -2097152
  %sub333 = sub nsw i64 %add301, %mul332
  %add334 = add nsw i64 %add306, 1048576
  %shr335 = ashr i64 %add334, 21
  %add336 = add nsw i64 %sub313, %shr335
  %mul337 = and i64 %add334, -2097152
  %sub338 = sub nsw i64 %add306, %mul337
  %add339 = add nsw i64 %add311, 1048576
  %shr340 = ashr i64 %add339, 21
  %mul342 = and i64 %add339, -2097152
  %sub343 = sub nsw i64 %add311, %mul342
  %mul344 = mul nsw i64 %shr340, 666643
  %add345 = add nsw i64 %sub288, %mul344
  %mul346 = mul nsw i64 %shr340, 470296
  %mul348 = mul nsw i64 %shr340, 654183
  %mul350.neg = mul nsw i64 %shr340, -997805
  %mul352 = mul nsw i64 %shr340, 136657
  %mul354.neg = mul nsw i64 %shr340, -683901
  %shr356 = ashr i64 %add345, 21
  %sub318 = add i64 %mul346, %add286
  %add347 = sub i64 %sub318, %mul317
  %add357 = add i64 %add347, %shr356
  %sub359 = and i64 %add345, 2097151
  %shr360 = ashr i64 %add357, 21
  %sub293 = add i64 %mul348, %add277
  %add316 = sub i64 %sub293, %mul292
  %add349 = add i64 %add316, %shr315
  %add361 = add i64 %add349, %shr360
  %sub363 = and i64 %add357, 2097151
  %shr364 = ashr i64 %add361, 21
  %sub323 = add i64 %add291, %mul350.neg
  %sub351 = sub i64 %sub323, %mul322
  %add365 = add i64 %sub351, %shr364
  %sub367 = and i64 %add361, 2097151
  %shr368 = ashr i64 %add365, 21
  %sub298 = add i64 %mul352, %add281
  %add321 = sub i64 %sub298, %mul297
  %add353 = add i64 %add321, %shr320
  %add369 = add i64 %add353, %shr368
  %sub371 = and i64 %add365, 2097151
  %shr372 = ashr i64 %add369, 21
  %sub328 = add i64 %add296, %mul354.neg
  %sub355 = sub i64 %sub328, %mul327
  %add373 = add i64 %sub355, %shr372
  %sub375 = and i64 %add369, 2097151
  %shr376 = ashr i64 %add373, 21
  %add377 = add nsw i64 %add326, %shr376
  %sub379 = and i64 %add373, 2097151
  %shr380 = ashr i64 %add377, 21
  %add381 = add nsw i64 %shr380, %sub333
  %sub383 = and i64 %add377, 2097151
  %shr384 = ashr i64 %add381, 21
  %add385 = add nsw i64 %add331, %shr384
  %sub387 = and i64 %add381, 2097151
  %shr388 = ashr i64 %add385, 21
  %add389 = add nsw i64 %shr388, %sub338
  %sub391 = and i64 %add385, 2097151
  %shr392 = ashr i64 %add389, 21
  %add393 = add nsw i64 %add336, %shr392
  %sub395 = and i64 %add389, 2097151
  %shr396 = ashr i64 %add393, 21
  %add397 = add nsw i64 %shr396, %sub343
  %sub399 = and i64 %add393, 2097151
  %shr400 = ashr i64 %add397, 21
  %sub403 = and i64 %add397, 2097151
  %mul404 = mul nsw i64 %shr400, 666643
  %add405 = add nsw i64 %mul404, %sub359
  %mul406 = mul nsw i64 %shr400, 470296
  %add407 = add nsw i64 %mul406, %sub363
  %mul408 = mul nsw i64 %shr400, 654183
  %add409 = add nsw i64 %mul408, %sub367
  %mul410.neg = mul nsw i64 %shr400, -997805
  %sub411 = add nsw i64 %mul410.neg, %sub371
  %mul412 = mul nsw i64 %shr400, 136657
  %add413 = add nsw i64 %mul412, %sub375
  %mul414.neg = mul nsw i64 %shr400, -683901
  %sub415 = add nsw i64 %mul414.neg, %sub379
  %shr416 = ashr i64 %add405, 21
  %add417 = add nsw i64 %add407, %shr416
  %shr420 = ashr i64 %add417, 21
  %add421 = add nsw i64 %add409, %shr420
  %sub423 = and i64 %add417, 2097151
  %shr424 = ashr i64 %add421, 21
  %add425 = add nsw i64 %sub411, %shr424
  %sub427 = and i64 %add421, 2097151
  %shr428 = ashr i64 %add425, 21
  %add429 = add nsw i64 %add413, %shr428
  %sub431 = and i64 %add425, 2097151
  %shr432 = ashr i64 %add429, 21
  %add433 = add nsw i64 %sub415, %shr432
  %sub435 = and i64 %add429, 2097151
  %shr436 = ashr i64 %add433, 21
  %add437 = add nsw i64 %shr436, %sub383
  %sub439 = and i64 %add433, 2097151
  %shr440 = ashr i64 %add437, 21
  %add441 = add nsw i64 %shr440, %sub387
  %sub443 = and i64 %add437, 2097151
  %shr444 = ashr i64 %add441, 21
  %add445 = add nsw i64 %shr444, %sub391
  %shr448 = ashr i64 %add445, 21
  %add449 = add nsw i64 %shr448, %sub395
  %shr452 = ashr i64 %add449, 21
  %add453 = add nsw i64 %shr452, %sub399
  %sub455 = and i64 %add449, 2097151
  %shr456 = ashr i64 %add453, 21
  %add457 = add nsw i64 %shr456, %sub403
  %sub459 = and i64 %add453, 2097151
  %conv = trunc i64 %add405 to i8
  store i8 %conv, i8* %s, align 1, !tbaa !4
  %1 = lshr i64 %add405, 8
  %conv462 = trunc i64 %1 to i8
  %arrayidx463 = getelementptr inbounds i8, i8* %s, i64 1
  store i8 %conv462, i8* %arrayidx463, align 1, !tbaa !4
  %sub419 = lshr i64 %add405, 16
  %2 = and i64 %sub419, 31
  %shl = shl nuw nsw i64 %sub423, 5
  %or = or i64 %shl, %2
  %conv465 = trunc i64 %or to i8
  store i8 %conv465, i8* %add.ptr, align 1, !tbaa !4
  %3 = lshr i64 %add417, 3
  %conv468 = trunc i64 %3 to i8
  %arrayidx469 = getelementptr inbounds i8, i8* %s, i64 3
  store i8 %conv468, i8* %arrayidx469, align 1, !tbaa !4
  %4 = lshr i64 %add417, 11
  %conv471 = trunc i64 %4 to i8
  %arrayidx472 = getelementptr inbounds i8, i8* %s, i64 4
  store i8 %conv471, i8* %arrayidx472, align 1, !tbaa !4
  %5 = lshr i64 %sub423, 19
  %shl474 = shl nuw nsw i64 %sub427, 2
  %or475 = or i64 %shl474, %5
  %conv476 = trunc i64 %or475 to i8
  store i8 %conv476, i8* %add.ptr3, align 1, !tbaa !4
  %6 = lshr i64 %add421, 6
  %conv479 = trunc i64 %6 to i8
  %arrayidx480 = getelementptr inbounds i8, i8* %s, i64 6
  store i8 %conv479, i8* %arrayidx480, align 1, !tbaa !4
  %7 = lshr i64 %sub427, 14
  %shl482 = shl nuw nsw i64 %sub431, 7
  %or483 = or i64 %shl482, %7
  %conv484 = trunc i64 %or483 to i8
  store i8 %conv484, i8* %add.ptr7, align 1, !tbaa !4
  %8 = lshr i64 %add425, 1
  %conv487 = trunc i64 %8 to i8
  %arrayidx488 = getelementptr inbounds i8, i8* %s, i64 8
  store i8 %conv487, i8* %arrayidx488, align 1, !tbaa !4
  %9 = lshr i64 %add425, 9
  %conv490 = trunc i64 %9 to i8
  %arrayidx491 = getelementptr inbounds i8, i8* %s, i64 9
  store i8 %conv490, i8* %arrayidx491, align 1, !tbaa !4
  %10 = lshr i64 %sub431, 17
  %shl493 = shl nuw nsw i64 %sub435, 4
  %or494 = or i64 %shl493, %10
  %conv495 = trunc i64 %or494 to i8
  store i8 %conv495, i8* %add.ptr11, align 1, !tbaa !4
  %11 = lshr i64 %add429, 4
  %conv498 = trunc i64 %11 to i8
  %arrayidx499 = getelementptr inbounds i8, i8* %s, i64 11
  store i8 %conv498, i8* %arrayidx499, align 1, !tbaa !4
  %12 = lshr i64 %add429, 12
  %conv501 = trunc i64 %12 to i8
  %arrayidx502 = getelementptr inbounds i8, i8* %s, i64 12
  store i8 %conv501, i8* %arrayidx502, align 1, !tbaa !4
  %13 = lshr i64 %sub435, 20
  %shl504 = shl nuw nsw i64 %sub439, 1
  %or505 = or i64 %shl504, %13
  %conv506 = trunc i64 %or505 to i8
  store i8 %conv506, i8* %add.ptr15, align 1, !tbaa !4
  %14 = lshr i64 %add433, 7
  %conv509 = trunc i64 %14 to i8
  %arrayidx510 = getelementptr inbounds i8, i8* %s, i64 14
  store i8 %conv509, i8* %arrayidx510, align 1, !tbaa !4
  %15 = lshr i64 %sub439, 15
  %shl512 = shl nuw nsw i64 %sub443, 6
  %or513 = or i64 %shl512, %15
  %conv514 = trunc i64 %or513 to i8
  store i8 %conv514, i8* %add.ptr19, align 1, !tbaa !4
  %16 = lshr i64 %add437, 2
  %conv517 = trunc i64 %16 to i8
  %arrayidx518 = getelementptr inbounds i8, i8* %s, i64 16
  store i8 %conv517, i8* %arrayidx518, align 1, !tbaa !4
  %17 = lshr i64 %add437, 10
  %conv520 = trunc i64 %17 to i8
  %arrayidx521 = getelementptr inbounds i8, i8* %s, i64 17
  store i8 %conv520, i8* %arrayidx521, align 1, !tbaa !4
  %18 = lshr i64 %sub443, 18
  %sub447 = shl nsw i64 %add441, 3
  %or524 = or i64 %sub447, %18
  %conv525 = trunc i64 %or524 to i8
  store i8 %conv525, i8* %add.ptr23, align 1, !tbaa !4
  %19 = lshr i64 %add441, 5
  %conv528 = trunc i64 %19 to i8
  %arrayidx529 = getelementptr inbounds i8, i8* %s, i64 19
  store i8 %conv528, i8* %arrayidx529, align 1, !tbaa !4
  %20 = lshr i64 %add441, 13
  %conv531 = trunc i64 %20 to i8
  %arrayidx532 = getelementptr inbounds i8, i8* %s, i64 20
  store i8 %conv531, i8* %arrayidx532, align 1, !tbaa !4
  %conv534 = trunc i64 %add445 to i8
  store i8 %conv534, i8* %add.ptr27, align 1, !tbaa !4
  %21 = lshr i64 %add445, 8
  %conv537 = trunc i64 %21 to i8
  %arrayidx538 = getelementptr inbounds i8, i8* %s, i64 22
  store i8 %conv537, i8* %arrayidx538, align 1, !tbaa !4
  %sub451 = lshr i64 %add445, 16
  %22 = and i64 %sub451, 31
  %shl540 = shl nuw nsw i64 %sub455, 5
  %or541 = or i64 %shl540, %22
  %conv542 = trunc i64 %or541 to i8
  store i8 %conv542, i8* %add.ptr30, align 1, !tbaa !4
  %23 = lshr i64 %add449, 3
  %conv545 = trunc i64 %23 to i8
  %arrayidx546 = getelementptr inbounds i8, i8* %s, i64 24
  store i8 %conv545, i8* %arrayidx546, align 1, !tbaa !4
  %24 = lshr i64 %add449, 11
  %conv548 = trunc i64 %24 to i8
  %arrayidx549 = getelementptr inbounds i8, i8* %s, i64 25
  store i8 %conv548, i8* %arrayidx549, align 1, !tbaa !4
  %25 = lshr i64 %sub455, 19
  %shl551 = shl nuw nsw i64 %sub459, 2
  %or552 = or i64 %shl551, %25
  %conv553 = trunc i64 %or552 to i8
  store i8 %conv553, i8* %add.ptr34, align 1, !tbaa !4
  %26 = lshr i64 %add453, 6
  %conv556 = trunc i64 %26 to i8
  %arrayidx557 = getelementptr inbounds i8, i8* %s, i64 27
  store i8 %conv556, i8* %arrayidx557, align 1, !tbaa !4
  %27 = lshr i64 %sub459, 14
  %shl559 = shl nsw i64 %add457, 7
  %or560 = or i64 %shl559, %27
  %conv561 = trunc i64 %or560 to i8
  store i8 %conv561, i8* %add.ptr38, align 1, !tbaa !4
  %28 = lshr i64 %add457, 1
  %conv564 = trunc i64 %28 to i8
  %arrayidx565 = getelementptr inbounds i8, i8* %s, i64 29
  store i8 %conv564, i8* %arrayidx565, align 1, !tbaa !4
  %29 = lshr i64 %add457, 9
  %conv567 = trunc i64 %29 to i8
  %arrayidx568 = getelementptr inbounds i8, i8* %s, i64 30
  store i8 %conv567, i8* %arrayidx568, align 1, !tbaa !4
  %shr569 = ashr i64 %add457, 17
  %conv570 = trunc i64 %shr569 to i8
  store i8 %conv570, i8* %add.ptr42, align 1, !tbaa !4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_scalarmult_base(%struct.ge_p3* noundef %h, i8* nocapture noundef readonly %a) unnamed_addr #0 {
entry:
  %e = alloca [64 x i8], align 16
  %r = alloca %struct.ge_p1p1, align 4
  %s = alloca %struct.ge_p2, align 4
  %t = alloca %struct.ge_precomp, align 4
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #12
  %1 = bitcast %struct.ge_p1p1* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #12
  %2 = bitcast %struct.ge_p2* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %2) #12
  %3 = bitcast %struct.ge_precomp* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #12
  %4 = bitcast i8* %a to <8 x i8>*
  %wide.load = load <8 x i8>, <8 x i8>* %4, align 1, !tbaa !4
  %5 = and <8 x i8> %wide.load, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %6 = lshr <8 x i8> %wide.load, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %7 = bitcast [64 x i8]* %e to <16 x i8>*
  %interleaved.vec = shufflevector <8 x i8> %5, <8 x i8> %6, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i8> %interleaved.vec, <16 x i8>* %7, align 16, !tbaa !4
  %8 = getelementptr inbounds i8, i8* %a, i64 8
  %9 = bitcast i8* %8 to <8 x i8>*
  %wide.load.1 = load <8 x i8>, <8 x i8>* %9, align 1, !tbaa !4
  %10 = and <8 x i8> %wide.load.1, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %11 = lshr <8 x i8> %wide.load.1, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 16
  %13 = bitcast i8* %12 to <16 x i8>*
  %interleaved.vec.1 = shufflevector <8 x i8> %10, <8 x i8> %11, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i8> %interleaved.vec.1, <16 x i8>* %13, align 16, !tbaa !4
  %14 = getelementptr inbounds i8, i8* %a, i64 16
  %15 = bitcast i8* %14 to <8 x i8>*
  %wide.load.2 = load <8 x i8>, <8 x i8>* %15, align 1, !tbaa !4
  %16 = and <8 x i8> %wide.load.2, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %17 = lshr <8 x i8> %wide.load.2, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 32
  %19 = bitcast i8* %18 to <16 x i8>*
  %interleaved.vec.2 = shufflevector <8 x i8> %16, <8 x i8> %17, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i8> %interleaved.vec.2, <16 x i8>* %19, align 16, !tbaa !4
  %20 = getelementptr inbounds i8, i8* %a, i64 24
  %21 = bitcast i8* %20 to <8 x i8>*
  %wide.load.3 = load <8 x i8>, <8 x i8>* %21, align 1, !tbaa !4
  %22 = and <8 x i8> %wide.load.3, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %23 = lshr <8 x i8> %wide.load.3, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %24 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 48
  %25 = bitcast i8* %24 to <16 x i8>*
  %interleaved.vec.3 = shufflevector <8 x i8> %22, <8 x i8> %23, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i8> %interleaved.vec.3, <16 x i8>* %25, align 16, !tbaa !4
  br label %for.body17

for.body17:                                       ; preds = %for.body17.1, %entry
  %indvars.iv103 = phi i64 [ 0, %entry ], [ %indvars.iv.next104.1, %for.body17.1 ]
  %carry.096 = phi i8 [ 0, %entry ], [ %29, %for.body17.1 ]
  %arrayidx20 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv103
  %26 = load i8, i8* %arrayidx20, align 2, !tbaa !4
  %conv23 = add i8 %26, %carry.096
  %add27 = add i8 %conv23, 8
  %27 = ashr i8 %add27, 4
  %shl.neg = mul i8 %27, -16
  %sub = add i8 %shl.neg, %conv23
  store i8 %sub, i8* %arrayidx20, align 2, !tbaa !4
  %indvars.iv.next104 = or i64 %indvars.iv103, 1
  %exitcond105.not = icmp eq i64 %indvars.iv.next104, 63
  br i1 %exitcond105.not, label %for.end39, label %for.body17.1, !llvm.loop !7

for.body17.1:                                     ; preds = %for.body17
  %arrayidx20.1 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv.next104
  %28 = load i8, i8* %arrayidx20.1, align 1, !tbaa !4
  %conv23.1 = add i8 %28, %27
  %add27.1 = add i8 %conv23.1, 8
  %29 = ashr i8 %add27.1, 4
  %shl.neg.1 = mul i8 %29, -16
  %sub.1 = add i8 %shl.neg.1, %conv23.1
  store i8 %sub.1, i8* %arrayidx20.1, align 1, !tbaa !4
  %indvars.iv.next104.1 = add nuw nsw i64 %indvars.iv103, 2
  br label %for.body17

for.end39:                                        ; preds = %for.body17
  %arrayidx41 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 63
  %30 = load i8, i8* %arrayidx41, align 1, !tbaa !4
  %conv44 = add i8 %30, %27
  store i8 %conv44, i8* %arrayidx41, align 1, !tbaa !4
  tail call fastcc void @ge_p3_0(%struct.ge_p3* noundef %h) #14
  br label %for.body48

for.body48:                                       ; preds = %for.end39, %for.body48
  %indvars.iv106 = phi i64 [ 1, %for.end39 ], [ %indvars.iv.next107, %for.body48 ]
  %31 = lshr i64 %indvars.iv106, 1
  %arrayidx50 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv106
  %32 = load i8, i8* %arrayidx50, align 1, !tbaa !4
  %33 = trunc i64 %31 to i32
  call fastcc void @table_select(%struct.ge_precomp* noundef nonnull %t, i32 noundef %33, i8 noundef signext %32) #14
  call fastcc void @ge_madd(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p3* noundef %h, %struct.ge_precomp* noundef nonnull %t) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef %h, %struct.ge_p1p1* noundef nonnull %r) #14
  %indvars.iv.next107 = add nuw nsw i64 %indvars.iv106, 2
  %cmp46 = icmp ult i64 %indvars.iv106, 62
  br i1 %cmp46, label %for.body48, label %for.end53, !llvm.loop !9

for.end53:                                        ; preds = %for.body48
  call fastcc void @ge_p3_dbl(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p3* noundef %h) #14
  call fastcc void @ge_p1p1_to_p2(%struct.ge_p2* noundef nonnull %s, %struct.ge_p1p1* noundef nonnull %r) #14
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p2* noundef nonnull %s) #14
  call fastcc void @ge_p1p1_to_p2(%struct.ge_p2* noundef nonnull %s, %struct.ge_p1p1* noundef nonnull %r) #14
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p2* noundef nonnull %s) #14
  call fastcc void @ge_p1p1_to_p2(%struct.ge_p2* noundef nonnull %s, %struct.ge_p1p1* noundef nonnull %r) #14
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p2* noundef nonnull %s) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef %h, %struct.ge_p1p1* noundef nonnull %r) #14
  br label %for.body57

for.body57:                                       ; preds = %for.end53, %for.body57
  %indvars.iv110 = phi i64 [ 0, %for.end53 ], [ %indvars.iv.next111, %for.body57 ]
  %34 = lshr exact i64 %indvars.iv110, 1
  %arrayidx60 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv110
  %35 = load i8, i8* %arrayidx60, align 2, !tbaa !4
  %36 = trunc i64 %34 to i32
  call fastcc void @table_select(%struct.ge_precomp* noundef nonnull %t, i32 noundef %36, i8 noundef signext %35) #14
  call fastcc void @ge_madd(%struct.ge_p1p1* noundef nonnull %r, %struct.ge_p3* noundef %h, %struct.ge_precomp* noundef nonnull %t) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef %h, %struct.ge_p1p1* noundef nonnull %r) #14
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 2
  %cmp55 = icmp ult i64 %indvars.iv110, 62
  br i1 %cmp55, label %for.body57, label %for.end63, !llvm.loop !10

for.end63:                                        ; preds = %for.body57
  call void @OPENSSL_cleanse(i8* noundef nonnull %0, i64 noundef 64) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #12
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_p3_tobytes(i8* noundef %s, %struct.ge_p3* nocapture noundef readonly %h) unnamed_addr #4 {
entry:
  %recip = alloca [10 x i32], align 16
  %x = alloca [10 x i32], align 16
  %y = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %recip to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [10 x i32]* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %y to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %recip, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 2, i64 0
  call fastcc void @fe_invert(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds [10 x i32], [10 x i32]* %x, i64 0, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay2, i32* noundef %arraydecay3, i32* noundef nonnull %arraydecay) #14
  %arraydecay5 = getelementptr inbounds [10 x i32], [10 x i32]* %y, i64 0, i64 0
  %arraydecay6 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay6, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_tobytes(i8* noundef %s, i32* noundef nonnull %arraydecay5) #14
  %call = call fastcc i32 @fe_isnegative(i32* noundef nonnull %arraydecay2) #14
  %arrayidx = getelementptr inbounds i8, i8* %s, i64 31
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !4
  %call.tr = trunc i32 %call to i8
  %4 = shl i8 %call.tr, 7
  %conv10 = xor i8 %4, %3
  store i8 %conv10, i8* %arrayidx, align 1, !tbaa !4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @sc_muladd(i8* noundef writeonly %s, i8* nocapture noundef readonly %a, i8* nocapture noundef readonly %b, i8* nocapture noundef readonly %c) unnamed_addr #3 {
entry:
  %call = tail call fastcc i64 @load_3(i8* noundef %a) #14
  %and = and i64 %call, 2097151
  %add.ptr = getelementptr inbounds i8, i8* %a, i64 2
  %call1 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr) #14
  %shr = lshr i64 %call1, 5
  %and2 = and i64 %shr, 2097151
  %add.ptr3 = getelementptr inbounds i8, i8* %a, i64 5
  %call4 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr3) #14
  %shr5 = lshr i64 %call4, 2
  %and6 = and i64 %shr5, 2097151
  %add.ptr7 = getelementptr inbounds i8, i8* %a, i64 7
  %call8 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr7) #14
  %shr9 = lshr i64 %call8, 7
  %and10 = and i64 %shr9, 2097151
  %add.ptr11 = getelementptr inbounds i8, i8* %a, i64 10
  %call12 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr11) #14
  %shr13 = lshr i64 %call12, 4
  %and14 = and i64 %shr13, 2097151
  %add.ptr15 = getelementptr inbounds i8, i8* %a, i64 13
  %call16 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr15) #14
  %shr17 = lshr i64 %call16, 1
  %and18 = and i64 %shr17, 2097151
  %add.ptr19 = getelementptr inbounds i8, i8* %a, i64 15
  %call20 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr19) #14
  %shr21 = lshr i64 %call20, 6
  %and22 = and i64 %shr21, 2097151
  %add.ptr23 = getelementptr inbounds i8, i8* %a, i64 18
  %call24 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr23) #14
  %shr25 = lshr i64 %call24, 3
  %and26 = and i64 %shr25, 2097151
  %add.ptr27 = getelementptr inbounds i8, i8* %a, i64 21
  %call28 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr27) #14
  %and29 = and i64 %call28, 2097151
  %add.ptr30 = getelementptr inbounds i8, i8* %a, i64 23
  %call31 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr30) #14
  %shr32 = lshr i64 %call31, 5
  %and33 = and i64 %shr32, 2097151
  %add.ptr34 = getelementptr inbounds i8, i8* %a, i64 26
  %call35 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr34) #14
  %shr36 = lshr i64 %call35, 2
  %and37 = and i64 %shr36, 2097151
  %add.ptr38 = getelementptr inbounds i8, i8* %a, i64 28
  %call39 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr38) #14
  %shr40 = lshr i64 %call39, 7
  %call41 = tail call fastcc i64 @load_3(i8* noundef %b) #14
  %and42 = and i64 %call41, 2097151
  %add.ptr43 = getelementptr inbounds i8, i8* %b, i64 2
  %call44 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr43) #14
  %shr45 = lshr i64 %call44, 5
  %and46 = and i64 %shr45, 2097151
  %add.ptr47 = getelementptr inbounds i8, i8* %b, i64 5
  %call48 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr47) #14
  %shr49 = lshr i64 %call48, 2
  %and50 = and i64 %shr49, 2097151
  %add.ptr51 = getelementptr inbounds i8, i8* %b, i64 7
  %call52 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr51) #14
  %shr53 = lshr i64 %call52, 7
  %and54 = and i64 %shr53, 2097151
  %add.ptr55 = getelementptr inbounds i8, i8* %b, i64 10
  %call56 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr55) #14
  %shr57 = lshr i64 %call56, 4
  %and58 = and i64 %shr57, 2097151
  %add.ptr59 = getelementptr inbounds i8, i8* %b, i64 13
  %call60 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr59) #14
  %shr61 = lshr i64 %call60, 1
  %and62 = and i64 %shr61, 2097151
  %add.ptr63 = getelementptr inbounds i8, i8* %b, i64 15
  %call64 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr63) #14
  %shr65 = lshr i64 %call64, 6
  %and66 = and i64 %shr65, 2097151
  %add.ptr67 = getelementptr inbounds i8, i8* %b, i64 18
  %call68 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr67) #14
  %shr69 = lshr i64 %call68, 3
  %and70 = and i64 %shr69, 2097151
  %add.ptr71 = getelementptr inbounds i8, i8* %b, i64 21
  %call72 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr71) #14
  %and73 = and i64 %call72, 2097151
  %add.ptr74 = getelementptr inbounds i8, i8* %b, i64 23
  %call75 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr74) #14
  %shr76 = lshr i64 %call75, 5
  %and77 = and i64 %shr76, 2097151
  %add.ptr78 = getelementptr inbounds i8, i8* %b, i64 26
  %call79 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr78) #14
  %shr80 = lshr i64 %call79, 2
  %and81 = and i64 %shr80, 2097151
  %add.ptr82 = getelementptr inbounds i8, i8* %b, i64 28
  %call83 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr82) #14
  %shr84 = lshr i64 %call83, 7
  %call85 = tail call fastcc i64 @load_3(i8* noundef %c) #14
  %and86 = and i64 %call85, 2097151
  %add.ptr87 = getelementptr inbounds i8, i8* %c, i64 2
  %call88 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr87) #14
  %shr89 = lshr i64 %call88, 5
  %and90 = and i64 %shr89, 2097151
  %add.ptr91 = getelementptr inbounds i8, i8* %c, i64 5
  %call92 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr91) #14
  %shr93 = lshr i64 %call92, 2
  %and94 = and i64 %shr93, 2097151
  %add.ptr95 = getelementptr inbounds i8, i8* %c, i64 7
  %call96 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr95) #14
  %shr97 = lshr i64 %call96, 7
  %and98 = and i64 %shr97, 2097151
  %add.ptr99 = getelementptr inbounds i8, i8* %c, i64 10
  %call100 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr99) #14
  %shr101 = lshr i64 %call100, 4
  %and102 = and i64 %shr101, 2097151
  %add.ptr103 = getelementptr inbounds i8, i8* %c, i64 13
  %call104 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr103) #14
  %shr105 = lshr i64 %call104, 1
  %and106 = and i64 %shr105, 2097151
  %add.ptr107 = getelementptr inbounds i8, i8* %c, i64 15
  %call108 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr107) #14
  %shr109 = lshr i64 %call108, 6
  %and110 = and i64 %shr109, 2097151
  %add.ptr111 = getelementptr inbounds i8, i8* %c, i64 18
  %call112 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr111) #14
  %shr113 = lshr i64 %call112, 3
  %and114 = and i64 %shr113, 2097151
  %add.ptr115 = getelementptr inbounds i8, i8* %c, i64 21
  %call116 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr115) #14
  %and117 = and i64 %call116, 2097151
  %add.ptr118 = getelementptr inbounds i8, i8* %c, i64 23
  %call119 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr118) #14
  %shr120 = lshr i64 %call119, 5
  %and121 = and i64 %shr120, 2097151
  %add.ptr122 = getelementptr inbounds i8, i8* %c, i64 26
  %call123 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr122) #14
  %shr124 = lshr i64 %call123, 2
  %and125 = and i64 %shr124, 2097151
  %add.ptr126 = getelementptr inbounds i8, i8* %c, i64 28
  %call127 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr126) #14
  %shr128 = lshr i64 %call127, 7
  %mul = mul nuw nsw i64 %and42, %and
  %add = add nuw nsw i64 %and86, %mul
  %mul129 = mul nuw nsw i64 %and46, %and
  %mul131 = mul nuw nsw i64 %and42, %and2
  %mul133 = mul nuw nsw i64 %and50, %and
  %mul135 = mul nuw nsw i64 %and46, %and2
  %mul137 = mul nuw nsw i64 %and42, %and6
  %add134 = add nuw nsw i64 %mul135, %mul137
  %add136 = add nuw nsw i64 %add134, %mul133
  %add138 = add nuw nsw i64 %add136, %and94
  %mul139 = mul nuw nsw i64 %and54, %and
  %mul141 = mul nuw nsw i64 %and50, %and2
  %mul143 = mul nuw nsw i64 %and46, %and6
  %mul145 = mul nuw nsw i64 %and42, %and10
  %mul147 = mul nuw nsw i64 %and58, %and
  %mul149 = mul nuw nsw i64 %and54, %and2
  %mul151 = mul nuw nsw i64 %and50, %and6
  %mul153 = mul nuw nsw i64 %and46, %and10
  %mul155 = mul nuw nsw i64 %and42, %and14
  %add148 = add nuw nsw i64 %mul153, %mul155
  %add150 = add nuw nsw i64 %add148, %mul151
  %add152 = add nuw nsw i64 %add150, %mul149
  %add154 = add nuw nsw i64 %add152, %mul147
  %add156 = add nuw nsw i64 %add154, %and102
  %mul157 = mul nuw nsw i64 %and62, %and
  %mul159 = mul nuw nsw i64 %and58, %and2
  %mul161 = mul nuw nsw i64 %and54, %and6
  %mul163 = mul nuw nsw i64 %and50, %and10
  %mul165 = mul nuw nsw i64 %and46, %and14
  %mul167 = mul nuw nsw i64 %and42, %and18
  %mul169 = mul nuw nsw i64 %and66, %and
  %mul171 = mul nuw nsw i64 %and62, %and2
  %mul173 = mul nuw nsw i64 %and58, %and6
  %mul175 = mul nuw nsw i64 %and54, %and10
  %mul177 = mul nuw nsw i64 %and50, %and14
  %mul179 = mul nuw nsw i64 %and46, %and18
  %mul181 = mul nuw nsw i64 %and42, %and22
  %add170 = add nuw nsw i64 %mul179, %mul181
  %add172 = add nuw nsw i64 %add170, %mul177
  %add174 = add nuw nsw i64 %add172, %mul175
  %add176 = add nuw nsw i64 %add174, %mul173
  %add178 = add nuw nsw i64 %add176, %mul171
  %add180 = add nuw nsw i64 %add178, %mul169
  %add182 = add nuw nsw i64 %add180, %and110
  %mul183 = mul nuw nsw i64 %and70, %and
  %mul185 = mul nuw nsw i64 %and66, %and2
  %mul187 = mul nuw nsw i64 %and62, %and6
  %mul189 = mul nuw nsw i64 %and58, %and10
  %mul191 = mul nuw nsw i64 %and54, %and14
  %mul193 = mul nuw nsw i64 %and50, %and18
  %mul195 = mul nuw nsw i64 %and46, %and22
  %mul197 = mul nuw nsw i64 %and42, %and26
  %mul199 = mul nuw nsw i64 %and73, %and
  %mul201 = mul nuw nsw i64 %and70, %and2
  %mul203 = mul nuw nsw i64 %and66, %and6
  %mul205 = mul nuw nsw i64 %and62, %and10
  %mul207 = mul nuw nsw i64 %and58, %and14
  %mul209 = mul nuw nsw i64 %and54, %and18
  %mul211 = mul nuw nsw i64 %and50, %and22
  %mul213 = mul nuw nsw i64 %and46, %and26
  %mul215 = mul nuw nsw i64 %and42, %and29
  %add200 = add nuw nsw i64 %mul213, %mul215
  %add202 = add nuw nsw i64 %add200, %mul211
  %add204 = add nuw nsw i64 %add202, %mul209
  %add206 = add nuw nsw i64 %add204, %mul207
  %add208 = add nuw nsw i64 %add206, %mul205
  %add210 = add nuw nsw i64 %add208, %mul203
  %add212 = add nuw nsw i64 %add210, %mul199
  %add214 = add nuw nsw i64 %add212, %mul201
  %add216 = add nuw nsw i64 %add214, %and117
  %mul217 = mul nuw nsw i64 %and77, %and
  %mul219 = mul nuw nsw i64 %and73, %and2
  %mul221 = mul nuw nsw i64 %and70, %and6
  %mul223 = mul nuw nsw i64 %and66, %and10
  %mul225 = mul nuw nsw i64 %and62, %and14
  %mul227 = mul nuw nsw i64 %and58, %and18
  %mul229 = mul nuw nsw i64 %and54, %and22
  %mul231 = mul nuw nsw i64 %and50, %and26
  %mul233 = mul nuw nsw i64 %and46, %and29
  %mul235 = mul nuw nsw i64 %and42, %and33
  %mul237 = mul nuw nsw i64 %and81, %and
  %mul239 = mul nuw nsw i64 %and77, %and2
  %mul241 = mul nuw nsw i64 %and73, %and6
  %mul243 = mul nuw nsw i64 %and70, %and10
  %mul245 = mul nuw nsw i64 %and66, %and14
  %mul247 = mul nuw nsw i64 %and62, %and18
  %mul249 = mul nuw nsw i64 %and58, %and22
  %mul251 = mul nuw nsw i64 %and54, %and26
  %mul253 = mul nuw nsw i64 %and50, %and29
  %mul255 = mul nuw nsw i64 %and46, %and33
  %mul257 = mul nuw nsw i64 %and42, %and37
  %add238 = add nuw nsw i64 %mul255, %mul257
  %add240 = add nuw nsw i64 %add238, %mul253
  %add242 = add nuw nsw i64 %add240, %mul251
  %add244 = add nuw nsw i64 %add242, %mul249
  %add246 = add nuw nsw i64 %add244, %mul247
  %add248 = add nuw nsw i64 %add246, %mul245
  %add250 = add nuw nsw i64 %add248, %mul241
  %add252 = add nuw nsw i64 %add250, %mul243
  %add254 = add nuw nsw i64 %add252, %mul239
  %add256 = add nuw nsw i64 %add254, %mul237
  %add258 = add nuw nsw i64 %add256, %and125
  %mul259 = mul nsw i64 %shr84, %and
  %mul261 = mul nuw nsw i64 %and81, %and2
  %mul263 = mul nuw nsw i64 %and77, %and6
  %mul265 = mul nuw nsw i64 %and73, %and10
  %mul267 = mul nuw nsw i64 %and70, %and14
  %mul269 = mul nuw nsw i64 %and66, %and18
  %mul271 = mul nuw nsw i64 %and62, %and22
  %mul273 = mul nuw nsw i64 %and58, %and26
  %mul275 = mul nuw nsw i64 %and54, %and29
  %mul277 = mul nuw nsw i64 %and50, %and33
  %mul279 = mul nuw nsw i64 %and46, %and37
  %mul281 = mul nsw i64 %and42, %shr40
  %mul283 = mul nsw i64 %shr84, %and2
  %mul284 = mul nuw nsw i64 %and81, %and6
  %mul286 = mul nuw nsw i64 %and77, %and10
  %mul288 = mul nuw nsw i64 %and73, %and14
  %mul290 = mul nuw nsw i64 %and70, %and18
  %mul292 = mul nuw nsw i64 %and66, %and22
  %mul294 = mul nuw nsw i64 %and62, %and26
  %mul296 = mul nuw nsw i64 %and58, %and29
  %mul298 = mul nuw nsw i64 %and54, %and33
  %mul300 = mul nuw nsw i64 %and50, %and37
  %mul302 = mul nsw i64 %and46, %shr40
  %add285 = add nuw i64 %mul300, %mul302
  %add287 = add i64 %add285, %mul298
  %add289 = add i64 %add287, %mul296
  %add291 = add i64 %add289, %mul294
  %add293 = add i64 %add291, %mul292
  %add295 = add i64 %add293, %mul288
  %add297 = add i64 %add295, %mul290
  %add299 = add i64 %add297, %mul286
  %add301 = add i64 %add299, %mul284
  %add303 = add i64 %add301, %mul283
  %mul304 = mul nsw i64 %shr84, %and6
  %mul305 = mul nuw nsw i64 %and81, %and10
  %mul307 = mul nuw nsw i64 %and77, %and14
  %mul309 = mul nuw nsw i64 %and73, %and18
  %mul311 = mul nuw nsw i64 %and70, %and22
  %mul313 = mul nuw nsw i64 %and66, %and26
  %mul315 = mul nuw nsw i64 %and62, %and29
  %mul317 = mul nuw nsw i64 %and58, %and33
  %mul319 = mul nuw nsw i64 %and54, %and37
  %mul321 = mul nsw i64 %and50, %shr40
  %mul323 = mul nsw i64 %shr84, %and10
  %mul324 = mul nuw nsw i64 %and81, %and14
  %mul326 = mul nuw nsw i64 %and77, %and18
  %mul328 = mul nuw nsw i64 %and73, %and22
  %mul330 = mul nuw nsw i64 %and70, %and26
  %mul332 = mul nuw nsw i64 %and66, %and29
  %mul334 = mul nuw nsw i64 %and62, %and33
  %mul336 = mul nuw nsw i64 %and58, %and37
  %mul338 = mul nsw i64 %and54, %shr40
  %add325 = add nuw i64 %mul336, %mul338
  %add327 = add i64 %add325, %mul334
  %add329 = add i64 %add327, %mul332
  %add331 = add i64 %add329, %mul328
  %add333 = add i64 %add331, %mul330
  %add335 = add i64 %add333, %mul326
  %add337 = add i64 %add335, %mul324
  %add339 = add i64 %add337, %mul323
  %mul340 = mul nsw i64 %shr84, %and14
  %mul341 = mul nuw nsw i64 %and81, %and18
  %mul343 = mul nuw nsw i64 %and77, %and22
  %mul345 = mul nuw nsw i64 %and73, %and26
  %mul347 = mul nuw nsw i64 %and70, %and29
  %mul349 = mul nuw nsw i64 %and66, %and33
  %mul351 = mul nuw nsw i64 %and62, %and37
  %mul353 = mul nsw i64 %and58, %shr40
  %mul355 = mul nsw i64 %shr84, %and18
  %mul356 = mul nuw nsw i64 %and81, %and22
  %mul358 = mul nuw nsw i64 %and77, %and26
  %mul360 = mul nuw nsw i64 %and73, %and29
  %mul362 = mul nuw nsw i64 %and70, %and33
  %mul364 = mul nuw nsw i64 %and66, %and37
  %mul366 = mul nsw i64 %and62, %shr40
  %add357 = add nuw i64 %mul364, %mul366
  %add359 = add i64 %add357, %mul360
  %add361 = add i64 %add359, %mul362
  %add363 = add i64 %add361, %mul358
  %add365 = add i64 %add363, %mul356
  %add367 = add i64 %add365, %mul355
  %mul368 = mul nsw i64 %shr84, %and22
  %mul369 = mul nuw nsw i64 %and81, %and26
  %mul371 = mul nuw nsw i64 %and77, %and29
  %mul373 = mul nuw nsw i64 %and73, %and33
  %mul375 = mul nuw nsw i64 %and70, %and37
  %mul377 = mul nsw i64 %and66, %shr40
  %mul379 = mul nsw i64 %shr84, %and26
  %mul380 = mul nuw nsw i64 %and81, %and29
  %mul382 = mul nuw nsw i64 %and77, %and33
  %mul384 = mul nuw nsw i64 %and73, %and37
  %mul386 = mul nsw i64 %and70, %shr40
  %add381 = add nuw i64 %mul386, %mul384
  %add383 = add i64 %add381, %mul382
  %add385 = add i64 %add383, %mul380
  %add387 = add i64 %add385, %mul379
  %mul388 = mul nsw i64 %shr84, %and29
  %mul389 = mul nuw nsw i64 %and81, %and33
  %mul391 = mul nuw nsw i64 %and77, %and37
  %mul393 = mul nsw i64 %and73, %shr40
  %mul395 = mul nsw i64 %shr84, %and33
  %mul396 = mul nuw nsw i64 %and81, %and37
  %mul398 = mul nsw i64 %and77, %shr40
  %add397 = add nuw i64 %mul396, %mul398
  %add399 = add i64 %add397, %mul395
  %mul400 = mul nsw i64 %shr84, %and37
  %mul401 = mul nsw i64 %and81, %shr40
  %add402 = add nuw nsw i64 %mul400, %mul401
  %mul403 = mul nsw i64 %shr84, %shr40
  %add404 = add nuw nsw i64 %add, 1048576
  %0 = lshr i64 %add404, 21
  %add130 = add nuw nsw i64 %mul129, %mul131
  %add132 = add nuw nsw i64 %add130, %and90
  %add406 = add nuw nsw i64 %add132, %0
  %mul407 = and i64 %add404, 17592183947264
  %sub = sub nsw i64 %add, %mul407
  %add408 = add nuw nsw i64 %add138, 1048576
  %shr409 = lshr i64 %add408, 21
  %add140 = add nuw nsw i64 %mul143, %mul145
  %add142 = add nuw nsw i64 %add140, %mul141
  %add144 = add nuw nsw i64 %add142, %mul139
  %add146 = add nuw nsw i64 %add144, %and98
  %add410 = add nuw nsw i64 %add146, %shr409
  %mul411 = and i64 %add408, -2097152
  %add413 = add nuw nsw i64 %add156, 1048576
  %shr4141924 = lshr i64 %add413, 21
  %add158 = add nuw nsw i64 %mul165, %mul167
  %add160 = add nuw nsw i64 %add158, %mul163
  %add162 = add nuw nsw i64 %add160, %mul161
  %add164 = add nuw nsw i64 %add162, %mul159
  %add166 = add nuw nsw i64 %add164, %mul157
  %add168 = add nuw nsw i64 %add166, %and106
  %add415 = add nuw nsw i64 %add168, %shr4141924
  %mul416 = and i64 %add413, -2097152
  %add418 = add nuw nsw i64 %add182, 1048576
  %shr4191925 = lshr i64 %add418, 21
  %add184 = add nuw nsw i64 %mul195, %mul197
  %add186 = add nuw nsw i64 %add184, %mul193
  %add188 = add nuw nsw i64 %add186, %mul191
  %add190 = add nuw nsw i64 %add188, %mul189
  %add192 = add nuw nsw i64 %add190, %mul187
  %add194 = add nuw nsw i64 %add192, %mul185
  %add196 = add nuw nsw i64 %add194, %mul183
  %add198 = add nuw nsw i64 %add196, %and114
  %add420 = add nuw nsw i64 %add198, %shr4191925
  %mul421 = and i64 %add418, -2097152
  %add423 = add nuw nsw i64 %add216, 1048576
  %shr4241926 = lshr i64 %add423, 21
  %add218 = add nuw nsw i64 %mul233, %mul235
  %add220 = add nuw nsw i64 %add218, %mul231
  %add222 = add nuw nsw i64 %add220, %mul229
  %add224 = add nuw nsw i64 %add222, %mul227
  %add226 = add nuw nsw i64 %add224, %mul225
  %add228 = add nuw nsw i64 %add226, %mul223
  %add230 = add nuw nsw i64 %add228, %mul219
  %add232 = add nuw nsw i64 %add230, %mul221
  %add234 = add nuw nsw i64 %add232, %mul217
  %add236 = add nuw nsw i64 %add234, %and121
  %add425 = add nuw nsw i64 %add236, %shr4241926
  %mul426 = and i64 %add423, -2097152
  %add428 = add nuw nsw i64 %add258, 1048576
  %shr4291927 = lshr i64 %add428, 21
  %add260 = add nuw i64 %mul279, %mul281
  %add262 = add i64 %add260, %mul277
  %add264 = add i64 %add262, %mul275
  %add266 = add i64 %add264, %mul273
  %add268 = add i64 %add266, %mul271
  %add270 = add i64 %add268, %mul269
  %add272 = add i64 %add270, %mul265
  %add274 = add i64 %add272, %mul267
  %add276 = add i64 %add274, %mul263
  %add278 = add i64 %add276, %mul259
  %add280 = add i64 %add278, %mul261
  %add282 = add i64 %add280, %shr128
  %add430 = add i64 %add282, %shr4291927
  %mul431 = and i64 %add428, -2097152
  %add433 = add nsw i64 %add303, 1048576
  %shr434 = ashr i64 %add433, 21
  %add306 = add nuw i64 %mul319, %mul321
  %add308 = add i64 %add306, %mul317
  %add310 = add i64 %add308, %mul315
  %add312 = add i64 %add310, %mul313
  %add314 = add i64 %add312, %mul309
  %add316 = add i64 %add314, %mul311
  %add318 = add i64 %add316, %mul307
  %add320 = add i64 %add318, %mul305
  %add322 = add i64 %add320, %mul304
  %add435 = add i64 %add322, %shr434
  %mul436 = and i64 %add433, -2097152
  %add438 = add nsw i64 %add339, 1048576
  %shr439 = ashr i64 %add438, 21
  %add342 = add nuw i64 %mul351, %mul353
  %add344 = add i64 %add342, %mul349
  %add346 = add i64 %add344, %mul345
  %add348 = add i64 %add346, %mul347
  %add350 = add i64 %add348, %mul343
  %add352 = add i64 %add350, %mul341
  %add354 = add i64 %add352, %mul340
  %add440 = add i64 %add354, %shr439
  %mul441 = and i64 %add438, -2097152
  %add443 = add nsw i64 %add367, 1048576
  %shr444 = ashr i64 %add443, 21
  %add370 = add nuw i64 %mul373, %mul377
  %add372 = add i64 %add370, %mul375
  %add374 = add i64 %add372, %mul371
  %add376 = add i64 %add374, %mul369
  %add378 = add i64 %add376, %mul368
  %add445 = add i64 %add378, %shr444
  %mul446 = and i64 %add443, -2097152
  %add448 = add nuw nsw i64 %add387, 1048576
  %shr449 = ashr i64 %add448, 21
  %add390 = add nuw i64 %mul391, %mul393
  %add392 = add i64 %add390, %mul389
  %add394 = add i64 %add392, %mul388
  %add450 = add i64 %add394, %shr449
  %mul451 = and i64 %add448, -2097152
  %sub452 = sub nsw i64 %add387, %mul451
  %add453 = add nuw nsw i64 %add399, 1048576
  %1 = lshr i64 %add453, 21
  %add455 = add nuw nsw i64 %add402, %1
  %mul456 = and i64 %add453, 9223372036852678656
  %sub457 = sub nsw i64 %add399, %mul456
  %add458 = add nuw nsw i64 %mul403, 1048576
  %2 = lshr i64 %add458, 21
  %mul461 = and i64 %add458, 9223372036852678656
  %sub462 = sub nsw i64 %mul403, %mul461
  %add463 = add nuw nsw i64 %add406, 1048576
  %shr464 = lshr i64 %add463, 21
  %mul466 = and i64 %add463, -2097152
  %sub467 = sub nsw i64 %add406, %mul466
  %add468 = add nuw nsw i64 %add410, 1048576
  %shr4691928 = lshr i64 %add468, 21
  %mul471 = and i64 %add468, -2097152
  %sub472 = sub nsw i64 %add410, %mul471
  %add473 = add nuw nsw i64 %add415, 1048576
  %shr4741929 = lshr i64 %add473, 21
  %mul476 = and i64 %add473, -2097152
  %sub477 = sub nsw i64 %add415, %mul476
  %add478 = add nuw nsw i64 %add420, 1048576
  %shr4791930 = lshr i64 %add478, 21
  %mul481 = and i64 %add478, -2097152
  %add483 = add nuw nsw i64 %add425, 1048576
  %shr4841931 = lshr i64 %add483, 21
  %mul486 = and i64 %add483, -2097152
  %add488 = add nsw i64 %add430, 1048576
  %shr489 = ashr i64 %add488, 21
  %mul491 = and i64 %add488, -2097152
  %add493 = add nsw i64 %add435, 1048576
  %shr494 = ashr i64 %add493, 21
  %mul496 = and i64 %add493, -2097152
  %add498 = add nsw i64 %add440, 1048576
  %shr499 = ashr i64 %add498, 21
  %mul501 = and i64 %add498, -2097152
  %add503 = add nsw i64 %add445, 1048576
  %shr504 = ashr i64 %add503, 21
  %add505 = add nsw i64 %shr504, %sub452
  %mul506 = and i64 %add503, -2097152
  %sub507 = sub nsw i64 %add445, %mul506
  %add508 = add nsw i64 %add450, 1048576
  %shr509 = ashr i64 %add508, 21
  %add510 = add nsw i64 %shr509, %sub457
  %mul511 = and i64 %add508, -2097152
  %sub512 = sub nsw i64 %add450, %mul511
  %add513 = add nuw nsw i64 %add455, 1048576
  %3 = lshr i64 %add513, 21
  %add515 = add nsw i64 %3, %sub462
  %mul516 = and i64 %add513, 9223372036852678656
  %sub517 = sub nsw i64 %add455, %mul516
  %mul518 = mul nuw nsw i64 %2, 666643
  %mul520 = mul nuw nsw i64 %2, 470296
  %mul522 = mul nuw nsw i64 %2, 654183
  %mul524.neg = mul nsw i64 %2, -997805
  %mul526 = mul nuw nsw i64 %2, 136657
  %mul528.neg = mul nsw i64 %2, -683901
  %sub447 = add i64 %add367, %mul528.neg
  %add500 = sub i64 %sub447, %mul446
  %sub529 = add i64 %add500, %shr499
  %mul530 = mul nsw i64 %add515, 666643
  %mul532 = mul nsw i64 %add515, 470296
  %mul534 = mul nsw i64 %add515, 654183
  %mul536.neg = mul i64 %add515, -997805
  %mul538 = mul nsw i64 %add515, 136657
  %mul540.neg = mul i64 %add515, -683901
  %mul542 = mul nsw i64 %sub517, 666643
  %mul544 = mul nsw i64 %sub517, 470296
  %mul546 = mul nsw i64 %sub517, 654183
  %mul548.neg = mul i64 %sub517, -997805
  %mul550 = mul nsw i64 %sub517, 136657
  %mul552.neg = mul i64 %sub517, -683901
  %sub442 = add i64 %add339, %mul524.neg
  %add495 = add i64 %sub442, %mul538
  %sub525 = add i64 %add495, %mul552.neg
  %add539 = sub i64 %sub525, %mul441
  %sub553 = add i64 %add539, %shr494
  %mul554 = mul nsw i64 %add510, 666643
  %mul556 = mul nsw i64 %add510, 470296
  %mul558 = mul nsw i64 %add510, 654183
  %mul560.neg = mul i64 %add510, -997805
  %mul562 = mul nsw i64 %add510, 136657
  %mul564.neg = mul i64 %add510, -683901
  %mul566 = mul nsw i64 %sub512, 666643
  %mul568 = mul nsw i64 %sub512, 470296
  %mul570 = mul nsw i64 %sub512, 654183
  %mul572.neg = mul i64 %sub512, -997805
  %mul574 = mul nsw i64 %sub512, 136657
  %mul576.neg = mul i64 %sub512, -683901
  %sub437 = add i64 %mul534, %mul520
  %add490 = add i64 %sub437, %mul548.neg
  %add521 = add i64 %add490, %add303
  %add535 = add i64 %add521, %mul562
  %sub549 = add i64 %add535, %mul576.neg
  %add563 = sub i64 %sub549, %mul436
  %sub577 = add i64 %add563, %shr489
  %mul578 = mul nsw i64 %add505, 666643
  %sub422 = add i64 %add182, %mul578
  %add475 = add i64 %sub422, %shr4741929
  %add579 = sub i64 %add475, %mul421
  %mul580 = mul nsw i64 %add505, 470296
  %mul582 = mul nsw i64 %add505, 654183
  %sub427 = add i64 %mul568, %mul554
  %add480 = add i64 %sub427, %mul582
  %add555 = add i64 %add480, %add216
  %add569 = sub i64 %add555, %mul426
  %add583 = add i64 %add569, %shr4791930
  %mul584.neg = mul i64 %add505, -997805
  %mul586 = mul nsw i64 %add505, 136657
  %sub432 = add i64 %mul544, %mul530
  %add485 = add i64 %sub432, %mul558
  %add531 = add i64 %add485, %mul572.neg
  %add545 = add i64 %add531, %mul586
  %add559 = add i64 %add545, %add258
  %sub573 = add i64 %add559, %shr4841931
  %add587 = sub i64 %sub573, %mul431
  %mul588.neg = mul i64 %add505, -683901
  %add590 = add nsw i64 %add579, 1048576
  %shr591 = ashr i64 %add590, 21
  %sub482 = add i64 %mul580, %mul566
  %add567 = add i64 %sub482, %add420
  %add581 = sub i64 %add567, %mul481
  %add592 = add i64 %add581, %shr591
  %mul593 = and i64 %add590, -2097152
  %add595 = add nsw i64 %add583, 1048576
  %shr596 = ashr i64 %add595, 21
  %sub487 = add i64 %mul556, %mul542
  %add543 = add i64 %sub487, %mul570
  %add557 = add i64 %add543, %mul584.neg
  %add571 = add i64 %add557, %add425
  %sub585 = sub i64 %add571, %mul486
  %add597 = add i64 %sub585, %shr596
  %mul598 = and i64 %add595, -2097152
  %add600 = add nsw i64 %add587, 1048576
  %shr601 = ashr i64 %add600, 21
  %sub492 = add i64 %mul532, %mul518
  %add519 = add i64 %sub492, %mul546
  %add533 = add i64 %add519, %mul560.neg
  %add547 = add i64 %add533, %mul574
  %sub561 = add i64 %add547, %mul588.neg
  %add575 = add i64 %sub561, %add430
  %sub589 = sub i64 %add575, %mul491
  %add602 = add i64 %sub589, %shr601
  %mul603 = and i64 %add600, -2097152
  %add605 = add nsw i64 %sub577, 1048576
  %shr606 = ashr i64 %add605, 21
  %sub497 = add i64 %mul536.neg, %mul522
  %add523 = add i64 %sub497, %mul550
  %sub537 = add i64 %add523, %mul564.neg
  %add551 = add i64 %sub537, %add435
  %sub565 = sub i64 %add551, %mul496
  %add607 = add i64 %sub565, %shr606
  %mul608 = and i64 %add605, -2097152
  %sub609 = sub nsw i64 %sub577, %mul608
  %add610 = add nsw i64 %sub553, 1048576
  %shr611 = ashr i64 %add610, 21
  %sub502 = add i64 %mul540.neg, %mul526
  %add527 = add i64 %sub502, %add440
  %sub541 = sub i64 %add527, %mul501
  %add612 = add i64 %sub541, %shr611
  %mul613 = and i64 %add610, -2097152
  %sub614 = sub nsw i64 %sub553, %mul613
  %add615 = add nsw i64 %sub529, 1048576
  %shr616 = ashr i64 %add615, 21
  %add617 = add nsw i64 %shr616, %sub507
  %mul618 = and i64 %add615, -2097152
  %sub619 = sub nsw i64 %sub529, %mul618
  %add620 = add nsw i64 %add592, 1048576
  %shr621 = ashr i64 %add620, 21
  %mul623 = and i64 %add620, -2097152
  %add625 = add nsw i64 %add597, 1048576
  %shr626 = ashr i64 %add625, 21
  %mul628 = and i64 %add625, -2097152
  %add630 = add nsw i64 %add602, 1048576
  %shr631 = ashr i64 %add630, 21
  %add632 = add nsw i64 %shr631, %sub609
  %mul633 = and i64 %add630, -2097152
  %sub634 = sub nsw i64 %add602, %mul633
  %add635 = add nsw i64 %add607, 1048576
  %shr636 = ashr i64 %add635, 21
  %add637 = add nsw i64 %shr636, %sub614
  %mul638 = and i64 %add635, -2097152
  %sub639 = sub nsw i64 %add607, %mul638
  %add640 = add nsw i64 %add612, 1048576
  %shr641 = ashr i64 %add640, 21
  %add642 = add nsw i64 %shr641, %sub619
  %mul643 = and i64 %add640, -2097152
  %sub644 = sub nsw i64 %add612, %mul643
  %mul645 = mul nsw i64 %add617, 666643
  %add646 = add nsw i64 %sub477, %mul645
  %mul647 = mul nsw i64 %add617, 470296
  %mul649 = mul nsw i64 %add617, 654183
  %mul651.neg = mul i64 %add617, -997805
  %mul653 = mul nsw i64 %add617, 136657
  %mul655.neg = mul i64 %add617, -683901
  %sub604 = add i64 %add587, %mul655.neg
  %add627 = add i64 %sub604, %shr626
  %sub656 = sub i64 %add627, %mul603
  %mul657 = mul nsw i64 %add642, 666643
  %mul659 = mul nsw i64 %add642, 470296
  %add660 = add nsw i64 %add646, %mul659
  %mul661 = mul nsw i64 %add642, 654183
  %mul663.neg = mul i64 %add642, -997805
  %mul665 = mul nsw i64 %add642, 136657
  %mul667.neg = mul i64 %add642, -683901
  %mul669 = mul nsw i64 %sub644, 666643
  %add670 = add nsw i64 %sub472, %mul669
  %mul671 = mul nsw i64 %sub644, 470296
  %mul673 = mul nsw i64 %sub644, 654183
  %add674 = add nsw i64 %add660, %mul673
  %mul675.neg = mul i64 %sub644, -997805
  %mul677 = mul nsw i64 %sub644, 136657
  %mul679.neg = mul i64 %sub644, -683901
  %sub599 = add i64 %add583, %mul651.neg
  %add622 = add i64 %sub599, %shr621
  %sub652 = sub i64 %add622, %mul598
  %add666 = add i64 %sub652, %mul665
  %sub680 = add i64 %add666, %mul679.neg
  %mul681 = mul nsw i64 %add637, 666643
  %mul683 = mul nsw i64 %add637, 470296
  %mul685 = mul nsw i64 %add637, 654183
  %mul687.neg = mul i64 %add637, -997805
  %mul689 = mul nsw i64 %add637, 136657
  %mul691.neg = mul i64 %add637, -683901
  %mul693 = mul nsw i64 %sub639, 666643
  %mul695 = mul nsw i64 %sub639, 470296
  %mul697 = mul nsw i64 %sub639, 654183
  %mul699.neg = mul i64 %sub639, -997805
  %mul701 = mul nsw i64 %sub639, 136657
  %mul703.neg = mul i64 %sub639, -683901
  %sub594 = add i64 %mul647, %add579
  %add648 = sub i64 %sub594, %mul593
  %add662 = add i64 %add648, %mul661
  %sub676 = add i64 %add662, %mul675.neg
  %add690 = add i64 %sub676, %mul689
  %sub704 = add i64 %add690, %mul703.neg
  %mul705 = mul nsw i64 %add632, 666643
  %add706 = add nsw i64 %mul705, %sub
  %mul707 = mul nsw i64 %add632, 470296
  %mul709 = mul nsw i64 %add632, 654183
  %sub412 = add nuw nsw i64 %shr464, %add138
  %add465 = sub nsw i64 %sub412, %mul411
  %add682 = add i64 %add465, %mul709
  %add696 = add i64 %add682, %mul681
  %add710 = add i64 %add696, %mul695
  %mul711.neg = mul i64 %add632, -997805
  %mul713 = mul nsw i64 %add632, 136657
  %sub417 = add nuw nsw i64 %shr4691928, %add156
  %add470 = sub nsw i64 %sub417, %mul416
  %add658 = add i64 %add470, %mul657
  %add672 = add i64 %add658, %mul671
  %add686 = add i64 %add672, %mul713
  %sub700 = add i64 %add686, %mul685
  %add714 = add i64 %sub700, %mul699.neg
  %mul715.neg = mul i64 %add632, -683901
  %add717 = add nsw i64 %add706, 1048576
  %shr718 = ashr i64 %add717, 21
  %add694 = add i64 %sub467, %mul707
  %add708 = add i64 %add694, %mul693
  %add719 = add i64 %add708, %shr718
  %mul720 = and i64 %add717, -2097152
  %sub721 = sub nsw i64 %add706, %mul720
  %add722 = add nsw i64 %add710, 1048576
  %shr723 = ashr i64 %add722, 21
  %add684 = add i64 %add670, %mul711.neg
  %add698 = add i64 %add684, %mul683
  %sub712 = add i64 %add698, %mul697
  %add724 = add i64 %sub712, %shr723
  %mul725 = and i64 %add722, -2097152
  %add727 = add nsw i64 %add714, 1048576
  %shr728 = ashr i64 %add727, 21
  %sub688 = add i64 %add674, %mul715.neg
  %add702 = add i64 %sub688, %mul687.neg
  %sub716 = add i64 %add702, %mul701
  %add729 = add i64 %sub716, %shr728
  %mul730 = and i64 %add727, -2097152
  %add732 = add nsw i64 %sub704, 1048576
  %shr733 = ashr i64 %add732, 21
  %sub624 = add i64 %add592, %mul649
  %add650 = sub i64 %sub624, %mul623
  %sub664 = add i64 %add650, %mul663.neg
  %add678 = add i64 %sub664, %mul677
  %sub692 = add i64 %add678, %mul691.neg
  %add734 = add i64 %sub692, %shr733
  %mul735 = and i64 %add732, -2097152
  %sub736 = sub i64 %sub704, %mul735
  %add737 = add nsw i64 %sub680, 1048576
  %shr738 = ashr i64 %add737, 21
  %sub629 = add i64 %mul667.neg, %mul653
  %add654 = add i64 %sub629, %add597
  %sub668 = sub i64 %add654, %mul628
  %add739 = add i64 %sub668, %shr738
  %mul740 = and i64 %add737, -2097152
  %sub741 = sub i64 %sub680, %mul740
  %add742 = add nsw i64 %sub656, 1048576
  %shr743 = ashr i64 %add742, 21
  %add744 = add nsw i64 %sub634, %shr743
  %mul745 = and i64 %add742, -2097152
  %add747 = add nsw i64 %add719, 1048576
  %shr748 = ashr i64 %add747, 21
  %mul750 = and i64 %add747, -2097152
  %add752 = add nsw i64 %add724, 1048576
  %shr753 = ashr i64 %add752, 21
  %mul755 = and i64 %add752, -2097152
  %add757 = add nsw i64 %add729, 1048576
  %shr758 = ashr i64 %add757, 21
  %add759 = add nsw i64 %sub736, %shr758
  %mul760 = and i64 %add757, -2097152
  %add762 = add nsw i64 %add734, 1048576
  %shr763 = ashr i64 %add762, 21
  %add764 = add nsw i64 %sub741, %shr763
  %mul765 = and i64 %add762, -2097152
  %sub766 = sub nsw i64 %add734, %mul765
  %add767 = add nsw i64 %add739, 1048576
  %shr768 = ashr i64 %add767, 21
  %mul770 = and i64 %add767, -2097152
  %sub771 = sub nsw i64 %add739, %mul770
  %add772 = add nsw i64 %add744, 1048576
  %shr773 = ashr i64 %add772, 21
  %mul775 = and i64 %add772, -2097152
  %sub776 = sub nsw i64 %add744, %mul775
  %mul777 = mul nsw i64 %shr773, 666643
  %add778 = add nsw i64 %sub721, %mul777
  %mul779 = mul nsw i64 %shr773, 470296
  %mul781 = mul nsw i64 %shr773, 654183
  %mul783.neg = mul nsw i64 %shr773, -997805
  %mul785 = mul nsw i64 %shr773, 136657
  %mul787.neg = mul nsw i64 %shr773, -683901
  %shr789 = ashr i64 %add778, 21
  %sub751 = add i64 %add719, %mul779
  %add780 = sub i64 %sub751, %mul750
  %add790 = add i64 %add780, %shr789
  %sub792 = and i64 %add778, 2097151
  %shr793 = ashr i64 %add790, 21
  %sub726 = add i64 %add710, %mul781
  %add749 = sub i64 %sub726, %mul725
  %add782 = add i64 %add749, %shr748
  %add794 = add i64 %add782, %shr793
  %sub796 = and i64 %add790, 2097151
  %shr797 = ashr i64 %add794, 21
  %sub756 = add i64 %add724, %mul783.neg
  %sub784 = sub i64 %sub756, %mul755
  %add798 = add i64 %sub784, %shr797
  %sub800 = and i64 %add794, 2097151
  %shr801 = ashr i64 %add798, 21
  %sub731 = add i64 %add714, %mul785
  %add754 = sub i64 %sub731, %mul730
  %add786 = add i64 %add754, %shr753
  %add802 = add i64 %add786, %shr801
  %sub804 = and i64 %add798, 2097151
  %shr805 = ashr i64 %add802, 21
  %sub761 = add i64 %add729, %mul787.neg
  %sub788 = sub i64 %sub761, %mul760
  %add806 = add i64 %sub788, %shr805
  %sub808 = and i64 %add802, 2097151
  %shr809 = ashr i64 %add806, 21
  %add810 = add nsw i64 %add759, %shr809
  %sub812 = and i64 %add806, 2097151
  %shr813 = ashr i64 %add810, 21
  %add814 = add nsw i64 %shr813, %sub766
  %sub816 = and i64 %add810, 2097151
  %shr817 = ashr i64 %add814, 21
  %add818 = add nsw i64 %add764, %shr817
  %sub820 = and i64 %add814, 2097151
  %shr821 = ashr i64 %add818, 21
  %add822 = add nsw i64 %shr821, %sub771
  %sub824 = and i64 %add818, 2097151
  %shr825 = ashr i64 %add822, 21
  %sub746 = add i64 %shr768, %sub656
  %add769 = sub i64 %sub746, %mul745
  %add826 = add i64 %add769, %shr825
  %sub828 = and i64 %add822, 2097151
  %shr829 = ashr i64 %add826, 21
  %add830 = add nsw i64 %shr829, %sub776
  %sub832 = and i64 %add826, 2097151
  %shr833 = ashr i64 %add830, 21
  %sub836 = and i64 %add830, 2097151
  %mul837 = mul nsw i64 %shr833, 666643
  %add838 = add nsw i64 %mul837, %sub792
  %mul839 = mul nsw i64 %shr833, 470296
  %add840 = add nsw i64 %mul839, %sub796
  %mul841 = mul nsw i64 %shr833, 654183
  %add842 = add nsw i64 %mul841, %sub800
  %mul843.neg = mul nsw i64 %shr833, -997805
  %sub844 = add nsw i64 %mul843.neg, %sub804
  %mul845 = mul nsw i64 %shr833, 136657
  %add846 = add nsw i64 %mul845, %sub808
  %mul847.neg = mul nsw i64 %shr833, -683901
  %sub848 = add nsw i64 %mul847.neg, %sub812
  %shr849 = ashr i64 %add838, 21
  %add850 = add nsw i64 %add840, %shr849
  %shr853 = ashr i64 %add850, 21
  %add854 = add nsw i64 %add842, %shr853
  %sub856 = and i64 %add850, 2097151
  %shr857 = ashr i64 %add854, 21
  %add858 = add nsw i64 %sub844, %shr857
  %sub860 = and i64 %add854, 2097151
  %shr861 = ashr i64 %add858, 21
  %add862 = add nsw i64 %add846, %shr861
  %sub864 = and i64 %add858, 2097151
  %shr865 = ashr i64 %add862, 21
  %add866 = add nsw i64 %sub848, %shr865
  %sub868 = and i64 %add862, 2097151
  %shr869 = ashr i64 %add866, 21
  %add870 = add nsw i64 %shr869, %sub816
  %sub872 = and i64 %add866, 2097151
  %shr873 = ashr i64 %add870, 21
  %add874 = add nsw i64 %shr873, %sub820
  %sub876 = and i64 %add870, 2097151
  %shr877 = ashr i64 %add874, 21
  %add878 = add nsw i64 %shr877, %sub824
  %shr881 = ashr i64 %add878, 21
  %add882 = add nsw i64 %shr881, %sub828
  %shr885 = ashr i64 %add882, 21
  %add886 = add nsw i64 %shr885, %sub832
  %sub888 = and i64 %add882, 2097151
  %shr889 = ashr i64 %add886, 21
  %add890 = add nsw i64 %shr889, %sub836
  %sub892 = and i64 %add886, 2097151
  %conv = trunc i64 %add838 to i8
  store i8 %conv, i8* %s, align 1, !tbaa !4
  %4 = lshr i64 %add838, 8
  %conv895 = trunc i64 %4 to i8
  %arrayidx896 = getelementptr inbounds i8, i8* %s, i64 1
  store i8 %conv895, i8* %arrayidx896, align 1, !tbaa !4
  %sub852 = lshr i64 %add838, 16
  %5 = and i64 %sub852, 31
  %shl = shl nuw nsw i64 %sub856, 5
  %or = or i64 %shl, %5
  %conv898 = trunc i64 %or to i8
  %arrayidx899 = getelementptr inbounds i8, i8* %s, i64 2
  store i8 %conv898, i8* %arrayidx899, align 1, !tbaa !4
  %6 = lshr i64 %add850, 3
  %conv901 = trunc i64 %6 to i8
  %arrayidx902 = getelementptr inbounds i8, i8* %s, i64 3
  store i8 %conv901, i8* %arrayidx902, align 1, !tbaa !4
  %7 = lshr i64 %add850, 11
  %conv904 = trunc i64 %7 to i8
  %arrayidx905 = getelementptr inbounds i8, i8* %s, i64 4
  store i8 %conv904, i8* %arrayidx905, align 1, !tbaa !4
  %8 = lshr i64 %sub856, 19
  %shl907 = shl nuw nsw i64 %sub860, 2
  %or908 = or i64 %shl907, %8
  %conv909 = trunc i64 %or908 to i8
  %arrayidx910 = getelementptr inbounds i8, i8* %s, i64 5
  store i8 %conv909, i8* %arrayidx910, align 1, !tbaa !4
  %9 = lshr i64 %add854, 6
  %conv912 = trunc i64 %9 to i8
  %arrayidx913 = getelementptr inbounds i8, i8* %s, i64 6
  store i8 %conv912, i8* %arrayidx913, align 1, !tbaa !4
  %10 = lshr i64 %sub860, 14
  %shl915 = shl nuw nsw i64 %sub864, 7
  %or916 = or i64 %shl915, %10
  %conv917 = trunc i64 %or916 to i8
  %arrayidx918 = getelementptr inbounds i8, i8* %s, i64 7
  store i8 %conv917, i8* %arrayidx918, align 1, !tbaa !4
  %11 = lshr i64 %add858, 1
  %conv920 = trunc i64 %11 to i8
  %arrayidx921 = getelementptr inbounds i8, i8* %s, i64 8
  store i8 %conv920, i8* %arrayidx921, align 1, !tbaa !4
  %12 = lshr i64 %add858, 9
  %conv923 = trunc i64 %12 to i8
  %arrayidx924 = getelementptr inbounds i8, i8* %s, i64 9
  store i8 %conv923, i8* %arrayidx924, align 1, !tbaa !4
  %13 = lshr i64 %sub864, 17
  %shl926 = shl nuw nsw i64 %sub868, 4
  %or927 = or i64 %shl926, %13
  %conv928 = trunc i64 %or927 to i8
  %arrayidx929 = getelementptr inbounds i8, i8* %s, i64 10
  store i8 %conv928, i8* %arrayidx929, align 1, !tbaa !4
  %14 = lshr i64 %add862, 4
  %conv931 = trunc i64 %14 to i8
  %arrayidx932 = getelementptr inbounds i8, i8* %s, i64 11
  store i8 %conv931, i8* %arrayidx932, align 1, !tbaa !4
  %15 = lshr i64 %add862, 12
  %conv934 = trunc i64 %15 to i8
  %arrayidx935 = getelementptr inbounds i8, i8* %s, i64 12
  store i8 %conv934, i8* %arrayidx935, align 1, !tbaa !4
  %16 = lshr i64 %sub868, 20
  %shl937 = shl nuw nsw i64 %sub872, 1
  %or938 = or i64 %shl937, %16
  %conv939 = trunc i64 %or938 to i8
  %arrayidx940 = getelementptr inbounds i8, i8* %s, i64 13
  store i8 %conv939, i8* %arrayidx940, align 1, !tbaa !4
  %17 = lshr i64 %add866, 7
  %conv942 = trunc i64 %17 to i8
  %arrayidx943 = getelementptr inbounds i8, i8* %s, i64 14
  store i8 %conv942, i8* %arrayidx943, align 1, !tbaa !4
  %18 = lshr i64 %sub872, 15
  %shl945 = shl nuw nsw i64 %sub876, 6
  %or946 = or i64 %shl945, %18
  %conv947 = trunc i64 %or946 to i8
  %arrayidx948 = getelementptr inbounds i8, i8* %s, i64 15
  store i8 %conv947, i8* %arrayidx948, align 1, !tbaa !4
  %19 = lshr i64 %add870, 2
  %conv950 = trunc i64 %19 to i8
  %arrayidx951 = getelementptr inbounds i8, i8* %s, i64 16
  store i8 %conv950, i8* %arrayidx951, align 1, !tbaa !4
  %20 = lshr i64 %add870, 10
  %conv953 = trunc i64 %20 to i8
  %arrayidx954 = getelementptr inbounds i8, i8* %s, i64 17
  store i8 %conv953, i8* %arrayidx954, align 1, !tbaa !4
  %21 = lshr i64 %sub876, 18
  %sub880 = shl nsw i64 %add874, 3
  %or957 = or i64 %sub880, %21
  %conv958 = trunc i64 %or957 to i8
  %arrayidx959 = getelementptr inbounds i8, i8* %s, i64 18
  store i8 %conv958, i8* %arrayidx959, align 1, !tbaa !4
  %22 = lshr i64 %add874, 5
  %conv961 = trunc i64 %22 to i8
  %arrayidx962 = getelementptr inbounds i8, i8* %s, i64 19
  store i8 %conv961, i8* %arrayidx962, align 1, !tbaa !4
  %23 = lshr i64 %add874, 13
  %conv964 = trunc i64 %23 to i8
  %arrayidx965 = getelementptr inbounds i8, i8* %s, i64 20
  store i8 %conv964, i8* %arrayidx965, align 1, !tbaa !4
  %conv967 = trunc i64 %add878 to i8
  %arrayidx968 = getelementptr inbounds i8, i8* %s, i64 21
  store i8 %conv967, i8* %arrayidx968, align 1, !tbaa !4
  %24 = lshr i64 %add878, 8
  %conv970 = trunc i64 %24 to i8
  %arrayidx971 = getelementptr inbounds i8, i8* %s, i64 22
  store i8 %conv970, i8* %arrayidx971, align 1, !tbaa !4
  %sub884 = lshr i64 %add878, 16
  %25 = and i64 %sub884, 31
  %shl973 = shl nuw nsw i64 %sub888, 5
  %or974 = or i64 %shl973, %25
  %conv975 = trunc i64 %or974 to i8
  %arrayidx976 = getelementptr inbounds i8, i8* %s, i64 23
  store i8 %conv975, i8* %arrayidx976, align 1, !tbaa !4
  %26 = lshr i64 %add882, 3
  %conv978 = trunc i64 %26 to i8
  %arrayidx979 = getelementptr inbounds i8, i8* %s, i64 24
  store i8 %conv978, i8* %arrayidx979, align 1, !tbaa !4
  %27 = lshr i64 %add882, 11
  %conv981 = trunc i64 %27 to i8
  %arrayidx982 = getelementptr inbounds i8, i8* %s, i64 25
  store i8 %conv981, i8* %arrayidx982, align 1, !tbaa !4
  %28 = lshr i64 %sub888, 19
  %shl984 = shl nuw nsw i64 %sub892, 2
  %or985 = or i64 %shl984, %28
  %conv986 = trunc i64 %or985 to i8
  %arrayidx987 = getelementptr inbounds i8, i8* %s, i64 26
  store i8 %conv986, i8* %arrayidx987, align 1, !tbaa !4
  %29 = lshr i64 %add886, 6
  %conv989 = trunc i64 %29 to i8
  %arrayidx990 = getelementptr inbounds i8, i8* %s, i64 27
  store i8 %conv989, i8* %arrayidx990, align 1, !tbaa !4
  %30 = lshr i64 %sub892, 14
  %shl992 = shl nsw i64 %add890, 7
  %or993 = or i64 %shl992, %30
  %conv994 = trunc i64 %or993 to i8
  %arrayidx995 = getelementptr inbounds i8, i8* %s, i64 28
  store i8 %conv994, i8* %arrayidx995, align 1, !tbaa !4
  %31 = lshr i64 %add890, 1
  %conv997 = trunc i64 %31 to i8
  %arrayidx998 = getelementptr inbounds i8, i8* %s, i64 29
  store i8 %conv997, i8* %arrayidx998, align 1, !tbaa !4
  %32 = lshr i64 %add890, 9
  %conv1000 = trunc i64 %32 to i8
  %arrayidx1001 = getelementptr inbounds i8, i8* %s, i64 30
  store i8 %conv1000, i8* %arrayidx1001, align 1, !tbaa !4
  %shr1002 = ashr i64 %add890, 17
  %conv1003 = trunc i64 %shr1002 to i8
  %arrayidx1004 = getelementptr inbounds i8, i8* %s, i64 31
  store i8 %conv1003, i8* %arrayidx1004, align 1, !tbaa !4
  ret void
}

declare void @OPENSSL_cleanse(i8* noundef, i64 noundef) local_unnamed_addr #2

declare void @EVP_MD_free(%struct.evp_md_st* noundef) local_unnamed_addr #2

declare void @EVP_MD_CTX_free(%struct.evp_md_ctx_st* noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline nounwind uwtable
define i32 @ossl_ed25519_verify(i8* noundef %message, i64 noundef %message_len, i8* noundef %signature, i8* noundef %public_key, %struct.ossl_lib_ctx_st* noundef %libctx, i8* noundef %propq) local_unnamed_addr #0 {
entry:
  %A = alloca %struct.ge_p3, align 4
  %sz = alloca i32, align 4
  %R = alloca %struct.ge_p2, align 4
  %rcheck = alloca [32 x i8], align 16
  %h = alloca [64 x i8], align 16
  %0 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %0) #12
  %1 = bitcast i32* %sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #12
  %2 = bitcast %struct.ge_p2* %R to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %2) #12
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %rcheck, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #12
  %4 = getelementptr inbounds [64 x i8], [64 x i8]* %h, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12
  %add.ptr = getelementptr inbounds i8, i8* %signature, i64 32
  %arrayidx = getelementptr inbounds i8, i8* %signature, i64 63
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !4
  %cmp = icmp ugt i8 %5, 16
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i8 %5, 16
  br i1 %cmp4, label %if.then6, label %if.end37

if.then6:                                         ; preds = %if.end
  %add.ptr7 = getelementptr inbounds i8, i8* %signature, i64 48
  %call = tail call i32 @memcmp(i8* noundef nonnull %add.ptr7, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @allzeroes, i64 0, i64 0), i64 noundef 15) #15
  %cmp8.not = icmp eq i32 %call, 0
  br i1 %cmp8.not, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.then6
  %arrayidx14 = getelementptr inbounds i8, i8* %signature, i64 47
  %6 = load i8, i8* %arrayidx14, align 1, !tbaa !4
  %cmp19 = icmp ult i8 %6, 20
  br i1 %cmp19, label %if.end37, label %if.end22

for.cond:                                         ; preds = %if.end22
  %arrayidx14.1 = getelementptr inbounds i8, i8* %signature, i64 46
  %7 = load i8, i8* %arrayidx14.1, align 1, !tbaa !4
  %cmp19.1 = icmp ult i8 %7, -34
  br i1 %cmp19.1, label %if.end37, label %if.end22.1

if.end22.1:                                       ; preds = %for.cond
  %cmp29.1.not = icmp eq i8 %7, -34
  br i1 %cmp29.1.not, label %for.cond.1, label %cleanup

for.cond.1:                                       ; preds = %if.end22.1
  %arrayidx14.2 = getelementptr inbounds i8, i8* %signature, i64 45
  %8 = load i8, i8* %arrayidx14.2, align 1, !tbaa !4
  %cmp19.2 = icmp ult i8 %8, -7
  br i1 %cmp19.2, label %if.end37, label %if.end22.2

if.end22.2:                                       ; preds = %for.cond.1
  %cmp29.2.not = icmp eq i8 %8, -7
  br i1 %cmp29.2.not, label %for.cond.2, label %cleanup

for.cond.2:                                       ; preds = %if.end22.2
  %arrayidx14.3 = getelementptr inbounds i8, i8* %signature, i64 44
  %9 = load i8, i8* %arrayidx14.3, align 1, !tbaa !4
  %cmp19.3 = icmp ult i8 %9, -34
  br i1 %cmp19.3, label %if.end37, label %if.end22.3

if.end22.3:                                       ; preds = %for.cond.2
  %cmp29.3.not = icmp eq i8 %9, -34
  br i1 %cmp29.3.not, label %for.cond.3, label %cleanup

for.cond.3:                                       ; preds = %if.end22.3
  %arrayidx14.4 = getelementptr inbounds i8, i8* %signature, i64 43
  %10 = load i8, i8* %arrayidx14.4, align 1, !tbaa !4
  %cmp19.4 = icmp ult i8 %10, -94
  br i1 %cmp19.4, label %if.end37, label %if.end22.4

if.end22.4:                                       ; preds = %for.cond.3
  %cmp29.4.not = icmp eq i8 %10, -94
  br i1 %cmp29.4.not, label %for.cond.4, label %cleanup

for.cond.4:                                       ; preds = %if.end22.4
  %arrayidx14.5 = getelementptr inbounds i8, i8* %signature, i64 42
  %11 = load i8, i8* %arrayidx14.5, align 1, !tbaa !4
  %cmp19.5 = icmp ult i8 %11, -9
  br i1 %cmp19.5, label %if.end37, label %if.end22.5

if.end22.5:                                       ; preds = %for.cond.4
  %cmp29.5.not = icmp eq i8 %11, -9
  br i1 %cmp29.5.not, label %for.cond.5, label %cleanup

for.cond.5:                                       ; preds = %if.end22.5
  %arrayidx14.6 = getelementptr inbounds i8, i8* %signature, i64 41
  %12 = load i8, i8* %arrayidx14.6, align 1, !tbaa !4
  %cmp19.6 = icmp ult i8 %12, -100
  br i1 %cmp19.6, label %if.end37, label %if.end22.6

if.end22.6:                                       ; preds = %for.cond.5
  %cmp29.6.not = icmp eq i8 %12, -100
  br i1 %cmp29.6.not, label %for.cond.6, label %cleanup

for.cond.6:                                       ; preds = %if.end22.6
  %arrayidx14.7 = getelementptr inbounds i8, i8* %signature, i64 40
  %13 = load i8, i8* %arrayidx14.7, align 1, !tbaa !4
  %cmp19.7 = icmp ult i8 %13, -42
  br i1 %cmp19.7, label %if.end37, label %if.end22.7

if.end22.7:                                       ; preds = %for.cond.6
  %cmp29.7.not = icmp eq i8 %13, -42
  br i1 %cmp29.7.not, label %for.cond.7, label %cleanup

for.cond.7:                                       ; preds = %if.end22.7
  %arrayidx14.8 = getelementptr inbounds i8, i8* %signature, i64 39
  %14 = load i8, i8* %arrayidx14.8, align 1, !tbaa !4
  %cmp19.8 = icmp ult i8 %14, 88
  br i1 %cmp19.8, label %if.end37, label %if.end22.8

if.end22.8:                                       ; preds = %for.cond.7
  %cmp29.8.not = icmp eq i8 %14, 88
  br i1 %cmp29.8.not, label %for.cond.8, label %cleanup

for.cond.8:                                       ; preds = %if.end22.8
  %arrayidx14.9 = getelementptr inbounds i8, i8* %signature, i64 38
  %15 = load i8, i8* %arrayidx14.9, align 1, !tbaa !4
  %cmp19.9 = icmp ult i8 %15, 18
  br i1 %cmp19.9, label %if.end37, label %if.end22.9

if.end22.9:                                       ; preds = %for.cond.8
  %cmp29.9.not = icmp eq i8 %15, 18
  br i1 %cmp29.9.not, label %for.cond.9, label %cleanup

for.cond.9:                                       ; preds = %if.end22.9
  %arrayidx14.10 = getelementptr inbounds i8, i8* %signature, i64 37
  %16 = load i8, i8* %arrayidx14.10, align 1, !tbaa !4
  %cmp19.10 = icmp ult i8 %16, 99
  br i1 %cmp19.10, label %if.end37, label %if.end22.10

if.end22.10:                                      ; preds = %for.cond.9
  %cmp29.10.not = icmp eq i8 %16, 99
  br i1 %cmp29.10.not, label %for.cond.10, label %cleanup

for.cond.10:                                      ; preds = %if.end22.10
  %arrayidx14.11 = getelementptr inbounds i8, i8* %signature, i64 36
  %17 = load i8, i8* %arrayidx14.11, align 1, !tbaa !4
  %cmp19.11 = icmp ult i8 %17, 26
  br i1 %cmp19.11, label %if.end37, label %if.end22.11

if.end22.11:                                      ; preds = %for.cond.10
  %cmp29.11.not = icmp eq i8 %17, 26
  br i1 %cmp29.11.not, label %for.cond.11, label %cleanup

for.cond.11:                                      ; preds = %if.end22.11
  %arrayidx14.12 = getelementptr inbounds i8, i8* %signature, i64 35
  %18 = load i8, i8* %arrayidx14.12, align 1, !tbaa !4
  %cmp19.12 = icmp ult i8 %18, 92
  br i1 %cmp19.12, label %if.end37, label %if.end22.12

if.end22.12:                                      ; preds = %for.cond.11
  %cmp29.12.not = icmp eq i8 %18, 92
  br i1 %cmp29.12.not, label %for.cond.12, label %cleanup

for.cond.12:                                      ; preds = %if.end22.12
  %arrayidx14.13 = getelementptr inbounds i8, i8* %signature, i64 34
  %19 = load i8, i8* %arrayidx14.13, align 1, !tbaa !4
  %cmp19.13 = icmp ult i8 %19, -11
  br i1 %cmp19.13, label %if.end37, label %if.end22.13

if.end22.13:                                      ; preds = %for.cond.12
  %cmp29.13.not = icmp eq i8 %19, -11
  br i1 %cmp29.13.not, label %for.cond.13, label %cleanup

for.cond.13:                                      ; preds = %if.end22.13
  %arrayidx14.14 = getelementptr inbounds i8, i8* %signature, i64 33
  %20 = load i8, i8* %arrayidx14.14, align 1, !tbaa !4
  %cmp19.14 = icmp ult i8 %20, -45
  br i1 %cmp19.14, label %if.end37, label %if.end22.14

if.end22.14:                                      ; preds = %for.cond.13
  %cmp29.14.not = icmp eq i8 %20, -45
  br i1 %cmp29.14.not, label %for.cond.14, label %cleanup

for.cond.14:                                      ; preds = %if.end22.14
  %21 = load i8, i8* %add.ptr, align 1, !tbaa !4
  %cmp19.15 = icmp ult i8 %21, -19
  br i1 %cmp19.15, label %if.end37, label %cleanup

if.end22:                                         ; preds = %for.body.preheader
  %cmp29.not = icmp eq i8 %6, 20
  br i1 %cmp29.not, label %for.cond, label %cleanup

if.end37:                                         ; preds = %for.body.preheader, %for.cond, %for.cond.1, %for.cond.2, %for.cond.3, %for.cond.4, %for.cond.5, %for.cond.6, %for.cond.7, %for.cond.8, %for.cond.9, %for.cond.10, %for.cond.11, %for.cond.12, %for.cond.13, %for.cond.14, %if.end
  %call38 = call fastcc i32 @ge_frombytes_vartime(%struct.ge_p3* noundef nonnull %A, i8* noundef %public_key) #14
  %cmp39.not = icmp eq i32 %call38, 0
  br i1 %cmp39.not, label %if.end42, label %cleanup

if.end42:                                         ; preds = %if.end37
  %arraydecay = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 0
  call fastcc void @fe_neg(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay) #14
  %arraydecay45 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 3, i64 0
  call fastcc void @fe_neg(i32* noundef nonnull %arraydecay45, i32* noundef nonnull %arraydecay45) #14
  %call48 = call %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef %libctx, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* noundef %propq) #13
  %cmp49 = icmp eq %struct.evp_md_st* %call48, null
  br i1 %cmp49, label %cleanup, label %if.end52

if.end52:                                         ; preds = %if.end42
  %call53 = call %struct.evp_md_ctx_st* @EVP_MD_CTX_new() #13
  %cmp54 = icmp eq %struct.evp_md_ctx_st* %call53, null
  br i1 %cmp54, label %err, label %if.end57

if.end57:                                         ; preds = %if.end52
  %call58 = call i32 @EVP_DigestInit_ex(%struct.evp_md_ctx_st* noundef nonnull %call53, %struct.evp_md_st* noundef nonnull %call48, %struct.engine_st* noundef null) #13
  %tobool.not = icmp eq i32 %call58, 0
  br i1 %tobool.not, label %err, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end57
  %call59 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call53, i8* noundef nonnull %signature, i64 noundef 32) #13
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %err, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false
  %call62 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call53, i8* noundef %public_key, i64 noundef 32) #13
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %err, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false61
  %call65 = call i32 @EVP_DigestUpdate(%struct.evp_md_ctx_st* noundef nonnull %call53, i8* noundef %message, i64 noundef %message_len) #13
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %err, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %lor.lhs.false64
  %call69 = call i32 @EVP_DigestFinal_ex(%struct.evp_md_ctx_st* noundef nonnull %call53, i8* noundef nonnull %4, i32* noundef nonnull %sz) #13
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %err, label %if.end72

if.end72:                                         ; preds = %lor.lhs.false67
  call fastcc void @x25519_sc_reduce(i8* noundef nonnull %4) #14
  call fastcc void @ge_double_scalarmult_vartime(%struct.ge_p2* noundef nonnull %R, i8* noundef nonnull %4, %struct.ge_p3* noundef nonnull %A, i8* noundef nonnull %add.ptr) #14
  call fastcc void @ge_tobytes(i8* noundef nonnull %3, %struct.ge_p2* noundef nonnull %R) #14
  %call77 = call i32 @CRYPTO_memcmp(i8* noundef nonnull %3, i8* noundef nonnull %signature, i64 noundef 32) #13
  %cmp78 = icmp eq i32 %call77, 0
  %conv79 = zext i1 %cmp78 to i32
  br label %err

err:                                              ; preds = %if.end57, %lor.lhs.false, %lor.lhs.false61, %lor.lhs.false64, %lor.lhs.false67, %if.end52, %if.end72
  %res.0 = phi i32 [ 0, %if.end52 ], [ %conv79, %if.end72 ], [ 0, %lor.lhs.false67 ], [ 0, %lor.lhs.false64 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false ], [ 0, %if.end57 ]
  call void @EVP_MD_free(%struct.evp_md_st* noundef nonnull %call48) #13
  call void @EVP_MD_CTX_free(%struct.evp_md_ctx_st* noundef %call53) #13
  br label %cleanup

cleanup:                                          ; preds = %for.cond.14, %if.end22, %if.end22.1, %if.end22.2, %if.end22.3, %if.end22.4, %if.end22.5, %if.end22.6, %if.end22.7, %if.end22.8, %if.end22.9, %if.end22.10, %if.end22.11, %if.end22.12, %if.end22.13, %if.end22.14, %if.end42, %if.end37, %if.then6, %entry, %err
  %retval.0 = phi i32 [ %res.0, %err ], [ 0, %entry ], [ 0, %if.then6 ], [ 0, %if.end37 ], [ 0, %if.end42 ], [ 0, %if.end22.14 ], [ 0, %if.end22.13 ], [ 0, %if.end22.12 ], [ 0, %if.end22.11 ], [ 0, %if.end22.10 ], [ 0, %if.end22.9 ], [ 0, %if.end22.8 ], [ 0, %if.end22.7 ], [ 0, %if.end22.6 ], [ 0, %if.end22.5 ], [ 0, %if.end22.4 ], [ 0, %if.end22.3 ], [ 0, %if.end22.2 ], [ 0, %if.end22.1 ], [ 0, %if.end22 ], [ 0, %for.cond.14 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %0) #12
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @ge_frombytes_vartime(%struct.ge_p3* noundef %h, i8* nocapture noundef readonly %s) unnamed_addr #0 {
entry:
  %u = alloca [10 x i32], align 16
  %v = alloca [10 x i32], align 16
  %v3 = alloca [10 x i32], align 16
  %vxx = alloca [10 x i32], align 16
  %check = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %u to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [10 x i32]* %v to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %v3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %3 = bitcast [10 x i32]* %vxx to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  %4 = bitcast [10 x i32]* %check to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #12
  %arraydecay = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 1, i64 0
  tail call fastcc void @fe_frombytes(i32* noundef nonnull %arraydecay, i8* noundef %s) #14
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 2, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds [10 x i32], [10 x i32]* %u, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay2, i32* noundef nonnull %arraydecay) #14
  %arraydecay5 = getelementptr inbounds [10 x i32], [10 x i32]* %v, i64 0, i64 0
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay2, i32* noundef getelementptr inbounds ([10 x i32], [10 x i32]* @d, i64 0, i64 0)) #14
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay2, i32* noundef nonnull %arraydecay2, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay1) #14
  %arraydecay15 = getelementptr inbounds [10 x i32], [10 x i32]* %v3, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay15, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay15, i32* noundef nonnull %arraydecay15, i32* noundef nonnull %arraydecay5) #14
  %arraydecay20 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 0, i64 0
  call fastcc void @fe_sq(i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay15) #14
  call fastcc void @fe_mul(i32* noundef %arraydecay20, i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_mul(i32* noundef %arraydecay20, i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay2) #14
  tail call fastcc void @fe_pow22523(i32* noundef %arraydecay20, i32* noundef %arraydecay20) #14
  call fastcc void @fe_mul(i32* noundef %arraydecay20, i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay15) #14
  call fastcc void @fe_mul(i32* noundef %arraydecay20, i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay2) #14
  %arraydecay46 = getelementptr inbounds [10 x i32], [10 x i32]* %vxx, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay46, i32* noundef %arraydecay20) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay46, i32* noundef nonnull %arraydecay46, i32* noundef nonnull %arraydecay5) #14
  %arraydecay52 = getelementptr inbounds [10 x i32], [10 x i32]* %check, i64 0, i64 0
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay52, i32* noundef nonnull %arraydecay46, i32* noundef nonnull %arraydecay2) #14
  %call = call fastcc i32 @fe_isnonzero(i32* noundef nonnull %arraydecay52) #14
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end67, label %if.then

if.then:                                          ; preds = %entry
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay52, i32* noundef nonnull %arraydecay46, i32* noundef nonnull %arraydecay2) #14
  %call60 = call fastcc i32 @fe_isnonzero(i32* noundef nonnull %arraydecay52) #14
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.end, label %cleanup

if.end:                                           ; preds = %if.then
  tail call fastcc void @fe_mul(i32* noundef %arraydecay20, i32* noundef %arraydecay20, i32* noundef getelementptr inbounds ([10 x i32], [10 x i32]* @sqrtm1, i64 0, i64 0)) #14
  br label %if.end67

if.end67:                                         ; preds = %if.end, %entry
  %call70 = tail call fastcc i32 @fe_isnegative(i32* noundef %arraydecay20) #14
  %arrayidx = getelementptr inbounds i8, i8* %s, i64 31
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !4
  %6 = lshr i8 %5, 7
  %7 = zext i8 %6 to i32
  %cmp.not = icmp eq i32 %call70, %7
  br i1 %cmp.not, label %if.end77, label %if.then72

if.then72:                                        ; preds = %if.end67
  tail call fastcc void @fe_neg(i32* noundef %arraydecay20, i32* noundef %arraydecay20) #14
  br label %if.end77

if.end77:                                         ; preds = %if.then72, %if.end67
  %arraydecay78 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay78, i32* noundef %arraydecay20, i32* noundef nonnull %arraydecay) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then, %if.end77
  %retval.0 = phi i32 [ 0, %if.end77 ], [ -1, %if.then ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe_neg(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f) unnamed_addr #6 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %sub = sub nsw i32 0, %0
  store i32 %sub, i32* %h, align 4, !tbaa !11
  %arrayidx.1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx.1, align 4, !tbaa !11
  %sub.1 = sub nsw i32 0, %1
  %arrayidx2.1 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %sub.1, i32* %arrayidx2.1, align 4, !tbaa !11
  %arrayidx.2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx.2, align 4, !tbaa !11
  %sub.2 = sub nsw i32 0, %2
  %arrayidx2.2 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %sub.2, i32* %arrayidx2.2, align 4, !tbaa !11
  %arrayidx.3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx.3, align 4, !tbaa !11
  %sub.3 = sub nsw i32 0, %3
  %arrayidx2.3 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %sub.3, i32* %arrayidx2.3, align 4, !tbaa !11
  %arrayidx.4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx.4, align 4, !tbaa !11
  %sub.4 = sub nsw i32 0, %4
  %arrayidx2.4 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %sub.4, i32* %arrayidx2.4, align 4, !tbaa !11
  %arrayidx.5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx.5, align 4, !tbaa !11
  %sub.5 = sub nsw i32 0, %5
  %arrayidx2.5 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %sub.5, i32* %arrayidx2.5, align 4, !tbaa !11
  %arrayidx.6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx.6, align 4, !tbaa !11
  %sub.6 = sub nsw i32 0, %6
  %arrayidx2.6 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %sub.6, i32* %arrayidx2.6, align 4, !tbaa !11
  %arrayidx.7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx.7, align 4, !tbaa !11
  %sub.7 = sub nsw i32 0, %7
  %arrayidx2.7 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %sub.7, i32* %arrayidx2.7, align 4, !tbaa !11
  %arrayidx.8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx.8, align 4, !tbaa !11
  %sub.8 = sub nsw i32 0, %8
  %arrayidx2.8 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %sub.8, i32* %arrayidx2.8, align 4, !tbaa !11
  %arrayidx.9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx.9, align 4, !tbaa !11
  %sub.9 = sub nsw i32 0, %9
  %arrayidx2.9 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %sub.9, i32* %arrayidx2.9, align 4, !tbaa !11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_double_scalarmult_vartime(%struct.ge_p2* noundef %r, i8* nocapture noundef readonly %a, %struct.ge_p3* noundef %A, i8* nocapture noundef readonly %b) unnamed_addr #0 {
entry:
  %aslide = alloca [256 x i8], align 16
  %bslide = alloca [256 x i8], align 16
  %Ai = alloca [8 x %struct.ge_cached], align 16
  %t = alloca %struct.ge_p1p1, align 4
  %u = alloca %struct.ge_p3, align 4
  %A2 = alloca %struct.ge_p3, align 4
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #12
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1) #12
  %2 = bitcast [8 x %struct.ge_cached]* %Ai to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280, i8* nonnull %2) #12
  %3 = bitcast %struct.ge_p1p1* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %3) #12
  %4 = bitcast %struct.ge_p3* %u to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %4) #12
  %5 = bitcast %struct.ge_p3* %A2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #12
  call fastcc void @slide(i8* noundef nonnull %0, i8* noundef %a) #14
  call fastcc void @slide(i8* noundef nonnull %1, i8* noundef %b) #14
  %arrayidx = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 0
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx, %struct.ge_p3* noundef %A) #14
  call fastcc void @ge_p3_dbl(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef %A) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %A2, %struct.ge_p1p1* noundef nonnull %t) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx3 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 1
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx3, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx3) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx5 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 2
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx5, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx5) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx7 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 3
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx7, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx7) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx9 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 4
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx9, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx9) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx11 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 5
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx11, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx11) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx13 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 6
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx13, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %A2, %struct.ge_cached* noundef nonnull %arrayidx13) #14
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %arrayidx15 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 7
  call fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef nonnull %arrayidx15, %struct.ge_p3* noundef nonnull %u) #14
  call fastcc void @ge_p2_0(%struct.ge_p2* noundef %r) #14
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %entry
  %i.0107 = phi i32 [ 255, %entry ], [ %dec.1, %for.inc.1 ]
  %idxprom98 = zext i32 %i.0107 to i64
  %arrayidx16 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide, i64 0, i64 %idxprom98
  %6 = load i8, i8* %arrayidx16, align 1, !tbaa !4
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %lor.lhs.false, label %for.end

lor.lhs.false:                                    ; preds = %for.body
  %arrayidx18 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide, i64 0, i64 %idxprom98
  %7 = load i8, i8* %arrayidx18, align 1, !tbaa !4
  %tobool20.not = icmp eq i8 %7, 0
  br i1 %tobool20.not, label %for.inc, label %for.end

for.inc:                                          ; preds = %lor.lhs.false
  %dec = add nsw i32 %i.0107, -1
  %idxprom98.1 = zext i32 %dec to i64
  %arrayidx16.1 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide, i64 0, i64 %idxprom98.1
  %8 = load i8, i8* %arrayidx16.1, align 1, !tbaa !4
  %tobool.not.1 = icmp eq i8 %8, 0
  br i1 %tobool.not.1, label %lor.lhs.false.1, label %for.end

lor.lhs.false.1:                                  ; preds = %for.inc
  %arrayidx18.1 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide, i64 0, i64 %idxprom98.1
  %9 = load i8, i8* %arrayidx18.1, align 1, !tbaa !4
  %tobool20.not.1 = icmp eq i8 %9, 0
  br i1 %tobool20.not.1, label %for.inc.1, label %for.end

for.inc.1:                                        ; preds = %lor.lhs.false.1
  %dec.1 = add nsw i32 %i.0107, -2
  %cmp.not.1 = icmp eq i32 %dec, 0
  br i1 %cmp.not.1, label %for.end80, label %for.body, !llvm.loop !13

for.end:                                          ; preds = %lor.lhs.false.1, %for.inc, %for.body, %lor.lhs.false
  %i.0107.lcssa = phi i32 [ %i.0107, %for.body ], [ %i.0107, %lor.lhs.false ], [ %dec, %for.inc ], [ %dec, %lor.lhs.false.1 ]
  %cmp22108 = icmp sgt i32 %i.0107.lcssa, -1
  br i1 %cmp22108, label %for.body24.preheader, label %for.end80

for.body24.preheader:                             ; preds = %for.end
  %10 = zext i32 %i.0107.lcssa to i64
  br label %for.body24

for.body24:                                       ; preds = %for.body24.preheader, %if.end77
  %indvars.iv = phi i64 [ %10, %for.body24.preheader ], [ %indvars.iv.next, %if.end77 ]
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p2* noundef %r) #14
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide, i64 0, i64 %indvars.iv
  %11 = load i8, i8* %arrayidx26, align 1, !tbaa !4
  %cmp28 = icmp sgt i8 %11, 0
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %for.body24
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %12 = lshr i8 %11, 1
  %idxprom34100 = zext i8 %12 to i64
  %arrayidx35 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 %idxprom34100
  call fastcc void @ge_add(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %u, %struct.ge_cached* noundef nonnull %arrayidx35) #14
  br label %if.end49

if.else:                                          ; preds = %for.body24
  %cmp39 = icmp slt i8 %11, 0
  br i1 %cmp39, label %if.then41, label %if.end49

if.then41:                                        ; preds = %if.else
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %.nonneg104 = sub i8 0, %11
  %13 = lshr i8 %.nonneg104, 1
  %idxprom46106 = zext i8 %13 to i64
  %arrayidx47 = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai, i64 0, i64 %idxprom46106
  call fastcc void @ge_sub(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %u, %struct.ge_cached* noundef nonnull %arrayidx47) #14
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41, %if.then30
  %arrayidx51 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide, i64 0, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx51, align 1, !tbaa !4
  %cmp53 = icmp sgt i8 %14, 0
  br i1 %cmp53, label %if.then55, label %if.else62

if.then55:                                        ; preds = %if.end49
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %15 = lshr i8 %14, 1
  %idxprom60101 = zext i8 %15 to i64
  %arrayidx61 = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom60101
  call fastcc void @ge_madd(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %u, %struct.ge_precomp* noundef nonnull %arrayidx61) #14
  br label %if.end77

if.else62:                                        ; preds = %if.end49
  %cmp66 = icmp slt i8 %14, 0
  br i1 %cmp66, label %if.then68, label %if.end77

if.then68:                                        ; preds = %if.else62
  call fastcc void @ge_p1p1_to_p3(%struct.ge_p3* noundef nonnull %u, %struct.ge_p1p1* noundef nonnull %t) #14
  %.nonneg = sub i8 0, %14
  %16 = lshr i8 %.nonneg, 1
  %idxprom74103 = zext i8 %16 to i64
  %arrayidx75 = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom74103
  call fastcc void @ge_msub(%struct.ge_p1p1* noundef nonnull %t, %struct.ge_p3* noundef nonnull %u, %struct.ge_precomp* noundef nonnull %arrayidx75) #14
  br label %if.end77

if.end77:                                         ; preds = %if.else62, %if.then68, %if.then55
  call fastcc void @ge_p1p1_to_p2(%struct.ge_p2* noundef %r, %struct.ge_p1p1* noundef nonnull %t) #14
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %cmp22 = icmp sgt i64 %indvars.iv, 0
  br i1 %cmp22, label %for.body24, label %for.end80, !llvm.loop !14

for.end80:                                        ; preds = %for.inc.1, %if.end77, %for.end
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1280, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #12
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_tobytes(i8* noundef %s, %struct.ge_p2* nocapture noundef readonly %h) unnamed_addr #4 {
entry:
  %recip = alloca [10 x i32], align 16
  %x = alloca [10 x i32], align 16
  %y = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %recip to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [10 x i32]* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %y to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %recip, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 2, i64 0
  call fastcc void @fe_invert(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds [10 x i32], [10 x i32]* %x, i64 0, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay2, i32* noundef %arraydecay3, i32* noundef nonnull %arraydecay) #14
  %arraydecay5 = getelementptr inbounds [10 x i32], [10 x i32]* %y, i64 0, i64 0
  %arraydecay6 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay6, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_tobytes(i8* noundef %s, i32* noundef nonnull %arraydecay5) #14
  %call = call fastcc i32 @fe_isnegative(i32* noundef nonnull %arraydecay2) #14
  %arrayidx = getelementptr inbounds i8, i8* %s, i64 31
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !4
  %call.tr = trunc i32 %call to i8
  %4 = shl i8 %call.tr, 7
  %conv10 = xor i8 %4, %3
  store i8 %conv10, i8* %arrayidx, align 1, !tbaa !4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

declare i32 @CRYPTO_memcmp(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define i32 @ossl_ed25519_public_from_private(%struct.ossl_lib_ctx_st* noundef %ctx, i8* noundef %out_public_key, i8* noundef %private_key, i8* noundef %propq) local_unnamed_addr #0 {
entry:
  %az = alloca [64 x i8], align 16
  %A = alloca %struct.ge_p3, align 4
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #12
  %1 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #12
  %call = tail call %struct.evp_md_st* @EVP_MD_fetch(%struct.ossl_lib_ctx_st* noundef %ctx, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* noundef %propq) #13
  %cmp = icmp eq %struct.evp_md_st* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call i32 @EVP_Digest(i8* noundef %private_key, i64 noundef 32, i8* noundef nonnull %0, i32* noundef null, %struct.evp_md_st* noundef nonnull %call, %struct.engine_st* noundef null) #13
  call void @EVP_MD_free(%struct.evp_md_st* noundef nonnull %call) #13
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup.sink.split, label %if.end4

if.end4:                                          ; preds = %if.end
  %2 = load i8, i8* %0, align 16, !tbaa !4
  %3 = and i8 %2, -8
  store i8 %3, i8* %0, align 16, !tbaa !4
  %arrayidx6 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 31
  %4 = load i8, i8* %arrayidx6, align 1, !tbaa !4
  %5 = and i8 %4, 63
  %6 = or i8 %5, 64
  store i8 %6, i8* %arrayidx6, align 1, !tbaa !4
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* noundef nonnull %A, i8* noundef nonnull %0) #14
  call fastcc void @ge_p3_tobytes(i8* noundef %out_public_key, %struct.ge_p3* noundef nonnull %A) #14
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end, %if.end4
  %retval.0.ph = phi i32 [ 1, %if.end4 ], [ 0, %if.end ]
  call void @OPENSSL_cleanse(i8* noundef nonnull %0, i64 noundef 64) #13
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %retval.0.ph, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #12
  ret i32 %retval.0
}

declare i32 @EVP_Digest(i8* noundef, i64 noundef, i8* noundef, i32* noundef, %struct.evp_md_st* noundef, %struct.engine_st* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define i32 @ossl_x25519(i8* noundef %out_shared_key, i8* noundef %private_key, i8* nocapture noundef readonly %peer_public_value) local_unnamed_addr #0 {
entry:
  tail call fastcc void @x25519_scalar_mult(i8* noundef %out_shared_key, i8* noundef %private_key, i8* noundef %peer_public_value) #14
  %call = tail call i32 @CRYPTO_memcmp(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @ossl_x25519.kZeros, i64 0, i64 0), i8* noundef %out_shared_key, i64 noundef 32) #13
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @x25519_scalar_mult(i8* noundef %out, i8* noundef %scalar, i8* nocapture noundef readonly %point) unnamed_addr #0 {
entry:
  %x1 = alloca [5 x i64], align 16
  %x2 = alloca [5 x i64], align 16
  %z2 = alloca [5 x i64], align 16
  %x3 = alloca [5 x i64], align 16
  %z3 = alloca [5 x i64], align 16
  %tmp0 = alloca [5 x i64], align 16
  %tmp1 = alloca [5 x i64], align 16
  %e = alloca [32 x i8], align 16
  %0 = bitcast [5 x i64]* %x1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [5 x i64]* %x2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [5 x i64]* %z2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %3 = bitcast [5 x i64]* %x3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  %4 = bitcast [5 x i64]* %z3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #12
  %5 = bitcast [5 x i64]* %tmp0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #12
  %6 = bitcast [5 x i64]* %tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #12
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %call = tail call i32 @x25519_fe64_eligible() #13
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @x25519_scalar_mulx(i8* noundef %out, i8* noundef %scalar, i8* noundef %point) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %scalar, i64 noundef 32) #13
  %8 = load i8, i8* %7, align 16, !tbaa !4
  %9 = and i8 %8, -8
  store i8 %9, i8* %7, align 16, !tbaa !4
  %arrayidx3 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 31
  %10 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %11 = and i8 %10, 63
  %12 = or i8 %11, 64
  store i8 %12, i8* %arrayidx3, align 1, !tbaa !4
  %arraydecay10 = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 0
  call fastcc void @fe51_frombytes(i64* noundef nonnull %arraydecay10, i8* noundef %point) #14
  %arraydecay11 = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 0
  call fastcc void @fe51_1(i64* noundef nonnull %arraydecay11) #14
  %arraydecay12 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 0
  call fastcc void @fe51_0(i64* noundef nonnull %arraydecay12) #14
  %arraydecay13 = getelementptr inbounds [5 x i64], [5 x i64]* %x3, i64 0, i64 0
  call fastcc void @fe51_copy(i64* noundef nonnull %arraydecay13, i64* noundef nonnull %arraydecay10) #14
  %arraydecay15 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 0
  call fastcc void @fe51_1(i64* noundef nonnull %arraydecay15) #14
  %arraydecay25 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 0
  %arraydecay28 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %if.end, %for.body
  %swap.0104 = phi i32 [ 0, %if.end ], [ %and20, %for.body ]
  %pos.0103 = phi i32 [ 254, %if.end ], [ %dec, %for.body ]
  %div102 = lshr i32 %pos.0103, 3
  %13 = zext i32 %div102 to i64
  %arrayidx17 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 %13
  %14 = load i8, i8* %arrayidx17, align 1, !tbaa !4
  %conv18 = zext i8 %14 to i32
  %and19 = and i32 %pos.0103, 7
  %shr = lshr i32 %conv18, %and19
  %and20 = and i32 %shr, 1
  %xor = xor i32 %and20, %swap.0104
  call fastcc void @fe51_cswap(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay13, i32 noundef %xor) #14
  call fastcc void @fe51_cswap(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay15, i32 noundef %xor) #14
  call fastcc void @fe51_sub(i64* noundef nonnull %arraydecay25, i64* noundef nonnull %arraydecay13, i64* noundef nonnull %arraydecay15) #14
  call fastcc void @fe51_sub(i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay12) #14
  call fastcc void @fe51_add(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay12) #14
  call fastcc void @fe51_add(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay13, i64* noundef nonnull %arraydecay15) #14
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay15, i64* noundef nonnull %arraydecay25, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay28) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay25, i64* noundef nonnull %arraydecay28) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay11) #13
  call fastcc void @fe51_add(i64* noundef nonnull %arraydecay13, i64* noundef nonnull %arraydecay15, i64* noundef nonnull %arraydecay12) #14
  call fastcc void @fe51_sub(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay15, i64* noundef nonnull %arraydecay12) #14
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay25) #13
  call fastcc void @fe51_sub(i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay25) #14
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay12) #13
  call void @x25519_fe51_mul121666(i64* noundef nonnull %arraydecay15, i64* noundef nonnull %arraydecay28) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay13, i64* noundef nonnull %arraydecay13) #13
  call fastcc void @fe51_add(i64* noundef nonnull %arraydecay25, i64* noundef nonnull %arraydecay25, i64* noundef nonnull %arraydecay15) #14
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay15, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay12) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay28, i64* noundef nonnull %arraydecay25) #13
  %dec = add nsw i32 %pos.0103, -1
  %cmp.not = icmp eq i32 %pos.0103, 0
  br i1 %cmp.not, label %for.end, label %for.body, !llvm.loop !15

for.end:                                          ; preds = %for.body
  call fastcc void @fe51_invert(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay12) #14
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay12) #13
  call fastcc void @fe51_tobytes(i8* noundef %out, i64* noundef nonnull %arraydecay11) #14
  call void @OPENSSL_cleanse(i8* noundef nonnull %7, i64 noundef 32) #13
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @ossl_x25519_public_from_private(i8* noundef %out_public_value, i8* noundef %private_key) local_unnamed_addr #0 {
entry:
  %e = alloca [32 x i8], align 16
  %A = alloca %struct.ge_p3, align 4
  %zplusy = alloca [10 x i32], align 16
  %zminusy = alloca [10 x i32], align 16
  %zminusy_inv = alloca [10 x i32], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #12
  %1 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %zplusy to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %3 = bitcast [10 x i32]* %zminusy to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  %4 = bitcast [10 x i32]* %zminusy_inv to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #12
  %call = call i8* @memcpy(i8* noundef nonnull %0, i8* noundef %private_key, i64 noundef 32) #13
  %5 = load i8, i8* %0, align 16, !tbaa !4
  %6 = and i8 %5, -8
  store i8 %6, i8* %0, align 16, !tbaa !4
  %arrayidx2 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 31
  %7 = load i8, i8* %arrayidx2, align 1, !tbaa !4
  %8 = and i8 %7, 63
  %9 = or i8 %8, 64
  store i8 %9, i8* %arrayidx2, align 1, !tbaa !4
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* noundef nonnull %A, i8* noundef nonnull %0) #14
  %arraydecay10 = getelementptr inbounds [10 x i32], [10 x i32]* %zplusy, i64 0, i64 0
  %arraydecay11 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 0
  %arraydecay12 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 0
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay11, i32* noundef nonnull %arraydecay12) #14
  %arraydecay13 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy, i64 0, i64 0
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay13, i32* noundef nonnull %arraydecay11, i32* noundef nonnull %arraydecay12) #14
  %arraydecay18 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy_inv, i64 0, i64 0
  call fastcc void @fe_invert(i32* noundef nonnull %arraydecay18, i32* noundef nonnull %arraydecay13) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay18) #14
  call fastcc void @fe_tobytes(i8* noundef %out_public_value, i32* noundef nonnull %arraydecay10) #14
  call void @OPENSSL_cleanse(i8* noundef nonnull %0, i64 noundef 32) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #12
  ret void
}

; Function Attrs: nounwind
declare i8* @memcpy(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe_add(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f, i32* nocapture noundef readonly %g) unnamed_addr #6 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %1 = load i32, i32* %g, align 4, !tbaa !11
  %add = add nsw i32 %1, %0
  store i32 %add, i32* %h, align 4, !tbaa !11
  %arrayidx.1 = getelementptr inbounds i32, i32* %f, i64 1
  %2 = load i32, i32* %arrayidx.1, align 4, !tbaa !11
  %arrayidx2.1 = getelementptr inbounds i32, i32* %g, i64 1
  %3 = load i32, i32* %arrayidx2.1, align 4, !tbaa !11
  %add.1 = add nsw i32 %3, %2
  %arrayidx4.1 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %add.1, i32* %arrayidx4.1, align 4, !tbaa !11
  %arrayidx.2 = getelementptr inbounds i32, i32* %f, i64 2
  %4 = load i32, i32* %arrayidx.2, align 4, !tbaa !11
  %arrayidx2.2 = getelementptr inbounds i32, i32* %g, i64 2
  %5 = load i32, i32* %arrayidx2.2, align 4, !tbaa !11
  %add.2 = add nsw i32 %5, %4
  %arrayidx4.2 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %add.2, i32* %arrayidx4.2, align 4, !tbaa !11
  %arrayidx.3 = getelementptr inbounds i32, i32* %f, i64 3
  %6 = load i32, i32* %arrayidx.3, align 4, !tbaa !11
  %arrayidx2.3 = getelementptr inbounds i32, i32* %g, i64 3
  %7 = load i32, i32* %arrayidx2.3, align 4, !tbaa !11
  %add.3 = add nsw i32 %7, %6
  %arrayidx4.3 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %add.3, i32* %arrayidx4.3, align 4, !tbaa !11
  %arrayidx.4 = getelementptr inbounds i32, i32* %f, i64 4
  %8 = load i32, i32* %arrayidx.4, align 4, !tbaa !11
  %arrayidx2.4 = getelementptr inbounds i32, i32* %g, i64 4
  %9 = load i32, i32* %arrayidx2.4, align 4, !tbaa !11
  %add.4 = add nsw i32 %9, %8
  %arrayidx4.4 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %add.4, i32* %arrayidx4.4, align 4, !tbaa !11
  %arrayidx.5 = getelementptr inbounds i32, i32* %f, i64 5
  %10 = load i32, i32* %arrayidx.5, align 4, !tbaa !11
  %arrayidx2.5 = getelementptr inbounds i32, i32* %g, i64 5
  %11 = load i32, i32* %arrayidx2.5, align 4, !tbaa !11
  %add.5 = add nsw i32 %11, %10
  %arrayidx4.5 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %add.5, i32* %arrayidx4.5, align 4, !tbaa !11
  %arrayidx.6 = getelementptr inbounds i32, i32* %f, i64 6
  %12 = load i32, i32* %arrayidx.6, align 4, !tbaa !11
  %arrayidx2.6 = getelementptr inbounds i32, i32* %g, i64 6
  %13 = load i32, i32* %arrayidx2.6, align 4, !tbaa !11
  %add.6 = add nsw i32 %13, %12
  %arrayidx4.6 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %add.6, i32* %arrayidx4.6, align 4, !tbaa !11
  %arrayidx.7 = getelementptr inbounds i32, i32* %f, i64 7
  %14 = load i32, i32* %arrayidx.7, align 4, !tbaa !11
  %arrayidx2.7 = getelementptr inbounds i32, i32* %g, i64 7
  %15 = load i32, i32* %arrayidx2.7, align 4, !tbaa !11
  %add.7 = add nsw i32 %15, %14
  %arrayidx4.7 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %add.7, i32* %arrayidx4.7, align 4, !tbaa !11
  %arrayidx.8 = getelementptr inbounds i32, i32* %f, i64 8
  %16 = load i32, i32* %arrayidx.8, align 4, !tbaa !11
  %arrayidx2.8 = getelementptr inbounds i32, i32* %g, i64 8
  %17 = load i32, i32* %arrayidx2.8, align 4, !tbaa !11
  %add.8 = add nsw i32 %17, %16
  %arrayidx4.8 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %add.8, i32* %arrayidx4.8, align 4, !tbaa !11
  %arrayidx.9 = getelementptr inbounds i32, i32* %f, i64 9
  %18 = load i32, i32* %arrayidx.9, align 4, !tbaa !11
  %arrayidx2.9 = getelementptr inbounds i32, i32* %g, i64 9
  %19 = load i32, i32* %arrayidx2.9, align 4, !tbaa !11
  %add.9 = add nsw i32 %19, %18
  %arrayidx4.9 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %add.9, i32* %arrayidx4.9, align 4, !tbaa !11
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe_sub(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f, i32* nocapture noundef readonly %g) unnamed_addr #6 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %1 = load i32, i32* %g, align 4, !tbaa !11
  %sub = sub nsw i32 %0, %1
  store i32 %sub, i32* %h, align 4, !tbaa !11
  %arrayidx.1 = getelementptr inbounds i32, i32* %f, i64 1
  %2 = load i32, i32* %arrayidx.1, align 4, !tbaa !11
  %arrayidx2.1 = getelementptr inbounds i32, i32* %g, i64 1
  %3 = load i32, i32* %arrayidx2.1, align 4, !tbaa !11
  %sub.1 = sub nsw i32 %2, %3
  %arrayidx4.1 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %sub.1, i32* %arrayidx4.1, align 4, !tbaa !11
  %arrayidx.2 = getelementptr inbounds i32, i32* %f, i64 2
  %4 = load i32, i32* %arrayidx.2, align 4, !tbaa !11
  %arrayidx2.2 = getelementptr inbounds i32, i32* %g, i64 2
  %5 = load i32, i32* %arrayidx2.2, align 4, !tbaa !11
  %sub.2 = sub nsw i32 %4, %5
  %arrayidx4.2 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %sub.2, i32* %arrayidx4.2, align 4, !tbaa !11
  %arrayidx.3 = getelementptr inbounds i32, i32* %f, i64 3
  %6 = load i32, i32* %arrayidx.3, align 4, !tbaa !11
  %arrayidx2.3 = getelementptr inbounds i32, i32* %g, i64 3
  %7 = load i32, i32* %arrayidx2.3, align 4, !tbaa !11
  %sub.3 = sub nsw i32 %6, %7
  %arrayidx4.3 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %sub.3, i32* %arrayidx4.3, align 4, !tbaa !11
  %arrayidx.4 = getelementptr inbounds i32, i32* %f, i64 4
  %8 = load i32, i32* %arrayidx.4, align 4, !tbaa !11
  %arrayidx2.4 = getelementptr inbounds i32, i32* %g, i64 4
  %9 = load i32, i32* %arrayidx2.4, align 4, !tbaa !11
  %sub.4 = sub nsw i32 %8, %9
  %arrayidx4.4 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %sub.4, i32* %arrayidx4.4, align 4, !tbaa !11
  %arrayidx.5 = getelementptr inbounds i32, i32* %f, i64 5
  %10 = load i32, i32* %arrayidx.5, align 4, !tbaa !11
  %arrayidx2.5 = getelementptr inbounds i32, i32* %g, i64 5
  %11 = load i32, i32* %arrayidx2.5, align 4, !tbaa !11
  %sub.5 = sub nsw i32 %10, %11
  %arrayidx4.5 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %sub.5, i32* %arrayidx4.5, align 4, !tbaa !11
  %arrayidx.6 = getelementptr inbounds i32, i32* %f, i64 6
  %12 = load i32, i32* %arrayidx.6, align 4, !tbaa !11
  %arrayidx2.6 = getelementptr inbounds i32, i32* %g, i64 6
  %13 = load i32, i32* %arrayidx2.6, align 4, !tbaa !11
  %sub.6 = sub nsw i32 %12, %13
  %arrayidx4.6 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %sub.6, i32* %arrayidx4.6, align 4, !tbaa !11
  %arrayidx.7 = getelementptr inbounds i32, i32* %f, i64 7
  %14 = load i32, i32* %arrayidx.7, align 4, !tbaa !11
  %arrayidx2.7 = getelementptr inbounds i32, i32* %g, i64 7
  %15 = load i32, i32* %arrayidx2.7, align 4, !tbaa !11
  %sub.7 = sub nsw i32 %14, %15
  %arrayidx4.7 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %sub.7, i32* %arrayidx4.7, align 4, !tbaa !11
  %arrayidx.8 = getelementptr inbounds i32, i32* %f, i64 8
  %16 = load i32, i32* %arrayidx.8, align 4, !tbaa !11
  %arrayidx2.8 = getelementptr inbounds i32, i32* %g, i64 8
  %17 = load i32, i32* %arrayidx2.8, align 4, !tbaa !11
  %sub.8 = sub nsw i32 %16, %17
  %arrayidx4.8 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %sub.8, i32* %arrayidx4.8, align 4, !tbaa !11
  %arrayidx.9 = getelementptr inbounds i32, i32* %f, i64 9
  %18 = load i32, i32* %arrayidx.9, align 4, !tbaa !11
  %arrayidx2.9 = getelementptr inbounds i32, i32* %g, i64 9
  %19 = load i32, i32* %arrayidx2.9, align 4, !tbaa !11
  %sub.9 = sub nsw i32 %18, %19
  %arrayidx4.9 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %sub.9, i32* %arrayidx4.9, align 4, !tbaa !11
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @fe_invert(i32* nocapture noundef writeonly %out, i32* nocapture noundef readonly %z) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %t1 = alloca [10 x i32], align 16
  %t2 = alloca [10 x i32], align 16
  %t3 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [10 x i32]* %t1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %t2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %3 = bitcast [10 x i32]* %t3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay, i32* noundef %z) #14
  %arraydecay1 = getelementptr inbounds [10 x i32], [10 x i32]* %t1, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef %z, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1) #14
  %arraydecay10 = getelementptr inbounds [10 x i32], [10 x i32]* %t2, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  %arraydecay35 = getelementptr inbounds [10 x i32], [10 x i32]* %t3, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  br label %for.body63

for.body63:                                       ; preds = %entry, %for.body63
  %i.4131 = phi i32 [ 1, %entry ], [ %inc67, %for.body63 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  %inc67 = add nuw nsw i32 %i.4131, 1
  %exitcond.not = icmp eq i32 %inc67, 50
  br i1 %exitcond.not, label %for.end68, label %for.body63, !llvm.loop !16

for.end68:                                        ; preds = %for.body63
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay10) #14
  br label %for.body76

for.body76:                                       ; preds = %for.end68, %for.body76
  %i.5132 = phi i32 [ 1, %for.end68 ], [ %inc80, %for.body76 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay35) #14
  %inc80 = add nuw nsw i32 %i.5132, 1
  %exitcond135.not = icmp eq i32 %inc80, 100
  br i1 %exitcond135.not, label %for.end81, label %for.body76, !llvm.loop !17

for.end81:                                        ; preds = %for.body76
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay35, i32* noundef nonnull %arraydecay10) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  br label %for.body89

for.body89:                                       ; preds = %for.end81, %for.body89
  %i.6133 = phi i32 [ 1, %for.end81 ], [ %inc93, %for.body89 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay10) #14
  %inc93 = add nuw nsw i32 %i.6133, 1
  %exitcond136.not = icmp eq i32 %inc93, 50
  br i1 %exitcond136.not, label %for.end94, label %for.body89, !llvm.loop !18

for.end94:                                        ; preds = %for.body89
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef %out, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe_mul(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f, i32* nocapture noundef readonly %g) unnamed_addr #3 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %arrayidx1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !11
  %arrayidx2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !11
  %arrayidx3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !11
  %arrayidx6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !11
  %arrayidx7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !11
  %arrayidx8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !11
  %arrayidx9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !11
  %10 = load i32, i32* %g, align 4, !tbaa !11
  %arrayidx11 = getelementptr inbounds i32, i32* %g, i64 1
  %11 = load i32, i32* %arrayidx11, align 4, !tbaa !11
  %arrayidx12 = getelementptr inbounds i32, i32* %g, i64 2
  %12 = load i32, i32* %arrayidx12, align 4, !tbaa !11
  %arrayidx13 = getelementptr inbounds i32, i32* %g, i64 3
  %13 = load i32, i32* %arrayidx13, align 4, !tbaa !11
  %arrayidx14 = getelementptr inbounds i32, i32* %g, i64 4
  %14 = load i32, i32* %arrayidx14, align 4, !tbaa !11
  %arrayidx15 = getelementptr inbounds i32, i32* %g, i64 5
  %15 = load i32, i32* %arrayidx15, align 4, !tbaa !11
  %arrayidx16 = getelementptr inbounds i32, i32* %g, i64 6
  %16 = load i32, i32* %arrayidx16, align 4, !tbaa !11
  %arrayidx17 = getelementptr inbounds i32, i32* %g, i64 7
  %17 = load i32, i32* %arrayidx17, align 4, !tbaa !11
  %arrayidx18 = getelementptr inbounds i32, i32* %g, i64 8
  %18 = load i32, i32* %arrayidx18, align 4, !tbaa !11
  %arrayidx19 = getelementptr inbounds i32, i32* %g, i64 9
  %19 = load i32, i32* %arrayidx19, align 4, !tbaa !11
  %mul = mul nsw i32 %11, 19
  %mul20 = mul nsw i32 %12, 19
  %mul21 = mul nsw i32 %13, 19
  %mul22 = mul nsw i32 %14, 19
  %mul23 = mul nsw i32 %15, 19
  %mul24 = mul nsw i32 %16, 19
  %mul25 = mul nsw i32 %17, 19
  %mul26 = mul nsw i32 %18, 19
  %mul27 = mul nsw i32 %19, 19
  %mul28 = shl nsw i32 %1, 1
  %mul29 = shl nsw i32 %3, 1
  %mul30 = shl nsw i32 %5, 1
  %mul31 = shl nsw i32 %7, 1
  %mul32 = shl nsw i32 %9, 1
  %conv = sext i32 %0 to i64
  %conv33 = sext i32 %10 to i64
  %mul34 = mul nsw i64 %conv33, %conv
  %conv36 = sext i32 %11 to i64
  %mul37 = mul nsw i64 %conv36, %conv
  %conv39 = sext i32 %12 to i64
  %mul40 = mul nsw i64 %conv39, %conv
  %conv42 = sext i32 %13 to i64
  %mul43 = mul nsw i64 %conv42, %conv
  %conv45 = sext i32 %14 to i64
  %mul46 = mul nsw i64 %conv45, %conv
  %conv48 = sext i32 %15 to i64
  %mul49 = mul nsw i64 %conv48, %conv
  %conv51 = sext i32 %16 to i64
  %mul52 = mul nsw i64 %conv51, %conv
  %conv54 = sext i32 %17 to i64
  %mul55 = mul nsw i64 %conv54, %conv
  %conv57 = sext i32 %18 to i64
  %mul58 = mul nsw i64 %conv57, %conv
  %conv60 = sext i32 %19 to i64
  %mul61 = mul nsw i64 %conv60, %conv
  %conv62 = sext i32 %1 to i64
  %mul64 = mul nsw i64 %conv33, %conv62
  %conv65 = sext i32 %mul28 to i64
  %mul67 = mul nsw i64 %conv36, %conv65
  %mul70 = mul nsw i64 %conv39, %conv62
  %mul73 = mul nsw i64 %conv42, %conv65
  %mul76 = mul nsw i64 %conv45, %conv62
  %mul79 = mul nsw i64 %conv48, %conv65
  %mul82 = mul nsw i64 %conv51, %conv62
  %mul85 = mul nsw i64 %conv54, %conv65
  %mul88 = mul nsw i64 %conv57, %conv62
  %conv90 = sext i32 %mul27 to i64
  %mul91 = mul nsw i64 %conv90, %conv65
  %conv92 = sext i32 %2 to i64
  %mul94 = mul nsw i64 %conv33, %conv92
  %mul97 = mul nsw i64 %conv36, %conv92
  %mul100 = mul nsw i64 %conv39, %conv92
  %mul103 = mul nsw i64 %conv42, %conv92
  %mul106 = mul nsw i64 %conv45, %conv92
  %mul109 = mul nsw i64 %conv48, %conv92
  %mul112 = mul nsw i64 %conv51, %conv92
  %mul115 = mul nsw i64 %conv54, %conv92
  %conv117 = sext i32 %mul26 to i64
  %mul118 = mul nsw i64 %conv117, %conv92
  %mul121 = mul nsw i64 %conv90, %conv92
  %conv122 = sext i32 %3 to i64
  %mul124 = mul nsw i64 %conv33, %conv122
  %conv125 = sext i32 %mul29 to i64
  %mul127 = mul nsw i64 %conv36, %conv125
  %mul130 = mul nsw i64 %conv39, %conv122
  %mul133 = mul nsw i64 %conv42, %conv125
  %mul136 = mul nsw i64 %conv45, %conv122
  %mul139 = mul nsw i64 %conv48, %conv125
  %mul142 = mul nsw i64 %conv51, %conv122
  %conv144 = sext i32 %mul25 to i64
  %mul145 = mul nsw i64 %conv144, %conv125
  %mul148 = mul nsw i64 %conv117, %conv122
  %mul151 = mul nsw i64 %conv90, %conv125
  %conv152 = sext i32 %4 to i64
  %mul154 = mul nsw i64 %conv33, %conv152
  %mul157 = mul nsw i64 %conv36, %conv152
  %mul160 = mul nsw i64 %conv39, %conv152
  %mul163 = mul nsw i64 %conv42, %conv152
  %mul166 = mul nsw i64 %conv45, %conv152
  %mul169 = mul nsw i64 %conv48, %conv152
  %conv171 = sext i32 %mul24 to i64
  %mul172 = mul nsw i64 %conv171, %conv152
  %mul175 = mul nsw i64 %conv144, %conv152
  %mul178 = mul nsw i64 %conv117, %conv152
  %mul181 = mul nsw i64 %conv90, %conv152
  %conv182 = sext i32 %5 to i64
  %mul184 = mul nsw i64 %conv33, %conv182
  %conv185 = sext i32 %mul30 to i64
  %mul187 = mul nsw i64 %conv36, %conv185
  %mul190 = mul nsw i64 %conv39, %conv182
  %mul193 = mul nsw i64 %conv42, %conv185
  %mul196 = mul nsw i64 %conv45, %conv182
  %conv198 = sext i32 %mul23 to i64
  %mul199 = mul nsw i64 %conv198, %conv185
  %mul202 = mul nsw i64 %conv171, %conv182
  %mul205 = mul nsw i64 %conv144, %conv185
  %mul208 = mul nsw i64 %conv117, %conv182
  %mul211 = mul nsw i64 %conv90, %conv185
  %conv212 = sext i32 %6 to i64
  %mul214 = mul nsw i64 %conv33, %conv212
  %mul217 = mul nsw i64 %conv36, %conv212
  %mul220 = mul nsw i64 %conv39, %conv212
  %mul223 = mul nsw i64 %conv42, %conv212
  %conv225 = sext i32 %mul22 to i64
  %mul226 = mul nsw i64 %conv225, %conv212
  %mul229 = mul nsw i64 %conv198, %conv212
  %mul232 = mul nsw i64 %conv171, %conv212
  %mul235 = mul nsw i64 %conv144, %conv212
  %mul238 = mul nsw i64 %conv117, %conv212
  %mul241 = mul nsw i64 %conv90, %conv212
  %conv242 = sext i32 %7 to i64
  %mul244 = mul nsw i64 %conv33, %conv242
  %conv245 = sext i32 %mul31 to i64
  %mul247 = mul nsw i64 %conv36, %conv245
  %mul250 = mul nsw i64 %conv39, %conv242
  %conv252 = sext i32 %mul21 to i64
  %mul253 = mul nsw i64 %conv252, %conv245
  %mul256 = mul nsw i64 %conv225, %conv242
  %mul259 = mul nsw i64 %conv198, %conv245
  %mul262 = mul nsw i64 %conv171, %conv242
  %mul265 = mul nsw i64 %conv144, %conv245
  %mul268 = mul nsw i64 %conv117, %conv242
  %mul271 = mul nsw i64 %conv90, %conv245
  %conv272 = sext i32 %8 to i64
  %mul274 = mul nsw i64 %conv33, %conv272
  %mul277 = mul nsw i64 %conv36, %conv272
  %conv279 = sext i32 %mul20 to i64
  %mul280 = mul nsw i64 %conv279, %conv272
  %mul283 = mul nsw i64 %conv252, %conv272
  %mul286 = mul nsw i64 %conv225, %conv272
  %mul289 = mul nsw i64 %conv198, %conv272
  %mul292 = mul nsw i64 %conv171, %conv272
  %mul295 = mul nsw i64 %conv144, %conv272
  %mul298 = mul nsw i64 %conv117, %conv272
  %mul301 = mul nsw i64 %conv90, %conv272
  %conv302 = sext i32 %9 to i64
  %mul304 = mul nsw i64 %conv33, %conv302
  %conv305 = sext i32 %mul32 to i64
  %conv306 = sext i32 %mul to i64
  %mul307 = mul nsw i64 %conv306, %conv305
  %mul310 = mul nsw i64 %conv279, %conv302
  %mul313 = mul nsw i64 %conv252, %conv305
  %mul316 = mul nsw i64 %conv225, %conv302
  %mul319 = mul nsw i64 %conv198, %conv305
  %mul322 = mul nsw i64 %conv171, %conv302
  %mul325 = mul nsw i64 %conv144, %conv305
  %mul328 = mul nsw i64 %conv117, %conv302
  %mul331 = mul nsw i64 %conv90, %conv305
  %add = add i64 %mul307, %mul34
  %add332 = add i64 %add, %mul280
  %add333 = add i64 %add332, %mul253
  %add334 = add i64 %add333, %mul226
  %add335 = add i64 %add334, %mul199
  %add336 = add i64 %add335, %mul172
  %add337 = add i64 %add336, %mul145
  %add338 = add i64 %add337, %mul118
  %add339 = add i64 %add338, %mul91
  %add340 = add nsw i64 %mul37, %mul64
  %add367 = add i64 %mul127, %mul154
  %add368 = add i64 %add367, %mul100
  %add369 = add i64 %add368, %mul73
  %add370 = add i64 %add369, %mul46
  %add371 = add i64 %add370, %mul319
  %add372 = add i64 %add371, %mul292
  %add373 = add i64 %add372, %mul265
  %add374 = add i64 %add373, %mul238
  %add375 = add i64 %add374, %mul211
  %add421 = add nsw i64 %add339, 33554432
  %shr = ashr i64 %add421, 26
  %add341 = add i64 %add340, %mul310
  %add342 = add i64 %add341, %mul283
  %add343 = add i64 %add342, %mul256
  %add344 = add i64 %add343, %mul229
  %add345 = add i64 %add344, %mul202
  %add346 = add i64 %add345, %mul175
  %add347 = add i64 %add346, %mul148
  %add348 = add i64 %add347, %mul121
  %add422 = add i64 %add348, %shr
  %and = and i64 %add421, -67108864
  %sub = sub nsw i64 %add339, %and
  %add423 = add nsw i64 %add375, 33554432
  %shr424 = ashr i64 %add423, 26
  %add376 = add i64 %mul157, %mul184
  %add377 = add i64 %add376, %mul130
  %add378 = add i64 %add377, %mul103
  %add379 = add i64 %add378, %mul76
  %add380 = add i64 %add379, %mul49
  %add381 = add i64 %add380, %mul322
  %add382 = add i64 %add381, %mul295
  %add383 = add i64 %add382, %mul268
  %add384 = add i64 %add383, %mul241
  %add425 = add i64 %add384, %shr424
  %and426 = and i64 %add423, -67108864
  %sub427 = sub nsw i64 %add375, %and426
  %add428 = add nsw i64 %add422, 16777216
  %shr429 = ashr i64 %add428, 25
  %add349 = add i64 %mul67, %mul94
  %add350 = add i64 %add349, %mul40
  %add351 = add i64 %add350, %mul313
  %add352 = add i64 %add351, %mul286
  %add353 = add i64 %add352, %mul259
  %add354 = add i64 %add353, %mul232
  %add355 = add i64 %add354, %mul205
  %add356 = add i64 %add355, %mul178
  %add357 = add i64 %add356, %mul151
  %add430 = add i64 %add357, %shr429
  %and431 = and i64 %add428, 4261412864
  %sub432 = sub i64 %add422, %and431
  %add433 = add nsw i64 %add425, 16777216
  %shr434 = ashr i64 %add433, 25
  %add385 = add i64 %mul187, %mul214
  %add386 = add i64 %add385, %mul160
  %add387 = add i64 %add386, %mul133
  %add388 = add i64 %add387, %mul106
  %add389 = add i64 %add388, %mul79
  %add390 = add i64 %add389, %mul52
  %add391 = add i64 %add390, %mul325
  %add392 = add i64 %add391, %mul298
  %add393 = add i64 %add392, %mul271
  %add435 = add i64 %add393, %shr434
  %and436 = and i64 %add433, 4261412864
  %sub437 = sub i64 %add425, %and436
  %add438 = add nsw i64 %add430, 33554432
  %shr439 = ashr i64 %add438, 26
  %add358 = add i64 %mul97, %mul124
  %add359 = add i64 %add358, %mul70
  %add360 = add i64 %add359, %mul43
  %add361 = add i64 %add360, %mul316
  %add362 = add i64 %add361, %mul289
  %add363 = add i64 %add362, %mul262
  %add364 = add i64 %add363, %mul235
  %add365 = add i64 %add364, %mul208
  %add366 = add i64 %add365, %mul181
  %add440 = add i64 %add366, %shr439
  %and441 = and i64 %add438, 4227858432
  %sub442 = sub i64 %add430, %and441
  %add443 = add nsw i64 %add435, 33554432
  %shr444 = ashr i64 %add443, 26
  %add394 = add i64 %mul217, %mul244
  %add395 = add i64 %add394, %mul190
  %add396 = add i64 %add395, %mul163
  %add397 = add i64 %add396, %mul136
  %add398 = add i64 %add397, %mul109
  %add399 = add i64 %add398, %mul82
  %add400 = add i64 %add399, %mul55
  %add401 = add i64 %add400, %mul328
  %add402 = add i64 %add401, %mul301
  %add445 = add i64 %add402, %shr444
  %and446 = and i64 %add443, 4227858432
  %sub447 = sub i64 %add435, %and446
  %add448 = add nsw i64 %add440, 16777216
  %shr449 = ashr i64 %add448, 25
  %add450 = add nsw i64 %shr449, %sub427
  %and451 = and i64 %add448, 4261412864
  %sub452 = sub i64 %add440, %and451
  %add453 = add nsw i64 %add445, 16777216
  %shr454 = ashr i64 %add453, 25
  %add403 = add i64 %mul247, %mul274
  %add404 = add i64 %add403, %mul220
  %add405 = add i64 %add404, %mul193
  %add406 = add i64 %add405, %mul166
  %add407 = add i64 %add406, %mul139
  %add408 = add i64 %add407, %mul112
  %add409 = add i64 %add408, %mul85
  %add410 = add i64 %add409, %mul58
  %add411 = add i64 %add410, %mul331
  %add455 = add i64 %add411, %shr454
  %and456 = and i64 %add453, 4261412864
  %sub457 = sub i64 %add445, %and456
  %add458 = add nsw i64 %add450, 33554432
  %20 = lshr i64 %add458, 26
  %add460 = add i64 %sub437, %20
  %and461 = and i64 %add458, 4227858432
  %sub462 = sub i64 %add450, %and461
  %add463 = add nsw i64 %add455, 33554432
  %shr464 = ashr i64 %add463, 26
  %add412 = add i64 %mul277, %mul304
  %add413 = add i64 %add412, %mul250
  %add414 = add i64 %add413, %mul223
  %add415 = add i64 %add414, %mul196
  %add416 = add i64 %add415, %mul169
  %add417 = add i64 %add416, %mul142
  %add418 = add i64 %add417, %mul115
  %add419 = add i64 %add418, %mul88
  %add420 = add i64 %add419, %mul61
  %add465 = add i64 %add420, %shr464
  %and466 = and i64 %add463, 4227858432
  %sub467 = sub i64 %add455, %and466
  %add468 = add nsw i64 %add465, 16777216
  %shr469 = ashr i64 %add468, 25
  %mul470 = mul nsw i64 %shr469, 19
  %add471 = add nsw i64 %mul470, %sub
  %and472 = and i64 %add468, 4261412864
  %sub473 = sub i64 %add465, %and472
  %add474 = add nsw i64 %add471, 33554432
  %21 = lshr i64 %add474, 26
  %add476 = add i64 %sub432, %21
  %and477 = and i64 %add474, 4227858432
  %sub478 = sub i64 %add471, %and477
  %conv479 = trunc i64 %sub478 to i32
  store i32 %conv479, i32* %h, align 4, !tbaa !11
  %conv481 = trunc i64 %add476 to i32
  %arrayidx482 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv481, i32* %arrayidx482, align 4, !tbaa !11
  %conv483 = trunc i64 %sub442 to i32
  %arrayidx484 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv483, i32* %arrayidx484, align 4, !tbaa !11
  %conv485 = trunc i64 %sub452 to i32
  %arrayidx486 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv485, i32* %arrayidx486, align 4, !tbaa !11
  %conv487 = trunc i64 %sub462 to i32
  %arrayidx488 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv487, i32* %arrayidx488, align 4, !tbaa !11
  %conv489 = trunc i64 %add460 to i32
  %arrayidx490 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv489, i32* %arrayidx490, align 4, !tbaa !11
  %conv491 = trunc i64 %sub447 to i32
  %arrayidx492 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv491, i32* %arrayidx492, align 4, !tbaa !11
  %conv493 = trunc i64 %sub457 to i32
  %arrayidx494 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv493, i32* %arrayidx494, align 4, !tbaa !11
  %conv495 = trunc i64 %sub467 to i32
  %arrayidx496 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv495, i32* %arrayidx496, align 4, !tbaa !11
  %conv497 = trunc i64 %sub473 to i32
  %arrayidx498 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv497, i32* %arrayidx498, align 4, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe_tobytes(i8* noundef writeonly %s, i32* nocapture noundef readonly %h) unnamed_addr #3 {
entry:
  %0 = load i32, i32* %h, align 4, !tbaa !11
  %arrayidx1 = getelementptr inbounds i32, i32* %h, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !11
  %arrayidx2 = getelementptr inbounds i32, i32* %h, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !11
  %arrayidx3 = getelementptr inbounds i32, i32* %h, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds i32, i32* %h, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds i32, i32* %h, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !11
  %arrayidx6 = getelementptr inbounds i32, i32* %h, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !11
  %arrayidx7 = getelementptr inbounds i32, i32* %h, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !11
  %arrayidx8 = getelementptr inbounds i32, i32* %h, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !11
  %arrayidx9 = getelementptr inbounds i32, i32* %h, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !11
  %mul = mul nsw i32 %9, 19
  %add = add nsw i32 %mul, 16777216
  %shr = ashr i32 %add, 25
  %add10 = add nsw i32 %shr, %0
  %shr11 = ashr i32 %add10, 26
  %add12 = add nsw i32 %shr11, %1
  %shr13 = ashr i32 %add12, 25
  %add14 = add nsw i32 %shr13, %2
  %shr15 = ashr i32 %add14, 26
  %add16 = add nsw i32 %shr15, %3
  %shr17 = ashr i32 %add16, 25
  %add18 = add nsw i32 %shr17, %4
  %shr19 = ashr i32 %add18, 26
  %add20 = add nsw i32 %shr19, %5
  %shr21 = ashr i32 %add20, 25
  %add22 = add nsw i32 %shr21, %6
  %shr23 = ashr i32 %add22, 26
  %add24 = add nsw i32 %shr23, %7
  %shr25 = ashr i32 %add24, 25
  %add26 = add nsw i32 %shr25, %8
  %shr27 = ashr i32 %add26, 26
  %add28 = add nsw i32 %shr27, %9
  %shr29 = ashr i32 %add28, 25
  %mul30 = mul nsw i32 %shr29, 19
  %add31 = add nsw i32 %mul30, %0
  %shr32 = ashr i32 %add31, 26
  %add33 = add nsw i32 %shr32, %1
  %shr35 = ashr i32 %add33, 25
  %add36 = add nsw i32 %shr35, %2
  %10 = and i32 %add33, 33554431
  %shr40 = ashr i32 %add36, 26
  %add41 = add nsw i32 %shr40, %3
  %11 = and i32 %add36, 67108863
  %shr45 = ashr i32 %add41, 25
  %add46 = add nsw i32 %shr45, %4
  %12 = and i32 %add41, 33554431
  %shr50 = ashr i32 %add46, 26
  %add51 = add nsw i32 %shr50, %5
  %shr55 = ashr i32 %add51, 25
  %add56 = add nsw i32 %shr55, %6
  %shr60 = ashr i32 %add56, 26
  %add61 = add nsw i32 %shr60, %7
  %13 = and i32 %add56, 67108863
  %shr65 = ashr i32 %add61, 25
  %add66 = add nsw i32 %shr65, %8
  %14 = and i32 %add61, 33554431
  %shr70 = ashr i32 %add66, 26
  %add71 = add nsw i32 %shr70, %9
  %15 = and i32 %add66, 67108863
  %16 = and i32 %add71, 33554431
  %conv79 = trunc i32 %add31 to i8
  store i8 %conv79, i8* %s, align 1, !tbaa !4
  %17 = lshr i32 %add31, 8
  %conv82 = trunc i32 %17 to i8
  %arrayidx83 = getelementptr inbounds i8, i8* %s, i64 1
  store i8 %conv82, i8* %arrayidx83, align 1, !tbaa !4
  %18 = lshr i32 %add31, 16
  %conv85 = trunc i32 %18 to i8
  %arrayidx86 = getelementptr inbounds i8, i8* %s, i64 2
  store i8 %conv85, i8* %arrayidx86, align 1, !tbaa !4
  %19 = lshr i32 %add31, 24
  %20 = and i32 %19, 3
  %shl = shl nuw nsw i32 %10, 2
  %or = or i32 %shl, %20
  %conv88 = trunc i32 %or to i8
  %arrayidx89 = getelementptr inbounds i8, i8* %s, i64 3
  store i8 %conv88, i8* %arrayidx89, align 1, !tbaa !4
  %21 = lshr i32 %add33, 6
  %conv91 = trunc i32 %21 to i8
  %arrayidx92 = getelementptr inbounds i8, i8* %s, i64 4
  store i8 %conv91, i8* %arrayidx92, align 1, !tbaa !4
  %22 = lshr i32 %add33, 14
  %conv94 = trunc i32 %22 to i8
  %arrayidx95 = getelementptr inbounds i8, i8* %s, i64 5
  store i8 %conv94, i8* %arrayidx95, align 1, !tbaa !4
  %23 = lshr i32 %10, 22
  %shl97 = shl nuw nsw i32 %11, 3
  %or98 = or i32 %shl97, %23
  %conv99 = trunc i32 %or98 to i8
  %arrayidx100 = getelementptr inbounds i8, i8* %s, i64 6
  store i8 %conv99, i8* %arrayidx100, align 1, !tbaa !4
  %24 = lshr i32 %add36, 5
  %conv102 = trunc i32 %24 to i8
  %arrayidx103 = getelementptr inbounds i8, i8* %s, i64 7
  store i8 %conv102, i8* %arrayidx103, align 1, !tbaa !4
  %25 = lshr i32 %add36, 13
  %conv105 = trunc i32 %25 to i8
  %arrayidx106 = getelementptr inbounds i8, i8* %s, i64 8
  store i8 %conv105, i8* %arrayidx106, align 1, !tbaa !4
  %26 = lshr i32 %11, 21
  %shl108 = shl nuw nsw i32 %12, 5
  %or109 = or i32 %shl108, %26
  %conv110 = trunc i32 %or109 to i8
  %arrayidx111 = getelementptr inbounds i8, i8* %s, i64 9
  store i8 %conv110, i8* %arrayidx111, align 1, !tbaa !4
  %27 = lshr i32 %add41, 3
  %conv113 = trunc i32 %27 to i8
  %arrayidx114 = getelementptr inbounds i8, i8* %s, i64 10
  store i8 %conv113, i8* %arrayidx114, align 1, !tbaa !4
  %28 = lshr i32 %add41, 11
  %conv116 = trunc i32 %28 to i8
  %arrayidx117 = getelementptr inbounds i8, i8* %s, i64 11
  store i8 %conv116, i8* %arrayidx117, align 1, !tbaa !4
  %29 = lshr i32 %12, 19
  %shl119 = shl i32 %add46, 6
  %or120 = or i32 %shl119, %29
  %conv121 = trunc i32 %or120 to i8
  %arrayidx122 = getelementptr inbounds i8, i8* %s, i64 12
  store i8 %conv121, i8* %arrayidx122, align 1, !tbaa !4
  %30 = lshr i32 %add46, 2
  %conv124 = trunc i32 %30 to i8
  %arrayidx125 = getelementptr inbounds i8, i8* %s, i64 13
  store i8 %conv124, i8* %arrayidx125, align 1, !tbaa !4
  %31 = lshr i32 %add46, 10
  %conv127 = trunc i32 %31 to i8
  %arrayidx128 = getelementptr inbounds i8, i8* %s, i64 14
  store i8 %conv127, i8* %arrayidx128, align 1, !tbaa !4
  %32 = lshr i32 %add46, 18
  %conv130 = trunc i32 %32 to i8
  %arrayidx131 = getelementptr inbounds i8, i8* %s, i64 15
  store i8 %conv130, i8* %arrayidx131, align 1, !tbaa !4
  %conv133 = trunc i32 %add51 to i8
  %arrayidx134 = getelementptr inbounds i8, i8* %s, i64 16
  store i8 %conv133, i8* %arrayidx134, align 1, !tbaa !4
  %33 = lshr i32 %add51, 8
  %conv136 = trunc i32 %33 to i8
  %arrayidx137 = getelementptr inbounds i8, i8* %s, i64 17
  store i8 %conv136, i8* %arrayidx137, align 1, !tbaa !4
  %34 = lshr i32 %add51, 16
  %conv139 = trunc i32 %34 to i8
  %arrayidx140 = getelementptr inbounds i8, i8* %s, i64 18
  store i8 %conv139, i8* %arrayidx140, align 1, !tbaa !4
  %35 = lshr i32 %add51, 24
  %36 = and i32 %35, 1
  %shl142 = shl nuw nsw i32 %13, 1
  %or143 = or i32 %shl142, %36
  %conv144 = trunc i32 %or143 to i8
  %arrayidx145 = getelementptr inbounds i8, i8* %s, i64 19
  store i8 %conv144, i8* %arrayidx145, align 1, !tbaa !4
  %37 = lshr i32 %add56, 7
  %conv147 = trunc i32 %37 to i8
  %arrayidx148 = getelementptr inbounds i8, i8* %s, i64 20
  store i8 %conv147, i8* %arrayidx148, align 1, !tbaa !4
  %38 = lshr i32 %add56, 15
  %conv150 = trunc i32 %38 to i8
  %arrayidx151 = getelementptr inbounds i8, i8* %s, i64 21
  store i8 %conv150, i8* %arrayidx151, align 1, !tbaa !4
  %39 = lshr i32 %13, 23
  %shl153 = shl nuw nsw i32 %14, 3
  %or154 = or i32 %shl153, %39
  %conv155 = trunc i32 %or154 to i8
  %arrayidx156 = getelementptr inbounds i8, i8* %s, i64 22
  store i8 %conv155, i8* %arrayidx156, align 1, !tbaa !4
  %40 = lshr i32 %add61, 5
  %conv158 = trunc i32 %40 to i8
  %arrayidx159 = getelementptr inbounds i8, i8* %s, i64 23
  store i8 %conv158, i8* %arrayidx159, align 1, !tbaa !4
  %41 = lshr i32 %add61, 13
  %conv161 = trunc i32 %41 to i8
  %arrayidx162 = getelementptr inbounds i8, i8* %s, i64 24
  store i8 %conv161, i8* %arrayidx162, align 1, !tbaa !4
  %42 = lshr i32 %14, 21
  %shl164 = shl nuw nsw i32 %15, 4
  %or165 = or i32 %shl164, %42
  %conv166 = trunc i32 %or165 to i8
  %arrayidx167 = getelementptr inbounds i8, i8* %s, i64 25
  store i8 %conv166, i8* %arrayidx167, align 1, !tbaa !4
  %43 = lshr i32 %add66, 4
  %conv169 = trunc i32 %43 to i8
  %arrayidx170 = getelementptr inbounds i8, i8* %s, i64 26
  store i8 %conv169, i8* %arrayidx170, align 1, !tbaa !4
  %44 = lshr i32 %add66, 12
  %conv172 = trunc i32 %44 to i8
  %arrayidx173 = getelementptr inbounds i8, i8* %s, i64 27
  store i8 %conv172, i8* %arrayidx173, align 1, !tbaa !4
  %45 = lshr i32 %15, 20
  %shl175 = shl nuw nsw i32 %16, 6
  %or176 = or i32 %shl175, %45
  %conv177 = trunc i32 %or176 to i8
  %arrayidx178 = getelementptr inbounds i8, i8* %s, i64 28
  store i8 %conv177, i8* %arrayidx178, align 1, !tbaa !4
  %46 = lshr i32 %add71, 2
  %conv180 = trunc i32 %46 to i8
  %arrayidx181 = getelementptr inbounds i8, i8* %s, i64 29
  store i8 %conv180, i8* %arrayidx181, align 1, !tbaa !4
  %47 = lshr i32 %add71, 10
  %conv183 = trunc i32 %47 to i8
  %arrayidx184 = getelementptr inbounds i8, i8* %s, i64 30
  store i8 %conv183, i8* %arrayidx184, align 1, !tbaa !4
  %48 = lshr i32 %16, 18
  %conv186 = trunc i32 %48 to i8
  %arrayidx187 = getelementptr inbounds i8, i8* %s, i64 31
  store i8 %conv186, i8* %arrayidx187, align 1, !tbaa !4
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @load_3(i8* nocapture noundef readonly %in) unnamed_addr #8 {
entry:
  %0 = load i8, i8* %in, align 1, !tbaa !4
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %in, i64 1
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !4
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %in, i64 2
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  ret i64 %or6
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @load_4(i8* nocapture noundef readonly %in) unnamed_addr #8 {
entry:
  %0 = load i8, i8* %in, align 1, !tbaa !4
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %in, i64 1
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !4
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %in, i64 2
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %in, i64 3
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !4
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  ret i64 %or10
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_p3_0(%struct.ge_p3* noundef %h) unnamed_addr #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 0, i64 0
  tail call fastcc void @fe_0(i32* noundef %arraydecay) #14
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 1, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 2, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay2) #14
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 3, i64 0
  tail call fastcc void @fe_0(i32* noundef nonnull %arraydecay3) #14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @table_select(%struct.ge_precomp* noundef %t, i32 noundef %pos, i8 noundef signext %b) unnamed_addr #0 {
entry:
  %minust = alloca %struct.ge_precomp, align 4
  %0 = bitcast %struct.ge_precomp* %minust to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %0) #12
  %call = tail call fastcc zeroext i8 @negative(i8 noundef signext %b) #14
  %sub = sub i8 0, %call
  %and = and i8 %sub, %b
  %shl.neg = mul i8 %and, -2
  %sub5 = add i8 %shl.neg, %b
  tail call fastcc void @ge_precomp_0(%struct.ge_precomp* noundef %t) #14
  %idxprom = sext i32 %pos to i64
  %arrayidx7 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0
  %call8 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 1) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx7, i8 noundef zeroext %call8) #14
  %arrayidx11 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1
  %call12 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 2) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx11, i8 noundef zeroext %call12) #14
  %arrayidx15 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2
  %call16 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 3) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx15, i8 noundef zeroext %call16) #14
  %arrayidx19 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3
  %call20 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 4) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx19, i8 noundef zeroext %call20) #14
  %arrayidx23 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4
  %call24 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 5) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx23, i8 noundef zeroext %call24) #14
  %arrayidx27 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5
  %call28 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 6) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx27, i8 noundef zeroext %call28) #14
  %arrayidx31 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6
  %call32 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 7) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx31, i8 noundef zeroext %call32) #14
  %arrayidx35 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7
  %call36 = tail call fastcc zeroext i8 @equal(i8 noundef signext %sub5, i8 noundef signext 8) #14, !range !19
  tail call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %arrayidx35, i8 noundef zeroext %call36) #14
  %arraydecay = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %minust, i64 0, i32 0, i64 0
  %arraydecay37 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 0
  call fastcc void @fe_copy(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay37) #14
  %arraydecay39 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %minust, i64 0, i32 1, i64 0
  %arraydecay41 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 0
  call fastcc void @fe_copy(i32* noundef nonnull %arraydecay39, i32* noundef %arraydecay41) #14
  %arraydecay42 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %minust, i64 0, i32 2, i64 0
  %arraydecay44 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 0
  call fastcc void @fe_neg(i32* noundef nonnull %arraydecay42, i32* noundef nonnull %arraydecay44) #14
  call fastcc void @cmov(%struct.ge_precomp* noundef %t, %struct.ge_precomp* noundef nonnull %minust, i8 noundef zeroext %call) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %0) #12
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_madd(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p3* nocapture noundef readonly %p, %struct.ge_precomp* nocapture noundef readonly %q) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_add(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef %arraydecay, i32* noundef %arraydecay13) #14
  %arraydecay18 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay18) #14
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 2, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay20, i32* noundef nonnull %arraydecay22) #14
  %arraydecay23 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  %arraydecay25 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay25, i32* noundef nonnull %arraydecay25) #14
  tail call fastcc void @fe_sub(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay19) #14
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay19) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @ge_p1p1_to_p3(%struct.ge_p3* nocapture noundef writeonly %r, %struct.ge_p1p1* nocapture noundef readonly %p) unnamed_addr #3 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %r, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 0, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef %arraydecay, i32* noundef %arraydecay2, i32* noundef nonnull %arraydecay3) #14
  %arraydecay4 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %r, i64 0, i32 1, i64 0
  %arraydecay6 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 1, i64 0
  %arraydecay7 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay4, i32* noundef nonnull %arraydecay6, i32* noundef nonnull %arraydecay7) #14
  %arraydecay9 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %r, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay9, i32* noundef nonnull %arraydecay7, i32* noundef nonnull %arraydecay3) #14
  %arraydecay15 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %r, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay15, i32* noundef %arraydecay2, i32* noundef nonnull %arraydecay6) #14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_p3_dbl(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p3* noundef %p) unnamed_addr #0 {
entry:
  %q = alloca %struct.ge_p2, align 4
  %0 = bitcast %struct.ge_p2* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %0) #12
  call fastcc void @ge_p3_to_p2(%struct.ge_p2* noundef nonnull %q, %struct.ge_p3* noundef %p) #14
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* noundef %r, %struct.ge_p2* noundef nonnull %q) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @ge_p1p1_to_p2(%struct.ge_p2* nocapture noundef writeonly %r, %struct.ge_p1p1* nocapture noundef readonly %p) unnamed_addr #3 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 0, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef %arraydecay, i32* noundef %arraydecay2, i32* noundef nonnull %arraydecay3) #14
  %arraydecay4 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 1, i64 0
  %arraydecay6 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 1, i64 0
  %arraydecay7 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %p, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay4, i32* noundef nonnull %arraydecay6, i32* noundef nonnull %arraydecay7) #14
  %arraydecay9 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay9, i32* noundef nonnull %arraydecay7, i32* noundef nonnull %arraydecay3) #14
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_p2_dbl(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p2* nocapture noundef readonly %p) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_sq(i32* noundef %arraydecay, i32* noundef %arraydecay2) #14
  %arraydecay3 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay4 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sq(i32* noundef nonnull %arraydecay3, i32* noundef nonnull %arraydecay4) #14
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay7 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 0
  tail call fastcc void @fe_sq2(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay7) #14
  %arraydecay9 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay9, i32* noundef %arraydecay2, i32* noundef nonnull %arraydecay4) #14
  %arraydecay14 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay14, i32* noundef nonnull %arraydecay9) #14
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay9, i32* noundef nonnull %arraydecay3, i32* noundef %arraydecay) #14
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay3, i32* noundef nonnull %arraydecay3, i32* noundef %arraydecay) #14
  call fastcc void @fe_sub(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay14, i32* noundef nonnull %arraydecay9) #14
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay3) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @fe_0(i32* noundef %h) unnamed_addr #0 {
entry:
  %0 = bitcast i32* %h to i8*
  %call = tail call i8* @memset(i8* noundef %0, i32 noundef 0, i64 noundef 40) #13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @fe_1(i32* noundef %h) unnamed_addr #0 {
entry:
  %0 = bitcast i32* %h to i8*
  %call = tail call i8* @memset(i8* noundef %0, i32 noundef 0, i64 noundef 40) #13
  store i32 1, i32* %h, align 4, !tbaa !11
  ret void
}

; Function Attrs: nounwind
declare i8* @memset(i8* noundef, i32 noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc zeroext i8 @negative(i8 noundef signext %b) unnamed_addr #9 {
entry:
  %0 = lshr i8 %b, 7
  ret i8 %0
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_precomp_0(%struct.ge_precomp* noundef %h) unnamed_addr #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %h, i64 0, i32 0, i64 0
  tail call fastcc void @fe_1(i32* noundef %arraydecay) #14
  %arraydecay1 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %h, i64 0, i32 1, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %h, i64 0, i32 2, i64 0
  tail call fastcc void @fe_0(i32* noundef nonnull %arraydecay2) #14
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @cmov(%struct.ge_precomp* nocapture noundef %t, %struct.ge_precomp* nocapture noundef readonly %u, i8 noundef zeroext %b) unnamed_addr #6 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %u, i64 0, i32 0, i64 0
  %conv = zext i8 %b to i32
  tail call fastcc void @fe_cmov(i32* noundef %arraydecay, i32* noundef %arraydecay2, i32 noundef %conv) #14
  %arraydecay3 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 0
  %arraydecay5 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %u, i64 0, i32 1, i64 0
  tail call fastcc void @fe_cmov(i32* noundef nonnull %arraydecay3, i32* noundef nonnull %arraydecay5, i32 noundef %conv) #14
  %arraydecay7 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 0
  %arraydecay9 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %u, i64 0, i32 2, i64 0
  tail call fastcc void @fe_cmov(i32* noundef nonnull %arraydecay7, i32* noundef nonnull %arraydecay9, i32 noundef %conv) #14
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc zeroext i8 @equal(i8 noundef signext %b, i8 noundef signext %c) unnamed_addr #9 {
entry:
  %xor8 = xor i8 %c, %b
  %conv3 = zext i8 %xor8 to i32
  %sub = add nsw i32 %conv3, -1
  %shr = lshr i32 %sub, 31
  %conv4 = trunc i32 %shr to i8
  ret i8 %conv4
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @fe_copy(i32* noundef %h, i32* noundef %f) unnamed_addr #0 {
entry:
  %0 = bitcast i32* %h to i8*
  %1 = bitcast i32* %f to i8*
  %call = tail call i8* @memmove(i8* noundef %0, i8* noundef %1, i64 noundef 40) #13
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe_cmov(i32* nocapture noundef %f, i32* nocapture noundef readonly %g, i32 noundef %b) unnamed_addr #6 {
entry:
  %sub = sub i32 0, %b
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %1 = load i32, i32* %g, align 4, !tbaa !11
  %xor = xor i32 %1, %0
  %and = and i32 %xor, %sub
  %xor3 = xor i32 %and, %0
  store i32 %xor3, i32* %f, align 4, !tbaa !11
  %arrayidx.1 = getelementptr inbounds i32, i32* %f, i64 1
  %2 = load i32, i32* %arrayidx.1, align 4, !tbaa !11
  %arrayidx1.1 = getelementptr inbounds i32, i32* %g, i64 1
  %3 = load i32, i32* %arrayidx1.1, align 4, !tbaa !11
  %xor.1 = xor i32 %3, %2
  %and.1 = and i32 %xor.1, %sub
  %xor3.1 = xor i32 %and.1, %2
  store i32 %xor3.1, i32* %arrayidx.1, align 4, !tbaa !11
  %arrayidx.2 = getelementptr inbounds i32, i32* %f, i64 2
  %4 = load i32, i32* %arrayidx.2, align 4, !tbaa !11
  %arrayidx1.2 = getelementptr inbounds i32, i32* %g, i64 2
  %5 = load i32, i32* %arrayidx1.2, align 4, !tbaa !11
  %xor.2 = xor i32 %5, %4
  %and.2 = and i32 %xor.2, %sub
  %xor3.2 = xor i32 %and.2, %4
  store i32 %xor3.2, i32* %arrayidx.2, align 4, !tbaa !11
  %arrayidx.3 = getelementptr inbounds i32, i32* %f, i64 3
  %6 = load i32, i32* %arrayidx.3, align 4, !tbaa !11
  %arrayidx1.3 = getelementptr inbounds i32, i32* %g, i64 3
  %7 = load i32, i32* %arrayidx1.3, align 4, !tbaa !11
  %xor.3 = xor i32 %7, %6
  %and.3 = and i32 %xor.3, %sub
  %xor3.3 = xor i32 %and.3, %6
  store i32 %xor3.3, i32* %arrayidx.3, align 4, !tbaa !11
  %arrayidx.4 = getelementptr inbounds i32, i32* %f, i64 4
  %8 = load i32, i32* %arrayidx.4, align 4, !tbaa !11
  %arrayidx1.4 = getelementptr inbounds i32, i32* %g, i64 4
  %9 = load i32, i32* %arrayidx1.4, align 4, !tbaa !11
  %xor.4 = xor i32 %9, %8
  %and.4 = and i32 %xor.4, %sub
  %xor3.4 = xor i32 %and.4, %8
  store i32 %xor3.4, i32* %arrayidx.4, align 4, !tbaa !11
  %arrayidx.5 = getelementptr inbounds i32, i32* %f, i64 5
  %10 = load i32, i32* %arrayidx.5, align 4, !tbaa !11
  %arrayidx1.5 = getelementptr inbounds i32, i32* %g, i64 5
  %11 = load i32, i32* %arrayidx1.5, align 4, !tbaa !11
  %xor.5 = xor i32 %11, %10
  %and.5 = and i32 %xor.5, %sub
  %xor3.5 = xor i32 %and.5, %10
  store i32 %xor3.5, i32* %arrayidx.5, align 4, !tbaa !11
  %arrayidx.6 = getelementptr inbounds i32, i32* %f, i64 6
  %12 = load i32, i32* %arrayidx.6, align 4, !tbaa !11
  %arrayidx1.6 = getelementptr inbounds i32, i32* %g, i64 6
  %13 = load i32, i32* %arrayidx1.6, align 4, !tbaa !11
  %xor.6 = xor i32 %13, %12
  %and.6 = and i32 %xor.6, %sub
  %xor3.6 = xor i32 %and.6, %12
  store i32 %xor3.6, i32* %arrayidx.6, align 4, !tbaa !11
  %arrayidx.7 = getelementptr inbounds i32, i32* %f, i64 7
  %14 = load i32, i32* %arrayidx.7, align 4, !tbaa !11
  %arrayidx1.7 = getelementptr inbounds i32, i32* %g, i64 7
  %15 = load i32, i32* %arrayidx1.7, align 4, !tbaa !11
  %xor.7 = xor i32 %15, %14
  %and.7 = and i32 %xor.7, %sub
  %xor3.7 = xor i32 %and.7, %14
  store i32 %xor3.7, i32* %arrayidx.7, align 4, !tbaa !11
  %arrayidx.8 = getelementptr inbounds i32, i32* %f, i64 8
  %16 = load i32, i32* %arrayidx.8, align 4, !tbaa !11
  %arrayidx1.8 = getelementptr inbounds i32, i32* %g, i64 8
  %17 = load i32, i32* %arrayidx1.8, align 4, !tbaa !11
  %xor.8 = xor i32 %17, %16
  %and.8 = and i32 %xor.8, %sub
  %xor3.8 = xor i32 %and.8, %16
  store i32 %xor3.8, i32* %arrayidx.8, align 4, !tbaa !11
  %arrayidx.9 = getelementptr inbounds i32, i32* %f, i64 9
  %18 = load i32, i32* %arrayidx.9, align 4, !tbaa !11
  %arrayidx1.9 = getelementptr inbounds i32, i32* %g, i64 9
  %19 = load i32, i32* %arrayidx1.9, align 4, !tbaa !11
  %xor.9 = xor i32 %19, %18
  %and.9 = and i32 %xor.9, %sub
  %xor3.9 = xor i32 %and.9, %18
  store i32 %xor3.9, i32* %arrayidx.9, align 4, !tbaa !11
  ret void
}

; Function Attrs: nounwind
declare i8* @memmove(i8* noundef, i8* noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_p3_to_p2(%struct.ge_p2* noundef %r, %struct.ge_p3* noundef %p) unnamed_addr #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_copy(i32* noundef %arraydecay, i32* noundef %arraydecay2) #14
  %arraydecay3 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 1, i64 0
  %arraydecay5 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  tail call fastcc void @fe_copy(i32* noundef nonnull %arraydecay3, i32* noundef nonnull %arraydecay5) #14
  %arraydecay6 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %r, i64 0, i32 2, i64 0
  %arraydecay8 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  tail call fastcc void @fe_copy(i32* noundef nonnull %arraydecay6, i32* noundef nonnull %arraydecay8) #14
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe_sq(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f) unnamed_addr #3 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %arrayidx1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !11
  %arrayidx2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !11
  %arrayidx3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !11
  %arrayidx6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !11
  %arrayidx7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !11
  %arrayidx8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !11
  %arrayidx9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !11
  %mul = shl nsw i32 %0, 1
  %mul10 = shl nsw i32 %1, 1
  %mul11 = shl nsw i32 %2, 1
  %mul12 = shl nsw i32 %3, 1
  %mul13 = shl nsw i32 %4, 1
  %mul14 = shl nsw i32 %5, 1
  %mul15 = shl nsw i32 %6, 1
  %mul16 = shl nsw i32 %7, 1
  %mul17 = mul nsw i32 %5, 38
  %mul18 = mul nsw i32 %6, 19
  %mul19 = mul nsw i32 %7, 38
  %mul20 = mul nsw i32 %8, 19
  %mul21 = mul nsw i32 %9, 38
  %conv = sext i32 %0 to i64
  %mul23 = mul nsw i64 %conv, %conv
  %conv24 = sext i32 %mul to i64
  %conv25 = sext i32 %1 to i64
  %mul26 = mul nsw i64 %conv24, %conv25
  %conv28 = sext i32 %2 to i64
  %mul29 = mul nsw i64 %conv28, %conv24
  %conv31 = sext i32 %3 to i64
  %mul32 = mul nsw i64 %conv31, %conv24
  %conv34 = sext i32 %4 to i64
  %mul35 = mul nsw i64 %conv34, %conv24
  %conv37 = sext i32 %5 to i64
  %mul38 = mul nsw i64 %conv37, %conv24
  %conv40 = sext i32 %6 to i64
  %mul41 = mul nsw i64 %conv40, %conv24
  %conv43 = sext i32 %7 to i64
  %mul44 = mul nsw i64 %conv43, %conv24
  %conv46 = sext i32 %8 to i64
  %mul47 = mul nsw i64 %conv46, %conv24
  %conv49 = sext i32 %9 to i64
  %mul50 = mul nsw i64 %conv49, %conv24
  %conv51 = sext i32 %mul10 to i64
  %mul53 = mul nsw i64 %conv51, %conv25
  %mul56 = mul nsw i64 %conv51, %conv28
  %conv58 = sext i32 %mul12 to i64
  %mul59 = mul nsw i64 %conv58, %conv51
  %mul62 = mul nsw i64 %conv34, %conv51
  %conv64 = sext i32 %mul14 to i64
  %mul65 = mul nsw i64 %conv64, %conv51
  %mul68 = mul nsw i64 %conv40, %conv51
  %conv70 = sext i32 %mul16 to i64
  %mul71 = mul nsw i64 %conv70, %conv51
  %mul74 = mul nsw i64 %conv46, %conv51
  %conv76 = sext i32 %mul21 to i64
  %mul77 = mul nsw i64 %conv76, %conv51
  %mul80 = mul nsw i64 %conv28, %conv28
  %conv81 = sext i32 %mul11 to i64
  %mul83 = mul nsw i64 %conv81, %conv31
  %mul86 = mul nsw i64 %conv34, %conv81
  %mul89 = mul nsw i64 %conv37, %conv81
  %mul92 = mul nsw i64 %conv40, %conv81
  %mul95 = mul nsw i64 %conv43, %conv81
  %conv97 = sext i32 %mul20 to i64
  %mul98 = mul nsw i64 %conv97, %conv81
  %mul101 = mul nsw i64 %conv76, %conv28
  %mul104 = mul nsw i64 %conv58, %conv31
  %mul107 = mul nsw i64 %conv58, %conv34
  %mul110 = mul nsw i64 %conv64, %conv58
  %mul113 = mul nsw i64 %conv40, %conv58
  %conv115 = sext i32 %mul19 to i64
  %mul116 = mul nsw i64 %conv115, %conv58
  %mul119 = mul nsw i64 %conv97, %conv58
  %mul122 = mul nsw i64 %conv76, %conv58
  %mul125 = mul nsw i64 %conv34, %conv34
  %conv126 = sext i32 %mul13 to i64
  %mul128 = mul nsw i64 %conv126, %conv37
  %conv130 = sext i32 %mul18 to i64
  %mul131 = mul nsw i64 %conv130, %conv126
  %mul134 = mul nsw i64 %conv115, %conv34
  %mul137 = mul nsw i64 %conv97, %conv126
  %mul140 = mul nsw i64 %conv76, %conv34
  %conv142 = sext i32 %mul17 to i64
  %mul143 = mul nsw i64 %conv142, %conv37
  %mul146 = mul nsw i64 %conv130, %conv64
  %mul149 = mul nsw i64 %conv115, %conv64
  %mul152 = mul nsw i64 %conv97, %conv64
  %mul155 = mul nsw i64 %conv76, %conv64
  %mul158 = mul nsw i64 %conv130, %conv40
  %mul161 = mul nsw i64 %conv115, %conv40
  %conv162 = sext i32 %mul15 to i64
  %mul164 = mul nsw i64 %conv97, %conv162
  %mul167 = mul nsw i64 %conv76, %conv40
  %mul170 = mul nsw i64 %conv115, %conv43
  %mul173 = mul nsw i64 %conv97, %conv70
  %mul176 = mul nsw i64 %conv76, %conv70
  %mul179 = mul nsw i64 %conv97, %conv46
  %mul182 = mul nsw i64 %conv76, %conv46
  %mul185 = mul nsw i64 %conv76, %conv49
  %add = add i64 %mul143, %mul23
  %add186 = add i64 %add, %mul131
  %add187 = add i64 %add186, %mul116
  %add188 = add i64 %add187, %mul98
  %add189 = add i64 %add188, %mul77
  %add194 = add nsw i64 %mul29, %mul53
  %add199 = add nsw i64 %mul32, %mul56
  %add203 = add i64 %mul59, %mul80
  %add204 = add i64 %add203, %mul35
  %add205 = add i64 %add204, %mul170
  %add206 = add i64 %add205, %mul164
  %add207 = add i64 %add206, %mul155
  %add230 = add nsw i64 %add189, 33554432
  %shr = ashr i64 %add230, 26
  %add190 = add i64 %mul146, %mul26
  %add191 = add i64 %add190, %mul134
  %add192 = add i64 %add191, %mul119
  %add193 = add i64 %add192, %mul101
  %add231 = add i64 %add193, %shr
  %and = and i64 %add230, -67108864
  %sub = sub nsw i64 %add189, %and
  %add232 = add nsw i64 %add207, 33554432
  %shr233 = ashr i64 %add232, 26
  %add208 = add i64 %mul62, %mul83
  %add209 = add i64 %add208, %mul38
  %add210 = add i64 %add209, %mul173
  %add211 = add i64 %add210, %mul167
  %add234 = add i64 %add211, %shr233
  %and235 = and i64 %add232, -67108864
  %sub236 = sub nsw i64 %add207, %and235
  %add237 = add nsw i64 %add231, 16777216
  %shr238 = ashr i64 %add237, 25
  %add195 = add i64 %add194, %mul158
  %add196 = add i64 %add195, %mul149
  %add197 = add i64 %add196, %mul137
  %add198 = add i64 %add197, %mul122
  %add239 = add i64 %add198, %shr238
  %and240 = and i64 %add237, 4261412864
  %sub241 = sub i64 %add231, %and240
  %add242 = add nsw i64 %add234, 16777216
  %shr243 = ashr i64 %add242, 25
  %add212 = add i64 %mul104, %mul86
  %add213 = add i64 %add212, %mul65
  %add214 = add i64 %add213, %mul41
  %add215 = add i64 %add214, %mul179
  %add216 = add i64 %add215, %mul176
  %add244 = add i64 %add216, %shr243
  %and245 = and i64 %add242, 4261412864
  %sub246 = sub i64 %add234, %and245
  %add247 = add nsw i64 %add239, 33554432
  %shr248 = ashr i64 %add247, 26
  %add200 = add i64 %add199, %mul161
  %add201 = add i64 %add200, %mul152
  %add202 = add i64 %add201, %mul140
  %add249 = add i64 %add202, %shr248
  %and250 = and i64 %add247, 4227858432
  %sub251 = sub i64 %add239, %and250
  %add252 = add nsw i64 %add244, 33554432
  %shr253 = ashr i64 %add252, 26
  %add217 = add i64 %mul89, %mul107
  %add218 = add i64 %add217, %mul68
  %add219 = add i64 %add218, %mul44
  %add220 = add i64 %add219, %mul182
  %add254 = add i64 %add220, %shr253
  %and255 = and i64 %add252, 4227858432
  %sub256 = sub i64 %add244, %and255
  %add257 = add nsw i64 %add249, 16777216
  %shr258 = ashr i64 %add257, 25
  %add259 = add nsw i64 %shr258, %sub236
  %and260 = and i64 %add257, 4261412864
  %sub261 = sub i64 %add249, %and260
  %add262 = add nsw i64 %add254, 16777216
  %shr263 = ashr i64 %add262, 25
  %add221 = add i64 %mul92, %mul125
  %add222 = add i64 %add221, %mul110
  %add223 = add i64 %add222, %mul71
  %add224 = add i64 %add223, %mul47
  %add225 = add i64 %add224, %mul185
  %add264 = add i64 %add225, %shr263
  %and265 = and i64 %add262, 4261412864
  %sub266 = sub i64 %add254, %and265
  %add267 = add nsw i64 %add259, 33554432
  %10 = lshr i64 %add267, 26
  %add269 = add i64 %sub246, %10
  %and270 = and i64 %add267, 4227858432
  %sub271 = sub i64 %add259, %and270
  %add272 = add nsw i64 %add264, 33554432
  %shr273 = ashr i64 %add272, 26
  %add226 = add i64 %mul113, %mul128
  %add227 = add i64 %add226, %mul95
  %add228 = add i64 %add227, %mul74
  %add229 = add i64 %add228, %mul50
  %add274 = add i64 %add229, %shr273
  %and275 = and i64 %add272, 4227858432
  %sub276 = sub i64 %add264, %and275
  %add277 = add nsw i64 %add274, 16777216
  %shr278 = ashr i64 %add277, 25
  %mul279 = mul nsw i64 %shr278, 19
  %add280 = add nsw i64 %mul279, %sub
  %and281 = and i64 %add277, 4261412864
  %sub282 = sub i64 %add274, %and281
  %add283 = add nsw i64 %add280, 33554432
  %11 = lshr i64 %add283, 26
  %add285 = add i64 %sub241, %11
  %and286 = and i64 %add283, 4227858432
  %sub287 = sub i64 %add280, %and286
  %conv288 = trunc i64 %sub287 to i32
  store i32 %conv288, i32* %h, align 4, !tbaa !11
  %conv290 = trunc i64 %add285 to i32
  %arrayidx291 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv290, i32* %arrayidx291, align 4, !tbaa !11
  %conv292 = trunc i64 %sub251 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv292, i32* %arrayidx293, align 4, !tbaa !11
  %conv294 = trunc i64 %sub261 to i32
  %arrayidx295 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv294, i32* %arrayidx295, align 4, !tbaa !11
  %conv296 = trunc i64 %sub271 to i32
  %arrayidx297 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv296, i32* %arrayidx297, align 4, !tbaa !11
  %conv298 = trunc i64 %add269 to i32
  %arrayidx299 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv298, i32* %arrayidx299, align 4, !tbaa !11
  %conv300 = trunc i64 %sub256 to i32
  %arrayidx301 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv300, i32* %arrayidx301, align 4, !tbaa !11
  %conv302 = trunc i64 %sub266 to i32
  %arrayidx303 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv302, i32* %arrayidx303, align 4, !tbaa !11
  %conv304 = trunc i64 %sub276 to i32
  %arrayidx305 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv304, i32* %arrayidx305, align 4, !tbaa !11
  %conv306 = trunc i64 %sub282 to i32
  %arrayidx307 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv306, i32* %arrayidx307, align 4, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe_sq2(i32* nocapture noundef writeonly %h, i32* nocapture noundef readonly %f) unnamed_addr #3 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !11
  %arrayidx1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !11
  %arrayidx2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !11
  %arrayidx3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !11
  %arrayidx4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !11
  %arrayidx5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !11
  %arrayidx6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !11
  %arrayidx7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !11
  %arrayidx8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !11
  %arrayidx9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !11
  %mul = shl nsw i32 %0, 1
  %mul10 = shl nsw i32 %1, 1
  %mul11 = shl nsw i32 %2, 1
  %mul12 = shl nsw i32 %3, 1
  %mul13 = shl nsw i32 %4, 1
  %mul14 = shl nsw i32 %5, 1
  %mul15 = shl nsw i32 %6, 1
  %mul16 = shl nsw i32 %7, 1
  %mul17 = mul nsw i32 %5, 38
  %mul18 = mul nsw i32 %6, 19
  %mul19 = mul nsw i32 %7, 38
  %mul20 = mul nsw i32 %8, 19
  %mul21 = mul nsw i32 %9, 38
  %conv = sext i32 %0 to i64
  %mul23 = mul nsw i64 %conv, %conv
  %conv24 = sext i32 %mul to i64
  %conv25 = sext i32 %1 to i64
  %mul26 = mul nsw i64 %conv24, %conv25
  %conv28 = sext i32 %2 to i64
  %mul29 = mul nsw i64 %conv28, %conv24
  %conv31 = sext i32 %3 to i64
  %mul32 = mul nsw i64 %conv31, %conv24
  %conv34 = sext i32 %4 to i64
  %mul35 = mul nsw i64 %conv34, %conv24
  %conv37 = sext i32 %5 to i64
  %mul38 = mul nsw i64 %conv37, %conv24
  %conv40 = sext i32 %6 to i64
  %mul41 = mul nsw i64 %conv40, %conv24
  %conv43 = sext i32 %7 to i64
  %mul44 = mul nsw i64 %conv43, %conv24
  %conv46 = sext i32 %8 to i64
  %mul47 = mul nsw i64 %conv46, %conv24
  %conv49 = sext i32 %9 to i64
  %mul50 = mul nsw i64 %conv49, %conv24
  %conv51 = sext i32 %mul10 to i64
  %mul53 = mul nsw i64 %conv51, %conv25
  %mul56 = mul nsw i64 %conv51, %conv28
  %conv58 = sext i32 %mul12 to i64
  %mul59 = mul nsw i64 %conv58, %conv51
  %mul62 = mul nsw i64 %conv34, %conv51
  %conv64 = sext i32 %mul14 to i64
  %mul65 = mul nsw i64 %conv64, %conv51
  %mul68 = mul nsw i64 %conv40, %conv51
  %conv70 = sext i32 %mul16 to i64
  %mul71 = mul nsw i64 %conv70, %conv51
  %mul74 = mul nsw i64 %conv46, %conv51
  %conv76 = sext i32 %mul21 to i64
  %mul77 = mul nsw i64 %conv76, %conv51
  %mul80 = mul nsw i64 %conv28, %conv28
  %conv81 = sext i32 %mul11 to i64
  %mul83 = mul nsw i64 %conv81, %conv31
  %mul86 = mul nsw i64 %conv34, %conv81
  %mul89 = mul nsw i64 %conv37, %conv81
  %mul92 = mul nsw i64 %conv40, %conv81
  %mul95 = mul nsw i64 %conv43, %conv81
  %conv97 = sext i32 %mul20 to i64
  %mul98 = mul nsw i64 %conv97, %conv81
  %mul101 = mul nsw i64 %conv76, %conv28
  %mul104 = mul nsw i64 %conv58, %conv31
  %mul107 = mul nsw i64 %conv58, %conv34
  %mul110 = mul nsw i64 %conv64, %conv58
  %mul113 = mul nsw i64 %conv40, %conv58
  %conv115 = sext i32 %mul19 to i64
  %mul116 = mul nsw i64 %conv115, %conv58
  %mul119 = mul nsw i64 %conv97, %conv58
  %mul122 = mul nsw i64 %conv76, %conv58
  %mul125 = mul nsw i64 %conv34, %conv34
  %conv126 = sext i32 %mul13 to i64
  %mul128 = mul nsw i64 %conv126, %conv37
  %conv130 = sext i32 %mul18 to i64
  %mul131 = mul nsw i64 %conv130, %conv126
  %mul134 = mul nsw i64 %conv115, %conv34
  %mul137 = mul nsw i64 %conv97, %conv126
  %mul140 = mul nsw i64 %conv76, %conv34
  %conv142 = sext i32 %mul17 to i64
  %mul143 = mul nsw i64 %conv142, %conv37
  %mul146 = mul nsw i64 %conv130, %conv64
  %mul149 = mul nsw i64 %conv115, %conv64
  %mul152 = mul nsw i64 %conv97, %conv64
  %mul155 = mul nsw i64 %conv76, %conv64
  %mul158 = mul nsw i64 %conv130, %conv40
  %mul161 = mul nsw i64 %conv115, %conv40
  %conv162 = sext i32 %mul15 to i64
  %mul164 = mul nsw i64 %conv97, %conv162
  %mul167 = mul nsw i64 %conv76, %conv40
  %mul170 = mul nsw i64 %conv115, %conv43
  %mul173 = mul nsw i64 %conv97, %conv70
  %mul176 = mul nsw i64 %conv76, %conv70
  %mul179 = mul nsw i64 %conv97, %conv46
  %mul182 = mul nsw i64 %conv76, %conv46
  %mul185 = mul nsw i64 %conv76, %conv49
  %add = add i64 %mul143, %mul23
  %add186 = add i64 %add, %mul131
  %add187 = add i64 %add186, %mul116
  %add188 = add i64 %add187, %mul98
  %add189 = add i64 %add188, %mul77
  %add190 = add i64 %mul146, %mul26
  %add191 = add i64 %add190, %mul134
  %add192 = add i64 %add191, %mul119
  %add193 = add i64 %add192, %mul101
  %add194 = add nsw i64 %mul29, %mul53
  %add195 = add i64 %add194, %mul158
  %add196 = add i64 %add195, %mul149
  %add197 = add i64 %add196, %mul137
  %add198 = add i64 %add197, %mul122
  %add199 = add nsw i64 %mul32, %mul56
  %add200 = add i64 %add199, %mul161
  %add201 = add i64 %add200, %mul152
  %add202 = add i64 %add201, %mul140
  %add203 = add i64 %mul59, %mul80
  %add204 = add i64 %add203, %mul35
  %add205 = add i64 %add204, %mul170
  %add206 = add i64 %add205, %mul164
  %add207 = add i64 %add206, %mul155
  %add208 = add i64 %mul62, %mul83
  %add209 = add i64 %add208, %mul38
  %add210 = add i64 %add209, %mul173
  %add211 = add i64 %add210, %mul167
  %add212 = add i64 %mul104, %mul86
  %add213 = add i64 %add212, %mul65
  %add214 = add i64 %add213, %mul41
  %add215 = add i64 %add214, %mul179
  %add216 = add i64 %add215, %mul176
  %add217 = add i64 %mul89, %mul107
  %add218 = add i64 %add217, %mul68
  %add219 = add i64 %add218, %mul44
  %add220 = add i64 %add219, %mul182
  %add221 = add i64 %mul92, %mul125
  %add222 = add i64 %add221, %mul110
  %add223 = add i64 %add222, %mul71
  %add224 = add i64 %add223, %mul47
  %add225 = add i64 %add224, %mul185
  %add226 = add i64 %mul113, %mul128
  %add227 = add i64 %add226, %mul95
  %add228 = add i64 %add227, %mul74
  %add229 = add i64 %add228, %mul50
  %add230 = shl nsw i64 %add189, 1
  %add231 = shl nsw i64 %add193, 1
  %add232 = shl nsw i64 %add198, 1
  %add233 = shl nsw i64 %add202, 1
  %add234 = shl nsw i64 %add207, 1
  %add235 = shl nsw i64 %add211, 1
  %add236 = shl nsw i64 %add216, 1
  %add237 = shl nsw i64 %add220, 1
  %add238 = shl nsw i64 %add225, 1
  %add239 = shl nsw i64 %add229, 1
  %add240 = add nsw i64 %add230, 33554432
  %shr = ashr i64 %add240, 26
  %add241 = add nsw i64 %shr, %add231
  %and = and i64 %add240, -67108864
  %sub = sub nsw i64 %add230, %and
  %add242 = add nsw i64 %add234, 33554432
  %shr243 = ashr i64 %add242, 26
  %add244 = add nsw i64 %shr243, %add235
  %and245 = and i64 %add242, -67108864
  %sub246 = sub nsw i64 %add234, %and245
  %add247 = add nsw i64 %add241, 16777216
  %shr248 = ashr i64 %add247, 25
  %add249 = add nsw i64 %shr248, %add232
  %and250 = and i64 %add247, 4261412864
  %sub251 = sub i64 %add241, %and250
  %add252 = add nsw i64 %add244, 16777216
  %shr253 = ashr i64 %add252, 25
  %add254 = add nsw i64 %shr253, %add236
  %and255 = and i64 %add252, 4261412864
  %sub256 = sub i64 %add244, %and255
  %add257 = add nsw i64 %add249, 33554432
  %shr258 = ashr i64 %add257, 26
  %add259 = add nsw i64 %shr258, %add233
  %and260 = and i64 %add257, 4227858432
  %sub261 = sub i64 %add249, %and260
  %add262 = add nsw i64 %add254, 33554432
  %shr263 = ashr i64 %add262, 26
  %add264 = add nsw i64 %shr263, %add237
  %and265 = and i64 %add262, 4227858432
  %sub266 = sub i64 %add254, %and265
  %add267 = add nsw i64 %add259, 16777216
  %shr268 = ashr i64 %add267, 25
  %add269 = add nsw i64 %shr268, %sub246
  %and270 = and i64 %add267, 4261412864
  %sub271 = sub i64 %add259, %and270
  %add272 = add nsw i64 %add264, 16777216
  %shr273 = ashr i64 %add272, 25
  %add274 = add nsw i64 %shr273, %add238
  %and275 = and i64 %add272, 4261412864
  %sub276 = sub i64 %add264, %and275
  %add277 = add nsw i64 %add269, 33554432
  %10 = lshr i64 %add277, 26
  %add279 = add i64 %sub256, %10
  %and280 = and i64 %add277, 4227858432
  %sub281 = sub i64 %add269, %and280
  %add282 = add nsw i64 %add274, 33554432
  %shr283 = ashr i64 %add282, 26
  %add284 = add nsw i64 %shr283, %add239
  %and285 = and i64 %add282, 4227858432
  %sub286 = sub i64 %add274, %and285
  %add287 = add nsw i64 %add284, 16777216
  %shr288 = ashr i64 %add287, 25
  %mul289 = mul nsw i64 %shr288, 19
  %add290 = add nsw i64 %mul289, %sub
  %and291 = and i64 %add287, 4261412864
  %sub292 = sub i64 %add284, %and291
  %add293 = add nsw i64 %add290, 33554432
  %11 = lshr i64 %add293, 26
  %add295 = add i64 %sub251, %11
  %and296 = and i64 %add293, 4227858432
  %sub297 = sub i64 %add290, %and296
  %conv298 = trunc i64 %sub297 to i32
  store i32 %conv298, i32* %h, align 4, !tbaa !11
  %conv300 = trunc i64 %add295 to i32
  %arrayidx301 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv300, i32* %arrayidx301, align 4, !tbaa !11
  %conv302 = trunc i64 %sub261 to i32
  %arrayidx303 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv302, i32* %arrayidx303, align 4, !tbaa !11
  %conv304 = trunc i64 %sub271 to i32
  %arrayidx305 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv304, i32* %arrayidx305, align 4, !tbaa !11
  %conv306 = trunc i64 %sub281 to i32
  %arrayidx307 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv306, i32* %arrayidx307, align 4, !tbaa !11
  %conv308 = trunc i64 %add279 to i32
  %arrayidx309 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv308, i32* %arrayidx309, align 4, !tbaa !11
  %conv310 = trunc i64 %sub266 to i32
  %arrayidx311 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv310, i32* %arrayidx311, align 4, !tbaa !11
  %conv312 = trunc i64 %sub276 to i32
  %arrayidx313 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv312, i32* %arrayidx313, align 4, !tbaa !11
  %conv314 = trunc i64 %sub286 to i32
  %arrayidx315 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv314, i32* %arrayidx315, align 4, !tbaa !11
  %conv316 = trunc i64 %sub292 to i32
  %arrayidx317 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv316, i32* %arrayidx317, align 4, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind uwtable willreturn
define internal fastcc i32 @fe_isnegative(i32* nocapture noundef readonly %f) unnamed_addr #10 {
entry:
  %s = alloca [32 x i8], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #12
  call fastcc void @fe_tobytes(i8* noundef nonnull %0, i32* noundef %f) #14
  %1 = load i8, i8* %0, align 16, !tbaa !4
  %2 = and i8 %1, 1
  %and = zext i8 %2 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #12
  ret i32 %and
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe_frombytes(i32* nocapture noundef writeonly %h, i8* nocapture noundef readonly %s) unnamed_addr #3 {
entry:
  %call = tail call fastcc i64 @load_4(i8* noundef %s) #14
  %add.ptr = getelementptr inbounds i8, i8* %s, i64 4
  %call1 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr) #14
  %shl = shl i64 %call1, 6
  %add.ptr2 = getelementptr inbounds i8, i8* %s, i64 7
  %call3 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr2) #14
  %shl4 = shl i64 %call3, 5
  %add.ptr5 = getelementptr inbounds i8, i8* %s, i64 10
  %call6 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr5) #14
  %shl7 = shl i64 %call6, 3
  %add.ptr8 = getelementptr inbounds i8, i8* %s, i64 13
  %call9 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr8) #14
  %shl10 = shl i64 %call9, 2
  %add.ptr11 = getelementptr inbounds i8, i8* %s, i64 16
  %call12 = tail call fastcc i64 @load_4(i8* noundef nonnull %add.ptr11) #14
  %add.ptr13 = getelementptr inbounds i8, i8* %s, i64 20
  %call14 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr13) #14
  %shl15 = shl i64 %call14, 7
  %add.ptr16 = getelementptr inbounds i8, i8* %s, i64 23
  %call17 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr16) #14
  %shl18 = shl i64 %call17, 5
  %add.ptr19 = getelementptr inbounds i8, i8* %s, i64 26
  %call20 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr19) #14
  %shl21 = shl i64 %call20, 4
  %add.ptr22 = getelementptr inbounds i8, i8* %s, i64 29
  %call23 = tail call fastcc i64 @load_3(i8* noundef nonnull %add.ptr22) #14
  %and = shl i64 %call23, 2
  %shl24 = and i64 %and, 33554428
  %add = add nuw nsw i64 %shl24, 16777216
  %0 = lshr i64 %add, 25
  %mul = mul nuw nsw i64 %0, 19
  %add25 = add nsw i64 %mul, %call
  %and26 = and i64 %add, 33554432
  %sub = sub nsw i64 %shl24, %and26
  %add27 = add nsw i64 %shl, 16777216
  %shr28 = ashr i64 %add27, 25
  %add29 = add nsw i64 %shr28, %shl4
  %and30 = and i64 %add27, 4261412864
  %sub31 = sub i64 %shl, %and30
  %add32 = add nsw i64 %shl7, 16777216
  %shr33 = ashr i64 %add32, 25
  %add34 = add nsw i64 %shr33, %shl10
  %and35 = and i64 %add32, 4261412864
  %sub36 = sub i64 %shl7, %and35
  %add37 = add nsw i64 %call12, 16777216
  %shr38 = ashr i64 %add37, 25
  %add39 = add nsw i64 %shl15, %shr38
  %and40 = and i64 %add37, 4261412864
  %sub41 = sub i64 %call12, %and40
  %add42 = add nsw i64 %shl18, 16777216
  %shr43 = ashr i64 %add42, 25
  %add44 = add nsw i64 %shr43, %shl21
  %and45 = and i64 %add42, 4261412864
  %sub46 = sub i64 %shl18, %and45
  %add47 = add nsw i64 %add25, 33554432
  %1 = lshr i64 %add47, 26
  %add49 = add i64 %sub31, %1
  %and50 = and i64 %add47, 4227858432
  %sub51 = sub i64 %add25, %and50
  %add52 = add nsw i64 %add29, 33554432
  %2 = lshr i64 %add52, 26
  %add54 = add i64 %sub36, %2
  %and55 = and i64 %add52, 4227858432
  %sub56 = sub i64 %add29, %and55
  %add57 = add nsw i64 %add34, 33554432
  %3 = lshr i64 %add57, 26
  %add59 = add i64 %sub41, %3
  %and60 = and i64 %add57, 4227858432
  %sub61 = sub i64 %add34, %and60
  %add62 = add nsw i64 %add39, 33554432
  %4 = lshr i64 %add62, 26
  %add64 = add i64 %sub46, %4
  %and65 = and i64 %add62, 4227858432
  %sub66 = sub i64 %add39, %and65
  %add67 = add nsw i64 %add44, 33554432
  %5 = lshr i64 %add67, 26
  %add69 = add nsw i64 %sub, %5
  %and70 = and i64 %add67, 4227858432
  %sub71 = sub i64 %add44, %and70
  %conv = trunc i64 %sub51 to i32
  store i32 %conv, i32* %h, align 4, !tbaa !11
  %conv72 = trunc i64 %add49 to i32
  %arrayidx73 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv72, i32* %arrayidx73, align 4, !tbaa !11
  %conv74 = trunc i64 %sub56 to i32
  %arrayidx75 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv74, i32* %arrayidx75, align 4, !tbaa !11
  %conv76 = trunc i64 %add54 to i32
  %arrayidx77 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv76, i32* %arrayidx77, align 4, !tbaa !11
  %conv78 = trunc i64 %sub61 to i32
  %arrayidx79 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv78, i32* %arrayidx79, align 4, !tbaa !11
  %conv80 = trunc i64 %add59 to i32
  %arrayidx81 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv80, i32* %arrayidx81, align 4, !tbaa !11
  %conv82 = trunc i64 %sub66 to i32
  %arrayidx83 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv82, i32* %arrayidx83, align 4, !tbaa !11
  %conv84 = trunc i64 %add64 to i32
  %arrayidx85 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv84, i32* %arrayidx85, align 4, !tbaa !11
  %conv86 = trunc i64 %sub71 to i32
  %arrayidx87 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv86, i32* %arrayidx87, align 4, !tbaa !11
  %conv88 = trunc i64 %add69 to i32
  %arrayidx89 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv88, i32* %arrayidx89, align 4, !tbaa !11
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @fe_pow22523(i32* nocapture noundef writeonly %out, i32* nocapture noundef readonly %z) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %t1 = alloca [10 x i32], align 16
  %t2 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [10 x i32]* %t1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [10 x i32]* %t2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay, i32* noundef %z) #14
  %arraydecay1 = getelementptr inbounds [10 x i32], [10 x i32]* %t1, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef %z, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  %arraydecay41 = getelementptr inbounds [10 x i32], [10 x i32]* %t2, i64 0, i64 0
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  br label %for.body71

for.body71:                                       ; preds = %entry, %for.body71
  %i.5141 = phi i32 [ 1, %entry ], [ %inc75, %for.body71 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  %inc75 = add nuw nsw i32 %i.5141, 1
  %exitcond.not = icmp eq i32 %inc75, 50
  br i1 %exitcond.not, label %for.end76, label %for.body71, !llvm.loop !20

for.end76:                                        ; preds = %for.body71
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay1) #14
  br label %for.body84

for.body84:                                       ; preds = %for.end76, %for.body84
  %i.6142 = phi i32 [ 1, %for.end76 ], [ %inc88, %for.body84 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay41) #14
  %inc88 = add nuw nsw i32 %i.6142, 1
  %exitcond144.not = icmp eq i32 %inc88, 100
  br i1 %exitcond144.not, label %for.end89, label %for.body84, !llvm.loop !21

for.end89:                                        ; preds = %for.body84
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay41, i32* noundef nonnull %arraydecay1) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  br label %for.body97

for.body97:                                       ; preds = %for.end89, %for.body97
  %i.7143 = phi i32 [ 1, %for.end89 ], [ %inc101, %for.body97 ]
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay1) #14
  %inc101 = add nuw nsw i32 %i.7143, 1
  %exitcond145.not = icmp eq i32 %inc101, 50
  br i1 %exitcond145.not, label %for.end102, label %for.body97, !llvm.loop !22

for.end102:                                       ; preds = %for.body97
  call fastcc void @fe_mul(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_sq(i32* noundef nonnull %arraydecay, i32* noundef nonnull %arraydecay) #14
  call fastcc void @fe_mul(i32* noundef %out, i32* noundef nonnull %arraydecay, i32* noundef %z) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc i32 @fe_isnonzero(i32* nocapture noundef readonly %f) unnamed_addr #0 {
entry:
  %s = alloca [32 x i8], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #12
  call fastcc void @fe_tobytes(i8* noundef nonnull %0, i32* noundef %f) #14
  %call = call i32 @CRYPTO_memcmp(i8* noundef nonnull %0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @fe_isnonzero.zero, i64 0, i64 0), i64 noundef 32) #13
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #12
  ret i32 %conv
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @slide(i8* nocapture noundef %r, i8* nocapture noundef readonly %a) unnamed_addr #6 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.body ]
  %0 = trunc i64 %indvars.iv to i8
  %1 = lshr i64 %indvars.iv, 3
  %idxprom = and i64 %1, 536870911
  %arrayidx = getelementptr inbounds i8, i8* %a, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !4
  %and = and i8 %0, 6
  %shr1 = lshr i8 %2, %and
  %conv3 = and i8 %shr1, 1
  %arrayidx5 = getelementptr inbounds i8, i8* %r, i64 %indvars.iv
  store i8 %conv3, i8* %arrayidx5, align 1, !tbaa !4
  %indvars.iv.next = or i64 %indvars.iv, 1
  %3 = trunc i64 %indvars.iv.next to i8
  %4 = lshr i64 %indvars.iv, 3
  %idxprom.1 = and i64 %4, 536870911
  %arrayidx.1 = getelementptr inbounds i8, i8* %a, i64 %idxprom.1
  %5 = load i8, i8* %arrayidx.1, align 1, !tbaa !4
  %and.1 = and i8 %3, 7
  %shr1.1 = lshr i8 %5, %and.1
  %conv3.1 = and i8 %shr1.1, 1
  %arrayidx5.1 = getelementptr inbounds i8, i8* %r, i64 %indvars.iv.next
  store i8 %conv3.1, i8* %arrayidx5.1, align 1, !tbaa !4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 256
  br i1 %exitcond.not.1, label %for.body9, label %for.body, !llvm.loop !23

for.body9:                                        ; preds = %for.body, %for.inc92
  %indvars.iv174 = phi i64 [ %indvars.iv.next175, %for.inc92 ], [ 0, %for.body ]
  %indvars.iv161 = phi i64 [ %indvars.iv.next162, %for.inc92 ], [ 1, %for.body ]
  %arrayidx11 = getelementptr inbounds i8, i8* %r, i64 %indvars.iv174
  %6 = load i8, i8* %arrayidx11, align 1, !tbaa !4
  %tobool.not = icmp ne i8 %6, 0
  %cmp15152 = icmp ult i64 %indvars.iv174, 255
  %or.cond = select i1 %tobool.not, i1 %cmp15152, i1 false
  br i1 %or.cond, label %for.body17, label %for.inc92

for.body17:                                       ; preds = %for.body9, %for.inc88
  %indvars.iv168 = phi i64 [ %indvars.iv.next169, %for.inc88 ], [ 1, %for.body9 ]
  %indvars.iv163 = phi i64 [ %indvars.iv.next164, %for.inc88 ], [ %indvars.iv161, %for.body9 ]
  %arrayidx20 = getelementptr inbounds i8, i8* %r, i64 %indvars.iv163
  %7 = load i8, i8* %arrayidx20, align 1, !tbaa !4
  %tobool21.not = icmp eq i8 %7, 0
  br i1 %tobool21.not, label %for.inc88, label %if.then22

if.then22:                                        ; preds = %for.body17
  %8 = load i8, i8* %arrayidx11, align 1, !tbaa !4
  %conv25 = sext i8 %8 to i32
  %conv29 = sext i8 %7 to i32
  %9 = trunc i64 %indvars.iv168 to i32
  %shl = shl nsw i32 %conv29, %9
  %add30 = add nsw i32 %shl, %conv25
  %cmp31 = icmp slt i32 %add30, 16
  br i1 %cmp31, label %if.then33, label %if.else

if.then33:                                        ; preds = %if.then22
  %conv43 = trunc i32 %add30 to i8
  store i8 %conv43, i8* %arrayidx11, align 1, !tbaa !4
  store i8 0, i8* %arrayidx20, align 1, !tbaa !4
  br label %for.inc88

if.else:                                          ; preds = %if.then22
  %sub = sub nsw i32 %conv25, %shl
  %cmp55 = icmp sgt i32 %sub, -16
  br i1 %cmp55, label %for.body72.preheader, label %for.inc92

for.body72.preheader:                             ; preds = %if.else
  %conv67 = trunc i32 %sub to i8
  store i8 %conv67, i8* %arrayidx11, align 1, !tbaa !4
  br label %for.body72

for.body72:                                       ; preds = %for.body72.preheader, %if.end
  %indvars.iv165 = phi i64 [ %indvars.iv163, %for.body72.preheader ], [ %indvars.iv.next166, %if.end ]
  %arrayidx74 = getelementptr inbounds i8, i8* %r, i64 %indvars.iv165
  %10 = load i8, i8* %arrayidx74, align 1, !tbaa !4
  %tobool75.not = icmp eq i8 %10, 0
  br i1 %tobool75.not, label %if.then76, label %if.end

if.then76:                                        ; preds = %for.body72
  store i8 1, i8* %arrayidx74, align 1, !tbaa !4
  br label %for.inc88

if.end:                                           ; preds = %for.body72
  store i8 0, i8* %arrayidx74, align 1, !tbaa !4
  %indvars.iv.next166 = add nuw nsw i64 %indvars.iv165, 1
  %cmp70 = icmp ult i64 %indvars.iv165, 255
  br i1 %cmp70, label %for.body72, label %for.inc88, !llvm.loop !24

for.inc88:                                        ; preds = %if.end, %for.body17, %if.then76, %if.then33
  %indvars.iv.next169 = add nuw nsw i64 %indvars.iv168, 1
  %cmp13 = icmp ult i64 %indvars.iv168, 6
  %11 = add nuw nsw i64 %indvars.iv.next169, %indvars.iv174
  %indvars.iv.next164 = add nuw nsw i64 %indvars.iv163, 1
  %cmp15 = icmp ult i64 %11, 256
  %12 = select i1 %cmp13, i1 %cmp15, i1 false
  br i1 %12, label %for.body17, label %for.inc92, !llvm.loop !25

for.inc92:                                        ; preds = %for.inc88, %if.else, %for.body9
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 256
  br i1 %exitcond177.not, label %for.end94, label %for.body9, !llvm.loop !26

for.end94:                                        ; preds = %for.inc92
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_p3_to_cached(%struct.ge_cached* noundef %r, %struct.ge_p3* noundef %p) unnamed_addr #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_add(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay2) #14
  %arraydecay3 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay3, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay2) #14
  %arraydecay8 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %r, i64 0, i32 2, i64 0
  %arraydecay10 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  tail call fastcc void @fe_copy(i32* noundef nonnull %arraydecay8, i32* noundef nonnull %arraydecay10) #14
  %arraydecay11 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %r, i64 0, i32 3, i64 0
  %arraydecay12 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay11, i32* noundef nonnull %arraydecay12, i32* noundef getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #14
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_add(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p3* nocapture noundef readonly %p, %struct.ge_cached* nocapture noundef readonly %q) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_add(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef %arraydecay, i32* noundef %arraydecay13) #14
  %arraydecay18 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay18) #14
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 3, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay20, i32* noundef nonnull %arraydecay22) #14
  %arraydecay26 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  %arraydecay28 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay26, i32* noundef nonnull %arraydecay28) #14
  %arraydecay29 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay29, i32* noundef %arraydecay, i32* noundef %arraydecay) #14
  tail call fastcc void @fe_sub(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay29, i32* noundef nonnull %arraydecay19) #14
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay29, i32* noundef nonnull %arraydecay19) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @ge_p2_0(%struct.ge_p2* noundef %h) unnamed_addr #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 0, i64 0
  tail call fastcc void @fe_0(i32* noundef %arraydecay) #14
  %arraydecay1 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 1, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay1) #14
  %arraydecay2 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %h, i64 0, i32 2, i64 0
  tail call fastcc void @fe_1(i32* noundef nonnull %arraydecay2) #14
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_sub(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p3* nocapture noundef readonly %p, %struct.ge_cached* nocapture noundef readonly %q) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_add(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef %arraydecay, i32* noundef nonnull %arraydecay13) #14
  %arraydecay18 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef %arraydecay18) #14
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 3, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay20, i32* noundef nonnull %arraydecay22) #14
  %arraydecay26 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  %arraydecay28 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay26, i32* noundef nonnull %arraydecay28) #14
  %arraydecay29 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay29, i32* noundef %arraydecay, i32* noundef %arraydecay) #14
  tail call fastcc void @fe_sub(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay29, i32* noundef nonnull %arraydecay19) #14
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay29, i32* noundef nonnull %arraydecay19) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: nofree noinline nosync nounwind uwtable
define internal fastcc void @ge_msub(%struct.ge_p1p1* nocapture noundef %r, %struct.ge_p3* nocapture noundef readonly %p, %struct.ge_precomp* nocapture noundef readonly %q) unnamed_addr #4 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_add(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sub(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay1, i32* noundef %arraydecay3) #14
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay10, i32* noundef %arraydecay, i32* noundef nonnull %arraydecay13) #14
  %arraydecay18 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay5, i32* noundef %arraydecay18) #14
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 2, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay20, i32* noundef nonnull %arraydecay22) #14
  %arraydecay23 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  %arraydecay25 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay25, i32* noundef nonnull %arraydecay25) #14
  tail call fastcc void @fe_sub(i32* noundef %arraydecay, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  tail call fastcc void @fe_add(i32* noundef nonnull %arraydecay5, i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay5) #14
  call fastcc void @fe_sub(i32* noundef nonnull %arraydecay10, i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay19) #14
  call fastcc void @fe_add(i32* noundef nonnull %arraydecay19, i32* noundef nonnull %arraydecay23, i32* noundef nonnull %arraydecay19) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

declare i32 @x25519_fe64_eligible() local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @x25519_scalar_mulx(i8* noundef %out, i8* noundef %scalar, i8* nocapture noundef readonly %point) unnamed_addr #0 {
entry:
  %x1 = alloca [4 x i64], align 16
  %x2 = alloca [4 x i64], align 16
  %z2 = alloca [4 x i64], align 16
  %x3 = alloca [4 x i64], align 16
  %z3 = alloca [4 x i64], align 16
  %tmp0 = alloca [4 x i64], align 16
  %tmp1 = alloca [4 x i64], align 16
  %e = alloca [32 x i8], align 16
  %0 = bitcast [4 x i64]* %x1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #12
  %1 = bitcast [4 x i64]* %x2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #12
  %2 = bitcast [4 x i64]* %z2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #12
  %3 = bitcast [4 x i64]* %x3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #12
  %4 = bitcast [4 x i64]* %z3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #12
  %5 = bitcast [4 x i64]* %tmp0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = bitcast [4 x i64]* %tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %call = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %scalar, i64 noundef 32) #13
  %8 = load i8, i8* %7, align 16, !tbaa !4
  %9 = and i8 %8, -8
  store i8 %9, i8* %7, align 16, !tbaa !4
  %arrayidx2 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 31
  %10 = load i8, i8* %arrayidx2, align 1, !tbaa !4
  %11 = and i8 %10, 63
  %12 = or i8 %11, 64
  store i8 %12, i8* %arrayidx2, align 1, !tbaa !4
  %arraydecay9 = getelementptr inbounds [4 x i64], [4 x i64]* %x1, i64 0, i64 0
  call fastcc void @fe64_frombytes(i64* noundef nonnull %arraydecay9, i8* noundef %point) #14
  %arraydecay10 = getelementptr inbounds [4 x i64], [4 x i64]* %x2, i64 0, i64 0
  call fastcc void @fe64_1(i64* noundef nonnull %arraydecay10) #14
  %arraydecay11 = getelementptr inbounds [4 x i64], [4 x i64]* %z2, i64 0, i64 0
  call fastcc void @fe64_0(i64* noundef nonnull %arraydecay11) #14
  %arraydecay12 = getelementptr inbounds [4 x i64], [4 x i64]* %x3, i64 0, i64 0
  call fastcc void @fe64_copy(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay9) #14
  %arraydecay14 = getelementptr inbounds [4 x i64], [4 x i64]* %z3, i64 0, i64 0
  call fastcc void @fe64_1(i64* noundef nonnull %arraydecay14) #14
  %arraydecay24 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 0
  %arraydecay27 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %swap.091 = phi i32 [ 0, %entry ], [ %and19, %for.body ]
  %pos.090 = phi i32 [ 254, %entry ], [ %dec, %for.body ]
  %div89 = lshr i32 %pos.090, 3
  %13 = zext i32 %div89 to i64
  %arrayidx16 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 %13
  %14 = load i8, i8* %arrayidx16, align 1, !tbaa !4
  %conv17 = zext i8 %14 to i32
  %and18 = and i32 %pos.090, 7
  %shr = lshr i32 %conv17, %and18
  %and19 = and i32 %shr, 1
  %xor = xor i32 %and19, %swap.091
  call fastcc void @fe64_cswap(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay12, i32 noundef %xor) #14
  call fastcc void @fe64_cswap(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay14, i32 noundef %xor) #14
  call void @x25519_fe64_sub(i64* noundef nonnull %arraydecay24, i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay14) #13
  call void @x25519_fe64_sub(i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_add(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_add(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay14) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay14, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay24) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay27) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay24, i64* noundef nonnull %arraydecay27) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_add(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay14, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_sub(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay14, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay24) #13
  call void @x25519_fe64_sub(i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay24) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_mul121666(i64* noundef nonnull %arraydecay14, i64* noundef nonnull %arraydecay27) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay12, i64* noundef nonnull %arraydecay12) #13
  call void @x25519_fe64_add(i64* noundef nonnull %arraydecay24, i64* noundef nonnull %arraydecay24, i64* noundef nonnull %arraydecay14) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay14, i64* noundef nonnull %arraydecay9, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay27, i64* noundef nonnull %arraydecay24) #13
  %dec = add nsw i32 %pos.090, -1
  %cmp.not = icmp eq i32 %pos.090, 0
  br i1 %cmp.not, label %for.end, label %for.body, !llvm.loop !27

for.end:                                          ; preds = %for.body
  call fastcc void @fe64_invert(i64* noundef nonnull %arraydecay11, i64* noundef nonnull %arraydecay11) #14
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay11) #13
  call void @x25519_fe64_tobytes(i8* noundef %out, i64* noundef nonnull %arraydecay10) #13
  call void @OPENSSL_cleanse(i8* noundef nonnull %7, i64 noundef 32) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe51_frombytes(i64* nocapture noundef writeonly %h, i8* nocapture noundef readonly %s) unnamed_addr #3 {
entry:
  %call = tail call fastcc i64 @load_7(i8* noundef %s) #14
  %add.ptr = getelementptr inbounds i8, i8* %s, i64 7
  %call1 = tail call fastcc i64 @load_6(i8* noundef nonnull %add.ptr) #14
  %shl = shl i64 %call1, 5
  %add.ptr2 = getelementptr inbounds i8, i8* %s, i64 13
  %call3 = tail call fastcc i64 @load_7(i8* noundef nonnull %add.ptr2) #14
  %shl4 = shl i64 %call3, 2
  %add.ptr5 = getelementptr inbounds i8, i8* %s, i64 20
  %call6 = tail call fastcc i64 @load_6(i8* noundef nonnull %add.ptr5) #14
  %shl7 = shl i64 %call6, 7
  %add.ptr8 = getelementptr inbounds i8, i8* %s, i64 26
  %call9 = tail call fastcc i64 @load_6(i8* noundef nonnull %add.ptr8) #14
  %and = shl i64 %call9, 4
  %shl10 = and i64 %and, 2251799813685232
  %shr = lshr i64 %call, 51
  %and11 = and i64 %call, 2251799813685247
  %shr12 = lshr i64 %shl, 51
  %shl.masked = and i64 %shl, 2251799813685216
  %and14 = or i64 %shl.masked, %shr
  %shr15 = lshr i64 %shl4, 51
  %shl4.masked = and i64 %shl4, 2251799813685244
  %and17 = or i64 %shl4.masked, %shr12
  %shr18 = lshr i64 %shl7, 51
  %or19 = or i64 %shl10, %shr18
  %shl7.masked = and i64 %shl7, 2251799813685120
  %and20 = or i64 %shl7.masked, %shr15
  store i64 %and11, i64* %h, align 8, !tbaa !28
  %arrayidx21 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %and14, i64* %arrayidx21, align 8, !tbaa !28
  %arrayidx22 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %and17, i64* %arrayidx22, align 8, !tbaa !28
  %arrayidx23 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %and20, i64* %arrayidx23, align 8, !tbaa !28
  %arrayidx24 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 %or19, i64* %arrayidx24, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc void @fe51_1(i64* nocapture noundef writeonly %h) unnamed_addr #11 {
entry:
  %0 = bitcast i64* %h to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %0, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 2
  %1 = bitcast i64* %arrayidx2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 0, i64* %arrayidx4, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc void @fe51_0(i64* nocapture noundef writeonly %h) unnamed_addr #11 {
entry:
  %0 = bitcast i64* %h to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %0, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 2
  %1 = bitcast i64* %arrayidx2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 0, i64* %arrayidx4, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe51_copy(i64* nocapture noundef writeonly %h, i64* nocapture noundef readonly %f) unnamed_addr #3 {
entry:
  %0 = load i64, i64* %f, align 8, !tbaa !28
  store i64 %0, i64* %h, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %f, i64 1
  %1 = load i64, i64* %arrayidx2, align 8, !tbaa !28
  %arrayidx3 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %1, i64* %arrayidx3, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %f, i64 2
  %2 = load i64, i64* %arrayidx4, align 8, !tbaa !28
  %arrayidx5 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %2, i64* %arrayidx5, align 8, !tbaa !28
  %arrayidx6 = getelementptr inbounds i64, i64* %f, i64 3
  %3 = load i64, i64* %arrayidx6, align 8, !tbaa !28
  %arrayidx7 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %3, i64* %arrayidx7, align 8, !tbaa !28
  %arrayidx8 = getelementptr inbounds i64, i64* %f, i64 4
  %4 = load i64, i64* %arrayidx8, align 8, !tbaa !28
  %arrayidx9 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 %4, i64* %arrayidx9, align 8, !tbaa !28
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe51_cswap(i64* nocapture noundef %f, i64* nocapture noundef %g, i32 noundef %b) unnamed_addr #6 {
entry:
  %conv = zext i32 %b to i64
  %sub = sub nsw i64 0, %conv
  %0 = load i64, i64* %f, align 8, !tbaa !28
  %1 = load i64, i64* %g, align 8, !tbaa !28
  %xor = xor i64 %1, %0
  %and = and i64 %xor, %sub
  %xor6 = xor i64 %and, %0
  store i64 %xor6, i64* %f, align 8, !tbaa !28
  %2 = load i64, i64* %g, align 8, !tbaa !28
  %xor9 = xor i64 %2, %and
  store i64 %xor9, i64* %g, align 8, !tbaa !28
  %arrayidx.1 = getelementptr inbounds i64, i64* %f, i64 1
  %3 = load i64, i64* %arrayidx.1, align 8, !tbaa !28
  %arrayidx3.1 = getelementptr inbounds i64, i64* %g, i64 1
  %4 = load i64, i64* %arrayidx3.1, align 8, !tbaa !28
  %xor.1 = xor i64 %4, %3
  %and.1 = and i64 %xor.1, %sub
  %xor6.1 = xor i64 %and.1, %3
  store i64 %xor6.1, i64* %arrayidx.1, align 8, !tbaa !28
  %5 = load i64, i64* %arrayidx3.1, align 8, !tbaa !28
  %xor9.1 = xor i64 %5, %and.1
  store i64 %xor9.1, i64* %arrayidx3.1, align 8, !tbaa !28
  %arrayidx.2 = getelementptr inbounds i64, i64* %f, i64 2
  %6 = load i64, i64* %arrayidx.2, align 8, !tbaa !28
  %arrayidx3.2 = getelementptr inbounds i64, i64* %g, i64 2
  %7 = load i64, i64* %arrayidx3.2, align 8, !tbaa !28
  %xor.2 = xor i64 %7, %6
  %and.2 = and i64 %xor.2, %sub
  %xor6.2 = xor i64 %and.2, %6
  store i64 %xor6.2, i64* %arrayidx.2, align 8, !tbaa !28
  %8 = load i64, i64* %arrayidx3.2, align 8, !tbaa !28
  %xor9.2 = xor i64 %8, %and.2
  store i64 %xor9.2, i64* %arrayidx3.2, align 8, !tbaa !28
  %arrayidx.3 = getelementptr inbounds i64, i64* %f, i64 3
  %9 = load i64, i64* %arrayidx.3, align 8, !tbaa !28
  %arrayidx3.3 = getelementptr inbounds i64, i64* %g, i64 3
  %10 = load i64, i64* %arrayidx3.3, align 8, !tbaa !28
  %xor.3 = xor i64 %10, %9
  %and.3 = and i64 %xor.3, %sub
  %xor6.3 = xor i64 %and.3, %9
  store i64 %xor6.3, i64* %arrayidx.3, align 8, !tbaa !28
  %11 = load i64, i64* %arrayidx3.3, align 8, !tbaa !28
  %xor9.3 = xor i64 %11, %and.3
  store i64 %xor9.3, i64* %arrayidx3.3, align 8, !tbaa !28
  %arrayidx.4 = getelementptr inbounds i64, i64* %f, i64 4
  %12 = load i64, i64* %arrayidx.4, align 8, !tbaa !28
  %arrayidx3.4 = getelementptr inbounds i64, i64* %g, i64 4
  %13 = load i64, i64* %arrayidx3.4, align 8, !tbaa !28
  %xor.4 = xor i64 %13, %12
  %and.4 = and i64 %xor.4, %sub
  %xor6.4 = xor i64 %and.4, %12
  store i64 %xor6.4, i64* %arrayidx.4, align 8, !tbaa !28
  %14 = load i64, i64* %arrayidx3.4, align 8, !tbaa !28
  %xor9.4 = xor i64 %14, %and.4
  store i64 %xor9.4, i64* %arrayidx3.4, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe51_sub(i64* nocapture noundef writeonly %h, i64* nocapture noundef readonly %f, i64* nocapture noundef readonly %g) unnamed_addr #3 {
entry:
  %0 = load i64, i64* %f, align 8, !tbaa !28
  %add = add i64 %0, 4503599627370458
  %1 = load i64, i64* %g, align 8, !tbaa !28
  %sub = sub i64 %add, %1
  store i64 %sub, i64* %h, align 8, !tbaa !28
  %arrayidx3 = getelementptr inbounds i64, i64* %f, i64 1
  %2 = load i64, i64* %arrayidx3, align 8, !tbaa !28
  %add4 = add i64 %2, 4503599627370494
  %arrayidx5 = getelementptr inbounds i64, i64* %g, i64 1
  %3 = load i64, i64* %arrayidx5, align 8, !tbaa !28
  %sub6 = sub i64 %add4, %3
  %arrayidx7 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %sub6, i64* %arrayidx7, align 8, !tbaa !28
  %arrayidx8 = getelementptr inbounds i64, i64* %f, i64 2
  %4 = load i64, i64* %arrayidx8, align 8, !tbaa !28
  %add9 = add i64 %4, 4503599627370494
  %arrayidx10 = getelementptr inbounds i64, i64* %g, i64 2
  %5 = load i64, i64* %arrayidx10, align 8, !tbaa !28
  %sub11 = sub i64 %add9, %5
  %arrayidx12 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %sub11, i64* %arrayidx12, align 8, !tbaa !28
  %arrayidx13 = getelementptr inbounds i64, i64* %f, i64 3
  %6 = load i64, i64* %arrayidx13, align 8, !tbaa !28
  %add14 = add i64 %6, 4503599627370494
  %arrayidx15 = getelementptr inbounds i64, i64* %g, i64 3
  %7 = load i64, i64* %arrayidx15, align 8, !tbaa !28
  %sub16 = sub i64 %add14, %7
  %arrayidx17 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %sub16, i64* %arrayidx17, align 8, !tbaa !28
  %arrayidx18 = getelementptr inbounds i64, i64* %f, i64 4
  %8 = load i64, i64* %arrayidx18, align 8, !tbaa !28
  %add19 = add i64 %8, 4503599627370494
  %arrayidx20 = getelementptr inbounds i64, i64* %g, i64 4
  %9 = load i64, i64* %arrayidx20, align 8, !tbaa !28
  %sub21 = sub i64 %add19, %9
  %arrayidx22 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 %sub21, i64* %arrayidx22, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe51_add(i64* nocapture noundef writeonly %h, i64* nocapture noundef readonly %f, i64* nocapture noundef readonly %g) unnamed_addr #3 {
entry:
  %0 = load i64, i64* %f, align 8, !tbaa !28
  %1 = load i64, i64* %g, align 8, !tbaa !28
  %add = add i64 %1, %0
  store i64 %add, i64* %h, align 8, !tbaa !28
  %arrayidx3 = getelementptr inbounds i64, i64* %f, i64 1
  %2 = load i64, i64* %arrayidx3, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %g, i64 1
  %3 = load i64, i64* %arrayidx4, align 8, !tbaa !28
  %add5 = add i64 %3, %2
  %arrayidx6 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %add5, i64* %arrayidx6, align 8, !tbaa !28
  %arrayidx7 = getelementptr inbounds i64, i64* %f, i64 2
  %4 = load i64, i64* %arrayidx7, align 8, !tbaa !28
  %arrayidx8 = getelementptr inbounds i64, i64* %g, i64 2
  %5 = load i64, i64* %arrayidx8, align 8, !tbaa !28
  %add9 = add i64 %5, %4
  %arrayidx10 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %add9, i64* %arrayidx10, align 8, !tbaa !28
  %arrayidx11 = getelementptr inbounds i64, i64* %f, i64 3
  %6 = load i64, i64* %arrayidx11, align 8, !tbaa !28
  %arrayidx12 = getelementptr inbounds i64, i64* %g, i64 3
  %7 = load i64, i64* %arrayidx12, align 8, !tbaa !28
  %add13 = add i64 %7, %6
  %arrayidx14 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %add13, i64* %arrayidx14, align 8, !tbaa !28
  %arrayidx15 = getelementptr inbounds i64, i64* %f, i64 4
  %8 = load i64, i64* %arrayidx15, align 8, !tbaa !28
  %arrayidx16 = getelementptr inbounds i64, i64* %g, i64 4
  %9 = load i64, i64* %arrayidx16, align 8, !tbaa !28
  %add17 = add i64 %9, %8
  %arrayidx18 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 %add17, i64* %arrayidx18, align 8, !tbaa !28
  ret void
}

declare void @x25519_fe51_mul(i64* noundef, i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe51_sqr(i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe51_mul121666(i64* noundef, i64* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @fe51_invert(i64* noundef %out, i64* noundef %z) unnamed_addr #0 {
entry:
  %t0 = alloca [5 x i64], align 16
  %t1 = alloca [5 x i64], align 16
  %t2 = alloca [5 x i64], align 16
  %t3 = alloca [5 x i64], align 16
  %0 = bitcast [5 x i64]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #12
  %1 = bitcast [5 x i64]* %t1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #12
  %2 = bitcast [5 x i64]* %t2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #12
  %3 = bitcast [5 x i64]* %t3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  %arraydecay = getelementptr inbounds [5 x i64], [5 x i64]* %t0, i64 0, i64 0
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay, i64* noundef %z) #13
  %arraydecay1 = getelementptr inbounds [5 x i64], [5 x i64]* %t1, i64 0, i64 0
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay1, i64* noundef %z, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay, i64* noundef nonnull %arraydecay, i64* noundef nonnull %arraydecay1) #13
  %arraydecay10 = getelementptr inbounds [5 x i64], [5 x i64]* %t2, i64 0, i64 0
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  %arraydecay35 = getelementptr inbounds [5 x i64], [5 x i64]* %t3, i64 0, i64 0
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  br label %for.body63

for.body63:                                       ; preds = %entry, %for.body63
  %i.4127 = phi i32 [ 1, %entry ], [ %inc67, %for.body63 ]
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  %inc67 = add nuw nsw i32 %i.4127, 1
  %exitcond.not = icmp eq i32 %inc67, 50
  br i1 %exitcond.not, label %for.end68, label %for.body63, !llvm.loop !30

for.end68:                                        ; preds = %for.body63
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  br label %for.body76

for.body76:                                       ; preds = %for.end68, %for.body76
  %i.5128 = phi i32 [ 1, %for.end68 ], [ %inc80, %for.body76 ]
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  %inc80 = add nuw nsw i32 %i.5128, 1
  %exitcond131.not = icmp eq i32 %inc80, 100
  br i1 %exitcond131.not, label %for.end81, label %for.body76, !llvm.loop !31

for.end81:                                        ; preds = %for.body76
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  br label %for.body87

for.body87:                                       ; preds = %for.end81, %for.body87
  %i.6129 = phi i32 [ 0, %for.end81 ], [ %inc91, %for.body87 ]
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  %inc91 = add nuw nsw i32 %i.6129, 1
  %exitcond132.not = icmp eq i32 %inc91, 50
  br i1 %exitcond132.not, label %for.end92, label %for.body87, !llvm.loop !32

for.end92:                                        ; preds = %for.body87
  call void @x25519_fe51_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe51_mul(i64* noundef %out, i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #12
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe51_tobytes(i8* noundef writeonly %s, i64* nocapture noundef readonly %h) unnamed_addr #3 {
entry:
  %0 = load i64, i64* %h, align 8, !tbaa !28
  %arrayidx1 = getelementptr inbounds i64, i64* %h, i64 1
  %1 = load i64, i64* %arrayidx1, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 2
  %2 = load i64, i64* %arrayidx2, align 8, !tbaa !28
  %arrayidx3 = getelementptr inbounds i64, i64* %h, i64 3
  %3 = load i64, i64* %arrayidx3, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %h, i64 4
  %4 = load i64, i64* %arrayidx4, align 8, !tbaa !28
  %add = add i64 %0, 19
  %shr = lshr i64 %add, 51
  %add5 = add i64 %shr, %1
  %shr6 = lshr i64 %add5, 51
  %add7 = add i64 %shr6, %2
  %shr8 = lshr i64 %add7, 51
  %add9 = add i64 %shr8, %3
  %shr10 = lshr i64 %add9, 51
  %add11 = add i64 %shr10, %4
  %shr12 = lshr i64 %add11, 51
  %mul = mul nuw nsw i64 %shr12, 19
  %add13 = add i64 %mul, %0
  %shr14 = lshr i64 %add13, 51
  %add15 = add i64 %shr14, %1
  %shr16 = lshr i64 %add15, 51
  %add17 = add i64 %shr16, %2
  %shr19 = lshr i64 %add17, 51
  %add20 = add i64 %shr19, %3
  %shr22 = lshr i64 %add20, 51
  %add23 = add i64 %shr22, %4
  %conv = trunc i64 %add13 to i8
  store i8 %conv, i8* %s, align 1, !tbaa !4
  %shr28 = lshr i64 %add13, 8
  %conv29 = trunc i64 %shr28 to i8
  %arrayidx30 = getelementptr inbounds i8, i8* %s, i64 1
  store i8 %conv29, i8* %arrayidx30, align 1, !tbaa !4
  %shr31 = lshr i64 %add13, 16
  %conv32 = trunc i64 %shr31 to i8
  %arrayidx33 = getelementptr inbounds i8, i8* %s, i64 2
  store i8 %conv32, i8* %arrayidx33, align 1, !tbaa !4
  %shr34 = lshr i64 %add13, 24
  %conv35 = trunc i64 %shr34 to i8
  %arrayidx36 = getelementptr inbounds i8, i8* %s, i64 3
  store i8 %conv35, i8* %arrayidx36, align 1, !tbaa !4
  %shr37 = lshr i64 %add13, 32
  %conv38 = trunc i64 %shr37 to i8
  %arrayidx39 = getelementptr inbounds i8, i8* %s, i64 4
  store i8 %conv38, i8* %arrayidx39, align 1, !tbaa !4
  %shr40 = lshr i64 %add13, 40
  %conv41 = trunc i64 %shr40 to i8
  %arrayidx42 = getelementptr inbounds i8, i8* %s, i64 5
  store i8 %conv41, i8* %arrayidx42, align 1, !tbaa !4
  %and = lshr i64 %add13, 48
  %shr43 = and i64 %and, 7
  %shl = shl i64 %add15, 3
  %or = or i64 %shl, %shr43
  %conv46 = trunc i64 %or to i8
  %arrayidx47 = getelementptr inbounds i8, i8* %s, i64 6
  store i8 %conv46, i8* %arrayidx47, align 1, !tbaa !4
  %shr48 = lshr i64 %add15, 5
  %conv49 = trunc i64 %shr48 to i8
  %arrayidx50 = getelementptr inbounds i8, i8* %s, i64 7
  store i8 %conv49, i8* %arrayidx50, align 1, !tbaa !4
  %shr51 = lshr i64 %add15, 13
  %conv52 = trunc i64 %shr51 to i8
  %arrayidx53 = getelementptr inbounds i8, i8* %s, i64 8
  store i8 %conv52, i8* %arrayidx53, align 1, !tbaa !4
  %shr54 = lshr i64 %add15, 21
  %conv55 = trunc i64 %shr54 to i8
  %arrayidx56 = getelementptr inbounds i8, i8* %s, i64 9
  store i8 %conv55, i8* %arrayidx56, align 1, !tbaa !4
  %shr57 = lshr i64 %add15, 29
  %conv58 = trunc i64 %shr57 to i8
  %arrayidx59 = getelementptr inbounds i8, i8* %s, i64 10
  store i8 %conv58, i8* %arrayidx59, align 1, !tbaa !4
  %shr60 = lshr i64 %add15, 37
  %conv61 = trunc i64 %shr60 to i8
  %arrayidx62 = getelementptr inbounds i8, i8* %s, i64 11
  store i8 %conv61, i8* %arrayidx62, align 1, !tbaa !4
  %and18 = lshr i64 %add15, 45
  %shr63 = and i64 %and18, 63
  %shl65 = shl i64 %add17, 6
  %or67 = or i64 %shl65, %shr63
  %conv68 = trunc i64 %or67 to i8
  %arrayidx69 = getelementptr inbounds i8, i8* %s, i64 12
  store i8 %conv68, i8* %arrayidx69, align 1, !tbaa !4
  %shr70 = lshr i64 %add17, 2
  %conv71 = trunc i64 %shr70 to i8
  %arrayidx72 = getelementptr inbounds i8, i8* %s, i64 13
  store i8 %conv71, i8* %arrayidx72, align 1, !tbaa !4
  %shr73 = lshr i64 %add17, 10
  %conv74 = trunc i64 %shr73 to i8
  %arrayidx75 = getelementptr inbounds i8, i8* %s, i64 14
  store i8 %conv74, i8* %arrayidx75, align 1, !tbaa !4
  %shr76 = lshr i64 %add17, 18
  %conv77 = trunc i64 %shr76 to i8
  %arrayidx78 = getelementptr inbounds i8, i8* %s, i64 15
  store i8 %conv77, i8* %arrayidx78, align 1, !tbaa !4
  %shr79 = lshr i64 %add17, 26
  %conv80 = trunc i64 %shr79 to i8
  %arrayidx81 = getelementptr inbounds i8, i8* %s, i64 16
  store i8 %conv80, i8* %arrayidx81, align 1, !tbaa !4
  %shr82 = lshr i64 %add17, 34
  %conv83 = trunc i64 %shr82 to i8
  %arrayidx84 = getelementptr inbounds i8, i8* %s, i64 17
  store i8 %conv83, i8* %arrayidx84, align 1, !tbaa !4
  %shr85 = lshr i64 %add17, 42
  %conv86 = trunc i64 %shr85 to i8
  %arrayidx87 = getelementptr inbounds i8, i8* %s, i64 18
  store i8 %conv86, i8* %arrayidx87, align 1, !tbaa !4
  %and21 = lshr i64 %add17, 50
  %shr88 = and i64 %and21, 1
  %shl90 = shl i64 %add20, 1
  %or92 = or i64 %shl90, %shr88
  %conv93 = trunc i64 %or92 to i8
  %arrayidx94 = getelementptr inbounds i8, i8* %s, i64 19
  store i8 %conv93, i8* %arrayidx94, align 1, !tbaa !4
  %shr95 = lshr i64 %add20, 7
  %conv96 = trunc i64 %shr95 to i8
  %arrayidx97 = getelementptr inbounds i8, i8* %s, i64 20
  store i8 %conv96, i8* %arrayidx97, align 1, !tbaa !4
  %shr98 = lshr i64 %add20, 15
  %conv99 = trunc i64 %shr98 to i8
  %arrayidx100 = getelementptr inbounds i8, i8* %s, i64 21
  store i8 %conv99, i8* %arrayidx100, align 1, !tbaa !4
  %shr101 = lshr i64 %add20, 23
  %conv102 = trunc i64 %shr101 to i8
  %arrayidx103 = getelementptr inbounds i8, i8* %s, i64 22
  store i8 %conv102, i8* %arrayidx103, align 1, !tbaa !4
  %shr104 = lshr i64 %add20, 31
  %conv105 = trunc i64 %shr104 to i8
  %arrayidx106 = getelementptr inbounds i8, i8* %s, i64 23
  store i8 %conv105, i8* %arrayidx106, align 1, !tbaa !4
  %shr107 = lshr i64 %add20, 39
  %conv108 = trunc i64 %shr107 to i8
  %arrayidx109 = getelementptr inbounds i8, i8* %s, i64 24
  store i8 %conv108, i8* %arrayidx109, align 1, !tbaa !4
  %and24 = lshr i64 %add20, 47
  %shr110 = and i64 %and24, 15
  %shl112 = shl i64 %add23, 4
  %or114 = or i64 %shl112, %shr110
  %conv115 = trunc i64 %or114 to i8
  %arrayidx116 = getelementptr inbounds i8, i8* %s, i64 25
  store i8 %conv115, i8* %arrayidx116, align 1, !tbaa !4
  %shr117 = lshr i64 %add23, 4
  %conv118 = trunc i64 %shr117 to i8
  %arrayidx119 = getelementptr inbounds i8, i8* %s, i64 26
  store i8 %conv118, i8* %arrayidx119, align 1, !tbaa !4
  %shr120 = lshr i64 %add23, 12
  %conv121 = trunc i64 %shr120 to i8
  %arrayidx122 = getelementptr inbounds i8, i8* %s, i64 27
  store i8 %conv121, i8* %arrayidx122, align 1, !tbaa !4
  %shr123 = lshr i64 %add23, 20
  %conv124 = trunc i64 %shr123 to i8
  %arrayidx125 = getelementptr inbounds i8, i8* %s, i64 28
  store i8 %conv124, i8* %arrayidx125, align 1, !tbaa !4
  %shr126 = lshr i64 %add23, 28
  %conv127 = trunc i64 %shr126 to i8
  %arrayidx128 = getelementptr inbounds i8, i8* %s, i64 29
  store i8 %conv127, i8* %arrayidx128, align 1, !tbaa !4
  %shr129 = lshr i64 %add23, 36
  %conv130 = trunc i64 %shr129 to i8
  %arrayidx131 = getelementptr inbounds i8, i8* %s, i64 30
  store i8 %conv130, i8* %arrayidx131, align 1, !tbaa !4
  %and25 = lshr i64 %add23, 44
  %5 = trunc i64 %and25 to i8
  %conv133 = and i8 %5, 127
  %arrayidx134 = getelementptr inbounds i8, i8* %s, i64 31
  store i8 %conv133, i8* %arrayidx134, align 1, !tbaa !4
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe64_frombytes(i64* nocapture noundef writeonly %h, i8* nocapture noundef readonly %s) unnamed_addr #3 {
entry:
  %call = tail call fastcc i64 @load_8(i8* noundef %s) #14
  store i64 %call, i64* %h, align 8, !tbaa !28
  %add.ptr = getelementptr inbounds i8, i8* %s, i64 8
  %call1 = tail call fastcc i64 @load_8(i8* noundef nonnull %add.ptr) #14
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %call1, i64* %arrayidx2, align 8, !tbaa !28
  %add.ptr3 = getelementptr inbounds i8, i8* %s, i64 16
  %call4 = tail call fastcc i64 @load_8(i8* noundef nonnull %add.ptr3) #14
  %arrayidx5 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %call4, i64* %arrayidx5, align 8, !tbaa !28
  %add.ptr6 = getelementptr inbounds i8, i8* %s, i64 24
  %call7 = tail call fastcc i64 @load_8(i8* noundef nonnull %add.ptr6) #14
  %and = and i64 %call7, 9223372036854775807
  %arrayidx8 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %and, i64* %arrayidx8, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc void @fe64_1(i64* nocapture noundef writeonly %h) unnamed_addr #11 {
entry:
  %0 = bitcast i64* %h to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %0, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 2
  %1 = bitcast i64* %arrayidx2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly
define internal fastcc void @fe64_0(i64* nocapture noundef writeonly %h) unnamed_addr #11 {
entry:
  %0 = bitcast i64* %h to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %0, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %h, i64 2
  %1 = bitcast i64* %arrayidx2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1, align 8, !tbaa !28
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn
define internal fastcc void @fe64_copy(i64* nocapture noundef writeonly %h, i64* nocapture noundef readonly %f) unnamed_addr #3 {
entry:
  %0 = load i64, i64* %f, align 8, !tbaa !28
  store i64 %0, i64* %h, align 8, !tbaa !28
  %arrayidx2 = getelementptr inbounds i64, i64* %f, i64 1
  %1 = load i64, i64* %arrayidx2, align 8, !tbaa !28
  %arrayidx3 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %1, i64* %arrayidx3, align 8, !tbaa !28
  %arrayidx4 = getelementptr inbounds i64, i64* %f, i64 2
  %2 = load i64, i64* %arrayidx4, align 8, !tbaa !28
  %arrayidx5 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %2, i64* %arrayidx5, align 8, !tbaa !28
  %arrayidx6 = getelementptr inbounds i64, i64* %f, i64 3
  %3 = load i64, i64* %arrayidx6, align 8, !tbaa !28
  %arrayidx7 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %3, i64* %arrayidx7, align 8, !tbaa !28
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define internal fastcc void @fe64_cswap(i64* nocapture noundef %f, i64* nocapture noundef %g, i32 noundef %b) unnamed_addr #6 {
entry:
  %conv = zext i32 %b to i64
  %sub = sub nsw i64 0, %conv
  %0 = load i64, i64* %f, align 8, !tbaa !28
  %1 = load i64, i64* %g, align 8, !tbaa !28
  %xor = xor i64 %1, %0
  %and = and i64 %xor, %sub
  %xor6 = xor i64 %and, %0
  store i64 %xor6, i64* %f, align 8, !tbaa !28
  %2 = load i64, i64* %g, align 8, !tbaa !28
  %xor9 = xor i64 %2, %and
  store i64 %xor9, i64* %g, align 8, !tbaa !28
  %arrayidx.1 = getelementptr inbounds i64, i64* %f, i64 1
  %3 = load i64, i64* %arrayidx.1, align 8, !tbaa !28
  %arrayidx3.1 = getelementptr inbounds i64, i64* %g, i64 1
  %4 = load i64, i64* %arrayidx3.1, align 8, !tbaa !28
  %xor.1 = xor i64 %4, %3
  %and.1 = and i64 %xor.1, %sub
  %xor6.1 = xor i64 %and.1, %3
  store i64 %xor6.1, i64* %arrayidx.1, align 8, !tbaa !28
  %5 = load i64, i64* %arrayidx3.1, align 8, !tbaa !28
  %xor9.1 = xor i64 %5, %and.1
  store i64 %xor9.1, i64* %arrayidx3.1, align 8, !tbaa !28
  %arrayidx.2 = getelementptr inbounds i64, i64* %f, i64 2
  %6 = load i64, i64* %arrayidx.2, align 8, !tbaa !28
  %arrayidx3.2 = getelementptr inbounds i64, i64* %g, i64 2
  %7 = load i64, i64* %arrayidx3.2, align 8, !tbaa !28
  %xor.2 = xor i64 %7, %6
  %and.2 = and i64 %xor.2, %sub
  %xor6.2 = xor i64 %and.2, %6
  store i64 %xor6.2, i64* %arrayidx.2, align 8, !tbaa !28
  %8 = load i64, i64* %arrayidx3.2, align 8, !tbaa !28
  %xor9.2 = xor i64 %8, %and.2
  store i64 %xor9.2, i64* %arrayidx3.2, align 8, !tbaa !28
  %arrayidx.3 = getelementptr inbounds i64, i64* %f, i64 3
  %9 = load i64, i64* %arrayidx.3, align 8, !tbaa !28
  %arrayidx3.3 = getelementptr inbounds i64, i64* %g, i64 3
  %10 = load i64, i64* %arrayidx3.3, align 8, !tbaa !28
  %xor.3 = xor i64 %10, %9
  %and.3 = and i64 %xor.3, %sub
  %xor6.3 = xor i64 %and.3, %9
  store i64 %xor6.3, i64* %arrayidx.3, align 8, !tbaa !28
  %11 = load i64, i64* %arrayidx3.3, align 8, !tbaa !28
  %xor9.3 = xor i64 %11, %and.3
  store i64 %xor9.3, i64* %arrayidx3.3, align 8, !tbaa !28
  ret void
}

declare void @x25519_fe64_sub(i64* noundef, i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe64_add(i64* noundef, i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe64_mul(i64* noundef, i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe64_sqr(i64* noundef, i64* noundef) local_unnamed_addr #2

declare void @x25519_fe64_mul121666(i64* noundef, i64* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @fe64_invert(i64* noundef %out, i64* noundef %z) unnamed_addr #0 {
entry:
  %t0 = alloca [4 x i64], align 16
  %t1 = alloca [4 x i64], align 16
  %t2 = alloca [4 x i64], align 16
  %t3 = alloca [4 x i64], align 16
  %0 = bitcast [4 x i64]* %t0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #12
  %1 = bitcast [4 x i64]* %t1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #12
  %2 = bitcast [4 x i64]* %t2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #12
  %3 = bitcast [4 x i64]* %t3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #12
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %t0, i64 0, i64 0
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay, i64* noundef %z) #13
  %arraydecay1 = getelementptr inbounds [4 x i64], [4 x i64]* %t1, i64 0, i64 0
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay1, i64* noundef %z, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay, i64* noundef nonnull %arraydecay, i64* noundef nonnull %arraydecay1) #13
  %arraydecay10 = getelementptr inbounds [4 x i64], [4 x i64]* %t2, i64 0, i64 0
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  %arraydecay35 = getelementptr inbounds [4 x i64], [4 x i64]* %t3, i64 0, i64 0
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  br label %for.body63

for.body63:                                       ; preds = %entry, %for.body63
  %i.4127 = phi i32 [ 1, %entry ], [ %inc67, %for.body63 ]
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  %inc67 = add nuw nsw i32 %i.4127, 1
  %exitcond.not = icmp eq i32 %inc67, 50
  br i1 %exitcond.not, label %for.end68, label %for.body63, !llvm.loop !33

for.end68:                                        ; preds = %for.body63
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  br label %for.body76

for.body76:                                       ; preds = %for.end68, %for.body76
  %i.5128 = phi i32 [ 1, %for.end68 ], [ %inc80, %for.body76 ]
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay35) #13
  %inc80 = add nuw nsw i32 %i.5128, 1
  %exitcond131.not = icmp eq i32 %inc80, 100
  br i1 %exitcond131.not, label %for.end81, label %for.body76, !llvm.loop !34

for.end81:                                        ; preds = %for.body76
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay35, i64* noundef nonnull %arraydecay10) #13
  br label %for.body87

for.body87:                                       ; preds = %for.end81, %for.body87
  %i.6129 = phi i32 [ 0, %for.end81 ], [ %inc91, %for.body87 ]
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay10) #13
  %inc91 = add nuw nsw i32 %i.6129, 1
  %exitcond132.not = icmp eq i32 %inc91, 50
  br i1 %exitcond132.not, label %for.end92, label %for.body87, !llvm.loop !35

for.end92:                                        ; preds = %for.body87
  call void @x25519_fe64_mul(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay10, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_sqr(i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay1) #13
  call void @x25519_fe64_mul(i64* noundef %out, i64* noundef nonnull %arraydecay1, i64* noundef nonnull %arraydecay) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #12
  ret void
}

declare void @x25519_fe64_tobytes(i8* noundef, i64* noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @load_8(i8* nocapture noundef readonly %in) unnamed_addr #8 {
entry:
  %0 = load i8, i8* %in, align 1, !tbaa !4
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %in, i64 1
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !4
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %in, i64 2
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %in, i64 3
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !4
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  %arrayidx11 = getelementptr inbounds i8, i8* %in, i64 4
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !4
  %conv12 = zext i8 %4 to i64
  %shl13 = shl nuw nsw i64 %conv12, 32
  %or14 = or i64 %or10, %shl13
  %arrayidx15 = getelementptr inbounds i8, i8* %in, i64 5
  %5 = load i8, i8* %arrayidx15, align 1, !tbaa !4
  %conv16 = zext i8 %5 to i64
  %shl17 = shl nuw nsw i64 %conv16, 40
  %or18 = or i64 %or14, %shl17
  %arrayidx19 = getelementptr inbounds i8, i8* %in, i64 6
  %6 = load i8, i8* %arrayidx19, align 1, !tbaa !4
  %conv20 = zext i8 %6 to i64
  %shl21 = shl nuw nsw i64 %conv20, 48
  %or22 = or i64 %or18, %shl21
  %arrayidx23 = getelementptr inbounds i8, i8* %in, i64 7
  %7 = load i8, i8* %arrayidx23, align 1, !tbaa !4
  %conv24 = zext i8 %7 to i64
  %shl25 = shl nuw i64 %conv24, 56
  %or26 = or i64 %or22, %shl25
  ret i64 %or26
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @load_7(i8* nocapture noundef readonly %in) unnamed_addr #8 {
entry:
  %0 = load i8, i8* %in, align 1, !tbaa !4
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %in, i64 1
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !4
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %in, i64 2
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %in, i64 3
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !4
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  %arrayidx11 = getelementptr inbounds i8, i8* %in, i64 4
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !4
  %conv12 = zext i8 %4 to i64
  %shl13 = shl nuw nsw i64 %conv12, 32
  %or14 = or i64 %or10, %shl13
  %arrayidx15 = getelementptr inbounds i8, i8* %in, i64 5
  %5 = load i8, i8* %arrayidx15, align 1, !tbaa !4
  %conv16 = zext i8 %5 to i64
  %shl17 = shl nuw nsw i64 %conv16, 40
  %or18 = or i64 %or14, %shl17
  %arrayidx19 = getelementptr inbounds i8, i8* %in, i64 6
  %6 = load i8, i8* %arrayidx19, align 1, !tbaa !4
  %conv20 = zext i8 %6 to i64
  %shl21 = shl nuw nsw i64 %conv20, 48
  %or22 = or i64 %or18, %shl21
  ret i64 %or22
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define internal fastcc i64 @load_6(i8* nocapture noundef readonly %in) unnamed_addr #8 {
entry:
  %0 = load i8, i8* %in, align 1, !tbaa !4
  %conv = zext i8 %0 to i64
  %arrayidx1 = getelementptr inbounds i8, i8* %in, i64 1
  %1 = load i8, i8* %arrayidx1, align 1, !tbaa !4
  %conv2 = zext i8 %1 to i64
  %shl = shl nuw nsw i64 %conv2, 8
  %or = or i64 %shl, %conv
  %arrayidx3 = getelementptr inbounds i8, i8* %in, i64 2
  %2 = load i8, i8* %arrayidx3, align 1, !tbaa !4
  %conv4 = zext i8 %2 to i64
  %shl5 = shl nuw nsw i64 %conv4, 16
  %or6 = or i64 %or, %shl5
  %arrayidx7 = getelementptr inbounds i8, i8* %in, i64 3
  %3 = load i8, i8* %arrayidx7, align 1, !tbaa !4
  %conv8 = zext i8 %3 to i64
  %shl9 = shl nuw nsw i64 %conv8, 24
  %or10 = or i64 %or6, %shl9
  %arrayidx11 = getelementptr inbounds i8, i8* %in, i64 4
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !4
  %conv12 = zext i8 %4 to i64
  %shl13 = shl nuw nsw i64 %conv12, 32
  %or14 = or i64 %or10, %shl13
  %arrayidx15 = getelementptr inbounds i8, i8* %in, i64 5
  %5 = load i8, i8* %arrayidx15, align 1, !tbaa !4
  %conv16 = zext i8 %5 to i64
  %shl17 = shl nuw nsw i64 %conv16, 40
  %or18 = or i64 %or14, %shl17
  ret i64 %or18
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree noinline nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nofree noinline norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree noinline nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nounwind }
attributes #13 = { nobuiltin nounwind "no-builtins" }
attributes #14 = { nobuiltin "no-builtins" }
attributes #15 = { nobuiltin nounwind readonly willreturn "no-builtins" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{!"clang version 14.0.0"}
!4 = !{!5, !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.mustprogress"}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !8}
!11 = !{!12, !12, i64 0}
!12 = !{!"int", !5, i64 0}
!13 = distinct !{!13, !8}
!14 = distinct !{!14, !8}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !8}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !8}
!19 = !{i8 0, i8 2}
!20 = distinct !{!20, !8}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !8}
!24 = distinct !{!24, !8}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !8}
!28 = !{!29, !29, i64 0}
!29 = !{!"long", !5, i64 0}
!30 = distinct !{!30, !8}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !8}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !8}
!35 = distinct !{!35, !8}
