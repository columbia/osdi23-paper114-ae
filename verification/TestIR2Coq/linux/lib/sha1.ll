; ModuleID = 'lib/sha1.c'
source_filename = "lib/sha1.c"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree noinline nosync nounwind null_pointer_is_valid willreturn
define dso_local void @sha1_transform(i32* nocapture noundef %digest, i8* nocapture noundef readonly %data, i32* noundef %array) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* %digest, align 4
  %arrayidx1 = getelementptr i32, i32* %digest, i64 1
  %1 = load i32, i32* %arrayidx1, align 4
  %arrayidx2 = getelementptr i32, i32* %digest, i64 2
  %2 = load i32, i32* %arrayidx2, align 4
  %arrayidx3 = getelementptr i32, i32* %digest, i64 3
  %3 = load i32, i32* %arrayidx3, align 4
  %arrayidx4 = getelementptr i32, i32* %digest, i64 4
  %4 = load i32, i32* %arrayidx4, align 4
  %call = call fastcc i32 @get_unaligned_be32(i8* noundef %data) #5
  store i32 %call, i32* %array, align 4
  %call6 = call fastcc i32 @rol32(i32 noundef %0, i32 noundef 5) #5
  %xor = xor i32 %3, %2
  %and = and i32 %xor, %1
  %xor7 = xor i32 %and, %3
  %add = add i32 %4, 1518500249
  %add8 = add i32 %add, %call
  %add9 = add i32 %add8, %xor7
  %add10 = add i32 %add9, %call6
  %call11 = call fastcc i32 @ror32(i32 noundef %1) #5
  %add.ptr14 = getelementptr i8, i8* %data, i64 4
  %call15 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr14) #5
  %arrayidx16 = getelementptr i32, i32* %array, i64 1
  store i32 %call15, i32* %arrayidx16, align 4
  %call17 = call fastcc i32 @rol32(i32 noundef %add10, i32 noundef 5) #5
  %xor19 = xor i32 %call11, %2
  %and20 = and i32 %xor19, %0
  %xor21 = xor i32 %and20, %2
  %add18 = add i32 %3, 1518500249
  %add22 = add i32 %add18, %call15
  %add23 = add i32 %add22, %call17
  %add24 = add i32 %add23, %xor21
  %call25 = call fastcc i32 @ror32(i32 noundef %0) #5
  %add.ptr30 = getelementptr i8, i8* %data, i64 8
  %call31 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr30) #5
  %arrayidx32 = getelementptr i32, i32* %array, i64 2
  store i32 %call31, i32* %arrayidx32, align 4
  %call33 = call fastcc i32 @rol32(i32 noundef %add24, i32 noundef 5) #5
  %xor35 = xor i32 %call25, %call11
  %and36 = and i32 %xor35, %add10
  %xor37 = xor i32 %and36, %call11
  %add34 = add i32 %2, 1518500249
  %add38 = add i32 %add34, %call31
  %add39 = add i32 %add38, %call33
  %add40 = add i32 %add39, %xor37
  %call41 = call fastcc i32 @ror32(i32 noundef %add10) #5
  %add.ptr46 = getelementptr i8, i8* %data, i64 12
  %call47 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr46) #5
  %arrayidx48 = getelementptr i32, i32* %array, i64 3
  store i32 %call47, i32* %arrayidx48, align 4
  %call49 = call fastcc i32 @rol32(i32 noundef %add40, i32 noundef 5) #5
  %xor51 = xor i32 %call41, %call25
  %and52 = and i32 %xor51, %add24
  %xor53 = xor i32 %and52, %call25
  %add50 = add i32 %call11, 1518500249
  %add54 = add i32 %add50, %call47
  %add55 = add i32 %add54, %call49
  %add56 = add i32 %add55, %xor53
  %call57 = call fastcc i32 @ror32(i32 noundef %add24) #5
  %add.ptr62 = getelementptr i8, i8* %data, i64 16
  %call63 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr62) #5
  %arrayidx64 = getelementptr i32, i32* %array, i64 4
  store i32 %call63, i32* %arrayidx64, align 4
  %call65 = call fastcc i32 @rol32(i32 noundef %add56, i32 noundef 5) #5
  %xor67 = xor i32 %call57, %call41
  %and68 = and i32 %xor67, %add40
  %xor69 = xor i32 %and68, %call41
  %add66 = add i32 %call25, 1518500249
  %add70 = add i32 %add66, %call63
  %add71 = add i32 %add70, %call65
  %add72 = add i32 %add71, %xor69
  %call73 = call fastcc i32 @ror32(i32 noundef %add40) #5
  %add.ptr78 = getelementptr i8, i8* %data, i64 20
  %call79 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr78) #5
  %arrayidx80 = getelementptr i32, i32* %array, i64 5
  store i32 %call79, i32* %arrayidx80, align 4
  %call81 = call fastcc i32 @rol32(i32 noundef %add72, i32 noundef 5) #5
  %xor83 = xor i32 %call73, %call57
  %and84 = and i32 %xor83, %add56
  %xor85 = xor i32 %and84, %call57
  %add82 = add i32 %call41, 1518500249
  %add86 = add i32 %add82, %call79
  %add87 = add i32 %add86, %call81
  %add88 = add i32 %add87, %xor85
  %call89 = call fastcc i32 @ror32(i32 noundef %add56) #5
  %add.ptr94 = getelementptr i8, i8* %data, i64 24
  %call95 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr94) #5
  %arrayidx96 = getelementptr i32, i32* %array, i64 6
  store i32 %call95, i32* %arrayidx96, align 4
  %call97 = call fastcc i32 @rol32(i32 noundef %add88, i32 noundef 5) #5
  %xor99 = xor i32 %call89, %call73
  %and100 = and i32 %xor99, %add72
  %xor101 = xor i32 %and100, %call73
  %add98 = add i32 %call57, 1518500249
  %add102 = add i32 %add98, %call95
  %add103 = add i32 %add102, %call97
  %add104 = add i32 %add103, %xor101
  %call105 = call fastcc i32 @ror32(i32 noundef %add72) #5
  %add.ptr110 = getelementptr i8, i8* %data, i64 28
  %call111 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr110) #5
  %arrayidx112 = getelementptr i32, i32* %array, i64 7
  store i32 %call111, i32* %arrayidx112, align 4
  %call113 = call fastcc i32 @rol32(i32 noundef %add104, i32 noundef 5) #5
  %xor115 = xor i32 %call105, %call89
  %and116 = and i32 %xor115, %add88
  %xor117 = xor i32 %and116, %call89
  %add114 = add i32 %call73, 1518500249
  %add118 = add i32 %add114, %call111
  %add119 = add i32 %add118, %call113
  %add120 = add i32 %add119, %xor117
  %call121 = call fastcc i32 @ror32(i32 noundef %add88) #5
  %add.ptr126 = getelementptr i8, i8* %data, i64 32
  %call127 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr126) #5
  %arrayidx128 = getelementptr i32, i32* %array, i64 8
  store i32 %call127, i32* %arrayidx128, align 4
  %call129 = call fastcc i32 @rol32(i32 noundef %add120, i32 noundef 5) #5
  %xor131 = xor i32 %call121, %call105
  %and132 = and i32 %xor131, %add104
  %xor133 = xor i32 %and132, %call105
  %add130 = add i32 %call89, 1518500249
  %add134 = add i32 %add130, %call127
  %add135 = add i32 %add134, %call129
  %add136 = add i32 %add135, %xor133
  %call137 = call fastcc i32 @ror32(i32 noundef %add104) #5
  %add.ptr142 = getelementptr i8, i8* %data, i64 36
  %call143 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr142) #5
  %arrayidx144 = getelementptr i32, i32* %array, i64 9
  store i32 %call143, i32* %arrayidx144, align 4
  %call145 = call fastcc i32 @rol32(i32 noundef %add136, i32 noundef 5) #5
  %xor147 = xor i32 %call137, %call121
  %and148 = and i32 %xor147, %add120
  %xor149 = xor i32 %and148, %call121
  %add146 = add i32 %call105, 1518500249
  %add150 = add i32 %add146, %call143
  %add151 = add i32 %add150, %call145
  %add152 = add i32 %add151, %xor149
  %call153 = call fastcc i32 @ror32(i32 noundef %add120) #5
  %add.ptr158 = getelementptr i8, i8* %data, i64 40
  %call159 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr158) #5
  %arrayidx160 = getelementptr i32, i32* %array, i64 10
  store i32 %call159, i32* %arrayidx160, align 4
  %call161 = call fastcc i32 @rol32(i32 noundef %add152, i32 noundef 5) #5
  %xor163 = xor i32 %call153, %call137
  %and164 = and i32 %xor163, %add136
  %xor165 = xor i32 %and164, %call137
  %add162 = add i32 %call121, 1518500249
  %add166 = add i32 %add162, %call159
  %add167 = add i32 %add166, %call161
  %add168 = add i32 %add167, %xor165
  %call169 = call fastcc i32 @ror32(i32 noundef %add136) #5
  %add.ptr174 = getelementptr i8, i8* %data, i64 44
  %call175 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr174) #5
  %arrayidx176 = getelementptr i32, i32* %array, i64 11
  store i32 %call175, i32* %arrayidx176, align 4
  %call177 = call fastcc i32 @rol32(i32 noundef %add168, i32 noundef 5) #5
  %xor179 = xor i32 %call169, %call153
  %and180 = and i32 %xor179, %add152
  %xor181 = xor i32 %and180, %call153
  %add178 = add i32 %call137, 1518500249
  %add182 = add i32 %add178, %call175
  %add183 = add i32 %add182, %call177
  %add184 = add i32 %add183, %xor181
  %call185 = call fastcc i32 @ror32(i32 noundef %add152) #5
  %add.ptr190 = getelementptr i8, i8* %data, i64 48
  %call191 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr190) #5
  %arrayidx192 = getelementptr i32, i32* %array, i64 12
  store i32 %call191, i32* %arrayidx192, align 4
  %call193 = call fastcc i32 @rol32(i32 noundef %add184, i32 noundef 5) #5
  %xor195 = xor i32 %call185, %call169
  %and196 = and i32 %xor195, %add168
  %xor197 = xor i32 %and196, %call169
  %add194 = add i32 %call153, 1518500249
  %add198 = add i32 %add194, %call191
  %add199 = add i32 %add198, %call193
  %add200 = add i32 %add199, %xor197
  %call201 = call fastcc i32 @ror32(i32 noundef %add168) #5
  %add.ptr206 = getelementptr i8, i8* %data, i64 52
  %call207 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr206) #5
  %arrayidx208 = getelementptr i32, i32* %array, i64 13
  store i32 %call207, i32* %arrayidx208, align 4
  %call209 = call fastcc i32 @rol32(i32 noundef %add200, i32 noundef 5) #5
  %xor211 = xor i32 %call201, %call185
  %and212 = and i32 %xor211, %add184
  %xor213 = xor i32 %and212, %call185
  %add210 = add i32 %call169, 1518500249
  %add214 = add i32 %add210, %call207
  %add215 = add i32 %add214, %call209
  %add216 = add i32 %add215, %xor213
  %call217 = call fastcc i32 @ror32(i32 noundef %add184) #5
  %add.ptr222 = getelementptr i8, i8* %data, i64 56
  %call223 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr222) #5
  %arrayidx224 = getelementptr i32, i32* %array, i64 14
  store i32 %call223, i32* %arrayidx224, align 4
  %call225 = call fastcc i32 @rol32(i32 noundef %add216, i32 noundef 5) #5
  %xor227 = xor i32 %call217, %call201
  %and228 = and i32 %xor227, %add200
  %xor229 = xor i32 %and228, %call201
  %add226 = add i32 %call185, 1518500249
  %add230 = add i32 %add226, %call223
  %add231 = add i32 %add230, %call225
  %add232 = add i32 %add231, %xor229
  %call233 = call fastcc i32 @ror32(i32 noundef %add200) #5
  %add.ptr238 = getelementptr i8, i8* %data, i64 60
  %call239 = call fastcc i32 @get_unaligned_be32(i8* noundef %add.ptr238) #5
  %arrayidx240 = getelementptr i32, i32* %array, i64 15
  %call241 = call fastcc i32 @rol32(i32 noundef %add232, i32 noundef 5) #5
  %xor243 = xor i32 %call233, %call217
  %and244 = and i32 %xor243, %add216
  %xor245 = xor i32 %and244, %call217
  %add242 = add i32 %call201, 1518500249
  %add246 = add i32 %add242, %call239
  %add247 = add i32 %add246, %call241
  %add248 = add i32 %add247, %xor245
  %call249 = call fastcc i32 @ror32(i32 noundef %add216) #5
  %xor256 = xor i32 %call31, %call
  %xor258 = xor i32 %xor256, %call127
  %xor260 = xor i32 %xor258, %call207
  %call261 = call fastcc i32 @rol32(i32 noundef %xor260, i32 noundef 1) #5
  %call263 = call fastcc i32 @rol32(i32 noundef %add248, i32 noundef 5) #5
  %xor265 = xor i32 %call249, %call233
  %and266 = and i32 %xor265, %add232
  %xor267 = xor i32 %and266, %call233
  %add264 = add i32 %call217, 1518500249
  %add268 = add i32 %add264, %call261
  %add269 = add i32 %add268, %call263
  %add270 = add i32 %add269, %xor267
  %call271 = call fastcc i32 @ror32(i32 noundef %add232) #5
  %xor278 = xor i32 %call47, %call15
  %xor280 = xor i32 %xor278, %call143
  %xor282 = xor i32 %xor280, %call223
  %call283 = call fastcc i32 @rol32(i32 noundef %xor282, i32 noundef 1) #5
  %call285 = call fastcc i32 @rol32(i32 noundef %add270, i32 noundef 5) #5
  %xor287 = xor i32 %call271, %call249
  %and288 = and i32 %xor287, %add248
  %xor289 = xor i32 %and288, %call249
  %add286 = add i32 %call233, 1518500249
  %add290 = add i32 %add286, %call283
  %add291 = add i32 %add290, %call285
  %add292 = add i32 %add291, %xor289
  %call293 = call fastcc i32 @ror32(i32 noundef %add248) #5
  %xor300 = xor i32 %call63, %call31
  %xor302 = xor i32 %xor300, %call159
  %xor304 = xor i32 %xor302, %call239
  %call305 = call fastcc i32 @rol32(i32 noundef %xor304, i32 noundef 1) #5
  %call307 = call fastcc i32 @rol32(i32 noundef %add292, i32 noundef 5) #5
  %xor309 = xor i32 %call293, %call271
  %and310 = and i32 %xor309, %add270
  %xor311 = xor i32 %and310, %call271
  %add308 = add i32 %call249, 1518500249
  %add312 = add i32 %add308, %call305
  %add313 = add i32 %add312, %call307
  %add314 = add i32 %add313, %xor311
  %call315 = call fastcc i32 @ror32(i32 noundef %add270) #5
  %xor322 = xor i32 %call79, %call47
  %xor324 = xor i32 %xor322, %call175
  %xor326 = xor i32 %xor324, %call261
  %call327 = call fastcc i32 @rol32(i32 noundef %xor326, i32 noundef 1) #5
  %call329 = call fastcc i32 @rol32(i32 noundef %add314, i32 noundef 5) #5
  %xor331 = xor i32 %call315, %call293
  %and332 = and i32 %xor331, %add292
  %xor333 = xor i32 %and332, %call293
  %add330 = add i32 %call271, 1518500249
  %add334 = add i32 %add330, %call327
  %add335 = add i32 %add334, %call329
  %add336 = add i32 %add335, %xor333
  %call337 = call fastcc i32 @ror32(i32 noundef %add292) #5
  %xor344 = xor i32 %call95, %call63
  %xor346 = xor i32 %xor344, %call191
  %xor348 = xor i32 %xor346, %call283
  %call349 = call fastcc i32 @rol32(i32 noundef %xor348, i32 noundef 1) #5
  %call351 = call fastcc i32 @rol32(i32 noundef %add336, i32 noundef 5) #5
  %xor353 = xor i32 %add314, %call315
  %xor354 = xor i32 %xor353, %call337
  %add352 = add i32 %call293, 1859775393
  %add355 = add i32 %add352, %call349
  %add356 = add i32 %add355, %xor354
  %add357 = add i32 %add356, %call351
  %call358 = call fastcc i32 @ror32(i32 noundef %add314) #5
  %xor365 = xor i32 %call111, %call79
  %xor367 = xor i32 %xor365, %call207
  %xor369 = xor i32 %xor367, %call305
  %call370 = call fastcc i32 @rol32(i32 noundef %xor369, i32 noundef 1) #5
  %call372 = call fastcc i32 @rol32(i32 noundef %add357, i32 noundef 5) #5
  %xor374 = xor i32 %add336, %call337
  %xor375 = xor i32 %xor374, %call358
  %add373 = add i32 %call315, 1859775393
  %add376 = add i32 %add373, %call370
  %add377 = add i32 %add376, %xor375
  %add378 = add i32 %add377, %call372
  %call379 = call fastcc i32 @ror32(i32 noundef %add336) #5
  %xor386 = xor i32 %call127, %call95
  %xor388 = xor i32 %xor386, %call223
  %xor390 = xor i32 %xor388, %call327
  %call391 = call fastcc i32 @rol32(i32 noundef %xor390, i32 noundef 1) #5
  %call393 = call fastcc i32 @rol32(i32 noundef %add378, i32 noundef 5) #5
  %xor395 = xor i32 %add357, %call358
  %xor396 = xor i32 %xor395, %call379
  %add394 = add i32 %call337, 1859775393
  %add397 = add i32 %add394, %call391
  %add398 = add i32 %add397, %xor396
  %add399 = add i32 %add398, %call393
  %call400 = call fastcc i32 @ror32(i32 noundef %add357) #5
  %xor407 = xor i32 %call143, %call111
  %xor409 = xor i32 %xor407, %call239
  %xor411 = xor i32 %xor409, %call349
  %call412 = call fastcc i32 @rol32(i32 noundef %xor411, i32 noundef 1) #5
  %call414 = call fastcc i32 @rol32(i32 noundef %add399, i32 noundef 5) #5
  %xor416 = xor i32 %add378, %call379
  %xor417 = xor i32 %xor416, %call400
  %add415 = add i32 %call358, 1859775393
  %add418 = add i32 %add415, %call412
  %add419 = add i32 %add418, %xor417
  %add420 = add i32 %add419, %call414
  %call421 = call fastcc i32 @ror32(i32 noundef %add378) #5
  %xor428 = xor i32 %call159, %call127
  %xor430 = xor i32 %xor428, %call261
  %xor432 = xor i32 %xor430, %call370
  %call433 = call fastcc i32 @rol32(i32 noundef %xor432, i32 noundef 1) #5
  %call435 = call fastcc i32 @rol32(i32 noundef %add420, i32 noundef 5) #5
  %xor437 = xor i32 %add399, %call400
  %xor438 = xor i32 %xor437, %call421
  %add436 = add i32 %call379, 1859775393
  %add439 = add i32 %add436, %call433
  %add440 = add i32 %add439, %xor438
  %add441 = add i32 %add440, %call435
  %call442 = call fastcc i32 @ror32(i32 noundef %add399) #5
  %xor449 = xor i32 %call175, %call143
  %xor451 = xor i32 %xor449, %call283
  %xor453 = xor i32 %xor451, %call391
  %call454 = call fastcc i32 @rol32(i32 noundef %xor453, i32 noundef 1) #5
  %call456 = call fastcc i32 @rol32(i32 noundef %add441, i32 noundef 5) #5
  %xor458 = xor i32 %add420, %call421
  %xor459 = xor i32 %xor458, %call442
  %add457 = add i32 %call400, 1859775393
  %add460 = add i32 %add457, %call454
  %add461 = add i32 %add460, %xor459
  %add462 = add i32 %add461, %call456
  %call463 = call fastcc i32 @ror32(i32 noundef %add420) #5
  %xor470 = xor i32 %call191, %call159
  %xor472 = xor i32 %xor470, %call305
  %xor474 = xor i32 %xor472, %call412
  %call475 = call fastcc i32 @rol32(i32 noundef %xor474, i32 noundef 1) #5
  %call477 = call fastcc i32 @rol32(i32 noundef %add462, i32 noundef 5) #5
  %xor479 = xor i32 %add441, %call442
  %xor480 = xor i32 %xor479, %call463
  %add478 = add i32 %call421, 1859775393
  %add481 = add i32 %add478, %call475
  %add482 = add i32 %add481, %xor480
  %add483 = add i32 %add482, %call477
  %call484 = call fastcc i32 @ror32(i32 noundef %add441) #5
  %xor491 = xor i32 %call207, %call175
  %xor493 = xor i32 %xor491, %call327
  %xor495 = xor i32 %xor493, %call433
  %call496 = call fastcc i32 @rol32(i32 noundef %xor495, i32 noundef 1) #5
  %call498 = call fastcc i32 @rol32(i32 noundef %add483, i32 noundef 5) #5
  %xor500 = xor i32 %add462, %call463
  %xor501 = xor i32 %xor500, %call484
  %add499 = add i32 %call442, 1859775393
  %add502 = add i32 %add499, %call496
  %add503 = add i32 %add502, %xor501
  %add504 = add i32 %add503, %call498
  %call505 = call fastcc i32 @ror32(i32 noundef %add462) #5
  %xor512 = xor i32 %call223, %call191
  %xor514 = xor i32 %xor512, %call349
  %xor516 = xor i32 %xor514, %call454
  %call517 = call fastcc i32 @rol32(i32 noundef %xor516, i32 noundef 1) #5
  %call519 = call fastcc i32 @rol32(i32 noundef %add504, i32 noundef 5) #5
  %xor521 = xor i32 %add483, %call484
  %xor522 = xor i32 %xor521, %call505
  %add520 = add i32 %call463, 1859775393
  %add523 = add i32 %add520, %call517
  %add524 = add i32 %add523, %xor522
  %add525 = add i32 %add524, %call519
  %call526 = call fastcc i32 @ror32(i32 noundef %add483) #5
  %xor533 = xor i32 %call239, %call207
  %xor535 = xor i32 %xor533, %call370
  %xor537 = xor i32 %xor535, %call475
  %call538 = call fastcc i32 @rol32(i32 noundef %xor537, i32 noundef 1) #5
  %call540 = call fastcc i32 @rol32(i32 noundef %add525, i32 noundef 5) #5
  %xor542 = xor i32 %add504, %call505
  %xor543 = xor i32 %xor542, %call526
  %add541 = add i32 %call484, 1859775393
  %add544 = add i32 %add541, %call538
  %add545 = add i32 %add544, %xor543
  %add546 = add i32 %add545, %call540
  %call547 = call fastcc i32 @ror32(i32 noundef %add504) #5
  %xor554 = xor i32 %call261, %call223
  %xor556 = xor i32 %xor554, %call391
  %xor558 = xor i32 %xor556, %call496
  %call559 = call fastcc i32 @rol32(i32 noundef %xor558, i32 noundef 1) #5
  %call561 = call fastcc i32 @rol32(i32 noundef %add546, i32 noundef 5) #5
  %xor563 = xor i32 %add525, %call526
  %xor564 = xor i32 %xor563, %call547
  %add562 = add i32 %call505, 1859775393
  %add565 = add i32 %add562, %call559
  %add566 = add i32 %add565, %xor564
  %add567 = add i32 %add566, %call561
  %call568 = call fastcc i32 @ror32(i32 noundef %add525) #5
  %xor575 = xor i32 %call283, %call239
  %xor577 = xor i32 %xor575, %call412
  %xor579 = xor i32 %xor577, %call517
  %call580 = call fastcc i32 @rol32(i32 noundef %xor579, i32 noundef 1) #5
  %call582 = call fastcc i32 @rol32(i32 noundef %add567, i32 noundef 5) #5
  %xor584 = xor i32 %add546, %call547
  %xor585 = xor i32 %xor584, %call568
  %add583 = add i32 %call526, 1859775393
  %add586 = add i32 %add583, %call580
  %add587 = add i32 %add586, %xor585
  %add588 = add i32 %add587, %call582
  %call589 = call fastcc i32 @ror32(i32 noundef %add546) #5
  %xor596 = xor i32 %call305, %call261
  %xor598 = xor i32 %xor596, %call433
  %xor600 = xor i32 %xor598, %call538
  %call601 = call fastcc i32 @rol32(i32 noundef %xor600, i32 noundef 1) #5
  %call603 = call fastcc i32 @rol32(i32 noundef %add588, i32 noundef 5) #5
  %xor605 = xor i32 %add567, %call568
  %xor606 = xor i32 %xor605, %call589
  %add604 = add i32 %call547, 1859775393
  %add607 = add i32 %add604, %call601
  %add608 = add i32 %add607, %xor606
  %add609 = add i32 %add608, %call603
  %call610 = call fastcc i32 @ror32(i32 noundef %add567) #5
  %xor617 = xor i32 %call327, %call283
  %xor619 = xor i32 %xor617, %call454
  %xor621 = xor i32 %xor619, %call559
  %call622 = call fastcc i32 @rol32(i32 noundef %xor621, i32 noundef 1) #5
  %call624 = call fastcc i32 @rol32(i32 noundef %add609, i32 noundef 5) #5
  %xor626 = xor i32 %add588, %call589
  %xor627 = xor i32 %xor626, %call610
  %add625 = add i32 %call568, 1859775393
  %add628 = add i32 %add625, %call622
  %add629 = add i32 %add628, %xor627
  %add630 = add i32 %add629, %call624
  %call631 = call fastcc i32 @ror32(i32 noundef %add588) #5
  %xor638 = xor i32 %call349, %call305
  %xor640 = xor i32 %xor638, %call475
  %xor642 = xor i32 %xor640, %call580
  %call643 = call fastcc i32 @rol32(i32 noundef %xor642, i32 noundef 1) #5
  %call645 = call fastcc i32 @rol32(i32 noundef %add630, i32 noundef 5) #5
  %xor647 = xor i32 %add609, %call610
  %xor648 = xor i32 %xor647, %call631
  %add646 = add i32 %call589, 1859775393
  %add649 = add i32 %add646, %call643
  %add650 = add i32 %add649, %xor648
  %add651 = add i32 %add650, %call645
  %call652 = call fastcc i32 @ror32(i32 noundef %add609) #5
  %xor659 = xor i32 %call370, %call327
  %xor661 = xor i32 %xor659, %call496
  %xor663 = xor i32 %xor661, %call601
  %call664 = call fastcc i32 @rol32(i32 noundef %xor663, i32 noundef 1) #5
  %call666 = call fastcc i32 @rol32(i32 noundef %add651, i32 noundef 5) #5
  %xor668 = xor i32 %add630, %call631
  %xor669 = xor i32 %xor668, %call652
  %add667 = add i32 %call610, 1859775393
  %add670 = add i32 %add667, %call664
  %add671 = add i32 %add670, %xor669
  %add672 = add i32 %add671, %call666
  %call673 = call fastcc i32 @ror32(i32 noundef %add630) #5
  %xor680 = xor i32 %call391, %call349
  %xor682 = xor i32 %xor680, %call517
  %xor684 = xor i32 %xor682, %call622
  %call685 = call fastcc i32 @rol32(i32 noundef %xor684, i32 noundef 1) #5
  %call687 = call fastcc i32 @rol32(i32 noundef %add672, i32 noundef 5) #5
  %xor689 = xor i32 %add651, %call652
  %xor690 = xor i32 %xor689, %call673
  %add688 = add i32 %call631, 1859775393
  %add691 = add i32 %add688, %call685
  %add692 = add i32 %add691, %xor690
  %add693 = add i32 %add692, %call687
  %call694 = call fastcc i32 @ror32(i32 noundef %add651) #5
  %xor701 = xor i32 %call412, %call370
  %xor703 = xor i32 %xor701, %call538
  %xor705 = xor i32 %xor703, %call643
  %call706 = call fastcc i32 @rol32(i32 noundef %xor705, i32 noundef 1) #5
  %call708 = call fastcc i32 @rol32(i32 noundef %add693, i32 noundef 5) #5
  %xor710 = xor i32 %add672, %call673
  %xor711 = xor i32 %xor710, %call694
  %add709 = add i32 %call652, 1859775393
  %add712 = add i32 %add709, %call706
  %add713 = add i32 %add712, %xor711
  %add714 = add i32 %add713, %call708
  %call715 = call fastcc i32 @ror32(i32 noundef %add672) #5
  %xor722 = xor i32 %call433, %call391
  %xor724 = xor i32 %xor722, %call559
  %xor726 = xor i32 %xor724, %call664
  %call727 = call fastcc i32 @rol32(i32 noundef %xor726, i32 noundef 1) #5
  %call729 = call fastcc i32 @rol32(i32 noundef %add714, i32 noundef 5) #5
  %xor731 = xor i32 %add693, %call694
  %xor732 = xor i32 %xor731, %call715
  %add730 = add i32 %call673, 1859775393
  %add733 = add i32 %add730, %call727
  %add734 = add i32 %add733, %xor732
  %add735 = add i32 %add734, %call729
  %call736 = call fastcc i32 @ror32(i32 noundef %add693) #5
  %xor743 = xor i32 %call454, %call412
  %xor745 = xor i32 %xor743, %call580
  %xor747 = xor i32 %xor745, %call685
  %call748 = call fastcc i32 @rol32(i32 noundef %xor747, i32 noundef 1) #5
  %call750 = call fastcc i32 @rol32(i32 noundef %add735, i32 noundef 5) #5
  %xor752 = xor i32 %add714, %call715
  %xor753 = xor i32 %xor752, %call736
  %add751 = add i32 %call694, 1859775393
  %add754 = add i32 %add751, %call748
  %add755 = add i32 %add754, %xor753
  %add756 = add i32 %add755, %call750
  %call757 = call fastcc i32 @ror32(i32 noundef %add714) #5
  %xor764 = xor i32 %call475, %call433
  %xor766 = xor i32 %xor764, %call601
  %xor768 = xor i32 %xor766, %call706
  %call769 = call fastcc i32 @rol32(i32 noundef %xor768, i32 noundef 1) #5
  %call771 = call fastcc i32 @rol32(i32 noundef %add756, i32 noundef 5) #5
  %and773 = and i32 %call757, %add735
  %xor774 = xor i32 %call757, %add735
  %and775 = and i32 %xor774, %call736
  %add772 = add i32 %call715, -1894007588
  %add776 = add i32 %add772, %and773
  %add777 = add i32 %add776, %call769
  %add778 = add i32 %add777, %and775
  %add779 = add i32 %add778, %call771
  %call780 = call fastcc i32 @ror32(i32 noundef %add735) #5
  %xor787 = xor i32 %call496, %call454
  %xor789 = xor i32 %xor787, %call622
  %xor791 = xor i32 %xor789, %call727
  %call792 = call fastcc i32 @rol32(i32 noundef %xor791, i32 noundef 1) #5
  %call794 = call fastcc i32 @rol32(i32 noundef %add779, i32 noundef 5) #5
  %and796 = and i32 %call780, %add756
  %xor797 = xor i32 %call780, %add756
  %and798 = and i32 %xor797, %call757
  %add795 = add i32 %call736, -1894007588
  %add799 = add i32 %add795, %and796
  %add800 = add i32 %add799, %call792
  %add801 = add i32 %add800, %and798
  %add802 = add i32 %add801, %call794
  %call803 = call fastcc i32 @ror32(i32 noundef %add756) #5
  %xor810 = xor i32 %call517, %call475
  %xor812 = xor i32 %xor810, %call643
  %xor814 = xor i32 %xor812, %call748
  %call815 = call fastcc i32 @rol32(i32 noundef %xor814, i32 noundef 1) #5
  %call817 = call fastcc i32 @rol32(i32 noundef %add802, i32 noundef 5) #5
  %and819 = and i32 %call803, %add779
  %xor820 = xor i32 %call803, %add779
  %and821 = and i32 %xor820, %call780
  %add818 = add i32 %call757, -1894007588
  %add822 = add i32 %add818, %and819
  %add823 = add i32 %add822, %call815
  %add824 = add i32 %add823, %and821
  %add825 = add i32 %add824, %call817
  %call826 = call fastcc i32 @ror32(i32 noundef %add779) #5
  %xor833 = xor i32 %call538, %call496
  %xor835 = xor i32 %xor833, %call664
  %xor837 = xor i32 %xor835, %call769
  %call838 = call fastcc i32 @rol32(i32 noundef %xor837, i32 noundef 1) #5
  %call840 = call fastcc i32 @rol32(i32 noundef %add825, i32 noundef 5) #5
  %and842 = and i32 %call826, %add802
  %xor843 = xor i32 %call826, %add802
  %and844 = and i32 %xor843, %call803
  %add841 = add i32 %call780, -1894007588
  %add845 = add i32 %add841, %and842
  %add846 = add i32 %add845, %call838
  %add847 = add i32 %add846, %and844
  %add848 = add i32 %add847, %call840
  %call849 = call fastcc i32 @ror32(i32 noundef %add802) #5
  %xor856 = xor i32 %call559, %call517
  %xor858 = xor i32 %xor856, %call685
  %xor860 = xor i32 %xor858, %call792
  %call861 = call fastcc i32 @rol32(i32 noundef %xor860, i32 noundef 1) #5
  %call863 = call fastcc i32 @rol32(i32 noundef %add848, i32 noundef 5) #5
  %and865 = and i32 %call849, %add825
  %xor866 = xor i32 %call849, %add825
  %and867 = and i32 %xor866, %call826
  %add864 = add i32 %call803, -1894007588
  %add868 = add i32 %add864, %and865
  %add869 = add i32 %add868, %call861
  %add870 = add i32 %add869, %and867
  %add871 = add i32 %add870, %call863
  %call872 = call fastcc i32 @ror32(i32 noundef %add825) #5
  %xor879 = xor i32 %call580, %call538
  %xor881 = xor i32 %xor879, %call706
  %xor883 = xor i32 %xor881, %call815
  %call884 = call fastcc i32 @rol32(i32 noundef %xor883, i32 noundef 1) #5
  %call886 = call fastcc i32 @rol32(i32 noundef %add871, i32 noundef 5) #5
  %and888 = and i32 %call872, %add848
  %xor889 = xor i32 %call872, %add848
  %and890 = and i32 %xor889, %call849
  %add887 = add i32 %call826, -1894007588
  %add891 = add i32 %add887, %and888
  %add892 = add i32 %add891, %call884
  %add893 = add i32 %add892, %and890
  %add894 = add i32 %add893, %call886
  %call895 = call fastcc i32 @ror32(i32 noundef %add848) #5
  %xor902 = xor i32 %call601, %call559
  %xor904 = xor i32 %xor902, %call727
  %xor906 = xor i32 %xor904, %call838
  %call907 = call fastcc i32 @rol32(i32 noundef %xor906, i32 noundef 1) #5
  %call909 = call fastcc i32 @rol32(i32 noundef %add894, i32 noundef 5) #5
  %and911 = and i32 %call895, %add871
  %xor912 = xor i32 %call895, %add871
  %and913 = and i32 %xor912, %call872
  %add910 = add i32 %call849, -1894007588
  %add914 = add i32 %add910, %and911
  %add915 = add i32 %add914, %call907
  %add916 = add i32 %add915, %and913
  %add917 = add i32 %add916, %call909
  %call918 = call fastcc i32 @ror32(i32 noundef %add871) #5
  %xor925 = xor i32 %call622, %call580
  %xor927 = xor i32 %xor925, %call748
  %xor929 = xor i32 %xor927, %call861
  %call930 = call fastcc i32 @rol32(i32 noundef %xor929, i32 noundef 1) #5
  %call932 = call fastcc i32 @rol32(i32 noundef %add917, i32 noundef 5) #5
  %and934 = and i32 %call918, %add894
  %xor935 = xor i32 %call918, %add894
  %and936 = and i32 %xor935, %call895
  %add933 = add i32 %call872, -1894007588
  %add937 = add i32 %add933, %and934
  %add938 = add i32 %add937, %call930
  %add939 = add i32 %add938, %and936
  %add940 = add i32 %add939, %call932
  %call941 = call fastcc i32 @ror32(i32 noundef %add894) #5
  %xor948 = xor i32 %call643, %call601
  %xor950 = xor i32 %xor948, %call769
  %xor952 = xor i32 %xor950, %call884
  %call953 = call fastcc i32 @rol32(i32 noundef %xor952, i32 noundef 1) #5
  %call955 = call fastcc i32 @rol32(i32 noundef %add940, i32 noundef 5) #5
  %and957 = and i32 %call941, %add917
  %xor958 = xor i32 %call941, %add917
  %and959 = and i32 %xor958, %call918
  %add956 = add i32 %call895, -1894007588
  %add960 = add i32 %add956, %and957
  %add961 = add i32 %add960, %call953
  %add962 = add i32 %add961, %and959
  %add963 = add i32 %add962, %call955
  %call964 = call fastcc i32 @ror32(i32 noundef %add917) #5
  %xor971 = xor i32 %call664, %call622
  %xor973 = xor i32 %xor971, %call792
  %xor975 = xor i32 %xor973, %call907
  %call976 = call fastcc i32 @rol32(i32 noundef %xor975, i32 noundef 1) #5
  %call978 = call fastcc i32 @rol32(i32 noundef %add963, i32 noundef 5) #5
  %and980 = and i32 %call964, %add940
  %xor981 = xor i32 %call964, %add940
  %and982 = and i32 %xor981, %call941
  %add979 = add i32 %call918, -1894007588
  %add983 = add i32 %add979, %and980
  %add984 = add i32 %add983, %call976
  %add985 = add i32 %add984, %and982
  %add986 = add i32 %add985, %call978
  %call987 = call fastcc i32 @ror32(i32 noundef %add940) #5
  %xor994 = xor i32 %call685, %call643
  %xor996 = xor i32 %xor994, %call815
  %xor998 = xor i32 %xor996, %call930
  %call999 = call fastcc i32 @rol32(i32 noundef %xor998, i32 noundef 1) #5
  %call1001 = call fastcc i32 @rol32(i32 noundef %add986, i32 noundef 5) #5
  %and1003 = and i32 %call987, %add963
  %xor1004 = xor i32 %call987, %add963
  %and1005 = and i32 %xor1004, %call964
  %add1002 = add i32 %call941, -1894007588
  %add1006 = add i32 %add1002, %and1003
  %add1007 = add i32 %add1006, %call999
  %add1008 = add i32 %add1007, %and1005
  %add1009 = add i32 %add1008, %call1001
  %call1010 = call fastcc i32 @ror32(i32 noundef %add963) #5
  %xor1017 = xor i32 %call706, %call664
  %xor1019 = xor i32 %xor1017, %call838
  %xor1021 = xor i32 %xor1019, %call953
  %call1022 = call fastcc i32 @rol32(i32 noundef %xor1021, i32 noundef 1) #5
  %call1024 = call fastcc i32 @rol32(i32 noundef %add1009, i32 noundef 5) #5
  %and1026 = and i32 %call1010, %add986
  %xor1027 = xor i32 %call1010, %add986
  %and1028 = and i32 %xor1027, %call987
  %add1025 = add i32 %call964, -1894007588
  %add1029 = add i32 %add1025, %and1026
  %add1030 = add i32 %add1029, %call1022
  %add1031 = add i32 %add1030, %and1028
  %add1032 = add i32 %add1031, %call1024
  %call1033 = call fastcc i32 @ror32(i32 noundef %add986) #5
  %xor1040 = xor i32 %call727, %call685
  %xor1042 = xor i32 %xor1040, %call861
  %xor1044 = xor i32 %xor1042, %call976
  %call1045 = call fastcc i32 @rol32(i32 noundef %xor1044, i32 noundef 1) #5
  %call1047 = call fastcc i32 @rol32(i32 noundef %add1032, i32 noundef 5) #5
  %and1049 = and i32 %call1033, %add1009
  %xor1050 = xor i32 %call1033, %add1009
  %and1051 = and i32 %xor1050, %call1010
  %add1048 = add i32 %call987, -1894007588
  %add1052 = add i32 %add1048, %and1049
  %add1053 = add i32 %add1052, %call1045
  %add1054 = add i32 %add1053, %and1051
  %add1055 = add i32 %add1054, %call1047
  %call1056 = call fastcc i32 @ror32(i32 noundef %add1009) #5
  %xor1063 = xor i32 %call748, %call706
  %xor1065 = xor i32 %xor1063, %call884
  %xor1067 = xor i32 %xor1065, %call999
  %call1068 = call fastcc i32 @rol32(i32 noundef %xor1067, i32 noundef 1) #5
  %call1070 = call fastcc i32 @rol32(i32 noundef %add1055, i32 noundef 5) #5
  %and1072 = and i32 %call1056, %add1032
  %xor1073 = xor i32 %call1056, %add1032
  %and1074 = and i32 %xor1073, %call1033
  %add1071 = add i32 %call1010, -1894007588
  %add1075 = add i32 %add1071, %and1072
  %add1076 = add i32 %add1075, %call1068
  %add1077 = add i32 %add1076, %and1074
  %add1078 = add i32 %add1077, %call1070
  %call1079 = call fastcc i32 @ror32(i32 noundef %add1032) #5
  %xor1086 = xor i32 %call769, %call727
  %xor1088 = xor i32 %xor1086, %call907
  %xor1090 = xor i32 %xor1088, %call1022
  %call1091 = call fastcc i32 @rol32(i32 noundef %xor1090, i32 noundef 1) #5
  %call1093 = call fastcc i32 @rol32(i32 noundef %add1078, i32 noundef 5) #5
  %and1095 = and i32 %call1079, %add1055
  %xor1096 = xor i32 %call1079, %add1055
  %and1097 = and i32 %xor1096, %call1056
  %add1094 = add i32 %call1033, -1894007588
  %add1098 = add i32 %add1094, %and1095
  %add1099 = add i32 %add1098, %call1091
  %add1100 = add i32 %add1099, %and1097
  %add1101 = add i32 %add1100, %call1093
  %call1102 = call fastcc i32 @ror32(i32 noundef %add1055) #5
  %xor1109 = xor i32 %call792, %call748
  %xor1111 = xor i32 %xor1109, %call930
  %xor1113 = xor i32 %xor1111, %call1045
  %call1114 = call fastcc i32 @rol32(i32 noundef %xor1113, i32 noundef 1) #5
  %call1116 = call fastcc i32 @rol32(i32 noundef %add1101, i32 noundef 5) #5
  %and1118 = and i32 %call1102, %add1078
  %xor1119 = xor i32 %call1102, %add1078
  %and1120 = and i32 %xor1119, %call1079
  %add1117 = add i32 %call1056, -1894007588
  %add1121 = add i32 %add1117, %and1118
  %add1122 = add i32 %add1121, %call1114
  %add1123 = add i32 %add1122, %and1120
  %add1124 = add i32 %add1123, %call1116
  %call1125 = call fastcc i32 @ror32(i32 noundef %add1078) #5
  %xor1132 = xor i32 %call815, %call769
  %xor1134 = xor i32 %xor1132, %call953
  %xor1136 = xor i32 %xor1134, %call1068
  %call1137 = call fastcc i32 @rol32(i32 noundef %xor1136, i32 noundef 1) #5
  %call1139 = call fastcc i32 @rol32(i32 noundef %add1124, i32 noundef 5) #5
  %and1141 = and i32 %call1125, %add1101
  %xor1142 = xor i32 %call1125, %add1101
  %and1143 = and i32 %xor1142, %call1102
  %add1140 = add i32 %call1079, -1894007588
  %add1144 = add i32 %add1140, %and1141
  %add1145 = add i32 %add1144, %call1137
  %add1146 = add i32 %add1145, %and1143
  %add1147 = add i32 %add1146, %call1139
  %call1148 = call fastcc i32 @ror32(i32 noundef %add1101) #5
  %xor1155 = xor i32 %call838, %call792
  %xor1157 = xor i32 %xor1155, %call976
  %xor1159 = xor i32 %xor1157, %call1091
  %call1160 = call fastcc i32 @rol32(i32 noundef %xor1159, i32 noundef 1) #5
  %call1162 = call fastcc i32 @rol32(i32 noundef %add1147, i32 noundef 5) #5
  %and1164 = and i32 %call1148, %add1124
  %xor1165 = xor i32 %call1148, %add1124
  %and1166 = and i32 %xor1165, %call1125
  %add1163 = add i32 %call1102, -1894007588
  %add1167 = add i32 %add1163, %and1164
  %add1168 = add i32 %add1167, %call1160
  %add1169 = add i32 %add1168, %and1166
  %add1170 = add i32 %add1169, %call1162
  %call1171 = call fastcc i32 @ror32(i32 noundef %add1124) #5
  %xor1178 = xor i32 %call861, %call815
  %xor1180 = xor i32 %xor1178, %call999
  %xor1182 = xor i32 %xor1180, %call1114
  %call1183 = call fastcc i32 @rol32(i32 noundef %xor1182, i32 noundef 1) #5
  %call1185 = call fastcc i32 @rol32(i32 noundef %add1170, i32 noundef 5) #5
  %and1187 = and i32 %call1171, %add1147
  %xor1188 = xor i32 %call1171, %add1147
  %and1189 = and i32 %xor1188, %call1148
  %add1186 = add i32 %call1125, -1894007588
  %add1190 = add i32 %add1186, %and1187
  %add1191 = add i32 %add1190, %call1183
  %add1192 = add i32 %add1191, %and1189
  %add1193 = add i32 %add1192, %call1185
  %call1194 = call fastcc i32 @ror32(i32 noundef %add1147) #5
  %xor1201 = xor i32 %call884, %call838
  %xor1203 = xor i32 %xor1201, %call1022
  %xor1205 = xor i32 %xor1203, %call1137
  %call1206 = call fastcc i32 @rol32(i32 noundef %xor1205, i32 noundef 1) #5
  %call1208 = call fastcc i32 @rol32(i32 noundef %add1193, i32 noundef 5) #5
  %and1210 = and i32 %call1194, %add1170
  %xor1211 = xor i32 %call1194, %add1170
  %and1212 = and i32 %xor1211, %call1171
  %add1209 = add i32 %call1148, -1894007588
  %add1213 = add i32 %add1209, %and1210
  %add1214 = add i32 %add1213, %call1206
  %add1215 = add i32 %add1214, %and1212
  %add1216 = add i32 %add1215, %call1208
  %call1217 = call fastcc i32 @ror32(i32 noundef %add1170) #5
  %xor1224 = xor i32 %call907, %call861
  %xor1226 = xor i32 %xor1224, %call1045
  %xor1228 = xor i32 %xor1226, %call1160
  %call1229 = call fastcc i32 @rol32(i32 noundef %xor1228, i32 noundef 1) #5
  %call1231 = call fastcc i32 @rol32(i32 noundef %add1216, i32 noundef 5) #5
  %xor1233 = xor i32 %add1193, %call1194
  %xor1234 = xor i32 %xor1233, %call1217
  %add1232 = add i32 %call1171, -899497514
  %add1235 = add i32 %add1232, %call1229
  %add1236 = add i32 %add1235, %xor1234
  %add1237 = add i32 %add1236, %call1231
  %call1238 = call fastcc i32 @ror32(i32 noundef %add1193) #5
  %xor1245 = xor i32 %call930, %call884
  %xor1247 = xor i32 %xor1245, %call1068
  %xor1249 = xor i32 %xor1247, %call1183
  %call1250 = call fastcc i32 @rol32(i32 noundef %xor1249, i32 noundef 1) #5
  %call1252 = call fastcc i32 @rol32(i32 noundef %add1237, i32 noundef 5) #5
  %xor1254 = xor i32 %add1216, %call1217
  %xor1255 = xor i32 %xor1254, %call1238
  %add1253 = add i32 %call1194, -899497514
  %add1256 = add i32 %add1253, %call1250
  %add1257 = add i32 %add1256, %xor1255
  %add1258 = add i32 %add1257, %call1252
  %call1259 = call fastcc i32 @ror32(i32 noundef %add1216) #5
  %xor1266 = xor i32 %call953, %call907
  %xor1268 = xor i32 %xor1266, %call1091
  %xor1270 = xor i32 %xor1268, %call1206
  %call1271 = call fastcc i32 @rol32(i32 noundef %xor1270, i32 noundef 1) #5
  %call1273 = call fastcc i32 @rol32(i32 noundef %add1258, i32 noundef 5) #5
  %xor1275 = xor i32 %add1237, %call1238
  %xor1276 = xor i32 %xor1275, %call1259
  %add1274 = add i32 %call1217, -899497514
  %add1277 = add i32 %add1274, %call1271
  %add1278 = add i32 %add1277, %xor1276
  %add1279 = add i32 %add1278, %call1273
  %call1280 = call fastcc i32 @ror32(i32 noundef %add1237) #5
  %xor1287 = xor i32 %call976, %call930
  %xor1289 = xor i32 %xor1287, %call1114
  %xor1291 = xor i32 %xor1289, %call1229
  %call1292 = call fastcc i32 @rol32(i32 noundef %xor1291, i32 noundef 1) #5
  %call1294 = call fastcc i32 @rol32(i32 noundef %add1279, i32 noundef 5) #5
  %xor1296 = xor i32 %add1258, %call1259
  %xor1297 = xor i32 %xor1296, %call1280
  %add1295 = add i32 %call1238, -899497514
  %add1298 = add i32 %add1295, %call1292
  %add1299 = add i32 %add1298, %xor1297
  %add1300 = add i32 %add1299, %call1294
  %call1301 = call fastcc i32 @ror32(i32 noundef %add1258) #5
  %xor1308 = xor i32 %call999, %call953
  %xor1310 = xor i32 %xor1308, %call1137
  %xor1312 = xor i32 %xor1310, %call1250
  %call1313 = call fastcc i32 @rol32(i32 noundef %xor1312, i32 noundef 1) #5
  store i32 %call1313, i32* %array, align 4
  %call1315 = call fastcc i32 @rol32(i32 noundef %add1300, i32 noundef 5) #5
  %xor1317 = xor i32 %add1279, %call1280
  %xor1318 = xor i32 %xor1317, %call1301
  %add1316 = add i32 %call1259, -899497514
  %add1319 = add i32 %add1316, %call1313
  %add1320 = add i32 %add1319, %xor1318
  %add1321 = add i32 %add1320, %call1315
  %call1322 = call fastcc i32 @ror32(i32 noundef %add1279) #5
  %xor1329 = xor i32 %call1022, %call976
  %xor1331 = xor i32 %xor1329, %call1160
  %xor1333 = xor i32 %xor1331, %call1271
  %call1334 = call fastcc i32 @rol32(i32 noundef %xor1333, i32 noundef 1) #5
  store i32 %call1334, i32* %arrayidx16, align 4
  %call1336 = call fastcc i32 @rol32(i32 noundef %add1321, i32 noundef 5) #5
  %xor1338 = xor i32 %add1300, %call1301
  %xor1339 = xor i32 %xor1338, %call1322
  %add1337 = add i32 %call1280, -899497514
  %add1340 = add i32 %add1337, %call1334
  %add1341 = add i32 %add1340, %xor1339
  %add1342 = add i32 %add1341, %call1336
  %call1343 = call fastcc i32 @ror32(i32 noundef %add1300) #5
  %xor1350 = xor i32 %call1045, %call999
  %xor1352 = xor i32 %xor1350, %call1183
  %xor1354 = xor i32 %xor1352, %call1292
  %call1355 = call fastcc i32 @rol32(i32 noundef %xor1354, i32 noundef 1) #5
  store i32 %call1355, i32* %arrayidx32, align 4
  %call1357 = call fastcc i32 @rol32(i32 noundef %add1342, i32 noundef 5) #5
  %xor1359 = xor i32 %add1321, %call1322
  %xor1360 = xor i32 %xor1359, %call1343
  %add1358 = add i32 %call1301, -899497514
  %add1361 = add i32 %add1358, %call1355
  %add1362 = add i32 %add1361, %xor1360
  %add1363 = add i32 %add1362, %call1357
  %call1364 = call fastcc i32 @ror32(i32 noundef %add1321) #5
  %xor1371 = xor i32 %call1068, %call1022
  %xor1373 = xor i32 %xor1371, %call1206
  %xor1375 = xor i32 %xor1373, %call1313
  %call1376 = call fastcc i32 @rol32(i32 noundef %xor1375, i32 noundef 1) #5
  store i32 %call1376, i32* %arrayidx48, align 4
  %call1378 = call fastcc i32 @rol32(i32 noundef %add1363, i32 noundef 5) #5
  %xor1380 = xor i32 %add1342, %call1343
  %xor1381 = xor i32 %xor1380, %call1364
  %add1379 = add i32 %call1322, -899497514
  %add1382 = add i32 %add1379, %call1376
  %add1383 = add i32 %add1382, %xor1381
  %add1384 = add i32 %add1383, %call1378
  %call1385 = call fastcc i32 @ror32(i32 noundef %add1342) #5
  %xor1392 = xor i32 %call1091, %call1045
  %xor1394 = xor i32 %xor1392, %call1229
  %xor1396 = xor i32 %xor1394, %call1334
  %call1397 = call fastcc i32 @rol32(i32 noundef %xor1396, i32 noundef 1) #5
  store i32 %call1397, i32* %arrayidx64, align 4
  %call1399 = call fastcc i32 @rol32(i32 noundef %add1384, i32 noundef 5) #5
  %xor1401 = xor i32 %add1363, %call1364
  %xor1402 = xor i32 %xor1401, %call1385
  %add1400 = add i32 %call1343, -899497514
  %add1403 = add i32 %add1400, %call1397
  %add1404 = add i32 %add1403, %xor1402
  %add1405 = add i32 %add1404, %call1399
  %call1406 = call fastcc i32 @ror32(i32 noundef %add1363) #5
  %xor1413 = xor i32 %call1114, %call1068
  %xor1415 = xor i32 %xor1413, %call1250
  %xor1417 = xor i32 %xor1415, %call1355
  %call1418 = call fastcc i32 @rol32(i32 noundef %xor1417, i32 noundef 1) #5
  store i32 %call1418, i32* %arrayidx80, align 4
  %call1420 = call fastcc i32 @rol32(i32 noundef %add1405, i32 noundef 5) #5
  %xor1422 = xor i32 %add1384, %call1385
  %xor1423 = xor i32 %xor1422, %call1406
  %add1421 = add i32 %call1364, -899497514
  %add1424 = add i32 %add1421, %call1418
  %add1425 = add i32 %add1424, %xor1423
  %add1426 = add i32 %add1425, %call1420
  %call1427 = call fastcc i32 @ror32(i32 noundef %add1384) #5
  %xor1434 = xor i32 %call1137, %call1091
  %xor1436 = xor i32 %xor1434, %call1271
  %xor1438 = xor i32 %xor1436, %call1376
  %call1439 = call fastcc i32 @rol32(i32 noundef %xor1438, i32 noundef 1) #5
  store i32 %call1439, i32* %arrayidx96, align 4
  %call1441 = call fastcc i32 @rol32(i32 noundef %add1426, i32 noundef 5) #5
  %xor1443 = xor i32 %add1405, %call1406
  %xor1444 = xor i32 %xor1443, %call1427
  %add1442 = add i32 %call1385, -899497514
  %add1445 = add i32 %add1442, %call1439
  %add1446 = add i32 %add1445, %xor1444
  %add1447 = add i32 %add1446, %call1441
  %call1448 = call fastcc i32 @ror32(i32 noundef %add1405) #5
  %xor1455 = xor i32 %call1160, %call1114
  %xor1457 = xor i32 %xor1455, %call1292
  %xor1459 = xor i32 %xor1457, %call1397
  %call1460 = call fastcc i32 @rol32(i32 noundef %xor1459, i32 noundef 1) #5
  store i32 %call1460, i32* %arrayidx112, align 4
  %call1462 = call fastcc i32 @rol32(i32 noundef %add1447, i32 noundef 5) #5
  %xor1464 = xor i32 %add1426, %call1427
  %xor1465 = xor i32 %xor1464, %call1448
  %add1463 = add i32 %call1406, -899497514
  %add1466 = add i32 %add1463, %call1460
  %add1467 = add i32 %add1466, %xor1465
  %add1468 = add i32 %add1467, %call1462
  %call1469 = call fastcc i32 @ror32(i32 noundef %add1426) #5
  %xor1476 = xor i32 %call1183, %call1137
  %xor1478 = xor i32 %xor1476, %call1313
  %xor1480 = xor i32 %xor1478, %call1418
  %call1481 = call fastcc i32 @rol32(i32 noundef %xor1480, i32 noundef 1) #5
  store i32 %call1481, i32* %arrayidx128, align 4
  %call1483 = call fastcc i32 @rol32(i32 noundef %add1468, i32 noundef 5) #5
  %xor1485 = xor i32 %add1447, %call1448
  %xor1486 = xor i32 %xor1485, %call1469
  %add1484 = add i32 %call1427, -899497514
  %add1487 = add i32 %add1484, %call1481
  %add1488 = add i32 %add1487, %xor1486
  %add1489 = add i32 %add1488, %call1483
  %call1490 = call fastcc i32 @ror32(i32 noundef %add1447) #5
  %xor1497 = xor i32 %call1206, %call1160
  %xor1499 = xor i32 %xor1497, %call1334
  %xor1501 = xor i32 %xor1499, %call1439
  %call1502 = call fastcc i32 @rol32(i32 noundef %xor1501, i32 noundef 1) #5
  store i32 %call1502, i32* %arrayidx144, align 4
  %call1504 = call fastcc i32 @rol32(i32 noundef %add1489, i32 noundef 5) #5
  %xor1506 = xor i32 %add1468, %call1469
  %xor1507 = xor i32 %xor1506, %call1490
  %add1505 = add i32 %call1448, -899497514
  %add1508 = add i32 %add1505, %call1502
  %add1509 = add i32 %add1508, %xor1507
  %add1510 = add i32 %add1509, %call1504
  %call1511 = call fastcc i32 @ror32(i32 noundef %add1468) #5
  %xor1518 = xor i32 %call1229, %call1183
  %xor1520 = xor i32 %xor1518, %call1355
  %xor1522 = xor i32 %xor1520, %call1460
  %call1523 = call fastcc i32 @rol32(i32 noundef %xor1522, i32 noundef 1) #5
  store i32 %call1523, i32* %arrayidx160, align 4
  %call1525 = call fastcc i32 @rol32(i32 noundef %add1510, i32 noundef 5) #5
  %xor1527 = xor i32 %add1489, %call1490
  %xor1528 = xor i32 %xor1527, %call1511
  %add1526 = add i32 %call1469, -899497514
  %add1529 = add i32 %add1526, %call1523
  %add1530 = add i32 %add1529, %xor1528
  %add1531 = add i32 %add1530, %call1525
  %call1532 = call fastcc i32 @ror32(i32 noundef %add1489) #5
  %xor1539 = xor i32 %call1250, %call1206
  %xor1541 = xor i32 %xor1539, %call1376
  %xor1543 = xor i32 %xor1541, %call1481
  %call1544 = call fastcc i32 @rol32(i32 noundef %xor1543, i32 noundef 1) #5
  store i32 %call1544, i32* %arrayidx176, align 4
  %call1546 = call fastcc i32 @rol32(i32 noundef %add1531, i32 noundef 5) #5
  %xor1548 = xor i32 %add1510, %call1511
  %xor1549 = xor i32 %xor1548, %call1532
  %add1547 = add i32 %call1490, -899497514
  %add1550 = add i32 %add1547, %call1544
  %add1551 = add i32 %add1550, %xor1549
  %add1552 = add i32 %add1551, %call1546
  %call1553 = call fastcc i32 @ror32(i32 noundef %add1510) #5
  %xor1560 = xor i32 %call1271, %call1229
  %xor1562 = xor i32 %xor1560, %call1397
  %xor1564 = xor i32 %xor1562, %call1502
  %call1565 = call fastcc i32 @rol32(i32 noundef %xor1564, i32 noundef 1) #5
  store i32 %call1565, i32* %arrayidx192, align 4
  %call1567 = call fastcc i32 @rol32(i32 noundef %add1552, i32 noundef 5) #5
  %xor1569 = xor i32 %add1531, %call1532
  %xor1570 = xor i32 %xor1569, %call1553
  %add1568 = add i32 %call1511, -899497514
  %add1571 = add i32 %add1568, %call1565
  %add1572 = add i32 %add1571, %xor1570
  %add1573 = add i32 %add1572, %call1567
  %call1574 = call fastcc i32 @ror32(i32 noundef %add1531) #5
  %xor1581 = xor i32 %call1292, %call1250
  %xor1583 = xor i32 %xor1581, %call1418
  %xor1585 = xor i32 %xor1583, %call1523
  %call1586 = call fastcc i32 @rol32(i32 noundef %xor1585, i32 noundef 1) #5
  store i32 %call1586, i32* %arrayidx208, align 4
  %call1588 = call fastcc i32 @rol32(i32 noundef %add1573, i32 noundef 5) #5
  %xor1590 = xor i32 %add1552, %call1553
  %xor1591 = xor i32 %xor1590, %call1574
  %add1589 = add i32 %call1532, -899497514
  %add1592 = add i32 %add1589, %call1586
  %add1593 = add i32 %add1592, %xor1591
  %add1594 = add i32 %add1593, %call1588
  %call1595 = call fastcc i32 @ror32(i32 noundef %add1552) #5
  %xor1602 = xor i32 %call1313, %call1271
  %xor1604 = xor i32 %xor1602, %call1439
  %xor1606 = xor i32 %xor1604, %call1544
  %call1607 = call fastcc i32 @rol32(i32 noundef %xor1606, i32 noundef 1) #5
  store i32 %call1607, i32* %arrayidx224, align 4
  %call1609 = call fastcc i32 @rol32(i32 noundef %add1594, i32 noundef 5) #5
  %xor1611 = xor i32 %add1573, %call1574
  %xor1612 = xor i32 %xor1611, %call1595
  %add1610 = add i32 %call1553, -899497514
  %add1613 = add i32 %add1610, %call1607
  %add1614 = add i32 %add1613, %xor1612
  %add1615 = add i32 %add1614, %call1609
  %call1616 = call fastcc i32 @ror32(i32 noundef %add1573) #5
  %xor1623 = xor i32 %call1334, %call1292
  %xor1625 = xor i32 %xor1623, %call1460
  %xor1627 = xor i32 %xor1625, %call1565
  %call1628 = call fastcc i32 @rol32(i32 noundef %xor1627, i32 noundef 1) #5
  store i32 %call1628, i32* %arrayidx240, align 4
  %call1630 = call fastcc i32 @rol32(i32 noundef %add1615, i32 noundef 5) #5
  %xor1632 = xor i32 %add1594, %call1595
  %xor1633 = xor i32 %xor1632, %call1616
  %call1637 = call fastcc i32 @ror32(i32 noundef %add1594) #5
  %5 = load i32, i32* %digest, align 4
  %add1631 = add i32 %call1574, -899497514
  %add1634 = add i32 %add1631, %call1628
  %add1635 = add i32 %add1634, %xor1633
  %add1636 = add i32 %add1635, %call1630
  %add1641 = add i32 %add1636, %5
  store i32 %add1641, i32* %digest, align 4
  %6 = load i32, i32* %arrayidx1, align 4
  %add1643 = add i32 %6, %add1615
  store i32 %add1643, i32* %arrayidx1, align 4
  %7 = load i32, i32* %arrayidx2, align 4
  %add1645 = add i32 %7, %call1637
  store i32 %add1645, i32* %arrayidx2, align 4
  %8 = load i32, i32* %arrayidx3, align 4
  %add1647 = add i32 %8, %call1616
  store i32 %add1647, i32* %arrayidx3, align 4
  %9 = load i32, i32* %arrayidx4, align 4
  %add1649 = add i32 %9, %call1595
  store i32 %add1649, i32* %arrayidx4, align 4
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind null_pointer_is_valid readonly willreturn
define internal fastcc i32 @get_unaligned_be32(i8* nocapture noundef readonly %p) unnamed_addr #1 {
entry:
  %x = bitcast i8* %p to i32*
  %0 = load i32, i32* %x, align 1
  %call = call fastcc i32 @__fswab32(i32 noundef %0) #6
  ret i32 %call
}

; Function Attrs: mustprogress nofree noinline nosync nounwind null_pointer_is_valid readnone willreturn
define internal fastcc i32 @rol32(i32 noundef %word, i32 noundef %shift) unnamed_addr #2 {
entry:
  %or = call i32 @llvm.fshl.i32(i32 %word, i32 %word, i32 %shift)
  ret i32 %or
}

; Function Attrs: mustprogress nofree noinline nosync nounwind null_pointer_is_valid readnone willreturn
define internal fastcc i32 @ror32(i32 noundef %word) unnamed_addr #2 {
entry:
  %or = call i32 @llvm.fshl.i32(i32 %word, i32 %word, i32 30)
  ret i32 %or
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid willreturn writeonly
define dso_local void @sha1_init(i32* nocapture noundef writeonly %buf) local_unnamed_addr #3 {
entry:
  store i32 1732584193, i32* %buf, align 4
  %arrayidx1 = getelementptr i32, i32* %buf, i64 1
  store i32 -271733879, i32* %arrayidx1, align 4
  %arrayidx2 = getelementptr i32, i32* %buf, i64 2
  store i32 -1732584194, i32* %arrayidx2, align 4
  %arrayidx3 = getelementptr i32, i32* %buf, i64 3
  store i32 271733878, i32* %arrayidx3, align 4
  %arrayidx4 = getelementptr i32, i32* %buf, i64 4
  store i32 -1009589776, i32* %arrayidx4, align 4
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind null_pointer_is_valid readnone willreturn
define internal fastcc i32 @__fswab32(i32 noundef %val) unnamed_addr #2 {
entry:
  %or7 = call i32 @llvm.bswap.i32(i32 %val)
  ret i32 %or7
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #4

attributes #0 = { mustprogress nofree noinline nosync nounwind null_pointer_is_valid willreturn "disable-tail-calls"="true" "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+v8a,-aes,-crypto,-fp-armv8,-neon,-sha2" "warn-stack-size"="2048" }
attributes #1 = { mustprogress nofree noinline nosync nounwind null_pointer_is_valid readonly willreturn "disable-tail-calls"="true" "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+v8a,-aes,-crypto,-fp-armv8,-neon,-sha2" "warn-stack-size"="2048" }
attributes #2 = { mustprogress nofree noinline nosync nounwind null_pointer_is_valid readnone willreturn "disable-tail-calls"="true" "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+v8a,-aes,-crypto,-fp-armv8,-neon,-sha2" "warn-stack-size"="2048" }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid willreturn writeonly "disable-tail-calls"="true" "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+v8a,-aes,-crypto,-fp-armv8,-neon,-sha2" "warn-stack-size"="2048" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { nobuiltin "no-builtins" }
attributes #6 = { nobuiltin nounwind readnone willreturn "no-builtins" }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5}
!llvm.ident = !{!6}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 1, !"branch-target-enforcement", i32 0}
!2 = !{i32 1, !"sign-return-address", i32 0}
!3 = !{i32 1, !"sign-return-address-all", i32 0}
!4 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!5 = !{i32 7, !"frame-pointer", i32 1}
!6 = !{!"clang version 14.0.0"}
